Index: app.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const express = require('express')\r\nconst bodyParser = require('body-parser')\r\nconst { connectDb } = require('./db/connectDb')\r\n// parse application/json\r\nrequire('dotenv').config()\r\nconst cors = require('cors')\r\n\r\n//AuthRouter\r\nconst authRouter = require('./routes/authRoute')\r\nconst userRouter = require('./routes/usersRoute')\r\nconst roomsRouter = require('./routes/roomsRoute')\r\nconst reservationRouter = require('./routes/reservationsRoute')\r\n// Do something with the headers\r\n// const cookieParser = require('cookie-parser')\r\nconst app = express()\r\napp.use(bodyParser.json())\r\n\r\napp.use(express.json())\r\n\r\napp.use(cors())\r\n\r\n// app.use(cookieParser(process.env.JWT_SECRET))\r\napp.use(express.static('./public'))\r\n// app.use(fileUpload({ useTempFiles: true }))\r\n\r\napp.use('/api/v1/auth', authRouter)\r\napp.use('/api/v1/users', userRouter)\r\napp.use('/api/v1/rooms', roomsRouter)\r\napp.use('/api/v1/reservations', reservationRouter)\r\n//   Add Port\r\n/* This code is setting up the server to listen on a specific port. */\r\nconst port = process.env.PORT || 5000 // if  the Port  is  undefined, use port 5000\r\n\r\nconst start = async () => {\r\n  try {\r\n    connectDb()\r\n    // const db = await dbConnection(process.env.MONGO_URI)\r\n  } catch (error) {\r\n    console.log('connection Failed Error!', error)\r\n  }\r\n  app.listen(port, () => {\r\n    console.log(`listening on  port ${port}`)\r\n  })\r\n}\r\nstart()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app.js b/app.js
--- a/app.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/app.js	(date 1754070909294)
@@ -1,6 +1,6 @@
 const express = require('express')
 const bodyParser = require('body-parser')
-const { connectDb } = require('./db/connectDb')
+const { connectDb, getConnection} = require('./db/connectDb')
 // parse application/json
 require('dotenv').config()
 const cors = require('cors')
@@ -14,6 +14,7 @@
 // const cookieParser = require('cookie-parser')
 const app = express()
 app.use(bodyParser.json())
+app.use(express.urlencoded({ extended: true }))
 
 app.use(express.json())
 
@@ -33,13 +34,13 @@
 
 const start = async () => {
   try {
-    connectDb()
+    await getConnection()
     // const db = await dbConnection(process.env.MONGO_URI)
   } catch (error) {
     console.log('connection Failed Error!', error)
   }
   app.listen(port, () => {
-    console.log(`listening on  port ${port}`)
+    console.log(`listening on  portsss ${port}`)
   })
 }
 start()
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>.env\r\n./package-lock.json\r\n./node_modules\r\n./node_modules\r\n.vscode\r\n./.env\r\n./package-lock.json\r\nnode_modules\r\n\r\n./node_modules
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
--- a/.gitignore	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/.gitignore	(date 1754360283612)
@@ -6,5 +6,17 @@
 ./.env
 ./package-lock.json
 node_modules
+.gitignore
+.env
+./package-lock.json
+.trunk
+.vscode
+DbAdmin.session.sql
+package-lock.json
+package.json
+.env
+./.env
+./package-lock.json
 
-./node_modules
\ No newline at end of file
+/node_modules
+.idea
Index: db/connectDb.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const postgres = require('postgres')\r\nrequire('dotenv').config()\r\n\r\nconst { Connection } = require('postgresql-client')\r\nconst { Pool } = require('postgresql-client')\r\n\r\n// const sqlPool = new Pool({\r\n//   host: 'localhost', // Postgres ip address[s] or domain name[s]\r\n//   port: 5432, // Postgres server port[s]\r\n//   database: 'hotel', // Name of database to connect to\r\n//   username: 'frankessien', // Username of database user\r\n//   password: 'franktest' // Password of database user\r\n// })\r\n\r\n// const sql = postgres(sqlPool)\r\n\r\nconst sql = postgres(process.env.POSTGRES_DATABASE_URI)\r\nconst dbPool = new Pool({\r\n  host: process.env.POSTGRES_DATABASE_URI,\r\n  pool: {\r\n    min: 1,\r\n    max: 10,\r\n    idleTimeoutMillis: 5000\r\n  }\r\n})\r\n\r\nconst connectDb = async () => {\r\n  try {\r\n    console.log('Connected to database')\r\n  } catch (error) {\r\n    console.error(error)\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  // sqlPool,\r\n  // sqlQuery,\r\n  sql,\r\n  connectDb,\r\n  dbPool\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/db/connectDb.js b/db/connectDb.js
--- a/db/connectDb.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/db/connectDb.js	(date 1754360283606)
@@ -1,41 +1,49 @@
 const postgres = require('postgres')
 require('dotenv').config()
 
+
+
 const { Connection } = require('postgresql-client')
-const { Pool } = require('postgresql-client')
+
+const { Pool } = require('pg')
 
-// const sqlPool = new Pool({
-//   host: 'localhost', // Postgres ip address[s] or domain name[s]
-//   port: 5432, // Postgres server port[s]
-//   database: 'hotel', // Name of database to connect to
-//   username: 'frankessien', // Username of database user
-//   password: 'franktest' // Password of database user
-// })
+
+const sqlPool = new Pool({
+  user: process.env.USER,
+  host: process.env.HOST,
+  database: process.env.DATABASE,
+  password: process.env.PASSWORD,
+  port: process.env.PORT,
+});
+
+
+
 
 // const sql = postgres(sqlPool)
 
-const sql = postgres(process.env.POSTGRES_DATABASE_URI)
-const dbPool = new Pool({
-  host: process.env.POSTGRES_DATABASE_URI,
-  pool: {
-    min: 1,
-    max: 10,
-    idleTimeoutMillis: 5000
-  }
-})
+// const sql = postgres(process.env.POSTGRES_DATABASE_URI)
+// const dbPool = new Pool({
+//   host: process.env.POSTGRES_DATABASE_URI,
+//   pool: {
+//     min: 1,
+//     max: 10,
+//     idleTimeoutMillis: 5000
+//   }
+// })
 
-const connectDb = async () => {
+const  getConnection = async () => {
   try {
-    console.log('Connected to database')
+    console.log('Before connection')
+    return await sqlPool.connect()
+
+    // console.log('Connected to database', getConnection.statusCode)
   } catch (error) {
+    console.log('connection Error')
     console.error(error)
   }
 }
-
 module.exports = {
-  // sqlPool,
+  sqlPool,
   // sqlQuery,
-  sql,
-  connectDb,
-  dbPool
+  getConnection
 }
Index: controllers/authController.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const { response } = require('express')\r\nconst createUserTable = require('../models/User')\r\nconst createRoomsTable = require('../models/Rooms')\r\nconst { StatusCodes } = require('http-status-codes')\r\nconst { dbPool, sql } = require('../db/connectDb')\r\nvar bcrypt = require('bcryptjs')\r\n\r\n// const register = async (req, resp) => {\r\n//   const { email, password, name } = req.body\r\n\r\n// console.log(email, password)\r\n// if (!email || !password) {\r\n//   return\r\n// }\r\n//TODO:  HASH password  for  Register,\r\nconst register = async (req, resp) => {\r\n  // let hashedPassword\r\n  // await createUserTable();\r\n  // await createRoomsTable()\r\n  const { email, password, name } = req.body\r\n\r\n  console.log('user Data', email, password, name)\r\n  const emailData = await sql` SELECT * FROM  users WHERE  email =${email}`\r\n  console.log(emailData.length)\r\n  if (emailData.length > 0) {\r\n    console.log(emailData, 'from Data')\r\n    return resp.status(StatusCodes.BAD_REQUEST).json(`Email Already  Exist`)\r\n  }\r\n  if (!email || !password) {\r\n    return resp\r\n      .status(StatusCodes.BAD_REQUEST)\r\n      .json(`Enter Email and Password!`)\r\n  }\r\n  if (password.length <= 5) {\r\n    console.log(password.length)\r\n    return resp\r\n      .status(StatusCodes.BAD_REQUEST)\r\n      .json(`password length must be at least 6 characters`)\r\n  } else {\r\n    //hash  password and  store  in Database\r\n    bcrypt.genSalt(10, async function (err, salt) {\r\n      const hashedPassword = bcrypt.hashSync(password, salt)\r\n      // console.log('hashed Password', hashedPassword)\r\n\r\n      try {\r\n        const users = await sql`\r\n      INSERT INTO users (name, email, password)\r\n      VALUES (${name}, ${email}, ${hashedPassword})\r\n      RETURNING name, email, password\r\n      `\r\n\r\n        console.log('from users Data', users)\r\n\r\n        return resp\r\n          .status(StatusCodes.OK)\r\n          .json(`User added with ID: ${users.columns[1]}`)\r\n      } catch (error) {\r\n        console.error(error)\r\n        return resp\r\n          .status(StatusCodes.BAD_REQUEST)\r\n          .json({ error: error.message })\r\n      }\r\n    })\r\n  }\r\n}\r\n//TODO: VERIFY Password  for  login with  email and  password\r\nconst login = async (req, resp) => {\r\n  const { email, password } = req.body\r\n  console.log(email, password)\r\n  if (!email || !password) {\r\n    resp\r\n      .status(StatusCodes.BAD_REQUEST)\r\n      .json({ message: 'please enter email and  password' })\r\n  }\r\n\r\n  const user = await sql` SELECT * FROM  users  WHERE  email = ${email}`\r\n\r\n  if (user.length < 1) {\r\n    return resp\r\n      .status(StatusCodes.BAD_REQUEST)\r\n      .json({ Error: 'user not found!' })\r\n  } else {\r\n    user.forEach(async data => {\r\n      const passwordHashed = await data.password\r\n\r\n      const isMatched = await comparePassword(password, passwordHashed)\r\n\r\n      if (isMatched === false) {\r\n        return resp\r\n          .status(StatusCodes.BAD_REQUEST)\r\n          .json({ message: 'password not matched' })\r\n      } else {\r\n        return resp.status(StatusCodes.OK).json({ Success: 'login success!' })\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nconst comparePassword = async (password, hashedPassword) => {\r\n  let isMatched\r\n  await bcrypt.compare(password, hashedPassword).then(res => {\r\n    if (res === false) {\r\n      return (isMatched = false)\r\n    }\r\n    return (isMatched = true)\r\n  })\r\n  return isMatched\r\n}\r\n\r\nmodule.exports = {\r\n  register,\r\n  login,\r\n  comparePassword\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/controllers/authController.js b/controllers/authController.js
--- a/controllers/authController.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/controllers/authController.js	(date 1754130764263)
@@ -1,9 +1,11 @@
 const { response } = require('express')
-const createUserTable = require('../models/User')
+const users = require('../models/User')
 const createRoomsTable = require('../models/Rooms')
 const { StatusCodes } = require('http-status-codes')
 const { dbPool, sql } = require('../db/connectDb')
 var bcrypt = require('bcryptjs')
+const  {sqlPool} = require('../db/connectDb')
+const Auth = require ('../queries/Auth')
 
 // const register = async (req, resp) => {
 //   const { email, password, name } = req.body
@@ -17,96 +19,103 @@
   // let hashedPassword
   // await createUserTable();
   // await createRoomsTable()
-  const { email, password, name } = req.body
+  const {email, password, name} = req.body
 
-  console.log('user Data', email, password, name)
-  const emailData = await sql` SELECT * FROM  users WHERE  email =${email}`
-  console.log(emailData.length)
-  if (emailData.length > 0) {
-    console.log(emailData, 'from Data')
-    return resp.status(StatusCodes.BAD_REQUEST).json(`Email Already  Exist`)
-  }
-  if (!email || !password) {
-    return resp
-      .status(StatusCodes.BAD_REQUEST)
-      .json(`Enter Email and Password!`)
-  }
-  if (password.length <= 5) {
-    console.log(password.length)
-    return resp
-      .status(StatusCodes.BAD_REQUEST)
-      .json(`password length must be at least 6 characters`)
-  } else {
-    //hash  password and  store  in Database
-    bcrypt.genSalt(10, async function (err, salt) {
-      const hashedPassword = bcrypt.hashSync(password, salt)
-      // console.log('hashed Password', hashedPassword)
+  try {
+
+          const emailData = await Auth.isEmailExist(email)
+
+    if (emailData.data.length > 0) {
+
+      return resp.status(StatusCodes.BAD_REQUEST).json( {error: emailData.error, message: 'email already exist!' })
+    }
+    if(!emailData.length >0 ) {
+
+      if (!email || !password) {
+                return resp
+            .status(StatusCodes.BAD_REQUEST)
+            .json(`Enter Email and Password!`)
+      }
+      if (password.length <= 5) {
+        console.log(password.length)
+        return resp
+            .status(StatusCodes.BAD_REQUEST)
+            .json(`password length must be at least 6 characters`)
+      }
+      const hashedPassword = await bcrypt.hash(password, 10);
+      const newUser = await Auth.createUser(name,email, hashedPassword)
 
-      try {
-        const users = await sql`
-      INSERT INTO users (name, email, password)
-      VALUES (${name}, ${email}, ${hashedPassword})
-      RETURNING name, email, password
-      `
+      if(newUser.error) {
+        return resp.status(StatusCodes.BAD_REQUEST).json(`${newUser.data, newUser.message, newUser.error}` )
+      }
+      if(newUser.data) {
+        console.log(newUser.data)
+        return  resp.status(StatusCodes.CREATED).json({message:'success', data: newUser.data})
 
-        console.log('from users Data', users)
+      }
 
-        return resp
-          .status(StatusCodes.OK)
-          .json(`User added with ID: ${users.columns[1]}`)
-      } catch (error) {
-        console.error(error)
-        return resp
-          .status(StatusCodes.BAD_REQUEST)
-          .json({ error: error.message })
-      }
-    })
+      return resp
+            .status(StatusCodes.OK)
+            .json(`User added with ID: ${newUser.data, newUser.error, newUser.message}`)
+
+    }
+
+
+
+  }catch (e) {
+    console.log('an error occurredaa',e)
+      return resp.status(StatusCodes.BAD_REQUEST)
+        .json({error:e.message, error:'error'})
   }
+
+
 }
+
 //TODO: VERIFY Password  for  login with  email and  password
-const login = async (req, resp) => {
-  const { email, password } = req.body
-  console.log(email, password)
-  if (!email || !password) {
-    resp
-      .status(StatusCodes.BAD_REQUEST)
-      .json({ message: 'please enter email and  password' })
-  }
+  const login = async (req, resp) => {
+    const {email, password} = req.body
+    console.log(email, password)
+    if (!email || !password) {
+      resp
+          .status(StatusCodes.BAD_REQUEST)
+          .json({message: 'please enter email and  password'})
+    }
 
-  const user = await sql` SELECT * FROM  users  WHERE  email = ${email}`
+    const user = await sqlPool.query(` SELECT * FROM  users  WHERE  email = ${email}`)
 
-  if (user.length < 1) {
-    return resp
-      .status(StatusCodes.BAD_REQUEST)
-      .json({ Error: 'user not found!' })
-  } else {
-    user.forEach(async data => {
-      const passwordHashed = await data.password
+    if (user.length < 1) {
+      return resp
+          .status(StatusCodes.BAD_REQUEST)
+          .json({Error: 'user not found!'})
+    } else {
+      user.forEach(async data => {
+        const passwordHashed = await data.password
 
-      const isMatched = await comparePassword(password, passwordHashed)
+        const isMatched = await comparePassword(password, passwordHashed)
 
-      if (isMatched === false) {
-        return resp
-          .status(StatusCodes.BAD_REQUEST)
-          .json({ message: 'password not matched' })
-      } else {
-        return resp.status(StatusCodes.OK).json({ Success: 'login success!' })
-      }
-    })
-  }
-}
+        if (isMatched === false) {
+          return resp
+              .status(StatusCodes.BAD_REQUEST)
+              .json({message: 'password not matched'})
+        } else {
+          return resp.status(StatusCodes.OK).json({Success: 'login success!'})
+        }
+      })
+    }
+  }
 
-const comparePassword = async (password, hashedPassword) => {
-  let isMatched
-  await bcrypt.compare(password, hashedPassword).then(res => {
-    if (res === false) {
-      return (isMatched = false)
-    }
-    return (isMatched = true)
-  })
-  return isMatched
-}
+  const comparePassword = async (password, hashedPassword) => {
+    let isMatched
+    await bcrypt.compare(password, hashedPassword).then(res => {
+      if (res === false) {
+        return (isMatched = false)
+      }
+      return (isMatched = true)
+    })
+    return isMatched
+  }
 
+
 module.exports = {
   register,
   login,
Index: node_modules/qs/.editorconfig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>root = true\r\n\r\n[*]\r\nindent_style = space\r\nindent_size = 4\r\nend_of_line = lf\r\ncharset = utf-8\r\ntrim_trailing_whitespace = true\r\ninsert_final_newline = true\r\nmax_line_length = 160\r\nquote_type = single\r\n\r\n[test/*]\r\nmax_line_length = off\r\n\r\n[LICENSE.md]\r\nindent_size = off\r\n\r\n[*.md]\r\nmax_line_length = off\r\n\r\n[*.json]\r\nmax_line_length = off\r\n\r\n[Makefile]\r\nmax_line_length = off\r\n\r\n[CHANGELOG.md]\r\nindent_style = space\r\nindent_size = 2\r\n\r\n[LICENSE]\r\nindent_size = 2\r\nmax_line_length = off\r\n\r\n[coverage/**/*]\r\nindent_size = off\r\nindent_style = off\r\nindent = off\r\nmax_line_length = off\r\n\r\n[.nycrc]\r\nindent_style = tab\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/qs/.editorconfig b/node_modules/qs/.editorconfig
--- a/node_modules/qs/.editorconfig	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/qs/.editorconfig	(date 1753913035154)
@@ -41,3 +41,6 @@
 
 [.nycrc]
 indent_style = tab
+
+[tea.yaml]
+indent_size = 2
Index: node_modules/call-bind/.eslintignore
===================================================================
diff --git a/node_modules/call-bind/.eslintignore b/node_modules/call-bind/.eslintignore
deleted file mode 100644
--- a/node_modules/call-bind/.eslintignore	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,1 +0,0 @@
-coverage/
Index: node_modules/call-bind/.eslintrc
===================================================================
diff --git a/node_modules/call-bind/.eslintrc b/node_modules/call-bind/.eslintrc
deleted file mode 100644
--- a/node_modules/call-bind/.eslintrc	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,16 +0,0 @@
-{
-	"root": true,
-
-	"extends": "@ljharb",
-
-	"rules": {
-		"func-name-matching": 0,
-		"id-length": 0,
-		"new-cap": [2, {
-			"capIsNewExceptions": [
-				"GetIntrinsic",
-			],
-		}],
-		"no-magic-numbers": 0,
-	},
-}
Index: node_modules/define-data-property/.eslintrc
===================================================================
diff --git a/node_modules/define-data-property/.eslintrc b/node_modules/define-data-property/.eslintrc
deleted file mode 100644
--- a/node_modules/define-data-property/.eslintrc	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,24 +0,0 @@
-{
-	"root": true,
-
-	"extends": "@ljharb",
-
-	"rules": {
-		"complexity": 0,
-		"id-length": 0,
-		"new-cap": ["error", {
-			"capIsNewExceptions": [
-				"GetIntrinsic",
-			],
-		}],
-	},
-
-	"overrides": [
-		{
-			"files": "test/**",
-			"rules": {
-				"max-lines-per-function": "off",
-			},
-		},
-	],
-}
Index: node_modules/has-property-descriptors/.eslintrc
===================================================================
diff --git a/node_modules/has-property-descriptors/.eslintrc b/node_modules/has-property-descriptors/.eslintrc
deleted file mode 100644
--- a/node_modules/has-property-descriptors/.eslintrc	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,13 +0,0 @@
-{
-	"root": true,
-
-	"extends": "@ljharb",
-
-	"rules": {
-		"func-name-matching": 0,
-		"id-length": 0,
-		"new-cap": [2, {
-			"capIsNewExceptions": ["GetIntrinsic"],
-		}],
-	},
-}
Index: node_modules/has-proto/.eslintrc
===================================================================
diff --git a/node_modules/has-proto/.eslintrc b/node_modules/has-proto/.eslintrc
deleted file mode 100644
--- a/node_modules/has-proto/.eslintrc	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,5 +0,0 @@
-{
-	"root": true,
-
-	"extends": "@ljharb",
-}
Index: node_modules/set-function-length/.eslintrc
===================================================================
diff --git a/node_modules/set-function-length/.eslintrc b/node_modules/set-function-length/.eslintrc
deleted file mode 100644
--- a/node_modules/set-function-length/.eslintrc	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,27 +0,0 @@
-{
-	"root": true,
-
-	"extends": "@ljharb",
-
-	"rules": {
-		"id-length": "off",
-		"new-cap": ["error", {
-			"capIsNewExceptions": [
-				"GetIntrinsic"
-			],
-		}],
-		"no-extra-parens": "off",
-	},
-
-	"overrides": [
-		{
-			"files": ["test/**/*.js"],
-			"rules": {
-				"id-length": "off",
-				"max-lines-per-function": "off",
-				"multiline-comment-style": "off",
-				"no-empty-function": "off",
-			},
-		},
-	],
-}
Index: node_modules/abbrev/abbrev.js
===================================================================
diff --git a/node_modules/abbrev/abbrev.js b/node_modules/abbrev/abbrev.js
deleted file mode 100644
--- a/node_modules/abbrev/abbrev.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,61 +0,0 @@
-module.exports = exports = abbrev.abbrev = abbrev
-
-abbrev.monkeyPatch = monkeyPatch
-
-function monkeyPatch () {
-  Object.defineProperty(Array.prototype, 'abbrev', {
-    value: function () { return abbrev(this) },
-    enumerable: false, configurable: true, writable: true
-  })
-
-  Object.defineProperty(Object.prototype, 'abbrev', {
-    value: function () { return abbrev(Object.keys(this)) },
-    enumerable: false, configurable: true, writable: true
-  })
-}
-
-function abbrev (list) {
-  if (arguments.length !== 1 || !Array.isArray(list)) {
-    list = Array.prototype.slice.call(arguments, 0)
-  }
-  for (var i = 0, l = list.length, args = [] ; i < l ; i ++) {
-    args[i] = typeof list[i] === "string" ? list[i] : String(list[i])
-  }
-
-  // sort them lexicographically, so that they're next to their nearest kin
-  args = args.sort(lexSort)
-
-  // walk through each, seeing how much it has in common with the next and previous
-  var abbrevs = {}
-    , prev = ""
-  for (var i = 0, l = args.length ; i < l ; i ++) {
-    var current = args[i]
-      , next = args[i + 1] || ""
-      , nextMatches = true
-      , prevMatches = true
-    if (current === next) continue
-    for (var j = 0, cl = current.length ; j < cl ; j ++) {
-      var curChar = current.charAt(j)
-      nextMatches = nextMatches && curChar === next.charAt(j)
-      prevMatches = prevMatches && curChar === prev.charAt(j)
-      if (!nextMatches && !prevMatches) {
-        j ++
-        break
-      }
-    }
-    prev = current
-    if (j === cl) {
-      abbrevs[current] = current
-      continue
-    }
-    for (var a = current.substr(0, j) ; j <= cl ; j ++) {
-      abbrevs[a] = current
-      a += current.charAt(j)
-    }
-  }
-  return abbrevs
-}
-
-function lexSort (a, b) {
-  return a === b ? 0 : a > b ? 1 : -1
-}
Index: node_modules/lightning-pool/esm/abort-error.d.ts
===================================================================
diff --git a/node_modules/lightning-pool/esm/abort-error.d.ts b/node_modules/lightning-pool/esm/abort-error.d.ts
deleted file mode 100644
--- a/node_modules/lightning-pool/esm/abort-error.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,2 +0,0 @@
-export declare class AbortError extends Error {
-}
Index: node_modules/power-tasks/typings/abort-error.d.ts
===================================================================
diff --git a/node_modules/power-tasks/typings/abort-error.d.ts b/node_modules/power-tasks/typings/abort-error.d.ts
deleted file mode 100644
--- a/node_modules/power-tasks/typings/abort-error.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-export declare class AbortError extends Error {
-    code: string;
-}
Index: node_modules/postgresql-client/typings/util/array-calculatedim.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/util/array-calculatedim.d.ts b/node_modules/postgresql-client/typings/util/array-calculatedim.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/util/array-calculatedim.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,1 +0,0 @@
-export declare function arrayCalculateDim(arr: any[]): number[];
Index: node_modules/postgresql-client/cjs/util/array-calculatedim.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/util/array-calculatedim.js b/node_modules/postgresql-client/cjs/util/array-calculatedim.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/util/array-calculatedim.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,19 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.arrayCalculateDim = void 0;
-function arrayCalculateDim(arr) {
-    if (!arr || arr.length === 0)
-        return [0];
-    const dim = [arr.length];
-    const iterate = (a, level) => {
-        for (let i = 0; i < a.length; i++) {
-            if (Array.isArray(a[i])) {
-                dim[level] = Math.max(dim[level] || 0, a[i].length);
-                iterate(a[i], level + 1);
-            }
-        }
-    };
-    iterate(arr, 1);
-    return dim;
-}
-exports.arrayCalculateDim = arrayCalculateDim;
Index: node_modules/postgresql-client/esm/util/array-calculatedim.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/util/array-calculatedim.js b/node_modules/postgresql-client/esm/util/array-calculatedim.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/util/array-calculatedim.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,15 +0,0 @@
-export function arrayCalculateDim(arr) {
-    if (!arr || arr.length === 0)
-        return [0];
-    const dim = [arr.length];
-    const iterate = (a, level) => {
-        for (let i = 0; i < a.length; i++) {
-            if (Array.isArray(a[i])) {
-                dim[level] = Math.max(dim[level] || 0, a[i].length);
-                iterate(a[i], level + 1);
-            }
-        }
-    };
-    iterate(arr, 1);
-    return dim;
-}
Index: node_modules/strict-typed-events/typings/async-event-emitter.d.ts
===================================================================
diff --git a/node_modules/strict-typed-events/typings/async-event-emitter.d.ts b/node_modules/strict-typed-events/typings/async-event-emitter.d.ts
deleted file mode 100644
--- a/node_modules/strict-typed-events/typings/async-event-emitter.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,6 +0,0 @@
-/// <reference types="node" />
-import { EventEmitter } from 'events';
-export declare class AsyncEventEmitter extends EventEmitter {
-    emitAsync(event: string | symbol, ...args: any[]): Promise<boolean>;
-    emitAsyncSerial(event: string | symbol, ...args: any[]): Promise<boolean>;
-}
Index: node_modules/postgresql-client/typings/protocol/backend.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/protocol/backend.d.ts b/node_modules/postgresql-client/typings/protocol/backend.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/protocol/backend.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,9 +0,0 @@
-/// <reference types="node" />
-import { Protocol } from './protocol.js';
-declare type ParseCallback = (code: Protocol.BackendMessageCode, data?: any) => void;
-export declare class Backend {
-    private _buf?;
-    reset(): void;
-    parse(data: Buffer, callback: ParseCallback): void;
-}
-export {};
Index: node_modules/postgresql-client/cjs/protocol/backend.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/protocol/backend.js b/node_modules/postgresql-client/cjs/protocol/backend.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/protocol/backend.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,256 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.Backend = void 0;
-const buffer_reader_js_1 = require("./buffer-reader.js");
-const protocol_js_1 = require("./protocol.js");
-// 1 byte message type, 4 byte frame length
-const HEADER_LENGTH = 5;
-const ErrorFieldTypes = {
-    M: 'message',
-    S: 'severity',
-    V: 'severity',
-    C: 'code',
-    D: 'detail',
-    H: 'hint',
-    P: 'position',
-    p: 'internalPosition',
-    q: 'internalQuery',
-    W: 'where',
-    s: 'schema',
-    t: 'table',
-    c: 'column',
-    d: 'dataType',
-    n: 'constraint',
-    F: 'file',
-    L: 'line',
-    R: 'routine',
-};
-class Backend {
-    reset() {
-        this._buf = undefined;
-    }
-    parse(data, callback) {
-        if (this._buf) {
-            data = Buffer.concat([this._buf, data]);
-            this._buf = undefined;
-        }
-        const io = new buffer_reader_js_1.BufferReader(data);
-        let offsetBookmark;
-        while (io.length - io.offset >= HEADER_LENGTH) {
-            offsetBookmark = io.offset;
-            const code = io.readUInt8();
-            const len = io.readUInt32BE();
-            // Check if frame data not received yet
-            if (io.length - io.offset < len - 4) {
-                io.offset = offsetBookmark;
-                this._buf = io.readBuffer();
-                return;
-            }
-            const parser = MessageParsers[code];
-            const v = parser && parser(io, code, len);
-            callback(code, v);
-            // Set offset to next message
-            io.offset = offsetBookmark + len + 1;
-        }
-        if (io.offset < io.length)
-            this._buf = io.readBuffer(io.length - io.offset);
-    }
-}
-exports.Backend = Backend;
-const MessageParsers = {
-    [protocol_js_1.Protocol.BackendMessageCode.Authentication]: parseAuthentication,
-    [protocol_js_1.Protocol.BackendMessageCode.BackendKeyData]: parseBackendKeyData,
-    [protocol_js_1.Protocol.BackendMessageCode.CommandComplete]: parseCommandComplete,
-    [protocol_js_1.Protocol.BackendMessageCode.CopyData]: parseCopyData,
-    [protocol_js_1.Protocol.BackendMessageCode.CopyInResponse]: parseCopyResponse,
-    [protocol_js_1.Protocol.BackendMessageCode.CopyOutResponse]: parseCopyResponse,
-    [protocol_js_1.Protocol.BackendMessageCode.CopyBothResponse]: parseCopyResponse,
-    [protocol_js_1.Protocol.BackendMessageCode.DataRow]: parseDataRow,
-    [protocol_js_1.Protocol.BackendMessageCode.ErrorResponse]: parseErrorResponse,
-    [protocol_js_1.Protocol.BackendMessageCode.NoticeResponse]: parseErrorResponse,
-    [protocol_js_1.Protocol.BackendMessageCode.NotificationResponse]: parseNotificationResponse,
-    [protocol_js_1.Protocol.BackendMessageCode.FunctionCallResponse]: parseFunctionCallResponse,
-    [protocol_js_1.Protocol.BackendMessageCode.NegotiateProtocolVersion]: parseNegotiateProtocolVersion,
-    [protocol_js_1.Protocol.BackendMessageCode.ParameterDescription]: parseParameterDescription,
-    [protocol_js_1.Protocol.BackendMessageCode.ParameterStatus]: parseParameterStatus,
-    [protocol_js_1.Protocol.BackendMessageCode.ReadyForQuery]: parseReadyForQuery,
-    [protocol_js_1.Protocol.BackendMessageCode.RowDescription]: parseRowDescription,
-};
-function parseAuthentication(io, code, len) {
-    const kind = io.readUInt32BE();
-    switch (kind) {
-        case 0:
-            return; // AuthenticationOk
-        case 2:
-            return {
-                kind: 'KerberosV5',
-            };
-        case 3:
-            return {
-                kind: 'CleartextPassword',
-            };
-        case 5:
-            return {
-                kind: 'MD5Password',
-                salt: io.readBuffer(len - 8),
-            };
-        case 6:
-            return {
-                kind: 'SCMCredential',
-            };
-        case 7:
-            return {
-                kind: 'GSS',
-            };
-        case 9:
-            return {
-                kind: 'SSPI',
-            };
-        case 8:
-            return {
-                kind: 'GSSContinue',
-                data: io.readBuffer(len - 8),
-            };
-        case 10: {
-            const out = {
-                kind: 'SASL',
-                mechanisms: [],
-            };
-            let mechanism;
-            while ((mechanism = io.readCString())) {
-                out.mechanisms.push(mechanism);
-            }
-            return out;
-        }
-        case 11:
-            return {
-                kind: 'SASLContinue',
-                data: io.readLString(len - 8, 'utf8'),
-            };
-        case 12:
-            return {
-                kind: 'SASLFinal',
-                data: io.readLString(len - 8, 'utf8'),
-            };
-        default:
-            throw new Error(`Unknown authentication kind (${kind})`);
-    }
-}
-function parseBackendKeyData(io) {
-    return {
-        processID: io.readUInt32BE(),
-        secretKey: io.readUInt32BE(),
-    };
-}
-function parseCommandComplete(io) {
-    return {
-        command: io.readCString('utf8'),
-    };
-}
-function parseCopyData(io, code, len) {
-    return {
-        data: io.readBuffer(len - 4),
-    };
-}
-function parseCopyResponse(io) {
-    const out = {
-        overallFormat: io.readUInt8() === 0 ? protocol_js_1.Protocol.DataFormat.text : protocol_js_1.Protocol.DataFormat.binary,
-        columnCount: io.readUInt16BE(),
-    };
-    if (out.columnCount) {
-        out.columnFormats = [];
-        for (let i = 0; i < out.columnCount; i++) {
-            out.columnFormats.push(io.readUInt16BE() === 0 ? protocol_js_1.Protocol.DataFormat.text : protocol_js_1.Protocol.DataFormat.binary);
-        }
-    }
-    return out;
-}
-function parseDataRow(io) {
-    const out = {
-        columnCount: io.readUInt16BE(),
-    };
-    if (out.columnCount) {
-        out.columns = [];
-        for (let i = 0; i < out.columnCount; i++) {
-            // The length of the column value, in bytes (this count does not include itself).
-            // Can be zero. As a special case, -1 indicates a NULL column value.
-            // No value bytes follow in the NULL case.
-            const l = io.readInt32BE();
-            if (l < 0)
-                out.columns.push(null);
-            else
-                out.columns.push(io.readBuffer(l));
-        }
-    }
-    return out;
-}
-function parseErrorResponse(io) {
-    const out = {};
-    let fieldType;
-    while ((fieldType = io.readLString(1)) !== '\0') {
-        const value = io.readCString('utf8');
-        const key = ErrorFieldTypes[fieldType];
-        if (key)
-            out[key] = value;
-    }
-    return out;
-}
-function parseNotificationResponse(io) {
-    return {
-        processId: io.readUInt32BE(),
-        channel: io.readCString(),
-        payload: io.readCString(),
-    };
-}
-function parseFunctionCallResponse(io, code, len) {
-    return {
-        result: io.readBuffer(len - 4),
-    };
-}
-function parseNegotiateProtocolVersion(io) {
-    return {
-        supportedVersionMinor: io.readUInt32BE(),
-        numberOfNotSupportedVersions: io.readUInt32BE(),
-        option: io.readCString('utf8'),
-    };
-}
-function parseParameterDescription(io) {
-    const out = {
-        parameterCount: io.readUInt32BE(),
-        parameterIds: [],
-    };
-    for (let i = 0; i < out.parameterCount; i++) {
-        out.parameterIds.push(io.readUInt32BE());
-    }
-    return out;
-}
-function parseParameterStatus(io) {
-    return {
-        name: io.readCString('utf8'),
-        value: io.readCString('utf8'),
-    };
-}
-function parseReadyForQuery(io) {
-    return {
-        status: io.readLString(1),
-    };
-}
-function parseRowDescription(io) {
-    const fieldCount = io.readUInt16BE();
-    const out = {
-        fields: [],
-    };
-    for (let i = 0; i < fieldCount; i++) {
-        const field = {
-            fieldName: io.readCString('utf8'),
-            tableId: io.readInt32BE(),
-            columnId: io.readInt16BE(),
-            dataTypeId: io.readInt32BE(),
-            fixedSize: io.readInt16BE(),
-            modifier: io.readInt32BE(),
-            format: io.readInt16BE() === 0 ? protocol_js_1.Protocol.DataFormat.text : protocol_js_1.Protocol.DataFormat.binary,
-        };
-        out.fields.push(field);
-    }
-    return out;
-}
Index: node_modules/postgresql-client/esm/protocol/backend.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/protocol/backend.js b/node_modules/postgresql-client/esm/protocol/backend.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/protocol/backend.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,252 +0,0 @@
-import { BufferReader } from './buffer-reader.js';
-import { Protocol } from './protocol.js';
-// 1 byte message type, 4 byte frame length
-const HEADER_LENGTH = 5;
-const ErrorFieldTypes = {
-    M: 'message',
-    S: 'severity',
-    V: 'severity',
-    C: 'code',
-    D: 'detail',
-    H: 'hint',
-    P: 'position',
-    p: 'internalPosition',
-    q: 'internalQuery',
-    W: 'where',
-    s: 'schema',
-    t: 'table',
-    c: 'column',
-    d: 'dataType',
-    n: 'constraint',
-    F: 'file',
-    L: 'line',
-    R: 'routine',
-};
-export class Backend {
-    reset() {
-        this._buf = undefined;
-    }
-    parse(data, callback) {
-        if (this._buf) {
-            data = Buffer.concat([this._buf, data]);
-            this._buf = undefined;
-        }
-        const io = new BufferReader(data);
-        let offsetBookmark;
-        while (io.length - io.offset >= HEADER_LENGTH) {
-            offsetBookmark = io.offset;
-            const code = io.readUInt8();
-            const len = io.readUInt32BE();
-            // Check if frame data not received yet
-            if (io.length - io.offset < len - 4) {
-                io.offset = offsetBookmark;
-                this._buf = io.readBuffer();
-                return;
-            }
-            const parser = MessageParsers[code];
-            const v = parser && parser(io, code, len);
-            callback(code, v);
-            // Set offset to next message
-            io.offset = offsetBookmark + len + 1;
-        }
-        if (io.offset < io.length)
-            this._buf = io.readBuffer(io.length - io.offset);
-    }
-}
-const MessageParsers = {
-    [Protocol.BackendMessageCode.Authentication]: parseAuthentication,
-    [Protocol.BackendMessageCode.BackendKeyData]: parseBackendKeyData,
-    [Protocol.BackendMessageCode.CommandComplete]: parseCommandComplete,
-    [Protocol.BackendMessageCode.CopyData]: parseCopyData,
-    [Protocol.BackendMessageCode.CopyInResponse]: parseCopyResponse,
-    [Protocol.BackendMessageCode.CopyOutResponse]: parseCopyResponse,
-    [Protocol.BackendMessageCode.CopyBothResponse]: parseCopyResponse,
-    [Protocol.BackendMessageCode.DataRow]: parseDataRow,
-    [Protocol.BackendMessageCode.ErrorResponse]: parseErrorResponse,
-    [Protocol.BackendMessageCode.NoticeResponse]: parseErrorResponse,
-    [Protocol.BackendMessageCode.NotificationResponse]: parseNotificationResponse,
-    [Protocol.BackendMessageCode.FunctionCallResponse]: parseFunctionCallResponse,
-    [Protocol.BackendMessageCode.NegotiateProtocolVersion]: parseNegotiateProtocolVersion,
-    [Protocol.BackendMessageCode.ParameterDescription]: parseParameterDescription,
-    [Protocol.BackendMessageCode.ParameterStatus]: parseParameterStatus,
-    [Protocol.BackendMessageCode.ReadyForQuery]: parseReadyForQuery,
-    [Protocol.BackendMessageCode.RowDescription]: parseRowDescription,
-};
-function parseAuthentication(io, code, len) {
-    const kind = io.readUInt32BE();
-    switch (kind) {
-        case 0:
-            return; // AuthenticationOk
-        case 2:
-            return {
-                kind: 'KerberosV5',
-            };
-        case 3:
-            return {
-                kind: 'CleartextPassword',
-            };
-        case 5:
-            return {
-                kind: 'MD5Password',
-                salt: io.readBuffer(len - 8),
-            };
-        case 6:
-            return {
-                kind: 'SCMCredential',
-            };
-        case 7:
-            return {
-                kind: 'GSS',
-            };
-        case 9:
-            return {
-                kind: 'SSPI',
-            };
-        case 8:
-            return {
-                kind: 'GSSContinue',
-                data: io.readBuffer(len - 8),
-            };
-        case 10: {
-            const out = {
-                kind: 'SASL',
-                mechanisms: [],
-            };
-            let mechanism;
-            while ((mechanism = io.readCString())) {
-                out.mechanisms.push(mechanism);
-            }
-            return out;
-        }
-        case 11:
-            return {
-                kind: 'SASLContinue',
-                data: io.readLString(len - 8, 'utf8'),
-            };
-        case 12:
-            return {
-                kind: 'SASLFinal',
-                data: io.readLString(len - 8, 'utf8'),
-            };
-        default:
-            throw new Error(`Unknown authentication kind (${kind})`);
-    }
-}
-function parseBackendKeyData(io) {
-    return {
-        processID: io.readUInt32BE(),
-        secretKey: io.readUInt32BE(),
-    };
-}
-function parseCommandComplete(io) {
-    return {
-        command: io.readCString('utf8'),
-    };
-}
-function parseCopyData(io, code, len) {
-    return {
-        data: io.readBuffer(len - 4),
-    };
-}
-function parseCopyResponse(io) {
-    const out = {
-        overallFormat: io.readUInt8() === 0 ? Protocol.DataFormat.text : Protocol.DataFormat.binary,
-        columnCount: io.readUInt16BE(),
-    };
-    if (out.columnCount) {
-        out.columnFormats = [];
-        for (let i = 0; i < out.columnCount; i++) {
-            out.columnFormats.push(io.readUInt16BE() === 0 ? Protocol.DataFormat.text : Protocol.DataFormat.binary);
-        }
-    }
-    return out;
-}
-function parseDataRow(io) {
-    const out = {
-        columnCount: io.readUInt16BE(),
-    };
-    if (out.columnCount) {
-        out.columns = [];
-        for (let i = 0; i < out.columnCount; i++) {
-            // The length of the column value, in bytes (this count does not include itself).
-            // Can be zero. As a special case, -1 indicates a NULL column value.
-            // No value bytes follow in the NULL case.
-            const l = io.readInt32BE();
-            if (l < 0)
-                out.columns.push(null);
-            else
-                out.columns.push(io.readBuffer(l));
-        }
-    }
-    return out;
-}
-function parseErrorResponse(io) {
-    const out = {};
-    let fieldType;
-    while ((fieldType = io.readLString(1)) !== '\0') {
-        const value = io.readCString('utf8');
-        const key = ErrorFieldTypes[fieldType];
-        if (key)
-            out[key] = value;
-    }
-    return out;
-}
-function parseNotificationResponse(io) {
-    return {
-        processId: io.readUInt32BE(),
-        channel: io.readCString(),
-        payload: io.readCString(),
-    };
-}
-function parseFunctionCallResponse(io, code, len) {
-    return {
-        result: io.readBuffer(len - 4),
-    };
-}
-function parseNegotiateProtocolVersion(io) {
-    return {
-        supportedVersionMinor: io.readUInt32BE(),
-        numberOfNotSupportedVersions: io.readUInt32BE(),
-        option: io.readCString('utf8'),
-    };
-}
-function parseParameterDescription(io) {
-    const out = {
-        parameterCount: io.readUInt32BE(),
-        parameterIds: [],
-    };
-    for (let i = 0; i < out.parameterCount; i++) {
-        out.parameterIds.push(io.readUInt32BE());
-    }
-    return out;
-}
-function parseParameterStatus(io) {
-    return {
-        name: io.readCString('utf8'),
-        value: io.readCString('utf8'),
-    };
-}
-function parseReadyForQuery(io) {
-    return {
-        status: io.readLString(1),
-    };
-}
-function parseRowDescription(io) {
-    const fieldCount = io.readUInt16BE();
-    const out = {
-        fields: [],
-    };
-    for (let i = 0; i < fieldCount; i++) {
-        const field = {
-            fieldName: io.readCString('utf8'),
-            tableId: io.readInt32BE(),
-            columnId: io.readInt16BE(),
-            dataTypeId: io.readInt32BE(),
-            fixedSize: io.readInt16BE(),
-            modifier: io.readInt32BE(),
-            format: io.readInt16BE() === 0 ? Protocol.DataFormat.text : Protocol.DataFormat.binary,
-        };
-        out.fields.push(field);
-    }
-    return out;
-}
Index: node_modules/postgresql-client/typings/util/bigint-methods.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/util/bigint-methods.d.ts b/node_modules/postgresql-client/typings/util/bigint-methods.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/util/bigint-methods.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-/// <reference types="node" />
-export declare function readBigInt64BE(buf: Buffer, offset?: number): bigint;
-export declare function writeBigUInt64BE(buf: Buffer, value: BigInt, offset?: number): number;
Index: node_modules/postgresql-client/cjs/util/bigint-methods.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/util/bigint-methods.js b/node_modules/postgresql-client/cjs/util/bigint-methods.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/util/bigint-methods.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,42 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.writeBigUInt64BE = exports.readBigInt64BE = void 0;
-/* eslint-disable no-bitwise */
-const big0 = BigInt(0);
-const beAnd = BigInt('0xffffffff');
-const big32 = BigInt(32);
-// https://github.com/nodejs/node/blob/v13.9.0/lib/internal/buffer.js
-function readBigInt64BE(buf, offset = 0) {
-    const first = buf[offset];
-    const last = buf[offset + 7];
-    if (first === undefined || last === undefined)
-        return big0;
-    const val = (first << 24) + // Overflow
-        buf[++offset] * 2 ** 16 +
-        buf[++offset] * 2 ** 8 +
-        buf[++offset];
-    return ((BigInt(val) << big32) + BigInt(buf[++offset] * 2 ** 24 + buf[++offset] * 2 ** 16 + buf[++offset] * 2 ** 8 + last));
-}
-exports.readBigInt64BE = readBigInt64BE;
-function writeBigUInt64BE(buf, value, offset = 0) {
-    // @ts-ignore
-    let lo = Number(value & beAnd);
-    buf[offset + 7] = lo;
-    lo = lo >> 8;
-    buf[offset + 6] = lo;
-    lo = lo >> 8;
-    buf[offset + 5] = lo;
-    lo = lo >> 8;
-    buf[offset + 4] = lo;
-    // @ts-ignore
-    let hi = Number((value >> big32) & beAnd);
-    buf[offset + 3] = hi;
-    hi = hi >> 8;
-    buf[offset + 2] = hi;
-    hi = hi >> 8;
-    buf[offset + 1] = hi;
-    hi = hi >> 8;
-    buf[offset] = hi;
-    return offset + 8;
-}
-exports.writeBigUInt64BE = writeBigUInt64BE;
Index: node_modules/postgresql-client/esm/util/bigint-methods.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/util/bigint-methods.js b/node_modules/postgresql-client/esm/util/bigint-methods.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/util/bigint-methods.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,37 +0,0 @@
-/* eslint-disable no-bitwise */
-const big0 = BigInt(0);
-const beAnd = BigInt('0xffffffff');
-const big32 = BigInt(32);
-// https://github.com/nodejs/node/blob/v13.9.0/lib/internal/buffer.js
-export function readBigInt64BE(buf, offset = 0) {
-    const first = buf[offset];
-    const last = buf[offset + 7];
-    if (first === undefined || last === undefined)
-        return big0;
-    const val = (first << 24) + // Overflow
-        buf[++offset] * 2 ** 16 +
-        buf[++offset] * 2 ** 8 +
-        buf[++offset];
-    return ((BigInt(val) << big32) + BigInt(buf[++offset] * 2 ** 24 + buf[++offset] * 2 ** 16 + buf[++offset] * 2 ** 8 + last));
-}
-export function writeBigUInt64BE(buf, value, offset = 0) {
-    // @ts-ignore
-    let lo = Number(value & beAnd);
-    buf[offset + 7] = lo;
-    lo = lo >> 8;
-    buf[offset + 6] = lo;
-    lo = lo >> 8;
-    buf[offset + 5] = lo;
-    lo = lo >> 8;
-    buf[offset + 4] = lo;
-    // @ts-ignore
-    let hi = Number((value >> big32) & beAnd);
-    buf[offset + 3] = hi;
-    hi = hi >> 8;
-    buf[offset + 2] = hi;
-    hi = hi >> 8;
-    buf[offset + 1] = hi;
-    hi = hi >> 8;
-    buf[offset] = hi;
-    return offset + 8;
-}
Index: node_modules/postgresql-client/typings/connection/bind-param.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/connection/bind-param.d.ts b/node_modules/postgresql-client/typings/connection/bind-param.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/connection/bind-param.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,6 +0,0 @@
-import { OID } from '../types.js';
-export declare class BindParam {
-    oid: OID;
-    value: any;
-    constructor(oid: OID, value: any);
-}
Index: node_modules/postgresql-client/cjs/connection/bind-param.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/connection/bind-param.js b/node_modules/postgresql-client/cjs/connection/bind-param.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/connection/bind-param.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,10 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.BindParam = void 0;
-class BindParam {
-    constructor(oid, value) {
-        this.oid = oid;
-        this.value = value;
-    }
-}
-exports.BindParam = BindParam;
Index: node_modules/postgresql-client/esm/connection/bind-param.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/connection/bind-param.js b/node_modules/postgresql-client/esm/connection/bind-param.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/connection/bind-param.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,6 +0,0 @@
-export class BindParam {
-    constructor(oid, value) {
-        this.oid = oid;
-        this.value = value;
-    }
-}
Index: node_modules/postgresql-client/typings/data-types/bool-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/bool-type.d.ts b/node_modules/postgresql-client/typings/data-types/bool-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/bool-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import { DataType } from '../interfaces/data-type.js';
-export declare const BoolType: DataType;
-export declare const ArrayBoolType: DataType;
Index: node_modules/postgresql-client/cjs/data-types/bool-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/bool-type.js b/node_modules/postgresql-client/cjs/data-types/bool-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/bool-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,27 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayBoolType = exports.BoolType = void 0;
-const constants_js_1 = require("../constants.js");
-exports.BoolType = {
-    name: 'bool',
-    oid: constants_js_1.DataTypeOIDs.bool,
-    jsType: 'boolean',
-    parseBinary(v) {
-        return !!v.readUInt8();
-    },
-    encodeBinary(buf, v) {
-        buf.writeInt8(v ? 1 : 0);
-    },
-    parseText(v) {
-        return v === 'TRUE' || v === 't' || v === 'true' || v === 'y' || v === 'yes' || v === 'on' || v === '1';
-    },
-    isType(v) {
-        return typeof v === 'boolean';
-    },
-};
-exports.ArrayBoolType = {
-    ...exports.BoolType,
-    name: '_bool',
-    oid: constants_js_1.DataTypeOIDs._bool,
-    elementsOID: constants_js_1.DataTypeOIDs.bool,
-};
Index: node_modules/postgresql-client/esm/data-types/bool-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/bool-type.js b/node_modules/postgresql-client/esm/data-types/bool-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/bool-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,24 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-export const BoolType = {
-    name: 'bool',
-    oid: DataTypeOIDs.bool,
-    jsType: 'boolean',
-    parseBinary(v) {
-        return !!v.readUInt8();
-    },
-    encodeBinary(buf, v) {
-        buf.writeInt8(v ? 1 : 0);
-    },
-    parseText(v) {
-        return v === 'TRUE' || v === 't' || v === 'true' || v === 'y' || v === 'yes' || v === 'on' || v === '1';
-    },
-    isType(v) {
-        return typeof v === 'boolean';
-    },
-};
-export const ArrayBoolType = {
-    ...BoolType,
-    name: '_bool',
-    oid: DataTypeOIDs._bool,
-    elementsOID: DataTypeOIDs.bool,
-};
Index: node_modules/postgresql-client/typings/data-types/box-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/box-type.d.ts b/node_modules/postgresql-client/typings/data-types/box-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/box-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const BoxType: DataType;
-export declare const ArrayBoxType: DataType;
Index: node_modules/postgresql-client/cjs/data-types/box-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/box-type.js b/node_modules/postgresql-client/cjs/data-types/box-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/box-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,52 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayBoxType = exports.BoxType = void 0;
-const constants_js_1 = require("../constants.js");
-const BOX_PATTERN1 = /^\( *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *, *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *\)$/;
-const BOX_PATTERN2 = /^\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *, *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\)$/;
-const BOX_PATTERN3 = /^(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *, *(-?\d+\.?\d*)$/;
-exports.BoxType = {
-    name: 'box',
-    oid: constants_js_1.DataTypeOIDs.box,
-    jsType: 'object',
-    arraySeparator: ';',
-    parseBinary(v) {
-        return {
-            x1: v.readDoubleBE(0),
-            y1: v.readDoubleBE(8),
-            x2: v.readDoubleBE(16),
-            y2: v.readDoubleBE(24),
-        };
-    },
-    encodeBinary(buf, v) {
-        buf.writeDoubleBE(v.x1);
-        buf.writeDoubleBE(v.y1);
-        buf.writeDoubleBE(v.x2);
-        buf.writeDoubleBE(v.y2);
-    },
-    parseText(v) {
-        const m = v.match(BOX_PATTERN1) || v.match(BOX_PATTERN2) || v.match(BOX_PATTERN3);
-        if (!m)
-            return undefined;
-        return {
-            x1: parseFloat(m[1]),
-            y1: parseFloat(m[2]),
-            x2: parseFloat(m[3]),
-            y2: parseFloat(m[4]),
-        };
-    },
-    isType(v) {
-        return (typeof v === 'object' &&
-            Object.keys(v).length === 4 &&
-            typeof v.x1 === 'number' &&
-            typeof v.y1 === 'number' &&
-            typeof v.x2 === 'number' &&
-            typeof v.y2 === 'number');
-    },
-};
-exports.ArrayBoxType = {
-    ...exports.BoxType,
-    name: '_box',
-    oid: constants_js_1.DataTypeOIDs._box,
-    elementsOID: constants_js_1.DataTypeOIDs.box,
-};
Index: node_modules/postgresql-client/esm/data-types/box-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/box-type.js b/node_modules/postgresql-client/esm/data-types/box-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/box-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,49 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-const BOX_PATTERN1 = /^\( *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *, *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *\)$/;
-const BOX_PATTERN2 = /^\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *, *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\)$/;
-const BOX_PATTERN3 = /^(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *, *(-?\d+\.?\d*)$/;
-export const BoxType = {
-    name: 'box',
-    oid: DataTypeOIDs.box,
-    jsType: 'object',
-    arraySeparator: ';',
-    parseBinary(v) {
-        return {
-            x1: v.readDoubleBE(0),
-            y1: v.readDoubleBE(8),
-            x2: v.readDoubleBE(16),
-            y2: v.readDoubleBE(24),
-        };
-    },
-    encodeBinary(buf, v) {
-        buf.writeDoubleBE(v.x1);
-        buf.writeDoubleBE(v.y1);
-        buf.writeDoubleBE(v.x2);
-        buf.writeDoubleBE(v.y2);
-    },
-    parseText(v) {
-        const m = v.match(BOX_PATTERN1) || v.match(BOX_PATTERN2) || v.match(BOX_PATTERN3);
-        if (!m)
-            return undefined;
-        return {
-            x1: parseFloat(m[1]),
-            y1: parseFloat(m[2]),
-            x2: parseFloat(m[3]),
-            y2: parseFloat(m[4]),
-        };
-    },
-    isType(v) {
-        return (typeof v === 'object' &&
-            Object.keys(v).length === 4 &&
-            typeof v.x1 === 'number' &&
-            typeof v.y1 === 'number' &&
-            typeof v.x2 === 'number' &&
-            typeof v.y2 === 'number');
-    },
-};
-export const ArrayBoxType = {
-    ...BoxType,
-    name: '_box',
-    oid: DataTypeOIDs._box,
-    elementsOID: DataTypeOIDs.box,
-};
Index: node_modules/pg-pool/test/bring-your-own-promise.js
===================================================================
diff --git a/node_modules/pg-pool/test/bring-your-own-promise.js b/node_modules/pg-pool/test/bring-your-own-promise.js
deleted file mode 100644
--- a/node_modules/pg-pool/test/bring-your-own-promise.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,42 +0,0 @@
-'use strict'
-const co = require('co')
-const expect = require('expect.js')
-
-const describe = require('mocha').describe
-const it = require('mocha').it
-const BluebirdPromise = require('bluebird')
-
-const Pool = require('../')
-
-const checkType = (promise) => {
-  expect(promise).to.be.a(BluebirdPromise)
-  return promise.catch((e) => undefined)
-}
-
-describe('Bring your own promise', function () {
-  it(
-    'uses supplied promise for operations',
-    co.wrap(function* () {
-      const pool = new Pool({ Promise: BluebirdPromise })
-      const client1 = yield checkType(pool.connect())
-      client1.release()
-      yield checkType(pool.query('SELECT NOW()'))
-      const client2 = yield checkType(pool.connect())
-      // TODO - make sure pg supports BYOP as well
-      client2.release()
-      yield checkType(pool.end())
-    })
-  )
-
-  it(
-    'uses promises in errors',
-    co.wrap(function* () {
-      const pool = new Pool({ Promise: BluebirdPromise, port: 48484 })
-      yield checkType(pool.connect())
-      yield checkType(pool.end())
-      yield checkType(pool.connect())
-      yield checkType(pool.query())
-      yield checkType(pool.end())
-    })
-  )
-})
Index: node_modules/postgresql-client/typings/protocol/buffer-reader.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/protocol/buffer-reader.d.ts b/node_modules/postgresql-client/typings/protocol/buffer-reader.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/protocol/buffer-reader.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,18 +0,0 @@
-/// <reference types="node" />
-export declare class BufferReader {
-    buffer: Buffer;
-    offset: number;
-    constructor(buffer: Buffer);
-    get length(): number;
-    readUInt8(): number;
-    readUInt16BE(): number;
-    readInt16BE(): number;
-    readUInt32BE(): number;
-    readInt32BE(): number;
-    readCString(encoding?: BufferEncoding): string;
-    readLString(len: number, encoding?: BufferEncoding): string | null;
-    readBuffer(len?: number): Buffer;
-    moveBy(n: number): this;
-    moveTo(pos: number): this;
-    private _checkReadable;
-}
Index: node_modules/postgresql-client/cjs/protocol/buffer-reader.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/protocol/buffer-reader.js b/node_modules/postgresql-client/cjs/protocol/buffer-reader.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/protocol/buffer-reader.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,78 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.BufferReader = void 0;
-class BufferReader {
-    constructor(buffer) {
-        this.offset = 0;
-        this.buffer = buffer;
-    }
-    get length() {
-        return this.buffer.length;
-    }
-    readUInt8() {
-        this._checkReadable(1);
-        const v = this.buffer.readUInt8(this.offset);
-        this.offset++;
-        return v;
-    }
-    readUInt16BE() {
-        this._checkReadable(2);
-        const v = this.buffer.readUInt16BE(this.offset);
-        this.offset += 2;
-        return v;
-    }
-    readInt16BE() {
-        this._checkReadable(2);
-        const v = this.buffer.readInt16BE(this.offset);
-        this.offset += 2;
-        return v;
-    }
-    readUInt32BE() {
-        this._checkReadable(4);
-        const v = this.buffer.readUInt32BE(this.offset);
-        this.offset += 4;
-        return v;
-    }
-    readInt32BE() {
-        this._checkReadable(4);
-        const v = this.buffer.readInt32BE(this.offset);
-        this.offset += 4;
-        return v;
-    }
-    readCString(encoding) {
-        const idx = this.buffer.indexOf(0, this.offset);
-        const v = this.buffer.toString(encoding, this.offset, idx);
-        this.offset = idx + 1;
-        return v;
-    }
-    readLString(len, encoding) {
-        if (len < 0)
-            return null;
-        this._checkReadable(len);
-        const v = this.buffer.toString(encoding, this.offset, this.offset + len);
-        this.offset += len;
-        return v;
-    }
-    readBuffer(len) {
-        if (len)
-            this._checkReadable(len);
-        const end = len !== undefined ? this.offset + len : this.length;
-        const buf = this.buffer.slice(this.offset, end);
-        this.offset = end;
-        return buf;
-    }
-    moveBy(n) {
-        return this.moveTo(this.offset + n);
-    }
-    moveTo(pos) {
-        if (pos >= this.length)
-            throw new Error('Eof in buffer detected');
-        this.offset = pos;
-        return this;
-    }
-    _checkReadable(size) {
-        if (this.offset + size - 1 >= this.length)
-            throw new Error('Eof in buffer detected');
-    }
-}
-exports.BufferReader = BufferReader;
Index: node_modules/postgresql-client/esm/protocol/buffer-reader.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/protocol/buffer-reader.js b/node_modules/postgresql-client/esm/protocol/buffer-reader.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/protocol/buffer-reader.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,74 +0,0 @@
-export class BufferReader {
-    constructor(buffer) {
-        this.offset = 0;
-        this.buffer = buffer;
-    }
-    get length() {
-        return this.buffer.length;
-    }
-    readUInt8() {
-        this._checkReadable(1);
-        const v = this.buffer.readUInt8(this.offset);
-        this.offset++;
-        return v;
-    }
-    readUInt16BE() {
-        this._checkReadable(2);
-        const v = this.buffer.readUInt16BE(this.offset);
-        this.offset += 2;
-        return v;
-    }
-    readInt16BE() {
-        this._checkReadable(2);
-        const v = this.buffer.readInt16BE(this.offset);
-        this.offset += 2;
-        return v;
-    }
-    readUInt32BE() {
-        this._checkReadable(4);
-        const v = this.buffer.readUInt32BE(this.offset);
-        this.offset += 4;
-        return v;
-    }
-    readInt32BE() {
-        this._checkReadable(4);
-        const v = this.buffer.readInt32BE(this.offset);
-        this.offset += 4;
-        return v;
-    }
-    readCString(encoding) {
-        const idx = this.buffer.indexOf(0, this.offset);
-        const v = this.buffer.toString(encoding, this.offset, idx);
-        this.offset = idx + 1;
-        return v;
-    }
-    readLString(len, encoding) {
-        if (len < 0)
-            return null;
-        this._checkReadable(len);
-        const v = this.buffer.toString(encoding, this.offset, this.offset + len);
-        this.offset += len;
-        return v;
-    }
-    readBuffer(len) {
-        if (len)
-            this._checkReadable(len);
-        const end = len !== undefined ? this.offset + len : this.length;
-        const buf = this.buffer.slice(this.offset, end);
-        this.offset = end;
-        return buf;
-    }
-    moveBy(n) {
-        return this.moveTo(this.offset + n);
-    }
-    moveTo(pos) {
-        if (pos >= this.length)
-            throw new Error('Eof in buffer detected');
-        this.offset = pos;
-        return this;
-    }
-    _checkReadable(size) {
-        if (this.offset + size - 1 >= this.length)
-            throw new Error('Eof in buffer detected');
-    }
-}
Index: node_modules/postgresql-client/typings/data-types/bytea-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/bytea-type.d.ts b/node_modules/postgresql-client/typings/data-types/bytea-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/bytea-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const ByteaType: DataType;
-export declare const ArrayByteaType: DataType;
Index: node_modules/postgresql-client/cjs/data-types/bytea-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/bytea-type.js b/node_modules/postgresql-client/cjs/data-types/bytea-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/bytea-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,29 +0,0 @@
-"use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayByteaType = exports.ByteaType = void 0;
-const postgres_bytea_1 = __importDefault(require("postgres-bytea"));
-const constants_js_1 = require("../constants.js");
-exports.ByteaType = {
-    name: 'bytea',
-    oid: constants_js_1.DataTypeOIDs.bytea,
-    jsType: 'Buffer',
-    parseBinary(v) {
-        return v;
-    },
-    encodeBinary(buf, v) {
-        buf.writeBuffer(v);
-    },
-    parseText: postgres_bytea_1.default,
-    isType(v) {
-        return v instanceof Buffer;
-    },
-};
-exports.ArrayByteaType = {
-    ...exports.ByteaType,
-    name: '_bytea',
-    oid: constants_js_1.DataTypeOIDs._bytea,
-    elementsOID: constants_js_1.DataTypeOIDs.bytea,
-};
Index: node_modules/postgresql-client/esm/data-types/bytea-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/bytea-type.js b/node_modules/postgresql-client/esm/data-types/bytea-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/bytea-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,23 +0,0 @@
-import decodeBytea from 'postgres-bytea';
-import { DataTypeOIDs } from '../constants.js';
-export const ByteaType = {
-    name: 'bytea',
-    oid: DataTypeOIDs.bytea,
-    jsType: 'Buffer',
-    parseBinary(v) {
-        return v;
-    },
-    encodeBinary(buf, v) {
-        buf.writeBuffer(v);
-    },
-    parseText: decodeBytea,
-    isType(v) {
-        return v instanceof Buffer;
-    },
-};
-export const ArrayByteaType = {
-    ...ByteaType,
-    name: '_bytea',
-    oid: DataTypeOIDs._bytea,
-    elementsOID: DataTypeOIDs.bytea,
-};
Index: node_modules/call-bind/test/callBound.js
===================================================================
diff --git a/node_modules/call-bind/test/callBound.js b/node_modules/call-bind/test/callBound.js
deleted file mode 100644
--- a/node_modules/call-bind/test/callBound.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,54 +0,0 @@
-'use strict';
-
-var test = require('tape');
-
-var callBound = require('../callBound');
-
-test('callBound', function (t) {
-	// static primitive
-	t.equal(callBound('Array.length'), Array.length, 'Array.length yields itself');
-	t.equal(callBound('%Array.length%'), Array.length, '%Array.length% yields itself');
-
-	// static non-function object
-	t.equal(callBound('Array.prototype'), Array.prototype, 'Array.prototype yields itself');
-	t.equal(callBound('%Array.prototype%'), Array.prototype, '%Array.prototype% yields itself');
-	t.equal(callBound('Array.constructor'), Array.constructor, 'Array.constructor yields itself');
-	t.equal(callBound('%Array.constructor%'), Array.constructor, '%Array.constructor% yields itself');
-
-	// static function
-	t.equal(callBound('Date.parse'), Date.parse, 'Date.parse yields itself');
-	t.equal(callBound('%Date.parse%'), Date.parse, '%Date.parse% yields itself');
-
-	// prototype primitive
-	t.equal(callBound('Error.prototype.message'), Error.prototype.message, 'Error.prototype.message yields itself');
-	t.equal(callBound('%Error.prototype.message%'), Error.prototype.message, '%Error.prototype.message% yields itself');
-
-	// prototype function
-	t.notEqual(callBound('Object.prototype.toString'), Object.prototype.toString, 'Object.prototype.toString does not yield itself');
-	t.notEqual(callBound('%Object.prototype.toString%'), Object.prototype.toString, '%Object.prototype.toString% does not yield itself');
-	t.equal(callBound('Object.prototype.toString')(true), Object.prototype.toString.call(true), 'call-bound Object.prototype.toString calls into the original');
-	t.equal(callBound('%Object.prototype.toString%')(true), Object.prototype.toString.call(true), 'call-bound %Object.prototype.toString% calls into the original');
-
-	t['throws'](
-		function () { callBound('does not exist'); },
-		SyntaxError,
-		'nonexistent intrinsic throws'
-	);
-	t['throws'](
-		function () { callBound('does not exist', true); },
-		SyntaxError,
-		'allowMissing arg still throws for unknown intrinsic'
-	);
-
-	t.test('real but absent intrinsic', { skip: typeof WeakRef !== 'undefined' }, function (st) {
-		st['throws'](
-			function () { callBound('WeakRef'); },
-			TypeError,
-			'real but absent intrinsic throws'
-		);
-		st.equal(callBound('WeakRef', true), undefined, 'allowMissing arg avoids exception');
-		st.end();
-	});
-
-	t.end();
-});
Index: node_modules/call-bind/callBound.js
===================================================================
diff --git a/node_modules/call-bind/callBound.js b/node_modules/call-bind/callBound.js
deleted file mode 100644
--- a/node_modules/call-bind/callBound.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,15 +0,0 @@
-'use strict';
-
-var GetIntrinsic = require('get-intrinsic');
-
-var callBind = require('./');
-
-var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));
-
-module.exports = function callBoundIntrinsic(name, allowMissing) {
-	var intrinsic = GetIntrinsic(name, !!allowMissing);
-	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
-		return callBind(intrinsic);
-	}
-	return intrinsic;
-};
Index: node_modules/braces/CHANGELOG.md
===================================================================
diff --git a/node_modules/braces/CHANGELOG.md b/node_modules/braces/CHANGELOG.md
deleted file mode 100644
--- a/node_modules/braces/CHANGELOG.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,184 +0,0 @@
-# Release history
-
-All notable changes to this project will be documented in this file.
-
-The format is based on [Keep a Changelog](http://keepachangelog.com/en/1.0.0/)
-and this project adheres to [Semantic Versioning](http://semver.org/spec/v2.0.0.html).
-
-<details>
-  <summary><strong>Guiding Principles</strong></summary>
-
-- Changelogs are for humans, not machines.
-- There should be an entry for every single version.
-- The same types of changes should be grouped.
-- Versions and sections should be linkable.
-- The latest version comes first.
-- The release date of each versions is displayed.
-- Mention whether you follow Semantic Versioning.
-
-</details>
-
-<details>
-  <summary><strong>Types of changes</strong></summary>
-
-Changelog entries are classified using the following labels _(from [keep-a-changelog](http://keepachangelog.com/)_):
-
-- `Added` for new features.
-- `Changed` for changes in existing functionality.
-- `Deprecated` for soon-to-be removed features.
-- `Removed` for now removed features.
-- `Fixed` for any bug fixes.
-- `Security` in case of vulnerabilities.
-
-</details>
-
-## [3.0.0] - 2018-04-08
-
-v3.0 is a complete refactor, resulting in a faster, smaller codebase, with fewer deps, and a more accurate parser and compiler. 
-
-**Breaking Changes**
-
-- The undocumented `.makeRe` method was removed
-
-**Non-breaking changes**
-
-- Caching was removed
-
-## [2.3.2] - 2018-04-08
-
-- start refactoring
-- cover sets
-- better range handling
-
-## [2.3.1] - 2018-02-17
-
-- Remove unnecessary escape in Regex. (#14)
-
-## [2.3.0] - 2017-10-19
-
-- minor code reorganization
-- optimize regex
-- expose `maxLength` option
-
-## [2.2.1] - 2017-05-30
-
-- don't condense when braces contain extglobs
-
-## [2.2.0] - 2017-05-28
-
-- ensure word boundaries are preserved
-- fixes edge case where extglob characters precede a brace pattern
-
-## [2.1.1] - 2017-04-27
-
-- use snapdragon-node
-- handle edge case
-- optimizations, lint
-
-## [2.0.4] - 2017-04-11
-
-- pass opts to compiler
-- minor optimization in create method
-- re-write parser handlers to remove negation regex
-
-## [2.0.3] - 2016-12-10
-
-- use split-string
-- clear queue at the end
-- adds sequences example
-- add unit tests
-
-## [2.0.2] - 2016-10-21
-
-- fix comma handling in nested extglobs
-
-## [2.0.1] - 2016-10-20
-
-- add comments
-- more tests, ensure quotes are stripped
-
-## [2.0.0] - 2016-10-19
-
-- don't expand braces inside character classes
-- add quantifier pattern
-
-## [1.8.5] - 2016-05-21
-
-- Refactor (#10)
-
-## [1.8.4] - 2016-04-20
-
-- fixes https://github.com/jonschlinkert/micromatch/issues/66
-
-## [1.8.0] - 2015-03-18
-
-- adds exponent examples, tests
-- fixes the first example in https://github.com/jonschlinkert/micromatch/issues/38
-
-## [1.6.0] - 2015-01-30
-
-- optimizations, `bash` mode:
-- improve path escaping
-
-## [1.5.0] - 2015-01-28
-
-- Merge pull request #5 from eush77/lib-files
-
-## [1.4.0] - 2015-01-24
-
-- add extglob tests
-- externalize exponent function
-- better whitespace handling
-
-## [1.3.0] - 2015-01-24
-
-- make regex patterns explicity
-
-## [1.1.0] - 2015-01-11
-
-- don't create a match group with `makeRe`
-
-## [1.0.0] - 2014-12-23
-
-- Merge commit '97b05f5544f8348736a8efaecf5c32bbe3e2ad6e'
-- support empty brace syntax
-- better bash coverage
-- better support for regex strings
-
-## [0.1.4] - 2014-11-14
-
-- improve recognition of bad args, recognize mismatched argument types
-- support escaping
-- remove pathname-expansion
-- support whitespace in patterns
-
-## [0.1.0]
-
-- first commit
-
-[2.3.2]: https://github.com/micromatch/braces/compare/2.3.1...2.3.2
-[2.3.1]: https://github.com/micromatch/braces/compare/2.3.0...2.3.1
-[2.3.0]: https://github.com/micromatch/braces/compare/2.2.1...2.3.0
-[2.2.1]: https://github.com/micromatch/braces/compare/2.2.0...2.2.1
-[2.2.0]: https://github.com/micromatch/braces/compare/2.1.1...2.2.0
-[2.1.1]: https://github.com/micromatch/braces/compare/2.1.0...2.1.1
-[2.1.0]: https://github.com/micromatch/braces/compare/2.0.4...2.1.0
-[2.0.4]: https://github.com/micromatch/braces/compare/2.0.3...2.0.4
-[2.0.3]: https://github.com/micromatch/braces/compare/2.0.2...2.0.3
-[2.0.2]: https://github.com/micromatch/braces/compare/2.0.1...2.0.2
-[2.0.1]: https://github.com/micromatch/braces/compare/2.0.0...2.0.1
-[2.0.0]: https://github.com/micromatch/braces/compare/1.8.5...2.0.0
-[1.8.5]: https://github.com/micromatch/braces/compare/1.8.4...1.8.5
-[1.8.4]: https://github.com/micromatch/braces/compare/1.8.0...1.8.4
-[1.8.0]: https://github.com/micromatch/braces/compare/1.6.0...1.8.0
-[1.6.0]: https://github.com/micromatch/braces/compare/1.5.0...1.6.0
-[1.5.0]: https://github.com/micromatch/braces/compare/1.4.0...1.5.0
-[1.4.0]: https://github.com/micromatch/braces/compare/1.3.0...1.4.0
-[1.3.0]: https://github.com/micromatch/braces/compare/1.2.0...1.3.0
-[1.2.0]: https://github.com/micromatch/braces/compare/1.1.0...1.2.0
-[1.1.0]: https://github.com/micromatch/braces/compare/1.0.0...1.1.0
-[1.0.0]: https://github.com/micromatch/braces/compare/0.1.4...1.0.0
-[0.1.4]: https://github.com/micromatch/braces/compare/0.1.0...0.1.4
-
-[Unreleased]: https://github.com/micromatch/braces/compare/0.1.0...HEAD
-[keep-a-changelog]: https://github.com/olivierlacan/keep-a-changelog
\ No newline at end of file
Index: node_modules/call-bind/CHANGELOG.md
===================================================================
diff --git a/node_modules/call-bind/CHANGELOG.md b/node_modules/call-bind/CHANGELOG.md
deleted file mode 100644
--- a/node_modules/call-bind/CHANGELOG.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,93 +0,0 @@
-# Changelog
-
-All notable changes to this project will be documented in this file.
-
-The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
-and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
-
-## [v1.0.7](https://github.com/ljharb/call-bind/compare/v1.0.6...v1.0.7) - 2024-02-12
-
-### Commits
-
-- [Refactor] use `es-define-property` [`09b76a0`](https://github.com/ljharb/call-bind/commit/09b76a01634440461d44a80c9924ec4b500f3b03)
-- [Deps] update `get-intrinsic`, `set-function-length` [`ad5136d`](https://github.com/ljharb/call-bind/commit/ad5136ddda2a45c590959829ad3dce0c9f4e3590)
-
-## [v1.0.6](https://github.com/ljharb/call-bind/compare/v1.0.5...v1.0.6) - 2024-02-05
-
-### Commits
-
-- [Dev Deps] update `aud`, `npmignore`, `tape` [`d564d5c`](https://github.com/ljharb/call-bind/commit/d564d5ce3e06a19df4d499c77f8d1a9da44e77aa)
-- [Deps] update `get-intrinsic`, `set-function-length` [`cfc2bdc`](https://github.com/ljharb/call-bind/commit/cfc2bdca7b633df0e0e689e6b637f668f1c6792e)
-- [Refactor] use `es-errors`, so things that only need those do not need `get-intrinsic` [`64cd289`](https://github.com/ljharb/call-bind/commit/64cd289ae5862c250a4ca80aa8d461047c166af5)
-- [meta] add missing `engines.node` [`32a4038`](https://github.com/ljharb/call-bind/commit/32a4038857b62179f7f9b7b3df2c5260036be582)
-
-## [v1.0.5](https://github.com/ljharb/call-bind/compare/v1.0.4...v1.0.5) - 2023-10-19
-
-### Commits
-
-- [Fix] throw an error on non-functions as early as possible [`f262408`](https://github.com/ljharb/call-bind/commit/f262408f822c840fbc268080f3ad7c429611066d)
-- [Deps] update `set-function-length` [`3fff271`](https://github.com/ljharb/call-bind/commit/3fff27145a1e3a76a5b74f1d7c3c43d0fa3b9871)
-
-## [v1.0.4](https://github.com/ljharb/call-bind/compare/v1.0.3...v1.0.4) - 2023-10-19
-
-## [v1.0.3](https://github.com/ljharb/call-bind/compare/v1.0.2...v1.0.3) - 2023-10-19
-
-### Commits
-
-- [actions] reuse common workflows [`a994df6`](https://github.com/ljharb/call-bind/commit/a994df69f401f4bf735a4ccd77029b85d1549453)
-- [meta] use `npmignore` to autogenerate an npmignore file [`eef3ef2`](https://github.com/ljharb/call-bind/commit/eef3ef21e1f002790837fedb8af2679c761fbdf5)
-- [readme] flesh out content [`1845ccf`](https://github.com/ljharb/call-bind/commit/1845ccfd9976a607884cfc7157c93192cc16cf22)
-- [actions] use `node/install` instead of `node/run`; use `codecov` action [`5b47d53`](https://github.com/ljharb/call-bind/commit/5b47d53d2fd74af5ea0a44f1d51e503cd42f7a90)
-- [Refactor] use `set-function-length` [`a0e165c`](https://github.com/ljharb/call-bind/commit/a0e165c5dc61db781cbc919b586b1c2b8da0b150)
-- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `tape` [`9c50103`](https://github.com/ljharb/call-bind/commit/9c50103f44137279a817317cf6cc421a658f85b4)
-- [meta] simplify "exports" [`019c6d0`](https://github.com/ljharb/call-bind/commit/019c6d06b0e1246ceed8e579f57e44441cbbf6d9)
-- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `safe-publish-latest`, `tape` [`23bd718`](https://github.com/ljharb/call-bind/commit/23bd718a288d3b03042062b4ef5153b3cea83f11)
-- [actions] update codecov uploader [`62552d7`](https://github.com/ljharb/call-bind/commit/62552d79cc79e05825e99aaba134ae5b37f33da5)
-- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `tape` [`ec81665`](https://github.com/ljharb/call-bind/commit/ec81665b300f87eabff597afdc8b8092adfa7afd)
-- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `safe-publish-latest`, `tape` [`35d67fc`](https://github.com/ljharb/call-bind/commit/35d67fcea883e686650f736f61da5ddca2592de8)
-- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `tape` [`0266d8d`](https://github.com/ljharb/call-bind/commit/0266d8d2a45086a922db366d0c2932fa463662ff)
-- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `tape` [`43a5b28`](https://github.com/ljharb/call-bind/commit/43a5b28a444e710e1bbf92adb8afb5cf7523a223)
-- [Deps] update `define-data-property`, `function-bind`, `get-intrinsic` [`780eb36`](https://github.com/ljharb/call-bind/commit/780eb36552514f8cc99c70821ce698697c2726a5)
-- [Dev Deps] update `aud`, `tape` [`90d50ad`](https://github.com/ljharb/call-bind/commit/90d50ad03b061e0268b3380b0065fcaec183dc05)
-- [meta] use `prepublishOnly` script for npm 7+ [`44c5433`](https://github.com/ljharb/call-bind/commit/44c5433b7980e02b4870007046407cf6fc543329)
-- [Deps] update `get-intrinsic` [`86bfbfc`](https://github.com/ljharb/call-bind/commit/86bfbfcf34afdc6eabc93ce3d408548d0e27d958)
-- [Deps] update `get-intrinsic` [`5c53354`](https://github.com/ljharb/call-bind/commit/5c5335489be0294c18cd7a8bb6e08226ee019ff5)
-- [actions] update checkout action [`4c393a8`](https://github.com/ljharb/call-bind/commit/4c393a8173b3c8e5b30d5b3297b3b94d48bf87f3)
-- [Deps] update `get-intrinsic` [`4e70bde`](https://github.com/ljharb/call-bind/commit/4e70bdec0626acb11616d66250fc14565e716e91)
-- [Deps] update `get-intrinsic` [`55ae803`](https://github.com/ljharb/call-bind/commit/55ae803a920bd93c369cd798c20de31f91e9fc60)
-
-## [v1.0.2](https://github.com/ljharb/call-bind/compare/v1.0.1...v1.0.2) - 2021-01-11
-
-### Commits
-
-- [Fix] properly include the receiver in the bound length [`dbae7bc`](https://github.com/ljharb/call-bind/commit/dbae7bc676c079a0d33c0a43e9ef92cb7b01345d)
-
-## [v1.0.1](https://github.com/ljharb/call-bind/compare/v1.0.0...v1.0.1) - 2021-01-08
-
-### Commits
-
-- [Tests] migrate tests to Github Actions [`b6db284`](https://github.com/ljharb/call-bind/commit/b6db284c36f8ccd195b88a6764fe84b7223a0da1)
-- [meta] do not publish github action workflow files [`ec7fe46`](https://github.com/ljharb/call-bind/commit/ec7fe46e60cfa4764ee943d2755f5e5a366e578e)
-- [Fix] preserve original function’s length when possible [`adbceaa`](https://github.com/ljharb/call-bind/commit/adbceaa3cac4b41ea78bb19d7ccdbaaf7e0bdadb)
-- [Tests] gather coverage data on every job [`d69e23c`](https://github.com/ljharb/call-bind/commit/d69e23cc65f101ba1d4c19bb07fa8eb0ec624be8)
-- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `tape` [`2fd3586`](https://github.com/ljharb/call-bind/commit/2fd3586c5d47b335364c14293114c6b625ae1f71)
-- [Deps] update `get-intrinsic` [`f23e931`](https://github.com/ljharb/call-bind/commit/f23e9318cc271c2add8bb38cfded85ee7baf8eee)
-- [Deps] update `get-intrinsic` [`72d9f44`](https://github.com/ljharb/call-bind/commit/72d9f44e184465ba8dd3fb48260bbcff234985f2)
-- [meta] fix FUNDING.yml [`e723573`](https://github.com/ljharb/call-bind/commit/e723573438c5a68dcec31fb5d96ea6b7e4a93be8)
-- [eslint] ignore coverage output [`15e76d2`](https://github.com/ljharb/call-bind/commit/15e76d28a5f43e504696401e5b31ebb78ee1b532)
-- [meta] add Automatic Rebase and Require Allow Edits workflows [`8fa4dab`](https://github.com/ljharb/call-bind/commit/8fa4dabb23ba3dd7bb92c9571c1241c08b56e4b6)
-
-## v1.0.0 - 2020-10-30
-
-### Commits
-
-- Initial commit [`306cf98`](https://github.com/ljharb/call-bind/commit/306cf98c7ec9e7ef66b653ec152277ac1381eb50)
-- Tests [`e10d0bb`](https://github.com/ljharb/call-bind/commit/e10d0bbdadc7a10ecedc9a1c035112d3e368b8df)
-- Implementation [`43852ed`](https://github.com/ljharb/call-bind/commit/43852eda0f187327b7fad2423ca972149a52bd65)
-- npm init [`408f860`](https://github.com/ljharb/call-bind/commit/408f860b773a2f610805fd3613d0d71bac1b6249)
-- [meta] add Automatic Rebase and Require Allow Edits workflows [`fb349b2`](https://github.com/ljharb/call-bind/commit/fb349b2e48defbec8b5ec8a8395cc8f69f220b13)
-- [meta] add `auto-changelog` [`c4001fc`](https://github.com/ljharb/call-bind/commit/c4001fc43031799ef908211c98d3b0fb2b60fde4)
-- [meta] add "funding"; create `FUNDING.yml` [`d4d6d29`](https://github.com/ljharb/call-bind/commit/d4d6d2974a14bc2e98830468eda7fe6d6a776717)
-- [Tests] add `npm run lint` [`dedfb98`](https://github.com/ljharb/call-bind/commit/dedfb98bd0ecefb08ddb9a94061bd10cde4332af)
-- Only apps should have lockfiles [`54ac776`](https://github.com/ljharb/call-bind/commit/54ac77653db45a7361dc153d2f478e743f110650)
-- [meta] add `safe-publish-latest` [`9ea8e43`](https://github.com/ljharb/call-bind/commit/9ea8e435b950ce9b705559cd651039f9bf40140f)
Index: node_modules/define-data-property/CHANGELOG.md
===================================================================
diff --git a/node_modules/define-data-property/CHANGELOG.md b/node_modules/define-data-property/CHANGELOG.md
deleted file mode 100644
--- a/node_modules/define-data-property/CHANGELOG.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,70 +0,0 @@
-# Changelog
-
-All notable changes to this project will be documented in this file.
-
-The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
-and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
-
-## [v1.1.4](https://github.com/ljharb/define-data-property/compare/v1.1.3...v1.1.4) - 2024-02-13
-
-### Commits
-
-- [Refactor] use `es-define-property` [`90f2f4c`](https://github.com/ljharb/define-data-property/commit/90f2f4cc20298401e71c28e1e08888db12021453)
-- [Dev Deps] update `@types/object.getownpropertydescriptors` [`cd929d9`](https://github.com/ljharb/define-data-property/commit/cd929d9a04f5f2fdcfa9d5be140940b91a083153)
-
-## [v1.1.3](https://github.com/ljharb/define-data-property/compare/v1.1.2...v1.1.3) - 2024-02-12
-
-### Commits
-
-- [types] hand-write d.ts instead of emitting it [`0cbc988`](https://github.com/ljharb/define-data-property/commit/0cbc988203c105f2d97948327c7167ebd33bd318)
-- [meta] simplify `exports` [`690781e`](https://github.com/ljharb/define-data-property/commit/690781eed28bbf2d6766237efda0ba6dd591609e)
-- [Dev Deps] update `hasown`; clean up DT packages [`6cdfd1c`](https://github.com/ljharb/define-data-property/commit/6cdfd1cb2d91d791bfd18cda5d5cab232fd5d8fc)
-- [actions] cleanup [`3142bc6`](https://github.com/ljharb/define-data-property/commit/3142bc6a4bc406a51f5b04f31e98562a27f35ffd)
-- [meta] add `funding` [`8474423`](https://github.com/ljharb/define-data-property/commit/847442391a79779af3e0f1bf0b5bb923552b7804)
-- [Deps] update `get-intrinsic` [`3e9be00`](https://github.com/ljharb/define-data-property/commit/3e9be00e07784ba34e7c77d8bc0fdbc832ad61de)
-
-## [v1.1.2](https://github.com/ljharb/define-data-property/compare/v1.1.1...v1.1.2) - 2024-02-05
-
-### Commits
-
-- [Dev Deps] update @types packages, `object-inspect`, `tape`, `typescript` [`df41bf8`](https://github.com/ljharb/define-data-property/commit/df41bf84ca3456be6226055caab44e38e3a7fd2f)
-- [Dev Deps] update DT packages, `aud`, `npmignore`, `tape`, typescript` [`fab0e4e`](https://github.com/ljharb/define-data-property/commit/fab0e4ec709ee02b79f42d6db3ee5f26e0a34b8a)
-- [Dev Deps] use `hasown` instead of `has` [`aa51ef9`](https://github.com/ljharb/define-data-property/commit/aa51ef93f6403d49d9bb72a807bcdb6e418978c0)
-- [Refactor] use `es-errors`, so things that only need those do not need `get-intrinsic` [`d89be50`](https://github.com/ljharb/define-data-property/commit/d89be50571175888d391238605122679f7e65ffc)
-- [Deps] update `has-property-descriptors` [`7af887c`](https://github.com/ljharb/define-data-property/commit/7af887c9083b59b195b0079e04815cfed9fcee2b)
-- [Deps] update `get-intrinsic` [`bb8728e`](https://github.com/ljharb/define-data-property/commit/bb8728ec42cd998505a7157ae24853a560c20646)
-
-## [v1.1.1](https://github.com/ljharb/define-data-property/compare/v1.1.0...v1.1.1) - 2023-10-12
-
-### Commits
-
-- [Tests] fix tests in ES3 engines [`5c6920e`](https://github.com/ljharb/define-data-property/commit/5c6920edd1f52f675b02f417e539c28135b43f94)
-- [Dev Deps] update `@types/es-value-fixtures`, `@types/for-each`, `@types/gopd`, `@types/has-property-descriptors`, `tape`, `typescript` [`7d82dfc`](https://github.com/ljharb/define-data-property/commit/7d82dfc20f778b4465bba06335dd53f6f431aea3)
-- [Fix] IE 8 has a broken `Object.defineProperty` [`0672e1a`](https://github.com/ljharb/define-data-property/commit/0672e1af2a9fcc787e7c23b96dea60d290df5548)
-- [meta] emit types on prepack [`73acb1f`](https://github.com/ljharb/define-data-property/commit/73acb1f903c21b314ec7156bf10f73c7910530c0)
-- [Dev Deps] update `tape`, `typescript` [`9489a77`](https://github.com/ljharb/define-data-property/commit/9489a7738bf2ecf0ac71d5b78ec4ca6ad7ba0142)
-
-## [v1.1.0](https://github.com/ljharb/define-data-property/compare/v1.0.1...v1.1.0) - 2023-09-13
-
-### Commits
-
-- [New] add `loose` arg [`155235a`](https://github.com/ljharb/define-data-property/commit/155235a4c4d7741f6de01cd87c99599a56654b72)
-- [New] allow `null` to be passed for the non* args [`7d2fa5f`](https://github.com/ljharb/define-data-property/commit/7d2fa5f06be0392736c13b126f7cd38979f34792)
-
-## [v1.0.1](https://github.com/ljharb/define-data-property/compare/v1.0.0...v1.0.1) - 2023-09-12
-
-### Commits
-
-- [meta] add TS types [`43d763c`](https://github.com/ljharb/define-data-property/commit/43d763c6c883f652de1c9c02ef6216ee507ffa69)
-- [Dev Deps] update `@types/tape`, `typescript` [`f444985`](https://github.com/ljharb/define-data-property/commit/f444985811c36f3e6448a03ad2f9b7898917f4c7)
-- [meta] add `safe-publish-latest`, [`172bb10`](https://github.com/ljharb/define-data-property/commit/172bb10890896ebb160e64398f6ee55760107bee)
-
-## v1.0.0 - 2023-09-12
-
-### Commits
-
-- Initial implementation, tests, readme [`5b43d6b`](https://github.com/ljharb/define-data-property/commit/5b43d6b44e675a904810467a7d4e0adb7efc3196)
-- Initial commit [`35e577a`](https://github.com/ljharb/define-data-property/commit/35e577a6ba59a98befa97776d70d90f3bea9009d)
-- npm init [`82a0a04`](https://github.com/ljharb/define-data-property/commit/82a0a04a321ca7de220af02d41e2745e8a9962ed)
-- Only apps should have lockfiles [`96df244`](https://github.com/ljharb/define-data-property/commit/96df244a3c6f426f9a2437be825d1c6f5dd7158e)
-- [meta] use `npmignore` to autogenerate an npmignore file [`a87ff18`](https://github.com/ljharb/define-data-property/commit/a87ff18cb79e14c2eb5720486c4759fd9a189375)
Index: node_modules/has-property-descriptors/CHANGELOG.md
===================================================================
diff --git a/node_modules/has-property-descriptors/CHANGELOG.md b/node_modules/has-property-descriptors/CHANGELOG.md
deleted file mode 100644
--- a/node_modules/has-property-descriptors/CHANGELOG.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,35 +0,0 @@
-# Changelog
-
-All notable changes to this project will be documented in this file.
-
-The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
-and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
-
-## [v1.0.2](https://github.com/inspect-js/has-property-descriptors/compare/v1.0.1...v1.0.2) - 2024-02-12
-
-### Commits
-
-- [Refactor] use `es-define-property` [`f93a8c8`](https://github.com/inspect-js/has-property-descriptors/commit/f93a8c85eba70cbceab500f2619fb5cce73a1805)
-- [Dev Deps] update `aud`, `npmignore`, `tape` [`42b0c9d`](https://github.com/inspect-js/has-property-descriptors/commit/42b0c9d1c23e747755f0f2924923c418ea34a9ee)
-- [Deps] update `get-intrinsic` [`35e9b46`](https://github.com/inspect-js/has-property-descriptors/commit/35e9b46a7f14331bf0de98b644dd803676746037)
-
-## [v1.0.1](https://github.com/inspect-js/has-property-descriptors/compare/v1.0.0...v1.0.1) - 2023-10-20
-
-### Commits
-
-- [meta] use `npmignore` to autogenerate an npmignore file [`5bbf4da`](https://github.com/inspect-js/has-property-descriptors/commit/5bbf4dae1b58950d87bb3af508bee7513e640868)
-- [actions] update rebase action to use reusable workflow [`3a5585b`](https://github.com/inspect-js/has-property-descriptors/commit/3a5585bf74988f71a8f59e67a07d594e62c51fd8)
-- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `tape` [`e5c1212`](https://github.com/inspect-js/has-property-descriptors/commit/e5c1212048a8fda549794c47863724ca60b89cae)
-- [Dev Deps] update `aud`, `tape` [`e942917`](https://github.com/inspect-js/has-property-descriptors/commit/e942917b6c2f7c090d5623048989cf20d0834ebf)
-- [Deps] update `get-intrinsic` [`f4a44ec`](https://github.com/inspect-js/has-property-descriptors/commit/f4a44ec6d94146fa6c550d3c15c31a2062c83ef4)
-- [Deps] update `get-intrinsic` [`eeb275b`](https://github.com/inspect-js/has-property-descriptors/commit/eeb275b473e5d72ca843b61ca25cfcb06a5d4300)
-
-## v1.0.0 - 2022-04-14
-
-### Commits
-
-- Initial implementation, tests [`303559f`](https://github.com/inspect-js/has-property-descriptors/commit/303559f2a72dfe7111573a1aec475ed4a184c35a)
-- Initial commit [`3a7ca2d`](https://github.com/inspect-js/has-property-descriptors/commit/3a7ca2dc49f1fff0279a28bb16265e7615e14749)
-- read me [`dd73dce`](https://github.com/inspect-js/has-property-descriptors/commit/dd73dce09d89d0f7a4a6e3b1e562a506f979a767)
-- npm init [`c1e6557`](https://github.com/inspect-js/has-property-descriptors/commit/c1e655779de632d68cb944c50da6b71bcb7b8c85)
-- Only apps should have lockfiles [`e72f7c6`](https://github.com/inspect-js/has-property-descriptors/commit/e72f7c68de534b2d273ee665f8b18d4ecc7f70b0)
Index: node_modules/has-proto/CHANGELOG.md
===================================================================
diff --git a/node_modules/has-proto/CHANGELOG.md b/node_modules/has-proto/CHANGELOG.md
deleted file mode 100644
--- a/node_modules/has-proto/CHANGELOG.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,38 +0,0 @@
-# Changelog
-
-All notable changes to this project will be documented in this file.
-
-The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
-and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
-
-## [v1.0.3](https://github.com/inspect-js/has-proto/compare/v1.0.2...v1.0.3) - 2024-02-19
-
-### Commits
-
-- [types] add missing declaration file [`26ecade`](https://github.com/inspect-js/has-proto/commit/26ecade05d253bb5dc376945ee3186d1fbe334f8)
-
-## [v1.0.2](https://github.com/inspect-js/has-proto/compare/v1.0.1...v1.0.2) - 2024-02-19
-
-### Commits
-
-- add types [`6435262`](https://github.com/inspect-js/has-proto/commit/64352626cf511c0276d5f4bb6be770a0bf0f8524)
-- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `npmignore`, `tape` [`f16a5e4`](https://github.com/inspect-js/has-proto/commit/f16a5e4121651e551271419f9d60fdd3561fd82c)
-- [Refactor] tiny cleanup [`d1f1a4b`](https://github.com/inspect-js/has-proto/commit/d1f1a4bdc135f115a10f148ce302676224534702)
-- [meta] add `sideEffects` flag [`e7ab1a6`](https://github.com/inspect-js/has-proto/commit/e7ab1a6f153b3e80dee68d1748b71e46767a0531)
-
-## [v1.0.1](https://github.com/inspect-js/has-proto/compare/v1.0.0...v1.0.1) - 2022-12-21
-
-### Commits
-
-- [meta] correct URLs and description [`ef34483`](https://github.com/inspect-js/has-proto/commit/ef34483ca0d35680f271b6b96e35526151b25dfc)
-- [patch] add an additional criteria [`e81959e`](https://github.com/inspect-js/has-proto/commit/e81959ed7c7a77fbf459f00cb4ef824f1099497f)
-- [Dev Deps] update `aud` [`2bec2c4`](https://github.com/inspect-js/has-proto/commit/2bec2c47b072b122ff5443fba0263f6dc649531f)
-
-## v1.0.0 - 2022-12-12
-
-### Commits
-
-- Initial implementation, tests, readme [`6886fea`](https://github.com/inspect-js/has-proto/commit/6886fea578f67daf69a7920b2eb7637ea6ebb0bc)
-- Initial commit [`99129c8`](https://github.com/inspect-js/has-proto/commit/99129c8f42471ac89cb681ba9cb9d52a583eb94f)
-- npm init [`2844ad8`](https://github.com/inspect-js/has-proto/commit/2844ad8e75b84d66a46765b3bab9d2e8ea692e10)
-- Only apps should have lockfiles [`c65bc5e`](https://github.com/inspect-js/has-proto/commit/c65bc5e40b9004463f7336d47c67245fb139a36a)
Index: node_modules/set-function-length/CHANGELOG.md
===================================================================
diff --git a/node_modules/set-function-length/CHANGELOG.md b/node_modules/set-function-length/CHANGELOG.md
deleted file mode 100644
--- a/node_modules/set-function-length/CHANGELOG.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,70 +0,0 @@
-# Changelog
-
-All notable changes to this project will be documented in this file.
-
-The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
-and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
-
-## [v1.2.2](https://github.com/ljharb/set-function-length/compare/v1.2.1...v1.2.2) - 2024-03-09
-
-### Commits
-
-- [types] use shared config [`027032f`](https://github.com/ljharb/set-function-length/commit/027032fe9cc439644a07248ea6a8d813fcc767cb)
-- [actions] remove redundant finisher; use reusable workflow [`1fd4fb1`](https://github.com/ljharb/set-function-length/commit/1fd4fb1c58bd5170f0dcff7e320077c0aa2ffdeb)
-- [types] use a handwritten d.ts file instead of emit [`01b9761`](https://github.com/ljharb/set-function-length/commit/01b9761742c95e1118e8c2d153ce2ae43d9731aa)
-- [Deps] update `define-data-property`, `get-intrinsic`, `has-property-descriptors` [`bee8eaf`](https://github.com/ljharb/set-function-length/commit/bee8eaf7749f325357ade85cffeaeef679e513d4)
-- [Dev Deps] update `call-bind`, `tape` [`5dae579`](https://github.com/ljharb/set-function-length/commit/5dae579fdc3aab91b14ebb58f9c19ee3f509d434)
-- [Tests] use `@arethetypeswrong/cli` [`7e22425`](https://github.com/ljharb/set-function-length/commit/7e22425d15957fd3d6da0b6bca4afc0c8d255d2d)
-
-## [v1.2.1](https://github.com/ljharb/set-function-length/compare/v1.2.0...v1.2.1) - 2024-02-06
-
-### Commits
-
-- [Dev Deps] update `call-bind`, `tape`, `typescript` [`d9a4601`](https://github.com/ljharb/set-function-length/commit/d9a460199c4c1fa37da9ebe055e2c884128f0738)
-- [Deps] update `define-data-property`, `get-intrinsic` [`38d39ae`](https://github.com/ljharb/set-function-length/commit/38d39aed13a757ed36211d5b0437b88485090c6b)
-- [Refactor] use `es-errors`, so things that only need those do not need `get-intrinsic` [`b4bfe5a`](https://github.com/ljharb/set-function-length/commit/b4bfe5ae0953b906d55b85f867eca5e7f673ebf4)
-
-## [v1.2.0](https://github.com/ljharb/set-function-length/compare/v1.1.1...v1.2.0) - 2024-01-14
-
-### Commits
-
-- [New] add types [`f6d9088`](https://github.com/ljharb/set-function-length/commit/f6d9088b9283a3112b21c6776e8bef6d1f30558a)
-- [Fix] ensure `env` properties are always booleans [`0c42f84`](https://github.com/ljharb/set-function-length/commit/0c42f84979086389b3229e1b4272697fd352275a)
-- [Dev Deps] update `aud`, `call-bind`, `npmignore`, `tape` [`2b75f75`](https://github.com/ljharb/set-function-length/commit/2b75f75468093a4bb8ce8ca989b2edd2e80d95d1)
-- [Deps] update `get-intrinsic`, `has-property-descriptors` [`19bf0fc`](https://github.com/ljharb/set-function-length/commit/19bf0fc4ffaa5ad425acbfa150516be9f3b6263a)
-- [meta] add `sideEffects` flag [`8bb9b78`](https://github.com/ljharb/set-function-length/commit/8bb9b78c11c621123f725c9470222f43466c01d0)
-
-## [v1.1.1](https://github.com/ljharb/set-function-length/compare/v1.1.0...v1.1.1) - 2023-10-19
-
-### Fixed
-
-- [Fix] move `define-data-property` to runtime deps [`#2`](https://github.com/ljharb/set-function-length/issues/2)
-
-### Commits
-
-- [Dev Deps] update `object-inspect`; add missing `call-bind` [`5aecf79`](https://github.com/ljharb/set-function-length/commit/5aecf79e7d6400957a5d9bd9ac20d4528908ca18)
-
-## [v1.1.0](https://github.com/ljharb/set-function-length/compare/v1.0.1...v1.1.0) - 2023-10-13
-
-### Commits
-
-- [New] add `env` entry point [`475c87a`](https://github.com/ljharb/set-function-length/commit/475c87aa2f59b700aaed589d980624ec596acdcb)
-- [Tests] add coverage with `nyc` [`14f0bf8`](https://github.com/ljharb/set-function-length/commit/14f0bf8c145ae60bf14a026420a06bb7be132c36)
-- [eslint] fix linting failure [`fb516f9`](https://github.com/ljharb/set-function-length/commit/fb516f93c664057138c53559ef63c8622a093335)
-- [Deps] update `define-data-property` [`d727e7c`](https://github.com/ljharb/set-function-length/commit/d727e7c6c9a40d7bf26797694e500ea68741feea)
-
-## [v1.0.1](https://github.com/ljharb/set-function-length/compare/v1.0.0...v1.0.1) - 2023-10-12
-
-### Commits
-
-- [Refactor] use `get-intrinsic`, since it‘s in the dep graph anyways [`278a954`](https://github.com/ljharb/set-function-length/commit/278a954a06cd849051c569ff7aee56df6798933e)
-- [meta] add `exports` [`72acfe5`](https://github.com/ljharb/set-function-length/commit/72acfe5a0310071fb205a72caba5ecbab24336a0)
-
-## v1.0.0 - 2023-10-12
-
-### Commits
-
-- Initial implementation, tests, readme [`fce14e1`](https://github.com/ljharb/set-function-length/commit/fce14e17586460e4f294405173be72b6ffdf7e5f)
-- Initial commit [`ca7ba85`](https://github.com/ljharb/set-function-length/commit/ca7ba857c7c283f9d26e21f14e71cd388f2cb722)
-- npm init [`6a7e493`](https://github.com/ljharb/set-function-length/commit/6a7e493927736cebcaf5c1a84e69b8e6b7b744d8)
-- Only apps should have lockfiles [`d2bf6c4`](https://github.com/ljharb/set-function-length/commit/d2bf6c43de8a51b02a0aa53e8d62cb50c4a2b0da)
Index: node_modules/postgresql-client/typings/data-types/char-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/char-type.d.ts b/node_modules/postgresql-client/typings/data-types/char-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/char-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const CharType: DataType;
-export declare const ArrayCharType: DataType;
Index: node_modules/postgresql-client/cjs/data-types/char-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/char-type.js b/node_modules/postgresql-client/cjs/data-types/char-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/char-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,27 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayCharType = exports.CharType = void 0;
-const constants_js_1 = require("../constants.js");
-exports.CharType = {
-    name: 'char',
-    oid: constants_js_1.DataTypeOIDs.char,
-    jsType: 'string',
-    parseBinary(v) {
-        return v.toString('utf8');
-    },
-    encodeBinary(buf, v) {
-        buf.writeString((v ? '' + v : ' ')[0], 'utf8');
-    },
-    parseText(v) {
-        return '' + v;
-    },
-    isType(v) {
-        return typeof v === 'string' && v.length === 1;
-    },
-};
-exports.ArrayCharType = {
-    ...exports.CharType,
-    name: '_char',
-    oid: constants_js_1.DataTypeOIDs._char,
-    elementsOID: constants_js_1.DataTypeOIDs.char,
-};
Index: node_modules/postgresql-client/esm/data-types/char-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/char-type.js b/node_modules/postgresql-client/esm/data-types/char-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/char-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,24 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-export const CharType = {
-    name: 'char',
-    oid: DataTypeOIDs.char,
-    jsType: 'string',
-    parseBinary(v) {
-        return v.toString('utf8');
-    },
-    encodeBinary(buf, v) {
-        buf.writeString((v ? '' + v : ' ')[0], 'utf8');
-    },
-    parseText(v) {
-        return '' + v;
-    },
-    isType(v) {
-        return typeof v === 'string' && v.length === 1;
-    },
-};
-export const ArrayCharType = {
-    ...CharType,
-    name: '_char',
-    oid: DataTypeOIDs._char,
-    elementsOID: DataTypeOIDs.char,
-};
Index: node_modules/postgresql-client/typings/data-types/circle-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/circle-type.d.ts b/node_modules/postgresql-client/typings/data-types/circle-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/circle-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const CircleType: DataType;
-export declare const ArrayCircleType: DataType;
Index: node_modules/postgresql-client/cjs/data-types/circle-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/circle-type.js b/node_modules/postgresql-client/cjs/data-types/circle-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/circle-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,48 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayCircleType = exports.CircleType = void 0;
-const constants_js_1 = require("../constants.js");
-const CIRCLE_PATTERN1 = /^< *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *, *(-?\d+\.?\d*) *>$/;
-const CIRCLE_PATTERN2 = /^\( *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *, *(-?\d+\.?\d*) *\)$/;
-const CIRCLE_PATTERN3 = /^\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *, *(-?\d+\.?\d*)$/;
-const CIRCLE_PATTERN4 = /^(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *, *(-?\d+\.?\d*)$/;
-exports.CircleType = {
-    name: 'circle',
-    oid: constants_js_1.DataTypeOIDs.circle,
-    jsType: 'object',
-    parseBinary(v) {
-        return {
-            x: v.readDoubleBE(0),
-            y: v.readDoubleBE(8),
-            r: v.readDoubleBE(16),
-        };
-    },
-    encodeBinary(buf, v) {
-        buf.writeDoubleBE(v.x);
-        buf.writeDoubleBE(v.y);
-        buf.writeDoubleBE(v.r);
-    },
-    parseText(v) {
-        const m = v.match(CIRCLE_PATTERN1) || v.match(CIRCLE_PATTERN2) || v.match(CIRCLE_PATTERN3) || v.match(CIRCLE_PATTERN4);
-        if (!m)
-            return undefined;
-        return {
-            x: parseFloat(m[1]),
-            y: parseFloat(m[2]),
-            r: parseFloat(m[3]),
-        };
-    },
-    isType(v) {
-        return (typeof v === 'object' &&
-            Object.keys(v).length === 3 &&
-            typeof v.x === 'number' &&
-            typeof v.y === 'number' &&
-            typeof v.r === 'number');
-    },
-};
-exports.ArrayCircleType = {
-    ...exports.CircleType,
-    name: '_circle',
-    oid: constants_js_1.DataTypeOIDs._circle,
-    elementsOID: constants_js_1.DataTypeOIDs.circle,
-};
Index: node_modules/postgresql-client/esm/data-types/circle-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/circle-type.js b/node_modules/postgresql-client/esm/data-types/circle-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/circle-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,45 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-const CIRCLE_PATTERN1 = /^< *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *, *(-?\d+\.?\d*) *>$/;
-const CIRCLE_PATTERN2 = /^\( *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *, *(-?\d+\.?\d*) *\)$/;
-const CIRCLE_PATTERN3 = /^\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *, *(-?\d+\.?\d*)$/;
-const CIRCLE_PATTERN4 = /^(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *, *(-?\d+\.?\d*)$/;
-export const CircleType = {
-    name: 'circle',
-    oid: DataTypeOIDs.circle,
-    jsType: 'object',
-    parseBinary(v) {
-        return {
-            x: v.readDoubleBE(0),
-            y: v.readDoubleBE(8),
-            r: v.readDoubleBE(16),
-        };
-    },
-    encodeBinary(buf, v) {
-        buf.writeDoubleBE(v.x);
-        buf.writeDoubleBE(v.y);
-        buf.writeDoubleBE(v.r);
-    },
-    parseText(v) {
-        const m = v.match(CIRCLE_PATTERN1) || v.match(CIRCLE_PATTERN2) || v.match(CIRCLE_PATTERN3) || v.match(CIRCLE_PATTERN4);
-        if (!m)
-            return undefined;
-        return {
-            x: parseFloat(m[1]),
-            y: parseFloat(m[2]),
-            r: parseFloat(m[3]),
-        };
-    },
-    isType(v) {
-        return (typeof v === 'object' &&
-            Object.keys(v).length === 3 &&
-            typeof v.x === 'number' &&
-            typeof v.y === 'number' &&
-            typeof v.r === 'number');
-    },
-};
-export const ArrayCircleType = {
-    ...CircleType,
-    name: '_circle',
-    oid: DataTypeOIDs._circle,
-    elementsOID: DataTypeOIDs.circle,
-};
Index: node_modules/postgresql-client/typings/interfaces/command-result.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/interfaces/command-result.d.ts b/node_modules/postgresql-client/typings/interfaces/command-result.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/interfaces/command-result.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,28 +0,0 @@
-import { Row } from '../types.js';
-import type { FieldInfo } from './field-info.js';
-export interface CommandResult {
-    /**
-     * Name of the command (INSERT, SELECT, UPDATE, etc.)
-     */
-    command?: string;
-    /**
-     * Contains information about fields in column order
-     */
-    fields?: FieldInfo[];
-    /**
-     * Contains array of row data
-     */
-    rows?: Row[];
-    /**
-     * Contains row type
-     */
-    rowType?: 'array' | 'object';
-    /**
-     * Time elapsed to execute command
-     */
-    executeTime?: number;
-    /**
-     * How many rows affected
-     */
-    rowsAffected?: number;
-}
Index: node_modules/postgresql-client/cjs/interfaces/command-result.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/interfaces/command-result.js b/node_modules/postgresql-client/cjs/interfaces/command-result.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/interfaces/command-result.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,2 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
Index: node_modules/postgresql-client/esm/interfaces/command-result.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/interfaces/command-result.js b/node_modules/postgresql-client/esm/interfaces/command-result.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/interfaces/command-result.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,1 +0,0 @@
-export {};
Index: node_modules/postgresql-client/typings/util/config-from-env.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/util/config-from-env.d.ts b/node_modules/postgresql-client/typings/util/config-from-env.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/util/config-from-env.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,2 +0,0 @@
-import { ConnectionConfiguration } from '../interfaces/database-connection-params.js';
-export declare function configFromEnv(): ConnectionConfiguration;
Index: node_modules/postgresql-client/cjs/util/config-from-env.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/util/config-from-env.js b/node_modules/postgresql-client/cjs/util/config-from-env.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/util/config-from-env.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,30 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.configFromEnv = void 0;
-const putil_varhelpers_1 = require("putil-varhelpers");
-function configFromEnv() {
-    const env = process.env;
-    const result = {};
-    result.host = env.PGHOST || env.PGHOSTADDR;
-    if (env.PGPORT)
-        result.port = (0, putil_varhelpers_1.toIntDef)(env.PGPORT, 5432);
-    if (env.PGDATABASE)
-        result.database = env.PGDATABASE;
-    if (env.PGUSER)
-        result.user = env.PGUSER;
-    if (env.PGPASSWORD)
-        result.password = env.PGPASSWORD;
-    if (env.PGAPPNAME)
-        result.applicationName = env.PGAPPNAME;
-    if (env.PGTZ)
-        result.timezone = env.PGTZ;
-    if (env.PGSCHEMA)
-        result.schema = env.PGSCHEMA;
-    if (env.PGCONNECT_TIMEOUT)
-        result.connectTimeoutMs = (0, putil_varhelpers_1.toIntDef)(env.PGCONNECT_TIMEOUT, 30000);
-    if (env.PGMAX_BUFFER_SIZE) {
-        result.buffer = { maxLength: (0, putil_varhelpers_1.toInt)(env.PGMAX_BUFFER_SIZE) };
-    }
-    return result;
-}
-exports.configFromEnv = configFromEnv;
Index: node_modules/postgresql-client/esm/util/config-from-env.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/util/config-from-env.js b/node_modules/postgresql-client/esm/util/config-from-env.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/util/config-from-env.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,26 +0,0 @@
-import { toInt, toIntDef } from 'putil-varhelpers';
-export function configFromEnv() {
-    const env = process.env;
-    const result = {};
-    result.host = env.PGHOST || env.PGHOSTADDR;
-    if (env.PGPORT)
-        result.port = toIntDef(env.PGPORT, 5432);
-    if (env.PGDATABASE)
-        result.database = env.PGDATABASE;
-    if (env.PGUSER)
-        result.user = env.PGUSER;
-    if (env.PGPASSWORD)
-        result.password = env.PGPASSWORD;
-    if (env.PGAPPNAME)
-        result.applicationName = env.PGAPPNAME;
-    if (env.PGTZ)
-        result.timezone = env.PGTZ;
-    if (env.PGSCHEMA)
-        result.schema = env.PGSCHEMA;
-    if (env.PGCONNECT_TIMEOUT)
-        result.connectTimeoutMs = toIntDef(env.PGCONNECT_TIMEOUT, 30000);
-    if (env.PGMAX_BUFFER_SIZE) {
-        result.buffer = { maxLength: toInt(env.PGMAX_BUFFER_SIZE) };
-    }
-    return result;
-}
Index: node_modules/postgresql-client/typings/connection/connection.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/connection/connection.d.ts b/node_modules/postgresql-client/typings/connection/connection.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/connection/connection.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,110 +0,0 @@
-/// <reference types="node" />
-import { ConnectionState } from '../constants.js';
-import { ConnectionConfiguration } from '../interfaces/database-connection-params.js';
-import { QueryOptions } from '../interfaces/query-options.js';
-import { QueryResult } from '../interfaces/query-result.js';
-import { ScriptExecuteOptions } from '../interfaces/script-execute-options.js';
-import { ScriptResult } from '../interfaces/script-result.js';
-import { StatementPrepareOptions } from '../interfaces/statement-prepare-options.js';
-import { DatabaseError } from '../protocol/database-error.js';
-import { Protocol } from '../protocol/protocol.js';
-import { SafeEventEmitter } from '../safe-event-emitter.js';
-import { Maybe } from '../types.js';
-import { IntlConnection } from './intl-connection.js';
-import type { Pool } from './pool.js';
-import { PreparedStatement } from './prepared-statement.js';
-export type NotificationMessage = Protocol.NotificationResponseMessage;
-export type NotificationCallback = (msg: NotificationMessage) => any;
-export declare class Connection extends SafeEventEmitter implements AsyncDisposable {
-    protected readonly _pool?: Pool;
-    protected readonly _intlCon: IntlConnection;
-    protected readonly _notificationListeners: SafeEventEmitter;
-    protected _closing: boolean;
-    constructor(pool: Pool, intlCon: IntlConnection);
-    constructor(config?: ConnectionConfiguration | string);
-    /**
-     * Returns configuration object
-     */
-    get config(): ConnectionConfiguration;
-    /**
-     * Returns true if connection is in a transaction
-     */
-    get inTransaction(): boolean;
-    /**
-     * Returns current state of the connection
-     */
-    get state(): ConnectionState;
-    /**
-     * Returns processId of current session
-     */
-    get processID(): Maybe<number>;
-    /**
-     * Returns information parameters for current session
-     */
-    get sessionParameters(): Record<string, string>;
-    /**
-     * Returns secret key of current session
-     */
-    get secretKey(): Maybe<number>;
-    /**
-     * Connects to the server
-     */
-    connect(): Promise<void>;
-    /**
-     * Closes connection. You can define how long time the connection will
-     * wait for active queries before terminating the connection.
-     * On the end of the given time, it forces to close the socket and than emits `terminate` event.
-     *
-     * @param terminateWait {number} - Determines how long the connection will wait for active queries before terminating.
-     */
-    close(terminateWait?: number): Promise<void>;
-    /**
-     * Executes single or multiple SQL scripts using Simple Query protocol.
-     *
-     * @param sql {string} - SQL script that will be executed
-     * @param options {ScriptExecuteOptions} - Execute options
-     */
-    execute(sql: string, options?: ScriptExecuteOptions): Promise<ScriptResult>;
-    query(sql: string, options?: QueryOptions): Promise<QueryResult>;
-    /**
-     * Creates a PreparedStatement instance
-     * @param sql {string} - SQL script that will be executed
-     * @param options {StatementPrepareOptions} - Options
-     */
-    prepare(sql: string, options?: StatementPrepareOptions): Promise<PreparedStatement>;
-    /**
-     * Starts a transaction
-     */
-    startTransaction(): Promise<void>;
-    /**
-     * Commits current transaction
-     */
-    commit(): Promise<void>;
-    /**
-     * Rolls back current transaction
-     */
-    rollback(): Promise<void>;
-    /**
-     * Starts transaction and creates a savepoint
-     * @param name {string} - Name of the savepoint
-     */
-    savepoint(name: string): Promise<void>;
-    /**
-     * Rolls back current transaction to given savepoint
-     * @param name {string} - Name of the savepoint
-     */
-    rollbackToSavepoint(name: string): Promise<void>;
-    /**
-     * Releases savepoint
-     * @param name {string} - Name of the savepoint
-     */
-    releaseSavepoint(name: string): Promise<void>;
-    listen(channel: string, callback: NotificationCallback): Promise<void>;
-    unListen(channel: string): Promise<void>;
-    unListenAll(): Promise<void>;
-    protected _handleNotification(msg: NotificationMessage): void;
-    protected _close(): Promise<void>;
-    protected _handleError(err: DatabaseError, script: string): DatabaseError;
-    protected _captureErrorStack<T>(promise: Promise<T>): Promise<T>;
-    [Symbol.asyncDispose](): Promise<void>;
-}
Index: node_modules/postgresql-client/cjs/connection/connection.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/connection/connection.js b/node_modules/postgresql-client/cjs/connection/connection.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/connection/connection.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,279 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.Connection = void 0;
-const constants_js_1 = require("../constants.js");
-const data_type_map_js_1 = require("../data-type-map.js");
-const safe_event_emitter_js_1 = require("../safe-event-emitter.js");
-const bind_param_js_1 = require("./bind-param.js");
-const intl_connection_js_1 = require("./intl-connection.js");
-const prepared_statement_js_1 = require("./prepared-statement.js");
-class Connection extends safe_event_emitter_js_1.SafeEventEmitter {
-    constructor(arg0, arg1) {
-        super();
-        this._notificationListeners = new safe_event_emitter_js_1.SafeEventEmitter();
-        this._closing = false;
-        if (arg0 && typeof arg0 === 'object' && typeof arg0.acquire === 'function') {
-            if (!(arg1 instanceof intl_connection_js_1.IntlConnection))
-                throw new TypeError('Invalid argument');
-            this._pool = arg0;
-            this._intlCon = arg1;
-        }
-        else {
-            this._intlCon = new intl_connection_js_1.IntlConnection(arg0);
-        }
-        this._intlCon.on('ready', (...args) => this.emit('ready', ...args));
-        this._intlCon.on('error', (...args) => this.emit('error', ...args));
-        this._intlCon.on('close', (...args) => this.emit('close', ...args));
-        this._intlCon.on('connecting', (...args) => this.emit('connecting', ...args));
-        this._intlCon.on('ready', (...args) => this.emit('ready', ...args));
-        this._intlCon.on('terminate', (...args) => this.emit('terminate', ...args));
-        this._intlCon.on('notification', (msg) => this._handleNotification(msg));
-    }
-    /**
-     * Returns configuration object
-     */
-    get config() {
-        return this._intlCon.config;
-    }
-    /**
-     * Returns true if connection is in a transaction
-     */
-    get inTransaction() {
-        return this._intlCon.inTransaction;
-    }
-    /**
-     * Returns current state of the connection
-     */
-    get state() {
-        return this._intlCon.state;
-    }
-    /**
-     * Returns processId of current session
-     */
-    get processID() {
-        return this._intlCon.processID;
-    }
-    /**
-     * Returns information parameters for current session
-     */
-    get sessionParameters() {
-        return this._intlCon.sessionParameters;
-    }
-    /**
-     * Returns secret key of current session
-     */
-    get secretKey() {
-        return this._intlCon.secretKey;
-    }
-    /**
-     * Connects to the server
-     */
-    async connect() {
-        await this._captureErrorStack(this._intlCon.connect());
-        if (this.state === constants_js_1.ConnectionState.READY)
-            this._closing = false;
-    }
-    /**
-     * Closes connection. You can define how long time the connection will
-     * wait for active queries before terminating the connection.
-     * On the end of the given time, it forces to close the socket and than emits `terminate` event.
-     *
-     * @param terminateWait {number} - Determines how long the connection will wait for active queries before terminating.
-     */
-    async close(terminateWait) {
-        this._notificationListeners.removeAllListeners();
-        this._intlCon.statementQueue.clearQueue();
-        if (this.state === constants_js_1.ConnectionState.CLOSED || this._closing)
-            return;
-        /* istanbul ignore next */
-        if (this.listenerCount('debug'))
-            this.emit('debug', {
-                location: 'Connection.close',
-                connection: this,
-                message: `[${this.processID}] closing`,
-            });
-        this._closing = true;
-        if (this._intlCon.refCount > 0 && typeof terminateWait === 'number' && terminateWait > 0) {
-            const startTime = Date.now();
-            return this._captureErrorStack(new Promise((resolve, reject) => {
-                /* istanbul ignore next */
-                if (this.listenerCount('debug'))
-                    this.emit('debug', {
-                        location: 'Connection.close',
-                        connection: this,
-                        message: `[${this.processID}] waiting active queries`,
-                    });
-                const timer = setInterval(() => {
-                    if (this._intlCon.refCount <= 0 || Date.now() > startTime + terminateWait) {
-                        clearInterval(timer);
-                        if (this._intlCon.refCount > 0) {
-                            /* istanbul ignore next */
-                            if (this.listenerCount('debug'))
-                                this.emit('debug', {
-                                    location: 'Connection.close',
-                                    connection: this,
-                                    message: `[${this.processID}] terminate`,
-                                });
-                            this.emit('terminate');
-                        }
-                        this._close().then(resolve).catch(reject);
-                    }
-                }, 50);
-            }));
-        }
-        await this._close();
-    }
-    /**
-     * Executes single or multiple SQL scripts using Simple Query protocol.
-     *
-     * @param sql {string} - SQL script that will be executed
-     * @param options {ScriptExecuteOptions} - Execute options
-     */
-    async execute(sql, options) {
-        return this._captureErrorStack(this._intlCon.execute(sql, options)).catch((e) => {
-            throw this._handleError(e, sql);
-        });
-    }
-    async query(sql, options) {
-        this._intlCon.assertConnected();
-        /* istanbul ignore next */
-        if (this.listenerCount('debug'))
-            this.emit('debug', {
-                location: 'Connection.query',
-                connection: this,
-                message: `[${this.processID}] query | ${sql}`,
-                sql,
-            });
-        const typeMap = options?.typeMap || data_type_map_js_1.GlobalTypeMap;
-        const paramTypes = options?.params?.map(prm => prm instanceof bind_param_js_1.BindParam ? prm.oid : typeMap.determine(prm));
-        const statement = await this.prepare(sql, { paramTypes, typeMap }).catch((e) => {
-            throw this._handleError(e, sql);
-        });
-        try {
-            const params = options?.params?.map(prm => (prm instanceof bind_param_js_1.BindParam ? prm.value : prm));
-            return await this._captureErrorStack(statement.execute({ ...options, params }));
-        }
-        finally {
-            await statement.close();
-        }
-    }
-    /**
-     * Creates a PreparedStatement instance
-     * @param sql {string} - SQL script that will be executed
-     * @param options {StatementPrepareOptions} - Options
-     */
-    async prepare(sql, options) {
-        /* istanbul ignore next */
-        if (this.listenerCount('debug'))
-            this.emit('debug', {
-                location: 'Connection.prepare',
-                connection: this,
-                message: `[${this.processID}] prepare | ${sql}`,
-                sql,
-            });
-        return await this._captureErrorStack(prepared_statement_js_1.PreparedStatement.prepare(this, sql, options));
-    }
-    /**
-     * Starts a transaction
-     */
-    startTransaction() {
-        return this._captureErrorStack(this._intlCon.startTransaction());
-    }
-    /**
-     * Commits current transaction
-     */
-    commit() {
-        return this._captureErrorStack(this._intlCon.commit());
-    }
-    /**
-     * Rolls back current transaction
-     */
-    rollback() {
-        return this._captureErrorStack(this._intlCon.rollback());
-    }
-    /**
-     * Starts transaction and creates a savepoint
-     * @param name {string} - Name of the savepoint
-     */
-    async savepoint(name) {
-        if (!this._intlCon.inTransaction)
-            await this._intlCon.startTransaction();
-        return this._captureErrorStack(this._intlCon.savepoint(name));
-    }
-    /**
-     * Rolls back current transaction to given savepoint
-     * @param name {string} - Name of the savepoint
-     */
-    rollbackToSavepoint(name) {
-        return this._captureErrorStack(this._intlCon.rollbackToSavepoint(name));
-    }
-    /**
-     * Releases savepoint
-     * @param name {string} - Name of the savepoint
-     */
-    releaseSavepoint(name) {
-        return this._captureErrorStack(this._intlCon.releaseSavepoint(name));
-    }
-    async listen(channel, callback) {
-        if (!/^[A-Z]\w+$/i.test(channel))
-            throw new TypeError(`Invalid channel name`);
-        const registered = !!this._notificationListeners.eventNames().length;
-        this._notificationListeners.on(channel, callback);
-        if (!registered)
-            await this._captureErrorStack(this.query('LISTEN ' + channel));
-    }
-    async unListen(channel) {
-        if (!/^[A-Z]\w+$/i.test(channel))
-            throw new TypeError(`Invalid channel name`);
-        this._notificationListeners.removeAllListeners(channel);
-        await this._captureErrorStack(this.query('UNLISTEN ' + channel));
-    }
-    async unListenAll() {
-        this._notificationListeners.removeAllListeners();
-        await this._captureErrorStack(this.query('UNLISTEN *'));
-    }
-    _handleNotification(msg) {
-        this.emit('notification', msg);
-        this._notificationListeners.emit(msg.channel, msg);
-    }
-    async _close() {
-        if (this._pool) {
-            await this._captureErrorStack(this._pool.release(this));
-            this.emit('release');
-        }
-        else
-            await this._captureErrorStack(this._intlCon.close());
-        this._closing = false;
-    }
-    _handleError(err, script) {
-        if (err.position) {
-            const i1 = script.lastIndexOf('\n', err.position) + 1;
-            let i2 = script.indexOf('\n', err.position);
-            if (i2 < 0)
-                i2 = Number.MAX_SAFE_INTEGER;
-            err.line = script.substring(i1, i2);
-            err.lineNr = [...script.substring(0, i1).matchAll(/\n/g)].length;
-            err.colNr = err.position - i1;
-            err.message +=
-                `\nAt line ${err.lineNr} column ${err.colNr}` +
-                    `\n |  ${err.line}\n |  ${' '.repeat(Math.max(err.colNr - 2, 0))}-^-`;
-        }
-        return err;
-    }
-    async _captureErrorStack(promise) {
-        const stack = new Error().stack;
-        return promise.catch(e => {
-            if (e instanceof Error && stack) {
-                e.stack = stack
-                    .split('\n')
-                    .filter(x => !x.includes('Connection._captureErrorStack'))
-                    .join('\n');
-            }
-            throw e;
-        });
-    }
-    [Symbol.asyncDispose]() {
-        return this.close();
-    }
-}
-exports.Connection = Connection;
Index: node_modules/postgresql-client/esm/connection/connection.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/connection/connection.js b/node_modules/postgresql-client/esm/connection/connection.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/connection/connection.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,275 +0,0 @@
-import { ConnectionState } from '../constants.js';
-import { GlobalTypeMap } from '../data-type-map.js';
-import { SafeEventEmitter } from '../safe-event-emitter.js';
-import { BindParam } from './bind-param.js';
-import { IntlConnection } from './intl-connection.js';
-import { PreparedStatement } from './prepared-statement.js';
-export class Connection extends SafeEventEmitter {
-    constructor(arg0, arg1) {
-        super();
-        this._notificationListeners = new SafeEventEmitter();
-        this._closing = false;
-        if (arg0 && typeof arg0 === 'object' && typeof arg0.acquire === 'function') {
-            if (!(arg1 instanceof IntlConnection))
-                throw new TypeError('Invalid argument');
-            this._pool = arg0;
-            this._intlCon = arg1;
-        }
-        else {
-            this._intlCon = new IntlConnection(arg0);
-        }
-        this._intlCon.on('ready', (...args) => this.emit('ready', ...args));
-        this._intlCon.on('error', (...args) => this.emit('error', ...args));
-        this._intlCon.on('close', (...args) => this.emit('close', ...args));
-        this._intlCon.on('connecting', (...args) => this.emit('connecting', ...args));
-        this._intlCon.on('ready', (...args) => this.emit('ready', ...args));
-        this._intlCon.on('terminate', (...args) => this.emit('terminate', ...args));
-        this._intlCon.on('notification', (msg) => this._handleNotification(msg));
-    }
-    /**
-     * Returns configuration object
-     */
-    get config() {
-        return this._intlCon.config;
-    }
-    /**
-     * Returns true if connection is in a transaction
-     */
-    get inTransaction() {
-        return this._intlCon.inTransaction;
-    }
-    /**
-     * Returns current state of the connection
-     */
-    get state() {
-        return this._intlCon.state;
-    }
-    /**
-     * Returns processId of current session
-     */
-    get processID() {
-        return this._intlCon.processID;
-    }
-    /**
-     * Returns information parameters for current session
-     */
-    get sessionParameters() {
-        return this._intlCon.sessionParameters;
-    }
-    /**
-     * Returns secret key of current session
-     */
-    get secretKey() {
-        return this._intlCon.secretKey;
-    }
-    /**
-     * Connects to the server
-     */
-    async connect() {
-        await this._captureErrorStack(this._intlCon.connect());
-        if (this.state === ConnectionState.READY)
-            this._closing = false;
-    }
-    /**
-     * Closes connection. You can define how long time the connection will
-     * wait for active queries before terminating the connection.
-     * On the end of the given time, it forces to close the socket and than emits `terminate` event.
-     *
-     * @param terminateWait {number} - Determines how long the connection will wait for active queries before terminating.
-     */
-    async close(terminateWait) {
-        this._notificationListeners.removeAllListeners();
-        this._intlCon.statementQueue.clearQueue();
-        if (this.state === ConnectionState.CLOSED || this._closing)
-            return;
-        /* istanbul ignore next */
-        if (this.listenerCount('debug'))
-            this.emit('debug', {
-                location: 'Connection.close',
-                connection: this,
-                message: `[${this.processID}] closing`,
-            });
-        this._closing = true;
-        if (this._intlCon.refCount > 0 && typeof terminateWait === 'number' && terminateWait > 0) {
-            const startTime = Date.now();
-            return this._captureErrorStack(new Promise((resolve, reject) => {
-                /* istanbul ignore next */
-                if (this.listenerCount('debug'))
-                    this.emit('debug', {
-                        location: 'Connection.close',
-                        connection: this,
-                        message: `[${this.processID}] waiting active queries`,
-                    });
-                const timer = setInterval(() => {
-                    if (this._intlCon.refCount <= 0 || Date.now() > startTime + terminateWait) {
-                        clearInterval(timer);
-                        if (this._intlCon.refCount > 0) {
-                            /* istanbul ignore next */
-                            if (this.listenerCount('debug'))
-                                this.emit('debug', {
-                                    location: 'Connection.close',
-                                    connection: this,
-                                    message: `[${this.processID}] terminate`,
-                                });
-                            this.emit('terminate');
-                        }
-                        this._close().then(resolve).catch(reject);
-                    }
-                }, 50);
-            }));
-        }
-        await this._close();
-    }
-    /**
-     * Executes single or multiple SQL scripts using Simple Query protocol.
-     *
-     * @param sql {string} - SQL script that will be executed
-     * @param options {ScriptExecuteOptions} - Execute options
-     */
-    async execute(sql, options) {
-        return this._captureErrorStack(this._intlCon.execute(sql, options)).catch((e) => {
-            throw this._handleError(e, sql);
-        });
-    }
-    async query(sql, options) {
-        this._intlCon.assertConnected();
-        /* istanbul ignore next */
-        if (this.listenerCount('debug'))
-            this.emit('debug', {
-                location: 'Connection.query',
-                connection: this,
-                message: `[${this.processID}] query | ${sql}`,
-                sql,
-            });
-        const typeMap = options?.typeMap || GlobalTypeMap;
-        const paramTypes = options?.params?.map(prm => prm instanceof BindParam ? prm.oid : typeMap.determine(prm));
-        const statement = await this.prepare(sql, { paramTypes, typeMap }).catch((e) => {
-            throw this._handleError(e, sql);
-        });
-        try {
-            const params = options?.params?.map(prm => (prm instanceof BindParam ? prm.value : prm));
-            return await this._captureErrorStack(statement.execute({ ...options, params }));
-        }
-        finally {
-            await statement.close();
-        }
-    }
-    /**
-     * Creates a PreparedStatement instance
-     * @param sql {string} - SQL script that will be executed
-     * @param options {StatementPrepareOptions} - Options
-     */
-    async prepare(sql, options) {
-        /* istanbul ignore next */
-        if (this.listenerCount('debug'))
-            this.emit('debug', {
-                location: 'Connection.prepare',
-                connection: this,
-                message: `[${this.processID}] prepare | ${sql}`,
-                sql,
-            });
-        return await this._captureErrorStack(PreparedStatement.prepare(this, sql, options));
-    }
-    /**
-     * Starts a transaction
-     */
-    startTransaction() {
-        return this._captureErrorStack(this._intlCon.startTransaction());
-    }
-    /**
-     * Commits current transaction
-     */
-    commit() {
-        return this._captureErrorStack(this._intlCon.commit());
-    }
-    /**
-     * Rolls back current transaction
-     */
-    rollback() {
-        return this._captureErrorStack(this._intlCon.rollback());
-    }
-    /**
-     * Starts transaction and creates a savepoint
-     * @param name {string} - Name of the savepoint
-     */
-    async savepoint(name) {
-        if (!this._intlCon.inTransaction)
-            await this._intlCon.startTransaction();
-        return this._captureErrorStack(this._intlCon.savepoint(name));
-    }
-    /**
-     * Rolls back current transaction to given savepoint
-     * @param name {string} - Name of the savepoint
-     */
-    rollbackToSavepoint(name) {
-        return this._captureErrorStack(this._intlCon.rollbackToSavepoint(name));
-    }
-    /**
-     * Releases savepoint
-     * @param name {string} - Name of the savepoint
-     */
-    releaseSavepoint(name) {
-        return this._captureErrorStack(this._intlCon.releaseSavepoint(name));
-    }
-    async listen(channel, callback) {
-        if (!/^[A-Z]\w+$/i.test(channel))
-            throw new TypeError(`Invalid channel name`);
-        const registered = !!this._notificationListeners.eventNames().length;
-        this._notificationListeners.on(channel, callback);
-        if (!registered)
-            await this._captureErrorStack(this.query('LISTEN ' + channel));
-    }
-    async unListen(channel) {
-        if (!/^[A-Z]\w+$/i.test(channel))
-            throw new TypeError(`Invalid channel name`);
-        this._notificationListeners.removeAllListeners(channel);
-        await this._captureErrorStack(this.query('UNLISTEN ' + channel));
-    }
-    async unListenAll() {
-        this._notificationListeners.removeAllListeners();
-        await this._captureErrorStack(this.query('UNLISTEN *'));
-    }
-    _handleNotification(msg) {
-        this.emit('notification', msg);
-        this._notificationListeners.emit(msg.channel, msg);
-    }
-    async _close() {
-        if (this._pool) {
-            await this._captureErrorStack(this._pool.release(this));
-            this.emit('release');
-        }
-        else
-            await this._captureErrorStack(this._intlCon.close());
-        this._closing = false;
-    }
-    _handleError(err, script) {
-        if (err.position) {
-            const i1 = script.lastIndexOf('\n', err.position) + 1;
-            let i2 = script.indexOf('\n', err.position);
-            if (i2 < 0)
-                i2 = Number.MAX_SAFE_INTEGER;
-            err.line = script.substring(i1, i2);
-            err.lineNr = [...script.substring(0, i1).matchAll(/\n/g)].length;
-            err.colNr = err.position - i1;
-            err.message +=
-                `\nAt line ${err.lineNr} column ${err.colNr}` +
-                    `\n |  ${err.line}\n |  ${' '.repeat(Math.max(err.colNr - 2, 0))}-^-`;
-        }
-        return err;
-    }
-    async _captureErrorStack(promise) {
-        const stack = new Error().stack;
-        return promise.catch(e => {
-            if (e instanceof Error && stack) {
-                e.stack = stack
-                    .split('\n')
-                    .filter(x => !x.includes('Connection._captureErrorStack'))
-                    .join('\n');
-            }
-            throw e;
-        });
-    }
-    [Symbol.asyncDispose]() {
-        return this.close();
-    }
-}
Index: node_modules/postgresql-client/typings/util/connection-config.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/util/connection-config.d.ts b/node_modules/postgresql-client/typings/util/connection-config.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/util/connection-config.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { ConnectionConfiguration } from '../interfaces/database-connection-params.js';
-export declare function getConnectionConfig(config?: ConnectionConfiguration | string): ConnectionConfiguration;
-export declare function parseConnectionString(str: string): ConnectionConfiguration;
Index: node_modules/postgresql-client/cjs/util/connection-config.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/util/connection-config.js b/node_modules/postgresql-client/cjs/util/connection-config.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/util/connection-config.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,65 +0,0 @@
-"use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.parseConnectionString = exports.getConnectionConfig = void 0;
-const putil_merge_1 = __importDefault(require("putil-merge"));
-const config_from_env_js_1 = require("./config-from-env.js");
-function getConnectionConfig(config) {
-    const cfg = (0, config_from_env_js_1.configFromEnv)();
-    if (typeof config === 'string') {
-        (0, putil_merge_1.default)(cfg, parseConnectionString(config));
-    }
-    else if (typeof config === 'object') {
-        (0, putil_merge_1.default)(cfg, config);
-    }
-    if (cfg.host) {
-        const x = parseConnectionString('' + cfg.host);
-        (0, putil_merge_1.default)(cfg, x);
-    }
-    cfg.user = cfg.user || 'postgres';
-    cfg.database = cfg.database || 'postgres';
-    cfg.host = cfg.host || '127.0.0.1';
-    return cfg;
-}
-exports.getConnectionConfig = getConnectionConfig;
-function parseConnectionString(str) {
-    if (str.startsWith('/'))
-        str = 'socket:/' + str;
-    if (!str.includes('://'))
-        str = 'postgres://' + str;
-    const parsed = new URL(str);
-    const getFirst = (v) => {
-        return typeof v === 'string' ? v : Array.isArray(v) ? v[0] : '';
-    };
-    const cfg = {};
-    cfg.host = decodeURI(parsed.hostname || '');
-    if (parsed.port)
-        cfg.port = parseInt(parsed.port, 10);
-    if (parsed.protocol === 'socket:' || parsed.protocol === 'unix:') {
-        if (!cfg.host.startsWith('/'))
-            cfg.host = '/' + cfg.host;
-        cfg.host += decodeURI(parsed.pathname || '');
-        if (parsed.searchParams.get('db'))
-            cfg.database = decodeURI(getFirst(parsed.searchParams.get('db')));
-    }
-    else if (parsed.protocol === 'pg:' || parsed.protocol === 'postgres:') {
-        if (parsed.pathname)
-            cfg.database = decodeURI(parsed.pathname.substring(1));
-    }
-    if (parsed.searchParams.get('host'))
-        cfg.host = decodeURI(getFirst(parsed.searchParams.get('host')));
-    if (parsed.searchParams.get('db'))
-        cfg.database = decodeURI(getFirst(parsed.searchParams.get('db')));
-    if (parsed.searchParams.get('schema'))
-        cfg.schema = decodeURI(getFirst(parsed.searchParams.get('schema')));
-    if (parsed.searchParams.get('application_name'))
-        cfg.applicationName = decodeURI(getFirst(parsed.searchParams.get('application_name')));
-    if (parsed.username)
-        cfg.user = parsed.username;
-    if (parsed.password)
-        cfg.password = parsed.password;
-    return cfg;
-}
-exports.parseConnectionString = parseConnectionString;
Index: node_modules/postgresql-client/esm/util/connection-config.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/util/connection-config.js b/node_modules/postgresql-client/esm/util/connection-config.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/util/connection-config.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,57 +0,0 @@
-import merge from 'putil-merge';
-import { configFromEnv } from './config-from-env.js';
-export function getConnectionConfig(config) {
-    const cfg = configFromEnv();
-    if (typeof config === 'string') {
-        merge(cfg, parseConnectionString(config));
-    }
-    else if (typeof config === 'object') {
-        merge(cfg, config);
-    }
-    if (cfg.host) {
-        const x = parseConnectionString('' + cfg.host);
-        merge(cfg, x);
-    }
-    cfg.user = cfg.user || 'postgres';
-    cfg.database = cfg.database || 'postgres';
-    cfg.host = cfg.host || '127.0.0.1';
-    return cfg;
-}
-export function parseConnectionString(str) {
-    if (str.startsWith('/'))
-        str = 'socket:/' + str;
-    if (!str.includes('://'))
-        str = 'postgres://' + str;
-    const parsed = new URL(str);
-    const getFirst = (v) => {
-        return typeof v === 'string' ? v : Array.isArray(v) ? v[0] : '';
-    };
-    const cfg = {};
-    cfg.host = decodeURI(parsed.hostname || '');
-    if (parsed.port)
-        cfg.port = parseInt(parsed.port, 10);
-    if (parsed.protocol === 'socket:' || parsed.protocol === 'unix:') {
-        if (!cfg.host.startsWith('/'))
-            cfg.host = '/' + cfg.host;
-        cfg.host += decodeURI(parsed.pathname || '');
-        if (parsed.searchParams.get('db'))
-            cfg.database = decodeURI(getFirst(parsed.searchParams.get('db')));
-    }
-    else if (parsed.protocol === 'pg:' || parsed.protocol === 'postgres:') {
-        if (parsed.pathname)
-            cfg.database = decodeURI(parsed.pathname.substring(1));
-    }
-    if (parsed.searchParams.get('host'))
-        cfg.host = decodeURI(getFirst(parsed.searchParams.get('host')));
-    if (parsed.searchParams.get('db'))
-        cfg.database = decodeURI(getFirst(parsed.searchParams.get('db')));
-    if (parsed.searchParams.get('schema'))
-        cfg.schema = decodeURI(getFirst(parsed.searchParams.get('schema')));
-    if (parsed.searchParams.get('application_name'))
-        cfg.applicationName = decodeURI(getFirst(parsed.searchParams.get('application_name')));
-    if (parsed.username)
-        cfg.user = parsed.username;
-    if (parsed.password)
-        cfg.password = parsed.password;
-    return cfg;
-}
Index: node_modules/pg-pool/test/connection-strings.js
===================================================================
diff --git a/node_modules/pg-pool/test/connection-strings.js b/node_modules/pg-pool/test/connection-strings.js
deleted file mode 100644
--- a/node_modules/pg-pool/test/connection-strings.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,29 +0,0 @@
-const expect = require('expect.js')
-const describe = require('mocha').describe
-const it = require('mocha').it
-const Pool = require('../')
-
-describe('Connection strings', function () {
-  it('pool delegates connectionString property to client', function (done) {
-    const connectionString = 'postgres://foo:bar@baz:1234/xur'
-
-    const pool = new Pool({
-      // use a fake client so we can check we're passed the connectionString
-      Client: function (args) {
-        expect(args.connectionString).to.equal(connectionString)
-        return {
-          connect: function (cb) {
-            cb(new Error('testing'))
-          },
-          on: function () {},
-        }
-      },
-      connectionString: connectionString,
-    })
-
-    pool.connect(function (err, client) {
-      expect(err).to.not.be(undefined)
-      done()
-    })
-  })
-})
Index: node_modules/pg-pool/test/connection-timeout.js
===================================================================
diff --git a/node_modules/pg-pool/test/connection-timeout.js b/node_modules/pg-pool/test/connection-timeout.js
deleted file mode 100644
--- a/node_modules/pg-pool/test/connection-timeout.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,229 +0,0 @@
-'use strict'
-const net = require('net')
-const co = require('co')
-const expect = require('expect.js')
-
-const describe = require('mocha').describe
-const it = require('mocha').it
-const before = require('mocha').before
-const after = require('mocha').after
-
-const Pool = require('../')
-
-describe('connection timeout', () => {
-  const connectionFailure = new Error('Temporary connection failure')
-
-  before((done) => {
-    this.server = net.createServer((socket) => {
-      socket.on('data', () => {
-        // discard any buffered data or the server wont terminate
-      })
-    })
-
-    this.server.listen(() => {
-      this.port = this.server.address().port
-      done()
-    })
-  })
-
-  after((done) => {
-    this.server.close(done)
-  })
-
-  it('should callback with an error if timeout is passed', (done) => {
-    const pool = new Pool({ connectionTimeoutMillis: 10, port: this.port, host: 'localhost' })
-    pool.connect((err, client, release) => {
-      expect(err).to.be.an(Error)
-      expect(err.message).to.contain('timeout')
-      expect(client).to.equal(undefined)
-      expect(pool.idleCount).to.equal(0)
-      done()
-    })
-  })
-
-  it('should reject promise with an error if timeout is passed', (done) => {
-    const pool = new Pool({ connectionTimeoutMillis: 10, port: this.port, host: 'localhost' })
-    pool.connect().catch((err) => {
-      expect(err).to.be.an(Error)
-      expect(err.message).to.contain('timeout')
-      expect(pool.idleCount).to.equal(0)
-      done()
-    })
-  })
-
-  it(
-    'should handle multiple timeouts',
-    co.wrap(
-      function* () {
-        const errors = []
-        const pool = new Pool({ connectionTimeoutMillis: 1, port: this.port, host: 'localhost' })
-        for (var i = 0; i < 15; i++) {
-          try {
-            yield pool.connect()
-          } catch (e) {
-            errors.push(e)
-          }
-        }
-        expect(errors).to.have.length(15)
-      }.bind(this)
-    )
-  )
-
-  it('should timeout on checkout of used connection', (done) => {
-    const pool = new Pool({ connectionTimeoutMillis: 100, max: 1 })
-    pool.connect((err, client, release) => {
-      expect(err).to.be(undefined)
-      expect(client).to.not.be(undefined)
-      pool.connect((err, client) => {
-        expect(err).to.be.an(Error)
-        expect(client).to.be(undefined)
-        release()
-        pool.end(done)
-      })
-    })
-  })
-
-  it('should not break further pending checkouts on a timeout', (done) => {
-    const pool = new Pool({ connectionTimeoutMillis: 200, max: 1 })
-    pool.connect((err, client, releaseOuter) => {
-      expect(err).to.be(undefined)
-
-      pool.connect((err, client) => {
-        expect(err).to.be.an(Error)
-        expect(client).to.be(undefined)
-        releaseOuter()
-      })
-
-      setTimeout(() => {
-        pool.connect((err, client, releaseInner) => {
-          expect(err).to.be(undefined)
-          expect(client).to.not.be(undefined)
-          releaseInner()
-          pool.end(done)
-        })
-      }, 100)
-    })
-  })
-
-  it('should timeout on query if all clients are busy', (done) => {
-    const pool = new Pool({ connectionTimeoutMillis: 100, max: 1 })
-    pool.connect((err, client, release) => {
-      expect(err).to.be(undefined)
-      expect(client).to.not.be(undefined)
-      pool.query('select now()', (err, result) => {
-        expect(err).to.be.an(Error)
-        expect(result).to.be(undefined)
-        release()
-        pool.end(done)
-      })
-    })
-  })
-
-  it('should recover from timeout errors', (done) => {
-    const pool = new Pool({ connectionTimeoutMillis: 100, max: 1 })
-    pool.connect((err, client, release) => {
-      expect(err).to.be(undefined)
-      expect(client).to.not.be(undefined)
-      pool.query('select now()', (err, result) => {
-        expect(err).to.be.an(Error)
-        expect(result).to.be(undefined)
-        release()
-        pool.query('select $1::text as name', ['brianc'], (err, res) => {
-          expect(err).to.be(undefined)
-          expect(res.rows).to.have.length(1)
-          pool.end(done)
-        })
-      })
-    })
-  })
-
-  it('continues processing after a connection failure', (done) => {
-    const Client = require('pg').Client
-    const orgConnect = Client.prototype.connect
-    let called = false
-
-    Client.prototype.connect = function (cb) {
-      // Simulate a failure on first call
-      if (!called) {
-        called = true
-
-        return setTimeout(() => {
-          cb(connectionFailure)
-        }, 100)
-      }
-      // And pass-through the second call
-      orgConnect.call(this, cb)
-    }
-
-    const pool = new Pool({
-      Client: Client,
-      connectionTimeoutMillis: 1000,
-      max: 1,
-    })
-
-    pool.connect((err, client, release) => {
-      expect(err).to.be(connectionFailure)
-
-      pool.query('select $1::text as name', ['brianc'], (err, res) => {
-        expect(err).to.be(undefined)
-        expect(res.rows).to.have.length(1)
-        pool.end(done)
-      })
-    })
-  })
-
-  it('releases newly connected clients if the queued already timed out', (done) => {
-    const Client = require('pg').Client
-
-    const orgConnect = Client.prototype.connect
-
-    let connection = 0
-
-    Client.prototype.connect = function (cb) {
-      // Simulate a failure on first call
-      if (connection === 0) {
-        connection++
-
-        return setTimeout(() => {
-          cb(connectionFailure)
-        }, 300)
-      }
-
-      // And second connect taking > connection timeout
-      if (connection === 1) {
-        connection++
-
-        return setTimeout(() => {
-          orgConnect.call(this, cb)
-        }, 1000)
-      }
-
-      orgConnect.call(this, cb)
-    }
-
-    const pool = new Pool({
-      Client: Client,
-      connectionTimeoutMillis: 1000,
-      max: 1,
-    })
-
-    // Direct connect
-    pool.connect((err, client, release) => {
-      expect(err).to.be(connectionFailure)
-    })
-
-    // Queued
-    let called = 0
-    pool.connect((err, client, release) => {
-      // Verify the callback is only called once
-      expect(called++).to.be(0)
-      expect(err).to.be.an(Error)
-
-      pool.query('select $1::text as name', ['brianc'], (err, res) => {
-        expect(err).to.be(undefined)
-        expect(res.rows).to.have.length(1)
-        pool.end(done)
-      })
-    })
-  })
-})
Index: node_modules/postgresql-client/typings/constants.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/constants.d.ts b/node_modules/postgresql-client/typings/constants.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/constants.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,130 +0,0 @@
-import { Protocol } from './protocol/protocol.js';
-import DataFormat = Protocol.DataFormat;
-export { DataFormat };
-export declare const DEFAULT_COLUMN_FORMAT = DataFormat.binary;
-export declare enum ConnectionState {
-    CLOSED = 0,
-    CONNECTING = 1,
-    AUTHORIZING = 3,
-    READY = 2,
-    CLOSING = 10
-}
-export declare const DataTypeOIDs: {
-    bool: number;
-    bytea: number;
-    char: number;
-    name: number;
-    int8: number;
-    int2: number;
-    int2vector: number;
-    int4: number;
-    regproc: number;
-    text: number;
-    oid: number;
-    tid: number;
-    xid: number;
-    cid: number;
-    oidvector: number;
-    json: number;
-    xml: number;
-    point: number;
-    lseg: number;
-    path: number;
-    box: number;
-    polygon: number;
-    line: number;
-    cidr: number;
-    float4: number;
-    float8: number;
-    unknown: number;
-    circle: number;
-    macaddr8: number;
-    money: number;
-    macaddr: number;
-    inet: number;
-    bpchar: number;
-    varchar: number;
-    date: number;
-    time: number;
-    timestamp: number;
-    timestamptz: number;
-    interval: number;
-    timetz: number;
-    bit: number;
-    varbit: number;
-    numeric: number;
-    refcursor: number;
-    regprocedure: number;
-    regoper: number;
-    regoperator: number;
-    regclass: number;
-    regtype: number;
-    record: number;
-    cstring: number;
-    any: number;
-    anyarray: number;
-    void: number;
-    trigger: number;
-    language_handler: number;
-    internal: number;
-    anyelement: number;
-    anynonarray: number;
-    uuid: number;
-    jsonb: number;
-    anyrange: number;
-    int4range: number;
-    numrange: number;
-    tsrange: number;
-    rstzrange: number;
-    daterange: number;
-    int8range: number;
-    _xml: number;
-    _json: number;
-    _xid8: number;
-    _line: number;
-    _cidr: number;
-    _circle: number;
-    _macaddr8: number;
-    _money: number;
-    _bool: number;
-    _bytea: number;
-    _char: number;
-    _name: number;
-    _int2: number;
-    _int2vector: number;
-    _int4: number;
-    _regproc: number;
-    _text: number;
-    _tid: number;
-    _xid: number;
-    _cid: number;
-    _oidvector: number;
-    _bpchar: number;
-    _varchar: number;
-    _int8: number;
-    _point: number;
-    _lseg: number;
-    _path: number;
-    _box: number;
-    _float4: number;
-    _float8: number;
-    _polygon: number;
-    _oid: number;
-    _macaddr: number;
-    _inet: number;
-    _timestamp: number;
-    _date: number;
-    _time: number;
-    _timestamptz: number;
-    _interval: number;
-    _numeric: number;
-    _cstring: number;
-    _timetz: number;
-    _bit: number;
-    _varbit: number;
-    _uuid: number;
-    _jsonb: number;
-};
-export declare const DataTypeNames: {
-    [x: number]: string;
-};
Index: node_modules/postgresql-client/cjs/constants.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/constants.js b/node_modules/postgresql-client/cjs/constants.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/constants.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,250 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.DataTypeNames = exports.DataTypeOIDs = exports.ConnectionState = exports.DEFAULT_COLUMN_FORMAT = exports.DataFormat = void 0;
-const protocol_js_1 = require("./protocol/protocol.js");
-var DataFormat = protocol_js_1.Protocol.DataFormat;
-exports.DataFormat = DataFormat;
-// @ts-ignore
-Symbol.asyncDispose ?? (Symbol.asyncDispose = Symbol('Symbol.asyncDispose'));
-exports.DEFAULT_COLUMN_FORMAT = DataFormat.binary;
-var ConnectionState;
-(function (ConnectionState) {
-    ConnectionState[ConnectionState["CLOSED"] = 0] = "CLOSED";
-    ConnectionState[ConnectionState["CONNECTING"] = 1] = "CONNECTING";
-    ConnectionState[ConnectionState["AUTHORIZING"] = 3] = "AUTHORIZING";
-    ConnectionState[ConnectionState["READY"] = 2] = "READY";
-    ConnectionState[ConnectionState["CLOSING"] = 10] = "CLOSING";
-})(ConnectionState || (exports.ConnectionState = ConnectionState = {}));
-exports.DataTypeOIDs = {
-    bool: 16,
-    bytea: 17,
-    char: 18,
-    name: 19,
-    int8: 20,
-    int2: 21,
-    int2vector: 22,
-    int4: 23,
-    regproc: 24,
-    text: 25,
-    oid: 26,
-    tid: 27,
-    xid: 28,
-    cid: 29,
-    oidvector: 30,
-    json: 114,
-    xml: 142,
-    point: 600,
-    lseg: 601,
-    path: 602,
-    box: 603,
-    polygon: 604,
-    line: 628,
-    cidr: 650,
-    float4: 700,
-    float8: 701,
-    unknown: 705,
-    circle: 718,
-    macaddr8: 774,
-    money: 790,
-    macaddr: 829,
-    inet: 869,
-    bpchar: 1042,
-    varchar: 1043,
-    date: 1082,
-    time: 1083,
-    timestamp: 1114,
-    timestamptz: 1184,
-    interval: 1186,
-    timetz: 1266,
-    bit: 1560,
-    varbit: 1562,
-    numeric: 1700,
-    refcursor: 1790,
-    regprocedure: 2202,
-    regoper: 2203,
-    regoperator: 2204,
-    regclass: 2205,
-    regtype: 2206,
-    record: 2249,
-    cstring: 2275,
-    any: 2276,
-    anyarray: 2277,
-    void: 2278,
-    trigger: 2279,
-    // eslint-disable-next-line camelcase
-    language_handler: 2280,
-    internal: 2281,
-    anyelement: 2283,
-    anynonarray: 2776,
-    uuid: 2950,
-    jsonb: 3802,
-    anyrange: 3831,
-    int4range: 3904,
-    numrange: 3906,
-    tsrange: 3908,
-    rstzrange: 3910,
-    daterange: 3912,
-    int8range: 3926,
-    _xml: 143,
-    _json: 199,
-    _xid8: 271,
-    _line: 629,
-    _cidr: 651,
-    _circle: 719,
-    _macaddr8: 775,
-    _money: 791,
-    _bool: 1000,
-    _bytea: 1001,
-    _char: 1002,
-    _name: 1003,
-    _int2: 1005,
-    _int2vector: 1006,
-    _int4: 1007,
-    _regproc: 1008,
-    _text: 1009,
-    _tid: 1010,
-    _xid: 1011,
-    _cid: 1012,
-    _oidvector: 1013,
-    _bpchar: 1014,
-    _varchar: 1015,
-    _int8: 1016,
-    _point: 1017,
-    _lseg: 1018,
-    _path: 1019,
-    _box: 1020,
-    _float4: 1021,
-    _float8: 1022,
-    _polygon: 1027,
-    _oid: 1028,
-    _macaddr: 1040,
-    _inet: 1041,
-    _timestamp: 1115,
-    _date: 1182,
-    _time: 1183,
-    _timestamptz: 1185,
-    _interval: 1187,
-    _numeric: 1231,
-    _cstring: 1263,
-    _timetz: 1270,
-    _bit: 1561,
-    _varbit: 1563,
-    _uuid: 2951,
-    _jsonb: 3807,
-};
-exports.DataTypeNames = {
-    [exports.DataTypeOIDs.bool]: 'bool',
-    [exports.DataTypeOIDs.bytea]: 'bytea',
-    [exports.DataTypeOIDs.char]: 'char',
-    [exports.DataTypeOIDs.name]: 'name',
-    [exports.DataTypeOIDs.int8]: 'int8',
-    [exports.DataTypeOIDs.int2]: 'int2',
-    [exports.DataTypeOIDs.int2vector]: 'int2vector',
-    [exports.DataTypeOIDs.int4]: 'int4',
-    [exports.DataTypeOIDs.regproc]: 'regproc',
-    [exports.DataTypeOIDs.text]: 'text',
-    [exports.DataTypeOIDs.oid]: 'oid',
-    [exports.DataTypeOIDs.tid]: 'tid',
-    [exports.DataTypeOIDs.xid]: 'xid',
-    [exports.DataTypeOIDs.cid]: 'cid',
-    [exports.DataTypeOIDs.oidvector]: 'oidvector',
-    [exports.DataTypeOIDs.json]: 'json',
-    [exports.DataTypeOIDs.xml]: 'xml',
-    [exports.DataTypeOIDs.point]: 'point',
-    [exports.DataTypeOIDs.lseg]: 'lseg',
-    [exports.DataTypeOIDs.path]: 'path',
-    [exports.DataTypeOIDs.box]: 'box',
-    [exports.DataTypeOIDs.polygon]: 'polygon',
-    [exports.DataTypeOIDs.line]: 'line',
-    [exports.DataTypeOIDs.cidr]: 'cidr',
-    [exports.DataTypeOIDs.float4]: 'float4',
-    [exports.DataTypeOIDs.float8]: 'float8',
-    [exports.DataTypeOIDs.unknown]: 'unknown',
-    [exports.DataTypeOIDs.circle]: 'circle',
-    [exports.DataTypeOIDs.macaddr8]: 'macaddr8',
-    [exports.DataTypeOIDs.money]: 'money',
-    [exports.DataTypeOIDs.macaddr]: 'macaddr',
-    [exports.DataTypeOIDs.inet]: 'inet',
-    [exports.DataTypeOIDs.bpchar]: 'bpchar',
-    [exports.DataTypeOIDs.varchar]: 'varchar',
-    [exports.DataTypeOIDs.date]: 'date',
-    [exports.DataTypeOIDs.time]: 'time',
-    [exports.DataTypeOIDs.timestamp]: 'timestamp',
-    [exports.DataTypeOIDs.timestamptz]: 'timestamptz',
-    [exports.DataTypeOIDs.interval]: 'interval',
-    [exports.DataTypeOIDs.timetz]: 'timetz',
-    [exports.DataTypeOIDs.bit]: 'bit',
-    [exports.DataTypeOIDs.varbit]: 'varbit',
-    [exports.DataTypeOIDs.numeric]: 'numeric',
-    [exports.DataTypeOIDs.refcursor]: 'refcursor',
-    [exports.DataTypeOIDs.regprocedure]: 'regprocedure',
-    [exports.DataTypeOIDs.regoper]: 'regoper',
-    [exports.DataTypeOIDs.regoperator]: 'regoperator',
-    [exports.DataTypeOIDs.regclass]: 'regclass',
-    [exports.DataTypeOIDs.regtype]: 'regtype',
-    [exports.DataTypeOIDs.record]: 'record',
-    [exports.DataTypeOIDs.cstring]: 'cstring',
-    [exports.DataTypeOIDs.any]: 'any',
-    [exports.DataTypeOIDs.anyarray]: 'anyarray',
-    [exports.DataTypeOIDs.void]: 'void',
-    [exports.DataTypeOIDs.trigger]: 'trigger',
-    [exports.DataTypeOIDs.language_handler]: 'language_handler',
-    [exports.DataTypeOIDs.internal]: 'internal',
-    [exports.DataTypeOIDs.anyelement]: 'anyelement',
-    [exports.DataTypeOIDs.anynonarray]: 'anynonarray',
-    [exports.DataTypeOIDs.uuid]: 'uuid',
-    [exports.DataTypeOIDs.jsonb]: 'jsonb',
-    [exports.DataTypeOIDs.anyrange]: 'anyrange',
-    [exports.DataTypeOIDs.int4range]: 'int4range',
-    [exports.DataTypeOIDs.numrange]: 'numrange',
-    [exports.DataTypeOIDs.tsrange]: 'tsrange',
-    [exports.DataTypeOIDs.rstzrange]: 'rstzrange',
-    [exports.DataTypeOIDs.daterange]: 'daterange',
-    [exports.DataTypeOIDs.int8range]: 'int8range',
-    [exports.DataTypeOIDs._xml]: '_xml',
-    [exports.DataTypeOIDs._json]: '_json',
-    [exports.DataTypeOIDs._xid8]: '_xid8',
-    [exports.DataTypeOIDs._line]: '_line',
-    [exports.DataTypeOIDs._cidr]: '_cidr',
-    [exports.DataTypeOIDs._circle]: '_circle',
-    [exports.DataTypeOIDs._macaddr8]: '_macaddr8',
-    [exports.DataTypeOIDs._money]: '_money',
-    [exports.DataTypeOIDs._bool]: '_bool',
-    [exports.DataTypeOIDs._bytea]: '_bytea',
-    [exports.DataTypeOIDs._char]: '_char',
-    [exports.DataTypeOIDs._name]: '_name',
-    [exports.DataTypeOIDs._int2]: '_int2',
-    [exports.DataTypeOIDs._int2vector]: '_int2vector',
-    [exports.DataTypeOIDs._int4]: '_int4',
-    [exports.DataTypeOIDs._regproc]: '_regproc',
-    [exports.DataTypeOIDs._text]: '_text',
-    [exports.DataTypeOIDs._tid]: '_tid',
-    [exports.DataTypeOIDs._xid]: '_xid',
-    [exports.DataTypeOIDs._cid]: '_cid',
-    [exports.DataTypeOIDs._oidvector]: '_oidvector',
-    [exports.DataTypeOIDs._bpchar]: '_bpchar',
-    [exports.DataTypeOIDs._varchar]: '_varchar',
-    [exports.DataTypeOIDs._int8]: '_int8',
-    [exports.DataTypeOIDs._point]: '_point',
-    [exports.DataTypeOIDs._lseg]: '_lseg',
-    [exports.DataTypeOIDs._path]: '_path',
-    [exports.DataTypeOIDs._box]: '_box',
-    [exports.DataTypeOIDs._float4]: '_float4',
-    [exports.DataTypeOIDs._float8]: '_float8',
-    [exports.DataTypeOIDs._polygon]: '_polygon',
-    [exports.DataTypeOIDs._oid]: '_oid',
-    [exports.DataTypeOIDs._macaddr]: '_macaddr',
-    [exports.DataTypeOIDs._inet]: '_inet',
-    [exports.DataTypeOIDs._timestamp]: '_timestamp',
-    [exports.DataTypeOIDs._date]: '_date',
-    [exports.DataTypeOIDs._time]: '_time',
-    [exports.DataTypeOIDs._timestamptz]: '_timestamptz',
-    [exports.DataTypeOIDs._interval]: '_interval',
-    [exports.DataTypeOIDs._numeric]: '_numeric',
-    [exports.DataTypeOIDs._cstring]: '_cstring',
-    [exports.DataTypeOIDs._timetz]: '_timetz',
-    [exports.DataTypeOIDs._bit]: '_bit',
-    [exports.DataTypeOIDs._varbit]: '_varbit',
-    [exports.DataTypeOIDs._uuid]: '_uuid',
-    [exports.DataTypeOIDs._jsonb]: '_jsonb',
-};
Index: node_modules/postgresql-client/esm/constants.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/constants.js b/node_modules/postgresql-client/esm/constants.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/constants.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,247 +0,0 @@
-import { Protocol } from './protocol/protocol.js';
-var DataFormat = Protocol.DataFormat;
-// @ts-ignore
-Symbol.asyncDispose ?? (Symbol.asyncDispose = Symbol('Symbol.asyncDispose'));
-export { DataFormat };
-export const DEFAULT_COLUMN_FORMAT = DataFormat.binary;
-export var ConnectionState;
-(function (ConnectionState) {
-    ConnectionState[ConnectionState["CLOSED"] = 0] = "CLOSED";
-    ConnectionState[ConnectionState["CONNECTING"] = 1] = "CONNECTING";
-    ConnectionState[ConnectionState["AUTHORIZING"] = 3] = "AUTHORIZING";
-    ConnectionState[ConnectionState["READY"] = 2] = "READY";
-    ConnectionState[ConnectionState["CLOSING"] = 10] = "CLOSING";
-})(ConnectionState || (ConnectionState = {}));
-export const DataTypeOIDs = {
-    bool: 16,
-    bytea: 17,
-    char: 18,
-    name: 19,
-    int8: 20,
-    int2: 21,
-    int2vector: 22,
-    int4: 23,
-    regproc: 24,
-    text: 25,
-    oid: 26,
-    tid: 27,
-    xid: 28,
-    cid: 29,
-    oidvector: 30,
-    json: 114,
-    xml: 142,
-    point: 600,
-    lseg: 601,
-    path: 602,
-    box: 603,
-    polygon: 604,
-    line: 628,
-    cidr: 650,
-    float4: 700,
-    float8: 701,
-    unknown: 705,
-    circle: 718,
-    macaddr8: 774,
-    money: 790,
-    macaddr: 829,
-    inet: 869,
-    bpchar: 1042,
-    varchar: 1043,
-    date: 1082,
-    time: 1083,
-    timestamp: 1114,
-    timestamptz: 1184,
-    interval: 1186,
-    timetz: 1266,
-    bit: 1560,
-    varbit: 1562,
-    numeric: 1700,
-    refcursor: 1790,
-    regprocedure: 2202,
-    regoper: 2203,
-    regoperator: 2204,
-    regclass: 2205,
-    regtype: 2206,
-    record: 2249,
-    cstring: 2275,
-    any: 2276,
-    anyarray: 2277,
-    void: 2278,
-    trigger: 2279,
-    // eslint-disable-next-line camelcase
-    language_handler: 2280,
-    internal: 2281,
-    anyelement: 2283,
-    anynonarray: 2776,
-    uuid: 2950,
-    jsonb: 3802,
-    anyrange: 3831,
-    int4range: 3904,
-    numrange: 3906,
-    tsrange: 3908,
-    rstzrange: 3910,
-    daterange: 3912,
-    int8range: 3926,
-    _xml: 143,
-    _json: 199,
-    _xid8: 271,
-    _line: 629,
-    _cidr: 651,
-    _circle: 719,
-    _macaddr8: 775,
-    _money: 791,
-    _bool: 1000,
-    _bytea: 1001,
-    _char: 1002,
-    _name: 1003,
-    _int2: 1005,
-    _int2vector: 1006,
-    _int4: 1007,
-    _regproc: 1008,
-    _text: 1009,
-    _tid: 1010,
-    _xid: 1011,
-    _cid: 1012,
-    _oidvector: 1013,
-    _bpchar: 1014,
-    _varchar: 1015,
-    _int8: 1016,
-    _point: 1017,
-    _lseg: 1018,
-    _path: 1019,
-    _box: 1020,
-    _float4: 1021,
-    _float8: 1022,
-    _polygon: 1027,
-    _oid: 1028,
-    _macaddr: 1040,
-    _inet: 1041,
-    _timestamp: 1115,
-    _date: 1182,
-    _time: 1183,
-    _timestamptz: 1185,
-    _interval: 1187,
-    _numeric: 1231,
-    _cstring: 1263,
-    _timetz: 1270,
-    _bit: 1561,
-    _varbit: 1563,
-    _uuid: 2951,
-    _jsonb: 3807,
-};
-export const DataTypeNames = {
-    [DataTypeOIDs.bool]: 'bool',
-    [DataTypeOIDs.bytea]: 'bytea',
-    [DataTypeOIDs.char]: 'char',
-    [DataTypeOIDs.name]: 'name',
-    [DataTypeOIDs.int8]: 'int8',
-    [DataTypeOIDs.int2]: 'int2',
-    [DataTypeOIDs.int2vector]: 'int2vector',
-    [DataTypeOIDs.int4]: 'int4',
-    [DataTypeOIDs.regproc]: 'regproc',
-    [DataTypeOIDs.text]: 'text',
-    [DataTypeOIDs.oid]: 'oid',
-    [DataTypeOIDs.tid]: 'tid',
-    [DataTypeOIDs.xid]: 'xid',
-    [DataTypeOIDs.cid]: 'cid',
-    [DataTypeOIDs.oidvector]: 'oidvector',
-    [DataTypeOIDs.json]: 'json',
-    [DataTypeOIDs.xml]: 'xml',
-    [DataTypeOIDs.point]: 'point',
-    [DataTypeOIDs.lseg]: 'lseg',
-    [DataTypeOIDs.path]: 'path',
-    [DataTypeOIDs.box]: 'box',
-    [DataTypeOIDs.polygon]: 'polygon',
-    [DataTypeOIDs.line]: 'line',
-    [DataTypeOIDs.cidr]: 'cidr',
-    [DataTypeOIDs.float4]: 'float4',
-    [DataTypeOIDs.float8]: 'float8',
-    [DataTypeOIDs.unknown]: 'unknown',
-    [DataTypeOIDs.circle]: 'circle',
-    [DataTypeOIDs.macaddr8]: 'macaddr8',
-    [DataTypeOIDs.money]: 'money',
-    [DataTypeOIDs.macaddr]: 'macaddr',
-    [DataTypeOIDs.inet]: 'inet',
-    [DataTypeOIDs.bpchar]: 'bpchar',
-    [DataTypeOIDs.varchar]: 'varchar',
-    [DataTypeOIDs.date]: 'date',
-    [DataTypeOIDs.time]: 'time',
-    [DataTypeOIDs.timestamp]: 'timestamp',
-    [DataTypeOIDs.timestamptz]: 'timestamptz',
-    [DataTypeOIDs.interval]: 'interval',
-    [DataTypeOIDs.timetz]: 'timetz',
-    [DataTypeOIDs.bit]: 'bit',
-    [DataTypeOIDs.varbit]: 'varbit',
-    [DataTypeOIDs.numeric]: 'numeric',
-    [DataTypeOIDs.refcursor]: 'refcursor',
-    [DataTypeOIDs.regprocedure]: 'regprocedure',
-    [DataTypeOIDs.regoper]: 'regoper',
-    [DataTypeOIDs.regoperator]: 'regoperator',
-    [DataTypeOIDs.regclass]: 'regclass',
-    [DataTypeOIDs.regtype]: 'regtype',
-    [DataTypeOIDs.record]: 'record',
-    [DataTypeOIDs.cstring]: 'cstring',
-    [DataTypeOIDs.any]: 'any',
-    [DataTypeOIDs.anyarray]: 'anyarray',
-    [DataTypeOIDs.void]: 'void',
-    [DataTypeOIDs.trigger]: 'trigger',
-    [DataTypeOIDs.language_handler]: 'language_handler',
-    [DataTypeOIDs.internal]: 'internal',
-    [DataTypeOIDs.anyelement]: 'anyelement',
-    [DataTypeOIDs.anynonarray]: 'anynonarray',
-    [DataTypeOIDs.uuid]: 'uuid',
-    [DataTypeOIDs.jsonb]: 'jsonb',
-    [DataTypeOIDs.anyrange]: 'anyrange',
-    [DataTypeOIDs.int4range]: 'int4range',
-    [DataTypeOIDs.numrange]: 'numrange',
-    [DataTypeOIDs.tsrange]: 'tsrange',
-    [DataTypeOIDs.rstzrange]: 'rstzrange',
-    [DataTypeOIDs.daterange]: 'daterange',
-    [DataTypeOIDs.int8range]: 'int8range',
-    [DataTypeOIDs._xml]: '_xml',
-    [DataTypeOIDs._json]: '_json',
-    [DataTypeOIDs._xid8]: '_xid8',
-    [DataTypeOIDs._line]: '_line',
-    [DataTypeOIDs._cidr]: '_cidr',
-    [DataTypeOIDs._circle]: '_circle',
-    [DataTypeOIDs._macaddr8]: '_macaddr8',
-    [DataTypeOIDs._money]: '_money',
-    [DataTypeOIDs._bool]: '_bool',
-    [DataTypeOIDs._bytea]: '_bytea',
-    [DataTypeOIDs._char]: '_char',
-    [DataTypeOIDs._name]: '_name',
-    [DataTypeOIDs._int2]: '_int2',
-    [DataTypeOIDs._int2vector]: '_int2vector',
-    [DataTypeOIDs._int4]: '_int4',
-    [DataTypeOIDs._regproc]: '_regproc',
-    [DataTypeOIDs._text]: '_text',
-    [DataTypeOIDs._tid]: '_tid',
-    [DataTypeOIDs._xid]: '_xid',
-    [DataTypeOIDs._cid]: '_cid',
-    [DataTypeOIDs._oidvector]: '_oidvector',
-    [DataTypeOIDs._bpchar]: '_bpchar',
-    [DataTypeOIDs._varchar]: '_varchar',
-    [DataTypeOIDs._int8]: '_int8',
-    [DataTypeOIDs._point]: '_point',
-    [DataTypeOIDs._lseg]: '_lseg',
-    [DataTypeOIDs._path]: '_path',
-    [DataTypeOIDs._box]: '_box',
-    [DataTypeOIDs._float4]: '_float4',
-    [DataTypeOIDs._float8]: '_float8',
-    [DataTypeOIDs._polygon]: '_polygon',
-    [DataTypeOIDs._oid]: '_oid',
-    [DataTypeOIDs._macaddr]: '_macaddr',
-    [DataTypeOIDs._inet]: '_inet',
-    [DataTypeOIDs._timestamp]: '_timestamp',
-    [DataTypeOIDs._date]: '_date',
-    [DataTypeOIDs._time]: '_time',
-    [DataTypeOIDs._timestamptz]: '_timestamptz',
-    [DataTypeOIDs._interval]: '_interval',
-    [DataTypeOIDs._numeric]: '_numeric',
-    [DataTypeOIDs._cstring]: '_cstring',
-    [DataTypeOIDs._timetz]: '_timetz',
-    [DataTypeOIDs._bit]: '_bit',
-    [DataTypeOIDs._varbit]: '_varbit',
-    [DataTypeOIDs._uuid]: '_uuid',
-    [DataTypeOIDs._jsonb]: '_jsonb',
-};
Index: node_modules/postgresql-client/typings/util/convert-row-to-object.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/util/convert-row-to-object.d.ts b/node_modules/postgresql-client/typings/util/convert-row-to-object.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/util/convert-row-to-object.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,2 +0,0 @@
-import { FieldInfo } from '../interfaces/field-info.js';
-export declare function convertRowToObject(fields: FieldInfo[], row: any[]): any;
Index: node_modules/postgresql-client/cjs/util/convert-row-to-object.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/util/convert-row-to-object.js b/node_modules/postgresql-client/cjs/util/convert-row-to-object.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/util/convert-row-to-object.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,13 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.convertRowToObject = void 0;
-function convertRowToObject(fields, row) {
-    const out = {};
-    const l = row.length;
-    let i;
-    for (i = 0; i < l; i++) {
-        out[fields[i].fieldName] = row[i];
-    }
-    return out;
-}
-exports.convertRowToObject = convertRowToObject;
Index: node_modules/postgresql-client/esm/util/convert-row-to-object.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/util/convert-row-to-object.js b/node_modules/postgresql-client/esm/util/convert-row-to-object.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/util/convert-row-to-object.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,9 +0,0 @@
-export function convertRowToObject(fields, row) {
-    const out = {};
-    const l = row.length;
-    let i;
-    for (i = 0; i < l; i++) {
-        out[fields[i].fieldName] = row[i];
-    }
-    return out;
-}
Index: node_modules/postgresql-client/typings/connection/cursor.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/connection/cursor.d.ts b/node_modules/postgresql-client/typings/connection/cursor.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/connection/cursor.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,25 +0,0 @@
-/// <reference types="node" />
-import { FieldInfo } from '../interfaces/field-info.js';
-import { QueryOptions } from '../interfaces/query-options.js';
-import { SafeEventEmitter } from '../safe-event-emitter.js';
-import { AnyParseFunction, Maybe, Row } from '../types.js';
-import { Portal } from './portal.js';
-import { PreparedStatement } from './prepared-statement.js';
-export declare class Cursor extends SafeEventEmitter implements AsyncDisposable {
-    private readonly _statement;
-    private readonly _portal;
-    private readonly _parsers;
-    private readonly _queryOptions;
-    private _taskQueue;
-    private _rows;
-    private _closed;
-    readonly fields: FieldInfo[];
-    constructor(statement: PreparedStatement, portal: Portal, fields: FieldInfo[], parsers: AnyParseFunction[], queryOptions: QueryOptions);
-    get rowType(): 'array' | 'object';
-    get isClosed(): boolean;
-    next(): Promise<Maybe<Row>>;
-    fetch(nRows: number): Promise<Row[]>;
-    close(): Promise<void>;
-    private _fetchRows;
-    [Symbol.asyncDispose](): Promise<void>;
-}
Index: node_modules/postgresql-client/cjs/connection/cursor.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/connection/cursor.js b/node_modules/postgresql-client/cjs/connection/cursor.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/connection/cursor.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,93 +0,0 @@
-"use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.Cursor = void 0;
-const doublylinked_1 = __importDefault(require("doublylinked"));
-const power_tasks_1 = require("power-tasks");
-const safe_event_emitter_js_1 = require("../safe-event-emitter.js");
-const convert_row_to_object_js_1 = require("../util/convert-row-to-object.js");
-const parse_row_js_1 = require("../util/parse-row.js");
-class Cursor extends safe_event_emitter_js_1.SafeEventEmitter {
-    constructor(statement, portal, fields, parsers, queryOptions) {
-        super();
-        this._taskQueue = new power_tasks_1.TaskQueue({ concurrency: 1 });
-        this._rows = new doublylinked_1.default();
-        this._closed = false;
-        this._statement = statement;
-        this._portal = portal;
-        this._parsers = parsers;
-        this._queryOptions = queryOptions;
-        this.fields = fields;
-    }
-    get rowType() {
-        return this._queryOptions.objectRows ? 'object' : 'array';
-    }
-    get isClosed() {
-        return this._closed;
-    }
-    async next() {
-        if (!this._rows.length) {
-            if (this._closed)
-                return;
-            await this._fetchRows();
-        }
-        return this._rows.shift();
-    }
-    async fetch(nRows) {
-        const out = [];
-        if (this._closed)
-            return out;
-        for (let i = 0; i < nRows; i++) {
-            if (!this._rows.length)
-                await this._fetchRows();
-            if (this._rows.length)
-                out.push(this._rows.shift());
-            else
-                break;
-        }
-        return out;
-    }
-    async close() {
-        if (this._closed)
-            return;
-        await this._portal.close();
-        await this._statement.close();
-        this.emit('close');
-        this._closed = true;
-    }
-    async _fetchRows() {
-        if (this._closed)
-            return;
-        const portal = this._portal;
-        await this._taskQueue
-            .enqueue(async () => {
-            const queryOptions = this._queryOptions;
-            const r = await portal.execute(queryOptions.fetchCount || 100);
-            if (r && r.rows && r.rows.length) {
-                if (this._parsers) {
-                    const objectRows = queryOptions.objectRows;
-                    const fields = this.fields;
-                    const rows = r.rows;
-                    for (let i = 0; i < rows.length; i++) {
-                        const row = rows[i];
-                        (0, parse_row_js_1.parseRow)(this._parsers, row, this._queryOptions);
-                        if (objectRows)
-                            rows[i] = (0, convert_row_to_object_js_1.convertRowToObject)(fields, row);
-                    }
-                }
-                this._rows.push(...r.rows);
-                this.emit('fetch', r.rows);
-            }
-            else {
-                await this.close();
-            }
-        })
-            .toPromise();
-    }
-    [Symbol.asyncDispose]() {
-        return this.close();
-    }
-}
-exports.Cursor = Cursor;
Index: node_modules/postgresql-client/esm/connection/cursor.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/connection/cursor.js b/node_modules/postgresql-client/esm/connection/cursor.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/connection/cursor.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,86 +0,0 @@
-import DoublyLinked from 'doublylinked';
-import { TaskQueue } from 'power-tasks';
-import { SafeEventEmitter } from '../safe-event-emitter.js';
-import { convertRowToObject } from '../util/convert-row-to-object.js';
-import { parseRow } from '../util/parse-row.js';
-export class Cursor extends SafeEventEmitter {
-    constructor(statement, portal, fields, parsers, queryOptions) {
-        super();
-        this._taskQueue = new TaskQueue({ concurrency: 1 });
-        this._rows = new DoublyLinked();
-        this._closed = false;
-        this._statement = statement;
-        this._portal = portal;
-        this._parsers = parsers;
-        this._queryOptions = queryOptions;
-        this.fields = fields;
-    }
-    get rowType() {
-        return this._queryOptions.objectRows ? 'object' : 'array';
-    }
-    get isClosed() {
-        return this._closed;
-    }
-    async next() {
-        if (!this._rows.length) {
-            if (this._closed)
-                return;
-            await this._fetchRows();
-        }
-        return this._rows.shift();
-    }
-    async fetch(nRows) {
-        const out = [];
-        if (this._closed)
-            return out;
-        for (let i = 0; i < nRows; i++) {
-            if (!this._rows.length)
-                await this._fetchRows();
-            if (this._rows.length)
-                out.push(this._rows.shift());
-            else
-                break;
-        }
-        return out;
-    }
-    async close() {
-        if (this._closed)
-            return;
-        await this._portal.close();
-        await this._statement.close();
-        this.emit('close');
-        this._closed = true;
-    }
-    async _fetchRows() {
-        if (this._closed)
-            return;
-        const portal = this._portal;
-        await this._taskQueue
-            .enqueue(async () => {
-            const queryOptions = this._queryOptions;
-            const r = await portal.execute(queryOptions.fetchCount || 100);
-            if (r && r.rows && r.rows.length) {
-                if (this._parsers) {
-                    const objectRows = queryOptions.objectRows;
-                    const fields = this.fields;
-                    const rows = r.rows;
-                    for (let i = 0; i < rows.length; i++) {
-                        const row = rows[i];
-                        parseRow(this._parsers, row, this._queryOptions);
-                        if (objectRows)
-                            rows[i] = convertRowToObject(fields, row);
-                    }
-                }
-                this._rows.push(...r.rows);
-                this.emit('fetch', r.rows);
-            }
-            else {
-                await this.close();
-            }
-        })
-            .toPromise();
-    }
-    [Symbol.asyncDispose]() {
-        return this.close();
-    }
-}
Index: node_modules/postgresql-client/typings/interfaces/data-mapping-options.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/interfaces/data-mapping-options.d.ts b/node_modules/postgresql-client/typings/interfaces/data-mapping-options.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/interfaces/data-mapping-options.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,9 +0,0 @@
-import type { OID } from '../types.js';
-export interface DataMappingOptions {
-    /**
-     * If true UTC time will be used for date decoding, else system time offset will be used
-     * @default false
-     */
-    utcDates?: boolean;
-    fetchAsString?: OID[];
-}
Index: node_modules/postgresql-client/cjs/interfaces/data-mapping-options.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/interfaces/data-mapping-options.js b/node_modules/postgresql-client/cjs/interfaces/data-mapping-options.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/interfaces/data-mapping-options.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,2 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
Index: node_modules/postgresql-client/esm/interfaces/data-mapping-options.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/interfaces/data-mapping-options.js b/node_modules/postgresql-client/esm/interfaces/data-mapping-options.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/interfaces/data-mapping-options.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,1 +0,0 @@
-export {};
Index: node_modules/postgresql-client/typings/interfaces/data-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/interfaces/data-type.d.ts b/node_modules/postgresql-client/typings/interfaces/data-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/interfaces/data-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,31 +0,0 @@
-import type { DecodeBinaryFunction, EncodeBinaryFunction, EncodeTextFunction, OID, ParseTextFunction } from '../types.js';
-import { EncodeCalculateDimFunction } from '../types.js';
-export interface DataType {
-    oid: OID;
-    name: string;
-    elementsOID?: OID;
-    isArray?: boolean;
-    jsType: string;
-    arraySeparator?: string;
-    isType: (v: any) => boolean;
-    parseBinary: DecodeBinaryFunction;
-    parseText: ParseTextFunction;
-    encodeBinary?: EncodeBinaryFunction;
-    encodeText?: EncodeTextFunction;
-    encodeCalculateDim?: EncodeCalculateDimFunction;
-}
-export interface Point {
-    x: number;
-    y: number;
-}
-export interface Circle {
-    x: number;
-    y: number;
-    r: number;
-}
-export interface Rectangle {
-    x1: number;
-    y1: number;
-    x2: number;
-    y2: number;
-}
Index: node_modules/postgresql-client/cjs/interfaces/data-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/interfaces/data-type.js b/node_modules/postgresql-client/cjs/interfaces/data-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/interfaces/data-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,2 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
Index: node_modules/postgresql-client/esm/interfaces/data-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/interfaces/data-type.js b/node_modules/postgresql-client/esm/interfaces/data-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/interfaces/data-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,1 +0,0 @@
-export {};
Index: node_modules/postgresql-client/typings/data-type-map.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-type-map.d.ts b/node_modules/postgresql-client/typings/data-type-map.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-type-map.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,11 +0,0 @@
-import { DataType } from './interfaces/data-type.js';
-import { OID } from './types.js';
-export declare class DataTypeMap {
-    private _itemsByOID;
-    private _items;
-    constructor(other?: DataTypeMap);
-    get(oid: OID): DataType;
-    register(dataTypes: DataType | DataType[]): void;
-    determine(value: any): OID;
-}
-export declare const GlobalTypeMap: DataTypeMap;
Index: node_modules/postgresql-client/cjs/data-type-map.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-type-map.js b/node_modules/postgresql-client/cjs/data-type-map.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-type-map.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,119 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.GlobalTypeMap = exports.DataTypeMap = void 0;
-const constants_js_1 = require("./constants.js");
-const bool_type_js_1 = require("./data-types/bool-type.js");
-const box_type_js_1 = require("./data-types/box-type.js");
-const bytea_type_js_1 = require("./data-types/bytea-type.js");
-const char_type_js_1 = require("./data-types/char-type.js");
-const circle_type_js_1 = require("./data-types/circle-type.js");
-const date_type_js_1 = require("./data-types/date-type.js");
-const float4_type_js_1 = require("./data-types/float4-type.js");
-const float8_type_js_1 = require("./data-types/float8-type.js");
-const int2_type_js_1 = require("./data-types/int2-type.js");
-const int2_vector_type_js_1 = require("./data-types/int2-vector-type.js");
-const int4_type_js_1 = require("./data-types/int4-type.js");
-const int8_type_js_1 = require("./data-types/int8-type.js");
-const json_type_js_1 = require("./data-types/json-type.js");
-const jsonb_type_js_1 = require("./data-types/jsonb-type.js");
-const lseg_type_js_1 = require("./data-types/lseg-type.js");
-const numeric_type_js_1 = require("./data-types/numeric-type.js");
-const oid_type_js_1 = require("./data-types/oid-type.js");
-const point_type_js_1 = require("./data-types/point-type.js");
-const time_type_js_1 = require("./data-types/time-type.js");
-const timestamp_type_js_1 = require("./data-types/timestamp-type.js");
-const timestamptz_type_js_1 = require("./data-types/timestamptz-type.js");
-const uuid_type_js_1 = require("./data-types/uuid-type.js");
-const varchar_type_js_1 = require("./data-types/varchar-type.js");
-class DataTypeMap {
-    constructor(other) {
-        this._itemsByOID = {};
-        this._items = [];
-        if (other instanceof DataTypeMap)
-            Object.assign(this._items, other._items);
-    }
-    get(oid) {
-        return this._itemsByOID[oid];
-    }
-    register(dataTypes) {
-        dataTypes = Array.isArray(dataTypes) ? dataTypes : [dataTypes];
-        for (const t of dataTypes) {
-            this._itemsByOID[t.oid] = t;
-            const i = this._items.findIndex(tt => tt.oid === t.oid);
-            if (i >= 0)
-                this._items[i] = t;
-            else
-                this._items.push(t);
-        }
-    }
-    determine(value) {
-        if (value == null)
-            return constants_js_1.DataTypeOIDs.unknown;
-        const valueIsArray = Array.isArray(value);
-        let i;
-        let t;
-        for (i = this._items.length - 1; i >= 0; i--) {
-            t = this._items[i];
-            if (valueIsArray) {
-                if (t.elementsOID && t.isType(value[0]))
-                    return t.oid;
-            }
-            else if (!t.elementsOID && t.isType(value))
-                return t.oid;
-        }
-        return constants_js_1.DataTypeOIDs.unknown;
-    }
-}
-exports.DataTypeMap = DataTypeMap;
-exports.GlobalTypeMap = new DataTypeMap();
-exports.GlobalTypeMap.register([oid_type_js_1.OidType, oid_type_js_1.VectorOidType, oid_type_js_1.ArrayOidType]);
-exports.GlobalTypeMap.register([jsonb_type_js_1.JsonbType, jsonb_type_js_1.ArrayJsonbType]);
-exports.GlobalTypeMap.register([json_type_js_1.JsonType, json_type_js_1.ArrayJsonType]);
-exports.GlobalTypeMap.register([bool_type_js_1.BoolType, bool_type_js_1.ArrayBoolType]);
-exports.GlobalTypeMap.register([numeric_type_js_1.NumericType, numeric_type_js_1.ArrayNumericType]);
-exports.GlobalTypeMap.register([float4_type_js_1.Float4Type, float4_type_js_1.ArrayFloat4Type]);
-exports.GlobalTypeMap.register([float8_type_js_1.Float8Type, float8_type_js_1.ArrayFloat8Type]);
-exports.GlobalTypeMap.register([int2_type_js_1.Int2Type, int2_type_js_1.ArrayInt2Type]);
-exports.GlobalTypeMap.register([int4_type_js_1.Int4Type, int4_type_js_1.ArrayInt4Type]);
-exports.GlobalTypeMap.register([int8_type_js_1.Int8Type, int8_type_js_1.ArrayInt8Type]);
-exports.GlobalTypeMap.register([bytea_type_js_1.ByteaType, bytea_type_js_1.ArrayByteaType]);
-exports.GlobalTypeMap.register([circle_type_js_1.CircleType, circle_type_js_1.ArrayCircleType]);
-exports.GlobalTypeMap.register([point_type_js_1.PointType, point_type_js_1.ArrayPointType]);
-exports.GlobalTypeMap.register([lseg_type_js_1.LsegType, lseg_type_js_1.ArrayLsegType]);
-exports.GlobalTypeMap.register([box_type_js_1.BoxType, box_type_js_1.ArrayBoxType]);
-exports.GlobalTypeMap.register([int2_vector_type_js_1.Int2VectorType, int2_vector_type_js_1.ArrayInt2VectorType]);
-exports.GlobalTypeMap.register({ ...varchar_type_js_1.VarcharType, name: 'bpchar', oid: constants_js_1.DataTypeOIDs.bpchar });
-exports.GlobalTypeMap.register({
-    ...varchar_type_js_1.ArrayVarcharType,
-    name: '_bpchar',
-    oid: constants_js_1.DataTypeOIDs._bpchar,
-    elementsOID: constants_js_1.DataTypeOIDs.bpchar,
-});
-exports.GlobalTypeMap.register({ ...varchar_type_js_1.VarcharType, name: 'name', oid: constants_js_1.DataTypeOIDs.name });
-exports.GlobalTypeMap.register({
-    ...varchar_type_js_1.ArrayVarcharType,
-    name: '_name',
-    oid: constants_js_1.DataTypeOIDs._name,
-    elementsOID: constants_js_1.DataTypeOIDs.name,
-});
-exports.GlobalTypeMap.register({ ...varchar_type_js_1.VarcharType, name: 'text', oid: constants_js_1.DataTypeOIDs.text });
-exports.GlobalTypeMap.register({
-    ...varchar_type_js_1.ArrayVarcharType,
-    name: '_text',
-    oid: constants_js_1.DataTypeOIDs._text,
-    elementsOID: constants_js_1.DataTypeOIDs.text,
-});
-exports.GlobalTypeMap.register({ ...varchar_type_js_1.VarcharType, name: 'xml', oid: constants_js_1.DataTypeOIDs.xml });
-exports.GlobalTypeMap.register({
-    ...varchar_type_js_1.ArrayVarcharType,
-    name: '_xml',
-    oid: constants_js_1.DataTypeOIDs._xml,
-    elementsOID: constants_js_1.DataTypeOIDs.xml,
-});
-exports.GlobalTypeMap.register([varchar_type_js_1.VarcharType, varchar_type_js_1.ArrayVarcharType]);
-exports.GlobalTypeMap.register([uuid_type_js_1.UuidType, uuid_type_js_1.ArrayUuidType]);
-exports.GlobalTypeMap.register([char_type_js_1.CharType, char_type_js_1.ArrayCharType]);
-exports.GlobalTypeMap.register([timestamptz_type_js_1.TimestamptzType, timestamptz_type_js_1.ArrayTimestamptzType]);
-exports.GlobalTypeMap.register([time_type_js_1.TimeType, time_type_js_1.ArrayTimeType]);
-exports.GlobalTypeMap.register([date_type_js_1.DateType, date_type_js_1.ArrayDateType]);
-exports.GlobalTypeMap.register([timestamp_type_js_1.TimestampType, timestamp_type_js_1.ArrayTimestampType]);
Index: node_modules/postgresql-client/esm/data-type-map.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-type-map.js b/node_modules/postgresql-client/esm/data-type-map.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-type-map.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,115 +0,0 @@
-import { DataTypeOIDs } from './constants.js';
-import { ArrayBoolType, BoolType } from './data-types/bool-type.js';
-import { ArrayBoxType, BoxType } from './data-types/box-type.js';
-import { ArrayByteaType, ByteaType } from './data-types/bytea-type.js';
-import { ArrayCharType, CharType } from './data-types/char-type.js';
-import { ArrayCircleType, CircleType } from './data-types/circle-type.js';
-import { ArrayDateType, DateType } from './data-types/date-type.js';
-import { ArrayFloat4Type, Float4Type } from './data-types/float4-type.js';
-import { ArrayFloat8Type, Float8Type } from './data-types/float8-type.js';
-import { ArrayInt2Type, Int2Type } from './data-types/int2-type.js';
-import { ArrayInt2VectorType, Int2VectorType } from './data-types/int2-vector-type.js';
-import { ArrayInt4Type, Int4Type } from './data-types/int4-type.js';
-import { ArrayInt8Type, Int8Type } from './data-types/int8-type.js';
-import { ArrayJsonType, JsonType } from './data-types/json-type.js';
-import { ArrayJsonbType, JsonbType } from './data-types/jsonb-type.js';
-import { ArrayLsegType, LsegType } from './data-types/lseg-type.js';
-import { ArrayNumericType, NumericType } from './data-types/numeric-type.js';
-import { ArrayOidType, OidType, VectorOidType } from './data-types/oid-type.js';
-import { ArrayPointType, PointType } from './data-types/point-type.js';
-import { ArrayTimeType, TimeType } from './data-types/time-type.js';
-import { ArrayTimestampType, TimestampType } from './data-types/timestamp-type.js';
-import { ArrayTimestamptzType, TimestamptzType } from './data-types/timestamptz-type.js';
-import { ArrayUuidType, UuidType } from './data-types/uuid-type.js';
-import { ArrayVarcharType, VarcharType } from './data-types/varchar-type.js';
-export class DataTypeMap {
-    constructor(other) {
-        this._itemsByOID = {};
-        this._items = [];
-        if (other instanceof DataTypeMap)
-            Object.assign(this._items, other._items);
-    }
-    get(oid) {
-        return this._itemsByOID[oid];
-    }
-    register(dataTypes) {
-        dataTypes = Array.isArray(dataTypes) ? dataTypes : [dataTypes];
-        for (const t of dataTypes) {
-            this._itemsByOID[t.oid] = t;
-            const i = this._items.findIndex(tt => tt.oid === t.oid);
-            if (i >= 0)
-                this._items[i] = t;
-            else
-                this._items.push(t);
-        }
-    }
-    determine(value) {
-        if (value == null)
-            return DataTypeOIDs.unknown;
-        const valueIsArray = Array.isArray(value);
-        let i;
-        let t;
-        for (i = this._items.length - 1; i >= 0; i--) {
-            t = this._items[i];
-            if (valueIsArray) {
-                if (t.elementsOID && t.isType(value[0]))
-                    return t.oid;
-            }
-            else if (!t.elementsOID && t.isType(value))
-                return t.oid;
-        }
-        return DataTypeOIDs.unknown;
-    }
-}
-export const GlobalTypeMap = new DataTypeMap();
-GlobalTypeMap.register([OidType, VectorOidType, ArrayOidType]);
-GlobalTypeMap.register([JsonbType, ArrayJsonbType]);
-GlobalTypeMap.register([JsonType, ArrayJsonType]);
-GlobalTypeMap.register([BoolType, ArrayBoolType]);
-GlobalTypeMap.register([NumericType, ArrayNumericType]);
-GlobalTypeMap.register([Float4Type, ArrayFloat4Type]);
-GlobalTypeMap.register([Float8Type, ArrayFloat8Type]);
-GlobalTypeMap.register([Int2Type, ArrayInt2Type]);
-GlobalTypeMap.register([Int4Type, ArrayInt4Type]);
-GlobalTypeMap.register([Int8Type, ArrayInt8Type]);
-GlobalTypeMap.register([ByteaType, ArrayByteaType]);
-GlobalTypeMap.register([CircleType, ArrayCircleType]);
-GlobalTypeMap.register([PointType, ArrayPointType]);
-GlobalTypeMap.register([LsegType, ArrayLsegType]);
-GlobalTypeMap.register([BoxType, ArrayBoxType]);
-GlobalTypeMap.register([Int2VectorType, ArrayInt2VectorType]);
-GlobalTypeMap.register({ ...VarcharType, name: 'bpchar', oid: DataTypeOIDs.bpchar });
-GlobalTypeMap.register({
-    ...ArrayVarcharType,
-    name: '_bpchar',
-    oid: DataTypeOIDs._bpchar,
-    elementsOID: DataTypeOIDs.bpchar,
-});
-GlobalTypeMap.register({ ...VarcharType, name: 'name', oid: DataTypeOIDs.name });
-GlobalTypeMap.register({
-    ...ArrayVarcharType,
-    name: '_name',
-    oid: DataTypeOIDs._name,
-    elementsOID: DataTypeOIDs.name,
-});
-GlobalTypeMap.register({ ...VarcharType, name: 'text', oid: DataTypeOIDs.text });
-GlobalTypeMap.register({
-    ...ArrayVarcharType,
-    name: '_text',
-    oid: DataTypeOIDs._text,
-    elementsOID: DataTypeOIDs.text,
-});
-GlobalTypeMap.register({ ...VarcharType, name: 'xml', oid: DataTypeOIDs.xml });
-GlobalTypeMap.register({
-    ...ArrayVarcharType,
-    name: '_xml',
-    oid: DataTypeOIDs._xml,
-    elementsOID: DataTypeOIDs.xml,
-});
-GlobalTypeMap.register([VarcharType, ArrayVarcharType]);
-GlobalTypeMap.register([UuidType, ArrayUuidType]);
-GlobalTypeMap.register([CharType, ArrayCharType]);
-GlobalTypeMap.register([TimestamptzType, ArrayTimestamptzType]);
-GlobalTypeMap.register([TimeType, ArrayTimeType]);
-GlobalTypeMap.register([DateType, ArrayDateType]);
-GlobalTypeMap.register([TimestampType, ArrayTimestampType]);
Index: node_modules/postgresql-client/typings/interfaces/database-connection-params.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/interfaces/database-connection-params.d.ts b/node_modules/postgresql-client/typings/interfaces/database-connection-params.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/interfaces/database-connection-params.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,38 +0,0 @@
-/// <reference types="node" />
-import type { PoolConfiguration as LPoolConfiguration } from 'lightning-pool';
-import type { ConnectionOptions as TlsConnectionOptions } from 'tls';
-import type { SmartBufferConfig } from '../protocol/smart-buffer.js';
-import type { DebugLogger } from '../types.js';
-export interface DatabaseConnectionParams {
-    host?: string;
-    port?: number;
-    user?: string;
-    password?: string | (() => string | Promise<string>);
-    database?: string;
-    applicationName?: string;
-    ssl?: TlsConnectionOptions;
-    timezone?: string;
-    schema?: string;
-    connectTimeoutMs?: number;
-    /**
-     * Specifies weather execute query in auto-commit mode
-     * @default false
-     */
-    autoCommit?: boolean;
-    /**
-     * When on, if a statement in a transaction block generates an error,
-     * the error is ignored and the transaction continues.
-     * When off (the default), a statement in a transaction block that generates an error aborts the entire transaction
-     * @default true
-     */
-    rollbackOnError?: boolean;
-    debugLogger?: DebugLogger;
-}
-export interface SocketOptions {
-    keepAlive?: boolean;
-}
-export interface ConnectionConfiguration extends DatabaseConnectionParams, SocketOptions {
-    buffer?: SmartBufferConfig;
-}
-export interface PoolConfiguration extends ConnectionConfiguration, LPoolConfiguration {
-}
Index: node_modules/postgresql-client/cjs/interfaces/database-connection-params.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/interfaces/database-connection-params.js b/node_modules/postgresql-client/cjs/interfaces/database-connection-params.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/interfaces/database-connection-params.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,2 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
Index: node_modules/postgresql-client/esm/interfaces/database-connection-params.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/interfaces/database-connection-params.js b/node_modules/postgresql-client/esm/interfaces/database-connection-params.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/interfaces/database-connection-params.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,1 +0,0 @@
-export {};
Index: node_modules/postgresql-client/typings/protocol/database-error.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/protocol/database-error.d.ts b/node_modules/postgresql-client/typings/protocol/database-error.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/protocol/database-error.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,20 +0,0 @@
-import { Protocol } from './protocol.js';
-export declare class DatabaseError extends Error {
-    severity?: string;
-    code?: string;
-    detail?: string;
-    hint?: string;
-    position?: number;
-    internalPosition?: string;
-    internalQuery?: string;
-    where?: string;
-    schema?: string;
-    table?: string;
-    column?: string;
-    dataType?: string;
-    constraint?: string;
-    lineNr?: number;
-    colNr?: number;
-    line?: string;
-    constructor(msg: Protocol.ErrorResponseMessage);
-}
Index: node_modules/postgresql-client/cjs/protocol/database-error.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/protocol/database-error.js b/node_modules/postgresql-client/cjs/protocol/database-error.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/protocol/database-error.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,17 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.DatabaseError = void 0;
-class DatabaseError extends Error {
-    constructor(msg) {
-        super(msg.message);
-        Object.assign(this, {
-            ...msg,
-            line: undefined,
-            file: undefined,
-            routine: undefined,
-        });
-        if (msg.position)
-            this.position = parseInt(msg.position, 10) || undefined;
-    }
-}
-exports.DatabaseError = DatabaseError;
Index: node_modules/postgresql-client/esm/protocol/database-error.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/protocol/database-error.js b/node_modules/postgresql-client/esm/protocol/database-error.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/protocol/database-error.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,13 +0,0 @@
-export class DatabaseError extends Error {
-    constructor(msg) {
-        super(msg.message);
-        Object.assign(this, {
-            ...msg,
-            line: undefined,
-            file: undefined,
-            routine: undefined,
-        });
-        if (msg.position)
-            this.position = parseInt(msg.position, 10) || undefined;
-    }
-}
Index: node_modules/postgresql-client/typings/data-types/date-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/date-type.d.ts b/node_modules/postgresql-client/typings/data-types/date-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/date-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const DateType: DataType;
-export declare const ArrayDateType: DataType;
Index: node_modules/postgresql-client/cjs/data-types/date-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/date-type.js b/node_modules/postgresql-client/cjs/data-types/date-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/date-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,67 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayDateType = exports.DateType = void 0;
-const constants_js_1 = require("../constants.js");
-const parse_datetime_js_1 = require("../util/parse-datetime.js");
-const timeShift = 946684800000;
-exports.DateType = {
-    name: 'date',
-    oid: constants_js_1.DataTypeOIDs.date,
-    jsType: 'Date',
-    parseBinary(v, options) {
-        const fetchAsString = options.fetchAsString && options.fetchAsString.includes(constants_js_1.DataTypeOIDs.date);
-        const t = v.readInt32BE();
-        if (t === 0x7fffffff)
-            return fetchAsString ? 'infinity' : Infinity;
-        if (t === -0x80000000)
-            return fetchAsString ? '-infinity' : -Infinity;
-        // Shift from 2000 to 1970
-        let d = new Date(t * 1000 * 86400 + timeShift);
-        if (fetchAsString || !options.utcDates)
-            d = new Date(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate());
-        return fetchAsString ? dateToDateString(d) : d;
-    },
-    encodeBinary(buf, v, options) {
-        if (typeof v === 'string')
-            v = (0, parse_datetime_js_1.parseDateTime)(v, false, false, options.utcDates);
-        if (v === Infinity) {
-            buf.writeInt32BE(0x7fffffff);
-            return;
-        }
-        if (v === -Infinity) {
-            buf.writeInt32BE(-0x80000000);
-            return;
-        }
-        if (!(v instanceof Date))
-            v = new Date(v);
-        let n = options.utcDates ? v.getTime() : v.getTime() - v.getTimezoneOffset() * 60 * 1000;
-        n = (n - timeShift) / 1000 / 86400;
-        const t = Math.trunc(n + Number.EPSILON);
-        buf.writeInt32BE(t);
-    },
-    parseText(v, options) {
-        const fetchAsString = options.fetchAsString && options.fetchAsString.includes(constants_js_1.DataTypeOIDs.date);
-        if (fetchAsString)
-            return v;
-        return (0, parse_datetime_js_1.parseDateTime)(v, false, false, options.utcDates);
-    },
-    isType(v) {
-        return (v instanceof Date &&
-            v.getHours() === 0 &&
-            v.getMinutes() === 0 &&
-            v.getSeconds() === 0 &&
-            v.getMilliseconds() === 0);
-    },
-};
-function padZero(v) {
-    return v < 9 ? '0' + v : '' + v;
-}
-function dateToDateString(d) {
-    return d.getFullYear() + '-' + padZero(d.getMonth() + 1) + '-' + padZero(d.getDate());
-}
-exports.ArrayDateType = {
-    ...exports.DateType,
-    name: '_date',
-    oid: constants_js_1.DataTypeOIDs._date,
-    elementsOID: constants_js_1.DataTypeOIDs.date,
-};
Index: node_modules/postgresql-client/esm/data-types/date-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/date-type.js b/node_modules/postgresql-client/esm/data-types/date-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/date-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,64 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-import { parseDateTime } from '../util/parse-datetime.js';
-const timeShift = 946684800000;
-export const DateType = {
-    name: 'date',
-    oid: DataTypeOIDs.date,
-    jsType: 'Date',
-    parseBinary(v, options) {
-        const fetchAsString = options.fetchAsString && options.fetchAsString.includes(DataTypeOIDs.date);
-        const t = v.readInt32BE();
-        if (t === 0x7fffffff)
-            return fetchAsString ? 'infinity' : Infinity;
-        if (t === -0x80000000)
-            return fetchAsString ? '-infinity' : -Infinity;
-        // Shift from 2000 to 1970
-        let d = new Date(t * 1000 * 86400 + timeShift);
-        if (fetchAsString || !options.utcDates)
-            d = new Date(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate());
-        return fetchAsString ? dateToDateString(d) : d;
-    },
-    encodeBinary(buf, v, options) {
-        if (typeof v === 'string')
-            v = parseDateTime(v, false, false, options.utcDates);
-        if (v === Infinity) {
-            buf.writeInt32BE(0x7fffffff);
-            return;
-        }
-        if (v === -Infinity) {
-            buf.writeInt32BE(-0x80000000);
-            return;
-        }
-        if (!(v instanceof Date))
-            v = new Date(v);
-        let n = options.utcDates ? v.getTime() : v.getTime() - v.getTimezoneOffset() * 60 * 1000;
-        n = (n - timeShift) / 1000 / 86400;
-        const t = Math.trunc(n + Number.EPSILON);
-        buf.writeInt32BE(t);
-    },
-    parseText(v, options) {
-        const fetchAsString = options.fetchAsString && options.fetchAsString.includes(DataTypeOIDs.date);
-        if (fetchAsString)
-            return v;
-        return parseDateTime(v, false, false, options.utcDates);
-    },
-    isType(v) {
-        return (v instanceof Date &&
-            v.getHours() === 0 &&
-            v.getMinutes() === 0 &&
-            v.getSeconds() === 0 &&
-            v.getMilliseconds() === 0);
-    },
-};
-function padZero(v) {
-    return v < 9 ? '0' + v : '' + v;
-}
-function dateToDateString(d) {
-    return d.getFullYear() + '-' + padZero(d.getMonth() + 1) + '-' + padZero(d.getDate());
-}
-export const ArrayDateType = {
-    ...DateType,
-    name: '_date',
-    oid: DataTypeOIDs._date,
-    elementsOID: DataTypeOIDs.date,
-};
Index: node_modules/postgresql-client/node_modules/postgres-bytea/decode.js
===================================================================
diff --git a/node_modules/postgresql-client/node_modules/postgres-bytea/decode.js b/node_modules/postgresql-client/node_modules/postgres-bytea/decode.js
deleted file mode 100644
--- a/node_modules/postgresql-client/node_modules/postgres-bytea/decode.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,40 +0,0 @@
-'use strict'
-
-module.exports = byteaToBinary
-
-function byteaToBinary (input) {
-  if (/^\\x/.test(input)) {
-    return byteaHexFormatToBinary(input)
-  }
-  return byteaEscapeFormatToBinary(input)
-}
-
-function byteaHexFormatToBinary (input) {
-  return Buffer.from(input.substr(2), 'hex')
-}
-
-function byteaEscapeFormatToBinary (input) {
-  let output = ''
-  let i = 0
-  while (i < input.length) {
-    if (input[i] !== '\\') {
-      output += input[i]
-      ++i
-    } else {
-      if (/[0-7]{3}/.test(input.substr(i + 1, 3))) {
-        output += String.fromCharCode(parseInt(input.substr(i + 1, 3), 8))
-        i += 4
-      } else {
-        let backslashes = 1
-        while (i + backslashes < input.length && input[i + backslashes] === '\\') {
-          backslashes++
-        }
-        for (let k = 0; k < Math.floor(backslashes / 2); ++k) {
-          output += '\\'
-        }
-        i += Math.floor(backslashes / 2) * 2
-      }
-    }
-  }
-  return Buffer.from(output, 'binary')
-}
Index: node_modules/postgresql-client/typings/util/decode-binaryarray.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/util/decode-binaryarray.d.ts b/node_modules/postgresql-client/typings/util/decode-binaryarray.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/util/decode-binaryarray.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,4 +0,0 @@
-/// <reference types="node" />
-import { DataMappingOptions } from '../interfaces/data-mapping-options.js';
-import type { DecodeBinaryFunction, Nullable } from '../types.js';
-export declare function decodeBinaryArray<T = any>(buf: Buffer, decoder: DecodeBinaryFunction, options?: DataMappingOptions): Nullable<T[]>;
Index: node_modules/postgresql-client/cjs/util/decode-binaryarray.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/util/decode-binaryarray.js b/node_modules/postgresql-client/cjs/util/decode-binaryarray.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/util/decode-binaryarray.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,39 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.decodeBinaryArray = void 0;
-const buffer_reader_js_1 = require("../protocol/buffer-reader.js");
-function decodeBinaryArray(buf, decoder, options = {}) {
-    if (!buf.length)
-        return null;
-    const io = new buffer_reader_js_1.BufferReader(buf);
-    const ndims = io.readInt32BE();
-    io.readInt32BE(); // hasNulls
-    const elementOID = io.readInt32BE(); // element oid
-    if (ndims === 0)
-        return [];
-    const dims = [];
-    const readDim = (level) => {
-        const elemCount = dims[level];
-        const target = new Array(elemCount);
-        for (let i = 0; i < elemCount; i++) {
-            if (level < dims.length - 1) {
-                target[i] = readDim(level + 1);
-                continue;
-            }
-            const len = io.readInt32BE();
-            if (len === -1)
-                target[i] = null;
-            else {
-                const b = io.readBuffer(len);
-                target[i] = decoder(b, { ...options, elementOID });
-            }
-        }
-        return target;
-    };
-    for (let d = 0; d < ndims; d++) {
-        dims[d] = io.readInt32BE();
-        io.readInt32BE(); // LBound
-    }
-    return readDim(0);
-}
-exports.decodeBinaryArray = decodeBinaryArray;
Index: node_modules/postgresql-client/esm/util/decode-binaryarray.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/util/decode-binaryarray.js b/node_modules/postgresql-client/esm/util/decode-binaryarray.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/util/decode-binaryarray.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,35 +0,0 @@
-import { BufferReader } from '../protocol/buffer-reader.js';
-export function decodeBinaryArray(buf, decoder, options = {}) {
-    if (!buf.length)
-        return null;
-    const io = new BufferReader(buf);
-    const ndims = io.readInt32BE();
-    io.readInt32BE(); // hasNulls
-    const elementOID = io.readInt32BE(); // element oid
-    if (ndims === 0)
-        return [];
-    const dims = [];
-    const readDim = (level) => {
-        const elemCount = dims[level];
-        const target = new Array(elemCount);
-        for (let i = 0; i < elemCount; i++) {
-            if (level < dims.length - 1) {
-                target[i] = readDim(level + 1);
-                continue;
-            }
-            const len = io.readInt32BE();
-            if (len === -1)
-                target[i] = null;
-            else {
-                const b = io.readBuffer(len);
-                target[i] = decoder(b, { ...options, elementOID });
-            }
-        }
-        return target;
-    };
-    for (let d = 0; d < ndims; d++) {
-        dims[d] = io.readInt32BE();
-        io.readInt32BE(); // LBound
-    }
-    return readDim(0);
-}
Index: node_modules/postgresql-client/node_modules/postgres-bytea/decode-test.js
===================================================================
diff --git a/node_modules/postgresql-client/node_modules/postgres-bytea/decode-test.js b/node_modules/postgresql-client/node_modules/postgres-bytea/decode-test.js
deleted file mode 100644
--- a/node_modules/postgresql-client/node_modules/postgres-bytea/decode-test.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,19 +0,0 @@
-'use strict'
-
-const test = require('tape')
-const decode = require('./')
-
-test('decode', (t) => {
-  t.test('pg <9 escape format', (t) => {
-    const buffer = Buffer.from([102, 111, 111, 0, 128, 92, 255])
-    t.ok(buffer.equals(decode('foo\\000\\200\\\\\\377')))
-    t.end()
-  })
-
-  t.test('pg >=9 hex format', (t) => {
-    t.ok(decode('\\x1234').equals(Buffer.from([0x12, 0x34])))
-    t.end()
-  })
-
-  t.end()
-})
Index: node_modules/postgresql-client/node_modules/postgres-bytea/decoder.js
===================================================================
diff --git a/node_modules/postgresql-client/node_modules/postgres-bytea/decoder.js b/node_modules/postgresql-client/node_modules/postgres-bytea/decoder.js
deleted file mode 100644
--- a/node_modules/postgresql-client/node_modules/postgres-bytea/decoder.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,56 +0,0 @@
-'use strict'
-
-const BufferList = require('obuf')
-const { Transform } = require('stream')
-
-const State = {
-  READ_PREFIX: 1,
-  READ_DATA: 2
-}
-
-class ByteaDecoder extends Transform {
-  constructor () {
-    super()
-    this._incomingChunks = new BufferList()
-    this._state = State.READ_PREFIX
-  }
-
-  _transform (chunk, encoding, callback) {
-    this._incomingChunks.push(chunk)
-
-    while (true) {
-      if (this._state === State.READ_PREFIX) {
-        if (this._incomingChunks.has(3)) {
-          const prefix = this._incomingChunks.take(3)
-          const prefixString = prefix.toString()
-          if (prefixString !== '\\\\x') {
-            return this.emit('error', new Error(`Expected double-escaped postgres bytea hex format prefix, received: '${prefixString}'`))
-          }
-          this._state = State.READ_DATA
-          continue
-        } else {
-          break
-        }
-      }
-
-      if (this._state === State.READ_DATA) {
-        if (this._incomingChunks.size >= 2) {
-          // two hex characters are needed to parse a byte. read even number of chars, and let remainder roll over
-          let evenChunk
-          const isEvenLength = this._incomingChunks.size % 2 === 0
-          if (isEvenLength) {
-            evenChunk = this._incomingChunks.take(this._incomingChunks.size)
-          } else {
-            evenChunk = this._incomingChunks.take(this._incomingChunks.size - 1)
-          }
-          this.push(Buffer.from(evenChunk.toString(), 'hex'))
-        }
-        break
-      }
-    }
-
-    callback()
-  }
-}
-
-module.exports = ByteaDecoder
Index: node_modules/postgresql-client/node_modules/postgres-bytea/decoder-test.js
===================================================================
diff --git a/node_modules/postgresql-client/node_modules/postgres-bytea/decoder-test.js b/node_modules/postgresql-client/node_modules/postgres-bytea/decoder-test.js
deleted file mode 100644
--- a/node_modules/postgresql-client/node_modules/postgres-bytea/decoder-test.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,29 +0,0 @@
-'use strict'
-
-const test = require('tape-promise').default(require('tape'))
-
-const { Readable } = require('stream')
-const streamToPromise = require('stream-to-promise')
-const Decoder = require('./decoder')
-
-test('decoder', (t) => {
-  t.test('input cuts at chunk boundary', async (t) => {
-    const input = [...Buffer.from('\\\\x616263').values()]
-
-    for (let i = 1; i < input.length; i++) {
-      const result = await streamToPromise(Readable.from([input.slice(0, i), input.slice(i)].map(Buffer.from)).pipe(new Decoder()))
-      t.equal(result.toString(), 'abc', `i=${i}`)
-    }
-  })
-
-  t.test('fails if not prefixed with \\\\x', async (t) => {
-    const dest = new Decoder()
-    const promise = streamToPromise(dest)
-
-    dest.write(Buffer.from('616263'))
-
-    await t.rejects(promise, /prefix/)
-  })
-
-  t.end()
-})
Index: node_modules/lightning-pool/esm/definitions.d.ts
===================================================================
diff --git a/node_modules/lightning-pool/esm/definitions.d.ts b/node_modules/lightning-pool/esm/definitions.d.ts
deleted file mode 100644
--- a/node_modules/lightning-pool/esm/definitions.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,34 +0,0 @@
-export type Callback = (e?: Error, ...args: any[]) => void;
-export declare enum PoolState {
-    IDLE = 0,
-    STARTED = 1,
-    CLOSING = 2,
-    CLOSED = 3
-}
-export declare enum ResourceState {
-    IDLE = 0,
-    ACQUIRED = 1,
-    VALIDATION = 2
-}
-export interface PoolFactory<T = any> {
-    create(info?: {
-        tries: number;
-        maxRetries: number;
-    }): Promise<T> | T;
-    destroy(resource: T): Promise<void> | void;
-    reset?(resource: T): Promise<void> | void;
-    validate?(resource: T): Promise<void> | void;
-}
-export interface PoolConfiguration {
-    acquireMaxRetries?: number;
-    acquireRetryWait?: number;
-    acquireTimeoutMillis?: number;
-    fifo?: boolean;
-    idleTimeoutMillis?: number;
-    houseKeepInterval?: number;
-    min?: number;
-    minIdle?: number;
-    max?: number;
-    maxQueue?: number;
-    validation?: boolean;
-}
Index: node_modules/lightning-pool/cjs/definitions.js
===================================================================
diff --git a/node_modules/lightning-pool/cjs/definitions.js b/node_modules/lightning-pool/cjs/definitions.js
deleted file mode 100644
--- a/node_modules/lightning-pool/cjs/definitions.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,16 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ResourceState = exports.PoolState = void 0;
-var PoolState;
-(function (PoolState) {
-    PoolState[PoolState["IDLE"] = 0] = "IDLE";
-    PoolState[PoolState["STARTED"] = 1] = "STARTED";
-    PoolState[PoolState["CLOSING"] = 2] = "CLOSING";
-    PoolState[PoolState["CLOSED"] = 3] = "CLOSED";
-})(PoolState || (exports.PoolState = PoolState = {}));
-var ResourceState;
-(function (ResourceState) {
-    ResourceState[ResourceState["IDLE"] = 0] = "IDLE";
-    ResourceState[ResourceState["ACQUIRED"] = 1] = "ACQUIRED";
-    ResourceState[ResourceState["VALIDATION"] = 2] = "VALIDATION";
-})(ResourceState || (exports.ResourceState = ResourceState = {}));
Index: node_modules/lightning-pool/esm/definitions.js
===================================================================
diff --git a/node_modules/lightning-pool/esm/definitions.js b/node_modules/lightning-pool/esm/definitions.js
deleted file mode 100644
--- a/node_modules/lightning-pool/esm/definitions.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,13 +0,0 @@
-export var PoolState;
-(function (PoolState) {
-    PoolState[PoolState["IDLE"] = 0] = "IDLE";
-    PoolState[PoolState["STARTED"] = 1] = "STARTED";
-    PoolState[PoolState["CLOSING"] = 2] = "CLOSING";
-    PoolState[PoolState["CLOSED"] = 3] = "CLOSED";
-})(PoolState || (PoolState = {}));
-export var ResourceState;
-(function (ResourceState) {
-    ResourceState[ResourceState["IDLE"] = 0] = "IDLE";
-    ResourceState[ResourceState["ACQUIRED"] = 1] = "ACQUIRED";
-    ResourceState[ResourceState["VALIDATION"] = 2] = "VALIDATION";
-})(ResourceState || (ResourceState = {}));
Index: node_modules/postgresql-client/typings/util/encode-binaryarray.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/util/encode-binaryarray.d.ts b/node_modules/postgresql-client/typings/util/encode-binaryarray.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/util/encode-binaryarray.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,5 +0,0 @@
-import type { DataMappingOptions } from '../interfaces/data-mapping-options.js';
-import type { SmartBuffer } from '../protocol/smart-buffer.js';
-import type { EncodeBinaryFunction, OID } from '../types.js';
-import { EncodeCalculateDimFunction } from '../types.js';
-export declare function encodeBinaryArray(io: SmartBuffer, value: any[], itemOid: OID, options: DataMappingOptions, encode: EncodeBinaryFunction, encodeCalculateDimFn?: EncodeCalculateDimFunction): void;
Index: node_modules/postgresql-client/cjs/util/encode-binaryarray.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/util/encode-binaryarray.js b/node_modules/postgresql-client/cjs/util/encode-binaryarray.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/util/encode-binaryarray.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,45 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.encodeBinaryArray = void 0;
-const constants_js_1 = require("../constants.js");
-const array_calculatedim_js_1 = require("./array-calculatedim.js");
-function encodeBinaryArray(io, value, itemOid, options, encode, encodeCalculateDimFn) {
-    encodeCalculateDimFn = encodeCalculateDimFn || array_calculatedim_js_1.arrayCalculateDim;
-    itemOid = itemOid || constants_js_1.DataTypeOIDs.varchar;
-    const dim = encodeCalculateDimFn(value);
-    const ndims = dim.length;
-    const zeroOffset = io.offset;
-    io.writeInt32BE(ndims) // Number of dimensions
-        .writeInt32BE(0) // reserved for has-null flag
-        .writeInt32BE(itemOid);
-    for (let d = 0; d < ndims; d++) {
-        io.writeInt32BE(dim[d]); // Number of items in dimension
-        io.writeInt32BE(0); // LBound always 0.
-    }
-    let hasNull = false;
-    let pos;
-    const writeDim = (arr, level) => {
-        const elemCount = dim[level];
-        for (let i = 0; i < elemCount; i++) {
-            if (level < dim.length - 1) {
-                writeDim(arr && arr[i], level + 1);
-                continue;
-            }
-            // if value is null
-            if (!arr || arr[i] == null) {
-                hasNull = true;
-                io.writeInt32BE(-1);
-                continue;
-            }
-            io.writeInt32BE(0); // reserved for data len
-            pos = io.offset;
-            encode(io, arr[i], options);
-            // Update item data size
-            io.buffer.writeInt32BE(io.length - pos, pos - 4);
-        }
-    };
-    writeDim(value, 0);
-    if (hasNull)
-        io.buffer.writeInt32BE(1, zeroOffset + 4);
-}
-exports.encodeBinaryArray = encodeBinaryArray;
Index: node_modules/postgresql-client/esm/util/encode-binaryarray.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/util/encode-binaryarray.js b/node_modules/postgresql-client/esm/util/encode-binaryarray.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/util/encode-binaryarray.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,41 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-import { arrayCalculateDim } from './array-calculatedim.js';
-export function encodeBinaryArray(io, value, itemOid, options, encode, encodeCalculateDimFn) {
-    encodeCalculateDimFn = encodeCalculateDimFn || arrayCalculateDim;
-    itemOid = itemOid || DataTypeOIDs.varchar;
-    const dim = encodeCalculateDimFn(value);
-    const ndims = dim.length;
-    const zeroOffset = io.offset;
-    io.writeInt32BE(ndims) // Number of dimensions
-        .writeInt32BE(0) // reserved for has-null flag
-        .writeInt32BE(itemOid);
-    for (let d = 0; d < ndims; d++) {
-        io.writeInt32BE(dim[d]); // Number of items in dimension
-        io.writeInt32BE(0); // LBound always 0.
-    }
-    let hasNull = false;
-    let pos;
-    const writeDim = (arr, level) => {
-        const elemCount = dim[level];
-        for (let i = 0; i < elemCount; i++) {
-            if (level < dim.length - 1) {
-                writeDim(arr && arr[i], level + 1);
-                continue;
-            }
-            // if value is null
-            if (!arr || arr[i] == null) {
-                hasNull = true;
-                io.writeInt32BE(-1);
-                continue;
-            }
-            io.writeInt32BE(0); // reserved for data len
-            pos = io.offset;
-            encode(io, arr[i], options);
-            // Update item data size
-            io.buffer.writeInt32BE(io.length - pos, pos - 4);
-        }
-    };
-    writeDim(value, 0);
-    if (hasNull)
-        io.buffer.writeInt32BE(1, zeroOffset + 4);
-}
Index: node_modules/postgresql-client/node_modules/postgres-bytea/encoder.js
===================================================================
diff --git a/node_modules/postgresql-client/node_modules/postgres-bytea/encoder.js b/node_modules/postgresql-client/node_modules/postgres-bytea/encoder.js
deleted file mode 100644
--- a/node_modules/postgresql-client/node_modules/postgres-bytea/encoder.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,17 +0,0 @@
-'use strict'
-
-const { Transform } = require('stream')
-
-class ByteaEncoder extends Transform {
-  constructor () {
-    super()
-    this.push('\\\\x')
-  }
-
-  _transform (chunk, encoding, callback) {
-    this.push(chunk.toString('hex'))
-    callback()
-  }
-}
-
-module.exports = ByteaEncoder
Index: node_modules/postgresql-client/node_modules/postgres-bytea/encoder-test.js
===================================================================
diff --git a/node_modules/postgresql-client/node_modules/postgres-bytea/encoder-test.js b/node_modules/postgresql-client/node_modules/postgres-bytea/encoder-test.js
deleted file mode 100644
--- a/node_modules/postgresql-client/node_modules/postgres-bytea/encoder-test.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,23 +0,0 @@
-'use strict'
-
-const test = require('tape-promise').default(require('tape'))
-const { Readable } = require('stream')
-const streamToPromise = require('stream-to-promise')
-const Encoder = require('./encoder')
-
-test('encoder', (t) => {
-  t.test('empty input gives empty result', async (t) => {
-    const result = await streamToPromise(Readable.from([]).pipe(new Encoder()))
-    t.equal(result.toString(), '\\\\x')
-  })
-
-  t.test('input cuts at chunk boundary multiple ways', async (t) => {
-    const input = [0x12, 0x34, 0x56]
-
-    for (let i = 1; i < input.length; i++) {
-      const result = await streamToPromise(Readable.from([input.slice(0, i), input.slice(i)].map(Buffer.from)).pipe(new Encoder()))
-      t.equal(result.toString(), '\\\\x123456')
-    }
-    t.end()
-  })
-})
Index: node_modules/pg-pool/test/ending.js
===================================================================
diff --git a/node_modules/pg-pool/test/ending.js b/node_modules/pg-pool/test/ending.js
deleted file mode 100644
--- a/node_modules/pg-pool/test/ending.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,40 +0,0 @@
-'use strict'
-const co = require('co')
-const expect = require('expect.js')
-
-const describe = require('mocha').describe
-const it = require('mocha').it
-
-const Pool = require('../')
-
-describe('pool ending', () => {
-  it('ends without being used', (done) => {
-    const pool = new Pool()
-    pool.end(done)
-  })
-
-  it('ends with a promise', () => {
-    return new Pool().end()
-  })
-
-  it(
-    'ends with clients',
-    co.wrap(function* () {
-      const pool = new Pool()
-      const res = yield pool.query('SELECT $1::text as name', ['brianc'])
-      expect(res.rows[0].name).to.equal('brianc')
-      return pool.end()
-    })
-  )
-
-  it(
-    'allows client to finish',
-    co.wrap(function* () {
-      const pool = new Pool()
-      const query = pool.query('SELECT $1::text as name', ['brianc'])
-      yield pool.end()
-      const res = yield query
-      expect(res.rows[0].name).to.equal('brianc')
-    })
-  )
-})
Index: node_modules/set-function-length/env.d.ts
===================================================================
diff --git a/node_modules/set-function-length/env.d.ts b/node_modules/set-function-length/env.d.ts
deleted file mode 100644
--- a/node_modules/set-function-length/env.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,9 +0,0 @@
-declare const env: {
-	__proto__: null,
-	boundFnsHaveConfigurableLengths: boolean;
-	boundFnsHaveWritableLengths: boolean;
-	functionsHaveConfigurableLengths: boolean;
-	functionsHaveWritableLengths: boolean;
-};
-
-export = env;
\ No newline at end of file
Index: node_modules/set-function-length/env.js
===================================================================
diff --git a/node_modules/set-function-length/env.js b/node_modules/set-function-length/env.js
deleted file mode 100644
--- a/node_modules/set-function-length/env.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,25 +0,0 @@
-'use strict';
-
-var gOPD = require('gopd');
-var bind = require('function-bind');
-
-var unbound = gOPD && gOPD(function () {}, 'length');
-// @ts-expect-error ts(2555) TS is overly strict with .call
-var bound = gOPD && gOPD(bind.call(function () {}), 'length');
-
-var functionsHaveConfigurableLengths = !!(unbound && unbound.configurable);
-
-var functionsHaveWritableLengths = !!(unbound && unbound.writable);
-
-var boundFnsHaveConfigurableLengths = !!(bound && bound.configurable);
-
-var boundFnsHaveWritableLengths = !!(bound && bound.writable);
-
-/** @type {import('./env')} */
-module.exports = {
-	__proto__: null,
-	boundFnsHaveConfigurableLengths: boundFnsHaveConfigurableLengths,
-	boundFnsHaveWritableLengths: boundFnsHaveWritableLengths,
-	functionsHaveConfigurableLengths: functionsHaveConfigurableLengths,
-	functionsHaveWritableLengths: functionsHaveWritableLengths
-};
Index: node_modules/pg-pool/test/error-handling.js
===================================================================
diff --git a/node_modules/pg-pool/test/error-handling.js b/node_modules/pg-pool/test/error-handling.js
deleted file mode 100644
--- a/node_modules/pg-pool/test/error-handling.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,260 +0,0 @@
-'use strict'
-const net = require('net')
-const co = require('co')
-const expect = require('expect.js')
-
-const describe = require('mocha').describe
-const it = require('mocha').it
-
-const Pool = require('../')
-
-describe('pool error handling', function () {
-  it('Should complete these queries without dying', function (done) {
-    const pool = new Pool()
-    let errors = 0
-    let shouldGet = 0
-    function runErrorQuery() {
-      shouldGet++
-      return new Promise(function (resolve, reject) {
-        pool
-          .query("SELECT 'asd'+1 ")
-          .then(function (res) {
-            reject(res) // this should always error
-          })
-          .catch(function (err) {
-            errors++
-            resolve(err)
-          })
-      })
-    }
-    const ps = []
-    for (let i = 0; i < 5; i++) {
-      ps.push(runErrorQuery())
-    }
-    Promise.all(ps).then(function () {
-      expect(shouldGet).to.eql(errors)
-      pool.end(done)
-    })
-  })
-
-  it('Catches errors in client.query', async function () {
-    let caught = false
-    const pool = new Pool()
-    try {
-      await pool.query(null)
-    } catch (e) {
-      caught = true
-    }
-    pool.end()
-    expect(caught).to.be(true)
-  })
-
-  describe('calling release more than once', () => {
-    it(
-      'should throw each time',
-      co.wrap(function* () {
-        const pool = new Pool()
-        const client = yield pool.connect()
-        client.release()
-        expect(() => client.release()).to.throwError()
-        expect(() => client.release()).to.throwError()
-        return yield pool.end()
-      })
-    )
-
-    it('should throw each time with callbacks', function (done) {
-      const pool = new Pool()
-
-      pool.connect(function (err, client, clientDone) {
-        expect(err).not.to.be.an(Error)
-        clientDone()
-
-        expect(() => clientDone()).to.throwError()
-        expect(() => clientDone()).to.throwError()
-
-        pool.end(done)
-      })
-    })
-  })
-
-  describe('using an ended pool', () => {
-    it('rejects all additional promises', (done) => {
-      const pool = new Pool()
-      const promises = []
-      pool.end().then(() => {
-        const squash = (promise) => promise.catch((e) => 'okay!')
-        promises.push(squash(pool.connect()))
-        promises.push(squash(pool.query('SELECT NOW()')))
-        promises.push(squash(pool.end()))
-        Promise.all(promises).then((res) => {
-          expect(res).to.eql(['okay!', 'okay!', 'okay!'])
-          done()
-        })
-      })
-    })
-
-    it('returns an error on all additional callbacks', (done) => {
-      const pool = new Pool()
-      pool.end(() => {
-        pool.query('SELECT *', (err) => {
-          expect(err).to.be.an(Error)
-          pool.connect((err) => {
-            expect(err).to.be.an(Error)
-            pool.end((err) => {
-              expect(err).to.be.an(Error)
-              done()
-            })
-          })
-        })
-      })
-    })
-  })
-
-  describe('error from idle client', () => {
-    it(
-      'removes client from pool',
-      co.wrap(function* () {
-        const pool = new Pool()
-        const client = yield pool.connect()
-        expect(pool.totalCount).to.equal(1)
-        expect(pool.waitingCount).to.equal(0)
-        expect(pool.idleCount).to.equal(0)
-        client.release()
-        yield new Promise((resolve, reject) => {
-          process.nextTick(() => {
-            let poolError
-            pool.once('error', (err) => {
-              poolError = err
-            })
-
-            let clientError
-            client.once('error', (err) => {
-              clientError = err
-            })
-
-            client.emit('error', new Error('expected'))
-
-            expect(clientError.message).to.equal('expected')
-            expect(poolError.message).to.equal('expected')
-            expect(pool.idleCount).to.equal(0)
-            expect(pool.totalCount).to.equal(0)
-            pool.end().then(resolve, reject)
-          })
-        })
-      })
-    )
-  })
-
-  describe('error from in-use client', () => {
-    it(
-      'keeps the client in the pool',
-      co.wrap(function* () {
-        const pool = new Pool()
-        const client = yield pool.connect()
-        expect(pool.totalCount).to.equal(1)
-        expect(pool.waitingCount).to.equal(0)
-        expect(pool.idleCount).to.equal(0)
-
-        yield new Promise((resolve, reject) => {
-          process.nextTick(() => {
-            let poolError
-            pool.once('error', (err) => {
-              poolError = err
-            })
-
-            let clientError
-            client.once('error', (err) => {
-              clientError = err
-            })
-
-            client.emit('error', new Error('expected'))
-
-            expect(clientError.message).to.equal('expected')
-            expect(poolError).not.to.be.ok()
-            expect(pool.idleCount).to.equal(0)
-            expect(pool.totalCount).to.equal(1)
-            client.release()
-            pool.end().then(resolve, reject)
-          })
-        })
-      })
-    )
-  })
-
-  describe('passing a function to pool.query', () => {
-    it('calls back with error', (done) => {
-      const pool = new Pool()
-      console.log('passing fn to query')
-      pool.query((err) => {
-        expect(err).to.be.an(Error)
-        pool.end(done)
-      })
-    })
-  })
-
-  describe('pool with lots of errors', () => {
-    it(
-      'continues to work and provide new clients',
-      co.wrap(function* () {
-        const pool = new Pool({ max: 1 })
-        const errors = []
-        for (var i = 0; i < 20; i++) {
-          try {
-            yield pool.query('invalid sql')
-          } catch (err) {
-            errors.push(err)
-          }
-        }
-        expect(errors).to.have.length(20)
-        expect(pool.idleCount).to.equal(0)
-        expect(pool.query).to.be.a(Function)
-        const res = yield pool.query('SELECT $1::text as name', ['brianc'])
-        expect(res.rows).to.have.length(1)
-        expect(res.rows[0].name).to.equal('brianc')
-        return pool.end()
-      })
-    )
-  })
-
-  it('should continue with queued items after a connection failure', (done) => {
-    const closeServer = net
-      .createServer((socket) => {
-        socket.destroy()
-      })
-      .unref()
-
-    closeServer.listen(() => {
-      const pool = new Pool({ max: 1, port: closeServer.address().port, host: 'localhost' })
-      pool.connect((err) => {
-        expect(err).to.be.an(Error)
-        if (err.code) {
-          expect(err.code).to.be('ECONNRESET')
-        }
-      })
-      pool.connect((err) => {
-        expect(err).to.be.an(Error)
-        if (err.code) {
-          expect(err.code).to.be('ECONNRESET')
-        }
-        closeServer.close(() => {
-          pool.end(done)
-        })
-      })
-    })
-  })
-
-  it('handles post-checkout client failures in pool.query', (done) => {
-    const pool = new Pool({ max: 1 })
-    pool.on('error', () => {
-      // We double close the connection in this test, prevent exception caused by that
-    })
-    pool.query('SELECT pg_sleep(5)', [], (err) => {
-      expect(err).to.be.an(Error)
-      done()
-    })
-
-    setTimeout(() => {
-      pool._clients[0].end()
-    }, 1000)
-  })
-})
Index: node_modules/postgresql-client/typings/util/escape-literal.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/util/escape-literal.d.ts b/node_modules/postgresql-client/typings/util/escape-literal.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/util/escape-literal.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,1 +0,0 @@
-export declare function escapeLiteral(str: string): string;
Index: node_modules/postgresql-client/cjs/util/escape-literal.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/util/escape-literal.js b/node_modules/postgresql-client/cjs/util/escape-literal.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/util/escape-literal.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,27 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.escapeLiteral = void 0;
-// Ported from PostgreSQL 9.2.4 source code in src/interfaces/libpq/fe-exec.c
-function escapeLiteral(str) {
-    let backSlash = false;
-    let out = "'";
-    let i;
-    let c;
-    const l = str.length;
-    for (i = 0; i < l; i++) {
-        c = str[i];
-        if (c === "'")
-            out += c + c;
-        else if (c === '\\') {
-            out += c + c;
-            backSlash = true;
-        }
-        else
-            out += c;
-    }
-    out += "'";
-    if (backSlash)
-        out = ' E' + out;
-    return out;
-}
-exports.escapeLiteral = escapeLiteral;
Index: node_modules/postgresql-client/esm/util/escape-literal.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/util/escape-literal.js b/node_modules/postgresql-client/esm/util/escape-literal.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/util/escape-literal.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,23 +0,0 @@
-// Ported from PostgreSQL 9.2.4 source code in src/interfaces/libpq/fe-exec.c
-export function escapeLiteral(str) {
-    let backSlash = false;
-    let out = "'";
-    let i;
-    let c;
-    const l = str.length;
-    for (i = 0; i < l; i++) {
-        c = str[i];
-        if (c === "'")
-            out += c + c;
-        else if (c === '\\') {
-            out += c + c;
-            backSlash = true;
-        }
-        else
-            out += c;
-    }
-    out += "'";
-    if (backSlash)
-        out = ' E' + out;
-    return out;
-}
Index: node_modules/pg-pool/test/events.js
===================================================================
diff --git a/node_modules/pg-pool/test/events.js b/node_modules/pg-pool/test/events.js
deleted file mode 100644
--- a/node_modules/pg-pool/test/events.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,124 +0,0 @@
-'use strict'
-
-const expect = require('expect.js')
-const EventEmitter = require('events').EventEmitter
-const describe = require('mocha').describe
-const it = require('mocha').it
-const Pool = require('../')
-
-describe('events', function () {
-  it('emits connect before callback', function (done) {
-    const pool = new Pool()
-    let emittedClient = false
-    pool.on('connect', function (client) {
-      emittedClient = client
-    })
-
-    pool.connect(function (err, client, release) {
-      if (err) return done(err)
-      release()
-      pool.end()
-      expect(client).to.be(emittedClient)
-      done()
-    })
-  })
-
-  it('emits "connect" only with a successful connection', function () {
-    const pool = new Pool({
-      // This client will always fail to connect
-      Client: mockClient({
-        connect: function (cb) {
-          process.nextTick(() => {
-            cb(new Error('bad news'))
-          })
-        },
-      }),
-    })
-    pool.on('connect', function () {
-      throw new Error('should never get here')
-    })
-    return pool.connect().catch((e) => expect(e.message).to.equal('bad news'))
-  })
-
-  it('emits acquire every time a client is acquired', function (done) {
-    const pool = new Pool()
-    let acquireCount = 0
-    pool.on('acquire', function (client) {
-      expect(client).to.be.ok()
-      acquireCount++
-    })
-    for (let i = 0; i < 10; i++) {
-      pool.connect(function (err, client, release) {
-        if (err) return done(err)
-        release()
-      })
-      pool.query('SELECT now()')
-    }
-    setTimeout(function () {
-      expect(acquireCount).to.be(20)
-      pool.end(done)
-    }, 100)
-  })
-
-  it('emits release every time a client is released', function (done) {
-    const pool = new Pool()
-    let releaseCount = 0
-    pool.on('release', function (err, client) {
-      expect(err instanceof Error).not.to.be(true)
-      expect(client).to.be.ok()
-      releaseCount++
-    })
-    const promises = []
-    for (let i = 0; i < 10; i++) {
-      pool.connect(function (err, client, release) {
-        if (err) return done(err)
-        release()
-      })
-      promises.push(pool.query('SELECT now()'))
-    }
-    Promise.all(promises).then(() => {
-      pool.end(() => {
-        expect(releaseCount).to.be(20)
-        done()
-      })
-    })
-  })
-
-  it('emits release with an error if client is released due to an error', function (done) {
-    const pool = new Pool()
-    pool.connect(function (err, client, release) {
-      expect(err).to.equal(undefined)
-      const releaseError = new Error('problem')
-      pool.once('release', function (err, errClient) {
-        expect(err).to.equal(releaseError)
-        expect(errClient).to.equal(client)
-        pool.end(done)
-      })
-      release(releaseError)
-    })
-  })
-
-  it('emits error and client if an idle client in the pool hits an error', function (done) {
-    const pool = new Pool()
-    pool.connect(function (err, client) {
-      expect(err).to.equal(undefined)
-      client.release()
-      setImmediate(function () {
-        client.emit('error', new Error('problem'))
-      })
-      pool.once('error', function (err, errClient) {
-        expect(err.message).to.equal('problem')
-        expect(errClient).to.equal(client)
-        done()
-      })
-    })
-  })
-})
-
-function mockClient(methods) {
-  return function () {
-    const client = new EventEmitter()
-    Object.assign(client, methods)
-    return client
-  }
-}
Index: node_modules/postgresql-client/typings/util/fast-parseint.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/util/fast-parseint.d.ts b/node_modules/postgresql-client/typings/util/fast-parseint.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/util/fast-parseint.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,1 +0,0 @@
-export declare function fastParseInt(str: string | number): number;
Index: node_modules/postgresql-client/cjs/util/fast-parseint.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/util/fast-parseint.js b/node_modules/postgresql-client/cjs/util/fast-parseint.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/util/fast-parseint.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,32 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.fastParseInt = void 0;
-function fastParseInt(str) {
-    /* istanbul ignore next */
-    if (typeof str === 'number')
-        return Math.floor(str);
-    // noinspection SuspiciousTypeOfGuard
-    if (typeof str !== 'string')
-        return NaN;
-    const strLength = str.length;
-    let res = 0;
-    let i = 0;
-    let neg = false;
-    if (str.startsWith('-')) {
-        neg = true;
-        i++;
-    }
-    do {
-        const charCode = str.charCodeAt(i);
-        /* istanbul ignore next */
-        if (charCode === 46)
-            return res;
-        /* istanbul ignore next */
-        if (charCode < 48 || charCode > 57)
-            return NaN;
-        res *= 10;
-        res += charCode - 48;
-    } while (++i < strLength);
-    return neg ? -res : res;
-}
-exports.fastParseInt = fastParseInt;
Index: node_modules/postgresql-client/esm/util/fast-parseint.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/util/fast-parseint.js b/node_modules/postgresql-client/esm/util/fast-parseint.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/util/fast-parseint.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,28 +0,0 @@
-export function fastParseInt(str) {
-    /* istanbul ignore next */
-    if (typeof str === 'number')
-        return Math.floor(str);
-    // noinspection SuspiciousTypeOfGuard
-    if (typeof str !== 'string')
-        return NaN;
-    const strLength = str.length;
-    let res = 0;
-    let i = 0;
-    let neg = false;
-    if (str.startsWith('-')) {
-        neg = true;
-        i++;
-    }
-    do {
-        const charCode = str.charCodeAt(i);
-        /* istanbul ignore next */
-        if (charCode === 46)
-            return res;
-        /* istanbul ignore next */
-        if (charCode < 48 || charCode > 57)
-            return NaN;
-        res *= 10;
-        res += charCode - 48;
-    } while (++i < strLength);
-    return neg ? -res : res;
-}
Index: node_modules/postgresql-client/typings/interfaces/field-info.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/interfaces/field-info.d.ts b/node_modules/postgresql-client/typings/interfaces/field-info.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/interfaces/field-info.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,46 +0,0 @@
-export interface FieldInfo {
-    /**
-     * Name of the field
-     */
-    fieldName: string;
-    /**
-     * OID of the table
-     */
-    tableId?: number;
-    /**
-     * OID of the column
-     */
-    columnId?: number;
-    /**
-     * OID of the data type
-     */
-    dataTypeId: number;
-    /**
-     * Name of the data type
-     */
-    dataTypeName: string;
-    /**
-     * OID of the elements data type if field is an array
-     */
-    elementDataTypeId?: number;
-    /**
-     * Name of the elements data type if field is an array
-     */
-    elementDataTypeName?: string;
-    /**
-     * JS type name that data type mapped
-     */
-    jsType: string;
-    /**
-     * Data length if data type has a fixed size
-     */
-    fixedSize?: number;
-    /**
-     * Modifier of the data type
-     */
-    modifier?: number;
-    /**
-     * Whether the data type is an array
-     */
-    isArray?: boolean;
-}
Index: node_modules/postgresql-client/cjs/interfaces/field-info.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/interfaces/field-info.js b/node_modules/postgresql-client/cjs/interfaces/field-info.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/interfaces/field-info.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,2 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
Index: node_modules/postgresql-client/esm/interfaces/field-info.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/interfaces/field-info.js b/node_modules/postgresql-client/esm/interfaces/field-info.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/interfaces/field-info.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,1 +0,0 @@
-export {};
Index: node_modules/postgresql-client/typings/data-types/float4-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/float4-type.d.ts b/node_modules/postgresql-client/typings/data-types/float4-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/float4-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const Float4Type: DataType;
-export declare const ArrayFloat4Type: DataType;
Index: node_modules/postgresql-client/cjs/data-types/float4-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/float4-type.js b/node_modules/postgresql-client/cjs/data-types/float4-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/float4-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,25 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayFloat4Type = exports.Float4Type = void 0;
-const constants_js_1 = require("../constants.js");
-exports.Float4Type = {
-    name: 'float4',
-    oid: constants_js_1.DataTypeOIDs.float4,
-    jsType: 'number',
-    parseBinary(v) {
-        return Math.round((v.readFloatBE(0) + Number.EPSILON) * 100) / 100;
-    },
-    encodeBinary(buf, v) {
-        buf.writeFloatBE(typeof v === 'number' ? v : parseFloat(v));
-    },
-    parseText: parseFloat,
-    isType(v) {
-        return typeof v === 'number';
-    },
-};
-exports.ArrayFloat4Type = {
-    ...exports.Float4Type,
-    name: '_float4',
-    oid: constants_js_1.DataTypeOIDs._float4,
-    elementsOID: constants_js_1.DataTypeOIDs.float4,
-};
Index: node_modules/postgresql-client/esm/data-types/float4-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/float4-type.js b/node_modules/postgresql-client/esm/data-types/float4-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/float4-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,22 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-export const Float4Type = {
-    name: 'float4',
-    oid: DataTypeOIDs.float4,
-    jsType: 'number',
-    parseBinary(v) {
-        return Math.round((v.readFloatBE(0) + Number.EPSILON) * 100) / 100;
-    },
-    encodeBinary(buf, v) {
-        buf.writeFloatBE(typeof v === 'number' ? v : parseFloat(v));
-    },
-    parseText: parseFloat,
-    isType(v) {
-        return typeof v === 'number';
-    },
-};
-export const ArrayFloat4Type = {
-    ...Float4Type,
-    name: '_float4',
-    oid: DataTypeOIDs._float4,
-    elementsOID: DataTypeOIDs.float4,
-};
Index: node_modules/postgresql-client/typings/data-types/float8-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/float8-type.d.ts b/node_modules/postgresql-client/typings/data-types/float8-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/float8-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const Float8Type: DataType;
-export declare const ArrayFloat8Type: DataType;
Index: node_modules/postgresql-client/cjs/data-types/float8-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/float8-type.js b/node_modules/postgresql-client/cjs/data-types/float8-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/float8-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,25 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayFloat8Type = exports.Float8Type = void 0;
-const constants_js_1 = require("../constants.js");
-exports.Float8Type = {
-    name: 'float8',
-    oid: constants_js_1.DataTypeOIDs.float8,
-    jsType: 'number',
-    parseBinary(v) {
-        return v.readDoubleBE(0);
-    },
-    encodeBinary(buf, v) {
-        buf.writeDoubleBE(typeof v === 'number' ? v : parseFloat(v));
-    },
-    parseText: parseFloat,
-    isType(v) {
-        return typeof v === 'number';
-    },
-};
-exports.ArrayFloat8Type = {
-    ...exports.Float8Type,
-    name: '_float8',
-    oid: constants_js_1.DataTypeOIDs._float8,
-    elementsOID: constants_js_1.DataTypeOIDs.float8,
-};
Index: node_modules/postgresql-client/esm/data-types/float8-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/float8-type.js b/node_modules/postgresql-client/esm/data-types/float8-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/float8-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,22 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-export const Float8Type = {
-    name: 'float8',
-    oid: DataTypeOIDs.float8,
-    jsType: 'number',
-    parseBinary(v) {
-        return v.readDoubleBE(0);
-    },
-    encodeBinary(buf, v) {
-        buf.writeDoubleBE(typeof v === 'number' ? v : parseFloat(v));
-    },
-    parseText: parseFloat,
-    isType(v) {
-        return typeof v === 'number';
-    },
-};
-export const ArrayFloat8Type = {
-    ...Float8Type,
-    name: '_float8',
-    oid: DataTypeOIDs._float8,
-    elementsOID: DataTypeOIDs.float8,
-};
Index: node_modules/postgresql-client/typings/protocol/frontend.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/protocol/frontend.d.ts b/node_modules/postgresql-client/typings/protocol/frontend.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/protocol/frontend.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,59 +0,0 @@
-/// <reference types="node" />
-import { DataTypeMap } from '../data-type-map.js';
-import { QueryOptions } from '../interfaces/query-options.js';
-import { Maybe, OID } from '../types.js';
-import { SASL } from './sasl.js';
-import { SmartBufferConfig } from './smart-buffer.js';
-export interface FrontendOptions {
-    buffer?: SmartBufferConfig;
-}
-export declare namespace Frontend {
-    interface StartupMessageArgs {
-        user: string;
-        database: string;
-        [index: string]: string;
-    }
-    interface BindMessageArgs {
-        typeMap: DataTypeMap;
-        statement?: string;
-        portal?: string;
-        paramTypes?: Maybe<OID>[];
-        params?: any[];
-        queryOptions: QueryOptions;
-    }
-    interface ParseMessageArgs {
-        statement?: string;
-        sql: string;
-        paramTypes?: Maybe<OID>[];
-    }
-    interface DescribeMessageArgs {
-        type: 'P' | 'S';
-        name?: string;
-    }
-    interface ExecuteMessageArgs {
-        portal?: string;
-        fetchCount?: number;
-    }
-    interface CloseMessageArgs {
-        type: 'P' | 'S';
-        name?: string;
-    }
-}
-export declare class Frontend {
-    private _io;
-    constructor(options?: FrontendOptions);
-    getSSLRequestMessage(): Buffer;
-    getStartupMessage(args: Frontend.StartupMessageArgs): Buffer;
-    getPasswordMessage(password: string): Buffer;
-    getSASLMessage(sasl: SASL.Session): Buffer;
-    getSASLFinalMessage(session: SASL.Session): Buffer;
-    getParseMessage(args: Frontend.ParseMessageArgs): Buffer;
-    getBindMessage(args: Frontend.BindMessageArgs): Buffer;
-    getDescribeMessage(args: Frontend.DescribeMessageArgs): Buffer;
-    getExecuteMessage(args: Frontend.ExecuteMessageArgs): Buffer;
-    getCloseMessage(args: Frontend.CloseMessageArgs): Buffer;
-    getQueryMessage(sql: string): Buffer;
-    getFlushMessage(): Buffer;
-    getTerminateMessage(): Buffer;
-    getSyncMessage(): Buffer;
-}
Index: node_modules/postgresql-client/cjs/protocol/frontend.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/protocol/frontend.js b/node_modules/postgresql-client/cjs/protocol/frontend.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/protocol/frontend.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,218 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.Frontend = void 0;
-const constants_js_1 = require("../constants.js");
-const encode_binaryarray_js_1 = require("../util/encode-binaryarray.js");
-const stringify_arrayliteral_js_1 = require("../util/stringify-arrayliteral.js");
-const protocol_js_1 = require("./protocol.js");
-const smart_buffer_js_1 = require("./smart-buffer.js");
-const DataFormat = protocol_js_1.Protocol.DataFormat;
-const StaticFlushBuffer = Buffer.from([protocol_js_1.Protocol.FrontendMessageCode.Flush, 0x00, 0x00, 0x00, 0x04]);
-const StaticTerminateBuffer = Buffer.from([protocol_js_1.Protocol.FrontendMessageCode.Terminate, 0x00, 0x00, 0x00, 0x04]);
-const StaticSyncBuffer = Buffer.from([protocol_js_1.Protocol.FrontendMessageCode.Sync, 0x00, 0x00, 0x00, 0x04]);
-class Frontend {
-    constructor(options) {
-        this._io = new smart_buffer_js_1.SmartBuffer(options?.buffer);
-    }
-    getSSLRequestMessage() {
-        return this._io
-            .start()
-            .writeUInt32BE(8) // Length of message contents in bytes, including self.
-            .writeUInt16BE(1234)
-            .writeUInt16BE(5679)
-            .flush();
-    }
-    getStartupMessage(args) {
-        const io = this._io
-            .start()
-            .writeInt32BE(0) // Preserve length
-            .writeInt16BE(protocol_js_1.Protocol.VERSION_MAJOR)
-            .writeInt16BE(protocol_js_1.Protocol.VERSION_MINOR);
-        for (const [k, v] of Object.entries(args)) {
-            if (k !== 'client_encoding')
-                io.writeCString(k, 'utf8').writeCString(v, 'utf8');
-        }
-        io.writeCString('client_encoding', 'utf8').writeCString('UTF8', 'utf8').writeUInt8(0);
-        return setLengthAndFlush(io, 0);
-    }
-    getPasswordMessage(password) {
-        const io = this._io
-            .start()
-            .writeInt8(protocol_js_1.Protocol.FrontendMessageCode.PasswordMessage)
-            .writeInt32BE(0) // Preserve header
-            .writeCString(password, 'utf8');
-        return setLengthAndFlush(io, 1);
-    }
-    getSASLMessage(sasl) {
-        const io = this._io
-            .start()
-            .writeInt8(protocol_js_1.Protocol.FrontendMessageCode.PasswordMessage)
-            .writeInt32BE(0) // Preserve header
-            .writeCString(sasl.mechanism, 'utf8')
-            .writeLString(sasl.clientFirstMessage);
-        return setLengthAndFlush(io, 1);
-    }
-    getSASLFinalMessage(session) {
-        const io = this._io
-            .start()
-            .writeInt8(protocol_js_1.Protocol.FrontendMessageCode.PasswordMessage)
-            .writeInt32BE(0) // Preserve header
-            .writeString(session.clientFinalMessage);
-        return setLengthAndFlush(io, 1);
-    }
-    getParseMessage(args) {
-        if (args.statement && args.statement.length > 63)
-            throw new Error('Query name length must be lower than 63');
-        const io = this._io
-            .start()
-            .writeInt8(protocol_js_1.Protocol.FrontendMessageCode.Parse)
-            .writeInt32BE(0) // Preserve header
-            .writeCString(args.statement || '', 'utf8')
-            .writeCString(args.sql, 'utf8')
-            .writeUInt16BE(args.paramTypes ? args.paramTypes.length : 0);
-        if (args.paramTypes) {
-            for (const t of args.paramTypes) {
-                io.writeUInt32BE(t || 0);
-            }
-        }
-        return setLengthAndFlush(io, 1);
-    }
-    getBindMessage(args) {
-        if (args.portal && args.portal.length > 63)
-            throw new Error('Portal name length must be lower than 63');
-        if (args.statement && args.statement.length > 63)
-            throw new Error('Query name length must be lower than 63');
-        const io = this._io
-            .start()
-            .writeInt8(protocol_js_1.Protocol.FrontendMessageCode.Bind)
-            .writeInt32BE(0) // Preserve header
-            .writeCString(args.portal || '', 'utf8')
-            .writeCString(args.statement || '', 'utf8');
-        const { params, paramTypes, queryOptions } = args;
-        const columnFormat = queryOptions.columnFormat != null ? queryOptions.columnFormat : constants_js_1.DEFAULT_COLUMN_FORMAT;
-        if (params && params.length) {
-            io.writeInt16BE(params.length);
-            const formatOffset = io.offset;
-            for (let i = 0; i < params.length; i++) {
-                io.writeInt16BE(0); // Preserve
-            }
-            // Write parameter values
-            io.writeUInt16BE(params.length);
-            for (let i = 0; i < params?.length; i++) {
-                let v = params[i];
-                if (v == null) {
-                    io.writeInt32BE(-1);
-                    continue;
-                }
-                const dataTypeOid = paramTypes ? paramTypes[i] : undefined;
-                const dt = dataTypeOid ? args.typeMap.get(dataTypeOid) : undefined;
-                if (dt) {
-                    if (typeof dt.encodeBinary === 'function') {
-                        // Set param format to binary
-                        io.buffer.writeInt16BE(protocol_js_1.Protocol.DataFormat.binary, formatOffset + i * 2);
-                        // Preserve data length
-                        io.writeInt32BE(0);
-                        const dataOffset = io.offset;
-                        if (dt.elementsOID) {
-                            // If data type is array
-                            v = Array.isArray(v) ? v : [v];
-                            (0, encode_binaryarray_js_1.encodeBinaryArray)(io, v, dt.elementsOID, queryOptions, dt.encodeBinary, dt.encodeCalculateDim);
-                        }
-                        else {
-                            dt.encodeBinary(io, v, queryOptions);
-                        }
-                        io.buffer.writeInt32BE(io.length - dataOffset, dataOffset - 4); // Update length
-                    }
-                    else if (typeof dt.encodeText === 'function') {
-                        v = dt.elementsOID ? (0, stringify_arrayliteral_js_1.stringifyArrayLiteral)(v, queryOptions, dt.encodeText) : dt.encodeText(v, queryOptions);
-                        io.writeLString(v, 'utf8');
-                    }
-                }
-                else if (Buffer.isBuffer(v)) {
-                    // Set param format to binary
-                    io.buffer.writeInt16BE(protocol_js_1.Protocol.DataFormat.binary, formatOffset + i * 2);
-                    // Preserve data length
-                    io.writeInt32BE(0);
-                    const dataOffset = io.offset;
-                    io.writeBuffer(v);
-                    io.buffer.writeInt32BE(io.length - dataOffset, dataOffset - 4); // Update length
-                }
-                else {
-                    io.writeLString('' + v, 'utf8');
-                }
-            }
-        }
-        else {
-            io.writeUInt16BE(0);
-            io.writeUInt16BE(0);
-        }
-        if (Array.isArray(columnFormat)) {
-            io.writeUInt16BE(columnFormat.length);
-            for (let i = 0; i < columnFormat.length; i++) {
-                io.writeUInt16BE(columnFormat[i]);
-            }
-        }
-        else if (columnFormat === DataFormat.binary) {
-            io.writeUInt16BE(1);
-            io.writeUInt16BE(DataFormat.binary);
-        }
-        else
-            io.writeUInt16BE(0);
-        return setLengthAndFlush(io, 1);
-    }
-    getDescribeMessage(args) {
-        if (args.name && args.name.length > 63)
-            throw new Error(args.type === 'P' ? 'Portal' : 'Statement' + 'name length must be lower than 63');
-        const io = this._io
-            .start()
-            .writeInt8(protocol_js_1.Protocol.FrontendMessageCode.Describe)
-            .writeInt32BE(0) // Preserve header
-            .writeUInt8(args.type.charCodeAt(0))
-            .writeCString(args.name || '', 'utf8');
-        return setLengthAndFlush(io, 1);
-    }
-    getExecuteMessage(args) {
-        if (args.fetchCount && (args.fetchCount < 0 || args.fetchCount > 4294967295))
-            throw new Error('fetchCount can be between 0 and 4294967295');
-        const io = this._io
-            .start()
-            .writeInt8(protocol_js_1.Protocol.FrontendMessageCode.Execute)
-            .writeInt32BE(0) // Preserve header
-            .writeCString(args.portal || '', 'utf8')
-            .writeUInt32BE(args.fetchCount || 0);
-        return setLengthAndFlush(io, 1);
-    }
-    getCloseMessage(args) {
-        if (args.name && args.name.length > 63)
-            throw new Error(args.type === 'P' ? 'Portal' : 'Statement' + 'name length must be lower than 63');
-        const io = this._io
-            .start()
-            .writeInt8(protocol_js_1.Protocol.FrontendMessageCode.Close)
-            .writeInt32BE(0) // Preserve header
-            .writeUInt8(args.type.charCodeAt(0))
-            .writeCString(args.name || '', 'utf8');
-        return setLengthAndFlush(io, 1);
-    }
-    getQueryMessage(sql) {
-        const io = this._io
-            .start()
-            .writeInt8(protocol_js_1.Protocol.FrontendMessageCode.Query)
-            .writeInt32BE(0) // Preserve header
-            .writeCString(sql || '', 'utf8');
-        return setLengthAndFlush(io, 1);
-    }
-    getFlushMessage() {
-        return StaticFlushBuffer;
-    }
-    getTerminateMessage() {
-        return StaticTerminateBuffer;
-    }
-    getSyncMessage() {
-        return StaticSyncBuffer;
-    }
-}
-exports.Frontend = Frontend;
-function setLengthAndFlush(io, lengthOffset) {
-    io.buffer.writeUInt32BE(io.length - lengthOffset, lengthOffset);
-    return io.flush();
-}
Index: node_modules/postgresql-client/esm/protocol/frontend.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/protocol/frontend.js b/node_modules/postgresql-client/esm/protocol/frontend.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/protocol/frontend.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,214 +0,0 @@
-import { DEFAULT_COLUMN_FORMAT } from '../constants.js';
-import { encodeBinaryArray } from '../util/encode-binaryarray.js';
-import { stringifyArrayLiteral } from '../util/stringify-arrayliteral.js';
-import { Protocol } from './protocol.js';
-import { SmartBuffer } from './smart-buffer.js';
-const DataFormat = Protocol.DataFormat;
-const StaticFlushBuffer = Buffer.from([Protocol.FrontendMessageCode.Flush, 0x00, 0x00, 0x00, 0x04]);
-const StaticTerminateBuffer = Buffer.from([Protocol.FrontendMessageCode.Terminate, 0x00, 0x00, 0x00, 0x04]);
-const StaticSyncBuffer = Buffer.from([Protocol.FrontendMessageCode.Sync, 0x00, 0x00, 0x00, 0x04]);
-export class Frontend {
-    constructor(options) {
-        this._io = new SmartBuffer(options?.buffer);
-    }
-    getSSLRequestMessage() {
-        return this._io
-            .start()
-            .writeUInt32BE(8) // Length of message contents in bytes, including self.
-            .writeUInt16BE(1234)
-            .writeUInt16BE(5679)
-            .flush();
-    }
-    getStartupMessage(args) {
-        const io = this._io
-            .start()
-            .writeInt32BE(0) // Preserve length
-            .writeInt16BE(Protocol.VERSION_MAJOR)
-            .writeInt16BE(Protocol.VERSION_MINOR);
-        for (const [k, v] of Object.entries(args)) {
-            if (k !== 'client_encoding')
-                io.writeCString(k, 'utf8').writeCString(v, 'utf8');
-        }
-        io.writeCString('client_encoding', 'utf8').writeCString('UTF8', 'utf8').writeUInt8(0);
-        return setLengthAndFlush(io, 0);
-    }
-    getPasswordMessage(password) {
-        const io = this._io
-            .start()
-            .writeInt8(Protocol.FrontendMessageCode.PasswordMessage)
-            .writeInt32BE(0) // Preserve header
-            .writeCString(password, 'utf8');
-        return setLengthAndFlush(io, 1);
-    }
-    getSASLMessage(sasl) {
-        const io = this._io
-            .start()
-            .writeInt8(Protocol.FrontendMessageCode.PasswordMessage)
-            .writeInt32BE(0) // Preserve header
-            .writeCString(sasl.mechanism, 'utf8')
-            .writeLString(sasl.clientFirstMessage);
-        return setLengthAndFlush(io, 1);
-    }
-    getSASLFinalMessage(session) {
-        const io = this._io
-            .start()
-            .writeInt8(Protocol.FrontendMessageCode.PasswordMessage)
-            .writeInt32BE(0) // Preserve header
-            .writeString(session.clientFinalMessage);
-        return setLengthAndFlush(io, 1);
-    }
-    getParseMessage(args) {
-        if (args.statement && args.statement.length > 63)
-            throw new Error('Query name length must be lower than 63');
-        const io = this._io
-            .start()
-            .writeInt8(Protocol.FrontendMessageCode.Parse)
-            .writeInt32BE(0) // Preserve header
-            .writeCString(args.statement || '', 'utf8')
-            .writeCString(args.sql, 'utf8')
-            .writeUInt16BE(args.paramTypes ? args.paramTypes.length : 0);
-        if (args.paramTypes) {
-            for (const t of args.paramTypes) {
-                io.writeUInt32BE(t || 0);
-            }
-        }
-        return setLengthAndFlush(io, 1);
-    }
-    getBindMessage(args) {
-        if (args.portal && args.portal.length > 63)
-            throw new Error('Portal name length must be lower than 63');
-        if (args.statement && args.statement.length > 63)
-            throw new Error('Query name length must be lower than 63');
-        const io = this._io
-            .start()
-            .writeInt8(Protocol.FrontendMessageCode.Bind)
-            .writeInt32BE(0) // Preserve header
-            .writeCString(args.portal || '', 'utf8')
-            .writeCString(args.statement || '', 'utf8');
-        const { params, paramTypes, queryOptions } = args;
-        const columnFormat = queryOptions.columnFormat != null ? queryOptions.columnFormat : DEFAULT_COLUMN_FORMAT;
-        if (params && params.length) {
-            io.writeInt16BE(params.length);
-            const formatOffset = io.offset;
-            for (let i = 0; i < params.length; i++) {
-                io.writeInt16BE(0); // Preserve
-            }
-            // Write parameter values
-            io.writeUInt16BE(params.length);
-            for (let i = 0; i < params?.length; i++) {
-                let v = params[i];
-                if (v == null) {
-                    io.writeInt32BE(-1);
-                    continue;
-                }
-                const dataTypeOid = paramTypes ? paramTypes[i] : undefined;
-                const dt = dataTypeOid ? args.typeMap.get(dataTypeOid) : undefined;
-                if (dt) {
-                    if (typeof dt.encodeBinary === 'function') {
-                        // Set param format to binary
-                        io.buffer.writeInt16BE(Protocol.DataFormat.binary, formatOffset + i * 2);
-                        // Preserve data length
-                        io.writeInt32BE(0);
-                        const dataOffset = io.offset;
-                        if (dt.elementsOID) {
-                            // If data type is array
-                            v = Array.isArray(v) ? v : [v];
-                            encodeBinaryArray(io, v, dt.elementsOID, queryOptions, dt.encodeBinary, dt.encodeCalculateDim);
-                        }
-                        else {
-                            dt.encodeBinary(io, v, queryOptions);
-                        }
-                        io.buffer.writeInt32BE(io.length - dataOffset, dataOffset - 4); // Update length
-                    }
-                    else if (typeof dt.encodeText === 'function') {
-                        v = dt.elementsOID ? stringifyArrayLiteral(v, queryOptions, dt.encodeText) : dt.encodeText(v, queryOptions);
-                        io.writeLString(v, 'utf8');
-                    }
-                }
-                else if (Buffer.isBuffer(v)) {
-                    // Set param format to binary
-                    io.buffer.writeInt16BE(Protocol.DataFormat.binary, formatOffset + i * 2);
-                    // Preserve data length
-                    io.writeInt32BE(0);
-                    const dataOffset = io.offset;
-                    io.writeBuffer(v);
-                    io.buffer.writeInt32BE(io.length - dataOffset, dataOffset - 4); // Update length
-                }
-                else {
-                    io.writeLString('' + v, 'utf8');
-                }
-            }
-        }
-        else {
-            io.writeUInt16BE(0);
-            io.writeUInt16BE(0);
-        }
-        if (Array.isArray(columnFormat)) {
-            io.writeUInt16BE(columnFormat.length);
-            for (let i = 0; i < columnFormat.length; i++) {
-                io.writeUInt16BE(columnFormat[i]);
-            }
-        }
-        else if (columnFormat === DataFormat.binary) {
-            io.writeUInt16BE(1);
-            io.writeUInt16BE(DataFormat.binary);
-        }
-        else
-            io.writeUInt16BE(0);
-        return setLengthAndFlush(io, 1);
-    }
-    getDescribeMessage(args) {
-        if (args.name && args.name.length > 63)
-            throw new Error(args.type === 'P' ? 'Portal' : 'Statement' + 'name length must be lower than 63');
-        const io = this._io
-            .start()
-            .writeInt8(Protocol.FrontendMessageCode.Describe)
-            .writeInt32BE(0) // Preserve header
-            .writeUInt8(args.type.charCodeAt(0))
-            .writeCString(args.name || '', 'utf8');
-        return setLengthAndFlush(io, 1);
-    }
-    getExecuteMessage(args) {
-        if (args.fetchCount && (args.fetchCount < 0 || args.fetchCount > 4294967295))
-            throw new Error('fetchCount can be between 0 and 4294967295');
-        const io = this._io
-            .start()
-            .writeInt8(Protocol.FrontendMessageCode.Execute)
-            .writeInt32BE(0) // Preserve header
-            .writeCString(args.portal || '', 'utf8')
-            .writeUInt32BE(args.fetchCount || 0);
-        return setLengthAndFlush(io, 1);
-    }
-    getCloseMessage(args) {
-        if (args.name && args.name.length > 63)
-            throw new Error(args.type === 'P' ? 'Portal' : 'Statement' + 'name length must be lower than 63');
-        const io = this._io
-            .start()
-            .writeInt8(Protocol.FrontendMessageCode.Close)
-            .writeInt32BE(0) // Preserve header
-            .writeUInt8(args.type.charCodeAt(0))
-            .writeCString(args.name || '', 'utf8');
-        return setLengthAndFlush(io, 1);
-    }
-    getQueryMessage(sql) {
-        const io = this._io
-            .start()
-            .writeInt8(Protocol.FrontendMessageCode.Query)
-            .writeInt32BE(0) // Preserve header
-            .writeCString(sql || '', 'utf8');
-        return setLengthAndFlush(io, 1);
-    }
-    getFlushMessage() {
-        return StaticFlushBuffer;
-    }
-    getTerminateMessage() {
-        return StaticTerminateBuffer;
-    }
-    getSyncMessage() {
-        return StaticSyncBuffer;
-    }
-}
-function setLengthAndFlush(io, lengthOffset) {
-    io.buffer.writeUInt32BE(io.length - lengthOffset, lengthOffset);
-    return io.flush();
-}
Index: node_modules/call-bind/.github/FUNDING.yml
===================================================================
diff --git a/node_modules/call-bind/.github/FUNDING.yml b/node_modules/call-bind/.github/FUNDING.yml
deleted file mode 100644
--- a/node_modules/call-bind/.github/FUNDING.yml	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,12 +0,0 @@
-# These are supported funding model platforms
-
-github: [ljharb]
-patreon: # Replace with a single Patreon username
-open_collective: # Replace with a single Open Collective username
-ko_fi: # Replace with a single Ko-fi username
-tidelift: npm/call-bind
-community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
-liberapay: # Replace with a single Liberapay username
-issuehunt: # Replace with a single IssueHunt username
-otechie: # Replace with a single Otechie username
-custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']
Index: node_modules/define-data-property/.github/FUNDING.yml
===================================================================
diff --git a/node_modules/define-data-property/.github/FUNDING.yml b/node_modules/define-data-property/.github/FUNDING.yml
deleted file mode 100644
--- a/node_modules/define-data-property/.github/FUNDING.yml	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,12 +0,0 @@
-# These are supported funding model platforms
-
-github: [ljharb]
-patreon: # Replace with a single Patreon username
-open_collective: # Replace with a single Open Collective username
-ko_fi: # Replace with a single Ko-fi username
-tidelift: npm/define-data-property
-community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
-liberapay: # Replace with a single Liberapay username
-issuehunt: # Replace with a single IssueHunt username
-otechie: # Replace with a single Otechie username
-custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']
Index: node_modules/has-property-descriptors/.github/FUNDING.yml
===================================================================
diff --git a/node_modules/has-property-descriptors/.github/FUNDING.yml b/node_modules/has-property-descriptors/.github/FUNDING.yml
deleted file mode 100644
--- a/node_modules/has-property-descriptors/.github/FUNDING.yml	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,12 +0,0 @@
-# These are supported funding model platforms
-
-github: [ljharb]
-patreon: # Replace with a single Patreon username
-open_collective: # Replace with a single Open Collective username
-ko_fi: # Replace with a single Ko-fi username
-tidelift: npm/has-property-descriptors
-community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
-liberapay: # Replace with a single Liberapay username
-issuehunt: # Replace with a single IssueHunt username
-otechie: # Replace with a single Otechie username
-custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']
Index: node_modules/has-proto/.github/FUNDING.yml
===================================================================
diff --git a/node_modules/has-proto/.github/FUNDING.yml b/node_modules/has-proto/.github/FUNDING.yml
deleted file mode 100644
--- a/node_modules/has-proto/.github/FUNDING.yml	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,12 +0,0 @@
-# These are supported funding model platforms
-
-github: [ljharb]
-patreon: # Replace with a single Patreon username
-open_collective: # Replace with a single Open Collective username
-ko_fi: # Replace with a single Ko-fi username
-tidelift: npm/has-proto
-community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
-liberapay: # Replace with a single Liberapay username
-issuehunt: # Replace with a single IssueHunt username
-otechie: # Replace with a single Otechie username
-custom: # Replace with up to 4 custom sponsorship URLs e.g., ['link1', 'link2']
Index: node_modules/set-function-length/.github/FUNDING.yml
===================================================================
diff --git a/node_modules/set-function-length/.github/FUNDING.yml b/node_modules/set-function-length/.github/FUNDING.yml
deleted file mode 100644
--- a/node_modules/set-function-length/.github/FUNDING.yml	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,12 +0,0 @@
-# These are supported funding model platforms
-
-github: [ljharb]
-patreon: # Replace with a single Patreon username
-open_collective: # Replace with a single Open Collective username
-ko_fi: # Replace with a single Ko-fi username
-tidelift: npm/set-function-name
-community_bridge: # Replace with a single Community Bridge project-name e.g., cloud-foundry
-liberapay: # Replace with a single Liberapay username
-issuehunt: # Replace with a single IssueHunt username
-otechie: # Replace with a single Otechie username
-custom: # Replace with a single custom sponsorship URL
Index: node_modules/postgresql-client/typings/util/get-parsers.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/util/get-parsers.d.ts b/node_modules/postgresql-client/typings/util/get-parsers.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/util/get-parsers.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,4 +0,0 @@
-import { DataTypeMap } from '../data-type-map.js';
-import { Protocol } from '../protocol/protocol.js';
-import { AnyParseFunction } from '../types.js';
-export declare function getParsers(typeMap: DataTypeMap, fields: Protocol.RowDescription[]): AnyParseFunction[];
Index: node_modules/postgresql-client/cjs/util/get-parsers.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/util/get-parsers.js b/node_modules/postgresql-client/cjs/util/get-parsers.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/util/get-parsers.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,42 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.getParsers = void 0;
-const constants_js_1 = require("../constants.js");
-const decode_binaryarray_js_1 = require("./decode-binaryarray.js");
-const parse_array_js_1 = require("./parse-array.js");
-const DefaultColumnParser = (v) => v;
-function getParsers(typeMap, fields) {
-    const parsers = new Array(fields.length);
-    const l = fields.length;
-    let f;
-    let i;
-    for (i = 0; i < l; i++) {
-        f = fields[i];
-        const dataTypeReg = typeMap.get(f.dataTypeId);
-        if (dataTypeReg) {
-            const isArray = !!dataTypeReg.elementsOID;
-            if (f.format === constants_js_1.DataFormat.binary) {
-                const decode = dataTypeReg.parseBinary;
-                if (decode) {
-                    parsers[i] = !isArray
-                        ? decode
-                        : (v, options) => (0, decode_binaryarray_js_1.decodeBinaryArray)(v, decode, options);
-                }
-            }
-            else if (f.format === constants_js_1.DataFormat.text) {
-                const parse = dataTypeReg.parseText;
-                if (parse) {
-                    parsers[i] = !isArray
-                        ? parse
-                        : (v, options) => (0, parse_array_js_1.parsePostgresArray)(v, {
-                            transform: x => parse(x, options),
-                            separator: dataTypeReg.arraySeparator,
-                        });
-                }
-            }
-        }
-        parsers[i] = parsers[i] || DefaultColumnParser;
-    }
-    return parsers;
-}
-exports.getParsers = getParsers;
Index: node_modules/postgresql-client/esm/util/get-parsers.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/util/get-parsers.js b/node_modules/postgresql-client/esm/util/get-parsers.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/util/get-parsers.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,38 +0,0 @@
-import { DataFormat } from '../constants.js';
-import { decodeBinaryArray } from './decode-binaryarray.js';
-import { parsePostgresArray } from './parse-array.js';
-const DefaultColumnParser = (v) => v;
-export function getParsers(typeMap, fields) {
-    const parsers = new Array(fields.length);
-    const l = fields.length;
-    let f;
-    let i;
-    for (i = 0; i < l; i++) {
-        f = fields[i];
-        const dataTypeReg = typeMap.get(f.dataTypeId);
-        if (dataTypeReg) {
-            const isArray = !!dataTypeReg.elementsOID;
-            if (f.format === DataFormat.binary) {
-                const decode = dataTypeReg.parseBinary;
-                if (decode) {
-                    parsers[i] = !isArray
-                        ? decode
-                        : (v, options) => decodeBinaryArray(v, decode, options);
-                }
-            }
-            else if (f.format === DataFormat.text) {
-                const parse = dataTypeReg.parseText;
-                if (parse) {
-                    parsers[i] = !isArray
-                        ? parse
-                        : (v, options) => parsePostgresArray(v, {
-                            transform: x => parse(x, options),
-                            separator: dataTypeReg.arraySeparator,
-                        });
-                }
-            }
-        }
-        parsers[i] = parsers[i] || DefaultColumnParser;
-    }
-    return parsers;
-}
Index: node_modules/cookie/HISTORY.md
===================================================================
diff --git a/node_modules/cookie/HISTORY.md b/node_modules/cookie/HISTORY.md
deleted file mode 100644
--- a/node_modules/cookie/HISTORY.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,128 +0,0 @@
-0.4.1 / 2020-04-21
-==================
-
-  * Fix `maxAge` option to reject invalid values
-
-0.4.0 / 2019-05-15
-==================
-
-  * Add `SameSite=None` support
-
-0.3.1 / 2016-05-26
-==================
-
-  * Fix `sameSite: true` to work with draft-7 clients
-    - `true` now sends `SameSite=Strict` instead of `SameSite`
-
-0.3.0 / 2016-05-26
-==================
-
-  * Add `sameSite` option
-    - Replaces `firstPartyOnly` option, never implemented by browsers
-  * Improve error message when `encode` is not a function
-  * Improve error message when `expires` is not a `Date`
-
-0.2.4 / 2016-05-20
-==================
-
-  * perf: enable strict mode
-  * perf: use for loop in parse
-  * perf: use string concatination for serialization
-
-0.2.3 / 2015-10-25
-==================
-
-  * Fix cookie `Max-Age` to never be a floating point number
-
-0.2.2 / 2015-09-17
-==================
-
-  * Fix regression when setting empty cookie value
-    - Ease the new restriction, which is just basic header-level validation
-  * Fix typo in invalid value errors
-
-0.2.1 / 2015-09-17
-==================
-
-  * Throw on invalid values provided to `serialize`
-    - Ensures the resulting string is a valid HTTP header value
-
-0.2.0 / 2015-08-13
-==================
-
-  * Add `firstPartyOnly` option
-  * Throw better error for invalid argument to parse
-  * perf: hoist regular expression
-
-0.1.5 / 2015-09-17
-==================
-
-  * Fix regression when setting empty cookie value
-    - Ease the new restriction, which is just basic header-level validation
-  * Fix typo in invalid value errors
-
-0.1.4 / 2015-09-17
-==================
-
-  * Throw better error for invalid argument to parse
-  * Throw on invalid values provided to `serialize`
-    - Ensures the resulting string is a valid HTTP header value
-
-0.1.3 / 2015-05-19
-==================
-
-  * Reduce the scope of try-catch deopt
-  * Remove argument reassignments
-
-0.1.2 / 2014-04-16
-==================
-
-  * Remove unnecessary files from npm package
-
-0.1.1 / 2014-02-23
-==================
-
-  * Fix bad parse when cookie value contained a comma
-  * Fix support for `maxAge` of `0`
-
-0.1.0 / 2013-05-01
-==================
-
-  * Add `decode` option
-  * Add `encode` option
-
-0.0.6 / 2013-04-08
-==================
-
-  * Ignore cookie parts missing `=`
-
-0.0.5 / 2012-10-29
-==================
-
-  * Return raw cookie value if value unescape errors
-
-0.0.4 / 2012-06-21
-==================
-
-  * Use encode/decodeURIComponent for cookie encoding/decoding
-    - Improve server/client interoperability
-
-0.0.3 / 2012-06-06
-==================
-
-  * Only escape special characters per the cookie RFC
-
-0.0.2 / 2012-06-01
-==================
-
-  * Fix `maxAge` option to not throw error
-
-0.0.1 / 2012-05-28
-==================
-
-  * Add more tests
-
-0.0.0 / 2012-05-28
-==================
-
-  * Initial release
Index: node_modules/encodeurl/HISTORY.md
===================================================================
diff --git a/node_modules/encodeurl/HISTORY.md b/node_modules/encodeurl/HISTORY.md
deleted file mode 100644
--- a/node_modules/encodeurl/HISTORY.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,14 +0,0 @@
-1.0.2 / 2018-01-21
-==================
-
-  * Fix encoding `%` as last character
-
-1.0.1 / 2016-06-09
-==================
-
-  * Fix encoding unpaired surrogates at start/end of string
-
-1.0.0 / 2016-06-08
-==================
-
-  * Initial release
Index: node_modules/express/node_modules/cookie/HISTORY.md
===================================================================
diff --git a/node_modules/express/node_modules/cookie/HISTORY.md b/node_modules/express/node_modules/cookie/HISTORY.md
deleted file mode 100644
--- a/node_modules/express/node_modules/cookie/HISTORY.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,147 +0,0 @@
-0.6.0 / 2023-11-06
-==================
-
-  * Add `partitioned` option
-
-0.5.0 / 2022-04-11
-==================
-
-  * Add `priority` option
-  * Fix `expires` option to reject invalid dates
-  * perf: improve default decode speed
-  * perf: remove slow string split in parse
-
-0.4.2 / 2022-02-02
-==================
-
-  * perf: read value only when assigning in parse
-  * perf: remove unnecessary regexp in parse
-
-0.4.1 / 2020-04-21
-==================
-
-  * Fix `maxAge` option to reject invalid values
-
-0.4.0 / 2019-05-15
-==================
-
-  * Add `SameSite=None` support
-
-0.3.1 / 2016-05-26
-==================
-
-  * Fix `sameSite: true` to work with draft-7 clients
-    - `true` now sends `SameSite=Strict` instead of `SameSite`
-
-0.3.0 / 2016-05-26
-==================
-
-  * Add `sameSite` option
-    - Replaces `firstPartyOnly` option, never implemented by browsers
-  * Improve error message when `encode` is not a function
-  * Improve error message when `expires` is not a `Date`
-
-0.2.4 / 2016-05-20
-==================
-
-  * perf: enable strict mode
-  * perf: use for loop in parse
-  * perf: use string concatenation for serialization
-
-0.2.3 / 2015-10-25
-==================
-
-  * Fix cookie `Max-Age` to never be a floating point number
-
-0.2.2 / 2015-09-17
-==================
-
-  * Fix regression when setting empty cookie value
-    - Ease the new restriction, which is just basic header-level validation
-  * Fix typo in invalid value errors
-
-0.2.1 / 2015-09-17
-==================
-
-  * Throw on invalid values provided to `serialize`
-    - Ensures the resulting string is a valid HTTP header value
-
-0.2.0 / 2015-08-13
-==================
-
-  * Add `firstPartyOnly` option
-  * Throw better error for invalid argument to parse
-  * perf: hoist regular expression
-
-0.1.5 / 2015-09-17
-==================
-
-  * Fix regression when setting empty cookie value
-    - Ease the new restriction, which is just basic header-level validation
-  * Fix typo in invalid value errors
-
-0.1.4 / 2015-09-17
-==================
-
-  * Throw better error for invalid argument to parse
-  * Throw on invalid values provided to `serialize`
-    - Ensures the resulting string is a valid HTTP header value
-
-0.1.3 / 2015-05-19
-==================
-
-  * Reduce the scope of try-catch deopt
-  * Remove argument reassignments
-
-0.1.2 / 2014-04-16
-==================
-
-  * Remove unnecessary files from npm package
-
-0.1.1 / 2014-02-23
-==================
-
-  * Fix bad parse when cookie value contained a comma
-  * Fix support for `maxAge` of `0`
-
-0.1.0 / 2013-05-01
-==================
-
-  * Add `decode` option
-  * Add `encode` option
-
-0.0.6 / 2013-04-08
-==================
-
-  * Ignore cookie parts missing `=`
-
-0.0.5 / 2012-10-29
-==================
-
-  * Return raw cookie value if value unescape errors
-
-0.0.4 / 2012-06-21
-==================
-
-  * Use encode/decodeURIComponent for cookie encoding/decoding
-    - Improve server/client interoperability
-
-0.0.3 / 2012-06-06
-==================
-
-  * Only escape special characters per the cookie RFC
-
-0.0.2 / 2012-06-01
-==================
-
-  * Fix `maxAge` option to not throw error
-
-0.0.1 / 2012-05-28
-==================
-
-  * Add more tests
-
-0.0.0 / 2012-05-28
-==================
-
-  * Initial release
Index: node_modules/path-to-regexp/History.md
===================================================================
diff --git a/node_modules/path-to-regexp/History.md b/node_modules/path-to-regexp/History.md
deleted file mode 100644
--- a/node_modules/path-to-regexp/History.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,36 +0,0 @@
-0.1.7 / 2015-07-28
-==================
-
-  * Fixed regression with escaped round brackets and matching groups.
-
-0.1.6 / 2015-06-19
-==================
-
-  * Replace `index` feature by outputting all parameters, unnamed and named.
-
-0.1.5 / 2015-05-08
-==================
-
-  * Add an index property for position in match result.
-
-0.1.4 / 2015-03-05
-==================
-
-  * Add license information
-
-0.1.3 / 2014-07-06
-==================
-
-  * Better array support
-  * Improved support for trailing slash in non-ending mode
-
-0.1.0 / 2014-03-06
-==================
-
-  * add options.end
-
-0.0.2 / 2013-02-10
-==================
-
-  * Update to match current express
-  * add .license property to component.json
Index: node_modules/pg-pool/test/idle-timeout.js
===================================================================
diff --git a/node_modules/pg-pool/test/idle-timeout.js b/node_modules/pg-pool/test/idle-timeout.js
deleted file mode 100644
--- a/node_modules/pg-pool/test/idle-timeout.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,118 +0,0 @@
-'use strict'
-const co = require('co')
-const expect = require('expect.js')
-
-const describe = require('mocha').describe
-const it = require('mocha').it
-const { fork } = require('child_process')
-const path = require('path')
-
-const Pool = require('../')
-
-const wait = (time) => new Promise((resolve) => setTimeout(resolve, time))
-
-describe('idle timeout', () => {
-  it('should timeout and remove the client', (done) => {
-    const pool = new Pool({ idleTimeoutMillis: 10 })
-    pool.query('SELECT NOW()')
-    pool.on('remove', () => {
-      expect(pool.idleCount).to.equal(0)
-      expect(pool.totalCount).to.equal(0)
-      done()
-    })
-  })
-
-  it(
-    'times out and removes clients when others are also removed',
-    co.wrap(function* () {
-      const pool = new Pool({ idleTimeoutMillis: 10 })
-      const clientA = yield pool.connect()
-      const clientB = yield pool.connect()
-      clientA.release()
-      clientB.release(new Error())
-
-      const removal = new Promise((resolve) => {
-        pool.on('remove', () => {
-          expect(pool.idleCount).to.equal(0)
-          expect(pool.totalCount).to.equal(0)
-          resolve()
-        })
-      })
-
-      const timeout = wait(100).then(() => Promise.reject(new Error('Idle timeout failed to occur')))
-
-      try {
-        yield Promise.race([removal, timeout])
-      } finally {
-        pool.end()
-      }
-    })
-  )
-
-  it(
-    'can remove idle clients and recreate them',
-    co.wrap(function* () {
-      const pool = new Pool({ idleTimeoutMillis: 1 })
-      const results = []
-      for (var i = 0; i < 20; i++) {
-        let query = pool.query('SELECT NOW()')
-        expect(pool.idleCount).to.equal(0)
-        expect(pool.totalCount).to.equal(1)
-        results.push(yield query)
-        yield wait(2)
-        expect(pool.idleCount).to.equal(0)
-        expect(pool.totalCount).to.equal(0)
-      }
-      expect(results).to.have.length(20)
-    })
-  )
-
-  it(
-    'does not time out clients which are used',
-    co.wrap(function* () {
-      const pool = new Pool({ idleTimeoutMillis: 1 })
-      const results = []
-      for (var i = 0; i < 20; i++) {
-        let client = yield pool.connect()
-        expect(pool.totalCount).to.equal(1)
-        expect(pool.idleCount).to.equal(0)
-        yield wait(10)
-        results.push(yield client.query('SELECT NOW()'))
-        client.release()
-        expect(pool.idleCount).to.equal(1)
-        expect(pool.totalCount).to.equal(1)
-      }
-      expect(results).to.have.length(20)
-      return pool.end()
-    })
-  )
-
-  it('unrefs the connections and timeouts so the program can exit when idle when the allowExitOnIdle option is set', function (done) {
-    const child = fork(path.join(__dirname, 'idle-timeout-exit.js'), [], {
-      silent: true,
-      env: { ...process.env, ALLOW_EXIT_ON_IDLE: '1' },
-    })
-    let result = ''
-    child.stdout.setEncoding('utf8')
-    child.stdout.on('data', (chunk) => (result += chunk))
-    child.on('error', (err) => done(err))
-    child.on('close', () => {
-      expect(result).to.equal('completed first\ncompleted second\n')
-      done()
-    })
-  })
-
-  it('keeps old behavior when allowExitOnIdle option is not set', function (done) {
-    const child = fork(path.join(__dirname, 'idle-timeout-exit.js'), [], {
-      silent: true,
-    })
-    let result = ''
-    child.stdout.setEncoding('utf8')
-    child.stdout.on('data', (chunk) => (result += chunk))
-    child.on('error', (err) => done(err))
-    child.on('close', () => {
-      expect(result).to.equal('completed first\ncompleted second\nremoved\n')
-      done()
-    })
-  })
-})
Index: node_modules/pg-pool/test/idle-timeout-exit.js
===================================================================
diff --git a/node_modules/pg-pool/test/idle-timeout-exit.js b/node_modules/pg-pool/test/idle-timeout-exit.js
deleted file mode 100644
--- a/node_modules/pg-pool/test/idle-timeout-exit.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,20 +0,0 @@
-// This test is meant to be spawned from idle-timeout.js
-if (module === require.main) {
-  const allowExitOnIdle = process.env.ALLOW_EXIT_ON_IDLE === '1'
-  const Pool = require('../index')
-
-  const pool = new Pool({
-    maxLifetimeSeconds: 2,
-    idleTimeoutMillis: 200,
-    ...(allowExitOnIdle ? { allowExitOnIdle: true } : {}),
-  })
-  pool.query('SELECT NOW()', (err, res) => console.log('completed first'))
-  pool.on('remove', () => {
-    console.log('removed')
-    done()
-  })
-
-  setTimeout(() => {
-    pool.query('SELECT * from generate_series(0, 1000)', (err, res) => console.log('completed second'))
-  }, 50)
-}
Index: node_modules/define-data-property/index.d.ts
===================================================================
diff --git a/node_modules/define-data-property/index.d.ts b/node_modules/define-data-property/index.d.ts
deleted file mode 100644
--- a/node_modules/define-data-property/index.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,12 +0,0 @@
-
-declare function defineDataProperty(
-    obj: Record<PropertyKey, unknown>,
-    property: keyof typeof obj,
-    value: typeof obj[typeof property],
-    nonEnumerable?: boolean | null,
-    nonWritable?: boolean | null,
-    nonConfigurable?: boolean | null,
-    loose?: boolean
-): void;
-
-export = defineDataProperty;
\ No newline at end of file
Index: node_modules/has-proto/index.d.ts
===================================================================
diff --git a/node_modules/has-proto/index.d.ts b/node_modules/has-proto/index.d.ts
deleted file mode 100644
--- a/node_modules/has-proto/index.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-declare function hasProto(): boolean;
-
-export = hasProto;
\ No newline at end of file
Index: node_modules/lightning-pool/esm/index.d.ts
===================================================================
diff --git a/node_modules/lightning-pool/esm/index.d.ts b/node_modules/lightning-pool/esm/index.d.ts
deleted file mode 100644
--- a/node_modules/lightning-pool/esm/index.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,6 +0,0 @@
-import { PoolConfiguration, PoolFactory } from './definitions.js';
-import { Pool } from './pool.js';
-export * from './definitions.js';
-export * from './pool.js';
-export * from './abort-error.js';
-export declare function createPool<T = any>(factory: PoolFactory<T>, config?: PoolConfiguration): Pool<T>;
Index: node_modules/power-tasks/typings/index.d.ts
===================================================================
diff --git a/node_modules/power-tasks/typings/index.d.ts b/node_modules/power-tasks/typings/index.d.ts
deleted file mode 100644
--- a/node_modules/power-tasks/typings/index.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-export * from './task.js';
-export * from './task-queue.js';
-export * from './abort-error.js';
Index: node_modules/set-function-length/index.d.ts
===================================================================
diff --git a/node_modules/set-function-length/index.d.ts b/node_modules/set-function-length/index.d.ts
deleted file mode 100644
--- a/node_modules/set-function-length/index.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,7 +0,0 @@
-declare namespace setFunctionLength {
-    type Func = (...args: unknown[]) => unknown;
-}
-
-declare function setFunctionLength<T extends setFunctionLength.Func = setFunctionLength.Func>(fn: T, length: number, loose?: boolean): T;
-
-export = setFunctionLength;
\ No newline at end of file
Index: node_modules/strict-typed-events/typings/index.d.ts
===================================================================
diff --git a/node_modules/strict-typed-events/typings/index.d.ts b/node_modules/strict-typed-events/typings/index.d.ts
deleted file mode 100644
--- a/node_modules/strict-typed-events/typings/index.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-export { Class, Type } from 'ts-gems';
-export * from './async-event-emitter.js';
-export * from './typed-events.js';
Index: node_modules/call-bind/test/index.js
===================================================================
diff --git a/node_modules/call-bind/test/index.js b/node_modules/call-bind/test/index.js
deleted file mode 100644
--- a/node_modules/call-bind/test/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,80 +0,0 @@
-'use strict';
-
-var callBind = require('../');
-var bind = require('function-bind');
-var gOPD = require('gopd');
-var hasStrictMode = require('has-strict-mode')();
-var forEach = require('for-each');
-var inspect = require('object-inspect');
-var v = require('es-value-fixtures');
-
-var test = require('tape');
-
-/*
- * older engines have length nonconfigurable
- * in io.js v3, it is configurable except on bound functions, hence the .bind()
- */
-var functionsHaveConfigurableLengths = !!(
-	gOPD
-	&& Object.getOwnPropertyDescriptor
-	&& Object.getOwnPropertyDescriptor(bind.call(function () {}), 'length').configurable
-);
-
-test('callBind', function (t) {
-	forEach(v.nonFunctions, function (nonFunction) {
-		t['throws'](
-			function () { callBind(nonFunction); },
-			TypeError,
-			inspect(nonFunction) + ' is not a function'
-		);
-	});
-
-	var sentinel = { sentinel: true };
-	var func = function (a, b) {
-		// eslint-disable-next-line no-invalid-this
-		return [!hasStrictMode && this === global ? undefined : this, a, b];
-	};
-	t.equal(func.length, 2, 'original function length is 2');
-	t.deepEqual(func(), [undefined, undefined, undefined], 'unbound func with too few args');
-	t.deepEqual(func(1, 2), [undefined, 1, 2], 'unbound func with right args');
-	t.deepEqual(func(1, 2, 3), [undefined, 1, 2], 'unbound func with too many args');
-
-	var bound = callBind(func);
-	t.equal(bound.length, func.length + 1, 'function length is preserved', { skip: !functionsHaveConfigurableLengths });
-	t.deepEqual(bound(), [undefined, undefined, undefined], 'bound func with too few args');
-	t.deepEqual(bound(1, 2), [hasStrictMode ? 1 : Object(1), 2, undefined], 'bound func with right args');
-	t.deepEqual(bound(1, 2, 3), [hasStrictMode ? 1 : Object(1), 2, 3], 'bound func with too many args');
-
-	var boundR = callBind(func, sentinel);
-	t.equal(boundR.length, func.length, 'function length is preserved', { skip: !functionsHaveConfigurableLengths });
-	t.deepEqual(boundR(), [sentinel, undefined, undefined], 'bound func with receiver, with too few args');
-	t.deepEqual(boundR(1, 2), [sentinel, 1, 2], 'bound func with receiver, with right args');
-	t.deepEqual(boundR(1, 2, 3), [sentinel, 1, 2], 'bound func with receiver, with too many args');
-
-	var boundArg = callBind(func, sentinel, 1);
-	t.equal(boundArg.length, func.length - 1, 'function length is preserved', { skip: !functionsHaveConfigurableLengths });
-	t.deepEqual(boundArg(), [sentinel, 1, undefined], 'bound func with receiver and arg, with too few args');
-	t.deepEqual(boundArg(2), [sentinel, 1, 2], 'bound func with receiver and arg, with right arg');
-	t.deepEqual(boundArg(2, 3), [sentinel, 1, 2], 'bound func with receiver and arg, with too many args');
-
-	t.test('callBind.apply', function (st) {
-		var aBound = callBind.apply(func);
-		st.deepEqual(aBound(sentinel), [sentinel, undefined, undefined], 'apply-bound func with no args');
-		st.deepEqual(aBound(sentinel, [1], 4), [sentinel, 1, undefined], 'apply-bound func with too few args');
-		st.deepEqual(aBound(sentinel, [1, 2], 4), [sentinel, 1, 2], 'apply-bound func with right args');
-
-		var aBoundArg = callBind.apply(func);
-		st.deepEqual(aBoundArg(sentinel, [1, 2, 3], 4), [sentinel, 1, 2], 'apply-bound func with too many args');
-		st.deepEqual(aBoundArg(sentinel, [1, 2], 4), [sentinel, 1, 2], 'apply-bound func with right args');
-		st.deepEqual(aBoundArg(sentinel, [1], 4), [sentinel, 1, undefined], 'apply-bound func with too few args');
-
-		var aBoundR = callBind.apply(func, sentinel);
-		st.deepEqual(aBoundR([1, 2, 3], 4), [sentinel, 1, 2], 'apply-bound func with receiver and too many args');
-		st.deepEqual(aBoundR([1, 2], 4), [sentinel, 1, 2], 'apply-bound func with receiver and right args');
-		st.deepEqual(aBoundR([1], 4), [sentinel, 1, undefined], 'apply-bound func with receiver and too few args');
-
-		st.end();
-	});
-
-	t.end();
-});
Index: node_modules/call-bind/index.js
===================================================================
diff --git a/node_modules/call-bind/index.js b/node_modules/call-bind/index.js
deleted file mode 100644
--- a/node_modules/call-bind/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,35 +0,0 @@
-'use strict';
-
-var bind = require('function-bind');
-var GetIntrinsic = require('get-intrinsic');
-var setFunctionLength = require('set-function-length');
-
-var $TypeError = require('es-errors/type');
-var $apply = GetIntrinsic('%Function.prototype.apply%');
-var $call = GetIntrinsic('%Function.prototype.call%');
-var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);
-
-var $defineProperty = require('es-define-property');
-var $max = GetIntrinsic('%Math.max%');
-
-module.exports = function callBind(originalFunction) {
-	if (typeof originalFunction !== 'function') {
-		throw new $TypeError('a function is required');
-	}
-	var func = $reflectApply(bind, $call, arguments);
-	return setFunctionLength(
-		func,
-		1 + $max(0, originalFunction.length - (arguments.length - 1)),
-		true
-	);
-};
-
-var applyBind = function applyBind() {
-	return $reflectApply(bind, $apply, arguments);
-};
-
-if ($defineProperty) {
-	$defineProperty(module.exports, 'apply', { value: applyBind });
-} else {
-	module.exports.apply = applyBind;
-}
Index: node_modules/define-data-property/test/index.js
===================================================================
diff --git a/node_modules/define-data-property/test/index.js b/node_modules/define-data-property/test/index.js
deleted file mode 100644
--- a/node_modules/define-data-property/test/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,392 +0,0 @@
-'use strict';
-
-var test = require('tape');
-var v = require('es-value-fixtures');
-var forEach = require('for-each');
-var inspect = require('object-inspect');
-var hasOwn = require('hasown');
-var hasPropertyDescriptors = require('has-property-descriptors')();
-var getOwnPropertyDescriptors = require('object.getownpropertydescriptors');
-var ownKeys = require('reflect.ownkeys');
-
-var defineDataProperty = require('../');
-
-test('defineDataProperty', function (t) {
-	t.test('argument validation', function (st) {
-		forEach(v.primitives, function (nonObject) {
-			st['throws'](
-				// @ts-expect-error
-				function () { defineDataProperty(nonObject, 'key', 'value'); },
-				TypeError,
-				'throws on non-object input: ' + inspect(nonObject)
-			);
-		});
-
-		forEach(v.nonPropertyKeys, function (nonPropertyKey) {
-			st['throws'](
-				// @ts-expect-error
-				function () { defineDataProperty({}, nonPropertyKey, 'value'); },
-				TypeError,
-				'throws on non-PropertyKey input: ' + inspect(nonPropertyKey)
-			);
-		});
-
-		forEach(v.nonBooleans, function (nonBoolean) {
-			if (nonBoolean !== null) {
-				st['throws'](
-					// @ts-expect-error
-					function () { defineDataProperty({}, 'key', 'value', nonBoolean); },
-					TypeError,
-					'throws on non-boolean nonEnumerable: ' + inspect(nonBoolean)
-				);
-
-				st['throws'](
-					// @ts-expect-error
-					function () { defineDataProperty({}, 'key', 'value', false, nonBoolean); },
-					TypeError,
-					'throws on non-boolean nonWritable: ' + inspect(nonBoolean)
-				);
-
-				st['throws'](
-					// @ts-expect-error
-					function () { defineDataProperty({}, 'key', 'value', false, false, nonBoolean); },
-					TypeError,
-					'throws on non-boolean nonConfigurable: ' + inspect(nonBoolean)
-				);
-			}
-		});
-
-		st.end();
-	});
-
-	t.test('normal data property', function (st) {
-		/** @type {Record<PropertyKey, string>} */
-		var obj = { existing: 'existing property' };
-		st.ok(hasOwn(obj, 'existing'), 'has initial own property');
-		st.equal(obj.existing, 'existing property', 'has expected initial value');
-
-		var res = defineDataProperty(obj, 'added', 'added property');
-		st.equal(res, void undefined, 'returns `undefined`');
-		st.ok(hasOwn(obj, 'added'), 'has expected own property');
-		st.equal(obj.added, 'added property', 'has expected value');
-
-		defineDataProperty(obj, 'existing', 'new value');
-		st.ok(hasOwn(obj, 'existing'), 'still has expected own property');
-		st.equal(obj.existing, 'new value', 'has new expected value');
-
-		defineDataProperty(obj, 'explicit1', 'new value', false);
-		st.ok(hasOwn(obj, 'explicit1'), 'has expected own property (explicit enumerable)');
-		st.equal(obj.explicit1, 'new value', 'has new expected value (explicit enumerable)');
-
-		defineDataProperty(obj, 'explicit2', 'new value', false, false);
-		st.ok(hasOwn(obj, 'explicit2'), 'has expected own property (explicit writable)');
-		st.equal(obj.explicit2, 'new value', 'has new expected value (explicit writable)');
-
-		defineDataProperty(obj, 'explicit3', 'new value', false, false, false);
-		st.ok(hasOwn(obj, 'explicit3'), 'has expected own property (explicit configurable)');
-		st.equal(obj.explicit3, 'new value', 'has new expected value (explicit configurable)');
-
-		st.end();
-	});
-
-	t.test('loose mode', { skip: !hasPropertyDescriptors }, function (st) {
-		var obj = { existing: 'existing property' };
-
-		defineDataProperty(obj, 'added', 'added value 1', true, null, null, true);
-		st.deepEqual(
-			getOwnPropertyDescriptors(obj),
-			{
-				existing: {
-					configurable: true,
-					enumerable: true,
-					value: 'existing property',
-					writable: true
-				},
-				added: {
-					configurable: true,
-					enumerable: !hasPropertyDescriptors,
-					value: 'added value 1',
-					writable: true
-				}
-			},
-			'in loose mode, obj still adds property 1'
-		);
-
-		defineDataProperty(obj, 'added', 'added value 2', false, true, null, true);
-		st.deepEqual(
-			getOwnPropertyDescriptors(obj),
-			{
-				existing: {
-					configurable: true,
-					enumerable: true,
-					value: 'existing property',
-					writable: true
-				},
-				added: {
-					configurable: true,
-					enumerable: true,
-					value: 'added value 2',
-					writable: !hasPropertyDescriptors
-				}
-			},
-			'in loose mode, obj still adds property 2'
-		);
-
-		defineDataProperty(obj, 'added', 'added value 3', false, false, true, true);
-		st.deepEqual(
-			getOwnPropertyDescriptors(obj),
-			{
-				existing: {
-					configurable: true,
-					enumerable: true,
-					value: 'existing property',
-					writable: true
-				},
-				added: {
-					configurable: !hasPropertyDescriptors,
-					enumerable: true,
-					value: 'added value 3',
-					writable: true
-				}
-			},
-			'in loose mode, obj still adds property 3'
-		);
-
-		st.end();
-	});
-
-	t.test('non-normal data property, ES3', { skip: hasPropertyDescriptors }, function (st) {
-		/** @type {Record<PropertyKey, string>} */
-		var obj = { existing: 'existing property' };
-
-		st['throws'](
-			function () { defineDataProperty(obj, 'added', 'added value', true); },
-			SyntaxError,
-			'nonEnumerable throws a Syntax Error'
-		);
-
-		st['throws'](
-			function () { defineDataProperty(obj, 'added', 'added value', false, true); },
-			SyntaxError,
-			'nonWritable throws a Syntax Error'
-		);
-
-		st['throws'](
-			function () { defineDataProperty(obj, 'added', 'added value', false, false, true); },
-			SyntaxError,
-			'nonWritable throws a Syntax Error'
-		);
-
-		st.deepEqual(
-			ownKeys(obj),
-			['existing'],
-			'obj still has expected keys'
-		);
-		st.equal(obj.existing, 'existing property', 'obj still has expected values');
-
-		st.end();
-	});
-
-	t.test('new non-normal data property, ES5+', { skip: !hasPropertyDescriptors }, function (st) {
-		/** @type {Record<PropertyKey, string>} */
-		var obj = { existing: 'existing property' };
-
-		defineDataProperty(obj, 'nonEnum', null, true);
-		defineDataProperty(obj, 'nonWrit', null, false, true);
-		defineDataProperty(obj, 'nonConf', null, false, false, true);
-
-		st.deepEqual(
-			getOwnPropertyDescriptors(obj),
-			{
-				existing: {
-					configurable: true,
-					enumerable: true,
-					value: 'existing property',
-					writable: true
-				},
-				nonEnum: {
-					configurable: true,
-					enumerable: false,
-					value: null,
-					writable: true
-				},
-				nonWrit: {
-					configurable: true,
-					enumerable: true,
-					value: null,
-					writable: false
-				},
-				nonConf: {
-					configurable: false,
-					enumerable: true,
-					value: null,
-					writable: true
-				}
-			},
-			'obj has expected property descriptors'
-		);
-
-		st.end();
-	});
-
-	t.test('existing non-normal data property, ES5+', { skip: !hasPropertyDescriptors }, function (st) {
-		// test case changing an existing non-normal property
-
-		/** @type {Record<string, null | string>} */
-		var obj = {};
-		Object.defineProperty(obj, 'nonEnum', { configurable: true, enumerable: false, value: null, writable: true });
-		Object.defineProperty(obj, 'nonWrit', { configurable: true, enumerable: true, value: null, writable: false });
-		Object.defineProperty(obj, 'nonConf', { configurable: false, enumerable: true, value: null, writable: true });
-
-		st.deepEqual(
-			getOwnPropertyDescriptors(obj),
-			{
-				nonEnum: {
-					configurable: true,
-					enumerable: false,
-					value: null,
-					writable: true
-				},
-				nonWrit: {
-					configurable: true,
-					enumerable: true,
-					value: null,
-					writable: false
-				},
-				nonConf: {
-					configurable: false,
-					enumerable: true,
-					value: null,
-					writable: true
-				}
-			},
-			'obj initially has expected property descriptors'
-		);
-
-		defineDataProperty(obj, 'nonEnum', 'new value', false);
-		defineDataProperty(obj, 'nonWrit', 'new value', false, false);
-		st['throws'](
-			function () { defineDataProperty(obj, 'nonConf', 'new value', false, false, false); },
-			TypeError,
-			'can not alter a nonconfigurable property'
-		);
-
-		st.deepEqual(
-			getOwnPropertyDescriptors(obj),
-			{
-				nonEnum: {
-					configurable: true,
-					enumerable: true,
-					value: 'new value',
-					writable: true
-				},
-				nonWrit: {
-					configurable: true,
-					enumerable: true,
-					value: 'new value',
-					writable: true
-				},
-				nonConf: {
-					configurable: false,
-					enumerable: true,
-					value: null,
-					writable: true
-				}
-			},
-			'obj ends up with expected property descriptors'
-		);
-
-		st.end();
-	});
-
-	t.test('frozen object, ES5+', { skip: !hasPropertyDescriptors }, function (st) {
-		var frozen = Object.freeze({ existing: true });
-
-		st['throws'](
-			function () { defineDataProperty(frozen, 'existing', 'new value'); },
-			TypeError,
-			'frozen object can not modify an existing property'
-		);
-
-		st['throws'](
-			function () { defineDataProperty(frozen, 'new', 'new property'); },
-			TypeError,
-			'frozen object can not add a new property'
-		);
-
-		st.end();
-	});
-
-	t.test('sealed object, ES5+', { skip: !hasPropertyDescriptors }, function (st) {
-		var sealed = Object.seal({ existing: true });
-		st.deepEqual(
-			Object.getOwnPropertyDescriptor(sealed, 'existing'),
-			{
-				configurable: false,
-				enumerable: true,
-				value: true,
-				writable: true
-			},
-			'existing value on sealed object has expected descriptor'
-		);
-
-		defineDataProperty(sealed, 'existing', 'new value');
-
-		st.deepEqual(
-			Object.getOwnPropertyDescriptor(sealed, 'existing'),
-			{
-				configurable: false,
-				enumerable: true,
-				value: 'new value',
-				writable: true
-			},
-			'existing value on sealed object has changed descriptor'
-		);
-
-		st['throws'](
-			function () { defineDataProperty(sealed, 'new', 'new property'); },
-			TypeError,
-			'sealed object can not add a new property'
-		);
-
-		st.end();
-	});
-
-	t.test('nonextensible object, ES5+', { skip: !hasPropertyDescriptors }, function (st) {
-		var nonExt = Object.preventExtensions({ existing: true });
-
-		st.deepEqual(
-			Object.getOwnPropertyDescriptor(nonExt, 'existing'),
-			{
-				configurable: true,
-				enumerable: true,
-				value: true,
-				writable: true
-			},
-			'existing value on non-extensible object has expected descriptor'
-		);
-
-		defineDataProperty(nonExt, 'existing', 'new value', true);
-
-		st.deepEqual(
-			Object.getOwnPropertyDescriptor(nonExt, 'existing'),
-			{
-				configurable: true,
-				enumerable: false,
-				value: 'new value',
-				writable: true
-			},
-			'existing value on non-extensible object has changed descriptor'
-		);
-
-		st['throws'](
-			function () { defineDataProperty(nonExt, 'new', 'new property'); },
-			TypeError,
-			'non-extensible object can not add a new property'
-		);
-
-		st.end();
-	});
-
-	t.end();
-});
Index: node_modules/define-data-property/index.js
===================================================================
diff --git a/node_modules/define-data-property/index.js b/node_modules/define-data-property/index.js
deleted file mode 100644
--- a/node_modules/define-data-property/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,56 +0,0 @@
-'use strict';
-
-var $defineProperty = require('es-define-property');
-
-var $SyntaxError = require('es-errors/syntax');
-var $TypeError = require('es-errors/type');
-
-var gopd = require('gopd');
-
-/** @type {import('.')} */
-module.exports = function defineDataProperty(
-	obj,
-	property,
-	value
-) {
-	if (!obj || (typeof obj !== 'object' && typeof obj !== 'function')) {
-		throw new $TypeError('`obj` must be an object or a function`');
-	}
-	if (typeof property !== 'string' && typeof property !== 'symbol') {
-		throw new $TypeError('`property` must be a string or a symbol`');
-	}
-	if (arguments.length > 3 && typeof arguments[3] !== 'boolean' && arguments[3] !== null) {
-		throw new $TypeError('`nonEnumerable`, if provided, must be a boolean or null');
-	}
-	if (arguments.length > 4 && typeof arguments[4] !== 'boolean' && arguments[4] !== null) {
-		throw new $TypeError('`nonWritable`, if provided, must be a boolean or null');
-	}
-	if (arguments.length > 5 && typeof arguments[5] !== 'boolean' && arguments[5] !== null) {
-		throw new $TypeError('`nonConfigurable`, if provided, must be a boolean or null');
-	}
-	if (arguments.length > 6 && typeof arguments[6] !== 'boolean') {
-		throw new $TypeError('`loose`, if provided, must be a boolean');
-	}
-
-	var nonEnumerable = arguments.length > 3 ? arguments[3] : null;
-	var nonWritable = arguments.length > 4 ? arguments[4] : null;
-	var nonConfigurable = arguments.length > 5 ? arguments[5] : null;
-	var loose = arguments.length > 6 ? arguments[6] : false;
-
-	/* @type {false | TypedPropertyDescriptor<unknown>} */
-	var desc = !!gopd && gopd(obj, property);
-
-	if ($defineProperty) {
-		$defineProperty(obj, property, {
-			configurable: nonConfigurable === null && desc ? desc.configurable : !nonConfigurable,
-			enumerable: nonEnumerable === null && desc ? desc.enumerable : !nonEnumerable,
-			value: value,
-			writable: nonWritable === null && desc ? desc.writable : !nonWritable
-		});
-	} else if (loose || (!nonEnumerable && !nonWritable && !nonConfigurable)) {
-		// must fall back to [[Set]], and was not explicitly asked to make non-enumerable, non-writable, or non-configurable
-		obj[property] = value; // eslint-disable-line no-param-reassign
-	} else {
-		throw new $SyntaxError('This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.');
-	}
-};
Index: node_modules/has-property-descriptors/test/index.js
===================================================================
diff --git a/node_modules/has-property-descriptors/test/index.js b/node_modules/has-property-descriptors/test/index.js
deleted file mode 100644
--- a/node_modules/has-property-descriptors/test/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,57 +0,0 @@
-'use strict';
-
-var test = require('tape');
-
-var hasPropertyDescriptors = require('../');
-
-var sentinel = {};
-
-test('hasPropertyDescriptors', function (t) {
-	t.equal(typeof hasPropertyDescriptors, 'function', 'is a function');
-	t.equal(typeof hasPropertyDescriptors.hasArrayLengthDefineBug, 'function', '`hasArrayLengthDefineBug` property is a function');
-
-	var yes = hasPropertyDescriptors();
-	t.test('property descriptors', { skip: !yes }, function (st) {
-		var o = { a: sentinel };
-
-		st.deepEqual(
-			Object.getOwnPropertyDescriptor(o, 'a'),
-			{
-				configurable: true,
-				enumerable: true,
-				value: sentinel,
-				writable: true
-			},
-			'has expected property descriptor'
-		);
-
-		Object.defineProperty(o, 'a', { enumerable: false, writable: false });
-
-		st.deepEqual(
-			Object.getOwnPropertyDescriptor(o, 'a'),
-			{
-				configurable: true,
-				enumerable: false,
-				value: sentinel,
-				writable: false
-			},
-			'has expected property descriptor after [[Define]]'
-		);
-
-		st.end();
-	});
-
-	var arrayBug = hasPropertyDescriptors.hasArrayLengthDefineBug();
-	t.test('defining array lengths', { skip: !yes || arrayBug }, function (st) {
-		var arr = [1, , 3]; // eslint-disable-line no-sparse-arrays
-		st.equal(arr.length, 3, 'array starts with length 3');
-
-		Object.defineProperty(arr, 'length', { value: 5 });
-
-		st.equal(arr.length, 5, 'array ends with length 5');
-
-		st.end();
-	});
-
-	t.end();
-});
Index: node_modules/has-property-descriptors/index.js
===================================================================
diff --git a/node_modules/has-property-descriptors/index.js b/node_modules/has-property-descriptors/index.js
deleted file mode 100644
--- a/node_modules/has-property-descriptors/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,22 +0,0 @@
-'use strict';
-
-var $defineProperty = require('es-define-property');
-
-var hasPropertyDescriptors = function hasPropertyDescriptors() {
-	return !!$defineProperty;
-};
-
-hasPropertyDescriptors.hasArrayLengthDefineBug = function hasArrayLengthDefineBug() {
-	// node v0.6 has a bug where array lengths can be Set but not Defined
-	if (!$defineProperty) {
-		return null;
-	}
-	try {
-		return $defineProperty([], 'length', { value: 1 }).length !== 1;
-	} catch (e) {
-		// In Firefox 4-22, defining length on an array throws an exception.
-		return true;
-	}
-};
-
-module.exports = hasPropertyDescriptors;
Index: node_modules/has-proto/test/index.js
===================================================================
diff --git a/node_modules/has-proto/test/index.js b/node_modules/has-proto/test/index.js
deleted file mode 100644
--- a/node_modules/has-proto/test/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,19 +0,0 @@
-'use strict';
-
-var test = require('tape');
-var hasProto = require('../');
-
-test('hasProto', function (t) {
-	var result = hasProto();
-	t.equal(typeof result, 'boolean', 'returns a boolean (' + result + ')');
-
-	var obj = { __proto__: null };
-	if (result) {
-		t.notOk('toString' in obj, 'null object lacks toString');
-	} else {
-		t.ok('toString' in obj, 'without proto, null object has toString');
-		t.equal(obj.__proto__, null); // eslint-disable-line no-proto
-	}
-
-	t.end();
-});
Index: node_modules/has-proto/index.js
===================================================================
diff --git a/node_modules/has-proto/index.js b/node_modules/has-proto/index.js
deleted file mode 100644
--- a/node_modules/has-proto/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,15 +0,0 @@
-'use strict';
-
-var test = {
-	__proto__: null,
-	foo: {}
-};
-
-var $Object = Object;
-
-/** @type {import('.')} */
-module.exports = function hasProto() {
-	// @ts-expect-error: TS errors on an inherited property for some reason
-	return { __proto__: test }.foo === test.foo
-		&& !(test instanceof $Object);
-};
Index: node_modules/pg-pool/test/index.js
===================================================================
diff --git a/node_modules/pg-pool/test/index.js b/node_modules/pg-pool/test/index.js
deleted file mode 100644
--- a/node_modules/pg-pool/test/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,226 +0,0 @@
-'use strict'
-const expect = require('expect.js')
-const _ = require('lodash')
-
-const describe = require('mocha').describe
-const it = require('mocha').it
-
-const Pool = require('../')
-
-describe('pool', function () {
-  describe('with callbacks', function () {
-    it('works totally unconfigured', function (done) {
-      const pool = new Pool()
-      pool.connect(function (err, client, release) {
-        if (err) return done(err)
-        client.query('SELECT NOW()', function (err, res) {
-          release()
-          if (err) return done(err)
-          expect(res.rows).to.have.length(1)
-          pool.end(done)
-        })
-      })
-    })
-
-    it('passes props to clients', function (done) {
-      const pool = new Pool({ binary: true })
-      pool.connect(function (err, client, release) {
-        release()
-        if (err) return done(err)
-        expect(client.binary).to.eql(true)
-        pool.end(done)
-      })
-    })
-
-    it('can run a query with a callback without parameters', function (done) {
-      const pool = new Pool()
-      pool.query('SELECT 1 as num', function (err, res) {
-        expect(res.rows[0]).to.eql({ num: 1 })
-        pool.end(function () {
-          done(err)
-        })
-      })
-    })
-
-    it('can run a query with a callback', function (done) {
-      const pool = new Pool()
-      pool.query('SELECT $1::text as name', ['brianc'], function (err, res) {
-        expect(res.rows[0]).to.eql({ name: 'brianc' })
-        pool.end(function () {
-          done(err)
-        })
-      })
-    })
-
-    it('passes connection errors to callback', function (done) {
-      const pool = new Pool({ port: 53922 })
-      pool.query('SELECT $1::text as name', ['brianc'], function (err, res) {
-        expect(res).to.be(undefined)
-        expect(err).to.be.an(Error)
-        // a connection error should not polute the pool with a dead client
-        expect(pool.totalCount).to.equal(0)
-        pool.end(function (err) {
-          done(err)
-        })
-      })
-    })
-
-    it('does not pass client to error callback', function (done) {
-      const pool = new Pool({ port: 58242 })
-      pool.connect(function (err, client, release) {
-        expect(err).to.be.an(Error)
-        expect(client).to.be(undefined)
-        expect(release).to.be.a(Function)
-        pool.end(done)
-      })
-    })
-
-    it('removes client if it errors in background', function (done) {
-      const pool = new Pool()
-      pool.connect(function (err, client, release) {
-        release()
-        if (err) return done(err)
-        client.testString = 'foo'
-        setTimeout(function () {
-          client.emit('error', new Error('on purpose'))
-        }, 10)
-      })
-      pool.on('error', function (err) {
-        expect(err.message).to.be('on purpose')
-        expect(err.client).to.not.be(undefined)
-        expect(err.client.testString).to.be('foo')
-        err.client.connection.stream.on('end', function () {
-          pool.end(done)
-        })
-      })
-    })
-
-    it('should not change given options', function (done) {
-      const options = { max: 10 }
-      const pool = new Pool(options)
-      pool.connect(function (err, client, release) {
-        release()
-        if (err) return done(err)
-        expect(options).to.eql({ max: 10 })
-        pool.end(done)
-      })
-    })
-
-    it('does not create promises when connecting', function (done) {
-      const pool = new Pool()
-      const returnValue = pool.connect(function (err, client, release) {
-        release()
-        if (err) return done(err)
-        pool.end(done)
-      })
-      expect(returnValue).to.be(undefined)
-    })
-
-    it('does not create promises when querying', function (done) {
-      const pool = new Pool()
-      const returnValue = pool.query('SELECT 1 as num', function (err) {
-        pool.end(function () {
-          done(err)
-        })
-      })
-      expect(returnValue).to.be(undefined)
-    })
-
-    it('does not create promises when ending', function (done) {
-      const pool = new Pool()
-      const returnValue = pool.end(done)
-      expect(returnValue).to.be(undefined)
-    })
-
-    it('never calls callback syncronously', function (done) {
-      const pool = new Pool()
-      pool.connect((err, client) => {
-        if (err) throw err
-        client.release()
-        setImmediate(() => {
-          let called = false
-          pool.connect((err, client) => {
-            if (err) throw err
-            called = true
-            client.release()
-            setImmediate(() => {
-              pool.end(done)
-            })
-          })
-          expect(called).to.equal(false)
-        })
-      })
-    })
-  })
-
-  describe('with promises', function () {
-    it('connects, queries, and disconnects', function () {
-      const pool = new Pool()
-      return pool.connect().then(function (client) {
-        return client.query('select $1::text as name', ['hi']).then(function (res) {
-          expect(res.rows).to.eql([{ name: 'hi' }])
-          client.release()
-          return pool.end()
-        })
-      })
-    })
-
-    it('executes a query directly', () => {
-      const pool = new Pool()
-      return pool.query('SELECT $1::text as name', ['hi']).then((res) => {
-        expect(res.rows).to.have.length(1)
-        expect(res.rows[0].name).to.equal('hi')
-        return pool.end()
-      })
-    })
-
-    it('properly pools clients', function () {
-      const pool = new Pool({ poolSize: 9 })
-      const promises = _.times(30, function () {
-        return pool.connect().then(function (client) {
-          return client.query('select $1::text as name', ['hi']).then(function (res) {
-            client.release()
-            return res
-          })
-        })
-      })
-      return Promise.all(promises).then(function (res) {
-        expect(res).to.have.length(30)
-        expect(pool.totalCount).to.be(9)
-        return pool.end()
-      })
-    })
-
-    it('supports just running queries', function () {
-      const pool = new Pool({ poolSize: 9 })
-      const text = 'select $1::text as name'
-      const values = ['hi']
-      const query = { text: text, values: values }
-      const promises = _.times(30, () => pool.query(query))
-      return Promise.all(promises).then(function (queries) {
-        expect(queries).to.have.length(30)
-        return pool.end()
-      })
-    })
-
-    it('recovers from query errors', function () {
-      const pool = new Pool()
-
-      const errors = []
-      const promises = _.times(30, () => {
-        return pool.query('SELECT asldkfjasldkf').catch(function (e) {
-          errors.push(e)
-        })
-      })
-      return Promise.all(promises).then(() => {
-        expect(errors).to.have.length(30)
-        expect(pool.totalCount).to.equal(0)
-        expect(pool.idleCount).to.equal(0)
-        return pool.query('SELECT $1::text as name', ['hi']).then(function (res) {
-          expect(res.rows).to.eql([{ name: 'hi' }])
-          return pool.end()
-        })
-      })
-    })
-  })
-})
Index: node_modules/postgresql-client/node_modules/postgres-bytea/index.js
===================================================================
diff --git a/node_modules/postgresql-client/node_modules/postgres-bytea/index.js b/node_modules/postgresql-client/node_modules/postgres-bytea/index.js
deleted file mode 100644
--- a/node_modules/postgresql-client/node_modules/postgres-bytea/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,6 +0,0 @@
-'use strict'
-
-exports = module.exports = require('./decode')
-
-exports.Encoder = require('./encoder')
-exports.Decoder = require('./decoder')
Index: node_modules/set-function-length/index.js
===================================================================
diff --git a/node_modules/set-function-length/index.js b/node_modules/set-function-length/index.js
deleted file mode 100644
--- a/node_modules/set-function-length/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,42 +0,0 @@
-'use strict';
-
-var GetIntrinsic = require('get-intrinsic');
-var define = require('define-data-property');
-var hasDescriptors = require('has-property-descriptors')();
-var gOPD = require('gopd');
-
-var $TypeError = require('es-errors/type');
-var $floor = GetIntrinsic('%Math.floor%');
-
-/** @type {import('.')} */
-module.exports = function setFunctionLength(fn, length) {
-	if (typeof fn !== 'function') {
-		throw new $TypeError('`fn` is not a function');
-	}
-	if (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {
-		throw new $TypeError('`length` must be a positive 32-bit integer');
-	}
-
-	var loose = arguments.length > 2 && !!arguments[2];
-
-	var functionLengthIsConfigurable = true;
-	var functionLengthIsWritable = true;
-	if ('length' in fn && gOPD) {
-		var desc = gOPD(fn, 'length');
-		if (desc && !desc.configurable) {
-			functionLengthIsConfigurable = false;
-		}
-		if (desc && !desc.writable) {
-			functionLengthIsWritable = false;
-		}
-	}
-
-	if (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {
-		if (hasDescriptors) {
-			define(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);
-		} else {
-			define(/** @type {Parameters<define>[0]} */ (fn), 'length', length);
-		}
-	}
-	return fn;
-};
Index: node_modules/postgresql-client/typings/data-types/int2-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/int2-type.d.ts b/node_modules/postgresql-client/typings/data-types/int2-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/int2-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const Int2Type: DataType;
-export declare const ArrayInt2Type: DataType;
Index: node_modules/postgresql-client/cjs/data-types/int2-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/int2-type.js b/node_modules/postgresql-client/cjs/data-types/int2-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/int2-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,26 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayInt2Type = exports.Int2Type = void 0;
-const constants_js_1 = require("../constants.js");
-const fast_parseint_js_1 = require("../util/fast-parseint.js");
-exports.Int2Type = {
-    name: 'int2',
-    oid: constants_js_1.DataTypeOIDs.int2,
-    jsType: 'number',
-    parseBinary(v) {
-        return v.readInt16BE(0);
-    },
-    encodeBinary(buf, v) {
-        buf.writeInt16BE((0, fast_parseint_js_1.fastParseInt)(v));
-    },
-    parseText: fast_parseint_js_1.fastParseInt,
-    isType(v) {
-        return typeof v === 'number' && Number.isInteger(v) && v >= -32768 && v <= 32767;
-    },
-};
-exports.ArrayInt2Type = {
-    ...exports.Int2Type,
-    name: '_int2',
-    oid: constants_js_1.DataTypeOIDs._int2,
-    elementsOID: constants_js_1.DataTypeOIDs.int2,
-};
Index: node_modules/postgresql-client/esm/data-types/int2-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/int2-type.js b/node_modules/postgresql-client/esm/data-types/int2-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/int2-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,23 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-import { fastParseInt } from '../util/fast-parseint.js';
-export const Int2Type = {
-    name: 'int2',
-    oid: DataTypeOIDs.int2,
-    jsType: 'number',
-    parseBinary(v) {
-        return v.readInt16BE(0);
-    },
-    encodeBinary(buf, v) {
-        buf.writeInt16BE(fastParseInt(v));
-    },
-    parseText: fastParseInt,
-    isType(v) {
-        return typeof v === 'number' && Number.isInteger(v) && v >= -32768 && v <= 32767;
-    },
-};
-export const ArrayInt2Type = {
-    ...Int2Type,
-    name: '_int2',
-    oid: DataTypeOIDs._int2,
-    elementsOID: DataTypeOIDs.int2,
-};
Index: node_modules/postgresql-client/typings/data-types/int2-vector-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/int2-vector-type.d.ts b/node_modules/postgresql-client/typings/data-types/int2-vector-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/int2-vector-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const Int2VectorType: DataType;
-export declare const ArrayInt2VectorType: DataType;
Index: node_modules/postgresql-client/cjs/data-types/int2-vector-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/int2-vector-type.js b/node_modules/postgresql-client/cjs/data-types/int2-vector-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/int2-vector-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,38 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayInt2VectorType = exports.Int2VectorType = void 0;
-const constants_js_1 = require("../constants.js");
-const decode_binaryarray_js_1 = require("../util/decode-binaryarray.js");
-const encode_binaryarray_js_1 = require("../util/encode-binaryarray.js");
-const fast_parseint_js_1 = require("../util/fast-parseint.js");
-exports.Int2VectorType = {
-    name: 'int2vector',
-    oid: constants_js_1.DataTypeOIDs.int2vector,
-    jsType: 'array',
-    parseBinary(v) {
-        return (0, decode_binaryarray_js_1.decodeBinaryArray)(v, b => b.readInt16BE()) || undefined;
-    },
-    encodeBinary(buf, v) {
-        (0, encode_binaryarray_js_1.encodeBinaryArray)(buf, v, constants_js_1.DataTypeOIDs.int2, {}, (io, x) => {
-            io.writeInt16BE(x);
-        });
-    },
-    encodeCalculateDim(v) {
-        return [v.length];
-    },
-    parseText(str) {
-        return str.split(' ').map(fast_parseint_js_1.fastParseInt);
-    },
-    encodeText(v) {
-        return v.join(' ');
-    },
-    isType(v) {
-        return (Array.isArray(v) && !v.find(x => !(typeof x === 'number' && Number.isInteger(x) && x >= -32768 && x <= 32767)));
-    },
-};
-exports.ArrayInt2VectorType = {
-    ...exports.Int2VectorType,
-    name: '_int2vector',
-    oid: constants_js_1.DataTypeOIDs._int2vector,
-    elementsOID: constants_js_1.DataTypeOIDs.int2vector,
-};
Index: node_modules/postgresql-client/esm/data-types/int2-vector-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/int2-vector-type.js b/node_modules/postgresql-client/esm/data-types/int2-vector-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/int2-vector-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,35 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-import { decodeBinaryArray } from '../util/decode-binaryarray.js';
-import { encodeBinaryArray } from '../util/encode-binaryarray.js';
-import { fastParseInt } from '../util/fast-parseint.js';
-export const Int2VectorType = {
-    name: 'int2vector',
-    oid: DataTypeOIDs.int2vector,
-    jsType: 'array',
-    parseBinary(v) {
-        return decodeBinaryArray(v, b => b.readInt16BE()) || undefined;
-    },
-    encodeBinary(buf, v) {
-        encodeBinaryArray(buf, v, DataTypeOIDs.int2, {}, (io, x) => {
-            io.writeInt16BE(x);
-        });
-    },
-    encodeCalculateDim(v) {
-        return [v.length];
-    },
-    parseText(str) {
-        return str.split(' ').map(fastParseInt);
-    },
-    encodeText(v) {
-        return v.join(' ');
-    },
-    isType(v) {
-        return (Array.isArray(v) && !v.find(x => !(typeof x === 'number' && Number.isInteger(x) && x >= -32768 && x <= 32767)));
-    },
-};
-export const ArrayInt2VectorType = {
-    ...Int2VectorType,
-    name: '_int2vector',
-    oid: DataTypeOIDs._int2vector,
-    elementsOID: DataTypeOIDs.int2vector,
-};
Index: node_modules/postgresql-client/typings/data-types/int4-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/int4-type.d.ts b/node_modules/postgresql-client/typings/data-types/int4-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/int4-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const Int4Type: DataType;
-export declare const ArrayInt4Type: DataType;
Index: node_modules/postgresql-client/cjs/data-types/int4-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/int4-type.js b/node_modules/postgresql-client/cjs/data-types/int4-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/int4-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,26 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayInt4Type = exports.Int4Type = void 0;
-const constants_js_1 = require("../constants.js");
-const fast_parseint_js_1 = require("../util/fast-parseint.js");
-exports.Int4Type = {
-    name: 'int4',
-    oid: constants_js_1.DataTypeOIDs.int4,
-    jsType: 'number',
-    parseBinary(v) {
-        return v.readInt32BE(0);
-    },
-    encodeBinary(buf, v) {
-        buf.writeInt32BE((0, fast_parseint_js_1.fastParseInt)(v));
-    },
-    parseText: fast_parseint_js_1.fastParseInt,
-    isType(v) {
-        return typeof v === 'number' && Number.isInteger(v) && v <= Number.MAX_SAFE_INTEGER;
-    },
-};
-exports.ArrayInt4Type = {
-    ...exports.Int4Type,
-    name: '_int4',
-    oid: constants_js_1.DataTypeOIDs._int4,
-    elementsOID: constants_js_1.DataTypeOIDs.int4,
-};
Index: node_modules/postgresql-client/esm/data-types/int4-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/int4-type.js b/node_modules/postgresql-client/esm/data-types/int4-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/int4-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,23 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-import { fastParseInt } from '../util/fast-parseint.js';
-export const Int4Type = {
-    name: 'int4',
-    oid: DataTypeOIDs.int4,
-    jsType: 'number',
-    parseBinary(v) {
-        return v.readInt32BE(0);
-    },
-    encodeBinary(buf, v) {
-        buf.writeInt32BE(fastParseInt(v));
-    },
-    parseText: fastParseInt,
-    isType(v) {
-        return typeof v === 'number' && Number.isInteger(v) && v <= Number.MAX_SAFE_INTEGER;
-    },
-};
-export const ArrayInt4Type = {
-    ...Int4Type,
-    name: '_int4',
-    oid: DataTypeOIDs._int4,
-    elementsOID: DataTypeOIDs.int4,
-};
Index: node_modules/postgresql-client/typings/data-types/int8-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/int8-type.d.ts b/node_modules/postgresql-client/typings/data-types/int8-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/int8-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const Int8Type: DataType;
-export declare const ArrayInt8Type: DataType;
Index: node_modules/postgresql-client/cjs/data-types/int8-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/int8-type.js b/node_modules/postgresql-client/cjs/data-types/int8-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/int8-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,31 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayInt8Type = exports.Int8Type = void 0;
-const constants_js_1 = require("../constants.js");
-const bigint_methods_js_1 = require("../util/bigint-methods.js");
-const maxSafeInteger = BigInt(Number.MAX_SAFE_INTEGER);
-exports.Int8Type = {
-    name: 'int8',
-    oid: constants_js_1.DataTypeOIDs.int8,
-    jsType: 'BigInt',
-    parseBinary(buf) {
-        const v = typeof buf.readBigInt64BE === 'function' ? buf.readBigInt64BE(0) : (0, bigint_methods_js_1.readBigInt64BE)(buf);
-        return v >= -maxSafeInteger && v <= maxSafeInteger ? Number(v) : v;
-    },
-    encodeBinary(buf, v) {
-        buf.writeBigInt64BE(v);
-    },
-    parseText(s) {
-        const v = BigInt(s);
-        return v >= -maxSafeInteger && v <= maxSafeInteger ? Number(v) : v;
-    },
-    isType(v) {
-        return typeof v === 'bigint' || (typeof v === 'number' && Number.isInteger(v) && v > Number.MAX_SAFE_INTEGER);
-    },
-};
-exports.ArrayInt8Type = {
-    ...exports.Int8Type,
-    name: '_int8',
-    oid: constants_js_1.DataTypeOIDs._int8,
-    elementsOID: constants_js_1.DataTypeOIDs.int8,
-};
Index: node_modules/postgresql-client/esm/data-types/int8-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/int8-type.js b/node_modules/postgresql-client/esm/data-types/int8-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/int8-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,28 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-import { readBigInt64BE } from '../util/bigint-methods.js';
-const maxSafeInteger = BigInt(Number.MAX_SAFE_INTEGER);
-export const Int8Type = {
-    name: 'int8',
-    oid: DataTypeOIDs.int8,
-    jsType: 'BigInt',
-    parseBinary(buf) {
-        const v = typeof buf.readBigInt64BE === 'function' ? buf.readBigInt64BE(0) : readBigInt64BE(buf);
-        return v >= -maxSafeInteger && v <= maxSafeInteger ? Number(v) : v;
-    },
-    encodeBinary(buf, v) {
-        buf.writeBigInt64BE(v);
-    },
-    parseText(s) {
-        const v = BigInt(s);
-        return v >= -maxSafeInteger && v <= maxSafeInteger ? Number(v) : v;
-    },
-    isType(v) {
-        return typeof v === 'bigint' || (typeof v === 'number' && Number.isInteger(v) && v > Number.MAX_SAFE_INTEGER);
-    },
-};
-export const ArrayInt8Type = {
-    ...Int8Type,
-    name: '_int8',
-    oid: DataTypeOIDs._int8,
-    elementsOID: DataTypeOIDs.int8,
-};
Index: node_modules/postgresql-client/typings/connection/intl-connection.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/connection/intl-connection.d.ts b/node_modules/postgresql-client/typings/connection/intl-connection.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/connection/intl-connection.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,40 +0,0 @@
-import { TaskQueue } from 'power-tasks';
-import { ConnectionState } from '../constants.js';
-import { ConnectionConfiguration } from '../interfaces/database-connection-params.js';
-import { ScriptExecuteOptions } from '../interfaces/script-execute-options.js';
-import { ScriptResult } from '../interfaces/script-result.js';
-import { PgSocket } from '../protocol/pg-socket.js';
-import { SafeEventEmitter } from '../safe-event-emitter.js';
-import { Maybe } from '../types.js';
-import { Connection } from './connection.js';
-export declare class IntlConnection extends SafeEventEmitter {
-    protected _refCount: number;
-    protected _config: ConnectionConfiguration;
-    protected _onErrorSavePoint: string;
-    transactionStatus: string;
-    socket: PgSocket;
-    statementQueue: TaskQueue;
-    constructor(config?: ConnectionConfiguration | string);
-    get config(): ConnectionConfiguration;
-    get inTransaction(): boolean;
-    get state(): ConnectionState;
-    get refCount(): number;
-    get processID(): Maybe<number>;
-    get secretKey(): Maybe<number>;
-    get sessionParameters(): Record<string, string>;
-    connect(): Promise<void>;
-    close(): Promise<void>;
-    execute(sql: string, options?: ScriptExecuteOptions, cb?: (event: string, ...args: any[]) => void): Promise<ScriptResult>;
-    startTransaction(): Promise<void>;
-    savepoint(name: string): Promise<void>;
-    commit(): Promise<void>;
-    rollback(): Promise<void>;
-    rollbackToSavepoint(name: string): Promise<void>;
-    releaseSavepoint(name: string): Promise<void>;
-    ref(): void;
-    unref(): boolean;
-    assertConnected(): void;
-    protected _execute(sql: string, options?: ScriptExecuteOptions, cb?: (event: string, ...args: any[]) => void): Promise<ScriptResult>;
-    protected _onError(err: Error): void;
-}
-export declare function getIntlConnection(connection: Connection): IntlConnection;
Index: node_modules/postgresql-client/cjs/connection/intl-connection.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/connection/intl-connection.js b/node_modules/postgresql-client/cjs/connection/intl-connection.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/connection/intl-connection.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,243 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.getIntlConnection = exports.IntlConnection = void 0;
-const power_tasks_1 = require("power-tasks");
-const putil_varhelpers_1 = require("putil-varhelpers");
-const constants_js_1 = require("../constants.js");
-const data_type_map_js_1 = require("../data-type-map.js");
-const pg_socket_js_1 = require("../protocol/pg-socket.js");
-const protocol_js_1 = require("../protocol/protocol.js");
-const safe_event_emitter_js_1 = require("../safe-event-emitter.js");
-const connection_config_js_1 = require("../util/connection-config.js");
-const convert_row_to_object_js_1 = require("../util/convert-row-to-object.js");
-const escape_literal_js_1 = require("../util/escape-literal.js");
-const get_parsers_js_1 = require("../util/get-parsers.js");
-const parse_row_js_1 = require("../util/parse-row.js");
-const wrap_row_description_js_1 = require("../util/wrap-row-description.js");
-const DataFormat = protocol_js_1.Protocol.DataFormat;
-class IntlConnection extends safe_event_emitter_js_1.SafeEventEmitter {
-    constructor(config) {
-        super();
-        this._refCount = 0;
-        this.transactionStatus = 'I';
-        this.statementQueue = new power_tasks_1.TaskQueue({ concurrency: 1 });
-        this._config = Object.freeze((0, connection_config_js_1.getConnectionConfig)(config));
-        this.socket = new pg_socket_js_1.PgSocket(this._config);
-        this.socket.on('error', err => this._onError(err));
-        this.socket.on('close', () => this.emit('close'));
-        this.socket.on('notification', payload => this.emit('notification', payload));
-        this.socket.on('connecting', () => this.emit('connecting'));
-        this._onErrorSavePoint = 'SP_' + Math.round(Math.random() * 100000000);
-    }
-    get config() {
-        return this._config;
-    }
-    get inTransaction() {
-        return this.transactionStatus === 'T' || this.transactionStatus === 'E';
-    }
-    get state() {
-        return this.socket.state;
-    }
-    get refCount() {
-        return this._refCount;
-    }
-    get processID() {
-        return this.socket.processID;
-    }
-    get secretKey() {
-        return this.socket.secretKey;
-    }
-    get sessionParameters() {
-        return this.socket.sessionParameters;
-    }
-    async connect() {
-        if (this.socket.state === constants_js_1.ConnectionState.READY)
-            return;
-        await new Promise((resolve, reject) => {
-            const handleConnectError = err => reject(err);
-            this.socket.once('ready', () => {
-                this.socket.removeListener('error', handleConnectError);
-                resolve();
-            });
-            this.socket.once('error', handleConnectError);
-            this.socket.connect();
-        });
-        let startupCommand = '';
-        if (this.config.schema)
-            startupCommand += 'SET search_path = ' + (0, escape_literal_js_1.escapeLiteral)(this.config.schema) + ';';
-        if (this.config.timezone)
-            startupCommand += 'SET timezone TO ' + (0, escape_literal_js_1.escapeLiteral)(this.config.timezone) + ';';
-        if (startupCommand)
-            await this.execute(startupCommand, { autoCommit: true });
-        this.emit('ready');
-    }
-    async close() {
-        if (this.state === constants_js_1.ConnectionState.CLOSED)
-            return;
-        this.statementQueue.clearQueue();
-        return new Promise(resolve => {
-            if (this.socket.state === constants_js_1.ConnectionState.CLOSED)
-                return;
-            this.socket.once('close', resolve);
-            this.socket.sendTerminateMessage(() => {
-                this.socket.close();
-                this.emit('close');
-            });
-        });
-    }
-    async execute(sql, options, cb) {
-        this.assertConnected();
-        return this.statementQueue
-            .enqueue(async () => {
-            const transactionCommand = sql.match(/^(\bBEGIN\b|\bCOMMIT\b|\bSTART\b|\bROLLBACK|SAVEPOINT|RELEASE\b)/i);
-            let beginFirst = false;
-            let commitLast = false;
-            if (!transactionCommand) {
-                if (!this.inTransaction &&
-                    (options?.autoCommit != null ? options?.autoCommit : this.config.autoCommit) === false) {
-                    beginFirst = true;
-                }
-                if (this.inTransaction && options?.autoCommit)
-                    commitLast = true;
-            }
-            if (beginFirst)
-                await this._execute('BEGIN');
-            const rollbackOnError = !transactionCommand &&
-                (options?.rollbackOnError != null
-                    ? options.rollbackOnError
-                    : (0, putil_varhelpers_1.coerceToBoolean)(this.config.rollbackOnError, true));
-            if (this.inTransaction && rollbackOnError)
-                await this._execute('SAVEPOINT ' + this._onErrorSavePoint);
-            try {
-                const result = await this._execute(sql, options, cb);
-                if (commitLast)
-                    await this._execute('COMMIT');
-                else if (this.inTransaction && rollbackOnError)
-                    await this._execute('RELEASE ' + this._onErrorSavePoint + ';');
-                return result;
-            }
-            catch (e) {
-                if (this.inTransaction && rollbackOnError)
-                    await this._execute('ROLLBACK TO ' + this._onErrorSavePoint + ';');
-                throw e;
-            }
-        })
-            .toPromise();
-    }
-    async startTransaction() {
-        if (!this.inTransaction)
-            await this.execute('BEGIN');
-    }
-    async savepoint(name) {
-        if (!(name && name.match(/^[a-zA-Z]\w+$/)))
-            throw new Error(`Invalid savepoint "${name}`);
-        await this.execute('BEGIN; SAVEPOINT ' + name);
-    }
-    async commit() {
-        if (this.inTransaction)
-            await this.execute('COMMIT');
-    }
-    async rollback() {
-        if (this.inTransaction)
-            await this.execute('ROLLBACK');
-    }
-    async rollbackToSavepoint(name) {
-        if (!(name && name.match(/^[a-zA-Z]\w+$/)))
-            throw new Error(`Invalid savepoint "${name}`);
-        await this.execute('ROLLBACK TO SAVEPOINT ' + name, { autoCommit: false });
-    }
-    async releaseSavepoint(name) {
-        if (!(name && name.match(/^[a-zA-Z]\w+$/)))
-            throw new Error(`Invalid savepoint "${name}`);
-        await this.execute('RELEASE SAVEPOINT ' + name, { autoCommit: false });
-    }
-    ref() {
-        this._refCount++;
-    }
-    unref() {
-        this._refCount--;
-        return !this._refCount;
-    }
-    assertConnected() {
-        if (this.state === constants_js_1.ConnectionState.CLOSING)
-            throw new Error('Connection is closing');
-        if (this.state === constants_js_1.ConnectionState.CLOSED)
-            throw new Error('Connection closed');
-    }
-    async _execute(sql, options, cb) {
-        this.ref();
-        try {
-            const startTime = Date.now();
-            const result = {
-                totalCommands: 0,
-                totalTime: 0,
-                results: [],
-            };
-            const opts = options || {};
-            this.socket.sendQueryMessage(sql);
-            let currentStart = Date.now();
-            let parsers;
-            let current = { command: undefined };
-            let fields;
-            const typeMap = opts.typeMap || data_type_map_js_1.GlobalTypeMap;
-            return await this.socket.capture(async (code, msg, done) => {
-                switch (code) {
-                    case protocol_js_1.Protocol.BackendMessageCode.NoticeResponse:
-                    case protocol_js_1.Protocol.BackendMessageCode.CopyInResponse:
-                    case protocol_js_1.Protocol.BackendMessageCode.CopyOutResponse:
-                    case protocol_js_1.Protocol.BackendMessageCode.EmptyQueryResponse:
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.RowDescription:
-                        fields = msg.fields;
-                        parsers = (0, get_parsers_js_1.getParsers)(typeMap, fields);
-                        current.fields = (0, wrap_row_description_js_1.wrapRowDescription)(typeMap, fields, DataFormat.text);
-                        current.rows = [];
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.DataRow:
-                        let row = msg.columns.map((x) => x.toString('utf8'));
-                        (0, parse_row_js_1.parseRow)(parsers, row, opts);
-                        if (opts.objectRows && current.fields)
-                            row = (0, convert_row_to_object_js_1.convertRowToObject)(current.fields, row);
-                        if (cb)
-                            cb('row', row);
-                        current.rows = current.rows || [];
-                        current.rows.push(row);
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.CommandComplete:
-                        // Ignore BEGIN command that we added to sql
-                        current.command = msg.command;
-                        if (current.command === 'DELETE' || current.command === 'INSERT' || current.command === 'UPDATE')
-                            current.rowsAffected = msg.rowCount;
-                        current.executeTime = Date.now() - currentStart;
-                        if (current.rows)
-                            current.rowType = opts.objectRows && current.fields ? 'object' : 'array';
-                        result.results.push(current);
-                        if (cb)
-                            cb('command-complete', current);
-                        current = { command: undefined };
-                        currentStart = Date.now();
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.ReadyForQuery:
-                        this.transactionStatus = msg.status;
-                        result.totalTime = Date.now() - startTime;
-                        // Ignore COMMIT command that we added to sql
-                        result.totalCommands = result.results.length;
-                        done(undefined, result);
-                }
-            });
-        }
-        finally {
-            this.unref();
-        }
-    }
-    _onError(err) {
-        if (this.socket.state !== constants_js_1.ConnectionState.READY)
-            return;
-        this.emit('error', err);
-    }
-}
-exports.IntlConnection = IntlConnection;
-function getIntlConnection(connection) {
-    return connection._intlCon;
-}
-exports.getIntlConnection = getIntlConnection;
Index: node_modules/postgresql-client/esm/connection/intl-connection.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/connection/intl-connection.js b/node_modules/postgresql-client/esm/connection/intl-connection.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/connection/intl-connection.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,238 +0,0 @@
-import { TaskQueue } from 'power-tasks';
-import { coerceToBoolean } from 'putil-varhelpers';
-import { ConnectionState } from '../constants.js';
-import { GlobalTypeMap } from '../data-type-map.js';
-import { PgSocket } from '../protocol/pg-socket.js';
-import { Protocol } from '../protocol/protocol.js';
-import { SafeEventEmitter } from '../safe-event-emitter.js';
-import { getConnectionConfig } from '../util/connection-config.js';
-import { convertRowToObject } from '../util/convert-row-to-object.js';
-import { escapeLiteral } from '../util/escape-literal.js';
-import { getParsers } from '../util/get-parsers.js';
-import { parseRow } from '../util/parse-row.js';
-import { wrapRowDescription } from '../util/wrap-row-description.js';
-const DataFormat = Protocol.DataFormat;
-export class IntlConnection extends SafeEventEmitter {
-    constructor(config) {
-        super();
-        this._refCount = 0;
-        this.transactionStatus = 'I';
-        this.statementQueue = new TaskQueue({ concurrency: 1 });
-        this._config = Object.freeze(getConnectionConfig(config));
-        this.socket = new PgSocket(this._config);
-        this.socket.on('error', err => this._onError(err));
-        this.socket.on('close', () => this.emit('close'));
-        this.socket.on('notification', payload => this.emit('notification', payload));
-        this.socket.on('connecting', () => this.emit('connecting'));
-        this._onErrorSavePoint = 'SP_' + Math.round(Math.random() * 100000000);
-    }
-    get config() {
-        return this._config;
-    }
-    get inTransaction() {
-        return this.transactionStatus === 'T' || this.transactionStatus === 'E';
-    }
-    get state() {
-        return this.socket.state;
-    }
-    get refCount() {
-        return this._refCount;
-    }
-    get processID() {
-        return this.socket.processID;
-    }
-    get secretKey() {
-        return this.socket.secretKey;
-    }
-    get sessionParameters() {
-        return this.socket.sessionParameters;
-    }
-    async connect() {
-        if (this.socket.state === ConnectionState.READY)
-            return;
-        await new Promise((resolve, reject) => {
-            const handleConnectError = err => reject(err);
-            this.socket.once('ready', () => {
-                this.socket.removeListener('error', handleConnectError);
-                resolve();
-            });
-            this.socket.once('error', handleConnectError);
-            this.socket.connect();
-        });
-        let startupCommand = '';
-        if (this.config.schema)
-            startupCommand += 'SET search_path = ' + escapeLiteral(this.config.schema) + ';';
-        if (this.config.timezone)
-            startupCommand += 'SET timezone TO ' + escapeLiteral(this.config.timezone) + ';';
-        if (startupCommand)
-            await this.execute(startupCommand, { autoCommit: true });
-        this.emit('ready');
-    }
-    async close() {
-        if (this.state === ConnectionState.CLOSED)
-            return;
-        this.statementQueue.clearQueue();
-        return new Promise(resolve => {
-            if (this.socket.state === ConnectionState.CLOSED)
-                return;
-            this.socket.once('close', resolve);
-            this.socket.sendTerminateMessage(() => {
-                this.socket.close();
-                this.emit('close');
-            });
-        });
-    }
-    async execute(sql, options, cb) {
-        this.assertConnected();
-        return this.statementQueue
-            .enqueue(async () => {
-            const transactionCommand = sql.match(/^(\bBEGIN\b|\bCOMMIT\b|\bSTART\b|\bROLLBACK|SAVEPOINT|RELEASE\b)/i);
-            let beginFirst = false;
-            let commitLast = false;
-            if (!transactionCommand) {
-                if (!this.inTransaction &&
-                    (options?.autoCommit != null ? options?.autoCommit : this.config.autoCommit) === false) {
-                    beginFirst = true;
-                }
-                if (this.inTransaction && options?.autoCommit)
-                    commitLast = true;
-            }
-            if (beginFirst)
-                await this._execute('BEGIN');
-            const rollbackOnError = !transactionCommand &&
-                (options?.rollbackOnError != null
-                    ? options.rollbackOnError
-                    : coerceToBoolean(this.config.rollbackOnError, true));
-            if (this.inTransaction && rollbackOnError)
-                await this._execute('SAVEPOINT ' + this._onErrorSavePoint);
-            try {
-                const result = await this._execute(sql, options, cb);
-                if (commitLast)
-                    await this._execute('COMMIT');
-                else if (this.inTransaction && rollbackOnError)
-                    await this._execute('RELEASE ' + this._onErrorSavePoint + ';');
-                return result;
-            }
-            catch (e) {
-                if (this.inTransaction && rollbackOnError)
-                    await this._execute('ROLLBACK TO ' + this._onErrorSavePoint + ';');
-                throw e;
-            }
-        })
-            .toPromise();
-    }
-    async startTransaction() {
-        if (!this.inTransaction)
-            await this.execute('BEGIN');
-    }
-    async savepoint(name) {
-        if (!(name && name.match(/^[a-zA-Z]\w+$/)))
-            throw new Error(`Invalid savepoint "${name}`);
-        await this.execute('BEGIN; SAVEPOINT ' + name);
-    }
-    async commit() {
-        if (this.inTransaction)
-            await this.execute('COMMIT');
-    }
-    async rollback() {
-        if (this.inTransaction)
-            await this.execute('ROLLBACK');
-    }
-    async rollbackToSavepoint(name) {
-        if (!(name && name.match(/^[a-zA-Z]\w+$/)))
-            throw new Error(`Invalid savepoint "${name}`);
-        await this.execute('ROLLBACK TO SAVEPOINT ' + name, { autoCommit: false });
-    }
-    async releaseSavepoint(name) {
-        if (!(name && name.match(/^[a-zA-Z]\w+$/)))
-            throw new Error(`Invalid savepoint "${name}`);
-        await this.execute('RELEASE SAVEPOINT ' + name, { autoCommit: false });
-    }
-    ref() {
-        this._refCount++;
-    }
-    unref() {
-        this._refCount--;
-        return !this._refCount;
-    }
-    assertConnected() {
-        if (this.state === ConnectionState.CLOSING)
-            throw new Error('Connection is closing');
-        if (this.state === ConnectionState.CLOSED)
-            throw new Error('Connection closed');
-    }
-    async _execute(sql, options, cb) {
-        this.ref();
-        try {
-            const startTime = Date.now();
-            const result = {
-                totalCommands: 0,
-                totalTime: 0,
-                results: [],
-            };
-            const opts = options || {};
-            this.socket.sendQueryMessage(sql);
-            let currentStart = Date.now();
-            let parsers;
-            let current = { command: undefined };
-            let fields;
-            const typeMap = opts.typeMap || GlobalTypeMap;
-            return await this.socket.capture(async (code, msg, done) => {
-                switch (code) {
-                    case Protocol.BackendMessageCode.NoticeResponse:
-                    case Protocol.BackendMessageCode.CopyInResponse:
-                    case Protocol.BackendMessageCode.CopyOutResponse:
-                    case Protocol.BackendMessageCode.EmptyQueryResponse:
-                        break;
-                    case Protocol.BackendMessageCode.RowDescription:
-                        fields = msg.fields;
-                        parsers = getParsers(typeMap, fields);
-                        current.fields = wrapRowDescription(typeMap, fields, DataFormat.text);
-                        current.rows = [];
-                        break;
-                    case Protocol.BackendMessageCode.DataRow:
-                        let row = msg.columns.map((x) => x.toString('utf8'));
-                        parseRow(parsers, row, opts);
-                        if (opts.objectRows && current.fields)
-                            row = convertRowToObject(current.fields, row);
-                        if (cb)
-                            cb('row', row);
-                        current.rows = current.rows || [];
-                        current.rows.push(row);
-                        break;
-                    case Protocol.BackendMessageCode.CommandComplete:
-                        // Ignore BEGIN command that we added to sql
-                        current.command = msg.command;
-                        if (current.command === 'DELETE' || current.command === 'INSERT' || current.command === 'UPDATE')
-                            current.rowsAffected = msg.rowCount;
-                        current.executeTime = Date.now() - currentStart;
-                        if (current.rows)
-                            current.rowType = opts.objectRows && current.fields ? 'object' : 'array';
-                        result.results.push(current);
-                        if (cb)
-                            cb('command-complete', current);
-                        current = { command: undefined };
-                        currentStart = Date.now();
-                        break;
-                    case Protocol.BackendMessageCode.ReadyForQuery:
-                        this.transactionStatus = msg.status;
-                        result.totalTime = Date.now() - startTime;
-                        // Ignore COMMIT command that we added to sql
-                        result.totalCommands = result.results.length;
-                        done(undefined, result);
-                }
-            });
-        }
-        finally {
-            this.unref();
-        }
-    }
-    _onError(err) {
-        if (this.socket.state !== ConnectionState.READY)
-            return;
-        this.emit('error', err);
-    }
-}
-export function getIntlConnection(connection) {
-    return connection._intlCon;
-}
Index: node_modules/postgresql-client/typings/data-types/json-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/json-type.d.ts b/node_modules/postgresql-client/typings/data-types/json-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/json-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const JsonType: DataType;
-export declare const ArrayJsonType: DataType;
Index: node_modules/postgresql-client/cjs/data-types/json-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/json-type.js b/node_modules/postgresql-client/cjs/data-types/json-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/json-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,38 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayJsonType = exports.JsonType = void 0;
-const constants_js_1 = require("../constants.js");
-exports.JsonType = {
-    name: 'json',
-    oid: constants_js_1.DataTypeOIDs.json,
-    jsType: 'string',
-    parseBinary(v, options) {
-        const content = v.toString('utf8');
-        const fetchAsString = options.fetchAsString && options.fetchAsString.includes(constants_js_1.DataTypeOIDs.jsonb);
-        if (fetchAsString)
-            return content;
-        return content ? JSON.parse(content) : undefined;
-    },
-    encodeText(v) {
-        if (typeof v === 'object' || typeof v === 'bigint')
-            return JSON.stringify(v);
-        if (typeof v === 'boolean')
-            return v ? 'true' : 'false';
-        return '' + v;
-    },
-    parseText(v, options) {
-        const fetchAsString = options.fetchAsString && options.fetchAsString.includes(constants_js_1.DataTypeOIDs.jsonb);
-        if (fetchAsString)
-            return v;
-        return v ? JSON.parse(v) : null;
-    },
-    isType(v) {
-        return v && typeof v === 'object';
-    },
-};
-exports.ArrayJsonType = {
-    ...exports.JsonType,
-    name: '_json',
-    oid: constants_js_1.DataTypeOIDs._json,
-    elementsOID: constants_js_1.DataTypeOIDs.json,
-};
Index: node_modules/postgresql-client/esm/data-types/json-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/json-type.js b/node_modules/postgresql-client/esm/data-types/json-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/json-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,35 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-export const JsonType = {
-    name: 'json',
-    oid: DataTypeOIDs.json,
-    jsType: 'string',
-    parseBinary(v, options) {
-        const content = v.toString('utf8');
-        const fetchAsString = options.fetchAsString && options.fetchAsString.includes(DataTypeOIDs.jsonb);
-        if (fetchAsString)
-            return content;
-        return content ? JSON.parse(content) : undefined;
-    },
-    encodeText(v) {
-        if (typeof v === 'object' || typeof v === 'bigint')
-            return JSON.stringify(v);
-        if (typeof v === 'boolean')
-            return v ? 'true' : 'false';
-        return '' + v;
-    },
-    parseText(v, options) {
-        const fetchAsString = options.fetchAsString && options.fetchAsString.includes(DataTypeOIDs.jsonb);
-        if (fetchAsString)
-            return v;
-        return v ? JSON.parse(v) : null;
-    },
-    isType(v) {
-        return v && typeof v === 'object';
-    },
-};
-export const ArrayJsonType = {
-    ...JsonType,
-    name: '_json',
-    oid: DataTypeOIDs._json,
-    elementsOID: DataTypeOIDs.json,
-};
Index: node_modules/postgresql-client/typings/data-types/jsonb-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/jsonb-type.d.ts b/node_modules/postgresql-client/typings/data-types/jsonb-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/jsonb-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const JsonbType: DataType;
-export declare const ArrayJsonbType: DataType;
Index: node_modules/postgresql-client/cjs/data-types/jsonb-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/jsonb-type.js b/node_modules/postgresql-client/cjs/data-types/jsonb-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/jsonb-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,42 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayJsonbType = exports.JsonbType = void 0;
-const constants_js_1 = require("../constants.js");
-const buffer_reader_js_1 = require("../protocol/buffer-reader.js");
-exports.JsonbType = {
-    name: 'jsonb',
-    oid: constants_js_1.DataTypeOIDs.jsonb,
-    jsType: 'string',
-    parseBinary(v, options) {
-        const buf = new buffer_reader_js_1.BufferReader(v);
-        if (buf.readUInt8() !== 1)
-            throw new Error('Unexpected Jsonb version value in header');
-        const fetchAsString = options.fetchAsString && options.fetchAsString.includes(constants_js_1.DataTypeOIDs.json);
-        const content = buf.readLString(buf.length - buf.offset);
-        if (fetchAsString)
-            return content;
-        return content ? JSON.parse(content) : undefined;
-    },
-    encodeText(v) {
-        if (typeof v === 'object' || typeof v === 'bigint')
-            return JSON.stringify(v);
-        if (typeof v === 'boolean')
-            return v ? 'true' : 'false';
-        return '\x0001' + v;
-    },
-    parseText(v, options) {
-        const fetchAsString = options.fetchAsString && options.fetchAsString.includes(constants_js_1.DataTypeOIDs.json);
-        if (fetchAsString)
-            return v;
-        return v ? JSON.parse(v) : null;
-    },
-    isType(v) {
-        return v && typeof v === 'object';
-    },
-};
-exports.ArrayJsonbType = {
-    ...exports.JsonbType,
-    name: '_jsonb',
-    oid: constants_js_1.DataTypeOIDs._jsonb,
-    elementsOID: constants_js_1.DataTypeOIDs.jsonb,
-};
Index: node_modules/postgresql-client/esm/data-types/jsonb-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/jsonb-type.js b/node_modules/postgresql-client/esm/data-types/jsonb-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/jsonb-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,39 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-import { BufferReader } from '../protocol/buffer-reader.js';
-export const JsonbType = {
-    name: 'jsonb',
-    oid: DataTypeOIDs.jsonb,
-    jsType: 'string',
-    parseBinary(v, options) {
-        const buf = new BufferReader(v);
-        if (buf.readUInt8() !== 1)
-            throw new Error('Unexpected Jsonb version value in header');
-        const fetchAsString = options.fetchAsString && options.fetchAsString.includes(DataTypeOIDs.json);
-        const content = buf.readLString(buf.length - buf.offset);
-        if (fetchAsString)
-            return content;
-        return content ? JSON.parse(content) : undefined;
-    },
-    encodeText(v) {
-        if (typeof v === 'object' || typeof v === 'bigint')
-            return JSON.stringify(v);
-        if (typeof v === 'boolean')
-            return v ? 'true' : 'false';
-        return '\x0001' + v;
-    },
-    parseText(v, options) {
-        const fetchAsString = options.fetchAsString && options.fetchAsString.includes(DataTypeOIDs.json);
-        if (fetchAsString)
-            return v;
-        return v ? JSON.parse(v) : null;
-    },
-    isType(v) {
-        return v && typeof v === 'object';
-    },
-};
-export const ArrayJsonbType = {
-    ...JsonbType,
-    name: '_jsonb',
-    oid: DataTypeOIDs._jsonb,
-    elementsOID: DataTypeOIDs.jsonb,
-};
Index: node_modules/pg-pool/test/lifetime-timeout.js
===================================================================
diff --git a/node_modules/pg-pool/test/lifetime-timeout.js b/node_modules/pg-pool/test/lifetime-timeout.js
deleted file mode 100644
--- a/node_modules/pg-pool/test/lifetime-timeout.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,48 +0,0 @@
-'use strict'
-const co = require('co')
-const expect = require('expect.js')
-
-const describe = require('mocha').describe
-const it = require('mocha').it
-const path = require('path')
-
-const Pool = require('../')
-
-describe('lifetime timeout', () => {
-  it('connection lifetime should expire and remove the client', (done) => {
-    const pool = new Pool({ maxLifetimeSeconds: 1 })
-    pool.query('SELECT NOW()')
-    pool.on('remove', () => {
-      console.log('expired while idle - on-remove event')
-      expect(pool.expiredCount).to.equal(0)
-      expect(pool.totalCount).to.equal(0)
-      done()
-    })
-  })
-  it('connection lifetime should expire and remove the client after the client is done working', (done) => {
-    const pool = new Pool({ maxLifetimeSeconds: 1 })
-    pool.query('SELECT pg_sleep(1.4)')
-    pool.on('remove', () => {
-      console.log('expired while busy - on-remove event')
-      expect(pool.expiredCount).to.equal(0)
-      expect(pool.totalCount).to.equal(0)
-      done()
-    })
-  })
-  it(
-    'can remove expired clients and recreate them',
-    co.wrap(function* () {
-      const pool = new Pool({ maxLifetimeSeconds: 1 })
-      let query = pool.query('SELECT pg_sleep(1.4)')
-      expect(pool.expiredCount).to.equal(0)
-      expect(pool.totalCount).to.equal(1)
-      yield query
-      yield new Promise((resolve) => setTimeout(resolve, 100))
-      expect(pool.expiredCount).to.equal(0)
-      expect(pool.totalCount).to.equal(0)
-      yield pool.query('SELECT NOW()')
-      expect(pool.expiredCount).to.equal(0)
-      expect(pool.totalCount).to.equal(1)
-    })
-  )
-})
Index: node_modules/pg-pool/test/logging.js
===================================================================
diff --git a/node_modules/pg-pool/test/logging.js b/node_modules/pg-pool/test/logging.js
deleted file mode 100644
--- a/node_modules/pg-pool/test/logging.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,20 +0,0 @@
-const expect = require('expect.js')
-
-const describe = require('mocha').describe
-const it = require('mocha').it
-
-const Pool = require('../')
-
-describe('logging', function () {
-  it('logs to supplied log function if given', function () {
-    const messages = []
-    const log = function (msg) {
-      messages.push(msg)
-    }
-    const pool = new Pool({ log: log })
-    return pool.query('SELECT NOW()').then(function () {
-      expect(messages.length).to.be.greaterThan(0)
-      return pool.end()
-    })
-  })
-})
Index: node_modules/postgresql-client/typings/data-types/lseg-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/lseg-type.d.ts b/node_modules/postgresql-client/typings/data-types/lseg-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/lseg-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const LsegType: DataType;
-export declare const ArrayLsegType: DataType;
Index: node_modules/postgresql-client/cjs/data-types/lseg-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/lseg-type.js b/node_modules/postgresql-client/cjs/data-types/lseg-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/lseg-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,52 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayLsegType = exports.LsegType = void 0;
-const constants_js_1 = require("../constants.js");
-const LSEG_PATTERN1 = /^\[ *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *, *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *]$/;
-const LSEG_PATTERN2 = /^\( *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *, *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *\)$/;
-const LSEG_PATTERN3 = /^\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *, *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\)$/;
-const LSEG_PATTERN4 = /^(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *, *(-?\d+\.?\d*)$/;
-exports.LsegType = {
-    name: 'lseg',
-    oid: constants_js_1.DataTypeOIDs.lseg,
-    jsType: 'object',
-    parseBinary(v) {
-        return {
-            x1: v.readDoubleBE(0),
-            y1: v.readDoubleBE(8),
-            x2: v.readDoubleBE(16),
-            y2: v.readDoubleBE(24),
-        };
-    },
-    encodeBinary(buf, v) {
-        buf.writeDoubleBE(v.x1);
-        buf.writeDoubleBE(v.y1);
-        buf.writeDoubleBE(v.x2);
-        buf.writeDoubleBE(v.y2);
-    },
-    parseText(v) {
-        const m = v.match(LSEG_PATTERN1) || v.match(LSEG_PATTERN2) || v.match(LSEG_PATTERN3) || v.match(LSEG_PATTERN4);
-        if (!m)
-            return undefined;
-        return {
-            x1: parseFloat(m[1]),
-            y1: parseFloat(m[2]),
-            x2: parseFloat(m[3]),
-            y2: parseFloat(m[4]),
-        };
-    },
-    isType(v) {
-        return (typeof v === 'object' &&
-            Object.keys(v).length === 4 &&
-            typeof v.x1 === 'number' &&
-            typeof v.y1 === 'number' &&
-            typeof v.x2 === 'number' &&
-            typeof v.y2 === 'number');
-    },
-};
-exports.ArrayLsegType = {
-    ...exports.LsegType,
-    name: '_lseg',
-    oid: constants_js_1.DataTypeOIDs._lseg,
-    elementsOID: constants_js_1.DataTypeOIDs.lseg,
-};
Index: node_modules/postgresql-client/esm/data-types/lseg-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/lseg-type.js b/node_modules/postgresql-client/esm/data-types/lseg-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/lseg-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,49 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-const LSEG_PATTERN1 = /^\[ *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *, *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *]$/;
-const LSEG_PATTERN2 = /^\( *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *, *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *\)$/;
-const LSEG_PATTERN3 = /^\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\) *, *\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\)$/;
-const LSEG_PATTERN4 = /^(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *, *(-?\d+\.?\d*)$/;
-export const LsegType = {
-    name: 'lseg',
-    oid: DataTypeOIDs.lseg,
-    jsType: 'object',
-    parseBinary(v) {
-        return {
-            x1: v.readDoubleBE(0),
-            y1: v.readDoubleBE(8),
-            x2: v.readDoubleBE(16),
-            y2: v.readDoubleBE(24),
-        };
-    },
-    encodeBinary(buf, v) {
-        buf.writeDoubleBE(v.x1);
-        buf.writeDoubleBE(v.y1);
-        buf.writeDoubleBE(v.x2);
-        buf.writeDoubleBE(v.y2);
-    },
-    parseText(v) {
-        const m = v.match(LSEG_PATTERN1) || v.match(LSEG_PATTERN2) || v.match(LSEG_PATTERN3) || v.match(LSEG_PATTERN4);
-        if (!m)
-            return undefined;
-        return {
-            x1: parseFloat(m[1]),
-            y1: parseFloat(m[2]),
-            x2: parseFloat(m[3]),
-            y2: parseFloat(m[4]),
-        };
-    },
-    isType(v) {
-        return (typeof v === 'object' &&
-            Object.keys(v).length === 4 &&
-            typeof v.x1 === 'number' &&
-            typeof v.y1 === 'number' &&
-            typeof v.x2 === 'number' &&
-            typeof v.y2 === 'number');
-    },
-};
-export const ArrayLsegType = {
-    ...LsegType,
-    name: '_lseg',
-    oid: DataTypeOIDs._lseg,
-    elementsOID: DataTypeOIDs.lseg,
-};
Index: node_modules/pg-pool/test/max-uses.js
===================================================================
diff --git a/node_modules/pg-pool/test/max-uses.js b/node_modules/pg-pool/test/max-uses.js
deleted file mode 100644
--- a/node_modules/pg-pool/test/max-uses.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,98 +0,0 @@
-const expect = require('expect.js')
-const co = require('co')
-const _ = require('lodash')
-
-const describe = require('mocha').describe
-const it = require('mocha').it
-
-const Pool = require('../')
-
-describe('maxUses', () => {
-  it(
-    'can create a single client and use it once',
-    co.wrap(function* () {
-      const pool = new Pool({ maxUses: 2 })
-      expect(pool.waitingCount).to.equal(0)
-      const client = yield pool.connect()
-      const res = yield client.query('SELECT $1::text as name', ['hi'])
-      expect(res.rows[0].name).to.equal('hi')
-      client.release()
-      pool.end()
-    })
-  )
-
-  it(
-    'getting a connection a second time returns the same connection and releasing it also closes it',
-    co.wrap(function* () {
-      const pool = new Pool({ maxUses: 2 })
-      expect(pool.waitingCount).to.equal(0)
-      const client = yield pool.connect()
-      client.release()
-      const client2 = yield pool.connect()
-      expect(client).to.equal(client2)
-      expect(client2._ending).to.equal(false)
-      client2.release()
-      expect(client2._ending).to.equal(true)
-      return yield pool.end()
-    })
-  )
-
-  it(
-    'getting a connection a third time returns a new connection',
-    co.wrap(function* () {
-      const pool = new Pool({ maxUses: 2 })
-      expect(pool.waitingCount).to.equal(0)
-      const client = yield pool.connect()
-      client.release()
-      const client2 = yield pool.connect()
-      expect(client).to.equal(client2)
-      client2.release()
-      const client3 = yield pool.connect()
-      expect(client3).not.to.equal(client2)
-      client3.release()
-      return yield pool.end()
-    })
-  )
-
-  it(
-    'getting a connection from a pending request gets a fresh client when the released candidate is expended',
-    co.wrap(function* () {
-      const pool = new Pool({ max: 1, maxUses: 2 })
-      expect(pool.waitingCount).to.equal(0)
-      const client1 = yield pool.connect()
-      pool.connect().then((client2) => {
-        expect(client2).to.equal(client1)
-        expect(pool.waitingCount).to.equal(1)
-        // Releasing the client this time should also expend it since maxUses is 2, causing client3 to be a fresh client
-        client2.release()
-      })
-      const client3Promise = pool.connect().then((client3) => {
-        // client3 should be a fresh client since client2's release caused the first client to be expended
-        expect(pool.waitingCount).to.equal(0)
-        expect(client3).not.to.equal(client1)
-        return client3.release()
-      })
-      // There should be two pending requests since we have 3 connect requests but a max size of 1
-      expect(pool.waitingCount).to.equal(2)
-      // Releasing the client should not yet expend it since maxUses is 2
-      client1.release()
-      yield client3Promise
-      return yield pool.end()
-    })
-  )
-
-  it(
-    'logs when removing an expended client',
-    co.wrap(function* () {
-      const messages = []
-      const log = function (msg) {
-        messages.push(msg)
-      }
-      const pool = new Pool({ maxUses: 1, log })
-      const client = yield pool.connect()
-      client.release()
-      expect(messages).to.contain('remove expended client')
-      return yield pool.end()
-    })
-  )
-})
Index: node_modules/putil-merge/lib/merge.d.ts
===================================================================
diff --git a/node_modules/putil-merge/lib/merge.d.ts b/node_modules/putil-merge/lib/merge.d.ts
deleted file mode 100644
--- a/node_modules/putil-merge/lib/merge.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,30 +0,0 @@
-export as namespace mergeLib;
-
-export = merge;
-
-declare function merge(target: object, source: object, options?: merge.IMergeOptions): object;
-
-declare namespace merge {
-
-  interface ArrayMergeCallback {
-    (trgVal: any, srcVal: any): any[];
-  }
-
-  interface FilterCallback {
-    (source: object, key: string): any;
-  }
-
-  export interface IMergeOptions {
-    deep?: boolean | ((v: any) => boolean);
-    clone?: boolean;
-    combine?: boolean;
-    descriptor?: boolean;
-    filter?: FilterCallback;
-    arrayMerge?: boolean | ArrayMergeCallback;
-  }
-
-  export function all(object: Array<object>, options?: IMergeOptions): object;
-
-  export function arrayCombine(target: any, source: Array<any>): Array<any>;
-
-}
Index: node_modules/putil-merge/lib/merge.js
===================================================================
diff --git a/node_modules/putil-merge/lib/merge.js b/node_modules/putil-merge/lib/merge.js
deleted file mode 100644
--- a/node_modules/putil-merge/lib/merge.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,122 +0,0 @@
-/* putil-merge
- ------------------------
- (c) 2017-present Panates
- This file may be freely distributed under the MIT license.
- */
-
-/**
- *
- * @param {Object} target
- * @param {Object} source
- * @param {Object} options
- * @param {boolean|Function} [options.deep]
- * @param {boolean} [options.clone]
- * @param {boolean} [options.combine]
- * @param {boolean} [options.descriptor]
- * @param {Function} [options.filter]
- * @param {Boolean|Function} [options.arrayMerge]
- * @return {Object}
- */
-function merge(target, source, options = {}) {
-  if (!(isObject(target) || typeof target=== 'function'))
-    throw new TypeError('Property "target" requires object or function type');
-  if (typeof target=== 'function' && options.clone)
-    throw new TypeError('Can not clone a function');
-  if (!source)
-    return target;
-  if (!(isObject(source) || typeof source=== 'function'))
-    throw new TypeError('Property "source" requires object or function type');
-  const optionDeep = options.deep;
-  const optionDescriptor = options.descriptor;
-  const optionClone = options.clone;
-  const optionFilter = options.filter;
-  const optionCombine = options.combine;
-  const optionArrayMerge = options.arrayMerge;
-
-  if (source === target) return target;
-  const keys = Object.getOwnPropertyNames(source);
-  keys.push(...Object.getOwnPropertySymbols(source));
-  for (const key of keys) {
-    if (key === '__proto__' || key === 'constructor')
-      continue;
-    if (optionFilter && !optionFilter(source, key))
-      continue;
-    if (optionCombine && target.hasOwnProperty(key))
-      continue;
-
-    const descriptor = Object.getOwnPropertyDescriptor(source, key);
-
-    if (optionDescriptor && (descriptor.get || descriptor.set)) {
-      Object.defineProperty(target, key, descriptor);
-      continue;
-    }
-    let srcVal = source[key];
-    if (srcVal === undefined)
-      continue;
-
-    delete descriptor.get;
-    delete descriptor.set;
-    if (!optionDescriptor) {
-      descriptor.enumerable = true;
-      descriptor.configurable = true;
-      descriptor.writable = true;
-    }
-
-    let trgVal = target[key];
-    if (isPlainObject(srcVal)) {
-      if (optionDeep === true || (typeof optionDeep === 'function' && optionDeep(srcVal))) {
-        if (!isObject(trgVal)) {
-          descriptor.value = trgVal = {};
-          Object.defineProperty(target, key, descriptor);
-        }
-        merge(trgVal, srcVal, options);
-        continue;
-      }
-      if (optionClone)
-        srcVal = merge({}, srcVal, options);
-    } else if (Array.isArray(srcVal)) {
-      if (optionArrayMerge && Array.isArray(trgVal)) {
-        if (typeof optionArrayMerge === 'function')
-          srcVal = optionArrayMerge(trgVal, srcVal);
-        else
-          srcVal = merge.arrayCombine(trgVal, srcVal);
-      } else if (optionClone)
-        srcVal = srcVal.slice();
-    }
-    descriptor.value = srcVal;
-    Object.defineProperty(target, key, descriptor);
-  }
-  return target;
-}
-
-merge.all = function all(objects, options = {}) {
-  const target = objects[0];
-  for (const [i, o] of objects.entries()) {
-    if (i > 0)
-      merge(target, o, options);
-  }
-  return target;
-};
-
-merge.arrayCombine = function(target, source) {
-  return target.concat(source.filter((v) => !target.includes(v)));
-};
-
-const isObject = (v) => v && (
-    (typeof v === 'object' && !Array.isArray(v)));
-
-const objCtorStr = Function.prototype.toString.call(Object);
-
-const isPlainObject = (obj) => {
-  if (typeof obj === 'object' && Object.prototype.toString.call(obj) === '[object Object]') {
-    const proto = Object.getPrototypeOf(obj);
-    if (proto) {
-      const ctor = Object.prototype.hasOwnProperty.call(proto, 'constructor') && proto.constructor;
-      return typeof ctor === 'function' && (ctor instanceof ctor) &&
-          Function.prototype.toString.call(ctor) === objCtorStr;
-    } else return true;
-  }
-  return false;
-}
-
-module.exports = merge;
Index: node_modules/nopt/examples/my-program.js
===================================================================
diff --git a/node_modules/nopt/examples/my-program.js b/node_modules/nopt/examples/my-program.js
deleted file mode 100644
--- a/node_modules/nopt/examples/my-program.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,30 +0,0 @@
-#!/usr/bin/env node
-
-//process.env.DEBUG_NOPT = 1
-
-// my-program.js
-var nopt = require("../lib/nopt")
-  , Stream = require("stream").Stream
-  , path = require("path")
-  , knownOpts = { "foo" : [String, null]
-                , "bar" : [Stream, Number]
-                , "baz" : path
-                , "bloo" : [ "big", "medium", "small" ]
-                , "flag" : Boolean
-                , "pick" : Boolean
-                }
-  , shortHands = { "foofoo" : ["--foo", "Mr. Foo"]
-                 , "b7" : ["--bar", "7"]
-                 , "m" : ["--bloo", "medium"]
-                 , "p" : ["--pick"]
-                 , "f" : ["--flag", "true"]
-                 , "g" : ["--flag"]
-                 , "s" : "--flag"
-                 }
-             // everything is optional.
-             // knownOpts and shorthands default to {}
-             // arg list defaults to process.argv
-             // slice defaults to 2
-  , parsed = nopt(knownOpts, shortHands, process.argv, 2)
-
-console.log("parsed =\n"+ require("util").inspect(parsed))
Index: node_modules/nopt/bin/nopt.js
===================================================================
diff --git a/node_modules/nopt/bin/nopt.js b/node_modules/nopt/bin/nopt.js
deleted file mode 100644
--- a/node_modules/nopt/bin/nopt.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,44 +0,0 @@
-#!/usr/bin/env node
-var nopt = require("../lib/nopt")
-  , types = { num: Number
-            , bool: Boolean
-            , help: Boolean
-            , list: Array
-            , "num-list": [Number, Array]
-            , "str-list": [String, Array]
-            , "bool-list": [Boolean, Array]
-            , str: String }
-  , shorthands = { s: [ "--str", "astring" ]
-                 , b: [ "--bool" ]
-                 , nb: [ "--no-bool" ]
-                 , tft: [ "--bool-list", "--no-bool-list", "--bool-list", "true" ]
-                 , "?": ["--help"]
-                 , h: ["--help"]
-                 , H: ["--help"]
-                 , n: [ "--num", "125" ] }
-  , parsed = nopt( types
-                 , shorthands
-                 , process.argv
-                 , 2 )
-
-console.log("parsed", parsed)
-
-if (parsed.help) {
-  console.log("")
-  console.log("nopt cli tester")
-  console.log("")
-  console.log("types")
-  console.log(Object.keys(types).map(function M (t) {
-    var type = types[t]
-    if (Array.isArray(type)) {
-      return [t, type.map(function (type) { return type.name })]
-    }
-    return [t, type && type.name]
-  }).reduce(function (s, i) {
-    s[i[0]] = i[1]
-    return s
-  }, {}))
-  console.log("")
-  console.log("shorthands")
-  console.log(shorthands)
-}
Index: node_modules/nopt/lib/nopt.js
===================================================================
diff --git a/node_modules/nopt/lib/nopt.js b/node_modules/nopt/lib/nopt.js
deleted file mode 100644
--- a/node_modules/nopt/lib/nopt.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,552 +0,0 @@
-// info about each config option.
-
-var debug = process.env.DEBUG_NOPT || process.env.NOPT_DEBUG
-  ? function () { console.error.apply(console, arguments) }
-  : function () {}
-
-var url = require("url")
-  , path = require("path")
-  , Stream = require("stream").Stream
-  , abbrev = require("abbrev")
-
-module.exports = exports = nopt
-exports.clean = clean
-
-exports.typeDefs =
-  { String  : { type: String,  validate: validateString  }
-  , Boolean : { type: Boolean, validate: validateBoolean }
-  , url     : { type: url,     validate: validateUrl     }
-  , Number  : { type: Number,  validate: validateNumber  }
-  , path    : { type: path,    validate: validatePath    }
-  , Stream  : { type: Stream,  validate: validateStream  }
-  , Date    : { type: Date,    validate: validateDate    }
-  }
-
-function nopt (types, shorthands, args, slice) {
-  args = args || process.argv
-  types = types || {}
-  shorthands = shorthands || {}
-  if (typeof slice !== "number") slice = 2
-
-  debug(types, shorthands, args, slice)
-
-  args = args.slice(slice)
-  var data = {}
-    , key
-    , remain = []
-    , cooked = args
-    , original = args.slice(0)
-
-  parse(args, data, remain, types, shorthands)
-  // now data is full
-  clean(data, types, exports.typeDefs)
-  data.argv = {remain:remain,cooked:cooked,original:original}
-  data.argv.toString = function () {
-    return this.original.map(JSON.stringify).join(" ")
-  }
-  return data
-}
-
-function clean (data, types, typeDefs) {
-  typeDefs = typeDefs || exports.typeDefs
-  var remove = {}
-    , typeDefault = [false, true, null, String, Number]
-
-  Object.keys(data).forEach(function (k) {
-    if (k === "argv") return
-    var val = data[k]
-      , isArray = Array.isArray(val)
-      , type = types[k]
-    if (!isArray) val = [val]
-    if (!type) type = typeDefault
-    if (type === Array) type = typeDefault.concat(Array)
-    if (!Array.isArray(type)) type = [type]
-
-    debug("val=%j", val)
-    debug("types=", type)
-    val = val.map(function (val) {
-      // if it's an unknown value, then parse false/true/null/numbers/dates
-      if (typeof val === "string") {
-        debug("string %j", val)
-        val = val.trim()
-        if ((val === "null" && ~type.indexOf(null))
-            || (val === "true" &&
-               (~type.indexOf(true) || ~type.indexOf(Boolean)))
-            || (val === "false" &&
-               (~type.indexOf(false) || ~type.indexOf(Boolean)))) {
-          val = JSON.parse(val)
-          debug("jsonable %j", val)
-        } else if (~type.indexOf(Number) && !isNaN(val)) {
-          debug("convert to number", val)
-          val = +val
-        } else if (~type.indexOf(Date) && !isNaN(Date.parse(val))) {
-          debug("convert to date", val)
-          val = new Date(val)
-        }
-      }
-
-      if (!types.hasOwnProperty(k)) {
-        return val
-      }
-
-      // allow `--no-blah` to set 'blah' to null if null is allowed
-      if (val === false && ~type.indexOf(null) &&
-          !(~type.indexOf(false) || ~type.indexOf(Boolean))) {
-        val = null
-      }
-
-      var d = {}
-      d[k] = val
-      debug("prevalidated val", d, val, types[k])
-      if (!validate(d, k, val, types[k], typeDefs)) {
-        if (exports.invalidHandler) {
-          exports.invalidHandler(k, val, types[k], data)
-        } else if (exports.invalidHandler !== false) {
-          debug("invalid: "+k+"="+val, types[k])
-        }
-        return remove
-      }
-      debug("validated val", d, val, types[k])
-      return d[k]
-    }).filter(function (val) { return val !== remove })
-
-    if (!val.length) delete data[k]
-    else if (isArray) {
-      debug(isArray, data[k], val)
-      data[k] = val
-    } else data[k] = val[0]
-
-    debug("k=%s val=%j", k, val, data[k])
-  })
-}
-
-function validateString (data, k, val) {
-  data[k] = String(val)
-}
-
-function validatePath (data, k, val) {
-  data[k] = path.resolve(String(val))
-  return true
-}
-
-function validateNumber (data, k, val) {
-  debug("validate Number %j %j %j", k, val, isNaN(val))
-  if (isNaN(val)) return false
-  data[k] = +val
-}
-
-function validateDate (data, k, val) {
-  debug("validate Date %j %j %j", k, val, Date.parse(val))
-  var s = Date.parse(val)
-  if (isNaN(s)) return false
-  data[k] = new Date(val)
-}
-
-function validateBoolean (data, k, val) {
-  if (val instanceof Boolean) val = val.valueOf()
-  else if (typeof val === "string") {
-    if (!isNaN(val)) val = !!(+val)
-    else if (val === "null" || val === "false") val = false
-    else val = true
-  } else val = !!val
-  data[k] = val
-}
-
-function validateUrl (data, k, val) {
-  val = url.parse(String(val))
-  if (!val.host) return false
-  data[k] = val.href
-}
-
-function validateStream (data, k, val) {
-  if (!(val instanceof Stream)) return false
-  data[k] = val
-}
-
-function validate (data, k, val, type, typeDefs) {
-  // arrays are lists of types.
-  if (Array.isArray(type)) {
-    for (var i = 0, l = type.length; i < l; i ++) {
-      if (type[i] === Array) continue
-      if (validate(data, k, val, type[i], typeDefs)) return true
-    }
-    delete data[k]
-    return false
-  }
-
-  // an array of anything?
-  if (type === Array) return true
-
-  // NaN is poisonous.  Means that something is not allowed.
-  if (type !== type) {
-    debug("Poison NaN", k, val, type)
-    delete data[k]
-    return false
-  }
-
-  // explicit list of values
-  if (val === type) {
-    debug("Explicitly allowed %j", val)
-    // if (isArray) (data[k] = data[k] || []).push(val)
-    // else data[k] = val
-    data[k] = val
-    return true
-  }
-
-  // now go through the list of typeDefs, validate against each one.
-  var ok = false
-    , types = Object.keys(typeDefs)
-  for (var i = 0, l = types.length; i < l; i ++) {
-    debug("test type %j %j %j", k, val, types[i])
-    var t = typeDefs[types[i]]
-    if (t && type === t.type) {
-      var d = {}
-      ok = false !== t.validate(d, k, val)
-      val = d[k]
-      if (ok) {
-        // if (isArray) (data[k] = data[k] || []).push(val)
-        // else data[k] = val
-        data[k] = val
-        break
-      }
-    }
-  }
-  debug("OK? %j (%j %j %j)", ok, k, val, types[i])
-
-  if (!ok) delete data[k]
-  return ok
-}
-
-function parse (args, data, remain, types, shorthands) {
-  debug("parse", args, data, remain)
-
-  var key = null
-    , abbrevs = abbrev(Object.keys(types))
-    , shortAbbr = abbrev(Object.keys(shorthands))
-
-  for (var i = 0; i < args.length; i ++) {
-    var arg = args[i]
-    debug("arg", arg)
-
-    if (arg.match(/^-{2,}$/)) {
-      // done with keys.
-      // the rest are args.
-      remain.push.apply(remain, args.slice(i + 1))
-      args[i] = "--"
-      break
-    }
-    if (arg.charAt(0) === "-") {
-      if (arg.indexOf("=") !== -1) {
-        var v = arg.split("=")
-        arg = v.shift()
-        v = v.join("=")
-        args.splice.apply(args, [i, 1].concat([arg, v]))
-      }
-      // see if it's a shorthand
-      // if so, splice and back up to re-parse it.
-      var shRes = resolveShort(arg, shorthands, shortAbbr, abbrevs)
-      debug("arg=%j shRes=%j", arg, shRes)
-      if (shRes) {
-        debug(arg, shRes)
-        args.splice.apply(args, [i, 1].concat(shRes))
-        if (arg !== shRes[0]) {
-          i --
-          continue
-        }
-      }
-      arg = arg.replace(/^-+/, "")
-      var no = false
-      while (arg.toLowerCase().indexOf("no-") === 0) {
-        no = !no
-        arg = arg.substr(3)
-      }
-
-      if (abbrevs[arg]) arg = abbrevs[arg]
-
-      var isArray = types[arg] === Array ||
-        Array.isArray(types[arg]) && types[arg].indexOf(Array) !== -1
-
-      var val
-        , la = args[i + 1]
-
-      var isBool = no ||
-        types[arg] === Boolean ||
-        Array.isArray(types[arg]) && types[arg].indexOf(Boolean) !== -1 ||
-        (la === "false" &&
-         (types[arg] === null ||
-          Array.isArray(types[arg]) && ~types[arg].indexOf(null)))
-
-      if (isBool) {
-        // just set and move along
-        val = !no
-        // however, also support --bool true or --bool false
-        if (la === "true" || la === "false") {
-          val = JSON.parse(la)
-          la = null
-          if (no) val = !val
-          i ++
-        }
-
-        // also support "foo":[Boolean, "bar"] and "--foo bar"
-        if (Array.isArray(types[arg]) && la) {
-          if (~types[arg].indexOf(la)) {
-            // an explicit type
-            val = la
-            i ++
-          } else if ( la === "null" && ~types[arg].indexOf(null) ) {
-            // null allowed
-            val = null
-            i ++
-          } else if ( !la.match(/^-{2,}[^-]/) &&
-                      !isNaN(la) &&
-                      ~types[arg].indexOf(Number) ) {
-            // number
-            val = +la
-            i ++
-          } else if ( !la.match(/^-[^-]/) && ~types[arg].indexOf(String) ) {
-            // string
-            val = la
-            i ++
-          }
-        }
-
-        if (isArray) (data[arg] = data[arg] || []).push(val)
-        else data[arg] = val
-
-        continue
-      }
-
-      if (la && la.match(/^-{2,}$/)) {
-        la = undefined
-        i --
-      }
-
-      val = la === undefined ? true : la
-      if (isArray) (data[arg] = data[arg] || []).push(val)
-      else data[arg] = val
-
-      i ++
-      continue
-    }
-    remain.push(arg)
-  }
-}
-
-function resolveShort (arg, shorthands, shortAbbr, abbrevs) {
-  // handle single-char shorthands glommed together, like
-  // npm ls -glp, but only if there is one dash, and only if
-  // all of the chars are single-char shorthands, and it's
-  // not a match to some other abbrev.
-  arg = arg.replace(/^-+/, '')
-  if (abbrevs[arg] && !shorthands[arg]) {
-    return null
-  }
-  if (shortAbbr[arg]) {
-    arg = shortAbbr[arg]
-  } else {
-    var singles = shorthands.___singles
-    if (!singles) {
-      singles = Object.keys(shorthands).filter(function (s) {
-        return s.length === 1
-      }).reduce(function (l,r) { l[r] = true ; return l }, {})
-      shorthands.___singles = singles
-    }
-    var chrs = arg.split("").filter(function (c) {
-      return singles[c]
-    })
-    if (chrs.join("") === arg) return chrs.map(function (c) {
-      return shorthands[c]
-    }).reduce(function (l, r) {
-      return l.concat(r)
-    }, [])
-  }
-
-  if (shorthands[arg] && !Array.isArray(shorthands[arg])) {
-    shorthands[arg] = shorthands[arg].split(/\s+/)
-  }
-  return shorthands[arg]
-}
-
-if (module === require.main) {
-var assert = require("assert")
-  , util = require("util")
-
-  , shorthands =
-    { s : ["--loglevel", "silent"]
-    , d : ["--loglevel", "info"]
-    , dd : ["--loglevel", "verbose"]
-    , ddd : ["--loglevel", "silly"]
-    , noreg : ["--no-registry"]
-    , reg : ["--registry"]
-    , "no-reg" : ["--no-registry"]
-    , silent : ["--loglevel", "silent"]
-    , verbose : ["--loglevel", "verbose"]
-    , h : ["--usage"]
-    , H : ["--usage"]
-    , "?" : ["--usage"]
-    , help : ["--usage"]
-    , v : ["--version"]
-    , f : ["--force"]
-    , desc : ["--description"]
-    , "no-desc" : ["--no-description"]
-    , "local" : ["--no-global"]
-    , l : ["--long"]
-    , p : ["--parseable"]
-    , porcelain : ["--parseable"]
-    , g : ["--global"]
-    }
-
-  , types =
-    { aoa: Array
-    , nullstream: [null, Stream]
-    , date: Date
-    , str: String
-    , browser : String
-    , cache : path
-    , color : ["always", Boolean]
-    , depth : Number
-    , description : Boolean
-    , dev : Boolean
-    , editor : path
-    , force : Boolean
-    , global : Boolean
-    , globalconfig : path
-    , group : [String, Number]
-    , gzipbin : String
-    , logfd : [Number, Stream]
-    , loglevel : ["silent","win","error","warn","info","verbose","silly"]
-    , long : Boolean
-    , "node-version" : [false, String]
-    , npaturl : url
-    , npat : Boolean
-    , "onload-script" : [false, String]
-    , outfd : [Number, Stream]
-    , parseable : Boolean
-    , pre: Boolean
-    , prefix: path
-    , proxy : url
-    , "rebuild-bundle" : Boolean
-    , registry : url
-    , searchopts : String
-    , searchexclude: [null, String]
-    , shell : path
-    , t: [Array, String]
-    , tag : String
-    , tar : String
-    , tmp : path
-    , "unsafe-perm" : Boolean
-    , usage : Boolean
-    , user : String
-    , username : String
-    , userconfig : path
-    , version : Boolean
-    , viewer: path
-    , _exit : Boolean
-    }
-
-; [["-v", {version:true}, []]
-  ,["---v", {version:true}, []]
-  ,["ls -s --no-reg connect -d",
-    {loglevel:"info",registry:null},["ls","connect"]]
-  ,["ls ---s foo",{loglevel:"silent"},["ls","foo"]]
-  ,["ls --registry blargle", {}, ["ls"]]
-  ,["--no-registry", {registry:null}, []]
-  ,["--no-color true", {color:false}, []]
-  ,["--no-color false", {color:true}, []]
-  ,["--no-color", {color:false}, []]
-  ,["--color false", {color:false}, []]
-  ,["--color --logfd 7", {logfd:7,color:true}, []]
-  ,["--color=true", {color:true}, []]
-  ,["--logfd=10", {logfd:10}, []]
-  ,["--tmp=/tmp -tar=gtar",{tmp:"/tmp",tar:"gtar"},[]]
-  ,["--tmp=tmp -tar=gtar",
-    {tmp:path.resolve(process.cwd(), "tmp"),tar:"gtar"},[]]
-  ,["--logfd x", {}, []]
-  ,["a -true -- -no-false", {true:true},["a","-no-false"]]
-  ,["a -no-false", {false:false},["a"]]
-  ,["a -no-no-true", {true:true}, ["a"]]
-  ,["a -no-no-no-false", {false:false}, ["a"]]
-  ,["---NO-no-No-no-no-no-nO-no-no"+
-    "-No-no-no-no-no-no-no-no-no"+
-    "-no-no-no-no-NO-NO-no-no-no-no-no-no"+
-    "-no-body-can-do-the-boogaloo-like-I-do"
-   ,{"body-can-do-the-boogaloo-like-I-do":false}, []]
-  ,["we are -no-strangers-to-love "+
-    "--you-know the-rules --and so-do-i "+
-    "---im-thinking-of=a-full-commitment "+
-    "--no-you-would-get-this-from-any-other-guy "+
-    "--no-gonna-give-you-up "+
-    "-no-gonna-let-you-down=true "+
-    "--no-no-gonna-run-around false "+
-    "--desert-you=false "+
-    "--make-you-cry false "+
-    "--no-tell-a-lie "+
-    "--no-no-and-hurt-you false"
-   ,{"strangers-to-love":false
-    ,"you-know":"the-rules"
-    ,"and":"so-do-i"
-    ,"you-would-get-this-from-any-other-guy":false
-    ,"gonna-give-you-up":false
-    ,"gonna-let-you-down":false
-    ,"gonna-run-around":false
-    ,"desert-you":false
-    ,"make-you-cry":false
-    ,"tell-a-lie":false
-    ,"and-hurt-you":false
-    },["we", "are"]]
-  ,["-t one -t two -t three"
-   ,{t: ["one", "two", "three"]}
-   ,[]]
-  ,["-t one -t null -t three four five null"
-   ,{t: ["one", "null", "three"]}
-   ,["four", "five", "null"]]
-  ,["-t foo"
-   ,{t:["foo"]}
-   ,[]]
-  ,["--no-t"
-   ,{t:["false"]}
-   ,[]]
-  ,["-no-no-t"
-   ,{t:["true"]}
-   ,[]]
-  ,["-aoa one -aoa null -aoa 100"
-   ,{aoa:["one", null, 100]}
-   ,[]]
-  ,["-str 100"
-   ,{str:"100"}
-   ,[]]
-  ,["--color always"
-   ,{color:"always"}
-   ,[]]
-  ,["--no-nullstream"
-   ,{nullstream:null}
-   ,[]]
-  ,["--nullstream false"
-   ,{nullstream:null}
-   ,[]]
-  ,["--notadate 2011-01-25"
-   ,{notadate: "2011-01-25"}
-   ,[]]
-  ,["--date 2011-01-25"
-   ,{date: new Date("2011-01-25")}
-   ,[]]
-  ].forEach(function (test) {
-    var argv = test[0].split(/\s+/)
-      , opts = test[1]
-      , rem = test[2]
-      , actual = nopt(types, shorthands, argv, 0)
-      , parsed = actual.argv
-    delete actual.argv
-    console.log(util.inspect(actual, false, 2, true), parsed.remain)
-    for (var i in opts) {
-      var e = JSON.stringify(opts[i])
-        , a = JSON.stringify(actual[i] === undefined ? null : actual[i])
-      if (e && typeof e === "object") {
-        assert.deepEqual(e, a)
-      } else {
-        assert.equal(e, a)
-      }
-    }
-    assert.deepEqual(rem, parsed.remain)
-  })
-}
Index: node_modules/postgresql-client/typings/data-types/numeric-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/numeric-type.d.ts b/node_modules/postgresql-client/typings/data-types/numeric-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/numeric-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,12 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const NumericType: DataType;
-export declare const ArrayNumericType: DataType;
-/**
- * Convert a number from binary representation to text representation.
- * @param digits array of shorts that can be decoded as the number String
- * @param scale the scale of the number binary representation
- * @param weight the weight of the number binary representation
- * @param sign the sign of the number
- * @return String the number as String
- */
-export declare function numberBytesToString(digits: number[], scale: number, weight: number, sign: number): string;
Index: node_modules/postgresql-client/cjs/data-types/numeric-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/numeric-type.js b/node_modules/postgresql-client/cjs/data-types/numeric-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/numeric-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,125 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.numberBytesToString = exports.ArrayNumericType = exports.NumericType = void 0;
-const constants_js_1 = require("../constants.js");
-const NUMERIC_NEG = 0x4000;
-const NUMERIC_NAN = 0xc000;
-const DEC_DIGITS = 4;
-const ROUND_POWERS = [0, 1000, 100, 10];
-exports.NumericType = {
-    name: 'numeric',
-    oid: constants_js_1.DataTypeOIDs.numeric,
-    jsType: 'number',
-    parseBinary(v) {
-        const len = v.readInt16BE();
-        const weight = v.readInt16BE(2);
-        const sign = v.readInt16BE(4);
-        const scale = v.readInt16BE(6);
-        if (sign === NUMERIC_NAN)
-            return NaN;
-        const digits = [];
-        for (let i = 0; i < len; i++) {
-            digits[i] = v.readInt16BE(8 + i * 2);
-        }
-        const numString = numberBytesToString(digits, scale, weight, sign);
-        return parseFloat(numString);
-    },
-    encodeText(v) {
-        const n = typeof v === 'number' ? v : parseFloat(v);
-        return '' + n;
-    },
-    parseText: parseFloat,
-    isType(v) {
-        return typeof v === 'number';
-    },
-};
-exports.ArrayNumericType = {
-    ...exports.NumericType,
-    name: '_numeric',
-    oid: constants_js_1.DataTypeOIDs._numeric,
-    elementsOID: constants_js_1.DataTypeOIDs.numeric,
-};
-/* https://github.com/pgjdbc/pgjdbc/blob/3eca3a76aa4a04cb28cb960ed674cb67db30b5e3/pgjdbc/src/main/java/org/postgresql/util/ByteConverter.java */
-/**
- * Convert a number from binary representation to text representation.
- * @param digits array of shorts that can be decoded as the number String
- * @param scale the scale of the number binary representation
- * @param weight the weight of the number binary representation
- * @param sign the sign of the number
- * @return String the number as String
- */
-function numberBytesToString(digits, scale, weight, sign) {
-    let i;
-    let d;
-    /*
-     * Allocate space for the result.
-     *
-     * i is set to the # of decimal digits before decimal point.
-     * dscale is the # of decimal digits we will print after decimal point.
-     * We may generate as many as DEC_DIGITS-1 excess digits at the end, and in addition we
-     * need room for sign, decimal point, null terminator.
-     */
-    i = (weight + 1) * DEC_DIGITS;
-    if (i <= 0)
-        i = 1;
-    /*
-     * Output a dash for negative values
-     */
-    let out = sign === NUMERIC_NEG ? '-' : '';
-    /*
-     * Output all digits before the decimal point
-     */
-    if (weight < 0) {
-        d = weight + 1;
-        out += '0';
-    }
-    else {
-        for (d = 0; d <= weight; d++) {
-            /* In the first digit, suppress extra leading decimal zeroes */
-            out += digitToString(d, digits, d !== 0);
-        }
-    }
-    /*
-     * If requested, output a decimal point and all the digits that follow it.
-     * We initially put out a multiple of DEC_DIGITS digits, then truncate if
-     * needed.
-     */
-    if (scale > 0) {
-        out += '.';
-        for (i = 0; i < scale; d++, i += DEC_DIGITS) {
-            out += digitToString(d, digits, true);
-        }
-    }
-    const extra = (i - scale) % DEC_DIGITS;
-    return out.substr(0, out.length - extra);
-}
-exports.numberBytesToString = numberBytesToString;
-/* https://github.com/pgjdbc/pgjdbc/blob/3eca3a76aa4a04cb28cb960ed674cb67db30b5e3/pgjdbc/src/main/java/org/postgresql/util/ByteConverter.java */
-/**
- * Convert a number from binary representation to text representation.
- * @param idx index of the digit to be converted in the digits array
- * @param digits array of shorts that can be decoded as the number String
- * @param alwaysPutIt a flag that indicate whether or not to put the digit char even if it is zero
- * @return String the number as String
- */
-function digitToString(idx, digits, alwaysPutIt) {
-    let out = '';
-    let dig = idx >= 0 && idx < digits.length ? digits[idx] : 0;
-    // Each dig represents 4 decimal digits (e.g. 9999)
-    // If we continue the number, then we need to print 0 as 0000 (alwaysPutIt parameter is true)
-    for (let p = 1; p < ROUND_POWERS.length; p++) {
-        const pow = ROUND_POWERS[p];
-        const d1 = Math.trunc(dig / pow);
-        dig -= d1 * pow;
-        const putit = d1 > 0;
-        if (putit || alwaysPutIt) {
-            out += d1;
-            // We printed a character, so we need to print the rest of the current digits in dig
-            // For instance, we need to keep printing 000 from 1000 even if idx==0 (== it is the very
-            // beginning)
-            alwaysPutIt = true;
-        }
-    }
-    out += dig;
-    return out;
-}
Index: node_modules/postgresql-client/esm/data-types/numeric-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/numeric-type.js b/node_modules/postgresql-client/esm/data-types/numeric-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/numeric-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,121 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-const NUMERIC_NEG = 0x4000;
-const NUMERIC_NAN = 0xc000;
-const DEC_DIGITS = 4;
-const ROUND_POWERS = [0, 1000, 100, 10];
-export const NumericType = {
-    name: 'numeric',
-    oid: DataTypeOIDs.numeric,
-    jsType: 'number',
-    parseBinary(v) {
-        const len = v.readInt16BE();
-        const weight = v.readInt16BE(2);
-        const sign = v.readInt16BE(4);
-        const scale = v.readInt16BE(6);
-        if (sign === NUMERIC_NAN)
-            return NaN;
-        const digits = [];
-        for (let i = 0; i < len; i++) {
-            digits[i] = v.readInt16BE(8 + i * 2);
-        }
-        const numString = numberBytesToString(digits, scale, weight, sign);
-        return parseFloat(numString);
-    },
-    encodeText(v) {
-        const n = typeof v === 'number' ? v : parseFloat(v);
-        return '' + n;
-    },
-    parseText: parseFloat,
-    isType(v) {
-        return typeof v === 'number';
-    },
-};
-export const ArrayNumericType = {
-    ...NumericType,
-    name: '_numeric',
-    oid: DataTypeOIDs._numeric,
-    elementsOID: DataTypeOIDs.numeric,
-};
-/* https://github.com/pgjdbc/pgjdbc/blob/3eca3a76aa4a04cb28cb960ed674cb67db30b5e3/pgjdbc/src/main/java/org/postgresql/util/ByteConverter.java */
-/**
- * Convert a number from binary representation to text representation.
- * @param digits array of shorts that can be decoded as the number String
- * @param scale the scale of the number binary representation
- * @param weight the weight of the number binary representation
- * @param sign the sign of the number
- * @return String the number as String
- */
-export function numberBytesToString(digits, scale, weight, sign) {
-    let i;
-    let d;
-    /*
-     * Allocate space for the result.
-     *
-     * i is set to the # of decimal digits before decimal point.
-     * dscale is the # of decimal digits we will print after decimal point.
-     * We may generate as many as DEC_DIGITS-1 excess digits at the end, and in addition we
-     * need room for sign, decimal point, null terminator.
-     */
-    i = (weight + 1) * DEC_DIGITS;
-    if (i <= 0)
-        i = 1;
-    /*
-     * Output a dash for negative values
-     */
-    let out = sign === NUMERIC_NEG ? '-' : '';
-    /*
-     * Output all digits before the decimal point
-     */
-    if (weight < 0) {
-        d = weight + 1;
-        out += '0';
-    }
-    else {
-        for (d = 0; d <= weight; d++) {
-            /* In the first digit, suppress extra leading decimal zeroes */
-            out += digitToString(d, digits, d !== 0);
-        }
-    }
-    /*
-     * If requested, output a decimal point and all the digits that follow it.
-     * We initially put out a multiple of DEC_DIGITS digits, then truncate if
-     * needed.
-     */
-    if (scale > 0) {
-        out += '.';
-        for (i = 0; i < scale; d++, i += DEC_DIGITS) {
-            out += digitToString(d, digits, true);
-        }
-    }
-    const extra = (i - scale) % DEC_DIGITS;
-    return out.substr(0, out.length - extra);
-}
-/* https://github.com/pgjdbc/pgjdbc/blob/3eca3a76aa4a04cb28cb960ed674cb67db30b5e3/pgjdbc/src/main/java/org/postgresql/util/ByteConverter.java */
-/**
- * Convert a number from binary representation to text representation.
- * @param idx index of the digit to be converted in the digits array
- * @param digits array of shorts that can be decoded as the number String
- * @param alwaysPutIt a flag that indicate whether or not to put the digit char even if it is zero
- * @return String the number as String
- */
-function digitToString(idx, digits, alwaysPutIt) {
-    let out = '';
-    let dig = idx >= 0 && idx < digits.length ? digits[idx] : 0;
-    // Each dig represents 4 decimal digits (e.g. 9999)
-    // If we continue the number, then we need to print 0 as 0000 (alwaysPutIt parameter is true)
-    for (let p = 1; p < ROUND_POWERS.length; p++) {
-        const pow = ROUND_POWERS[p];
-        const d1 = Math.trunc(dig / pow);
-        dig -= d1 * pow;
-        const putit = d1 > 0;
-        if (putit || alwaysPutIt) {
-            out += d1;
-            // We printed a character, so we need to print the rest of the current digits in dig
-            // For instance, we need to keep printing 000 from 1000 even if idx==0 (== it is the very
-            // beginning)
-            alwaysPutIt = true;
-        }
-    }
-    out += dig;
-    return out;
-}
Index: node_modules/postgresql-client/typings/data-types/oid-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/oid-type.d.ts b/node_modules/postgresql-client/typings/data-types/oid-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/oid-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,4 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const OidType: DataType;
-export declare const ArrayOidType: DataType;
-export declare const VectorOidType: DataType;
Index: node_modules/postgresql-client/cjs/data-types/oid-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/oid-type.js b/node_modules/postgresql-client/cjs/data-types/oid-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/oid-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,32 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.VectorOidType = exports.ArrayOidType = exports.OidType = void 0;
-const constants_js_1 = require("../constants.js");
-const fast_parseint_js_1 = require("../util/fast-parseint.js");
-exports.OidType = {
-    name: 'oid',
-    oid: constants_js_1.DataTypeOIDs.oid,
-    jsType: 'number',
-    parseBinary(v) {
-        return v.readUInt32BE(0);
-    },
-    encodeBinary(buf, v) {
-        buf.writeUInt32BE((0, fast_parseint_js_1.fastParseInt)(v));
-    },
-    parseText: fast_parseint_js_1.fastParseInt,
-    isType(v) {
-        return typeof v === 'number' && Number.isInteger(v) && !!constants_js_1.DataTypeNames[v];
-    },
-};
-exports.ArrayOidType = {
-    ...exports.OidType,
-    name: '_oid',
-    oid: constants_js_1.DataTypeOIDs._oid,
-    elementsOID: constants_js_1.DataTypeOIDs.oid,
-};
-exports.VectorOidType = {
-    ...exports.OidType,
-    name: '_oidvector',
-    oid: constants_js_1.DataTypeOIDs.oidvector,
-    elementsOID: constants_js_1.DataTypeOIDs.oid,
-};
Index: node_modules/postgresql-client/esm/data-types/oid-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/oid-type.js b/node_modules/postgresql-client/esm/data-types/oid-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/oid-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,29 +0,0 @@
-import { DataTypeNames, DataTypeOIDs } from '../constants.js';
-import { fastParseInt } from '../util/fast-parseint.js';
-export const OidType = {
-    name: 'oid',
-    oid: DataTypeOIDs.oid,
-    jsType: 'number',
-    parseBinary(v) {
-        return v.readUInt32BE(0);
-    },
-    encodeBinary(buf, v) {
-        buf.writeUInt32BE(fastParseInt(v));
-    },
-    parseText: fastParseInt,
-    isType(v) {
-        return typeof v === 'number' && Number.isInteger(v) && !!DataTypeNames[v];
-    },
-};
-export const ArrayOidType = {
-    ...OidType,
-    name: '_oid',
-    oid: DataTypeOIDs._oid,
-    elementsOID: DataTypeOIDs.oid,
-};
-export const VectorOidType = {
-    ...OidType,
-    name: '_oidvector',
-    oid: DataTypeOIDs.oidvector,
-    elementsOID: DataTypeOIDs.oid,
-};
Index: node_modules/abbrev/package.json
===================================================================
diff --git a/node_modules/abbrev/package.json b/node_modules/abbrev/package.json
deleted file mode 100644
--- a/node_modules/abbrev/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,21 +0,0 @@
-{
-  "name": "abbrev",
-  "version": "1.1.1",
-  "description": "Like ruby's abbrev module, but in js",
-  "author": "Isaac Z. Schlueter <i@izs.me>",
-  "main": "abbrev.js",
-  "scripts": {
-    "test": "tap test.js --100",
-    "preversion": "npm test",
-    "postversion": "npm publish",
-    "postpublish": "git push origin --all; git push origin --tags"
-  },
-  "repository": "http://github.com/isaacs/abbrev-js",
-  "license": "ISC",
-  "devDependencies": {
-    "tap": "^10.1"
-  },
-  "files": [
-    "abbrev.js"
-  ]
-}
Index: node_modules/call-bind/package.json
===================================================================
diff --git a/node_modules/call-bind/package.json b/node_modules/call-bind/package.json
deleted file mode 100644
--- a/node_modules/call-bind/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,95 +0,0 @@
-{
-	"name": "call-bind",
-	"version": "1.0.7",
-	"description": "Robustly `.call.bind()` a function",
-	"main": "index.js",
-	"exports": {
-		".": "./index.js",
-		"./callBound": "./callBound.js",
-		"./package.json": "./package.json"
-	},
-	"scripts": {
-		"prepack": "npmignore --auto --commentLines=auto",
-		"prepublish": "not-in-publish || npm run prepublishOnly",
-		"prepublishOnly": "safe-publish-latest",
-		"lint": "eslint --ext=.js,.mjs .",
-		"postlint": "evalmd README.md",
-		"pretest": "npm run lint",
-		"tests-only": "nyc tape 'test/**/*.js'",
-		"test": "npm run tests-only",
-		"posttest": "aud --production",
-		"version": "auto-changelog && git add CHANGELOG.md",
-		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
-	},
-	"repository": {
-		"type": "git",
-		"url": "git+https://github.com/ljharb/call-bind.git"
-	},
-	"keywords": [
-		"javascript",
-		"ecmascript",
-		"es",
-		"js",
-		"callbind",
-		"callbound",
-		"call",
-		"bind",
-		"bound",
-		"call-bind",
-		"call-bound",
-		"function",
-		"es-abstract"
-	],
-	"author": "Jordan Harband <ljharb@gmail.com>",
-	"funding": {
-		"url": "https://github.com/sponsors/ljharb"
-	},
-	"license": "MIT",
-	"bugs": {
-		"url": "https://github.com/ljharb/call-bind/issues"
-	},
-	"homepage": "https://github.com/ljharb/call-bind#readme",
-	"devDependencies": {
-		"@ljharb/eslint-config": "^21.1.0",
-		"aud": "^2.0.4",
-		"auto-changelog": "^2.4.0",
-		"es-value-fixtures": "^1.4.2",
-		"eslint": "=8.8.0",
-		"evalmd": "^0.0.19",
-		"for-each": "^0.3.3",
-		"gopd": "^1.0.1",
-		"has-strict-mode": "^1.0.1",
-		"in-publish": "^2.0.1",
-		"npmignore": "^0.3.1",
-		"nyc": "^10.3.2",
-		"object-inspect": "^1.13.1",
-		"safe-publish-latest": "^2.0.0",
-		"tape": "^5.7.4"
-	},
-	"dependencies": {
-		"es-define-property": "^1.0.0",
-		"es-errors": "^1.3.0",
-		"function-bind": "^1.1.2",
-		"get-intrinsic": "^1.2.4",
-		"set-function-length": "^1.2.1"
-	},
-	"testling": {
-		"files": "test/index.js"
-	},
-	"auto-changelog": {
-		"output": "CHANGELOG.md",
-		"template": "keepachangelog",
-		"unreleased": false,
-		"commitLimit": false,
-		"backfillLimit": false,
-		"hideCredit": true
-	},
-	"publishConfig": {
-		"ignore": [
-			".github/workflows"
-		]
-	},
-	"engines": {
-		"node": ">= 0.4"
-	}
-}
Index: node_modules/define-data-property/package.json
===================================================================
diff --git a/node_modules/define-data-property/package.json b/node_modules/define-data-property/package.json
deleted file mode 100644
--- a/node_modules/define-data-property/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,106 +0,0 @@
-{
-	"name": "define-data-property",
-	"version": "1.1.4",
-	"description": "Define a data property on an object. Will fall back to assignment in an engine without descriptors.",
-	"main": "index.js",
-	"types": "./index.d.ts",
-	"exports": {
-		".": "./index.js",
-		"./package.json": "./package.json"
-	},
-	"sideEffects": false,
-	"scripts": {
-		"prepack": "npmignore --auto --commentLines=autogenerated",
-		"prepublish": "not-in-publish || npm run prepublishOnly",
-		"prepublishOnly": "safe-publish-latest",
-		"tsc": "tsc -p .",
-		"prelint": "evalmd README.md",
-		"lint": "eslint --ext=js,mjs .",
-		"postlint": "npm run tsc",
-		"pretest": "npm run lint",
-		"tests-only": "nyc tape 'test/**/*.js'",
-		"test": "npm run tests-only",
-		"posttest": "aud --production",
-		"version": "auto-changelog && git add CHANGELOG.md",
-		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
-	},
-	"repository": {
-		"type": "git",
-		"url": "git+https://github.com/ljharb/define-data-property.git"
-	},
-	"keywords": [
-		"define",
-		"data",
-		"property",
-		"object",
-		"accessor",
-		"javascript",
-		"ecmascript",
-		"enumerable",
-		"configurable",
-		"writable"
-	],
-	"author": "Jordan Harband <ljharb@gmail.com>",
-	"funding": {
-		"url": "https://github.com/sponsors/ljharb"
-	},
-	"license": "MIT",
-	"bugs": {
-		"url": "https://github.com/ljharb/define-data-property/issues"
-	},
-	"homepage": "https://github.com/ljharb/define-data-property#readme",
-	"dependencies": {
-		"es-define-property": "^1.0.0",
-		"es-errors": "^1.3.0",
-		"gopd": "^1.0.1"
-	},
-	"devDependencies": {
-		"@ljharb/eslint-config": "^21.1.0",
-		"@types/call-bind": "^1.0.5",
-		"@types/define-properties": "^1.1.5",
-		"@types/es-value-fixtures": "^1.4.4",
-		"@types/for-each": "^0.3.3",
-		"@types/get-intrinsic": "^1.2.2",
-		"@types/gopd": "^1.0.3",
-		"@types/has-property-descriptors": "^1.0.3",
-		"@types/object-inspect": "^1.8.4",
-		"@types/object.getownpropertydescriptors": "^2.1.4",
-		"@types/tape": "^5.6.4",
-		"aud": "^2.0.4",
-		"auto-changelog": "^2.4.0",
-		"es-value-fixtures": "^1.4.2",
-		"eslint": "=8.8.0",
-		"evalmd": "^0.0.19",
-		"for-each": "^0.3.3",
-		"hasown": "^2.0.1",
-		"in-publish": "^2.0.1",
-		"npmignore": "^0.3.1",
-		"nyc": "^10.3.2",
-		"object-inspect": "^1.13.1",
-		"object.getownpropertydescriptors": "^2.1.7",
-		"reflect.ownkeys": "^1.1.4",
-		"safe-publish-latest": "^2.0.0",
-		"tape": "^5.7.4",
-		"typescript": "next"
-	},
-	"engines": {
-		"node": ">= 0.4"
-	},
-	"testling": {
-		"files": "test/index.js"
-	},
-	"auto-changelog": {
-		"output": "CHANGELOG.md",
-		"template": "keepachangelog",
-		"unreleased": false,
-		"commitLimit": false,
-		"backfillLimit": false,
-		"hideCredit": true
-	},
-	"publishConfig": {
-		"ignore": [
-			".github/workflows",
-			"types/reflect.ownkeys"
-		]
-	}
-}
Index: node_modules/has-property-descriptors/package.json
===================================================================
diff --git a/node_modules/has-property-descriptors/package.json b/node_modules/has-property-descriptors/package.json
deleted file mode 100644
--- a/node_modules/has-property-descriptors/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,77 +0,0 @@
-{
-	"name": "has-property-descriptors",
-	"version": "1.0.2",
-	"description": "Does the environment have full property descriptor support? Handles IE 8's broken defineProperty/gOPD.",
-	"main": "index.js",
-	"exports": {
-		".": "./index.js",
-		"./package.json": "./package.json"
-	},
-	"sideEffects": false,
-	"scripts": {
-		"prepack": "npmignore --auto --commentLines=autogenerated",
-		"prepublishOnly": "safe-publish-latest",
-		"prepublish": "not-in-publish || npm run prepublishOnly",
-		"pretest": "npm run lint",
-		"prelint": "evalmd README.md",
-		"lint": "eslint --ext=js,mjs .",
-		"tests-only": "nyc tape 'test/**/*.js'",
-		"test": "npm run tests-only",
-		"posttest": "aud --production",
-		"version": "auto-changelog && git add CHANGELOG.md",
-		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
-	},
-	"repository": {
-		"type": "git",
-		"url": "git+https://github.com/inspect-js/has-property-descriptors.git"
-	},
-	"keywords": [
-		"property",
-		"descriptors",
-		"has",
-		"environment",
-		"env",
-		"defineProperty",
-		"getOwnPropertyDescriptor"
-	],
-	"author": "Jordan Harband <ljharb@gmail.com>",
-	"funding": {
-		"url": "https://github.com/sponsors/ljharb"
-	},
-	"license": "MIT",
-	"bugs": {
-		"url": "https://github.com/inspect-js/has-property-descriptors/issues"
-	},
-	"homepage": "https://github.com/inspect-js/has-property-descriptors#readme",
-	"devDependencies": {
-		"@ljharb/eslint-config": "^21.1.0",
-		"aud": "^2.0.4",
-		"auto-changelog": "^2.4.0",
-		"eslint": "=8.8.0",
-		"evalmd": "^0.0.19",
-		"in-publish": "^2.0.1",
-		"npmignore": "^0.3.1",
-		"nyc": "^10.3.2",
-		"safe-publish-latest": "^2.0.0",
-		"tape": "^5.7.4"
-	},
-	"dependencies": {
-		"es-define-property": "^1.0.0"
-	},
-	"testling": {
-		"files": "test/index.js"
-	},
-	"auto-changelog": {
-		"output": "CHANGELOG.md",
-		"template": "keepachangelog",
-		"unreleased": false,
-		"commitLimit": false,
-		"backfillLimit": false,
-		"hideCredit": true
-	},
-	"publishConfig": {
-		"ignore": [
-			".github/workflows"
-		]
-	}
-}
Index: node_modules/has-proto/package.json
===================================================================
diff --git a/node_modules/has-proto/package.json b/node_modules/has-proto/package.json
deleted file mode 100644
--- a/node_modules/has-proto/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,78 +0,0 @@
-{
-	"name": "has-proto",
-	"version": "1.0.3",
-	"description": "Does this environment have the ability to get the [[Prototype]] of an object on creation with `__proto__`?",
-	"main": "index.js",
-	"exports": {
-		".": "./index.js",
-		"./package.json": "./package.json"
-	},
-	"sideEffects": false,
-	"scripts": {
-		"prepack": "npmignore --auto --commentLines=autogenerated",
-		"prepublishOnly": "safe-publish-latest",
-		"prepublish": "not-in-publish || npm run prepublishOnly",
-		"lint": "eslint --ext=js,mjs .",
-		"postlint": "tsc -p .",
-		"pretest": "npm run lint",
-		"tests-only": "tape 'test/**/*.js'",
-		"test": "npm run tests-only",
-		"posttest": "aud --production",
-		"version": "auto-changelog && git add CHANGELOG.md",
-		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
-	},
-	"repository": {
-		"type": "git",
-		"url": "git+https://github.com/inspect-js/has-proto.git"
-	},
-	"keywords": [
-		"prototype",
-		"proto",
-		"set",
-		"get",
-		"__proto__",
-		"getPrototypeOf",
-		"setPrototypeOf",
-		"has"
-	],
-	"author": "Jordan Harband <ljharb@gmail.com>",
-	"funding": {
-		"url": "https://github.com/sponsors/ljharb"
-	},
-	"license": "MIT",
-	"bugs": {
-		"url": "https://github.com/inspect-js/has-proto/issues"
-	},
-	"homepage": "https://github.com/inspect-js/has-proto#readme",
-	"testling": {
-		"files": "test/index.js"
-	},
-	"devDependencies": {
-		"@ljharb/eslint-config": "^21.1.0",
-		"@types/tape": "^5.6.4",
-		"aud": "^2.0.4",
-		"auto-changelog": "^2.4.0",
-		"eslint": "=8.8.0",
-		"in-publish": "^2.0.1",
-		"npmignore": "^0.3.1",
-		"safe-publish-latest": "^2.0.0",
-		"tape": "^5.7.5",
-		"typescript": "next"
-	},
-	"engines": {
-		"node": ">= 0.4"
-	},
-	"auto-changelog": {
-		"output": "CHANGELOG.md",
-		"template": "keepachangelog",
-		"unreleased": false,
-		"commitLimit": false,
-		"backfillLimit": false,
-		"hideCredit": true
-	},
-	"publishConfig": {
-		"ignore": [
-			".github/workflows"
-		]
-	}
-}
Index: node_modules/nopt/package.json
===================================================================
diff --git a/node_modules/nopt/package.json b/node_modules/nopt/package.json
deleted file mode 100644
--- a/node_modules/nopt/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,12 +0,0 @@
-{ "name" : "nopt"
-, "version" : "1.0.10"
-, "description" : "Option parsing for Node, supporting types, shorthands, etc. Used by npm."
-, "author" : "Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me/)"
-, "main" : "lib/nopt.js"
-, "scripts" : { "test" : "node lib/nopt.js" }
-, "repository" : "http://github.com/isaacs/nopt"
-, "bin" : "./bin/nopt.js"
-, "license" :
-  { "type" : "MIT"
-  , "url" : "https://github.com/isaacs/nopt/raw/master/LICENSE" }
-, "dependencies" : { "abbrev" : "1" }}
Index: node_modules/postgresql-client/node_modules/postgres-bytea/package.json
===================================================================
diff --git a/node_modules/postgresql-client/node_modules/postgres-bytea/package.json b/node_modules/postgresql-client/node_modules/postgres-bytea/package.json
deleted file mode 100644
--- a/node_modules/postgresql-client/node_modules/postgres-bytea/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,38 +0,0 @@
-{
-  "name": "postgres-bytea",
-  "main": "index.js",
-  "version": "3.0.0",
-  "description": "Postgres bytea parser",
-  "license": "MIT",
-  "repository": "bendrucker/postgres-bytea",
-  "author": {
-    "name": "Ben Drucker",
-    "email": "bvdrucker@gmail.com",
-    "url": "bendrucker.me"
-  },
-  "engines": {
-    "node": ">= 6"
-  },
-  "scripts": {
-    "test": "standard && tape *.js"
-  },
-  "keywords": [
-    "bytea",
-    "postgres",
-    "binary",
-    "parser"
-  ],
-  "dependencies": {
-    "obuf": "~1.1.2"
-  },
-  "devDependencies": {
-    "concat-stream": "2.0.0",
-    "standard": "^14.0.0",
-    "stream-to-promise": "^3.0.0",
-    "tape": "^5.0.0",
-    "tape-promise": "4.0.0"
-  },
-  "files": [
-    "*.js"
-  ]
-}
Index: node_modules/putil-merge/package.json
===================================================================
diff --git a/node_modules/putil-merge/package.json b/node_modules/putil-merge/package.json
deleted file mode 100644
--- a/node_modules/putil-merge/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,48 +0,0 @@
-{
-  "name": "putil-merge",
-  "description": "Lightweight solution for merging multiple objects into one. Also it supports deep merge and deep clone",
-  "version": "3.12.1",
-  "author": "Panates Ltd.",
-  "contributors": [
-    "Eray Hanoglu <e.hanoglu@panates.com>"
-  ],
-  "license": "MIT",
-  "repository": {
-    "type": "git",
-    "url": "https://github.com/panates/putil-merge.git"
-  },
-  "main": "lib/merge.js",
-  "types": "lib/merge",
-  "keywords": [
-    "javascript",
-    "merge",
-    "object"
-  ],
-  "devDependencies": {
-    "@types/mocha": "^10.0.2",
-    "@types/node": "^20.8.6",
-    "eslint": "^8.51.0",
-    "eslint-config-google": "^0.14.0",
-    "mocha": "^10.2.0",
-    "nyc": "^15.1.0"
-  },
-  "engines": {
-    "node": ">= 10.0"
-  },
-  "directories": {
-    "lib": "./lib"
-  },
-  "files": [
-    "LICENSE",
-    "README.md",
-    "lib/"
-  ],
-  "nyc": {
-    "temp-dir": "./coverage/.nyc_output"
-  },
-  "scripts": {
-    "test": "mocha --require ./test/support/env --reporter spec --bail --check-leaks test/",
-    "cover": "nyc --reporter html --reporter text npm run test",
-    "travis-cover": "nyc --reporter lcovonly npm run test"
-  }
-}
Index: node_modules/set-function-length/package.json
===================================================================
diff --git a/node_modules/set-function-length/package.json b/node_modules/set-function-length/package.json
deleted file mode 100644
--- a/node_modules/set-function-length/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,102 +0,0 @@
-{
-	"name": "set-function-length",
-	"version": "1.2.2",
-	"description": "Set a function's length property",
-	"main": "index.js",
-	"exports": {
-		".": "./index.js",
-		"./env": "./env.js",
-		"./package.json": "./package.json"
-	},
-	"sideEffects": false,
-	"directories": {
-		"test": "test"
-	},
-	"scripts": {
-		"prepack": "npmignore --auto --commentLines=autogenerated",
-		"prepublish": "not-in-publish || npm run prepublishOnly",
-		"prepublishOnly": "safe-publish-latest",
-		"tsc": "tsc -p .",
-		"posttsc": "attw -P",
-		"prelint": "evalmd README.md",
-		"lint": "eslint --ext=js,mjs .",
-		"postlint": "npm run tsc",
-		"pretest": "npm run lint",
-		"tests-only": "nyc tape 'test/**/*.js'",
-		"test": "npm run tests-only",
-		"posttest": "aud --production",
-		"version": "auto-changelog && git add CHANGELOG.md",
-		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
-	},
-	"repository": {
-		"type": "git",
-		"url": "git+https://github.com/ljharb/set-function-length.git"
-	},
-	"keywords": [
-		"javascript",
-		"ecmascript",
-		"set",
-		"function",
-		"length",
-		"function.length"
-	],
-	"author": "Jordan Harband <ljharb@gmail.com>",
-	"license": "MIT",
-	"bugs": {
-		"url": "https://github.com/ljharb/set-function-length/issues"
-	},
-	"homepage": "https://github.com/ljharb/set-function-length#readme",
-	"dependencies": {
-		"define-data-property": "^1.1.4",
-		"es-errors": "^1.3.0",
-		"function-bind": "^1.1.2",
-		"get-intrinsic": "^1.2.4",
-		"gopd": "^1.0.1",
-		"has-property-descriptors": "^1.0.2"
-	},
-	"devDependencies": {
-		"@arethetypeswrong/cli": "^0.15.1",
-		"@ljharb/eslint-config": "^21.1.0",
-		"@ljharb/tsconfig": "^0.1.1",
-		"@types/call-bind": "^1.0.5",
-		"@types/define-properties": "^1.1.5",
-		"@types/es-value-fixtures": "^1.4.4",
-		"@types/for-each": "^0.3.3",
-		"@types/function-bind": "^1.1.10",
-		"@types/gopd": "^1.0.3",
-		"@types/has-property-descriptors": "^1.0.3",
-		"@types/object-inspect": "^1.8.4",
-		"@types/tape": "^5.6.4",
-		"aud": "^2.0.4",
-		"auto-changelog": "^2.4.0",
-		"call-bind": "^1.0.7",
-		"es-value-fixtures": "^1.4.2",
-		"eslint": "=8.8.0",
-		"evalmd": "^0.0.19",
-		"for-each": "^0.3.3",
-		"in-publish": "^2.0.1",
-		"npmignore": "^0.3.1",
-		"nyc": "^10.3.2",
-		"object-inspect": "^1.13.1",
-		"safe-publish-latest": "^2.0.0",
-		"tape": "^5.7.5",
-		"typescript": "next"
-	},
-	"engines": {
-		"node": ">= 0.4"
-	},
-	"auto-changelog": {
-		"output": "CHANGELOG.md",
-		"template": "keepachangelog",
-		"unreleased": false,
-		"commitLimit": false,
-		"backfillLimit": false,
-		"hideCredit": true
-	},
-	"publishConfig": {
-		"ignore": [
-			".github/workflows",
-			"test"
-		]
-	}
-}
Index: node_modules/postgresql-client/typings/util/parse-array.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/util/parse-array.d.ts b/node_modules/postgresql-client/typings/util/parse-array.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/util/parse-array.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,5 +0,0 @@
-import type { Maybe } from '../types.js';
-export declare function parsePostgresArray(s: string, opts?: {
-    transform?: (v: string) => any;
-    separator?: string;
-}): Maybe<any[]>;
Index: node_modules/postgresql-client/cjs/util/parse-array.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/util/parse-array.js b/node_modules/postgresql-client/cjs/util/parse-array.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/util/parse-array.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,61 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.parsePostgresArray = void 0;
-function parsePostgresArray(s, opts) {
-    if (!s)
-        return;
-    const sep = (opts?.separator || ',').substring(0, 1);
-    const transform = opts?.transform;
-    const len = s.length;
-    let idx = 0;
-    const out = [];
-    const iterate = (arr) => {
-        let c;
-        let exactlyValue = false;
-        let token = '';
-        let quote = '';
-        while (idx < len) {
-            c = s.charAt(idx++);
-            if (!quote) {
-                if (!token && c === '{') {
-                    const a = [];
-                    arr.push(a);
-                    iterate(a);
-                    continue;
-                }
-                if (c === '}' || c === sep) {
-                    if (token) {
-                        if (token === 'NULL' && !exactlyValue)
-                            arr.push(null);
-                        else
-                            arr.push(transform ? transform(token) : token);
-                        exactlyValue = false;
-                    }
-                    token = '';
-                    if (c === '}')
-                        return;
-                    continue;
-                }
-            }
-            if (c === '\\') {
-                c = s.charAt(idx++);
-                token += c;
-                continue;
-            }
-            if (c === '"' || c === "'") {
-                if (quote && quote === c) {
-                    quote = '';
-                }
-                else {
-                    exactlyValue = true;
-                    quote = c;
-                }
-                continue;
-            }
-            token += c;
-        }
-    };
-    iterate(out);
-    return out.length ? out[0] : undefined;
-}
-exports.parsePostgresArray = parsePostgresArray;
Index: node_modules/postgresql-client/esm/util/parse-array.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/util/parse-array.js b/node_modules/postgresql-client/esm/util/parse-array.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/util/parse-array.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,57 +0,0 @@
-export function parsePostgresArray(s, opts) {
-    if (!s)
-        return;
-    const sep = (opts?.separator || ',').substring(0, 1);
-    const transform = opts?.transform;
-    const len = s.length;
-    let idx = 0;
-    const out = [];
-    const iterate = (arr) => {
-        let c;
-        let exactlyValue = false;
-        let token = '';
-        let quote = '';
-        while (idx < len) {
-            c = s.charAt(idx++);
-            if (!quote) {
-                if (!token && c === '{') {
-                    const a = [];
-                    arr.push(a);
-                    iterate(a);
-                    continue;
-                }
-                if (c === '}' || c === sep) {
-                    if (token) {
-                        if (token === 'NULL' && !exactlyValue)
-                            arr.push(null);
-                        else
-                            arr.push(transform ? transform(token) : token);
-                        exactlyValue = false;
-                    }
-                    token = '';
-                    if (c === '}')
-                        return;
-                    continue;
-                }
-            }
-            if (c === '\\') {
-                c = s.charAt(idx++);
-                token += c;
-                continue;
-            }
-            if (c === '"' || c === "'") {
-                if (quote && quote === c) {
-                    quote = '';
-                }
-                else {
-                    exactlyValue = true;
-                    quote = c;
-                }
-                continue;
-            }
-            token += c;
-        }
-    };
-    iterate(out);
-    return out.length ? out[0] : undefined;
-}
Index: node_modules/postgresql-client/typings/util/parse-datetime.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/util/parse-datetime.d.ts b/node_modules/postgresql-client/typings/util/parse-datetime.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/util/parse-datetime.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,1 +0,0 @@
-export declare function parseDateTime(str: string, parseTime?: boolean, parseTimeZone?: boolean, utc?: boolean): Date | number;
Index: node_modules/postgresql-client/cjs/util/parse-datetime.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/util/parse-datetime.js b/node_modules/postgresql-client/cjs/util/parse-datetime.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/util/parse-datetime.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,38 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.parseDateTime = void 0;
-// noinspection RegExpUnnecessaryNonCapturingGroup
-const fast_parseint_js_1 = require("./fast-parseint.js");
-// noinspection RegExpUnnecessaryNonCapturingGroup
-const TIMESTAMP_PATTERN = 
-// eslint-disable-next-line
-/^(\d{4})-?(0[1-9]|1[012])?-?([123]0|[012][1-9]|31)?(?:[T ]?([01][0-9]|2[0-3]):?([0-5][0-9]):?([0-5][0-9])?(?:\.(\d+))?(?:(Z)|(?:([+-])([01]?[0-9]|2[0-3]):?([0-5][0-9])?))?)?$/;
-const INFINITY_PATTERN = /^-?infinity$/;
-function parseDateTime(str, parseTime, parseTimeZone, utc) {
-    let m = str.match(TIMESTAMP_PATTERN);
-    if (!m) {
-        m = str.match(INFINITY_PATTERN);
-        if (m)
-            return Number(str.replace('i', 'I'));
-        return new Date('invalid');
-    }
-    const args = [1970, 0, 1, 0, 0, 0, 0];
-    const l = parseTime ? 7 : 3;
-    for (let i = 0; i < l; i++) {
-        const s = m[i + 1];
-        args[i] = (0, fast_parseint_js_1.fastParseInt)(s) || 0;
-    }
-    // Months starts from 0
-    if (args[1] > 0)
-        args[1]--;
-    if (parseTimeZone && parseTime && m[9]) {
-        const r = m[9] === '-' ? -1 : 1;
-        args[3] -= ((0, fast_parseint_js_1.fastParseInt)(m[10]) || 0) * r;
-        args[4] -= ((0, fast_parseint_js_1.fastParseInt)(m[11]) || 0) * r;
-        return new Date(Date.UTC(...args));
-    }
-    if (m[8] || utc)
-        return new Date(Date.UTC(...args));
-    return new Date(...args);
-}
-exports.parseDateTime = parseDateTime;
Index: node_modules/postgresql-client/esm/util/parse-datetime.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/util/parse-datetime.js b/node_modules/postgresql-client/esm/util/parse-datetime.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/util/parse-datetime.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,34 +0,0 @@
-// noinspection RegExpUnnecessaryNonCapturingGroup
-import { fastParseInt } from './fast-parseint.js';
-// noinspection RegExpUnnecessaryNonCapturingGroup
-const TIMESTAMP_PATTERN = 
-// eslint-disable-next-line
-/^(\d{4})-?(0[1-9]|1[012])?-?([123]0|[012][1-9]|31)?(?:[T ]?([01][0-9]|2[0-3]):?([0-5][0-9]):?([0-5][0-9])?(?:\.(\d+))?(?:(Z)|(?:([+-])([01]?[0-9]|2[0-3]):?([0-5][0-9])?))?)?$/;
-const INFINITY_PATTERN = /^-?infinity$/;
-export function parseDateTime(str, parseTime, parseTimeZone, utc) {
-    let m = str.match(TIMESTAMP_PATTERN);
-    if (!m) {
-        m = str.match(INFINITY_PATTERN);
-        if (m)
-            return Number(str.replace('i', 'I'));
-        return new Date('invalid');
-    }
-    const args = [1970, 0, 1, 0, 0, 0, 0];
-    const l = parseTime ? 7 : 3;
-    for (let i = 0; i < l; i++) {
-        const s = m[i + 1];
-        args[i] = fastParseInt(s) || 0;
-    }
-    // Months starts from 0
-    if (args[1] > 0)
-        args[1]--;
-    if (parseTimeZone && parseTime && m[9]) {
-        const r = m[9] === '-' ? -1 : 1;
-        args[3] -= (fastParseInt(m[10]) || 0) * r;
-        args[4] -= (fastParseInt(m[11]) || 0) * r;
-        return new Date(Date.UTC(...args));
-    }
-    if (m[8] || utc)
-        return new Date(Date.UTC(...args));
-    return new Date(...args);
-}
Index: node_modules/postgresql-client/typings/util/parse-row.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/util/parse-row.d.ts b/node_modules/postgresql-client/typings/util/parse-row.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/util/parse-row.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import { DataMappingOptions } from '../interfaces/data-mapping-options.js';
-import { AnyParseFunction } from '../types.js';
-export declare function parseRow(parsers: AnyParseFunction[], row: any[], options: DataMappingOptions): void;
Index: node_modules/postgresql-client/cjs/util/parse-row.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/util/parse-row.js b/node_modules/postgresql-client/cjs/util/parse-row.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/util/parse-row.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,11 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.parseRow = void 0;
-function parseRow(parsers, row, options) {
-    const l = row.length;
-    let i;
-    for (i = 0; i < l; i++) {
-        row[i] = row[i] == null ? null : parsers[i].call(undefined, row[i], options);
-    }
-}
-exports.parseRow = parseRow;
Index: node_modules/postgresql-client/esm/util/parse-row.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/util/parse-row.js b/node_modules/postgresql-client/esm/util/parse-row.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/util/parse-row.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,7 +0,0 @@
-export function parseRow(parsers, row, options) {
-    const l = row.length;
-    let i;
-    for (i = 0; i < l; i++) {
-        row[i] = row[i] == null ? null : parsers[i].call(undefined, row[i], options);
-    }
-}
Index: node_modules/postgresql-client/typings/util/parse-time.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/util/parse-time.d.ts b/node_modules/postgresql-client/typings/util/parse-time.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/util/parse-time.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-export declare const STRICT_TIME_PATTERN: RegExp;
-export declare const TIME_PATTERN: RegExp;
-export declare function parseTime(str: string, parseTimeZone?: boolean, utc?: boolean): Date;
Index: node_modules/postgresql-client/cjs/util/parse-time.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/util/parse-time.js b/node_modules/postgresql-client/cjs/util/parse-time.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/util/parse-time.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,29 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.parseTime = exports.TIME_PATTERN = exports.STRICT_TIME_PATTERN = void 0;
-const fast_parseint_js_1 = require("./fast-parseint.js");
-// eslint-disable-next-line
-// noinspection RegExpUnnecessaryNonCapturingGroup
-exports.STRICT_TIME_PATTERN = /^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])(?:\.(\d+))?(?:(Z)|(?:([+-])([01]?[0-9]|2[0-3]):?([0-5][0-9])?))?$/;
-// noinspection RegExpUnnecessaryNonCapturingGroup
-exports.TIME_PATTERN = /^([01][0-9]|2[0-3]):?([0-5][0-9]):?([0-5][0-9])?(?:\.(\d+))?(?:(Z)|(?:([+-])([01]?[0-9]|2[0-3]):?([0-5][0-9])?))?$/;
-function parseTime(str, parseTimeZone, utc) {
-    const m = str.match(exports.TIME_PATTERN);
-    if (!m)
-        return new Date('invalid');
-    const args = [1970, 0, 1, 0, 0, 0, 0];
-    for (let i = 1; i < 4; i++) {
-        const s = m[i];
-        args[i + 2] = (0, fast_parseint_js_1.fastParseInt)(s) || 0;
-    }
-    if (parseTimeZone && m[6]) {
-        const r = m[9] === '-' ? -1 : 1;
-        args[3] -= ((0, fast_parseint_js_1.fastParseInt)(m[7]) || 0) * r;
-        args[4] -= ((0, fast_parseint_js_1.fastParseInt)(m[8]) || 0) * r;
-        return new Date(Date.UTC(...args));
-    }
-    if (m[5] || utc)
-        return new Date(Date.UTC(...args));
-    return new Date(...args);
-}
-exports.parseTime = parseTime;
Index: node_modules/postgresql-client/esm/util/parse-time.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/util/parse-time.js b/node_modules/postgresql-client/esm/util/parse-time.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/util/parse-time.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,25 +0,0 @@
-import { fastParseInt } from './fast-parseint.js';
-// eslint-disable-next-line
-// noinspection RegExpUnnecessaryNonCapturingGroup
-export const STRICT_TIME_PATTERN = /^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])(?:\.(\d+))?(?:(Z)|(?:([+-])([01]?[0-9]|2[0-3]):?([0-5][0-9])?))?$/;
-// noinspection RegExpUnnecessaryNonCapturingGroup
-export const TIME_PATTERN = /^([01][0-9]|2[0-3]):?([0-5][0-9]):?([0-5][0-9])?(?:\.(\d+))?(?:(Z)|(?:([+-])([01]?[0-9]|2[0-3]):?([0-5][0-9])?))?$/;
-export function parseTime(str, parseTimeZone, utc) {
-    const m = str.match(TIME_PATTERN);
-    if (!m)
-        return new Date('invalid');
-    const args = [1970, 0, 1, 0, 0, 0, 0];
-    for (let i = 1; i < 4; i++) {
-        const s = m[i];
-        args[i + 2] = fastParseInt(s) || 0;
-    }
-    if (parseTimeZone && m[6]) {
-        const r = m[9] === '-' ? -1 : 1;
-        args[3] -= (fastParseInt(m[7]) || 0) * r;
-        args[4] -= (fastParseInt(m[8]) || 0) * r;
-        return new Date(Date.UTC(...args));
-    }
-    if (m[5] || utc)
-        return new Date(Date.UTC(...args));
-    return new Date(...args);
-}
Index: node_modules/postgresql-client/typings/protocol/pg-socket.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/protocol/pg-socket.d.ts b/node_modules/postgresql-client/typings/protocol/pg-socket.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/protocol/pg-socket.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,51 +0,0 @@
-/// <reference types="node" />
-import { ConnectionState } from '../constants.js';
-import { ConnectionConfiguration } from '../interfaces/database-connection-params.js';
-import { SafeEventEmitter } from '../safe-event-emitter.js';
-import { Callback, Maybe } from '../types.js';
-import { Frontend } from './frontend.js';
-import { Protocol } from './protocol.js';
-export type CaptureCallback = (code: Protocol.BackendMessageCode, msg: any, done: (err: Maybe<Error>, result?: any) => void) => void | Promise<void>;
-export interface SocketError extends Error {
-    code: string;
-}
-export declare class PgSocket extends SafeEventEmitter {
-    options: ConnectionConfiguration;
-    private _state;
-    private _socket?;
-    private _backend;
-    private _frontend;
-    private _sessionParameters;
-    private _saslSession?;
-    private _processID?;
-    private _secretKey?;
-    constructor(options: ConnectionConfiguration);
-    get state(): ConnectionState;
-    get processID(): Maybe<number>;
-    get secretKey(): Maybe<number>;
-    get sessionParameters(): Record<string, string>;
-    connect(): void;
-    close(): void;
-    sendParseMessage(args: Frontend.ParseMessageArgs, cb?: Callback): void;
-    sendBindMessage(args: Frontend.BindMessageArgs, cb?: Callback): void;
-    sendDescribeMessage(args: Frontend.DescribeMessageArgs, cb?: Callback): void;
-    sendExecuteMessage(args: Frontend.ExecuteMessageArgs, cb?: Callback): void;
-    sendCloseMessage(args: Frontend.CloseMessageArgs, cb?: Callback): void;
-    sendQueryMessage(sql: string, cb?: Callback): void;
-    sendFlushMessage(cb?: Callback): void;
-    sendTerminateMessage(cb?: Callback): void;
-    sendSyncMessage(): void;
-    capture(callback: CaptureCallback): Promise<any>;
-    protected _removeListeners(): void;
-    protected _reset(): void;
-    protected _handleConnect(): void;
-    protected _handleClose(): void;
-    protected _handleError(err: unknown): void;
-    protected _handleData(data: Buffer): void;
-    protected _resolvePassword(cb: (password: string) => void): void;
-    protected _handleAuthenticationMessage(msg?: any): void;
-    protected _handleParameterStatus(msg: Protocol.ParameterStatusMessage): void;
-    protected _handleBackendKeyData(msg: Protocol.BackendKeyDataMessage): void;
-    protected _handleCommandComplete(msg: any): Protocol.CommandCompleteMessage;
-    protected _send(data: Buffer, cb?: Callback): void;
-}
Index: node_modules/postgresql-client/cjs/protocol/pg-socket.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/protocol/pg-socket.js b/node_modules/postgresql-client/cjs/protocol/pg-socket.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/protocol/pg-socket.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,345 +0,0 @@
-"use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.PgSocket = void 0;
-const crypto_1 = __importDefault(require("crypto"));
-const net_1 = __importDefault(require("net"));
-const putil_promisify_1 = __importDefault(require("putil-promisify"));
-const tls_1 = __importDefault(require("tls"));
-const constants_js_1 = require("../constants.js");
-const safe_event_emitter_js_1 = require("../safe-event-emitter.js");
-const backend_js_1 = require("./backend.js");
-const database_error_js_1 = require("./database-error.js");
-const frontend_js_1 = require("./frontend.js");
-const protocol_js_1 = require("./protocol.js");
-const sasl_js_1 = require("./sasl.js");
-const DEFAULT_PORT_NUMBER = 5432;
-const COMMAND_RESULT_PATTERN = /^([^\d]+)(?: (\d+)(?: (\d+))?)?$/;
-class PgSocket extends safe_event_emitter_js_1.SafeEventEmitter {
-    constructor(options) {
-        super();
-        this.options = options;
-        this._state = constants_js_1.ConnectionState.CLOSED;
-        this._backend = new backend_js_1.Backend();
-        this._sessionParameters = {};
-        this._frontend = new frontend_js_1.Frontend({ buffer: options.buffer });
-        this.setMaxListeners(99);
-    }
-    get state() {
-        if (!this._socket || this._socket.destroyed)
-            this._state = constants_js_1.ConnectionState.CLOSED;
-        return this._state;
-    }
-    get processID() {
-        return this._processID;
-    }
-    get secretKey() {
-        return this._secretKey;
-    }
-    get sessionParameters() {
-        return this._sessionParameters;
-    }
-    connect() {
-        if (this._socket)
-            return;
-        this._state = constants_js_1.ConnectionState.CONNECTING;
-        const options = this.options;
-        const socket = (this._socket = new net_1.default.Socket());
-        const errorHandler = err => {
-            this._state = constants_js_1.ConnectionState.CLOSED;
-            this._removeListeners();
-            this._reset();
-            socket.destroy();
-            this._socket = undefined;
-            this.emit('error', err);
-        };
-        const connectHandler = () => {
-            socket.setTimeout(0);
-            if (this.options.keepAlive || this.options.keepAlive == null)
-                socket.setKeepAlive(true);
-            if (options.ssl) {
-                socket.write(this._frontend.getSSLRequestMessage());
-                socket.once('data', x => {
-                    this._removeListeners();
-                    if (x.toString() === 'S') {
-                        const tslOptions = { ...options.ssl, socket };
-                        if (options.host && net_1.default.isIP(options.host) === 0)
-                            tslOptions.servername = options.host;
-                        const tlsSocket = (this._socket = tls_1.default.connect(tslOptions));
-                        tlsSocket.once('error', errorHandler);
-                        tlsSocket.once('secureConnect', () => {
-                            this._removeListeners();
-                            this._handleConnect();
-                        });
-                        return;
-                    }
-                    if (x.toString() === 'N')
-                        return errorHandler(new Error('Server does not support SSL connections'));
-                    return errorHandler(new Error('There was an error establishing an SSL connection'));
-                });
-            }
-            else {
-                this._handleConnect();
-            }
-        };
-        socket.setNoDelay(true);
-        socket.setTimeout(options.connectTimeoutMs || 30000, () => errorHandler(new Error('Connection timed out')));
-        socket.once('error', errorHandler);
-        socket.once('connect', connectHandler);
-        this.emit('connecting');
-        if (options.host && options.host.startsWith('/'))
-            socket.connect(options.host);
-        else
-            socket.connect(options.port || DEFAULT_PORT_NUMBER, options.host || 'localhost');
-    }
-    close() {
-        if (!this._socket || this._socket.destroyed) {
-            this._state = constants_js_1.ConnectionState.CLOSED;
-            this._socket = undefined;
-            this._reset();
-            return;
-        }
-        if (this._state === constants_js_1.ConnectionState.CLOSING)
-            return;
-        const socket = this._socket;
-        this._state = constants_js_1.ConnectionState.CLOSING;
-        this._removeListeners();
-        socket.once('close', () => this._handleClose());
-        socket.destroy();
-    }
-    sendParseMessage(args, cb) {
-        if (this.listenerCount('debug'))
-            this.emit('debug', { location: 'PgSocket.sendParseMessage', args });
-        this._send(this._frontend.getParseMessage(args), cb);
-    }
-    sendBindMessage(args, cb) {
-        if (this.listenerCount('debug'))
-            this.emit('debug', { location: 'PgSocket.sendBindMessage', args });
-        this._send(this._frontend.getBindMessage(args), cb);
-    }
-    sendDescribeMessage(args, cb) {
-        if (this.listenerCount('debug'))
-            this.emit('debug', { location: 'PgSocket.sendDescribeMessage', args });
-        this._send(this._frontend.getDescribeMessage(args), cb);
-    }
-    sendExecuteMessage(args, cb) {
-        if (this.listenerCount('debug'))
-            this.emit('debug', { location: 'PgSocket.sendDescribeMessage', args });
-        this._send(this._frontend.getExecuteMessage(args), cb);
-    }
-    sendCloseMessage(args, cb) {
-        if (this.listenerCount('debug'))
-            this.emit('debug', { location: 'PgSocket.sendCloseMessage', args });
-        this._send(this._frontend.getCloseMessage(args), cb);
-    }
-    sendQueryMessage(sql, cb) {
-        if (this.listenerCount('debug'))
-            this.emit('debug', { location: 'PgSocket.sendQueryMessage', sql });
-        this._send(this._frontend.getQueryMessage(sql), cb);
-    }
-    sendFlushMessage(cb) {
-        if (this.listenerCount('debug'))
-            this.emit('debug', { location: 'PgSocket.sendFlushMessage' });
-        this._send(this._frontend.getFlushMessage(), cb);
-    }
-    sendTerminateMessage(cb) {
-        if (this.listenerCount('debug'))
-            this.emit('debug', { location: 'PgSocket.sendTerminateMessage' });
-        this._send(this._frontend.getTerminateMessage(), cb);
-    }
-    sendSyncMessage() {
-        if (this.listenerCount('debug'))
-            this.emit('debug', { location: 'PgSocket.sendSyncMessage' });
-        this._send(this._frontend.getSyncMessage());
-    }
-    capture(callback) {
-        return new Promise((resolve, reject) => {
-            const done = (err, result) => {
-                this.removeListener('error', errorHandler);
-                this.removeListener('message', msgHandler);
-                if (err)
-                    reject(err);
-                else
-                    resolve(result);
-            };
-            const errorHandler = (err) => {
-                this.removeListener('message', msgHandler);
-                reject(err);
-            };
-            const msgHandler = (code, msg) => {
-                const x = callback(code, msg, done);
-                if (putil_promisify_1.default.isPromise(x))
-                    x.catch(err => done(err));
-            };
-            this.once('error', errorHandler);
-            this.on('message', msgHandler);
-        });
-    }
-    _removeListeners() {
-        if (!this._socket)
-            return;
-        this._socket.removeAllListeners('error');
-        this._socket.removeAllListeners('connect');
-        this._socket.removeAllListeners('data');
-        this._socket.removeAllListeners('close');
-    }
-    _reset() {
-        this._backend.reset();
-        this._sessionParameters = {};
-        this._processID = undefined;
-        this._secretKey = undefined;
-        this._saslSession = undefined;
-    }
-    _handleConnect() {
-        const socket = this._socket;
-        if (!socket)
-            return;
-        this._state = constants_js_1.ConnectionState.AUTHORIZING;
-        this._reset();
-        socket.on('data', (data) => this._handleData(data));
-        socket.on('error', (err) => this._handleError(err));
-        socket.on('close', () => this._handleClose());
-        this._send(this._frontend.getStartupMessage({
-            user: this.options.user || 'postgres',
-            database: this.options.database || '',
-        }));
-    }
-    _handleClose() {
-        this._reset();
-        this._socket = undefined;
-        this._state = constants_js_1.ConnectionState.CLOSED;
-        this.emit('close');
-    }
-    _handleError(err) {
-        if (this._state !== constants_js_1.ConnectionState.READY) {
-            this._socket?.end();
-        }
-        this.emit('error', err);
-    }
-    _handleData(data) {
-        this._backend.parse(data, (code, payload) => {
-            try {
-                switch (code) {
-                    case protocol_js_1.Protocol.BackendMessageCode.Authentication:
-                        this._handleAuthenticationMessage(payload);
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.ErrorResponse:
-                        this.emit('error', new database_error_js_1.DatabaseError(payload));
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.NoticeResponse:
-                        this.emit('notice', payload);
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.NotificationResponse:
-                        this.emit('notification', payload);
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.ParameterStatus:
-                        this._handleParameterStatus(payload);
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.BackendKeyData:
-                        this._handleBackendKeyData(payload);
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.ReadyForQuery:
-                        if (this._state !== constants_js_1.ConnectionState.READY) {
-                            this._state = constants_js_1.ConnectionState.READY;
-                            this.emit('ready');
-                        }
-                        else
-                            this.emit('message', code, payload);
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.CommandComplete: {
-                        const msg = this._handleCommandComplete(payload);
-                        this.emit('message', code, msg);
-                        break;
-                    }
-                    default:
-                        this.emit('message', code, payload);
-                }
-            }
-            catch (e) {
-                this._handleError(e);
-            }
-        });
-    }
-    _resolvePassword(cb) {
-        (async () => {
-            const pass = typeof this.options.password === 'function' ? await this.options.password() : this.options.password;
-            cb(pass || '');
-        })().catch(err => this._handleError(err));
-    }
-    _handleAuthenticationMessage(msg) {
-        if (!msg) {
-            this.emit('authenticate');
-            return;
-        }
-        switch (msg.kind) {
-            case protocol_js_1.Protocol.AuthenticationMessageKind.CleartextPassword:
-                this._resolvePassword(password => {
-                    this._send(this._frontend.getPasswordMessage(password));
-                });
-                break;
-            case protocol_js_1.Protocol.AuthenticationMessageKind.MD5Password:
-                this._resolvePassword(password => {
-                    const md5 = (x) => crypto_1.default.createHash('md5').update(x, 'utf8').digest('hex');
-                    const l = md5(password + this.options.user);
-                    const r = md5(Buffer.concat([Buffer.from(l), msg.salt]));
-                    const pass = 'md5' + r;
-                    this._send(this._frontend.getPasswordMessage(pass));
-                });
-                break;
-            case protocol_js_1.Protocol.AuthenticationMessageKind.SASL: {
-                if (!msg.mechanisms.includes('SCRAM-SHA-256'))
-                    throw new Error('SASL: Only mechanism SCRAM-SHA-256 is currently supported');
-                const saslSession = (this._saslSession = sasl_js_1.SASL.createSession(this.options.user || '', 'SCRAM-SHA-256'));
-                this._send(this._frontend.getSASLMessage(saslSession));
-                break;
-            }
-            case protocol_js_1.Protocol.AuthenticationMessageKind.SASLContinue: {
-                const saslSession = this._saslSession;
-                if (!saslSession)
-                    throw new Error('SASL: Session not started yet');
-                this._resolvePassword(password => {
-                    sasl_js_1.SASL.continueSession(saslSession, password, msg.data);
-                    const buf = this._frontend.getSASLFinalMessage(saslSession);
-                    this._send(buf);
-                });
-                break;
-            }
-            case protocol_js_1.Protocol.AuthenticationMessageKind.SASLFinal: {
-                const session = this._saslSession;
-                if (!session)
-                    throw new Error('SASL: Session not started yet');
-                sasl_js_1.SASL.finalizeSession(session, msg.data);
-                this._saslSession = undefined;
-                break;
-            }
-        }
-    }
-    _handleParameterStatus(msg) {
-        this._sessionParameters[msg.name] = msg.value;
-    }
-    _handleBackendKeyData(msg) {
-        this._processID = msg.processID;
-        this._secretKey = msg.secretKey;
-    }
-    _handleCommandComplete(msg) {
-        const m = msg.command && msg.command.match(COMMAND_RESULT_PATTERN);
-        const result = {
-            command: m[1],
-        };
-        if (m[3] != null) {
-            result.oid = parseInt(m[2], 10);
-            result.rowCount = parseInt(m[3], 10);
-        }
-        else if (m[2])
-            result.rowCount = parseInt(m[2], 10);
-        return result;
-    }
-    _send(data, cb) {
-        if (this._socket && this._socket.writable) {
-            this._socket.write(data, cb);
-        }
-    }
-}
-exports.PgSocket = PgSocket;
Index: node_modules/postgresql-client/esm/protocol/pg-socket.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/protocol/pg-socket.js b/node_modules/postgresql-client/esm/protocol/pg-socket.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/protocol/pg-socket.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,338 +0,0 @@
-import crypto from 'crypto';
-import net from 'net';
-import promisify from 'putil-promisify';
-import tls from 'tls';
-import { ConnectionState } from '../constants.js';
-import { SafeEventEmitter } from '../safe-event-emitter.js';
-import { Backend } from './backend.js';
-import { DatabaseError } from './database-error.js';
-import { Frontend } from './frontend.js';
-import { Protocol } from './protocol.js';
-import { SASL } from './sasl.js';
-const DEFAULT_PORT_NUMBER = 5432;
-const COMMAND_RESULT_PATTERN = /^([^\d]+)(?: (\d+)(?: (\d+))?)?$/;
-export class PgSocket extends SafeEventEmitter {
-    constructor(options) {
-        super();
-        this.options = options;
-        this._state = ConnectionState.CLOSED;
-        this._backend = new Backend();
-        this._sessionParameters = {};
-        this._frontend = new Frontend({ buffer: options.buffer });
-        this.setMaxListeners(99);
-    }
-    get state() {
-        if (!this._socket || this._socket.destroyed)
-            this._state = ConnectionState.CLOSED;
-        return this._state;
-    }
-    get processID() {
-        return this._processID;
-    }
-    get secretKey() {
-        return this._secretKey;
-    }
-    get sessionParameters() {
-        return this._sessionParameters;
-    }
-    connect() {
-        if (this._socket)
-            return;
-        this._state = ConnectionState.CONNECTING;
-        const options = this.options;
-        const socket = (this._socket = new net.Socket());
-        const errorHandler = err => {
-            this._state = ConnectionState.CLOSED;
-            this._removeListeners();
-            this._reset();
-            socket.destroy();
-            this._socket = undefined;
-            this.emit('error', err);
-        };
-        const connectHandler = () => {
-            socket.setTimeout(0);
-            if (this.options.keepAlive || this.options.keepAlive == null)
-                socket.setKeepAlive(true);
-            if (options.ssl) {
-                socket.write(this._frontend.getSSLRequestMessage());
-                socket.once('data', x => {
-                    this._removeListeners();
-                    if (x.toString() === 'S') {
-                        const tslOptions = { ...options.ssl, socket };
-                        if (options.host && net.isIP(options.host) === 0)
-                            tslOptions.servername = options.host;
-                        const tlsSocket = (this._socket = tls.connect(tslOptions));
-                        tlsSocket.once('error', errorHandler);
-                        tlsSocket.once('secureConnect', () => {
-                            this._removeListeners();
-                            this._handleConnect();
-                        });
-                        return;
-                    }
-                    if (x.toString() === 'N')
-                        return errorHandler(new Error('Server does not support SSL connections'));
-                    return errorHandler(new Error('There was an error establishing an SSL connection'));
-                });
-            }
-            else {
-                this._handleConnect();
-            }
-        };
-        socket.setNoDelay(true);
-        socket.setTimeout(options.connectTimeoutMs || 30000, () => errorHandler(new Error('Connection timed out')));
-        socket.once('error', errorHandler);
-        socket.once('connect', connectHandler);
-        this.emit('connecting');
-        if (options.host && options.host.startsWith('/'))
-            socket.connect(options.host);
-        else
-            socket.connect(options.port || DEFAULT_PORT_NUMBER, options.host || 'localhost');
-    }
-    close() {
-        if (!this._socket || this._socket.destroyed) {
-            this._state = ConnectionState.CLOSED;
-            this._socket = undefined;
-            this._reset();
-            return;
-        }
-        if (this._state === ConnectionState.CLOSING)
-            return;
-        const socket = this._socket;
-        this._state = ConnectionState.CLOSING;
-        this._removeListeners();
-        socket.once('close', () => this._handleClose());
-        socket.destroy();
-    }
-    sendParseMessage(args, cb) {
-        if (this.listenerCount('debug'))
-            this.emit('debug', { location: 'PgSocket.sendParseMessage', args });
-        this._send(this._frontend.getParseMessage(args), cb);
-    }
-    sendBindMessage(args, cb) {
-        if (this.listenerCount('debug'))
-            this.emit('debug', { location: 'PgSocket.sendBindMessage', args });
-        this._send(this._frontend.getBindMessage(args), cb);
-    }
-    sendDescribeMessage(args, cb) {
-        if (this.listenerCount('debug'))
-            this.emit('debug', { location: 'PgSocket.sendDescribeMessage', args });
-        this._send(this._frontend.getDescribeMessage(args), cb);
-    }
-    sendExecuteMessage(args, cb) {
-        if (this.listenerCount('debug'))
-            this.emit('debug', { location: 'PgSocket.sendDescribeMessage', args });
-        this._send(this._frontend.getExecuteMessage(args), cb);
-    }
-    sendCloseMessage(args, cb) {
-        if (this.listenerCount('debug'))
-            this.emit('debug', { location: 'PgSocket.sendCloseMessage', args });
-        this._send(this._frontend.getCloseMessage(args), cb);
-    }
-    sendQueryMessage(sql, cb) {
-        if (this.listenerCount('debug'))
-            this.emit('debug', { location: 'PgSocket.sendQueryMessage', sql });
-        this._send(this._frontend.getQueryMessage(sql), cb);
-    }
-    sendFlushMessage(cb) {
-        if (this.listenerCount('debug'))
-            this.emit('debug', { location: 'PgSocket.sendFlushMessage' });
-        this._send(this._frontend.getFlushMessage(), cb);
-    }
-    sendTerminateMessage(cb) {
-        if (this.listenerCount('debug'))
-            this.emit('debug', { location: 'PgSocket.sendTerminateMessage' });
-        this._send(this._frontend.getTerminateMessage(), cb);
-    }
-    sendSyncMessage() {
-        if (this.listenerCount('debug'))
-            this.emit('debug', { location: 'PgSocket.sendSyncMessage' });
-        this._send(this._frontend.getSyncMessage());
-    }
-    capture(callback) {
-        return new Promise((resolve, reject) => {
-            const done = (err, result) => {
-                this.removeListener('error', errorHandler);
-                this.removeListener('message', msgHandler);
-                if (err)
-                    reject(err);
-                else
-                    resolve(result);
-            };
-            const errorHandler = (err) => {
-                this.removeListener('message', msgHandler);
-                reject(err);
-            };
-            const msgHandler = (code, msg) => {
-                const x = callback(code, msg, done);
-                if (promisify.isPromise(x))
-                    x.catch(err => done(err));
-            };
-            this.once('error', errorHandler);
-            this.on('message', msgHandler);
-        });
-    }
-    _removeListeners() {
-        if (!this._socket)
-            return;
-        this._socket.removeAllListeners('error');
-        this._socket.removeAllListeners('connect');
-        this._socket.removeAllListeners('data');
-        this._socket.removeAllListeners('close');
-    }
-    _reset() {
-        this._backend.reset();
-        this._sessionParameters = {};
-        this._processID = undefined;
-        this._secretKey = undefined;
-        this._saslSession = undefined;
-    }
-    _handleConnect() {
-        const socket = this._socket;
-        if (!socket)
-            return;
-        this._state = ConnectionState.AUTHORIZING;
-        this._reset();
-        socket.on('data', (data) => this._handleData(data));
-        socket.on('error', (err) => this._handleError(err));
-        socket.on('close', () => this._handleClose());
-        this._send(this._frontend.getStartupMessage({
-            user: this.options.user || 'postgres',
-            database: this.options.database || '',
-        }));
-    }
-    _handleClose() {
-        this._reset();
-        this._socket = undefined;
-        this._state = ConnectionState.CLOSED;
-        this.emit('close');
-    }
-    _handleError(err) {
-        if (this._state !== ConnectionState.READY) {
-            this._socket?.end();
-        }
-        this.emit('error', err);
-    }
-    _handleData(data) {
-        this._backend.parse(data, (code, payload) => {
-            try {
-                switch (code) {
-                    case Protocol.BackendMessageCode.Authentication:
-                        this._handleAuthenticationMessage(payload);
-                        break;
-                    case Protocol.BackendMessageCode.ErrorResponse:
-                        this.emit('error', new DatabaseError(payload));
-                        break;
-                    case Protocol.BackendMessageCode.NoticeResponse:
-                        this.emit('notice', payload);
-                        break;
-                    case Protocol.BackendMessageCode.NotificationResponse:
-                        this.emit('notification', payload);
-                        break;
-                    case Protocol.BackendMessageCode.ParameterStatus:
-                        this._handleParameterStatus(payload);
-                        break;
-                    case Protocol.BackendMessageCode.BackendKeyData:
-                        this._handleBackendKeyData(payload);
-                        break;
-                    case Protocol.BackendMessageCode.ReadyForQuery:
-                        if (this._state !== ConnectionState.READY) {
-                            this._state = ConnectionState.READY;
-                            this.emit('ready');
-                        }
-                        else
-                            this.emit('message', code, payload);
-                        break;
-                    case Protocol.BackendMessageCode.CommandComplete: {
-                        const msg = this._handleCommandComplete(payload);
-                        this.emit('message', code, msg);
-                        break;
-                    }
-                    default:
-                        this.emit('message', code, payload);
-                }
-            }
-            catch (e) {
-                this._handleError(e);
-            }
-        });
-    }
-    _resolvePassword(cb) {
-        (async () => {
-            const pass = typeof this.options.password === 'function' ? await this.options.password() : this.options.password;
-            cb(pass || '');
-        })().catch(err => this._handleError(err));
-    }
-    _handleAuthenticationMessage(msg) {
-        if (!msg) {
-            this.emit('authenticate');
-            return;
-        }
-        switch (msg.kind) {
-            case Protocol.AuthenticationMessageKind.CleartextPassword:
-                this._resolvePassword(password => {
-                    this._send(this._frontend.getPasswordMessage(password));
-                });
-                break;
-            case Protocol.AuthenticationMessageKind.MD5Password:
-                this._resolvePassword(password => {
-                    const md5 = (x) => crypto.createHash('md5').update(x, 'utf8').digest('hex');
-                    const l = md5(password + this.options.user);
-                    const r = md5(Buffer.concat([Buffer.from(l), msg.salt]));
-                    const pass = 'md5' + r;
-                    this._send(this._frontend.getPasswordMessage(pass));
-                });
-                break;
-            case Protocol.AuthenticationMessageKind.SASL: {
-                if (!msg.mechanisms.includes('SCRAM-SHA-256'))
-                    throw new Error('SASL: Only mechanism SCRAM-SHA-256 is currently supported');
-                const saslSession = (this._saslSession = SASL.createSession(this.options.user || '', 'SCRAM-SHA-256'));
-                this._send(this._frontend.getSASLMessage(saslSession));
-                break;
-            }
-            case Protocol.AuthenticationMessageKind.SASLContinue: {
-                const saslSession = this._saslSession;
-                if (!saslSession)
-                    throw new Error('SASL: Session not started yet');
-                this._resolvePassword(password => {
-                    SASL.continueSession(saslSession, password, msg.data);
-                    const buf = this._frontend.getSASLFinalMessage(saslSession);
-                    this._send(buf);
-                });
-                break;
-            }
-            case Protocol.AuthenticationMessageKind.SASLFinal: {
-                const session = this._saslSession;
-                if (!session)
-                    throw new Error('SASL: Session not started yet');
-                SASL.finalizeSession(session, msg.data);
-                this._saslSession = undefined;
-                break;
-            }
-        }
-    }
-    _handleParameterStatus(msg) {
-        this._sessionParameters[msg.name] = msg.value;
-    }
-    _handleBackendKeyData(msg) {
-        this._processID = msg.processID;
-        this._secretKey = msg.secretKey;
-    }
-    _handleCommandComplete(msg) {
-        const m = msg.command && msg.command.match(COMMAND_RESULT_PATTERN);
-        const result = {
-            command: m[1],
-        };
-        if (m[3] != null) {
-            result.oid = parseInt(m[2], 10);
-            result.rowCount = parseInt(m[3], 10);
-        }
-        else if (m[2])
-            result.rowCount = parseInt(m[2], 10);
-        return result;
-    }
-    _send(data, cb) {
-        if (this._socket && this._socket.writable) {
-            this._socket.write(data, cb);
-        }
-    }
-}
Index: node_modules/postgresql-client/typings/data-types/point-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/point-type.d.ts b/node_modules/postgresql-client/typings/data-types/point-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/point-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const PointType: DataType;
-export declare const ArrayPointType: DataType;
Index: node_modules/postgresql-client/cjs/data-types/point-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/point-type.js b/node_modules/postgresql-client/cjs/data-types/point-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/point-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,39 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayPointType = exports.PointType = void 0;
-const constants_js_1 = require("../constants.js");
-const POINT_PATTERN1 = /^\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\)$/;
-const POINT_PATTERN2 = /^(-?\d+\.?\d*) *, *(-?\d+\.?\d*)$/;
-exports.PointType = {
-    name: 'point',
-    oid: constants_js_1.DataTypeOIDs.point,
-    jsType: 'object',
-    parseBinary(v) {
-        return {
-            x: v.readDoubleBE(0),
-            y: v.readDoubleBE(8),
-        };
-    },
-    encodeBinary(buf, v) {
-        buf.writeDoubleBE(v.x);
-        buf.writeDoubleBE(v.y);
-    },
-    parseText(v) {
-        const m = v.match(POINT_PATTERN1) || v.match(POINT_PATTERN2);
-        if (!m)
-            return undefined;
-        return {
-            x: parseFloat(m[1]),
-            y: parseFloat(m[2]),
-        };
-    },
-    isType(v) {
-        return typeof v === 'object' && Object.keys(v).length === 2 && typeof v.x === 'number' && typeof v.y === 'number';
-    },
-};
-exports.ArrayPointType = {
-    ...exports.PointType,
-    name: '_point',
-    oid: constants_js_1.DataTypeOIDs._point,
-    elementsOID: constants_js_1.DataTypeOIDs.point,
-};
Index: node_modules/postgresql-client/esm/data-types/point-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/point-type.js b/node_modules/postgresql-client/esm/data-types/point-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/point-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,36 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-const POINT_PATTERN1 = /^\( *(-?\d+\.?\d*) *, *(-?\d+\.?\d*) *\)$/;
-const POINT_PATTERN2 = /^(-?\d+\.?\d*) *, *(-?\d+\.?\d*)$/;
-export const PointType = {
-    name: 'point',
-    oid: DataTypeOIDs.point,
-    jsType: 'object',
-    parseBinary(v) {
-        return {
-            x: v.readDoubleBE(0),
-            y: v.readDoubleBE(8),
-        };
-    },
-    encodeBinary(buf, v) {
-        buf.writeDoubleBE(v.x);
-        buf.writeDoubleBE(v.y);
-    },
-    parseText(v) {
-        const m = v.match(POINT_PATTERN1) || v.match(POINT_PATTERN2);
-        if (!m)
-            return undefined;
-        return {
-            x: parseFloat(m[1]),
-            y: parseFloat(m[2]),
-        };
-    },
-    isType(v) {
-        return typeof v === 'object' && Object.keys(v).length === 2 && typeof v.x === 'number' && typeof v.y === 'number';
-    },
-};
-export const ArrayPointType = {
-    ...PointType,
-    name: '_point',
-    oid: DataTypeOIDs._point,
-    elementsOID: DataTypeOIDs.point,
-};
Index: node_modules/lightning-pool/esm/pool.d.ts
===================================================================
diff --git a/node_modules/lightning-pool/esm/pool.d.ts b/node_modules/lightning-pool/esm/pool.d.ts
deleted file mode 100644
--- a/node_modules/lightning-pool/esm/pool.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,104 +0,0 @@
-/// <reference types="node" />
-import { EventEmitter } from 'events';
-import { Callback, PoolConfiguration, PoolFactory, PoolState } from './definitions.js';
-import { PoolOptions } from './pool-options.js';
-export declare class Pool<T = any> extends EventEmitter {
-    private readonly _options;
-    private readonly _factory;
-    private _requestQueue;
-    private _allResources;
-    private _acquiredResources;
-    private _idleResources;
-    private _creating;
-    private _requestsProcessing;
-    private _state;
-    private _houseKeepTimer;
-    private _closeWaitTimer;
-    constructor(factory: PoolFactory<T>, config?: PoolConfiguration);
-    /**
-     * Returns Pool options
-     */
-    get options(): PoolOptions;
-    /**
-     * Returns number of resources that are currently acquired
-     */
-    get acquired(): number;
-    /**
-     * Returns number of unused resources in the pool
-     */
-    get available(): number;
-    /**
-     * Returns number of resources currently creating
-     */
-    get creating(): number;
-    /**
-     * Returns number of callers waiting to acquire a resource
-     */
-    get pending(): number;
-    /**
-     * Returns number of resources in the pool
-     * regardless of whether they are idle or in use
-     */
-    get size(): number;
-    /**
-     * Returns state of the pool
-     */
-    get state(): PoolState;
-    /**
-     * Starts the pool and begins creating of resources, starts house keeping and any other internal logic.
-     * Note: This method is not need to be called. Pool instance will automatically be started when acquire() method is called
-     */
-    start(): void;
-    /**
-     * Shuts down the pool and destroys all resources.
-     */
-    close(callback?: Callback): void;
-    close(terminateWait: number, callback?: Callback): void;
-    close(force: boolean, callback?: Callback): void;
-    closeAsync(): Promise<void>;
-    closeAsync(terminateWait: number): Promise<void>;
-    closeAsync(force: boolean): Promise<void>;
-    /**
-     * Acquires `resource` from the pool or create a new one
-     */
-    acquire(): Promise<T>;
-    acquire(callback: any): void;
-    /**
-     * Releases an allocated `resource` and let it back to pool.
-     */
-    release(resource: T, callback?: Callback): void;
-    /**
-     * Async version of release().
-     */
-    releaseAsync(resource: T): Promise<void>;
-    /**
-     * Releases, destroys and removes any `resource` from `Pool`.
-     */
-    destroy(resource: T, callback?: Callback): any;
-    /**
-     * Async version of destroy().
-     */
-    destroyAsync(resource: T): Promise<void>;
-    /**
-     * Returns if a `resource` has been acquired from the pool and not yet released or destroyed.
-     */
-    isAcquired(resource: T): boolean;
-    /**
-     * Returns if the pool contains a `resource`
-     */
-    includes(resource: T): boolean;
-    private _processNextRequest;
-    emit(event: string | symbol, ...args: any[]): boolean;
-    /**
-     * Creates new resource
-     */
-    private _createResource;
-    private _setHouseKeep;
-    private _houseKeep;
-    private _ensureMin;
-    private _itemSetAcquired;
-    private _itemDetach;
-    private _itemSetIdle;
-    private _itemDestroy;
-    private _itemValidate;
-}
Index: node_modules/postgresql-client/typings/connection/pool.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/connection/pool.d.ts b/node_modules/postgresql-client/typings/connection/pool.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/connection/pool.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,52 +0,0 @@
-import { Pool as LightningPool } from 'lightning-pool';
-import { PoolConfiguration } from '../interfaces/database-connection-params.js';
-import { QueryOptions } from '../interfaces/query-options.js';
-import { QueryResult } from '../interfaces/query-result.js';
-import { ScriptExecuteOptions } from '../interfaces/script-execute-options.js';
-import { ScriptResult } from '../interfaces/script-result.js';
-import { StatementPrepareOptions } from '../interfaces/statement-prepare-options.js';
-import { SafeEventEmitter } from '../safe-event-emitter.js';
-import { Connection, NotificationCallback } from './connection.js';
-import { IntlConnection } from './intl-connection.js';
-import { PreparedStatement } from './prepared-statement.js';
-export declare class Pool extends SafeEventEmitter {
-    protected readonly _pool: LightningPool<IntlConnection>;
-    protected readonly _notificationListeners: SafeEventEmitter;
-    protected _notificationConnection?: Connection;
-    readonly config: PoolConfiguration;
-    constructor(config?: PoolConfiguration | string);
-    /**
-     * Returns number of connections that are currently acquired
-     */
-    get acquiredConnections(): number;
-    /**
-     * Returns number of unused connections in the pool
-     */
-    get idleConnections(): number;
-    /**
-     * Returns total number of connections in the pool regardless of whether they are idle or in use
-     */
-    get totalConnections(): number;
-    /**
-     * Obtains a connection from the connection pool
-     */
-    acquire(): Promise<Connection>;
-    /**
-     * Shuts down the pool and destroys all resources.
-     */
-    close(terminateWait?: number): Promise<void>;
-    /**
-     * Executes a script
-     */
-    execute(sql: string, options?: ScriptExecuteOptions): Promise<ScriptResult>;
-    /**
-     * Executes a query
-     */
-    query(sql: string, options?: QueryOptions): Promise<QueryResult>;
-    prepare(sql: string, options?: StatementPrepareOptions): Promise<PreparedStatement>;
-    release(connection: Connection): Promise<void>;
-    listen(channel: string, callback: NotificationCallback): Promise<void>;
-    unListen(channel: string): Promise<void>;
-    unListenAll(): Promise<void>;
-    protected _initNotificationConnection(): Promise<void>;
-}
Index: node_modules/postgresql-client/cjs/connection/pool.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/connection/pool.js b/node_modules/postgresql-client/cjs/connection/pool.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/connection/pool.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,226 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.Pool = void 0;
-const lightning_pool_1 = require("lightning-pool");
-const putil_varhelpers_1 = require("putil-varhelpers");
-const constants_js_1 = require("../constants.js");
-const safe_event_emitter_js_1 = require("../safe-event-emitter.js");
-const connection_config_js_1 = require("../util/connection-config.js");
-const connection_js_1 = require("./connection.js");
-const intl_connection_js_1 = require("./intl-connection.js");
-class Pool extends safe_event_emitter_js_1.SafeEventEmitter {
-    constructor(config) {
-        super();
-        this._notificationListeners = new safe_event_emitter_js_1.SafeEventEmitter();
-        const cfg = (0, connection_config_js_1.getConnectionConfig)(config);
-        this.config = Object.freeze(cfg);
-        const poolOptions = {};
-        poolOptions.acquireMaxRetries = (0, putil_varhelpers_1.coerceToInt)(cfg.acquireMaxRetries, 0);
-        poolOptions.acquireRetryWait = (0, putil_varhelpers_1.coerceToInt)(cfg.acquireRetryWait, 2000);
-        poolOptions.acquireTimeoutMillis = (0, putil_varhelpers_1.coerceToInt)(cfg.acquireTimeoutMillis, 0);
-        poolOptions.idleTimeoutMillis = (0, putil_varhelpers_1.coerceToInt)(cfg.idleTimeoutMillis, 30000);
-        poolOptions.max = (0, putil_varhelpers_1.coerceToInt)(cfg.max, 10);
-        poolOptions.maxQueue = (0, putil_varhelpers_1.coerceToInt)(cfg.maxQueue, 1000);
-        poolOptions.max = (0, putil_varhelpers_1.coerceToInt)(cfg.max, 10);
-        poolOptions.min = (0, putil_varhelpers_1.coerceToInt)(cfg.min, 0);
-        poolOptions.minIdle = (0, putil_varhelpers_1.coerceToInt)(cfg.minIdle, 0);
-        poolOptions.validation = (0, putil_varhelpers_1.coerceToBoolean)(cfg.validation, false);
-        const poolFactory = {
-            create: async () => {
-                /* istanbul ignore next */
-                if (this.listenerCount('debug'))
-                    this.emit('debug', {
-                        location: 'Pool.factory.create',
-                        pool: this,
-                        message: `new connection creating`,
-                    });
-                const intlCon = new intl_connection_js_1.IntlConnection(cfg);
-                await intlCon.connect();
-                intlCon.on('close', () => this._pool.destroy(intlCon));
-                /* istanbul ignore next */
-                if (this.listenerCount('debug'))
-                    this.emit('debug', {
-                        location: 'Pool.factory.create',
-                        pool: this,
-                        message: `[${intlCon.processID}] connection created`,
-                    });
-                return intlCon;
-            },
-            destroy: intlCon => {
-                /* istanbul ignore next */
-                if (this.listenerCount('debug'))
-                    this.emit('debug', {
-                        location: 'Pool.factory.destroy',
-                        pool: this,
-                        message: `[${intlCon.processID}] connection destroy`,
-                    });
-                return intlCon.close();
-            },
-            reset: async (intlCon) => {
-                /* istanbul ignore next */
-                if (this.listenerCount('debug'))
-                    this.emit('debug', {
-                        location: 'Pool.factory.reset',
-                        pool: this,
-                        message: `[${intlCon.processID}] connection reset`,
-                    });
-                try {
-                    if (intlCon.state === constants_js_1.ConnectionState.READY) {
-                        await intlCon.execute('ROLLBACK;UNLISTEN *');
-                    }
-                }
-                finally {
-                    intlCon.removeAllListeners();
-                    intlCon.once('close', () => this._pool.destroy(intlCon));
-                    intlCon._refCount = 0;
-                }
-            },
-            validate: async (intlCon) => {
-                /* istanbul ignore next */
-                if (this.listenerCount('debug'))
-                    this.emit('debug', {
-                        location: 'Pool.factory.validate',
-                        pool: this,
-                        message: `[${intlCon.processID}] connection validate`,
-                    });
-                if (intlCon.state !== constants_js_1.ConnectionState.READY)
-                    throw new Error('Connection is not active');
-                await intlCon.execute('select 1;');
-            },
-        };
-        this._pool = new lightning_pool_1.Pool(poolFactory, poolOptions);
-        this._pool.on('return', (...args) => this.emit('release', ...args));
-        this._pool.on('error', (...args) => this.emit('error', ...args));
-        this._pool.on('acquire', (...args) => this.emit('acquire', ...args));
-        this._pool.on('destroy', (...args) => this.emit('destroy', ...args));
-        this._pool.start();
-    }
-    /**
-     * Returns number of connections that are currently acquired
-     */
-    get acquiredConnections() {
-        return this._pool.acquired;
-    }
-    /**
-     * Returns number of unused connections in the pool
-     */
-    get idleConnections() {
-        return this._pool.available;
-    }
-    /**
-     * Returns total number of connections in the pool regardless of whether they are idle or in use
-     */
-    get totalConnections() {
-        return this._pool.size;
-    }
-    /**
-     * Obtains a connection from the connection pool
-     */
-    async acquire() {
-        const intlCon = await this._pool.acquire();
-        /* istanbul ignore next */
-        if (this.listenerCount('debug'))
-            this.emit('debug', {
-                location: 'Pool.acquire',
-                pool: this,
-                message: `[${intlCon.processID}] acquired`,
-            });
-        const connection = new connection_js_1.Connection(this, intlCon);
-        /* istanbul ignore next */
-        if (this.listenerCount('debug'))
-            connection.on('debug', (...args) => this.emit('debug', ...args));
-        return connection;
-    }
-    /**
-     * Shuts down the pool and destroys all resources.
-     */
-    async close(terminateWait) {
-        this._notificationListeners.removeAllListeners();
-        await this._notificationConnection?.close(terminateWait);
-        const ms = terminateWait == null ? 10000 : terminateWait;
-        return this._pool.closeAsync(ms);
-    }
-    /**
-     * Executes a script
-     */
-    async execute(sql, options) {
-        const connection = await this.acquire();
-        try {
-            return await connection.execute(sql, options);
-        }
-        finally {
-            await this.release(connection);
-        }
-    }
-    /**
-     * Executes a query
-     */
-    async query(sql, options) {
-        const connection = await this.acquire();
-        try {
-            return await connection.query(sql, options);
-        }
-        finally {
-            await this.release(connection);
-        }
-    }
-    async prepare(sql, options) {
-        const connection = await this.acquire();
-        const statement = await connection.prepare(sql, options);
-        statement.once('close', () => this._pool.release((0, intl_connection_js_1.getIntlConnection)(connection)));
-        return statement;
-    }
-    release(connection) {
-        return this._pool.releaseAsync((0, intl_connection_js_1.getIntlConnection)(connection));
-    }
-    async listen(channel, callback) {
-        if (!/^[A-Z]\w+$/i.test(channel))
-            throw new TypeError(`Invalid channel name`);
-        this._notificationListeners.on(channel, callback);
-        await this._initNotificationConnection();
-    }
-    async unListen(channel) {
-        if (!/^[A-Z]\w+$/i.test(channel))
-            throw new TypeError(`Invalid channel name`);
-        this._notificationListeners.removeAllListeners(channel);
-        if (!this._notificationListeners.eventNames().length) {
-            await this.unListenAll();
-        }
-        else if (this._notificationConnection)
-            await this._notificationConnection.unListen(channel);
-    }
-    async unListenAll() {
-        this._notificationListeners.removeAllListeners();
-        if (this._notificationConnection) {
-            const conn = this._notificationConnection;
-            this._notificationConnection = undefined;
-            await conn.close();
-        }
-    }
-    async _initNotificationConnection() {
-        if (this._notificationConnection)
-            return;
-        const conn = (this._notificationConnection = new connection_js_1.Connection(this.config));
-        // Reconnect on connection lost
-        conn.on('close', () => reConnect());
-        const registerEvents = async () => {
-            const channels = this._notificationListeners.eventNames();
-            for (const channel of channels) {
-                const fns = this._notificationListeners.listeners(channel);
-                for (const fn of fns) {
-                    await conn.listen(channel, fn);
-                }
-            }
-        };
-        const reConnect = async () => {
-            setTimeout(() => {
-                if (!this._notificationListeners.eventNames().length)
-                    return;
-                conn.connect().catch(() => reConnect());
-            }, 500).unref();
-        };
-        await conn.connect();
-        await registerEvents();
-    }
-}
-exports.Pool = Pool;
Index: node_modules/postgresql-client/esm/connection/pool.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/connection/pool.js b/node_modules/postgresql-client/esm/connection/pool.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/connection/pool.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,222 +0,0 @@
-import { Pool as LightningPool } from 'lightning-pool';
-import { coerceToBoolean, coerceToInt } from 'putil-varhelpers';
-import { ConnectionState } from '../constants.js';
-import { SafeEventEmitter } from '../safe-event-emitter.js';
-import { getConnectionConfig } from '../util/connection-config.js';
-import { Connection } from './connection.js';
-import { getIntlConnection, IntlConnection } from './intl-connection.js';
-export class Pool extends SafeEventEmitter {
-    constructor(config) {
-        super();
-        this._notificationListeners = new SafeEventEmitter();
-        const cfg = getConnectionConfig(config);
-        this.config = Object.freeze(cfg);
-        const poolOptions = {};
-        poolOptions.acquireMaxRetries = coerceToInt(cfg.acquireMaxRetries, 0);
-        poolOptions.acquireRetryWait = coerceToInt(cfg.acquireRetryWait, 2000);
-        poolOptions.acquireTimeoutMillis = coerceToInt(cfg.acquireTimeoutMillis, 0);
-        poolOptions.idleTimeoutMillis = coerceToInt(cfg.idleTimeoutMillis, 30000);
-        poolOptions.max = coerceToInt(cfg.max, 10);
-        poolOptions.maxQueue = coerceToInt(cfg.maxQueue, 1000);
-        poolOptions.max = coerceToInt(cfg.max, 10);
-        poolOptions.min = coerceToInt(cfg.min, 0);
-        poolOptions.minIdle = coerceToInt(cfg.minIdle, 0);
-        poolOptions.validation = coerceToBoolean(cfg.validation, false);
-        const poolFactory = {
-            create: async () => {
-                /* istanbul ignore next */
-                if (this.listenerCount('debug'))
-                    this.emit('debug', {
-                        location: 'Pool.factory.create',
-                        pool: this,
-                        message: `new connection creating`,
-                    });
-                const intlCon = new IntlConnection(cfg);
-                await intlCon.connect();
-                intlCon.on('close', () => this._pool.destroy(intlCon));
-                /* istanbul ignore next */
-                if (this.listenerCount('debug'))
-                    this.emit('debug', {
-                        location: 'Pool.factory.create',
-                        pool: this,
-                        message: `[${intlCon.processID}] connection created`,
-                    });
-                return intlCon;
-            },
-            destroy: intlCon => {
-                /* istanbul ignore next */
-                if (this.listenerCount('debug'))
-                    this.emit('debug', {
-                        location: 'Pool.factory.destroy',
-                        pool: this,
-                        message: `[${intlCon.processID}] connection destroy`,
-                    });
-                return intlCon.close();
-            },
-            reset: async (intlCon) => {
-                /* istanbul ignore next */
-                if (this.listenerCount('debug'))
-                    this.emit('debug', {
-                        location: 'Pool.factory.reset',
-                        pool: this,
-                        message: `[${intlCon.processID}] connection reset`,
-                    });
-                try {
-                    if (intlCon.state === ConnectionState.READY) {
-                        await intlCon.execute('ROLLBACK;UNLISTEN *');
-                    }
-                }
-                finally {
-                    intlCon.removeAllListeners();
-                    intlCon.once('close', () => this._pool.destroy(intlCon));
-                    intlCon._refCount = 0;
-                }
-            },
-            validate: async (intlCon) => {
-                /* istanbul ignore next */
-                if (this.listenerCount('debug'))
-                    this.emit('debug', {
-                        location: 'Pool.factory.validate',
-                        pool: this,
-                        message: `[${intlCon.processID}] connection validate`,
-                    });
-                if (intlCon.state !== ConnectionState.READY)
-                    throw new Error('Connection is not active');
-                await intlCon.execute('select 1;');
-            },
-        };
-        this._pool = new LightningPool(poolFactory, poolOptions);
-        this._pool.on('return', (...args) => this.emit('release', ...args));
-        this._pool.on('error', (...args) => this.emit('error', ...args));
-        this._pool.on('acquire', (...args) => this.emit('acquire', ...args));
-        this._pool.on('destroy', (...args) => this.emit('destroy', ...args));
-        this._pool.start();
-    }
-    /**
-     * Returns number of connections that are currently acquired
-     */
-    get acquiredConnections() {
-        return this._pool.acquired;
-    }
-    /**
-     * Returns number of unused connections in the pool
-     */
-    get idleConnections() {
-        return this._pool.available;
-    }
-    /**
-     * Returns total number of connections in the pool regardless of whether they are idle or in use
-     */
-    get totalConnections() {
-        return this._pool.size;
-    }
-    /**
-     * Obtains a connection from the connection pool
-     */
-    async acquire() {
-        const intlCon = await this._pool.acquire();
-        /* istanbul ignore next */
-        if (this.listenerCount('debug'))
-            this.emit('debug', {
-                location: 'Pool.acquire',
-                pool: this,
-                message: `[${intlCon.processID}] acquired`,
-            });
-        const connection = new Connection(this, intlCon);
-        /* istanbul ignore next */
-        if (this.listenerCount('debug'))
-            connection.on('debug', (...args) => this.emit('debug', ...args));
-        return connection;
-    }
-    /**
-     * Shuts down the pool and destroys all resources.
-     */
-    async close(terminateWait) {
-        this._notificationListeners.removeAllListeners();
-        await this._notificationConnection?.close(terminateWait);
-        const ms = terminateWait == null ? 10000 : terminateWait;
-        return this._pool.closeAsync(ms);
-    }
-    /**
-     * Executes a script
-     */
-    async execute(sql, options) {
-        const connection = await this.acquire();
-        try {
-            return await connection.execute(sql, options);
-        }
-        finally {
-            await this.release(connection);
-        }
-    }
-    /**
-     * Executes a query
-     */
-    async query(sql, options) {
-        const connection = await this.acquire();
-        try {
-            return await connection.query(sql, options);
-        }
-        finally {
-            await this.release(connection);
-        }
-    }
-    async prepare(sql, options) {
-        const connection = await this.acquire();
-        const statement = await connection.prepare(sql, options);
-        statement.once('close', () => this._pool.release(getIntlConnection(connection)));
-        return statement;
-    }
-    release(connection) {
-        return this._pool.releaseAsync(getIntlConnection(connection));
-    }
-    async listen(channel, callback) {
-        if (!/^[A-Z]\w+$/i.test(channel))
-            throw new TypeError(`Invalid channel name`);
-        this._notificationListeners.on(channel, callback);
-        await this._initNotificationConnection();
-    }
-    async unListen(channel) {
-        if (!/^[A-Z]\w+$/i.test(channel))
-            throw new TypeError(`Invalid channel name`);
-        this._notificationListeners.removeAllListeners(channel);
-        if (!this._notificationListeners.eventNames().length) {
-            await this.unListenAll();
-        }
-        else if (this._notificationConnection)
-            await this._notificationConnection.unListen(channel);
-    }
-    async unListenAll() {
-        this._notificationListeners.removeAllListeners();
-        if (this._notificationConnection) {
-            const conn = this._notificationConnection;
-            this._notificationConnection = undefined;
-            await conn.close();
-        }
-    }
-    async _initNotificationConnection() {
-        if (this._notificationConnection)
-            return;
-        const conn = (this._notificationConnection = new Connection(this.config));
-        // Reconnect on connection lost
-        conn.on('close', () => reConnect());
-        const registerEvents = async () => {
-            const channels = this._notificationListeners.eventNames();
-            for (const channel of channels) {
-                const fns = this._notificationListeners.listeners(channel);
-                for (const fn of fns) {
-                    await conn.listen(channel, fn);
-                }
-            }
-        };
-        const reConnect = async () => {
-            setTimeout(() => {
-                if (!this._notificationListeners.eventNames().length)
-                    return;
-                conn.connect().catch(() => reConnect());
-            }, 500).unref();
-        };
-        await conn.connect();
-        await registerEvents();
-    }
-}
Index: node_modules/lightning-pool/esm/pool-options.d.ts
===================================================================
diff --git a/node_modules/lightning-pool/esm/pool-options.d.ts b/node_modules/lightning-pool/esm/pool-options.d.ts
deleted file mode 100644
--- a/node_modules/lightning-pool/esm/pool-options.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,42 +0,0 @@
-/// <reference types="node" />
-import { EventEmitter } from 'events';
-import { PoolConfiguration } from './definitions.js';
-import { Pool } from './pool.js';
-export declare class PoolOptions extends EventEmitter {
-    readonly pool: Pool;
-    private _acquireMaxRetries;
-    private _acquireRetryWait;
-    private _acquireTimeoutMillis;
-    private _fifo;
-    private _idleTimeoutMillis;
-    private _houseKeepInterval;
-    private _min;
-    private _minIdle;
-    private _max;
-    private _maxQueue;
-    private _validation;
-    constructor(pool: Pool);
-    get acquireMaxRetries(): number;
-    set acquireMaxRetries(val: number);
-    get acquireRetryWait(): number;
-    set acquireRetryWait(val: number);
-    get acquireTimeoutMillis(): number;
-    set acquireTimeoutMillis(val: number);
-    get fifo(): boolean;
-    set fifo(val: boolean);
-    get idleTimeoutMillis(): number;
-    set idleTimeoutMillis(val: number);
-    get houseKeepInterval(): number;
-    set houseKeepInterval(val: number);
-    get min(): number;
-    set min(val: number);
-    get minIdle(): number;
-    set minIdle(val: number);
-    get max(): number;
-    set max(val: number);
-    get maxQueue(): number;
-    set maxQueue(val: number);
-    get validation(): boolean;
-    set validation(val: boolean);
-    assign(values: PoolConfiguration | PoolOptions): void;
-}
Index: node_modules/lightning-pool/esm/pool-request.d.ts
===================================================================
diff --git a/node_modules/lightning-pool/esm/pool-request.d.ts b/node_modules/lightning-pool/esm/pool-request.d.ts
deleted file mode 100644
--- a/node_modules/lightning-pool/esm/pool-request.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,10 +0,0 @@
-import { Callback } from './definitions.js';
-import { Pool } from './pool.js';
-export declare class PoolRequest {
-    created: number;
-    callback: Callback;
-    timeoutHandle: any;
-    timedOut: boolean;
-    constructor(pool: Pool, callback?: Callback);
-    stopTimout(): void;
-}
Index: node_modules/postgresql-client/typings/connection/portal.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/connection/portal.d.ts b/node_modules/postgresql-client/typings/connection/portal.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/connection/portal.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,23 +0,0 @@
-import { QueryOptions } from '../interfaces/query-options.js';
-import { Protocol } from '../protocol/protocol.js';
-import { Maybe } from '../types.js';
-import { Connection } from './connection.js';
-import type { PreparedStatement } from './prepared-statement.js';
-export interface PortalExecuteResult {
-    code: Protocol.BackendMessageCode;
-    rows?: any[];
-    command?: string;
-    rowCount?: number;
-}
-export declare class Portal {
-    private readonly _statement;
-    private readonly _name?;
-    private _columnFormat;
-    constructor(statement: PreparedStatement, name: string);
-    get connection(): Connection;
-    get name(): Maybe<string>;
-    bind(params: Maybe<any[]>, queryOptions: QueryOptions): Promise<void>;
-    retrieveFields(): Promise<Protocol.RowDescription[]>;
-    execute(fetchCount?: number): Promise<PortalExecuteResult>;
-    close(): Promise<void>;
-}
Index: node_modules/postgresql-client/cjs/connection/portal.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/connection/portal.js b/node_modules/postgresql-client/cjs/connection/portal.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/connection/portal.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,148 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.Portal = void 0;
-const constants_js_1 = require("../constants.js");
-const data_type_map_js_1 = require("../data-type-map.js");
-const protocol_js_1 = require("../protocol/protocol.js");
-const intl_connection_js_1 = require("./intl-connection.js");
-class Portal {
-    constructor(statement, name) {
-        this._columnFormat = constants_js_1.DEFAULT_COLUMN_FORMAT;
-        this._statement = statement;
-        this._name = name;
-    }
-    get connection() {
-        return this._statement.connection;
-    }
-    get name() {
-        return this._name;
-    }
-    async bind(params, queryOptions) {
-        const intoCon = (0, intl_connection_js_1.getIntlConnection)(this.connection);
-        intoCon.ref();
-        try {
-            const socket = intoCon.socket;
-            this._columnFormat = queryOptions.columnFormat != null ? queryOptions.columnFormat : protocol_js_1.Protocol.DataFormat.binary;
-            socket.sendBindMessage({
-                typeMap: queryOptions.typeMap || data_type_map_js_1.GlobalTypeMap,
-                statement: this._statement.name,
-                portal: this.name,
-                paramTypes: this._statement.paramTypes,
-                params,
-                queryOptions,
-            });
-            socket.sendFlushMessage();
-            return await socket.capture(async (code, msg, done) => {
-                switch (code) {
-                    case protocol_js_1.Protocol.BackendMessageCode.BindComplete:
-                        done();
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.NoticeResponse:
-                        break;
-                    default:
-                        done(new Error(`Server returned unexpected response message (${String.fromCharCode(code)})`));
-                }
-            });
-        }
-        finally {
-            intoCon.unref();
-        }
-    }
-    async retrieveFields() {
-        const intoCon = (0, intl_connection_js_1.getIntlConnection)(this.connection);
-        intoCon.ref();
-        try {
-            const socket = intoCon.socket;
-            socket.sendDescribeMessage({ type: 'P', name: this.name });
-            socket.sendFlushMessage();
-            return await socket.capture(async (code, msg, done) => {
-                switch (code) {
-                    case protocol_js_1.Protocol.BackendMessageCode.NoticeResponse:
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.NoData:
-                        done();
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.RowDescription:
-                        done(undefined, msg.fields);
-                        break;
-                    default:
-                        done(new Error(`Server returned unexpected response message (${String.fromCharCode(code)})`));
-                }
-            });
-        }
-        finally {
-            intoCon.unref();
-        }
-    }
-    async execute(fetchCount) {
-        const intoCon = (0, intl_connection_js_1.getIntlConnection)(this.connection);
-        intoCon.ref();
-        try {
-            const socket = intoCon.socket;
-            socket.sendExecuteMessage({ portal: this.name, fetchCount: fetchCount || 100 });
-            socket.sendFlushMessage();
-            const rows = [];
-            return await socket.capture(async (code, msg, done) => {
-                switch (code) {
-                    case protocol_js_1.Protocol.BackendMessageCode.NoticeResponse:
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.NoData:
-                        done(undefined, { code });
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.DataRow:
-                        if (Array.isArray(this._columnFormat)) {
-                            rows.push(msg.columns.map((buf, i) => this._columnFormat[i] === protocol_js_1.Protocol.DataFormat.text ? buf.toString('utf8') : buf));
-                        }
-                        else if (this._columnFormat === protocol_js_1.Protocol.DataFormat.binary)
-                            rows.push(msg.columns);
-                        else
-                            rows.push(msg.columns.map((buf) => buf.toString('utf8')));
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.PortalSuspended:
-                        done(undefined, { code, rows });
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.CommandComplete:
-                        done(undefined, {
-                            code,
-                            rows,
-                            command: msg.command,
-                            rowCount: msg.rowCount,
-                        });
-                        break;
-                    default:
-                        done(new Error(`Server returned unexpected response message (${String.fromCharCode(code)})`));
-                }
-            });
-        }
-        finally {
-            intoCon.unref();
-        }
-    }
-    async close() {
-        const intoCon = (0, intl_connection_js_1.getIntlConnection)(this.connection);
-        intoCon.ref();
-        try {
-            const socket = intoCon.socket;
-            socket.sendCloseMessage({ type: 'P', name: this.name });
-            socket.sendSyncMessage();
-            return await socket.capture(async (code, msg, done) => {
-                switch (code) {
-                    case protocol_js_1.Protocol.BackendMessageCode.NoticeResponse:
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.CloseComplete:
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.ReadyForQuery:
-                        intoCon.transactionStatus = msg.status;
-                        done();
-                        break;
-                    default:
-                        done(new Error(`Server returned unexpected response message (${String.fromCharCode(code)})`));
-                }
-            });
-        }
-        finally {
-            intoCon.unref();
-        }
-    }
-}
-exports.Portal = Portal;
Index: node_modules/postgresql-client/esm/connection/portal.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/connection/portal.js b/node_modules/postgresql-client/esm/connection/portal.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/connection/portal.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,144 +0,0 @@
-import { DEFAULT_COLUMN_FORMAT } from '../constants.js';
-import { GlobalTypeMap } from '../data-type-map.js';
-import { Protocol } from '../protocol/protocol.js';
-import { getIntlConnection } from './intl-connection.js';
-export class Portal {
-    constructor(statement, name) {
-        this._columnFormat = DEFAULT_COLUMN_FORMAT;
-        this._statement = statement;
-        this._name = name;
-    }
-    get connection() {
-        return this._statement.connection;
-    }
-    get name() {
-        return this._name;
-    }
-    async bind(params, queryOptions) {
-        const intoCon = getIntlConnection(this.connection);
-        intoCon.ref();
-        try {
-            const socket = intoCon.socket;
-            this._columnFormat = queryOptions.columnFormat != null ? queryOptions.columnFormat : Protocol.DataFormat.binary;
-            socket.sendBindMessage({
-                typeMap: queryOptions.typeMap || GlobalTypeMap,
-                statement: this._statement.name,
-                portal: this.name,
-                paramTypes: this._statement.paramTypes,
-                params,
-                queryOptions,
-            });
-            socket.sendFlushMessage();
-            return await socket.capture(async (code, msg, done) => {
-                switch (code) {
-                    case Protocol.BackendMessageCode.BindComplete:
-                        done();
-                        break;
-                    case Protocol.BackendMessageCode.NoticeResponse:
-                        break;
-                    default:
-                        done(new Error(`Server returned unexpected response message (${String.fromCharCode(code)})`));
-                }
-            });
-        }
-        finally {
-            intoCon.unref();
-        }
-    }
-    async retrieveFields() {
-        const intoCon = getIntlConnection(this.connection);
-        intoCon.ref();
-        try {
-            const socket = intoCon.socket;
-            socket.sendDescribeMessage({ type: 'P', name: this.name });
-            socket.sendFlushMessage();
-            return await socket.capture(async (code, msg, done) => {
-                switch (code) {
-                    case Protocol.BackendMessageCode.NoticeResponse:
-                        break;
-                    case Protocol.BackendMessageCode.NoData:
-                        done();
-                        break;
-                    case Protocol.BackendMessageCode.RowDescription:
-                        done(undefined, msg.fields);
-                        break;
-                    default:
-                        done(new Error(`Server returned unexpected response message (${String.fromCharCode(code)})`));
-                }
-            });
-        }
-        finally {
-            intoCon.unref();
-        }
-    }
-    async execute(fetchCount) {
-        const intoCon = getIntlConnection(this.connection);
-        intoCon.ref();
-        try {
-            const socket = intoCon.socket;
-            socket.sendExecuteMessage({ portal: this.name, fetchCount: fetchCount || 100 });
-            socket.sendFlushMessage();
-            const rows = [];
-            return await socket.capture(async (code, msg, done) => {
-                switch (code) {
-                    case Protocol.BackendMessageCode.NoticeResponse:
-                        break;
-                    case Protocol.BackendMessageCode.NoData:
-                        done(undefined, { code });
-                        break;
-                    case Protocol.BackendMessageCode.DataRow:
-                        if (Array.isArray(this._columnFormat)) {
-                            rows.push(msg.columns.map((buf, i) => this._columnFormat[i] === Protocol.DataFormat.text ? buf.toString('utf8') : buf));
-                        }
-                        else if (this._columnFormat === Protocol.DataFormat.binary)
-                            rows.push(msg.columns);
-                        else
-                            rows.push(msg.columns.map((buf) => buf.toString('utf8')));
-                        break;
-                    case Protocol.BackendMessageCode.PortalSuspended:
-                        done(undefined, { code, rows });
-                        break;
-                    case Protocol.BackendMessageCode.CommandComplete:
-                        done(undefined, {
-                            code,
-                            rows,
-                            command: msg.command,
-                            rowCount: msg.rowCount,
-                        });
-                        break;
-                    default:
-                        done(new Error(`Server returned unexpected response message (${String.fromCharCode(code)})`));
-                }
-            });
-        }
-        finally {
-            intoCon.unref();
-        }
-    }
-    async close() {
-        const intoCon = getIntlConnection(this.connection);
-        intoCon.ref();
-        try {
-            const socket = intoCon.socket;
-            socket.sendCloseMessage({ type: 'P', name: this.name });
-            socket.sendSyncMessage();
-            return await socket.capture(async (code, msg, done) => {
-                switch (code) {
-                    case Protocol.BackendMessageCode.NoticeResponse:
-                        break;
-                    case Protocol.BackendMessageCode.CloseComplete:
-                        break;
-                    case Protocol.BackendMessageCode.ReadyForQuery:
-                        intoCon.transactionStatus = msg.status;
-                        done();
-                        break;
-                    default:
-                        done(new Error(`Server returned unexpected response message (${String.fromCharCode(code)})`));
-                }
-            });
-        }
-        finally {
-            intoCon.unref();
-        }
-    }
-}
Index: node_modules/postgresql-client/typings/connection/prepared-statement.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/connection/prepared-statement.d.ts b/node_modules/postgresql-client/typings/connection/prepared-statement.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/connection/prepared-statement.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,27 +0,0 @@
-/// <reference types="node" />
-import { QueryOptions } from '../interfaces/query-options.js';
-import { QueryResult } from '../interfaces/query-result.js';
-import { StatementPrepareOptions } from '../interfaces/statement-prepare-options.js';
-import { SafeEventEmitter } from '../safe-event-emitter.js';
-import { Maybe, OID } from '../types.js';
-import { Connection } from './connection.js';
-export declare class PreparedStatement extends SafeEventEmitter implements AsyncDisposable {
-    private readonly _connection;
-    private readonly _sql;
-    private readonly _name;
-    private readonly _paramTypes;
-    protected _onErrorSavePoint: string;
-    private _refCount;
-    constructor(connection: Connection, sql: string, paramTypes?: OID[]);
-    static prepare(connection: Connection, sql: string, options?: StatementPrepareOptions): Promise<PreparedStatement>;
-    get connection(): Connection;
-    get name(): Maybe<string>;
-    get sql(): string;
-    get paramTypes(): Maybe<Maybe<OID>[]>;
-    execute(options?: QueryOptions): Promise<QueryResult>;
-    close(): Promise<void>;
-    cancel(): Promise<void>;
-    protected _execute(options?: QueryOptions): Promise<QueryResult>;
-    protected _close(): Promise<void>;
-    [Symbol.asyncDispose](): Promise<void>;
-}
Index: node_modules/postgresql-client/cjs/connection/prepared-statement.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/connection/prepared-statement.js b/node_modules/postgresql-client/cjs/connection/prepared-statement.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/connection/prepared-statement.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,217 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.PreparedStatement = void 0;
-const putil_varhelpers_1 = require("putil-varhelpers");
-const constants_js_1 = require("../constants.js");
-const data_type_map_js_1 = require("../data-type-map.js");
-const protocol_js_1 = require("../protocol/protocol.js");
-const safe_event_emitter_js_1 = require("../safe-event-emitter.js");
-const convert_row_to_object_js_1 = require("../util/convert-row-to-object.js");
-const get_parsers_js_1 = require("../util/get-parsers.js");
-const parse_row_js_1 = require("../util/parse-row.js");
-const wrap_row_description_js_1 = require("../util/wrap-row-description.js");
-const cursor_js_1 = require("./cursor.js");
-const intl_connection_js_1 = require("./intl-connection.js");
-const portal_js_1 = require("./portal.js");
-let statementCounter = 0;
-let portalCounter = 0;
-class PreparedStatement extends safe_event_emitter_js_1.SafeEventEmitter {
-    constructor(connection, sql, paramTypes) {
-        super();
-        this._sql = '';
-        this._name = '';
-        this._refCount = 0;
-        this._connection = connection;
-        this._name = 'S_' + ++statementCounter;
-        this._sql = sql;
-        this._paramTypes = paramTypes;
-        this._onErrorSavePoint = 'SP_' + Math.round(Math.random() * 100000000);
-    }
-    static async prepare(connection, sql, options) {
-        const intoCon = (0, intl_connection_js_1.getIntlConnection)(connection);
-        intoCon.assertConnected();
-        const socket = intoCon.socket;
-        const statement = new PreparedStatement(connection, sql, options?.paramTypes);
-        await intoCon.statementQueue
-            .enqueue(async () => {
-            intoCon.ref();
-            try {
-                socket.sendParseMessage({
-                    statement: statement.name,
-                    sql: statement.sql,
-                    paramTypes: statement.paramTypes,
-                });
-                socket.sendFlushMessage();
-                try {
-                    await socket.capture(async (code, msg, done) => {
-                        if (code === protocol_js_1.Protocol.BackendMessageCode.ParseComplete)
-                            done();
-                        // May be Protocol.BackendMessageCode.NoticeResponse
-                    });
-                }
-                finally {
-                    socket.sendSyncMessage();
-                    await socket.capture(async (code, msg, done) => {
-                        if (code === protocol_js_1.Protocol.BackendMessageCode.ReadyForQuery)
-                            done();
-                        // May be Protocol.BackendMessageCode.NoticeResponse
-                    });
-                }
-            }
-            finally {
-                intoCon.unref();
-            }
-        })
-            .toPromise();
-        statement._refCount = 1;
-        return statement;
-    }
-    get connection() {
-        return this._connection;
-    }
-    get name() {
-        return this._name;
-    }
-    get sql() {
-        return this._sql;
-    }
-    get paramTypes() {
-        return this._paramTypes;
-    }
-    async execute(options = {}) {
-        const intlCon = (0, intl_connection_js_1.getIntlConnection)(this.connection);
-        const transactionCommand = this.sql.match(/^(\bBEGIN\b|\bCOMMIT\b|\bSTART\b|\bROLLBACK|SAVEPOINT|RELEASE\b)/i);
-        let beginFirst = false;
-        let commitLast = false;
-        if (!transactionCommand) {
-            if (!intlCon.inTransaction &&
-                (options?.autoCommit != null ? options?.autoCommit : intlCon.config.autoCommit) === false) {
-                beginFirst = true;
-            }
-            if (intlCon.inTransaction && options?.autoCommit)
-                commitLast = true;
-        }
-        if (beginFirst)
-            await intlCon.execute('BEGIN');
-        const rollbackOnError = !transactionCommand &&
-            (options?.rollbackOnError != null
-                ? options.rollbackOnError
-                : (0, putil_varhelpers_1.coerceToBoolean)(intlCon.config.rollbackOnError, true));
-        if (intlCon.inTransaction && rollbackOnError)
-            await intlCon.execute('SAVEPOINT ' + this._onErrorSavePoint);
-        try {
-            const result = await intlCon.statementQueue.enqueue(() => this._execute(options)).toPromise();
-            if (commitLast)
-                await intlCon.execute('COMMIT');
-            else if (intlCon.inTransaction && rollbackOnError)
-                await intlCon.execute('RELEASE ' + this._onErrorSavePoint + ';');
-            return result;
-        }
-        catch (e) {
-            if (intlCon.inTransaction && rollbackOnError)
-                await intlCon.execute('ROLLBACK TO ' + this._onErrorSavePoint + ';');
-            throw e;
-        }
-    }
-    async close() {
-        --this._refCount;
-        if (this._refCount > 0)
-            return;
-        const intoCon = (0, intl_connection_js_1.getIntlConnection)(this.connection);
-        await intoCon.statementQueue.enqueue(() => this._close()).toPromise();
-    }
-    async cancel() {
-        throw new Error('Not implemented yet');
-    }
-    async _execute(options = {}) {
-        let portal;
-        const intlCon = (0, intl_connection_js_1.getIntlConnection)(this.connection);
-        intlCon.ref();
-        try {
-            const result = { command: undefined };
-            const startTime = Date.now();
-            const t = Date.now();
-            // Create portal
-            const portalName = 'P_' + ++portalCounter;
-            portal = new portal_js_1.Portal(this, portalName);
-            await portal.bind(options.params, options);
-            const fields = await portal.retrieveFields();
-            const typeMap = options.typeMap || data_type_map_js_1.GlobalTypeMap;
-            let parsers;
-            let resultFields;
-            if (fields) {
-                parsers = (0, get_parsers_js_1.getParsers)(typeMap, fields);
-                resultFields = (0, wrap_row_description_js_1.wrapRowDescription)(typeMap, fields, options.columnFormat || constants_js_1.DEFAULT_COLUMN_FORMAT);
-                result.fields = resultFields;
-                result.rowType = options.objectRows ? 'object' : 'array';
-                if (options.cursor) {
-                    result.cursor = new cursor_js_1.Cursor(this, portal, resultFields, parsers, options);
-                    this._refCount++;
-                    portal = undefined;
-                    return result;
-                }
-            }
-            const executeResult = await portal.execute(options.fetchCount);
-            result.executeTime = Date.now() - t;
-            if (executeResult.command)
-                result.command = executeResult.command;
-            if (resultFields && parsers && executeResult.rows) {
-                if (!result.command)
-                    result.command = 'SELECT';
-                const rows = (result.rows = executeResult.rows);
-                const l = rows.length;
-                let row;
-                for (let i = 0; i < l; i++) {
-                    row = rows[i];
-                    (0, parse_row_js_1.parseRow)(parsers, row, options);
-                    if (options.objectRows) {
-                        rows[i] = (0, convert_row_to_object_js_1.convertRowToObject)(resultFields, row);
-                    }
-                }
-            }
-            if (result.command === 'DELETE' || result.command === 'INSERT' || result.command === 'UPDATE')
-                result.rowsAffected = executeResult.rowCount;
-            result.executeTime = Date.now() - startTime;
-            return result;
-        }
-        finally {
-            intlCon.unref();
-            if (portal)
-                await portal.close();
-        }
-    }
-    async _close() {
-        if (--this._refCount > 0)
-            return;
-        const intoCon = (0, intl_connection_js_1.getIntlConnection)(this.connection);
-        intoCon.ref();
-        try {
-            const socket = intoCon.socket;
-            socket.sendCloseMessage({ type: 'S', name: this.name });
-            socket.sendSyncMessage();
-            await socket.capture(async (code, msg, done) => {
-                switch (code) {
-                    case protocol_js_1.Protocol.BackendMessageCode.NoticeResponse:
-                        this.emit('notice', msg);
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.CloseComplete:
-                        break;
-                    case protocol_js_1.Protocol.BackendMessageCode.ReadyForQuery:
-                        intoCon.transactionStatus = msg.status;
-                        done();
-                        break;
-                    default:
-                        done(new Error(`Server returned unexpected response message (0x${code.toString(16)})`));
-                }
-            });
-        }
-        finally {
-            intoCon.unref();
-        }
-        this.emit('close');
-    }
-    [Symbol.asyncDispose]() {
-        return this.close();
-    }
-}
-exports.PreparedStatement = PreparedStatement;
Index: node_modules/postgresql-client/esm/connection/prepared-statement.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/connection/prepared-statement.js b/node_modules/postgresql-client/esm/connection/prepared-statement.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/connection/prepared-statement.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,213 +0,0 @@
-import { coerceToBoolean } from 'putil-varhelpers';
-import { DEFAULT_COLUMN_FORMAT } from '../constants.js';
-import { GlobalTypeMap } from '../data-type-map.js';
-import { Protocol } from '../protocol/protocol.js';
-import { SafeEventEmitter } from '../safe-event-emitter.js';
-import { convertRowToObject } from '../util/convert-row-to-object.js';
-import { getParsers } from '../util/get-parsers.js';
-import { parseRow } from '../util/parse-row.js';
-import { wrapRowDescription } from '../util/wrap-row-description.js';
-import { Cursor } from './cursor.js';
-import { getIntlConnection } from './intl-connection.js';
-import { Portal } from './portal.js';
-let statementCounter = 0;
-let portalCounter = 0;
-export class PreparedStatement extends SafeEventEmitter {
-    constructor(connection, sql, paramTypes) {
-        super();
-        this._sql = '';
-        this._name = '';
-        this._refCount = 0;
-        this._connection = connection;
-        this._name = 'S_' + ++statementCounter;
-        this._sql = sql;
-        this._paramTypes = paramTypes;
-        this._onErrorSavePoint = 'SP_' + Math.round(Math.random() * 100000000);
-    }
-    static async prepare(connection, sql, options) {
-        const intoCon = getIntlConnection(connection);
-        intoCon.assertConnected();
-        const socket = intoCon.socket;
-        const statement = new PreparedStatement(connection, sql, options?.paramTypes);
-        await intoCon.statementQueue
-            .enqueue(async () => {
-            intoCon.ref();
-            try {
-                socket.sendParseMessage({
-                    statement: statement.name,
-                    sql: statement.sql,
-                    paramTypes: statement.paramTypes,
-                });
-                socket.sendFlushMessage();
-                try {
-                    await socket.capture(async (code, msg, done) => {
-                        if (code === Protocol.BackendMessageCode.ParseComplete)
-                            done();
-                        // May be Protocol.BackendMessageCode.NoticeResponse
-                    });
-                }
-                finally {
-                    socket.sendSyncMessage();
-                    await socket.capture(async (code, msg, done) => {
-                        if (code === Protocol.BackendMessageCode.ReadyForQuery)
-                            done();
-                        // May be Protocol.BackendMessageCode.NoticeResponse
-                    });
-                }
-            }
-            finally {
-                intoCon.unref();
-            }
-        })
-            .toPromise();
-        statement._refCount = 1;
-        return statement;
-    }
-    get connection() {
-        return this._connection;
-    }
-    get name() {
-        return this._name;
-    }
-    get sql() {
-        return this._sql;
-    }
-    get paramTypes() {
-        return this._paramTypes;
-    }
-    async execute(options = {}) {
-        const intlCon = getIntlConnection(this.connection);
-        const transactionCommand = this.sql.match(/^(\bBEGIN\b|\bCOMMIT\b|\bSTART\b|\bROLLBACK|SAVEPOINT|RELEASE\b)/i);
-        let beginFirst = false;
-        let commitLast = false;
-        if (!transactionCommand) {
-            if (!intlCon.inTransaction &&
-                (options?.autoCommit != null ? options?.autoCommit : intlCon.config.autoCommit) === false) {
-                beginFirst = true;
-            }
-            if (intlCon.inTransaction && options?.autoCommit)
-                commitLast = true;
-        }
-        if (beginFirst)
-            await intlCon.execute('BEGIN');
-        const rollbackOnError = !transactionCommand &&
-            (options?.rollbackOnError != null
-                ? options.rollbackOnError
-                : coerceToBoolean(intlCon.config.rollbackOnError, true));
-        if (intlCon.inTransaction && rollbackOnError)
-            await intlCon.execute('SAVEPOINT ' + this._onErrorSavePoint);
-        try {
-            const result = await intlCon.statementQueue.enqueue(() => this._execute(options)).toPromise();
-            if (commitLast)
-                await intlCon.execute('COMMIT');
-            else if (intlCon.inTransaction && rollbackOnError)
-                await intlCon.execute('RELEASE ' + this._onErrorSavePoint + ';');
-            return result;
-        }
-        catch (e) {
-            if (intlCon.inTransaction && rollbackOnError)
-                await intlCon.execute('ROLLBACK TO ' + this._onErrorSavePoint + ';');
-            throw e;
-        }
-    }
-    async close() {
-        --this._refCount;
-        if (this._refCount > 0)
-            return;
-        const intoCon = getIntlConnection(this.connection);
-        await intoCon.statementQueue.enqueue(() => this._close()).toPromise();
-    }
-    async cancel() {
-        throw new Error('Not implemented yet');
-    }
-    async _execute(options = {}) {
-        let portal;
-        const intlCon = getIntlConnection(this.connection);
-        intlCon.ref();
-        try {
-            const result = { command: undefined };
-            const startTime = Date.now();
-            const t = Date.now();
-            // Create portal
-            const portalName = 'P_' + ++portalCounter;
-            portal = new Portal(this, portalName);
-            await portal.bind(options.params, options);
-            const fields = await portal.retrieveFields();
-            const typeMap = options.typeMap || GlobalTypeMap;
-            let parsers;
-            let resultFields;
-            if (fields) {
-                parsers = getParsers(typeMap, fields);
-                resultFields = wrapRowDescription(typeMap, fields, options.columnFormat || DEFAULT_COLUMN_FORMAT);
-                result.fields = resultFields;
-                result.rowType = options.objectRows ? 'object' : 'array';
-                if (options.cursor) {
-                    result.cursor = new Cursor(this, portal, resultFields, parsers, options);
-                    this._refCount++;
-                    portal = undefined;
-                    return result;
-                }
-            }
-            const executeResult = await portal.execute(options.fetchCount);
-            result.executeTime = Date.now() - t;
-            if (executeResult.command)
-                result.command = executeResult.command;
-            if (resultFields && parsers && executeResult.rows) {
-                if (!result.command)
-                    result.command = 'SELECT';
-                const rows = (result.rows = executeResult.rows);
-                const l = rows.length;
-                let row;
-                for (let i = 0; i < l; i++) {
-                    row = rows[i];
-                    parseRow(parsers, row, options);
-                    if (options.objectRows) {
-                        rows[i] = convertRowToObject(resultFields, row);
-                    }
-                }
-            }
-            if (result.command === 'DELETE' || result.command === 'INSERT' || result.command === 'UPDATE')
-                result.rowsAffected = executeResult.rowCount;
-            result.executeTime = Date.now() - startTime;
-            return result;
-        }
-        finally {
-            intlCon.unref();
-            if (portal)
-                await portal.close();
-        }
-    }
-    async _close() {
-        if (--this._refCount > 0)
-            return;
-        const intoCon = getIntlConnection(this.connection);
-        intoCon.ref();
-        try {
-            const socket = intoCon.socket;
-            socket.sendCloseMessage({ type: 'S', name: this.name });
-            socket.sendSyncMessage();
-            await socket.capture(async (code, msg, done) => {
-                switch (code) {
-                    case Protocol.BackendMessageCode.NoticeResponse:
-                        this.emit('notice', msg);
-                        break;
-                    case Protocol.BackendMessageCode.CloseComplete:
-                        break;
-                    case Protocol.BackendMessageCode.ReadyForQuery:
-                        intoCon.transactionStatus = msg.status;
-                        done();
-                        break;
-                    default:
-                        done(new Error(`Server returned unexpected response message (0x${code.toString(16)})`));
-                }
-            });
-        }
-        finally {
-            intoCon.unref();
-        }
-        this.emit('close');
-    }
-    [Symbol.asyncDispose]() {
-        return this.close();
-    }
-}
Index: node_modules/postgresql-client/typings/protocol/protocol.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/protocol/protocol.d.ts b/node_modules/postgresql-client/typings/protocol/protocol.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/protocol/protocol.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,180 +0,0 @@
-/// <reference types="node" />
-import { Nullable } from '../types.js';
-export declare namespace Protocol {
-    const VERSION_MAJOR = 3;
-    const VERSION_MINOR = 0;
-    enum BackendMessageCode {
-        Authentication = 82,// R
-        BackendKeyData = 75,// K
-        BindComplete = 50,// 2
-        CloseComplete = 51,// 3
-        CommandComplete = 67,// C
-        CopyData = 100,// d
-        CopyDone = 99,// c
-        CopyInResponse = 103,// G
-        CopyOutResponse = 72,// H
-        CopyBothResponse = 87,// W
-        DataRow = 68,// D
-        EmptyQueryResponse = 73,// I
-        ErrorResponse = 69,// E
-        FunctionCallResponse = 86,// V
-        NegotiateProtocolVersion = 118,// v
-        NoData = 110,// n
-        NoticeResponse = 78,// N
-        NotificationResponse = 65,// A
-        ParameterDescription = 116,// t
-        ParameterStatus = 83,// S
-        ParseComplete = 49,// 1
-        PortalSuspended = 115,// s
-        ReadyForQuery = 90,// Z
-        RowDescription = 84
-    }
-    enum FrontendMessageCode {
-        Bind = 66,// R
-        Close = 67,// C
-        CopyData = 100,// d
-        CopyDone = 99,// c
-        CopyFail = 102,// f
-        Describe = 68,// D
-        Execute = 69,// E
-        Flush = 72,// H
-        FunctionCall = 70,// F
-        Parse = 80,// P
-        PasswordMessage = 112,// p
-        Query = 81,// Q
-        Sync = 83,// S
-        Terminate = 88
-    }
-    enum AuthenticationMessageKind {
-        KerberosV5 = "KerberosV5",
-        CleartextPassword = "CleartextPassword",
-        MD5Password = "MD5Password",
-        SCMCredential = "SCMCredential",
-        GSS = "GSS",
-        SSPI = "SSPI",
-        GSSContinue = "GSSContinue",
-        SASL = "SASL",
-        SASLContinue = "SASLContinue",
-        SASLFinal = "SASLFinal"
-    }
-    enum DataFormat {
-        text = 0,
-        binary = 1
-    }
-    interface AuthenticationRequiredMessage {
-        kind: AuthenticationMessageKind;
-    }
-    interface AuthenticationKerberosV5Message extends AuthenticationRequiredMessage {
-        kind: AuthenticationMessageKind.KerberosV5;
-    }
-    interface AuthenticationCleartextPasswordMessage extends AuthenticationRequiredMessage {
-        kind: AuthenticationMessageKind.CleartextPassword;
-    }
-    interface AuthenticationMD5PasswordMessage extends AuthenticationRequiredMessage {
-        kind: AuthenticationMessageKind.MD5Password;
-        salt: Buffer;
-    }
-    interface AuthenticationSCMCredentialMessage extends AuthenticationRequiredMessage {
-        kind: AuthenticationMessageKind.SCMCredential;
-    }
-    interface AuthenticationGSSMessage extends AuthenticationRequiredMessage {
-        kind: AuthenticationMessageKind.GSS;
-    }
-    interface AuthenticationSSPIMessage extends AuthenticationRequiredMessage {
-        kind: AuthenticationMessageKind.SSPI;
-    }
-    interface AuthenticationGSSContinueMessage extends AuthenticationRequiredMessage {
-        kind: AuthenticationMessageKind.GSSContinue;
-        data: Buffer;
-    }
-    interface AuthenticationSASLMessage extends AuthenticationRequiredMessage {
-        kind: AuthenticationMessageKind.SASL;
-        mechanisms: string[];
-    }
-    interface AuthenticationSASLContinueMessage extends AuthenticationRequiredMessage {
-        kind: AuthenticationMessageKind.SASLContinue;
-        data: string;
-    }
-    interface AuthenticationSASLFinalMessage extends AuthenticationRequiredMessage {
-        kind: AuthenticationMessageKind.SASLFinal;
-        data: string;
-    }
-    interface BackendKeyDataMessage {
-        processID: number;
-        secretKey: number;
-    }
-    interface CommandCompleteMessage {
-        command: string;
-        oid?: number;
-        rowCount?: number;
-    }
-    interface CopyDataMessage {
-        data: Buffer;
-    }
-    interface CopyResponseMessage {
-        overallFormat: DataFormat;
-        columnCount: number;
-        columnFormats?: DataFormat[];
-    }
-    interface DataRow {
-    }
-    interface DataRowMessage {
-        columnCount: number;
-        columns: Nullable<Buffer>[];
-    }
-    interface ErrorResponseMessage {
-        severity?: string;
-        code?: string;
-        message?: string;
-        detail?: string;
-        hint?: string;
-        position?: string;
-        internalPosition?: string;
-        internalQuery?: string;
-        where?: string;
-        schema?: string;
-        table?: string;
-        column?: string;
-        dataType?: string;
-        constraint?: string;
-        file?: string;
-        line?: string;
-        routine?: string;
-    }
-    interface NotificationResponseMessage {
-        processId: number;
-        channel: string;
-        payload: string;
-    }
-    interface FunctionCallResponseMessage {
-        result: Buffer;
-    }
-    interface NegotiateProtocolVersionMessage {
-        supportedVersionMinor: number;
-        numberOfNotSupportedVersions: number;
-        option: string;
-    }
-    interface ParameterDescriptionMessage {
-        parameterCount: number;
-        parameterIds: number[];
-    }
-    interface ParameterStatusMessage {
-        name: string;
-        value: string;
-    }
-    interface ReadyForQueryMessage {
-        status: string;
-    }
-    interface RowDescription {
-        fieldName: string;
-        tableId: number;
-        columnId: number;
-        dataTypeId: number;
-        fixedSize?: number;
-        modifier?: number;
-        format: DataFormat;
-    }
-    interface RowDescriptionMessage {
-        fields: RowDescription[];
-    }
-}
Index: node_modules/postgresql-client/cjs/protocol/protocol.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/protocol/protocol.js b/node_modules/postgresql-client/cjs/protocol/protocol.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/protocol/protocol.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,71 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.Protocol = void 0;
-var Protocol;
-(function (Protocol) {
-    Protocol.VERSION_MAJOR = 3;
-    Protocol.VERSION_MINOR = 0;
-    // https://www.postgresql.org/docs/9.3/protocol-message-formats.html
-    let BackendMessageCode;
-    (function (BackendMessageCode) {
-        BackendMessageCode[BackendMessageCode["Authentication"] = 82] = "Authentication";
-        BackendMessageCode[BackendMessageCode["BackendKeyData"] = 75] = "BackendKeyData";
-        BackendMessageCode[BackendMessageCode["BindComplete"] = 50] = "BindComplete";
-        BackendMessageCode[BackendMessageCode["CloseComplete"] = 51] = "CloseComplete";
-        BackendMessageCode[BackendMessageCode["CommandComplete"] = 67] = "CommandComplete";
-        BackendMessageCode[BackendMessageCode["CopyData"] = 100] = "CopyData";
-        BackendMessageCode[BackendMessageCode["CopyDone"] = 99] = "CopyDone";
-        BackendMessageCode[BackendMessageCode["CopyInResponse"] = 103] = "CopyInResponse";
-        BackendMessageCode[BackendMessageCode["CopyOutResponse"] = 72] = "CopyOutResponse";
-        BackendMessageCode[BackendMessageCode["CopyBothResponse"] = 87] = "CopyBothResponse";
-        BackendMessageCode[BackendMessageCode["DataRow"] = 68] = "DataRow";
-        BackendMessageCode[BackendMessageCode["EmptyQueryResponse"] = 73] = "EmptyQueryResponse";
-        BackendMessageCode[BackendMessageCode["ErrorResponse"] = 69] = "ErrorResponse";
-        BackendMessageCode[BackendMessageCode["FunctionCallResponse"] = 86] = "FunctionCallResponse";
-        BackendMessageCode[BackendMessageCode["NegotiateProtocolVersion"] = 118] = "NegotiateProtocolVersion";
-        BackendMessageCode[BackendMessageCode["NoData"] = 110] = "NoData";
-        BackendMessageCode[BackendMessageCode["NoticeResponse"] = 78] = "NoticeResponse";
-        BackendMessageCode[BackendMessageCode["NotificationResponse"] = 65] = "NotificationResponse";
-        BackendMessageCode[BackendMessageCode["ParameterDescription"] = 116] = "ParameterDescription";
-        BackendMessageCode[BackendMessageCode["ParameterStatus"] = 83] = "ParameterStatus";
-        BackendMessageCode[BackendMessageCode["ParseComplete"] = 49] = "ParseComplete";
-        BackendMessageCode[BackendMessageCode["PortalSuspended"] = 115] = "PortalSuspended";
-        BackendMessageCode[BackendMessageCode["ReadyForQuery"] = 90] = "ReadyForQuery";
-        BackendMessageCode[BackendMessageCode["RowDescription"] = 84] = "RowDescription";
-    })(BackendMessageCode = Protocol.BackendMessageCode || (Protocol.BackendMessageCode = {}));
-    let FrontendMessageCode;
-    (function (FrontendMessageCode) {
-        FrontendMessageCode[FrontendMessageCode["Bind"] = 66] = "Bind";
-        FrontendMessageCode[FrontendMessageCode["Close"] = 67] = "Close";
-        FrontendMessageCode[FrontendMessageCode["CopyData"] = 100] = "CopyData";
-        FrontendMessageCode[FrontendMessageCode["CopyDone"] = 99] = "CopyDone";
-        FrontendMessageCode[FrontendMessageCode["CopyFail"] = 102] = "CopyFail";
-        FrontendMessageCode[FrontendMessageCode["Describe"] = 68] = "Describe";
-        FrontendMessageCode[FrontendMessageCode["Execute"] = 69] = "Execute";
-        FrontendMessageCode[FrontendMessageCode["Flush"] = 72] = "Flush";
-        FrontendMessageCode[FrontendMessageCode["FunctionCall"] = 70] = "FunctionCall";
-        FrontendMessageCode[FrontendMessageCode["Parse"] = 80] = "Parse";
-        FrontendMessageCode[FrontendMessageCode["PasswordMessage"] = 112] = "PasswordMessage";
-        FrontendMessageCode[FrontendMessageCode["Query"] = 81] = "Query";
-        FrontendMessageCode[FrontendMessageCode["Sync"] = 83] = "Sync";
-        FrontendMessageCode[FrontendMessageCode["Terminate"] = 88] = "Terminate";
-    })(FrontendMessageCode = Protocol.FrontendMessageCode || (Protocol.FrontendMessageCode = {}));
-    let AuthenticationMessageKind;
-    (function (AuthenticationMessageKind) {
-        AuthenticationMessageKind["KerberosV5"] = "KerberosV5";
-        AuthenticationMessageKind["CleartextPassword"] = "CleartextPassword";
-        AuthenticationMessageKind["MD5Password"] = "MD5Password";
-        AuthenticationMessageKind["SCMCredential"] = "SCMCredential";
-        AuthenticationMessageKind["GSS"] = "GSS";
-        AuthenticationMessageKind["SSPI"] = "SSPI";
-        AuthenticationMessageKind["GSSContinue"] = "GSSContinue";
-        AuthenticationMessageKind["SASL"] = "SASL";
-        AuthenticationMessageKind["SASLContinue"] = "SASLContinue";
-        AuthenticationMessageKind["SASLFinal"] = "SASLFinal";
-    })(AuthenticationMessageKind = Protocol.AuthenticationMessageKind || (Protocol.AuthenticationMessageKind = {}));
-    let DataFormat;
-    (function (DataFormat) {
-        DataFormat[DataFormat["text"] = 0] = "text";
-        DataFormat[DataFormat["binary"] = 1] = "binary";
-    })(DataFormat = Protocol.DataFormat || (Protocol.DataFormat = {}));
-})(Protocol || (exports.Protocol = Protocol = {}));
Index: node_modules/postgresql-client/esm/protocol/protocol.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/protocol/protocol.js b/node_modules/postgresql-client/esm/protocol/protocol.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/protocol/protocol.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,68 +0,0 @@
-export var Protocol;
-(function (Protocol) {
-    Protocol.VERSION_MAJOR = 3;
-    Protocol.VERSION_MINOR = 0;
-    // https://www.postgresql.org/docs/9.3/protocol-message-formats.html
-    let BackendMessageCode;
-    (function (BackendMessageCode) {
-        BackendMessageCode[BackendMessageCode["Authentication"] = 82] = "Authentication";
-        BackendMessageCode[BackendMessageCode["BackendKeyData"] = 75] = "BackendKeyData";
-        BackendMessageCode[BackendMessageCode["BindComplete"] = 50] = "BindComplete";
-        BackendMessageCode[BackendMessageCode["CloseComplete"] = 51] = "CloseComplete";
-        BackendMessageCode[BackendMessageCode["CommandComplete"] = 67] = "CommandComplete";
-        BackendMessageCode[BackendMessageCode["CopyData"] = 100] = "CopyData";
-        BackendMessageCode[BackendMessageCode["CopyDone"] = 99] = "CopyDone";
-        BackendMessageCode[BackendMessageCode["CopyInResponse"] = 103] = "CopyInResponse";
-        BackendMessageCode[BackendMessageCode["CopyOutResponse"] = 72] = "CopyOutResponse";
-        BackendMessageCode[BackendMessageCode["CopyBothResponse"] = 87] = "CopyBothResponse";
-        BackendMessageCode[BackendMessageCode["DataRow"] = 68] = "DataRow";
-        BackendMessageCode[BackendMessageCode["EmptyQueryResponse"] = 73] = "EmptyQueryResponse";
-        BackendMessageCode[BackendMessageCode["ErrorResponse"] = 69] = "ErrorResponse";
-        BackendMessageCode[BackendMessageCode["FunctionCallResponse"] = 86] = "FunctionCallResponse";
-        BackendMessageCode[BackendMessageCode["NegotiateProtocolVersion"] = 118] = "NegotiateProtocolVersion";
-        BackendMessageCode[BackendMessageCode["NoData"] = 110] = "NoData";
-        BackendMessageCode[BackendMessageCode["NoticeResponse"] = 78] = "NoticeResponse";
-        BackendMessageCode[BackendMessageCode["NotificationResponse"] = 65] = "NotificationResponse";
-        BackendMessageCode[BackendMessageCode["ParameterDescription"] = 116] = "ParameterDescription";
-        BackendMessageCode[BackendMessageCode["ParameterStatus"] = 83] = "ParameterStatus";
-        BackendMessageCode[BackendMessageCode["ParseComplete"] = 49] = "ParseComplete";
-        BackendMessageCode[BackendMessageCode["PortalSuspended"] = 115] = "PortalSuspended";
-        BackendMessageCode[BackendMessageCode["ReadyForQuery"] = 90] = "ReadyForQuery";
-        BackendMessageCode[BackendMessageCode["RowDescription"] = 84] = "RowDescription";
-    })(BackendMessageCode = Protocol.BackendMessageCode || (Protocol.BackendMessageCode = {}));
-    let FrontendMessageCode;
-    (function (FrontendMessageCode) {
-        FrontendMessageCode[FrontendMessageCode["Bind"] = 66] = "Bind";
-        FrontendMessageCode[FrontendMessageCode["Close"] = 67] = "Close";
-        FrontendMessageCode[FrontendMessageCode["CopyData"] = 100] = "CopyData";
-        FrontendMessageCode[FrontendMessageCode["CopyDone"] = 99] = "CopyDone";
-        FrontendMessageCode[FrontendMessageCode["CopyFail"] = 102] = "CopyFail";
-        FrontendMessageCode[FrontendMessageCode["Describe"] = 68] = "Describe";
-        FrontendMessageCode[FrontendMessageCode["Execute"] = 69] = "Execute";
-        FrontendMessageCode[FrontendMessageCode["Flush"] = 72] = "Flush";
-        FrontendMessageCode[FrontendMessageCode["FunctionCall"] = 70] = "FunctionCall";
-        FrontendMessageCode[FrontendMessageCode["Parse"] = 80] = "Parse";
-        FrontendMessageCode[FrontendMessageCode["PasswordMessage"] = 112] = "PasswordMessage";
-        FrontendMessageCode[FrontendMessageCode["Query"] = 81] = "Query";
-        FrontendMessageCode[FrontendMessageCode["Sync"] = 83] = "Sync";
-        FrontendMessageCode[FrontendMessageCode["Terminate"] = 88] = "Terminate";
-    })(FrontendMessageCode = Protocol.FrontendMessageCode || (Protocol.FrontendMessageCode = {}));
-    let AuthenticationMessageKind;
-    (function (AuthenticationMessageKind) {
-        AuthenticationMessageKind["KerberosV5"] = "KerberosV5";
-        AuthenticationMessageKind["CleartextPassword"] = "CleartextPassword";
-        AuthenticationMessageKind["MD5Password"] = "MD5Password";
-        AuthenticationMessageKind["SCMCredential"] = "SCMCredential";
-        AuthenticationMessageKind["GSS"] = "GSS";
-        AuthenticationMessageKind["SSPI"] = "SSPI";
-        AuthenticationMessageKind["GSSContinue"] = "GSSContinue";
-        AuthenticationMessageKind["SASL"] = "SASL";
-        AuthenticationMessageKind["SASLContinue"] = "SASLContinue";
-        AuthenticationMessageKind["SASLFinal"] = "SASLFinal";
-    })(AuthenticationMessageKind = Protocol.AuthenticationMessageKind || (Protocol.AuthenticationMessageKind = {}));
-    let DataFormat;
-    (function (DataFormat) {
-        DataFormat[DataFormat["text"] = 0] = "text";
-        DataFormat[DataFormat["binary"] = 1] = "binary";
-    })(DataFormat = Protocol.DataFormat || (Protocol.DataFormat = {}));
-})(Protocol || (Protocol = {}));
Index: node_modules/postgresql-client/typings/interfaces/query-options.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/interfaces/query-options.d.ts b/node_modules/postgresql-client/typings/interfaces/query-options.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/interfaces/query-options.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,46 +0,0 @@
-import type { BindParam } from '../connection/bind-param';
-import type { DataFormat } from '../constants.js';
-import type { DataTypeMap } from '../data-type-map';
-import type { DataMappingOptions } from './data-mapping-options.js';
-export interface QueryOptions extends DataMappingOptions {
-    /**
-     * Specifies weather execute query in auto-commit mode
-     * @default true
-     */
-    autoCommit?: boolean;
-    /**
-     * Specifies if rows will be fetched as <FieldName, Value> pair objects or array of values
-     * @default false
-     */
-    objectRows?: boolean;
-    /**
-     * Data type map instance
-     * @default GlobalTypeMap
-     */
-    typeMap?: DataTypeMap;
-    /**
-     * If true, returns Cursor instance instead of rows
-     */
-    cursor?: boolean;
-    /**
-     * Query execution parameters
-     */
-    params?: (BindParam | any)[];
-    /**
-     * Specifies transfer format (binary or text) for each column
-     * @default DataFormat.binary
-     */
-    columnFormat?: DataFormat | DataFormat[];
-    /**
-     * Specifies how many rows will be fetched. For Cursor, this value specifies how many rows will be fetched in a batch
-     * @default 100
-     */
-    fetchCount?: number;
-    /**
-     * When on, if a statement in a transaction block generates an error,
-     * the error is ignored and the transaction continues.
-     * When off (the default), a statement in a transaction block that generates an error aborts the entire transaction
-     * @default true
-     */
-    rollbackOnError?: boolean;
-}
Index: node_modules/postgresql-client/cjs/interfaces/query-options.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/interfaces/query-options.js b/node_modules/postgresql-client/cjs/interfaces/query-options.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/interfaces/query-options.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,2 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
Index: node_modules/postgresql-client/esm/interfaces/query-options.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/interfaces/query-options.js b/node_modules/postgresql-client/esm/interfaces/query-options.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/interfaces/query-options.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,1 +0,0 @@
-export {};
Index: node_modules/postgresql-client/typings/interfaces/query-result.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/interfaces/query-result.d.ts b/node_modules/postgresql-client/typings/interfaces/query-result.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/interfaces/query-result.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,8 +0,0 @@
-import type { Cursor } from '../connection/cursor';
-import type { CommandResult } from './command-result.js';
-export interface QueryResult extends CommandResult {
-    /**
-     * Cursor instance
-     */
-    cursor?: Cursor;
-}
Index: node_modules/postgresql-client/cjs/interfaces/query-result.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/interfaces/query-result.js b/node_modules/postgresql-client/cjs/interfaces/query-result.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/interfaces/query-result.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,2 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
Index: node_modules/postgresql-client/esm/interfaces/query-result.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/interfaces/query-result.js b/node_modules/postgresql-client/esm/interfaces/query-result.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/interfaces/query-result.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,1 +0,0 @@
-export {};
Index: node_modules/abbrev/README.md
===================================================================
diff --git a/node_modules/abbrev/README.md b/node_modules/abbrev/README.md
deleted file mode 100644
--- a/node_modules/abbrev/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,23 +0,0 @@
-# abbrev-js
-
-Just like [ruby's Abbrev](http://apidock.com/ruby/Abbrev).
-
-Usage:
-
-    var abbrev = require("abbrev");
-    abbrev("foo", "fool", "folding", "flop");
-    
-    // returns:
-    { fl: 'flop'
-    , flo: 'flop'
-    , flop: 'flop'
-    , fol: 'folding'
-    , fold: 'folding'
-    , foldi: 'folding'
-    , foldin: 'folding'
-    , folding: 'folding'
-    , foo: 'foo'
-    , fool: 'fool'
-    }
-
-This is handy for command-line scripts, or other cases where you want to be able to accept shorthands.
Index: node_modules/call-bind/README.md
===================================================================
diff --git a/node_modules/call-bind/README.md b/node_modules/call-bind/README.md
deleted file mode 100644
--- a/node_modules/call-bind/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,64 +0,0 @@
-# call-bind <sup>[![Version Badge][npm-version-svg]][package-url]</sup>
-
-[![github actions][actions-image]][actions-url]
-[![coverage][codecov-image]][codecov-url]
-[![dependency status][deps-svg]][deps-url]
-[![dev dependency status][dev-deps-svg]][dev-deps-url]
-[![License][license-image]][license-url]
-[![Downloads][downloads-image]][downloads-url]
-
-[![npm badge][npm-badge-png]][package-url]
-
-Robustly `.call.bind()` a function.
-
-## Getting started
-
-```sh
-npm install --save call-bind
-```
-
-## Usage/Examples
-
-```js
-const assert = require('assert');
-const callBind = require('call-bind');
-const callBound = require('call-bind/callBound');
-
-function f(a, b) {
-	assert.equal(this, 1);
-	assert.equal(a, 2);
-	assert.equal(b, 3);
-	assert.equal(arguments.length, 2);
-}
-
-const fBound = callBind(f);
-
-const slice = callBound('Array.prototype.slice');
-
-delete Function.prototype.call;
-delete Function.prototype.bind;
-
-fBound(1, 2, 3);
-
-assert.deepEqual(slice([1, 2, 3, 4], 1, -1), [2, 3]);
-```
-
-## Tests
-
-Clone the repo, `npm install`, and run `npm test`
-
-[package-url]: https://npmjs.org/package/call-bind
-[npm-version-svg]: https://versionbadg.es/ljharb/call-bind.svg
-[deps-svg]: https://david-dm.org/ljharb/call-bind.svg
-[deps-url]: https://david-dm.org/ljharb/call-bind
-[dev-deps-svg]: https://david-dm.org/ljharb/call-bind/dev-status.svg
-[dev-deps-url]: https://david-dm.org/ljharb/call-bind#info=devDependencies
-[npm-badge-png]: https://nodei.co/npm/call-bind.png?downloads=true&stars=true
-[license-image]: https://img.shields.io/npm/l/call-bind.svg
-[license-url]: LICENSE
-[downloads-image]: https://img.shields.io/npm/dm/call-bind.svg
-[downloads-url]: https://npm-stat.com/charts.html?package=call-bind
-[codecov-image]: https://codecov.io/gh/ljharb/call-bind/branch/main/graphs/badge.svg
-[codecov-url]: https://app.codecov.io/gh/ljharb/call-bind/
-[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/call-bind
-[actions-url]: https://github.com/ljharb/call-bind/actions
Index: node_modules/define-data-property/README.md
===================================================================
diff --git a/node_modules/define-data-property/README.md b/node_modules/define-data-property/README.md
deleted file mode 100644
--- a/node_modules/define-data-property/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,67 +0,0 @@
-# define-data-property <sup>[![Version Badge][npm-version-svg]][package-url]</sup>
-
-[![github actions][actions-image]][actions-url]
-[![coverage][codecov-image]][codecov-url]
-[![License][license-image]][license-url]
-[![Downloads][downloads-image]][downloads-url]
-
-[![npm badge][npm-badge-png]][package-url]
-
-Define a data property on an object. Will fall back to assignment in an engine without descriptors.
-
-The three `non*` argument can also be passed `null`, which will use the existing state if available.
-
-The `loose` argument will mean that if you attempt to set a non-normal data property, in an environment without descriptor support, it will fall back to normal assignment.
-
-## Usage
-
-```javascript
-var defineDataProperty = require('define-data-property');
-var assert = require('assert');
-
-var obj = {};
-defineDataProperty(obj, 'key', 'value');
-defineDataProperty(
-	obj,
-	'key2',
-	'value',
-	true, // nonEnumerable, optional
-	false, // nonWritable, optional
-	true, // nonConfigurable, optional
-	false // loose, optional
-);
-
-assert.deepEqual(
-	Object.getOwnPropertyDescriptors(obj),
-	{
-		key: {
-			configurable: true,
-			enumerable: true,
-			value: 'value',
-			writable: true,
-		},
-		key2: {
-			configurable: false,
-			enumerable: false,
-			value: 'value',
-			writable: true,
-		},
-	}
-);
-```
-
-[package-url]: https://npmjs.org/package/define-data-property
-[npm-version-svg]: https://versionbadg.es/ljharb/define-data-property.svg
-[deps-svg]: https://david-dm.org/ljharb/define-data-property.svg
-[deps-url]: https://david-dm.org/ljharb/define-data-property
-[dev-deps-svg]: https://david-dm.org/ljharb/define-data-property/dev-status.svg
-[dev-deps-url]: https://david-dm.org/ljharb/define-data-property#info=devDependencies
-[npm-badge-png]: https://nodei.co/npm/define-data-property.png?downloads=true&stars=true
-[license-image]: https://img.shields.io/npm/l/define-data-property.svg
-[license-url]: LICENSE
-[downloads-image]: https://img.shields.io/npm/dm/define-data-property.svg
-[downloads-url]: https://npm-stat.com/charts.html?package=define-data-property
-[codecov-image]: https://codecov.io/gh/ljharb/define-data-property/branch/main/graphs/badge.svg
-[codecov-url]: https://app.codecov.io/gh/ljharb/define-data-property/
-[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/define-data-property
-[actions-url]: https://github.com/ljharb/define-data-property/actions
Index: node_modules/has-property-descriptors/README.md
===================================================================
diff --git a/node_modules/has-property-descriptors/README.md b/node_modules/has-property-descriptors/README.md
deleted file mode 100644
--- a/node_modules/has-property-descriptors/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,43 +0,0 @@
-# has-property-descriptors <sup>[![Version Badge][npm-version-svg]][package-url]</sup>
-
-[![github actions][actions-image]][actions-url]
-[![coverage][codecov-image]][codecov-url]
-[![dependency status][deps-svg]][deps-url]
-[![dev dependency status][dev-deps-svg]][dev-deps-url]
-[![License][license-image]][license-url]
-[![Downloads][downloads-image]][downloads-url]
-
-[![npm badge][npm-badge-png]][package-url]
-
-Does the environment have full property descriptor support? Handles IE 8's broken defineProperty/gOPD.
-
-## Example
-
-```js
-var hasPropertyDescriptors = require('has-property-descriptors');
-var assert = require('assert');
-
-assert.equal(hasPropertyDescriptors(), true); // will be `false` in IE 6-8, and ES5 engines
-
-// Arrays can not have their length `[[Defined]]` in some engines
-assert.equal(hasPropertyDescriptors.hasArrayLengthDefineBug(), false); // will be `true` in Firefox 4-22, and node v0.6
-```
-
-## Tests
-Simply clone the repo, `npm install`, and run `npm test`
-
-[package-url]: https://npmjs.org/package/has-property-descriptors
-[npm-version-svg]: https://versionbadg.es/inspect-js/has-property-descriptors.svg
-[deps-svg]: https://david-dm.org/inspect-js/has-property-descriptors.svg
-[deps-url]: https://david-dm.org/inspect-js/has-property-descriptors
-[dev-deps-svg]: https://david-dm.org/inspect-js/has-property-descriptors/dev-status.svg
-[dev-deps-url]: https://david-dm.org/inspect-js/has-property-descriptors#info=devDependencies
-[npm-badge-png]: https://nodei.co/npm/has-property-descriptors.png?downloads=true&stars=true
-[license-image]: https://img.shields.io/npm/l/has-property-descriptors.svg
-[license-url]: LICENSE
-[downloads-image]: https://img.shields.io/npm/dm/has-property-descriptors.svg
-[downloads-url]: https://npm-stat.com/charts.html?package=has-property-descriptors
-[codecov-image]: https://codecov.io/gh/inspect-js/has-property-descriptors/branch/main/graphs/badge.svg
-[codecov-url]: https://app.codecov.io/gh/inspect-js/has-property-descriptors/
-[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/inspect-js/has-property-descriptors
-[actions-url]: https://github.com/inspect-js/has-property-descriptors/actions
Index: node_modules/has-proto/README.md
===================================================================
diff --git a/node_modules/has-proto/README.md b/node_modules/has-proto/README.md
deleted file mode 100644
--- a/node_modules/has-proto/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,38 +0,0 @@
-# has-proto <sup>[![Version Badge][npm-version-svg]][package-url]</sup>
-
-[![github actions][actions-image]][actions-url]
-[![coverage][codecov-image]][codecov-url]
-[![License][license-image]][license-url]
-[![Downloads][downloads-image]][downloads-url]
-
-[![npm badge][npm-badge-png]][package-url]
-
-Does this environment have the ability to set the [[Prototype]] of an object on creation with `__proto__`?
-
-## Example
-
-```js
-var hasProto = require('has-proto');
-var assert = require('assert');
-
-assert.equal(typeof hasProto(), 'boolean');
-```
-
-## Tests
-Simply clone the repo, `npm install`, and run `npm test`
-
-[package-url]: https://npmjs.org/package/has-proto
-[npm-version-svg]: https://versionbadg.es/inspect-js/has-proto.svg
-[deps-svg]: https://david-dm.org/inspect-js/has-proto.svg
-[deps-url]: https://david-dm.org/inspect-js/has-proto
-[dev-deps-svg]: https://david-dm.org/inspect-js/has-proto/dev-status.svg
-[dev-deps-url]: https://david-dm.org/inspect-js/has-proto#info=devDependencies
-[npm-badge-png]: https://nodei.co/npm/has-proto.png?downloads=true&stars=true
-[license-image]: https://img.shields.io/npm/l/has-proto.svg
-[license-url]: LICENSE
-[downloads-image]: https://img.shields.io/npm/dm/has-proto.svg
-[downloads-url]: https://npm-stat.com/charts.html?package=has-proto
-[codecov-image]: https://codecov.io/gh/inspect-js/has-proto/branch/main/graphs/badge.svg
-[codecov-url]: https://app.codecov.io/gh/inspect-js/has-proto/
-[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/inspect-js/has-proto
-[actions-url]: https://github.com/inspect-js/has-proto/actions
Index: node_modules/nopt/README.md
===================================================================
diff --git a/node_modules/nopt/README.md b/node_modules/nopt/README.md
deleted file mode 100644
--- a/node_modules/nopt/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,208 +0,0 @@
-If you want to write an option parser, and have it be good, there are
-two ways to do it.  The Right Way, and the Wrong Way.
-
-The Wrong Way is to sit down and write an option parser.  We've all done
-that.
-
-The Right Way is to write some complex configurable program with so many
-options that you go half-insane just trying to manage them all, and put
-it off with duct-tape solutions until you see exactly to the core of the
-problem, and finally snap and write an awesome option parser.
-
-If you want to write an option parser, don't write an option parser.
-Write a package manager, or a source control system, or a service
-restarter, or an operating system.  You probably won't end up with a
-good one of those, but if you don't give up, and you are relentless and
-diligent enough in your procrastination, you may just end up with a very
-nice option parser.
-
-## USAGE
-
-    // my-program.js
-    var nopt = require("nopt")
-      , Stream = require("stream").Stream
-      , path = require("path")
-      , knownOpts = { "foo" : [String, null]
-                    , "bar" : [Stream, Number]
-                    , "baz" : path
-                    , "bloo" : [ "big", "medium", "small" ]
-                    , "flag" : Boolean
-                    , "pick" : Boolean
-                    , "many" : [String, Array]
-                    }
-      , shortHands = { "foofoo" : ["--foo", "Mr. Foo"]
-                     , "b7" : ["--bar", "7"]
-                     , "m" : ["--bloo", "medium"]
-                     , "p" : ["--pick"]
-                     , "f" : ["--flag"]
-                     }
-                 // everything is optional.
-                 // knownOpts and shorthands default to {}
-                 // arg list defaults to process.argv
-                 // slice defaults to 2
-      , parsed = nopt(knownOpts, shortHands, process.argv, 2)
-    console.log(parsed)
-
-This would give you support for any of the following:
-
-```bash
-$ node my-program.js --foo "blerp" --no-flag
-{ "foo" : "blerp", "flag" : false }
-
-$ node my-program.js ---bar 7 --foo "Mr. Hand" --flag
-{ bar: 7, foo: "Mr. Hand", flag: true }
-
-$ node my-program.js --foo "blerp" -f -----p
-{ foo: "blerp", flag: true, pick: true }
-
-$ node my-program.js -fp --foofoo
-{ foo: "Mr. Foo", flag: true, pick: true }
-
-$ node my-program.js --foofoo -- -fp  # -- stops the flag parsing.
-{ foo: "Mr. Foo", argv: { remain: ["-fp"] } }
-
-$ node my-program.js --blatzk 1000 -fp # unknown opts are ok.
-{ blatzk: 1000, flag: true, pick: true }
-
-$ node my-program.js --blatzk true -fp # but they need a value
-{ blatzk: true, flag: true, pick: true }
-
-$ node my-program.js --no-blatzk -fp # unless they start with "no-"
-{ blatzk: false, flag: true, pick: true }
-
-$ node my-program.js --baz b/a/z # known paths are resolved.
-{ baz: "/Users/isaacs/b/a/z" }
-
-# if Array is one of the types, then it can take many
-# values, and will always be an array.  The other types provided
-# specify what types are allowed in the list.
-
-$ node my-program.js --many 1 --many null --many foo
-{ many: ["1", "null", "foo"] }
-
-$ node my-program.js --many foo
-{ many: ["foo"] }
-```
-
-Read the tests at the bottom of `lib/nopt.js` for more examples of
-what this puppy can do.
-
-## Types
-
-The following types are supported, and defined on `nopt.typeDefs`
-
-* String: A normal string.  No parsing is done.
-* path: A file system path.  Gets resolved against cwd if not absolute.
-* url: A url.  If it doesn't parse, it isn't accepted.
-* Number: Must be numeric.
-* Date: Must parse as a date. If it does, and `Date` is one of the options,
-  then it will return a Date object, not a string.
-* Boolean: Must be either `true` or `false`.  If an option is a boolean,
-  then it does not need a value, and its presence will imply `true` as
-  the value.  To negate boolean flags, do `--no-whatever` or `--whatever
-  false`
-* NaN: Means that the option is strictly not allowed.  Any value will
-  fail.
-* Stream: An object matching the "Stream" class in node.  Valuable
-  for use when validating programmatically.  (npm uses this to let you
-  supply any WriteStream on the `outfd` and `logfd` config options.)
-* Array: If `Array` is specified as one of the types, then the value
-  will be parsed as a list of options.  This means that multiple values
-  can be specified, and that the value will always be an array.
-
-If a type is an array of values not on this list, then those are
-considered valid values.  For instance, in the example above, the
-`--bloo` option can only be one of `"big"`, `"medium"`, or `"small"`,
-and any other value will be rejected.
-
-When parsing unknown fields, `"true"`, `"false"`, and `"null"` will be
-interpreted as their JavaScript equivalents, and numeric values will be
-interpreted as a number.
-
-You can also mix types and values, or multiple types, in a list.  For
-instance `{ blah: [Number, null] }` would allow a value to be set to
-either a Number or null.
-
-To define a new type, add it to `nopt.typeDefs`.  Each item in that
-hash is an object with a `type` member and a `validate` method.  The
-`type` member is an object that matches what goes in the type list.  The
-`validate` method is a function that gets called with `validate(data,
-key, val)`.  Validate methods should assign `data[key]` to the valid
-value of `val` if it can be handled properly, or return boolean
-`false` if it cannot.
-
-You can also call `nopt.clean(data, types, typeDefs)` to clean up a
-config object and remove its invalid properties.
-
-## Error Handling
-
-By default, nopt outputs a warning to standard error when invalid
-options are found.  You can change this behavior by assigning a method
-to `nopt.invalidHandler`.  This method will be called with
-the offending `nopt.invalidHandler(key, val, types)`.
-
-If no `nopt.invalidHandler` is assigned, then it will console.error
-its whining.  If it is assigned to boolean `false` then the warning is
-suppressed.
-
-## Abbreviations
-
-Yes, they are supported.  If you define options like this:
-
-```javascript
-{ "foolhardyelephants" : Boolean
-, "pileofmonkeys" : Boolean }
-```
-
-Then this will work:
-
-```bash
-node program.js --foolhar --pil
-node program.js --no-f --pileofmon
-# etc.
-```
-
-## Shorthands
-
-Shorthands are a hash of shorter option names to a snippet of args that
-they expand to.
-
-If multiple one-character shorthands are all combined, and the
-combination does not unambiguously match any other option or shorthand,
-then they will be broken up into their constituent parts.  For example:
-
-```json
-{ "s" : ["--loglevel", "silent"]
-, "g" : "--global"
-, "f" : "--force"
-, "p" : "--parseable"
-, "l" : "--long"
-}
-```
-
-```bash
-npm ls -sgflp
-# just like doing this:
-npm ls --loglevel silent --global --force --long --parseable
-```
-
-## The Rest of the args
-
-The config object returned by nopt is given a special member called
-`argv`, which is an object with the following fields:
-
-* `remain`: The remaining args after all the parsing has occurred.
-* `original`: The args as they originally appeared.
-* `cooked`: The args after flags and shorthands are expanded.
-
-## Slicing
-
-Node programs are called with more or less the exact argv as it appears
-in C land, after the v8 and node-specific options have been plucked off.
-As such, `argv[0]` is always `node` and `argv[1]` is always the
-JavaScript program being run.
-
-That's usually not very useful to you.  So they're sliced off by
-default.  If you want them, then you can pass in `0` as the last
-argument, or any other number that you'd like to slice off the start of
-the list.
Index: node_modules/putil-merge/README.md
===================================================================
diff --git a/node_modules/putil-merge/README.md b/node_modules/putil-merge/README.md
deleted file mode 100644
--- a/node_modules/putil-merge/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,137 +0,0 @@
-# putil-merge
-
-[![NPM Version][npm-image]][npm-url]
-[![NPM Downloads][downloads-image]][downloads-url]
-[![Build Status][travis-image]][travis-url]
-[![Test Coverage][coveralls-image]][coveralls-url]
-[![DevDependencies][devdependencies-image]][devdependencies-url]
-
-A 'swiss army knife' solution for merging two or more objects. It supports deep merge, cloning properties, copying descriptors and filtering.
-
-## Installation
-
-`$ npm install putil-merge --save`
-
-## Table of contents
-
-- [merge()](#merge)
-- [merge.all()](#mergeall)
-
-
-## Merge
-
-`merge(target, source[, options])`
-
-- `target:object`:
-- `source:object`:
-- `options:object` 
-    - `deep:boolean` (optional): If true, it performs deep merge operation. **Default:** `false`
-    - `clone:boolean` (optional): If true, clones object properties rather than assigning references.  **Default:** `false`
-    - `adjunct:boolean`(optional): If true, it copies only non-existing properties. **Default:** `false`
-    - `descriptor:boolean`(optional): If true, copies property descriptors.  **Default:** `false`
-    - `filter:function` (optional): A callback function to test if source property will be merged to target.
-    - `arrayMerge:boolean|function` (optional): If true, it combines array values. It this is a function, result of call will be assigned to target.
-
-**Copying source properties to target object**
-
-```javascript
-const a = {x: 1, y: 2};
-const b = {x: {}, z: [1, 2, 3, 4]};
-const merged = merge(a, b);
-assert(merged.x===b.x); // References copied
-assert(merged.z===b.z); // References copied
-```
-
-**Cloning source properties to target object**
-
-```js
-const a = {x: 1, y: 2};
-const b = {x: {}, z: [1, 2, 3, 4]};
-const merged = merge(a, b, {clone: true});
-assert(merged.x!==b.x); // Object cloned
-assert(merged.z!==b.z); // Array cloned
-```
-
-
-**Applying filter while merge**
-
-```js
-const a = {x: 1, y: 2};
-const b = {x: {}, z: [1, 2, 3, 4]};
-const merged = merge(a, b, {filter: (src, key)=>key!=='z'});
-assert(!merged.z); // Z will not be merged
-```
-
-
-**Copying descriptors**
-
-```javascript
-const b = {};
-Object.defineProperty(b, 'foo', {
-  enumerable: false
-});
-const merged = merge({}, b, {descriptor: true});
-assert.strictEqual(Object.getOwnPropertyDescriptor(merged, 'foo').enumerable, false);
-```
-
-**Copying getters and setters**
-
-```javascript
-const b = {
-  bar: 1,
-  get foo(){
-    return this.bar; 
-  }
-};
-const merged = merge({}, b, {descriptor: true});
-assert.strictEqual(merged.foo, 1);
-```
-
-
-**Copying function properties**
-
-```javascript
-const b = {
-  bar: 1,
-  getFoo(){
-    return this.bar; 
-  }
-};
-const merged = merge({}, b, {descriptor: true});
-assert.strictEqual(merged.getFoo(), 1);
-```
-
-
-## Merge.all()
-
-Performs merge with more than two objects.
-
-`merge.all(arrayOfObjects[, options])`
-
-- `arrayOfObjects:Array<object>`:
-- `options:object` 
-    - `deep:boolean` (optional): If true, it performs deep merge operation. **Default:** `false`
-    - `clone:boolean` (optional): If true, clones object properties rather than assigning references.  **Default:** `false`
-    - `combine:boolean`(optional): If true, it copies only non-existing properties. **Default:** `false`
-    - `descriptor:boolean`(optional): If true, copies property descriptors.  **Default:** `false`
-    - `filter:function` (optional): A callback function to test if source property will be merged to target.
-    - `arrayMerge:boolean|function` (optional): If true, it combines array values. It this is a function, result of call will be assigned to target.
-
-
-## Node Compatibility
-
-  - node `>= 6.0`;
-  
-### License
-[MIT](LICENSE)
-
-[npm-image]: https://img.shields.io/npm/v/putil-merge.svg
-[npm-url]: https://npmjs.org/package/putil-merge
-[travis-image]: https://img.shields.io/travis/panates/putil-merge/master.svg
-[travis-url]: https://travis-ci.org/panates/putil-merge
-[coveralls-image]: https://img.shields.io/coveralls/panates/putil-merge/master.svg
-[coveralls-url]: https://coveralls.io/r/panates/putil-merge
-[downloads-image]: https://img.shields.io/npm/dm/putil-merge.svg
-[downloads-url]: https://npmjs.org/package/putil-merge
-[devdependencies-image]: https://david-dm.org/panates/putil-merge/dev-status.svg
-[devdependencies-url]:https://david-dm.org/panates/putil-merge?type=dev
Index: node_modules/set-function-length/README.md
===================================================================
diff --git a/node_modules/set-function-length/README.md b/node_modules/set-function-length/README.md
deleted file mode 100644
--- a/node_modules/set-function-length/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,56 +0,0 @@
-# set-function-length <sup>[![Version Badge][npm-version-svg]][package-url]</sup>
-
-[![github actions][actions-image]][actions-url]
-[![coverage][codecov-image]][codecov-url]
-[![License][license-image]][license-url]
-[![Downloads][downloads-image]][downloads-url]
-
-[![npm badge][npm-badge-png]][package-url]
-
-Set a function’s length.
-
-Arguments:
- - `fn`: the function
- - `length`: the new length. Must be an integer between 0 and 2**32.
- - `loose`: Optional. If true, and the length fails to be set, do not throw. Default false.
-
-Returns `fn`.
-
-## Usage
-
-```javascript
-var setFunctionLength = require('set-function-length');
-var assert = require('assert');
-
-function zero() {}
-function one(_) {}
-function two(_, __) {}
-
-assert.equal(zero.length, 0);
-assert.equal(one.length, 1);
-assert.equal(two.length, 2);
-
-assert.equal(setFunctionLength(zero, 10), zero);
-assert.equal(setFunctionLength(one, 11), one);
-assert.equal(setFunctionLength(two, 12), two);
-
-assert.equal(zero.length, 10);
-assert.equal(one.length, 11);
-assert.equal(two.length, 12);
-```
-
-[package-url]: https://npmjs.org/package/set-function-length
-[npm-version-svg]: https://versionbadg.es/ljharb/set-function-length.svg
-[deps-svg]: https://david-dm.org/ljharb/set-function-length.svg
-[deps-url]: https://david-dm.org/ljharb/set-function-length
-[dev-deps-svg]: https://david-dm.org/ljharb/set-function-length/dev-status.svg
-[dev-deps-url]: https://david-dm.org/ljharb/set-function-length#info=devDependencies
-[npm-badge-png]: https://nodei.co/npm/set-function-length.png?downloads=true&stars=true
-[license-image]: https://img.shields.io/npm/l/set-function-length.svg
-[license-url]: LICENSE
-[downloads-image]: https://img.shields.io/npm/dm/set-function-length.svg
-[downloads-url]: https://npm-stat.com/charts.html?package=set-function-length
-[codecov-image]: https://codecov.io/gh/ljharb/set-function-length/branch/main/graphs/badge.svg
-[codecov-url]: https://app.codecov.io/gh/ljharb/set-function-length/
-[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/set-function-length
-[actions-url]: https://github.com/ljharb/set-function-length/actions
Index: node_modules/postgresql-client/node_modules/postgres-bytea/readme.md
===================================================================
diff --git a/node_modules/postgresql-client/node_modules/postgres-bytea/readme.md b/node_modules/postgresql-client/node_modules/postgres-bytea/readme.md
deleted file mode 100644
--- a/node_modules/postgresql-client/node_modules/postgres-bytea/readme.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,86 +0,0 @@
-# postgres-bytea [![Build Status](https://travis-ci.org/bendrucker/postgres-bytea.svg?branch=master)](https://travis-ci.org/bendrucker/postgres-bytea) [![Greenkeeper badge](https://badges.greenkeeper.io/bendrucker/postgres-bytea.svg)](https://greenkeeper.io/)
-
-> Decode/encode Postgres bytea strings to Buffers
-
-
-## Install
-
-```sh
-npm install postgres-bytea
-```
-
-## Usage
-
-### Decoding
-
-To decode a bytea string into a buffer:
-
-```js
-const bytea = require('postgres-bytea')
-
-// bytea hex format
-bytea.decode('\\x1234') // <Buffer 12 34>
-
-// bytea escape format
-bytea.decode('\\000\\100\\200') // <Buffer 00 40 80>
-```
-
-The `decode` function supports both the hex format used in Postgres 9+ and the escape format used in Postgres 8 and earlier. It automatically detects the format from the incoming data.
-
-For backward compatibility, `decode` is also the default export from the package.
-
-### Decoding (Stream)
-
-To decode a bytea hex stream into binary:
-
-```js
-const bytea = require('postgres-bytea')
-
-readable.pipe(new bytea.Decoder())
-```
-
-`Decoder` expects a double-escaped `\\x` prefix to allow reading from a `COPY TO` statement.
-
-### Encoding (Stream)
-
-
-```js
-const bytea = require('postgres-bytea')
-
-readable.pipe(new bytea.Encoder())
-```
-
-`Encoder` adds a double-escaped `\\x` prefix to allow writing to a `COPY FROM` statement.
-
-## API
-
-#### `bytea.decode(input)` -> `buffer`
-
-##### input
-
-*Required*  
-Type: `string`
-
-A Postgres bytea binary string.
-
-#### `new bytea.Decoder()` -> `stream.Transform`
-
-Creates a bytea decoder stream that emits buffer chunks.
-
-#### `new bytea.Encoder()` -> `stream.Transform`
-
-Creates a bytea encoder stream that receives buffer chunks and emits them as bytea strings.
-
-## Prefix Escaping
-
-> The “hex” format encodes binary data as 2 hexadecimal digits per byte, most significant nibble first. The entire string is preceded by the sequence \x (to distinguish it from the escape format). In some contexts, the initial backslash may need to be escaped by doubling it (see Section 4.1.2.1).
->
-> https://www.postgresql.org/docs/12/datatype-binary.html#id-1.5.7.12.9
-
-A `SELECT` statement returns bytea values using the single-escaped `\x` prefix. The `COPY TO` and `COPY FROM` commands expect and return bytea values with the double-escaped `\\x` prefix. 
-
-`bytea.decode` expects the single-escaped prefix. The `Decoder` and `Encoder` streams expect the double-escaped prefix, since they are most useful in `COPY FROM` and `COPY TO` statements.
-
-## License
-
-MIT © [Ben Drucker](http://bendrucker.me)
Index: node_modules/pg-pool/test/releasing-clients.js
===================================================================
diff --git a/node_modules/pg-pool/test/releasing-clients.js b/node_modules/pg-pool/test/releasing-clients.js
deleted file mode 100644
--- a/node_modules/pg-pool/test/releasing-clients.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,54 +0,0 @@
-const Pool = require('../')
-
-const expect = require('expect.js')
-const net = require('net')
-
-describe('releasing clients', () => {
-  it('removes a client which cannot be queried', async () => {
-    // make a pool w/ only 1 client
-    const pool = new Pool({ max: 1 })
-    expect(pool.totalCount).to.eql(0)
-    const client = await pool.connect()
-    expect(pool.totalCount).to.eql(1)
-    expect(pool.idleCount).to.eql(0)
-    // reach into the client and sever its connection
-    client.connection.end()
-
-    // wait for the client to error out
-    const err = await new Promise((resolve) => client.once('error', resolve))
-    expect(err).to.be.ok()
-    expect(pool.totalCount).to.eql(1)
-    expect(pool.idleCount).to.eql(0)
-
-    // try to return it to the pool - this removes it because its broken
-    client.release()
-    expect(pool.totalCount).to.eql(0)
-    expect(pool.idleCount).to.eql(0)
-
-    // make sure pool still works
-    const { rows } = await pool.query('SELECT NOW()')
-    expect(rows).to.have.length(1)
-    await pool.end()
-  })
-
-  it('removes a client which is ending', async () => {
-    // make a pool w/ only 1 client
-    const pool = new Pool({ max: 1 })
-    expect(pool.totalCount).to.eql(0)
-    const client = await pool.connect()
-    expect(pool.totalCount).to.eql(1)
-    expect(pool.idleCount).to.eql(0)
-    // end the client gracefully (but you shouldn't do this with pooled clients)
-    client.end()
-
-    // try to return it to the pool
-    client.release()
-    expect(pool.totalCount).to.eql(0)
-    expect(pool.idleCount).to.eql(0)
-
-    // make sure pool still works
-    const { rows } = await pool.query('SELECT NOW()')
-    expect(rows).to.have.length(1)
-    await pool.end()
-  })
-})
Index: node_modules/lightning-pool/esm/resource-item.d.ts
===================================================================
diff --git a/node_modules/lightning-pool/esm/resource-item.d.ts b/node_modules/lightning-pool/esm/resource-item.d.ts
deleted file mode 100644
--- a/node_modules/lightning-pool/esm/resource-item.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,11 +0,0 @@
-import { DoublyLinked } from 'doublylinked';
-import { ResourceState } from './definitions.js';
-export declare class ResourceItem<T> {
-    state: ResourceState;
-    acquiredNode?: DoublyLinked.Node;
-    idleNode?: DoublyLinked.Node;
-    resource: T;
-    idleTime: number;
-    destroyed: boolean;
-    constructor(resource: T);
-}
Index: node_modules/postgresql-client/typings/safe-event-emitter.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/safe-event-emitter.d.ts b/node_modules/postgresql-client/typings/safe-event-emitter.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/safe-event-emitter.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,5 +0,0 @@
-/// <reference types="node" />
-import { EventEmitter } from 'events';
-export declare class SafeEventEmitter extends EventEmitter {
-    emit(event: string | symbol, ...args: any[]): boolean;
-}
Index: node_modules/postgresql-client/cjs/safe-event-emitter.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/safe-event-emitter.js b/node_modules/postgresql-client/cjs/safe-event-emitter.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/safe-event-emitter.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,17 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.SafeEventEmitter = void 0;
-const events_1 = require("events");
-class SafeEventEmitter extends events_1.EventEmitter {
-    emit(event, ...args) {
-        try {
-            if (event === 'error' && !this.listenerCount('error'))
-                return false;
-            return super.emit(event, ...args);
-        }
-        catch (ignored) {
-            return false;
-        }
-    }
-}
-exports.SafeEventEmitter = SafeEventEmitter;
Index: node_modules/postgresql-client/esm/safe-event-emitter.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/safe-event-emitter.js b/node_modules/postgresql-client/esm/safe-event-emitter.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/safe-event-emitter.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,13 +0,0 @@
-import { EventEmitter } from 'events';
-export class SafeEventEmitter extends EventEmitter {
-    emit(event, ...args) {
-        try {
-            if (event === 'error' && !this.listenerCount('error'))
-                return false;
-            return super.emit(event, ...args);
-        }
-        catch (ignored) {
-            return false;
-        }
-    }
-}
Index: node_modules/postgresql-client/typings/protocol/sasl.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/protocol/sasl.d.ts b/node_modules/postgresql-client/typings/protocol/sasl.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/protocol/sasl.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,13 +0,0 @@
-export declare namespace SASL {
-    interface Session {
-        username: string;
-        mechanism: string;
-        nonce: string;
-        clientFirstMessage: string;
-        clientFinalMessage: string;
-        serverSignature: string;
-    }
-    function createSession(username: string, mechanism: string): Session;
-    function continueSession(session: Session, password: string, data: string): void;
-    function finalizeSession(session: Session, data: string): void;
-}
Index: node_modules/postgresql-client/cjs/protocol/sasl.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/protocol/sasl.js b/node_modules/postgresql-client/cjs/protocol/sasl.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/protocol/sasl.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,108 +0,0 @@
-"use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.SASL = void 0;
-/* eslint-disable no-bitwise */
-const crypto_1 = __importDefault(require("crypto"));
-var SASL;
-(function (SASL) {
-    const CLIENT_KEY = 'Client Key';
-    const SERVER_KEY = 'Server Key';
-    const GS2_HEADER = 'n,,';
-    function createSession(username, mechanism) {
-        const nonce = crypto_1.default.randomBytes(18).toString('base64');
-        const clientFirstMessage = `${GS2_HEADER}${firstMessageBare(username, nonce)}`;
-        return {
-            username,
-            mechanism,
-            nonce,
-            clientFirstMessage,
-        };
-    }
-    SASL.createSession = createSession;
-    function continueSession(session, password, data) {
-        const s = data.toString();
-        const items = s.split(',');
-        let nonce = '';
-        let salt = '';
-        let iteration = 0;
-        for (const i of items) {
-            switch (i[0]) {
-                case 'r':
-                    nonce = i.substring(2);
-                    break;
-                case 's':
-                    salt = i.substring(2);
-                    break;
-                case 'i':
-                    iteration = parseInt(i.substring(2), 10);
-                    break;
-            }
-        }
-        if (!nonce)
-            throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce missing');
-        if (!salt)
-            throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing');
-        if (!iteration)
-            throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: iteration missing');
-        if (!nonce.startsWith(session.nonce))
-            throw new Error('SASL: Server nonce does not start with client nonce');
-        const serverFirstMessage = `r=${nonce},s=${salt},i=${iteration}`;
-        const clientFinalMessageWithoutProof = `c=${encode64(GS2_HEADER)},r=${nonce}`;
-        const authMessage = `${firstMessageBare(session.username, session.nonce)},${serverFirstMessage},${clientFinalMessageWithoutProof}`;
-        const saltPass = hi(password, salt, iteration);
-        const clientKey = hmac(saltPass, CLIENT_KEY);
-        const storedKey = hash(clientKey);
-        const clientSignature = hmac(storedKey, authMessage);
-        const clientProofBytes = xor(clientKey, clientSignature);
-        const clientProof = clientProofBytes.toString('base64');
-        const serverKey = hmac(saltPass, SERVER_KEY);
-        const serverSignatureBytes = hmac(serverKey, authMessage);
-        session.serverSignature = serverSignatureBytes.toString('base64');
-        session.clientFinalMessage = clientFinalMessageWithoutProof + ',p=' + clientProof;
-    }
-    SASL.continueSession = continueSession;
-    function finalizeSession(session, data) {
-        let serverSignature = '';
-        const arr = data.split(',');
-        for (const s of arr) {
-            if (s[0] === 'v')
-                serverSignature = s.substr(2);
-        }
-        if (serverSignature !== session.serverSignature)
-            throw new Error('SASL: Server signature does not match');
-    }
-    SASL.finalizeSession = finalizeSession;
-    function firstMessageBare(username, nonce) {
-        return `n=${username},r=${nonce}`;
-    }
-    /**
-     * Hi() is, essentially, PBKDF2 [RFC2898] with HMAC() as the
-     * pseudorandom function (PRF) and with dkLen == output length of
-     * HMAC() == output length of H()
-     */
-    function hi(text, salt, iterations) {
-        return crypto_1.default.pbkdf2Sync(text, Buffer.from(salt, 'base64'), iterations, 32, 'sha256');
-    }
-    const encode64 = str => Buffer.from(str).toString('base64');
-    function hmac(key, msg) {
-        return crypto_1.default.createHmac('sha256', key).update(msg).digest();
-    }
-    function hash(data) {
-        return crypto_1.default.createHash('sha256').update(data).digest();
-    }
-    function xor(a, b) {
-        a = Buffer.isBuffer(a) ? a : Buffer.from(a);
-        b = Buffer.isBuffer(b) ? b : Buffer.from(b);
-        if (a.length !== b.length)
-            throw new Error('Buffers must be of the same length');
-        const l = a.length;
-        const out = Buffer.allocUnsafe(l);
-        for (let i = 0; i < l; i++) {
-            out[i] = a[i] ^ b[i];
-        }
-        return out;
-    }
-})(SASL || (exports.SASL = SASL = {}));
Index: node_modules/postgresql-client/esm/protocol/sasl.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/protocol/sasl.js b/node_modules/postgresql-client/esm/protocol/sasl.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/protocol/sasl.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,102 +0,0 @@
-/* eslint-disable no-bitwise */
-import crypto from 'crypto';
-export var SASL;
-(function (SASL) {
-    const CLIENT_KEY = 'Client Key';
-    const SERVER_KEY = 'Server Key';
-    const GS2_HEADER = 'n,,';
-    function createSession(username, mechanism) {
-        const nonce = crypto.randomBytes(18).toString('base64');
-        const clientFirstMessage = `${GS2_HEADER}${firstMessageBare(username, nonce)}`;
-        return {
-            username,
-            mechanism,
-            nonce,
-            clientFirstMessage,
-        };
-    }
-    SASL.createSession = createSession;
-    function continueSession(session, password, data) {
-        const s = data.toString();
-        const items = s.split(',');
-        let nonce = '';
-        let salt = '';
-        let iteration = 0;
-        for (const i of items) {
-            switch (i[0]) {
-                case 'r':
-                    nonce = i.substring(2);
-                    break;
-                case 's':
-                    salt = i.substring(2);
-                    break;
-                case 'i':
-                    iteration = parseInt(i.substring(2), 10);
-                    break;
-            }
-        }
-        if (!nonce)
-            throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce missing');
-        if (!salt)
-            throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing');
-        if (!iteration)
-            throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: iteration missing');
-        if (!nonce.startsWith(session.nonce))
-            throw new Error('SASL: Server nonce does not start with client nonce');
-        const serverFirstMessage = `r=${nonce},s=${salt},i=${iteration}`;
-        const clientFinalMessageWithoutProof = `c=${encode64(GS2_HEADER)},r=${nonce}`;
-        const authMessage = `${firstMessageBare(session.username, session.nonce)},${serverFirstMessage},${clientFinalMessageWithoutProof}`;
-        const saltPass = hi(password, salt, iteration);
-        const clientKey = hmac(saltPass, CLIENT_KEY);
-        const storedKey = hash(clientKey);
-        const clientSignature = hmac(storedKey, authMessage);
-        const clientProofBytes = xor(clientKey, clientSignature);
-        const clientProof = clientProofBytes.toString('base64');
-        const serverKey = hmac(saltPass, SERVER_KEY);
-        const serverSignatureBytes = hmac(serverKey, authMessage);
-        session.serverSignature = serverSignatureBytes.toString('base64');
-        session.clientFinalMessage = clientFinalMessageWithoutProof + ',p=' + clientProof;
-    }
-    SASL.continueSession = continueSession;
-    function finalizeSession(session, data) {
-        let serverSignature = '';
-        const arr = data.split(',');
-        for (const s of arr) {
-            if (s[0] === 'v')
-                serverSignature = s.substr(2);
-        }
-        if (serverSignature !== session.serverSignature)
-            throw new Error('SASL: Server signature does not match');
-    }
-    SASL.finalizeSession = finalizeSession;
-    function firstMessageBare(username, nonce) {
-        return `n=${username},r=${nonce}`;
-    }
-    /**
-     * Hi() is, essentially, PBKDF2 [RFC2898] with HMAC() as the
-     * pseudorandom function (PRF) and with dkLen == output length of
-     * HMAC() == output length of H()
-     */
-    function hi(text, salt, iterations) {
-        return crypto.pbkdf2Sync(text, Buffer.from(salt, 'base64'), iterations, 32, 'sha256');
-    }
-    const encode64 = str => Buffer.from(str).toString('base64');
-    function hmac(key, msg) {
-        return crypto.createHmac('sha256', key).update(msg).digest();
-    }
-    function hash(data) {
-        return crypto.createHash('sha256').update(data).digest();
-    }
-    function xor(a, b) {
-        a = Buffer.isBuffer(a) ? a : Buffer.from(a);
-        b = Buffer.isBuffer(b) ? b : Buffer.from(b);
-        if (a.length !== b.length)
-            throw new Error('Buffers must be of the same length');
-        const l = a.length;
-        const out = Buffer.allocUnsafe(l);
-        for (let i = 0; i < l; i++) {
-            out[i] = a[i] ^ b[i];
-        }
-        return out;
-    }
-})(SASL || (SASL = {}));
Index: node_modules/postgresql-client/typings/interfaces/script-execute-options.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/interfaces/script-execute-options.d.ts b/node_modules/postgresql-client/typings/interfaces/script-execute-options.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/interfaces/script-execute-options.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,26 +0,0 @@
-import type { DataTypeMap } from '../data-type-map';
-import type { DataMappingOptions } from './data-mapping-options.js';
-export interface ScriptExecuteOptions extends DataMappingOptions {
-    /**
-     * Specifies weather execute query in auto-commit mode
-     * @default true
-     */
-    autoCommit?: boolean;
-    /**
-     * Specifies if rows will be fetched as <FieldName, Value> pair objects or array of values
-     * @default false
-     */
-    objectRows?: boolean;
-    /**
-     * Data type map instance
-     * @default GlobalTypeMap
-     */
-    typeMap?: DataTypeMap;
-    /**
-     * When on, if a statement in a transaction block generates an error,
-     * the error is ignored and the transaction continues.
-     * When off (the default), a statement in a transaction block that generates an error aborts the entire transaction
-     * @default true
-     */
-    rollbackOnError?: boolean;
-}
Index: node_modules/postgresql-client/cjs/interfaces/script-execute-options.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/interfaces/script-execute-options.js b/node_modules/postgresql-client/cjs/interfaces/script-execute-options.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/interfaces/script-execute-options.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,2 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
Index: node_modules/postgresql-client/esm/interfaces/script-execute-options.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/interfaces/script-execute-options.js b/node_modules/postgresql-client/esm/interfaces/script-execute-options.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/interfaces/script-execute-options.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,1 +0,0 @@
-export {};
Index: node_modules/postgresql-client/typings/interfaces/script-result.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/interfaces/script-result.d.ts b/node_modules/postgresql-client/typings/interfaces/script-result.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/interfaces/script-result.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,15 +0,0 @@
-import type { CommandResult } from './command-result.js';
-export interface ScriptResult {
-    /**
-     * Array of command result for each sql command in the script
-     */
-    results: CommandResult[];
-    /**
-     * Command count in the script
-     */
-    totalCommands: number;
-    /**
-     * Total execution time
-     */
-    totalTime: number;
-}
Index: node_modules/postgresql-client/cjs/interfaces/script-result.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/interfaces/script-result.js b/node_modules/postgresql-client/cjs/interfaces/script-result.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/interfaces/script-result.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,2 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
Index: node_modules/postgresql-client/esm/interfaces/script-result.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/interfaces/script-result.js b/node_modules/postgresql-client/esm/interfaces/script-result.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/interfaces/script-result.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,1 +0,0 @@
-export {};
Index: node_modules/pg-pool/test/setup.js
===================================================================
diff --git a/node_modules/pg-pool/test/setup.js b/node_modules/pg-pool/test/setup.js
deleted file mode 100644
--- a/node_modules/pg-pool/test/setup.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,10 +0,0 @@
-const crash = (reason) => {
-  process.on(reason, (err) => {
-    console.error(reason, err.stack)
-    process.exit(-1)
-  })
-}
-
-crash('unhandledRejection')
-crash('uncaughtError')
-crash('warning')
Index: node_modules/pg-pool/test/sizing.js
===================================================================
diff --git a/node_modules/pg-pool/test/sizing.js b/node_modules/pg-pool/test/sizing.js
deleted file mode 100644
--- a/node_modules/pg-pool/test/sizing.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,58 +0,0 @@
-const expect = require('expect.js')
-const co = require('co')
-const _ = require('lodash')
-
-const describe = require('mocha').describe
-const it = require('mocha').it
-
-const Pool = require('../')
-
-describe('pool size of 1', () => {
-  it(
-    'can create a single client and use it once',
-    co.wrap(function* () {
-      const pool = new Pool({ max: 1 })
-      expect(pool.waitingCount).to.equal(0)
-      const client = yield pool.connect()
-      const res = yield client.query('SELECT $1::text as name', ['hi'])
-      expect(res.rows[0].name).to.equal('hi')
-      client.release()
-      pool.end()
-    })
-  )
-
-  it(
-    'can create a single client and use it multiple times',
-    co.wrap(function* () {
-      const pool = new Pool({ max: 1 })
-      expect(pool.waitingCount).to.equal(0)
-      const client = yield pool.connect()
-      const wait = pool.connect()
-      expect(pool.waitingCount).to.equal(1)
-      client.release()
-      const client2 = yield wait
-      expect(client).to.equal(client2)
-      client2.release()
-      return yield pool.end()
-    })
-  )
-
-  it(
-    'can only send 1 query at a time',
-    co.wrap(function* () {
-      const pool = new Pool({ max: 1 })
-
-      // the query text column name changed in PostgreSQL 9.2
-      const versionResult = yield pool.query('SHOW server_version_num')
-      const version = parseInt(versionResult.rows[0].server_version_num, 10)
-      const queryColumn = version < 90200 ? 'current_query' : 'query'
-
-      const queryText = 'SELECT COUNT(*) as counts FROM pg_stat_activity WHERE ' + queryColumn + ' = $1'
-      const queries = _.times(20, () => pool.query(queryText, [queryText]))
-      const results = yield Promise.all(queries)
-      const counts = results.map((res) => parseInt(res.rows[0].counts, 10))
-      expect(counts).to.eql(_.times(20, (i) => 1))
-      return yield pool.end()
-    })
-  )
-})
Index: node_modules/postgresql-client/typings/protocol/smart-buffer.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/protocol/smart-buffer.d.ts b/node_modules/postgresql-client/typings/protocol/smart-buffer.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/protocol/smart-buffer.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,39 +0,0 @@
-/// <reference types="node" />
-import { BufferReader } from './buffer-reader.js';
-export interface SmartBufferConfig {
-    pageSize?: number;
-    maxLength?: number;
-    houseKeepInterval?: number;
-}
-export declare class SmartBuffer extends BufferReader {
-    static DEFAULT_PAGE_SIZE: number;
-    static DEFAULT_MAX_SIZE: number;
-    private readonly _houseKeepInterval;
-    private _houseKeepTimer?;
-    private _lastHouseKeep;
-    private _stMaxPages;
-    private _length;
-    readonly pageSize: number;
-    readonly maxSize: number;
-    constructor(cfg?: SmartBufferConfig);
-    get capacity(): number;
-    get length(): number;
-    start(): this;
-    flush(): Buffer;
-    growSize(len: number): this;
-    fill(value?: number, len?: number): this;
-    writeCString(str: string, encoding?: BufferEncoding): this;
-    writeLString(str?: string, encoding?: BufferEncoding): this;
-    writeString(str: string, encoding?: BufferEncoding): this;
-    writeInt8(n: number): this;
-    writeUInt8(n: number): this;
-    writeUInt16BE(n: number): this;
-    writeUInt32BE(n: number): this;
-    writeInt16BE(n: number): this;
-    writeInt32BE(n: number): this;
-    writeBigInt64BE(n: bigint | number): this;
-    writeFloatBE(n: number): this;
-    writeDoubleBE(n: number): this;
-    writeBuffer(buffer: Buffer): this;
-    private _houseKeep;
-}
Index: node_modules/postgresql-client/cjs/protocol/smart-buffer.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/protocol/smart-buffer.js b/node_modules/postgresql-client/cjs/protocol/smart-buffer.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/protocol/smart-buffer.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,195 +0,0 @@
-"use strict";
-var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    var desc = Object.getOwnPropertyDescriptor(m, k);
-    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
-      desc = { enumerable: true, get: function() { return m[k]; } };
-    }
-    Object.defineProperty(o, k2, desc);
-}) : (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    o[k2] = m[k];
-}));
-var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
-    Object.defineProperty(o, "default", { enumerable: true, value: v });
-}) : function(o, v) {
-    o["default"] = v;
-});
-var __importStar = (this && this.__importStar) || function (mod) {
-    if (mod && mod.__esModule) return mod;
-    var result = {};
-    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
-    __setModuleDefault(result, mod);
-    return result;
-};
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.SmartBuffer = void 0;
-const os = __importStar(require("os"));
-const bigint_methods_js_1 = require("../util/bigint-methods.js");
-const buffer_reader_js_1 = require("./buffer-reader.js");
-class SmartBuffer extends buffer_reader_js_1.BufferReader {
-    constructor(cfg) {
-        // @ts-ignore
-        super(Buffer.allocUnsafe((cfg?.pageSize ? parseInt(cfg.pageSize, 10) : 0) || SmartBuffer.DEFAULT_PAGE_SIZE));
-        this._lastHouseKeep = 0;
-        this._stMaxPages = 1;
-        this._length = 0;
-        this._houseKeepInterval = cfg?.houseKeepInterval || 5000;
-        this.pageSize = this.buffer.length;
-        this.maxSize = cfg?.maxLength || SmartBuffer.DEFAULT_MAX_SIZE;
-        this._length = 0;
-    }
-    get capacity() {
-        return this.buffer.length;
-    }
-    get length() {
-        return this._length;
-    }
-    start() {
-        this.offset = 0;
-        this._length = 0;
-        if (this._houseKeepTimer) {
-            clearTimeout(this._houseKeepTimer);
-            this._houseKeepTimer = undefined;
-        }
-        return this;
-    }
-    flush() {
-        if (this._houseKeepTimer)
-            clearTimeout(this._houseKeepTimer);
-        const length = this.length;
-        this._length = 0;
-        const out = this.buffer.slice(0, length);
-        const pages = length ? Math.ceil(length / this.pageSize) : 1;
-        this._stMaxPages = Math.max(this._stMaxPages, pages);
-        if (this._lastHouseKeep < Date.now() + this._houseKeepInterval)
-            this._houseKeep();
-        this._houseKeepTimer = setTimeout(() => {
-            this._houseKeepTimer = undefined;
-            this._houseKeep();
-        }, this._houseKeepInterval).unref();
-        return out;
-    }
-    growSize(len) {
-        const endOffset = this.offset + len;
-        if (this.capacity < endOffset) {
-            if (endOffset > this.maxSize)
-                throw new Error('Buffer limit exceeded.');
-            const newSize = Math.ceil(endOffset / this.pageSize) * this.pageSize;
-            const newBuffer = Buffer.allocUnsafe(newSize);
-            this.buffer.copy(newBuffer);
-            this.buffer = newBuffer;
-        }
-        this._length = Math.max(this.length, endOffset);
-        return this;
-    }
-    fill(value = 0, len = 1) {
-        this.growSize(len);
-        this.buffer.fill(value, this.offset, this.offset + len);
-        this.offset += len;
-        return this;
-    }
-    writeCString(str, encoding) {
-        const len = str ? Buffer.byteLength(str, encoding) : 0;
-        this.growSize(len + 1);
-        if (str) {
-            this.buffer.write(str, this.offset, encoding);
-            this.offset += len;
-        }
-        this.writeUInt8(0);
-        return this;
-    }
-    writeLString(str, encoding) {
-        const len = str ? Buffer.byteLength(str, encoding) : 0;
-        this.growSize(len + 4);
-        this.writeInt32BE(str == null ? -1 : len);
-        if (str) {
-            if (encoding)
-                this.offset += this.buffer.write(str, this.offset, encoding);
-            else
-                this.offset += this.buffer.write(str, this.offset);
-        }
-        return this;
-    }
-    writeString(str, encoding) {
-        if (str) {
-            const len = Buffer.byteLength(str, encoding);
-            this.growSize(len);
-            this.offset += this.buffer.write(str, this.offset, encoding);
-        }
-        return this;
-    }
-    writeInt8(n) {
-        this.growSize(1);
-        this.buffer.writeInt8(n, this.offset);
-        this.offset++;
-        return this;
-    }
-    writeUInt8(n) {
-        this.growSize(1);
-        this.buffer.writeUInt8(n, this.offset);
-        this.offset++;
-        return this;
-    }
-    writeUInt16BE(n) {
-        this.growSize(2);
-        this.buffer.writeUInt16BE(n, this.offset);
-        this.offset += 2;
-        return this;
-    }
-    writeUInt32BE(n) {
-        this.growSize(4);
-        this.buffer.writeUInt32BE(n, this.offset);
-        this.offset += 4;
-        return this;
-    }
-    writeInt16BE(n) {
-        this.growSize(2);
-        this.buffer.writeInt16BE(n, this.offset);
-        this.offset += 2;
-        return this;
-    }
-    writeInt32BE(n) {
-        this.growSize(4);
-        this.buffer.writeInt32BE(n, this.offset);
-        this.offset += 4;
-        return this;
-    }
-    writeBigInt64BE(n) {
-        n = typeof n === 'bigint' ? n : BigInt(n);
-        this.growSize(8);
-        if (typeof this.buffer.writeBigInt64BE === 'function')
-            this.buffer.writeBigInt64BE(n, this.offset);
-        else
-            (0, bigint_methods_js_1.writeBigUInt64BE)(this.buffer, n, this.offset);
-        this.offset += 8;
-        return this;
-    }
-    writeFloatBE(n) {
-        this.growSize(4);
-        this.buffer.writeFloatBE(n, this.offset);
-        this.offset += 4;
-        return this;
-    }
-    writeDoubleBE(n) {
-        this.growSize(8);
-        this.buffer.writeDoubleBE(n, this.offset);
-        this.offset += 8;
-        return this;
-    }
-    writeBuffer(buffer) {
-        this.growSize(buffer.length);
-        buffer.copy(this.buffer, this.offset, 0, buffer.length);
-        this.offset += buffer.length;
-        return this;
-    }
-    _houseKeep() {
-        const needSize = this._stMaxPages * this.pageSize;
-        if (this.buffer.length > needSize)
-            this.buffer = Buffer.allocUnsafe(needSize);
-        this._stMaxPages = this.length ? Math.ceil(this.length / this.pageSize) : 1;
-    }
-}
-exports.SmartBuffer = SmartBuffer;
-SmartBuffer.DEFAULT_PAGE_SIZE = 4096;
-SmartBuffer.DEFAULT_MAX_SIZE = Math.min(Math.floor(os.totalmem() / 2), 1024 * 1024 * 1024 * 2);
Index: node_modules/postgresql-client/esm/protocol/smart-buffer.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/protocol/smart-buffer.js b/node_modules/postgresql-client/esm/protocol/smart-buffer.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/protocol/smart-buffer.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,168 +0,0 @@
-import * as os from 'os';
-import { writeBigUInt64BE } from '../util/bigint-methods.js';
-import { BufferReader } from './buffer-reader.js';
-export class SmartBuffer extends BufferReader {
-    constructor(cfg) {
-        // @ts-ignore
-        super(Buffer.allocUnsafe((cfg?.pageSize ? parseInt(cfg.pageSize, 10) : 0) || SmartBuffer.DEFAULT_PAGE_SIZE));
-        this._lastHouseKeep = 0;
-        this._stMaxPages = 1;
-        this._length = 0;
-        this._houseKeepInterval = cfg?.houseKeepInterval || 5000;
-        this.pageSize = this.buffer.length;
-        this.maxSize = cfg?.maxLength || SmartBuffer.DEFAULT_MAX_SIZE;
-        this._length = 0;
-    }
-    get capacity() {
-        return this.buffer.length;
-    }
-    get length() {
-        return this._length;
-    }
-    start() {
-        this.offset = 0;
-        this._length = 0;
-        if (this._houseKeepTimer) {
-            clearTimeout(this._houseKeepTimer);
-            this._houseKeepTimer = undefined;
-        }
-        return this;
-    }
-    flush() {
-        if (this._houseKeepTimer)
-            clearTimeout(this._houseKeepTimer);
-        const length = this.length;
-        this._length = 0;
-        const out = this.buffer.slice(0, length);
-        const pages = length ? Math.ceil(length / this.pageSize) : 1;
-        this._stMaxPages = Math.max(this._stMaxPages, pages);
-        if (this._lastHouseKeep < Date.now() + this._houseKeepInterval)
-            this._houseKeep();
-        this._houseKeepTimer = setTimeout(() => {
-            this._houseKeepTimer = undefined;
-            this._houseKeep();
-        }, this._houseKeepInterval).unref();
-        return out;
-    }
-    growSize(len) {
-        const endOffset = this.offset + len;
-        if (this.capacity < endOffset) {
-            if (endOffset > this.maxSize)
-                throw new Error('Buffer limit exceeded.');
-            const newSize = Math.ceil(endOffset / this.pageSize) * this.pageSize;
-            const newBuffer = Buffer.allocUnsafe(newSize);
-            this.buffer.copy(newBuffer);
-            this.buffer = newBuffer;
-        }
-        this._length = Math.max(this.length, endOffset);
-        return this;
-    }
-    fill(value = 0, len = 1) {
-        this.growSize(len);
-        this.buffer.fill(value, this.offset, this.offset + len);
-        this.offset += len;
-        return this;
-    }
-    writeCString(str, encoding) {
-        const len = str ? Buffer.byteLength(str, encoding) : 0;
-        this.growSize(len + 1);
-        if (str) {
-            this.buffer.write(str, this.offset, encoding);
-            this.offset += len;
-        }
-        this.writeUInt8(0);
-        return this;
-    }
-    writeLString(str, encoding) {
-        const len = str ? Buffer.byteLength(str, encoding) : 0;
-        this.growSize(len + 4);
-        this.writeInt32BE(str == null ? -1 : len);
-        if (str) {
-            if (encoding)
-                this.offset += this.buffer.write(str, this.offset, encoding);
-            else
-                this.offset += this.buffer.write(str, this.offset);
-        }
-        return this;
-    }
-    writeString(str, encoding) {
-        if (str) {
-            const len = Buffer.byteLength(str, encoding);
-            this.growSize(len);
-            this.offset += this.buffer.write(str, this.offset, encoding);
-        }
-        return this;
-    }
-    writeInt8(n) {
-        this.growSize(1);
-        this.buffer.writeInt8(n, this.offset);
-        this.offset++;
-        return this;
-    }
-    writeUInt8(n) {
-        this.growSize(1);
-        this.buffer.writeUInt8(n, this.offset);
-        this.offset++;
-        return this;
-    }
-    writeUInt16BE(n) {
-        this.growSize(2);
-        this.buffer.writeUInt16BE(n, this.offset);
-        this.offset += 2;
-        return this;
-    }
-    writeUInt32BE(n) {
-        this.growSize(4);
-        this.buffer.writeUInt32BE(n, this.offset);
-        this.offset += 4;
-        return this;
-    }
-    writeInt16BE(n) {
-        this.growSize(2);
-        this.buffer.writeInt16BE(n, this.offset);
-        this.offset += 2;
-        return this;
-    }
-    writeInt32BE(n) {
-        this.growSize(4);
-        this.buffer.writeInt32BE(n, this.offset);
-        this.offset += 4;
-        return this;
-    }
-    writeBigInt64BE(n) {
-        n = typeof n === 'bigint' ? n : BigInt(n);
-        this.growSize(8);
-        if (typeof this.buffer.writeBigInt64BE === 'function')
-            this.buffer.writeBigInt64BE(n, this.offset);
-        else
-            writeBigUInt64BE(this.buffer, n, this.offset);
-        this.offset += 8;
-        return this;
-    }
-    writeFloatBE(n) {
-        this.growSize(4);
-        this.buffer.writeFloatBE(n, this.offset);
-        this.offset += 4;
-        return this;
-    }
-    writeDoubleBE(n) {
-        this.growSize(8);
-        this.buffer.writeDoubleBE(n, this.offset);
-        this.offset += 8;
-        return this;
-    }
-    writeBuffer(buffer) {
-        this.growSize(buffer.length);
-        buffer.copy(this.buffer, this.offset, 0, buffer.length);
-        this.offset += buffer.length;
-        return this;
-    }
-    _houseKeep() {
-        const needSize = this._stMaxPages * this.pageSize;
-        if (this.buffer.length > needSize)
-            this.buffer = Buffer.allocUnsafe(needSize);
-        this._stMaxPages = this.length ? Math.ceil(this.length / this.pageSize) : 1;
-    }
-}
-SmartBuffer.DEFAULT_PAGE_SIZE = 4096;
-SmartBuffer.DEFAULT_MAX_SIZE = Math.min(Math.floor(os.totalmem() / 2), 1024 * 1024 * 1024 * 2);
Index: node_modules/postgresql-client/typings/interfaces/statement-prepare-options.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/interfaces/statement-prepare-options.d.ts b/node_modules/postgresql-client/typings/interfaces/statement-prepare-options.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/interfaces/statement-prepare-options.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,13 +0,0 @@
-import type { DataTypeMap } from '../data-type-map';
-import type { OID } from '../types.js';
-export interface StatementPrepareOptions {
-    /**
-     * Specifies data type for each parameter
-     */
-    paramTypes?: OID[];
-    /**
-     * Data type map instance
-     * @default GlobalTypeMap
-     */
-    typeMap?: DataTypeMap;
-}
Index: node_modules/postgresql-client/cjs/interfaces/statement-prepare-options.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/interfaces/statement-prepare-options.js b/node_modules/postgresql-client/cjs/interfaces/statement-prepare-options.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/interfaces/statement-prepare-options.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,2 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
Index: node_modules/postgresql-client/esm/interfaces/statement-prepare-options.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/interfaces/statement-prepare-options.js b/node_modules/postgresql-client/esm/interfaces/statement-prepare-options.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/interfaces/statement-prepare-options.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,1 +0,0 @@
-export {};
Index: node_modules/postgresql-client/typings/util/stringify-arrayliteral.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/util/stringify-arrayliteral.d.ts b/node_modules/postgresql-client/typings/util/stringify-arrayliteral.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/util/stringify-arrayliteral.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import { DataMappingOptions } from '../interfaces/data-mapping-options.js';
-import { EncodeTextFunction } from '../types.js';
-export declare function stringifyArrayLiteral(value: any[], options?: DataMappingOptions, encode?: EncodeTextFunction): string;
Index: node_modules/postgresql-client/cjs/util/stringify-arrayliteral.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/util/stringify-arrayliteral.js b/node_modules/postgresql-client/cjs/util/stringify-arrayliteral.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/util/stringify-arrayliteral.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,38 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.stringifyArrayLiteral = void 0;
-const array_calculatedim_js_1 = require("./array-calculatedim.js");
-function stringifyArrayLiteral(value, options, encode) {
-    const dim = (0, array_calculatedim_js_1.arrayCalculateDim)(value);
-    const writeDim = (arr, level) => {
-        const elemCount = dim[level];
-        const out = [];
-        for (let i = 0; i < elemCount; i++) {
-            let x = arr && arr[i];
-            if (level < dim.length - 1) {
-                if (x != null && !Array.isArray(x))
-                    x = [x];
-                out.push(writeDim(x, level + 1));
-                continue;
-            }
-            // if value is null
-            if (x == null) {
-                out.push('NULL');
-                continue;
-            }
-            if (Array.isArray(x)) {
-                out.push(stringifyArrayLiteral(x, options, encode));
-                continue;
-            }
-            if (encode)
-                x = encode(x, options || {});
-            out.push(escapeArrayItem('' + x));
-        }
-        return '{' + out.join(',') + '}';
-    };
-    return writeDim(value, 0);
-}
-exports.stringifyArrayLiteral = stringifyArrayLiteral;
-function escapeArrayItem(str) {
-    return '"' + str.replace(/\\/g, '\\\\').replace(/"/g, '\\"') + '"';
-}
Index: node_modules/postgresql-client/esm/util/stringify-arrayliteral.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/util/stringify-arrayliteral.js b/node_modules/postgresql-client/esm/util/stringify-arrayliteral.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/util/stringify-arrayliteral.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,34 +0,0 @@
-import { arrayCalculateDim } from './array-calculatedim.js';
-export function stringifyArrayLiteral(value, options, encode) {
-    const dim = arrayCalculateDim(value);
-    const writeDim = (arr, level) => {
-        const elemCount = dim[level];
-        const out = [];
-        for (let i = 0; i < elemCount; i++) {
-            let x = arr && arr[i];
-            if (level < dim.length - 1) {
-                if (x != null && !Array.isArray(x))
-                    x = [x];
-                out.push(writeDim(x, level + 1));
-                continue;
-            }
-            // if value is null
-            if (x == null) {
-                out.push('NULL');
-                continue;
-            }
-            if (Array.isArray(x)) {
-                out.push(stringifyArrayLiteral(x, options, encode));
-                continue;
-            }
-            if (encode)
-                x = encode(x, options || {});
-            out.push(escapeArrayItem('' + x));
-        }
-        return '{' + out.join(',') + '}';
-    };
-    return writeDim(value, 0);
-}
-function escapeArrayItem(str) {
-    return '"' + str.replace(/\\/g, '\\\\').replace(/"/g, '\\"') + '"';
-}
Index: node_modules/postgresql-client/typings/util/stringify-for-sql.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/util/stringify-for-sql.d.ts b/node_modules/postgresql-client/typings/util/stringify-for-sql.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/util/stringify-for-sql.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,4 +0,0 @@
-import { DataMappingOptions } from '../interfaces/data-mapping-options.js';
-import { EncodeTextFunction } from '../types.js';
-export declare function stringifyArrayForSQL(v: any[], options?: DataMappingOptions, encode?: EncodeTextFunction): string;
-export declare function stringifyValueForSQL(v: any, options?: DataMappingOptions, encode?: EncodeTextFunction): string;
Index: node_modules/postgresql-client/cjs/util/stringify-for-sql.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/util/stringify-for-sql.js b/node_modules/postgresql-client/cjs/util/stringify-for-sql.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/util/stringify-for-sql.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,30 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.stringifyValueForSQL = exports.stringifyArrayForSQL = void 0;
-const uuid_type_js_1 = require("../data-types/uuid-type.js");
-const escape_literal_js_1 = require("./escape-literal.js");
-function stringifyArrayForSQL(v, options, encode) {
-    const arr = v.map(x => stringifyValueForSQL(x, options, encode));
-    return 'ARRAY[' + arr.join(',') + ']';
-}
-exports.stringifyArrayForSQL = stringifyArrayForSQL;
-function stringifyValueForSQL(v, options, encode) {
-    if (v == null)
-        return 'null';
-    if (typeof v === 'boolean')
-        return v ? 'true' : 'false';
-    if (Array.isArray(v))
-        return stringifyArrayForSQL(v, options, encode);
-    if (encode)
-        v = encode(v, options || {});
-    if (typeof v === 'number')
-        return '' + v;
-    if (typeof v === 'bigint')
-        return v.toString();
-    if (typeof v === 'string' && uuid_type_js_1.UuidType.isType(v))
-        return (0, escape_literal_js_1.escapeLiteral)('' + v) + '::uuid';
-    if (typeof v === 'object')
-        return (0, escape_literal_js_1.escapeLiteral)(JSON.stringify(v)) + '::json';
-    return (0, escape_literal_js_1.escapeLiteral)('' + v);
-}
-exports.stringifyValueForSQL = stringifyValueForSQL;
Index: node_modules/postgresql-client/esm/util/stringify-for-sql.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/util/stringify-for-sql.js b/node_modules/postgresql-client/esm/util/stringify-for-sql.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/util/stringify-for-sql.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,25 +0,0 @@
-import { UuidType } from '../data-types/uuid-type.js';
-import { escapeLiteral } from './escape-literal.js';
-export function stringifyArrayForSQL(v, options, encode) {
-    const arr = v.map(x => stringifyValueForSQL(x, options, encode));
-    return 'ARRAY[' + arr.join(',') + ']';
-}
-export function stringifyValueForSQL(v, options, encode) {
-    if (v == null)
-        return 'null';
-    if (typeof v === 'boolean')
-        return v ? 'true' : 'false';
-    if (Array.isArray(v))
-        return stringifyArrayForSQL(v, options, encode);
-    if (encode)
-        v = encode(v, options || {});
-    if (typeof v === 'number')
-        return '' + v;
-    if (typeof v === 'bigint')
-        return v.toString();
-    if (typeof v === 'string' && UuidType.isType(v))
-        return escapeLiteral('' + v) + '::uuid';
-    if (typeof v === 'object')
-        return escapeLiteral(JSON.stringify(v)) + '::json';
-    return escapeLiteral('' + v);
-}
Index: node_modules/pg-pool/test/submittable.js
===================================================================
diff --git a/node_modules/pg-pool/test/submittable.js b/node_modules/pg-pool/test/submittable.js
deleted file mode 100644
--- a/node_modules/pg-pool/test/submittable.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,19 +0,0 @@
-'use strict'
-const Cursor = require('pg-cursor')
-const expect = require('expect.js')
-const describe = require('mocha').describe
-const it = require('mocha').it
-
-const Pool = require('../')
-
-describe('submittle', () => {
-  it('is returned from the query method', false, (done) => {
-    const pool = new Pool()
-    const cursor = pool.query(new Cursor('SELECT * from generate_series(0, 1000)'))
-    cursor.read((err, rows) => {
-      expect(err).to.be(undefined)
-      expect(!!rows).to.be.ok()
-      cursor.close(done)
-    })
-  })
-})
Index: node_modules/power-tasks/typings/task.d.ts
===================================================================
diff --git a/node_modules/power-tasks/typings/task.d.ts b/node_modules/power-tasks/typings/task.d.ts
deleted file mode 100644
--- a/node_modules/power-tasks/typings/task.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,125 +0,0 @@
-/// <reference types="node" />
-/// <reference types="node" />
-import { AsyncEventEmitter } from 'strict-typed-events';
-export type TaskFunction<T = any> = (args: TaskFunctionArgs) => T | Promise<T>;
-export type TaskLike<T = any> = Task<T> | TaskFunction;
-export type TaskStatus = 'idle' | 'waiting' | 'running' | 'fulfilled' | 'failed' | 'aborting' | 'aborted';
-export interface TaskFunctionArgs {
-    task: Task;
-    signal: AbortSignal;
-}
-export interface TaskOptions {
-    /**
-     * Id of the task.
-     */
-    id?: any;
-    /**
-     * Name of the task. This value is used to for dependency tree
-     */
-    name?: string;
-    /**
-     * Arguments to be passed to task function.
-     */
-    args?: any[];
-    /**
-     * The list of child tasks
-     */
-    children?: TaskLike[] | (() => TaskLike[] | Promise<TaskLike[]>);
-    /**
-     * The list of tasks to be waited before running this task.
-     */
-    dependencies?: (Task | string)[];
-    /**
-     * Number of concurrent tasks to run in parallel
-     */
-    concurrency?: number;
-    /**
-     * Abort after first task failure
-     */
-    bail?: boolean;
-    /**
-     * Run tasks one by one
-     */
-    serial?: boolean;
-    /**
-     * Run the task exclusively. If set true, the tasks in the queue waits for this task to complete
-     * even concurrency is greater than 1
-     */
-    exclusive?: boolean;
-    /**
-     * Time in milliseconds to wait for aborting tasks
-     */
-    abortTimeout?: number;
-    onStart?: (task: Task) => void;
-    onFinish?: (task: Task) => void;
-    onRun?: (task: Task) => void;
-    onStatusChange?: (task: Task) => void;
-    onUpdate?: (task: Task, properties: string[]) => void;
-    onUpdateRecursive?: (task: Task, properties: string[]) => void;
-}
-export interface TaskUpdateValues {
-    status?: TaskStatus;
-    message?: string;
-    error?: any;
-    result?: any;
-    waitingFor?: boolean;
-}
-declare class TaskContext {
-    executingTasks: Set<Task<any>>;
-    queue: Set<Task<any>>;
-    concurrency: number;
-    triggerPulse: () => void;
-}
-declare const taskContextKey: unique symbol;
-export declare class Task<T = any> extends AsyncEventEmitter {
-    protected [taskContextKey]?: TaskContext;
-    protected _id: string;
-    protected _options: TaskOptions;
-    protected _executeFn?: TaskFunction;
-    protected _children?: Task[];
-    protected _dependencies?: Task[];
-    protected _status: TaskStatus;
-    protected _message?: string;
-    protected _executeDuration?: number;
-    protected _error?: any;
-    protected _result?: T;
-    protected _isManaged?: boolean;
-    protected _abortController: AbortController;
-    protected _abortTimer?: NodeJS.Timeout;
-    protected _waitingFor?: Set<Task>;
-    protected _failedChildren?: Task[];
-    protected _abortedChildren?: Task[];
-    protected _failedDependencies?: Task[];
-    protected _childrenLeft?: Set<Task>;
-    constructor(children: TaskLike[], options?: Omit<TaskOptions, 'children'>);
-    constructor(execute: TaskFunction, options?: TaskOptions);
-    get id(): string;
-    get name(): string | undefined;
-    get children(): Task[] | undefined;
-    get options(): TaskOptions;
-    get message(): string;
-    get status(): TaskStatus;
-    get isStarted(): boolean;
-    get isFinished(): boolean;
-    get isFailed(): boolean;
-    get executeDuration(): number | undefined;
-    get result(): any;
-    get error(): any;
-    get dependencies(): Task[] | undefined;
-    get failedChildren(): Task[] | undefined;
-    get failedDependencies(): Task[] | undefined;
-    get needWaiting(): boolean;
-    getWaitingTasks(): Task[] | undefined;
-    abort(): this;
-    start(): this;
-    toPromise(): Promise<T>;
-    protected _determineChildrenTree(callback: (err?: any) => void): void;
-    protected _determineChildrenDependencies(scope: Task[]): void;
-    protected _captureDependencies(): void;
-    protected _start(): void;
-    protected _startChildren(): void;
-    protected _pulse(): void;
-    protected _update(prop: TaskUpdateValues): void;
-    protected _abortChildren(): Promise<void>;
-}
-export {};
Index: node_modules/power-tasks/typings/task-queue.d.ts
===================================================================
diff --git a/node_modules/power-tasks/typings/task-queue.d.ts b/node_modules/power-tasks/typings/task-queue.d.ts
deleted file mode 100644
--- a/node_modules/power-tasks/typings/task-queue.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,29 +0,0 @@
-import { AsyncEventEmitter } from 'strict-typed-events';
-import DoublyLinked from 'doublylinked';
-import { Task, TaskLike } from './task.js';
-export interface TaskQueueOptions {
-    maxQueue?: number;
-    concurrency?: number;
-    paused?: boolean;
-}
-export declare class TaskQueue extends AsyncEventEmitter {
-    maxQueue?: number;
-    concurrency?: number;
-    protected _paused: boolean;
-    protected _queue: DoublyLinked<Task<any>>;
-    protected _running: Set<Task<any>>;
-    constructor(options?: TaskQueueOptions);
-    get size(): number;
-    get running(): number;
-    get queued(): number;
-    get paused(): boolean;
-    pause(): void;
-    resume(): void;
-    clearQueue(): void;
-    abortAll(): void;
-    wait(): Promise<void>;
-    enqueuePrepend<T = any>(task: TaskLike<T>): Task<T>;
-    enqueue<T = any>(task: TaskLike<T>): Task<T>;
-    protected _enqueue<T = any>(task: TaskLike, prepend: boolean): Task<T>;
-    protected _pulse(): void;
-}
Index: node_modules/postgresql-client/typings/data-types/time-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/time-type.d.ts b/node_modules/postgresql-client/typings/data-types/time-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/time-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const TimeType: DataType;
-export declare const ArrayTimeType: DataType;
Index: node_modules/postgresql-client/cjs/data-types/time-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/time-type.js b/node_modules/postgresql-client/cjs/data-types/time-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/time-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,54 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayTimeType = exports.TimeType = void 0;
-const constants_js_1 = require("../constants.js");
-const parse_time_js_1 = require("../util/parse-time.js");
-const timeMul = 4294967296;
-exports.TimeType = {
-    name: 'time',
-    oid: constants_js_1.DataTypeOIDs.time,
-    jsType: 'string',
-    parseBinary(v, options) {
-        const fetchAsString = options.fetchAsString && options.fetchAsString.includes(constants_js_1.DataTypeOIDs.time);
-        const hi = v.readInt32BE();
-        const lo = v.readUInt32BE(4);
-        let d = new Date((lo + hi * timeMul) / 1000);
-        if (fetchAsString || !options.utcDates)
-            d = new Date(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate(), d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds());
-        return fetchAsString ? dateToTimeString(d) : d;
-    },
-    encodeBinary(buf, v, options) {
-        if (typeof v === 'string')
-            v = (0, parse_time_js_1.parseTime)(v, false, options.utcDates);
-        if (!(v instanceof Date))
-            v = new Date(v);
-        // Postgresql ignores timezone data so we are
-        let n = options.utcDates ? v.getTime() : v.getTime() - v.getTimezoneOffset() * 60 * 1000;
-        n = n * 1000;
-        const hi = Math.floor(n / timeMul);
-        const lo = n - hi * timeMul;
-        buf.writeInt32BE(hi);
-        buf.writeUInt32BE(lo);
-    },
-    parseText(v, options) {
-        if (options.fetchAsString && options.fetchAsString.includes(constants_js_1.DataTypeOIDs.time))
-            return v;
-        return (0, parse_time_js_1.parseTime)(v, false, options.utcDates);
-    },
-    isType(v) {
-        return ((v instanceof Date && v.getFullYear() === 1970 && v.getMonth() === 0 && v.getDate() === 1) ||
-            (typeof v === 'string' && parse_time_js_1.STRICT_TIME_PATTERN.test(v)));
-    },
-};
-function padZero(v) {
-    return v < 9 ? '0' + v : '' + v;
-}
-function dateToTimeString(d) {
-    return padZero(d.getHours()) + ':' + padZero(d.getMinutes()) + ':' + padZero(d.getSeconds());
-}
-exports.ArrayTimeType = {
-    ...exports.TimeType,
-    name: '_time',
-    oid: constants_js_1.DataTypeOIDs._time,
-    elementsOID: constants_js_1.DataTypeOIDs.time,
-};
Index: node_modules/postgresql-client/esm/data-types/time-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/time-type.js b/node_modules/postgresql-client/esm/data-types/time-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/time-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,51 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-import { parseTime, STRICT_TIME_PATTERN } from '../util/parse-time.js';
-const timeMul = 4294967296;
-export const TimeType = {
-    name: 'time',
-    oid: DataTypeOIDs.time,
-    jsType: 'string',
-    parseBinary(v, options) {
-        const fetchAsString = options.fetchAsString && options.fetchAsString.includes(DataTypeOIDs.time);
-        const hi = v.readInt32BE();
-        const lo = v.readUInt32BE(4);
-        let d = new Date((lo + hi * timeMul) / 1000);
-        if (fetchAsString || !options.utcDates)
-            d = new Date(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate(), d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds());
-        return fetchAsString ? dateToTimeString(d) : d;
-    },
-    encodeBinary(buf, v, options) {
-        if (typeof v === 'string')
-            v = parseTime(v, false, options.utcDates);
-        if (!(v instanceof Date))
-            v = new Date(v);
-        // Postgresql ignores timezone data so we are
-        let n = options.utcDates ? v.getTime() : v.getTime() - v.getTimezoneOffset() * 60 * 1000;
-        n = n * 1000;
-        const hi = Math.floor(n / timeMul);
-        const lo = n - hi * timeMul;
-        buf.writeInt32BE(hi);
-        buf.writeUInt32BE(lo);
-    },
-    parseText(v, options) {
-        if (options.fetchAsString && options.fetchAsString.includes(DataTypeOIDs.time))
-            return v;
-        return parseTime(v, false, options.utcDates);
-    },
-    isType(v) {
-        return ((v instanceof Date && v.getFullYear() === 1970 && v.getMonth() === 0 && v.getDate() === 1) ||
-            (typeof v === 'string' && STRICT_TIME_PATTERN.test(v)));
-    },
-};
-function padZero(v) {
-    return v < 9 ? '0' + v : '' + v;
-}
-function dateToTimeString(d) {
-    return padZero(d.getHours()) + ':' + padZero(d.getMinutes()) + ':' + padZero(d.getSeconds());
-}
-export const ArrayTimeType = {
-    ...TimeType,
-    name: '_time',
-    oid: DataTypeOIDs._time,
-    elementsOID: DataTypeOIDs.time,
-};
Index: node_modules/postgresql-client/typings/data-types/timestamp-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/timestamp-type.d.ts b/node_modules/postgresql-client/typings/data-types/timestamp-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/timestamp-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const TimestampType: DataType;
-export declare const ArrayTimestampType: DataType;
Index: node_modules/postgresql-client/cjs/data-types/timestamp-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/timestamp-type.js b/node_modules/postgresql-client/cjs/data-types/timestamp-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/timestamp-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,81 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayTimestampType = exports.TimestampType = void 0;
-const constants_js_1 = require("../constants.js");
-const parse_datetime_js_1 = require("../util/parse-datetime.js");
-const timeShift = 946684800000;
-const timeMul = 4294967296;
-exports.TimestampType = {
-    name: 'timestamp',
-    oid: constants_js_1.DataTypeOIDs.timestamp,
-    jsType: 'Date',
-    parseBinary(v, options) {
-        const fetchAsString = options.fetchAsString && options.fetchAsString.includes(constants_js_1.DataTypeOIDs.timestamp);
-        const hi = v.readInt32BE();
-        const lo = v.readUInt32BE(4);
-        if (lo === 0xffffffff && hi === 0x7fffffff)
-            return fetchAsString ? 'infinity' : Infinity;
-        if (lo === 0x00000000 && hi === -0x80000000)
-            return fetchAsString ? '-infinity' : -Infinity;
-        // Shift from 2000 to 1970
-        let d = new Date((lo + hi * timeMul) / 1000 + timeShift);
-        if (fetchAsString || !options.utcDates)
-            d = new Date(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate(), d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds());
-        return fetchAsString ? dateToTimestampString(d) : d;
-    },
-    encodeBinary(buf, v, options) {
-        if (typeof v === 'string')
-            v = (0, parse_datetime_js_1.parseDateTime)(v, true, false, options.utcDates);
-        if (v === Infinity) {
-            buf.writeInt32BE(0x7fffffff); // hi
-            buf.writeUInt32BE(0xffffffff); // lo
-            return;
-        }
-        if (v === -Infinity) {
-            buf.writeInt32BE(-0x80000000); // hi
-            buf.writeUInt32BE(0x00000000); // lo
-            return;
-        }
-        if (!(v instanceof Date))
-            v = new Date(v);
-        // Postgresql ignores timezone data so we are
-        let n = options.utcDates ? v.getTime() : v.getTime() - v.getTimezoneOffset() * 60 * 1000;
-        n = (n - timeShift) * 1000;
-        const hi = Math.floor(n / timeMul);
-        const lo = n - hi * timeMul;
-        buf.writeInt32BE(hi);
-        buf.writeUInt32BE(lo);
-    },
-    parseText(v, options) {
-        if (options.fetchAsString && options.fetchAsString.includes(constants_js_1.DataTypeOIDs.timestamp))
-            return v;
-        return (0, parse_datetime_js_1.parseDateTime)(v, true, false, options.utcDates);
-    },
-    isType(v) {
-        return (v instanceof Date &&
-            !(v.getFullYear() === 1970 && v.getMonth() === 0 && v.getDate() === 1) &&
-            !(v.getHours() === 0 && v.getMinutes() === 0 && v.getSeconds() === 0 && v.getMilliseconds() === 0));
-    },
-};
-function padZero(v) {
-    return v < 9 ? '0' + v : '' + v;
-}
-function dateToTimestampString(d) {
-    return (d.getFullYear() +
-        '-' +
-        padZero(d.getMonth() + 1) +
-        '-' +
-        padZero(d.getDate()) +
-        ' ' +
-        padZero(d.getHours()) +
-        ':' +
-        padZero(d.getMinutes()) +
-        ':' +
-        padZero(d.getSeconds()));
-}
-exports.ArrayTimestampType = {
-    ...exports.TimestampType,
-    name: '_timestamp',
-    oid: constants_js_1.DataTypeOIDs._timestamp,
-    elementsOID: constants_js_1.DataTypeOIDs.timestamp,
-};
Index: node_modules/postgresql-client/esm/data-types/timestamp-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/timestamp-type.js b/node_modules/postgresql-client/esm/data-types/timestamp-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/timestamp-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,78 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-import { parseDateTime } from '../util/parse-datetime.js';
-const timeShift = 946684800000;
-const timeMul = 4294967296;
-export const TimestampType = {
-    name: 'timestamp',
-    oid: DataTypeOIDs.timestamp,
-    jsType: 'Date',
-    parseBinary(v, options) {
-        const fetchAsString = options.fetchAsString && options.fetchAsString.includes(DataTypeOIDs.timestamp);
-        const hi = v.readInt32BE();
-        const lo = v.readUInt32BE(4);
-        if (lo === 0xffffffff && hi === 0x7fffffff)
-            return fetchAsString ? 'infinity' : Infinity;
-        if (lo === 0x00000000 && hi === -0x80000000)
-            return fetchAsString ? '-infinity' : -Infinity;
-        // Shift from 2000 to 1970
-        let d = new Date((lo + hi * timeMul) / 1000 + timeShift);
-        if (fetchAsString || !options.utcDates)
-            d = new Date(d.getUTCFullYear(), d.getUTCMonth(), d.getUTCDate(), d.getUTCHours(), d.getUTCMinutes(), d.getUTCSeconds(), d.getUTCMilliseconds());
-        return fetchAsString ? dateToTimestampString(d) : d;
-    },
-    encodeBinary(buf, v, options) {
-        if (typeof v === 'string')
-            v = parseDateTime(v, true, false, options.utcDates);
-        if (v === Infinity) {
-            buf.writeInt32BE(0x7fffffff); // hi
-            buf.writeUInt32BE(0xffffffff); // lo
-            return;
-        }
-        if (v === -Infinity) {
-            buf.writeInt32BE(-0x80000000); // hi
-            buf.writeUInt32BE(0x00000000); // lo
-            return;
-        }
-        if (!(v instanceof Date))
-            v = new Date(v);
-        // Postgresql ignores timezone data so we are
-        let n = options.utcDates ? v.getTime() : v.getTime() - v.getTimezoneOffset() * 60 * 1000;
-        n = (n - timeShift) * 1000;
-        const hi = Math.floor(n / timeMul);
-        const lo = n - hi * timeMul;
-        buf.writeInt32BE(hi);
-        buf.writeUInt32BE(lo);
-    },
-    parseText(v, options) {
-        if (options.fetchAsString && options.fetchAsString.includes(DataTypeOIDs.timestamp))
-            return v;
-        return parseDateTime(v, true, false, options.utcDates);
-    },
-    isType(v) {
-        return (v instanceof Date &&
-            !(v.getFullYear() === 1970 && v.getMonth() === 0 && v.getDate() === 1) &&
-            !(v.getHours() === 0 && v.getMinutes() === 0 && v.getSeconds() === 0 && v.getMilliseconds() === 0));
-    },
-};
-function padZero(v) {
-    return v < 9 ? '0' + v : '' + v;
-}
-function dateToTimestampString(d) {
-    return (d.getFullYear() +
-        '-' +
-        padZero(d.getMonth() + 1) +
-        '-' +
-        padZero(d.getDate()) +
-        ' ' +
-        padZero(d.getHours()) +
-        ':' +
-        padZero(d.getMinutes()) +
-        ':' +
-        padZero(d.getSeconds()));
-}
-export const ArrayTimestampType = {
-    ...TimestampType,
-    name: '_timestamp',
-    oid: DataTypeOIDs._timestamp,
-    elementsOID: DataTypeOIDs.timestamp,
-};
Index: node_modules/postgresql-client/typings/data-types/timestamptz-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/timestamptz-type.d.ts b/node_modules/postgresql-client/typings/data-types/timestamptz-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/timestamptz-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import { DataType } from '../interfaces/data-type.js';
-export declare const TimestamptzType: DataType;
-export declare const ArrayTimestamptzType: DataType;
Index: node_modules/postgresql-client/cjs/data-types/timestamptz-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/timestamptz-type.js b/node_modules/postgresql-client/cjs/data-types/timestamptz-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/timestamptz-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,73 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayTimestamptzType = exports.TimestamptzType = void 0;
-const constants_js_1 = require("../constants.js");
-const parse_datetime_js_1 = require("../util/parse-datetime.js");
-const timeShift = 946684800000;
-const timeMul = 4294967296;
-exports.TimestamptzType = {
-    name: 'timestamptz',
-    oid: constants_js_1.DataTypeOIDs.timestamptz,
-    jsType: 'Date',
-    parseBinary(v, options) {
-        const fetchAsString = options.fetchAsString && options.fetchAsString.includes(constants_js_1.DataTypeOIDs.timestamptz);
-        const hi = v.readInt32BE();
-        const lo = v.readUInt32BE(4);
-        if (lo === 0xffffffff && hi === 0x7fffffff)
-            return fetchAsString ? 'infinity' : Infinity;
-        if (lo === 0x00000000 && hi === -0x80000000)
-            return fetchAsString ? '-infinity' : -Infinity;
-        // Shift from 2000 to 1970
-        let d = new Date((lo + hi * timeMul) / 1000 + timeShift);
-        if (fetchAsString || !options.utcDates)
-            d = new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds(), d.getMilliseconds());
-        return fetchAsString ? dateToTimestamptzString(d) : d;
-    },
-    encodeBinary(buf, v, options) {
-        if (typeof v === 'string')
-            v = (0, parse_datetime_js_1.parseDateTime)(v, true, true, options.utcDates);
-        if (v === Infinity) {
-            buf.writeInt32BE(0x7fffffff); // hi
-            buf.writeUInt32BE(0xffffffff); // lo
-            return;
-        }
-        if (v === -Infinity) {
-            buf.writeInt32BE(-0x80000000); // hi
-            buf.writeUInt32BE(0x00000000); // lo
-            return;
-        }
-        if (!(v instanceof Date))
-            v = new Date(v);
-        let n = v.getTime();
-        n = (n - timeShift) * 1000;
-        const hi = Math.floor(n / timeMul);
-        const lo = n - hi * timeMul;
-        buf.writeInt32BE(hi);
-        buf.writeUInt32BE(lo);
-    },
-    parseText(v, options) {
-        const d = (0, parse_datetime_js_1.parseDateTime)(v, true, true, options.utcDates);
-        if (options.fetchAsString && options.fetchAsString.includes(constants_js_1.DataTypeOIDs.timestamptz)) {
-            if (d instanceof Date)
-                return dateToTimestamptzString(d);
-            if (d === Infinity)
-                return 'infinity';
-            if (d === -Infinity)
-                return '-infinity';
-            return '';
-        }
-        return d;
-    },
-    isType(v) {
-        return v instanceof Date;
-    },
-};
-function dateToTimestamptzString(d) {
-    return d.toISOString().replace('T', ' ');
-}
-exports.ArrayTimestamptzType = {
-    ...exports.TimestamptzType,
-    name: '_timestamptz',
-    oid: constants_js_1.DataTypeOIDs._timestamptz,
-    elementsOID: constants_js_1.DataTypeOIDs.timestamptz,
-};
Index: node_modules/postgresql-client/esm/data-types/timestamptz-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/timestamptz-type.js b/node_modules/postgresql-client/esm/data-types/timestamptz-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/timestamptz-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,70 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-import { parseDateTime } from '../util/parse-datetime.js';
-const timeShift = 946684800000;
-const timeMul = 4294967296;
-export const TimestamptzType = {
-    name: 'timestamptz',
-    oid: DataTypeOIDs.timestamptz,
-    jsType: 'Date',
-    parseBinary(v, options) {
-        const fetchAsString = options.fetchAsString && options.fetchAsString.includes(DataTypeOIDs.timestamptz);
-        const hi = v.readInt32BE();
-        const lo = v.readUInt32BE(4);
-        if (lo === 0xffffffff && hi === 0x7fffffff)
-            return fetchAsString ? 'infinity' : Infinity;
-        if (lo === 0x00000000 && hi === -0x80000000)
-            return fetchAsString ? '-infinity' : -Infinity;
-        // Shift from 2000 to 1970
-        let d = new Date((lo + hi * timeMul) / 1000 + timeShift);
-        if (fetchAsString || !options.utcDates)
-            d = new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds(), d.getMilliseconds());
-        return fetchAsString ? dateToTimestamptzString(d) : d;
-    },
-    encodeBinary(buf, v, options) {
-        if (typeof v === 'string')
-            v = parseDateTime(v, true, true, options.utcDates);
-        if (v === Infinity) {
-            buf.writeInt32BE(0x7fffffff); // hi
-            buf.writeUInt32BE(0xffffffff); // lo
-            return;
-        }
-        if (v === -Infinity) {
-            buf.writeInt32BE(-0x80000000); // hi
-            buf.writeUInt32BE(0x00000000); // lo
-            return;
-        }
-        if (!(v instanceof Date))
-            v = new Date(v);
-        let n = v.getTime();
-        n = (n - timeShift) * 1000;
-        const hi = Math.floor(n / timeMul);
-        const lo = n - hi * timeMul;
-        buf.writeInt32BE(hi);
-        buf.writeUInt32BE(lo);
-    },
-    parseText(v, options) {
-        const d = parseDateTime(v, true, true, options.utcDates);
-        if (options.fetchAsString && options.fetchAsString.includes(DataTypeOIDs.timestamptz)) {
-            if (d instanceof Date)
-                return dateToTimestamptzString(d);
-            if (d === Infinity)
-                return 'infinity';
-            if (d === -Infinity)
-                return '-infinity';
-            return '';
-        }
-        return d;
-    },
-    isType(v) {
-        return v instanceof Date;
-    },
-};
-function dateToTimestamptzString(d) {
-    return d.toISOString().replace('T', ' ');
-}
-export const ArrayTimestamptzType = {
-    ...TimestamptzType,
-    name: '_timestamptz',
-    oid: DataTypeOIDs._timestamptz,
-    elementsOID: DataTypeOIDs.timestamptz,
-};
Index: node_modules/define-data-property/tsconfig.json
===================================================================
diff --git a/node_modules/define-data-property/tsconfig.json b/node_modules/define-data-property/tsconfig.json
deleted file mode 100644
--- a/node_modules/define-data-property/tsconfig.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,59 +0,0 @@
-{
-  "compilerOptions": {
-    /* Visit https://aka.ms/tsconfig to read more about this file */
-
-    /* Projects */
-
-    /* Language and Environment */
-    "target": "es2022",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
-    // "lib": [],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */
-    // "noLib": true,                                    /* Disable including any library files, including the default lib.d.ts. */
-    "useDefineForClassFields": true,                     /* Emit ECMAScript-standard-compliant class fields. */
-    // "moduleDetection": "auto",                        /* Control what method is used to detect module-format JS files. */
-
-    /* Modules */
-    "module": "commonjs",                                /* Specify what module code is generated. */
-    // "rootDir": "./",                                  /* Specify the root folder within your source files. */
-    // "moduleResolution": "node10",                     /* Specify how TypeScript looks up a file from a given module specifier. */
-    // "baseUrl": "./",                                  /* Specify the base directory to resolve non-relative module names. */
-    // "paths": {},                                      /* Specify a set of entries that re-map imports to additional lookup locations. */
-    // "rootDirs": [],                                   /* Allow multiple folders to be treated as one when resolving modules. */
-    "typeRoots": ["types"],                              /* Specify multiple folders that act like './node_modules/@types'. */
-    "resolveJsonModule": true,                           /* Enable importing .json files. */
-
-    /* JavaScript Support */
-    "allowJs": true,                                    /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */
-    "checkJs": true,                                    /* Enable error reporting in type-checked JavaScript files. */
-    "maxNodeModuleJsDepth": 1,                          /* Specify the maximum folder depth used for checking JavaScript files from 'node_modules'. Only applicable with 'allowJs'. */
-
-    /* Emit */
-    "declaration": true,                                 /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
-    "declarationMap": true,                              /* Create sourcemaps for d.ts files. */
-    // "emitDeclarationOnly": true,                      /* Only output d.ts files and not JavaScript files. */
-    "noEmit": true,                                      /* Disable emitting files from a compilation. */
-
-    /* Interop Constraints */
-    "allowSyntheticDefaultImports": true,                /* Allow 'import x from y' when a module doesn't have a default export. */
-    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
-    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
-
-    /* Type Checking */
-    "strict": true,                                      /* Enable all strict type-checking options. */
-    "noImplicitAny": true,                               /* Enable error reporting for expressions and declarations with an implied 'any' type. */
-    "noImplicitThis": true,                              /* Enable error reporting when 'this' is given the type 'any'. */
-    "useUnknownInCatchVariables": true,                  /* Default catch clause variables as 'unknown' instead of 'any'. */
-    "noUnusedLocals": true,                              /* Enable error reporting when local variables aren't read. */
-    "noUnusedParameters": true,                          /* Raise an error when a function parameter isn't read. */
-    "noImplicitReturns": true,                           /* Enable error reporting for codepaths that do not explicitly return in a function. */
-    "noFallthroughCasesInSwitch": true,                  /* Enable error reporting for fallthrough cases in switch statements. */
-    "noUncheckedIndexedAccess": true,                    /* Add 'undefined' to a type when accessed using an index. */
-    "noImplicitOverride": true,                          /* Ensure overriding members in derived classes are marked with an override modifier. */
-    // "noPropertyAccessFromIndexSignature": true,       /* Enforces using indexed accessors for keys declared using an indexed type. */
-
-    /* Completeness */
-    // "skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
-  },
-  "exclude": [
-    "coverage"
-  ]
-}
Index: node_modules/has-proto/tsconfig.json
===================================================================
diff --git a/node_modules/has-proto/tsconfig.json b/node_modules/has-proto/tsconfig.json
deleted file mode 100644
--- a/node_modules/has-proto/tsconfig.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,49 +0,0 @@
-{
-  "compilerOptions": {
-    /* Visit https://aka.ms/tsconfig to read more about this file */
-
-    /* Projects */
-
-    /* Language and Environment */
-    "target": "ESNext",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
-    // "lib": [],                                        /* Specify a set of bundled library declaration files that describe the target runtime environment. */
-    // "noLib": true,                                    /* Disable including any library files, including the default lib.d.ts. */
-    "useDefineForClassFields": true,                     /* Emit ECMAScript-standard-compliant class fields. */
-    // "moduleDetection": "auto",                        /* Control what method is used to detect module-format JS files. */
-
-    /* Modules */
-    "module": "commonjs",                                /* Specify what module code is generated. */
-    // "rootDir": "./",                                  /* Specify the root folder within your source files. */
-    // "moduleResolution": "node10",                     /* Specify how TypeScript looks up a file from a given module specifier. */
-    // "baseUrl": "./",                                  /* Specify the base directory to resolve non-relative module names. */
-    // "paths": {},                                      /* Specify a set of entries that re-map imports to additional lookup locations. */
-    // "rootDirs": [],                                   /* Allow multiple folders to be treated as one when resolving modules. */
-    "typeRoots": ["types"],                              /* Specify multiple folders that act like './node_modules/@types'. */
-    "resolveJsonModule": true,                           /* Enable importing .json files. */
-    // "allowArbitraryExtensions": true,                 /* Enable importing files with any extension, provided a declaration file is present. */
-
-    /* JavaScript Support */
-    "allowJs": true,                                     /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */
-    "checkJs": true,                                     /* Enable error reporting in type-checked JavaScript files. */
-    "maxNodeModuleJsDepth": 0,                           /* Specify the maximum folder depth used for checking JavaScript files from 'node_modules'. Only applicable with 'allowJs'. */
-
-    /* Emit */
-    "declaration": true,                                 /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
-    "declarationMap": true,                              /* Create sourcemaps for d.ts files. */
-    "noEmit": true,                                      /* Disable emitting files from a compilation. */
-
-    /* Interop Constraints */
-    "allowSyntheticDefaultImports": true,                /* Allow 'import x from y' when a module doesn't have a default export. */
-    "esModuleInterop": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */
-    "forceConsistentCasingInFileNames": true,            /* Ensure that casing is correct in imports. */
-
-    /* Type Checking */
-    "strict": true,                                      /* Enable all strict type-checking options. */
-
-    /* Completeness */
-    //"skipLibCheck": true                                 /* Skip type checking all .d.ts files. */
-  },
-  "exclude": [
-    "coverage"
-  ]
-}
Index: node_modules/set-function-length/tsconfig.json
===================================================================
diff --git a/node_modules/set-function-length/tsconfig.json b/node_modules/set-function-length/tsconfig.json
deleted file mode 100644
--- a/node_modules/set-function-length/tsconfig.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,9 +0,0 @@
-{
-	"extends": "@ljharb/tsconfig",
-	"compilerOptions": {
-		"target": "es2021",
-	},
-	"exclude": [
-		"coverage",
-	],
-}
Index: node_modules/strict-typed-events/typings/typed-events.d.ts
===================================================================
diff --git a/node_modules/strict-typed-events/typings/typed-events.d.ts b/node_modules/strict-typed-events/typings/typed-events.d.ts
deleted file mode 100644
--- a/node_modules/strict-typed-events/typings/typed-events.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,45 +0,0 @@
-import type { FunctionKeys, Type } from 'ts-gems';
-export type Listener<TArgs extends any[] = any[]> = (...args: TArgs) => any;
-export declare function TypedEventEmitterClass<TEventRecord, TEmitRecord = TEventRecord, TEmitter = any>(emitter: TEmitter): Type<TypedEventEmitter<TEmitter, TEventRecord, TEmitRecord>>;
-export type TypedEventEmitter<TEmitter, TEventRecord, TEmitRecord = TEventRecord> = _TypedEventEmitter<TEmitter, TEventRecord, TEmitRecord>;
-type _TypedEventEmitter<TEmitter, TEventRecord, TEmitRecord, TEventEmitterOverride = _EventEmitterOverride<TEventRecord, TEmitRecord>, TKeysToOverride extends keyof TEventEmitterOverride = Extract<keyof TEventEmitterOverride, keyof TEmitter>> = Pick<TEmitter, Exclude<keyof TEmitter, TKeysToOverride>> & Pick<TEventEmitterOverride, TKeysToOverride>;
-type _ListenerParameters<T> = [T] extends [(...args: infer U) => any] ? U : [T] extends [void] ? [] : [T];
-declare const _assignmentCompatibilityHack: unique symbol;
-type _EventEmitterOverride<TEventRecord, TEmitRecord = TEventRecord, TEventRecordKeys extends keyof TEventRecord = Extract<keyof TEventRecord, FunctionKeys<TEventRecord>>, TEmitRecordKeys extends keyof TEmitRecord = Extract<keyof TEmitRecord, FunctionKeys<TEmitRecord>>> = {
-    addListener<P extends TEventRecordKeys, TThis>(this: TThis, event: P, listener: Listener<_ListenerParameters<TEventRecord[P]>>): TThis;
-    addListener(event: typeof _assignmentCompatibilityHack, listener: Listener): void;
-    addEventListener<P extends TEventRecordKeys, TThis>(this: TThis, event: P, listener: Listener<_ListenerParameters<TEventRecord[P]>>): TThis;
-    addEventListener(event: typeof _assignmentCompatibilityHack, listener: Listener): void;
-    emit<P extends TEmitRecordKeys, TThis>(this: TThis, event: P, ...args: _ListenerParameters<TEmitRecord[P]>): boolean;
-    emit(event: typeof _assignmentCompatibilityHack, ...args: any[]): void;
-    emitAsync<P extends TEmitRecordKeys, TThis>(this: TThis, event: P, ...args: _ListenerParameters<TEmitRecord[P]>): Promise<boolean>;
-    emitAsync(event: typeof _assignmentCompatibilityHack, ...args: any[]): Promise<void>;
-    emitAsyncSerial<P extends TEmitRecordKeys, TThis>(this: TThis, event: P, ...args: _ListenerParameters<TEmitRecord[P]>): Promise<boolean>;
-    emitAsyncSerial(event: typeof _assignmentCompatibilityHack, ...args: any[]): Promise<void>;
-    on<P extends TEventRecordKeys, TThis>(this: TThis, event: P, listener: Listener<_ListenerParameters<TEventRecord[P]>>): TThis;
-    on(event: typeof _assignmentCompatibilityHack, listener: Listener): void;
-    once<P extends TEventRecordKeys, TThis>(this: TThis, event: P, listener: Listener<_ListenerParameters<TEventRecord[P]>>): TThis;
-    once(event: typeof _assignmentCompatibilityHack, listener: Listener): void;
-    removeListener<TThis>(this: TThis, event: TEventRecordKeys, listener: Listener): TThis;
-    removeListener(event: typeof _assignmentCompatibilityHack, listener: Listener): void;
-    removeEventListener<TThis>(this: TThis, event: TEventRecordKeys, listener: Listener): TThis;
-    removeEventListener(event: typeof _assignmentCompatibilityHack, listener: Listener): void;
-    off<TThis>(this: TThis, event: TEventRecordKeys, listener: Listener): TThis;
-    off(event: typeof _assignmentCompatibilityHack, listener: Listener): void;
-    removeAllListeners<TThis>(this: TThis, event: TEventRecordKeys): TThis;
-    removeAllListeners(event: typeof _assignmentCompatibilityHack): void;
-    prependListener<TThis>(this: TThis, event: TEventRecordKeys, listener: Listener): TThis;
-    prependListener(event: typeof _assignmentCompatibilityHack, listener: Listener): void;
-    prependOnceListener<TThis>(this: TThis, event: TEventRecordKeys, listener: Listener): TThis;
-    prependOnceListener(event: typeof _assignmentCompatibilityHack, listener: Listener): void;
-    eventNames(): string[];
-    listeners<P extends TEventRecordKeys>(event: P): TEventRecord[P][];
-    listeners(event: typeof _assignmentCompatibilityHack): void;
-    rawListeners<P extends TEventRecordKeys>(event: P): TEventRecord[P][];
-    rawListeners(event: typeof _assignmentCompatibilityHack): void;
-    listenerCount(event: TEventRecordKeys): number;
-    listenerCount(event: typeof _assignmentCompatibilityHack): void;
-    getMaxListeners(): number;
-    setMaxListeners<TThis>(this: TThis, n: number): TThis;
-};
-export {};
Index: node_modules/postgresql-client/typings/types.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/types.d.ts b/node_modules/postgresql-client/typings/types.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/types.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,15 +0,0 @@
-/// <reference types="node" />
-import type { DataMappingOptions } from './interfaces/data-mapping-options.js';
-import type { SmartBuffer } from './protocol/smart-buffer';
-export type OID = number;
-export type Maybe<T> = T | undefined;
-export type Nullable<T> = T | null;
-export type Row = any;
-export type Callback = (err?: Error, value?: any) => void;
-export type DecodeBinaryFunction = (buf: Buffer, options: DataMappingOptions & Record<string, any>) => any;
-export type EncodeBinaryFunction = (buf: SmartBuffer, v: any, options: DataMappingOptions) => void;
-export type EncodeCalculateDimFunction = (v: any[]) => number[];
-export type ParseTextFunction = (v: any, options: DataMappingOptions) => any;
-export type EncodeTextFunction = (v: any, options: DataMappingOptions) => string;
-export type AnyParseFunction = ParseTextFunction | DecodeBinaryFunction;
-export type DebugLogger = (namespace: string, format: any, ...args: any[]) => void;
Index: node_modules/postgresql-client/cjs/types.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/types.js b/node_modules/postgresql-client/cjs/types.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/types.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,2 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
Index: node_modules/postgresql-client/esm/types.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/types.js b/node_modules/postgresql-client/esm/types.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/types.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,1 +0,0 @@
-export {};
Index: node_modules/power-tasks/typings/utils.d.ts
===================================================================
diff --git a/node_modules/power-tasks/typings/utils.d.ts b/node_modules/power-tasks/typings/utils.d.ts
deleted file mode 100644
--- a/node_modules/power-tasks/typings/utils.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,2 +0,0 @@
-export declare function plural(word: string, isPlural: boolean | number, pluralWord?: string): string;
-export declare function delay(t: number): Promise<unknown>;
Index: node_modules/postgresql-client/typings/data-types/uuid-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/uuid-type.d.ts b/node_modules/postgresql-client/typings/data-types/uuid-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/uuid-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const UuidType: DataType;
-export declare const ArrayUuidType: DataType;
Index: node_modules/postgresql-client/cjs/data-types/uuid-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/uuid-type.js b/node_modules/postgresql-client/cjs/data-types/uuid-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/uuid-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,39 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayUuidType = exports.UuidType = void 0;
-const constants_js_1 = require("../constants.js");
-const GUID_PATTERN = /^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$/;
-exports.UuidType = {
-    name: 'uuid',
-    oid: constants_js_1.DataTypeOIDs.uuid,
-    jsType: 'String',
-    parseBinary(v) {
-        return (v.toString('hex', 0, 4) +
-            '-' +
-            v.toString('hex', 4, 6) +
-            '-' +
-            v.toString('hex', 6, 8) +
-            '-' +
-            v.toString('hex', 8, 10) +
-            '-' +
-            v.toString('hex', 10, 16));
-    },
-    encodeBinary(buf, v) {
-        if (!GUID_PATTERN.test(v))
-            throw new Error(`"${v}" is not a valid guid value`);
-        const b = Buffer.from(v.replace(/-/g, ''), 'hex');
-        buf.writeBuffer(b);
-    },
-    parseText(v) {
-        return v;
-    },
-    isType(v) {
-        return typeof v === 'string' && GUID_PATTERN.test(v);
-    },
-};
-exports.ArrayUuidType = {
-    ...exports.UuidType,
-    name: '_uuid',
-    oid: constants_js_1.DataTypeOIDs._uuid,
-    elementsOID: constants_js_1.DataTypeOIDs.uuid,
-};
Index: node_modules/postgresql-client/esm/data-types/uuid-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/uuid-type.js b/node_modules/postgresql-client/esm/data-types/uuid-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/uuid-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,36 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-const GUID_PATTERN = /^[0-9a-fA-F]{8}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{4}-?[0-9a-fA-F]{12}$/;
-export const UuidType = {
-    name: 'uuid',
-    oid: DataTypeOIDs.uuid,
-    jsType: 'String',
-    parseBinary(v) {
-        return (v.toString('hex', 0, 4) +
-            '-' +
-            v.toString('hex', 4, 6) +
-            '-' +
-            v.toString('hex', 6, 8) +
-            '-' +
-            v.toString('hex', 8, 10) +
-            '-' +
-            v.toString('hex', 10, 16));
-    },
-    encodeBinary(buf, v) {
-        if (!GUID_PATTERN.test(v))
-            throw new Error(`"${v}" is not a valid guid value`);
-        const b = Buffer.from(v.replace(/-/g, ''), 'hex');
-        buf.writeBuffer(b);
-    },
-    parseText(v) {
-        return v;
-    },
-    isType(v) {
-        return typeof v === 'string' && GUID_PATTERN.test(v);
-    },
-};
-export const ArrayUuidType = {
-    ...UuidType,
-    name: '_uuid',
-    oid: DataTypeOIDs._uuid,
-    elementsOID: DataTypeOIDs.uuid,
-};
Index: node_modules/postgresql-client/typings/data-types/varchar-type.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/data-types/varchar-type.d.ts b/node_modules/postgresql-client/typings/data-types/varchar-type.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/data-types/varchar-type.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,3 +0,0 @@
-import type { DataType } from '../interfaces/data-type.js';
-export declare const VarcharType: DataType;
-export declare const ArrayVarcharType: DataType;
Index: node_modules/postgresql-client/cjs/data-types/varchar-type.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/data-types/varchar-type.js b/node_modules/postgresql-client/cjs/data-types/varchar-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/data-types/varchar-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,27 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.ArrayVarcharType = exports.VarcharType = void 0;
-const constants_js_1 = require("../constants.js");
-exports.VarcharType = {
-    name: 'varchar',
-    oid: constants_js_1.DataTypeOIDs.varchar,
-    jsType: 'string',
-    parseBinary(v) {
-        return v.toString('utf8');
-    },
-    encodeBinary(buf, v) {
-        buf.writeString('' + v, 'utf8');
-    },
-    parseText(v) {
-        return '' + v;
-    },
-    isType(v) {
-        return typeof v === 'string';
-    },
-};
-exports.ArrayVarcharType = {
-    ...exports.VarcharType,
-    name: '_varchar',
-    oid: constants_js_1.DataTypeOIDs._varchar,
-    elementsOID: constants_js_1.DataTypeOIDs.varchar,
-};
Index: node_modules/postgresql-client/esm/data-types/varchar-type.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/data-types/varchar-type.js b/node_modules/postgresql-client/esm/data-types/varchar-type.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/data-types/varchar-type.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,24 +0,0 @@
-import { DataTypeOIDs } from '../constants.js';
-export const VarcharType = {
-    name: 'varchar',
-    oid: DataTypeOIDs.varchar,
-    jsType: 'string',
-    parseBinary(v) {
-        return v.toString('utf8');
-    },
-    encodeBinary(buf, v) {
-        buf.writeString('' + v, 'utf8');
-    },
-    parseText(v) {
-        return '' + v;
-    },
-    isType(v) {
-        return typeof v === 'string';
-    },
-};
-export const ArrayVarcharType = {
-    ...VarcharType,
-    name: '_varchar',
-    oid: DataTypeOIDs._varchar,
-    elementsOID: DataTypeOIDs.varchar,
-};
Index: node_modules/pg-pool/test/verify.js
===================================================================
diff --git a/node_modules/pg-pool/test/verify.js b/node_modules/pg-pool/test/verify.js
deleted file mode 100644
--- a/node_modules/pg-pool/test/verify.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,24 +0,0 @@
-'use strict'
-const expect = require('expect.js')
-
-const describe = require('mocha').describe
-const it = require('mocha').it
-
-const Pool = require('../')
-
-describe('verify', () => {
-  it('verifies a client with a callback', (done) => {
-    const pool = new Pool({
-      verify: (client, cb) => {
-        cb(new Error('nope'))
-      },
-    })
-
-    pool.connect((err, client) => {
-      expect(err).to.be.an(Error)
-      expect(err.message).to.be('nope')
-      pool.end()
-      done()
-    })
-  })
-})
Index: node_modules/postgresql-client/typings/util/wrap-row-description.d.ts
===================================================================
diff --git a/node_modules/postgresql-client/typings/util/wrap-row-description.d.ts b/node_modules/postgresql-client/typings/util/wrap-row-description.d.ts
deleted file mode 100644
--- a/node_modules/postgresql-client/typings/util/wrap-row-description.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,5 +0,0 @@
-import { DataFormat } from '../constants.js';
-import { DataTypeMap } from '../data-type-map.js';
-import { FieldInfo } from '../interfaces/field-info.js';
-import { Protocol } from '../protocol/protocol.js';
-export declare function wrapRowDescription(typeMap: DataTypeMap, fields: Protocol.RowDescription[], columnFormat: DataFormat | DataFormat[]): FieldInfo[];
Index: node_modules/postgresql-client/cjs/util/wrap-row-description.js
===================================================================
diff --git a/node_modules/postgresql-client/cjs/util/wrap-row-description.js b/node_modules/postgresql-client/cjs/util/wrap-row-description.js
deleted file mode 100644
--- a/node_modules/postgresql-client/cjs/util/wrap-row-description.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,35 +0,0 @@
-"use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
-exports.wrapRowDescription = void 0;
-const constants_js_1 = require("../constants.js");
-function wrapRowDescription(typeMap, fields, columnFormat) {
-    return fields.map((f, idx) => {
-        const cf = Array.isArray(columnFormat) ? columnFormat[idx] : columnFormat;
-        const x = {
-            fieldName: f.fieldName,
-            tableId: f.tableId,
-            columnId: f.columnId,
-            dataTypeId: f.dataTypeId,
-            dataTypeName: constants_js_1.DataTypeNames[f.dataTypeId] || '',
-            jsType: cf === constants_js_1.DataFormat.binary ? 'Buffer' : 'string',
-        };
-        x.isArray = x.dataTypeName.startsWith('_');
-        if (x.isArray) {
-            x.elementDataTypeName = x.dataTypeName.substring(1);
-            for (const oid of Object.keys(constants_js_1.DataTypeNames)) {
-                if (constants_js_1.DataTypeNames[oid] === x.elementDataTypeName)
-                    x.elementDataTypeId = parseInt(oid, 10);
-            }
-        }
-        if (f.fixedSize && f.fixedSize > 0)
-            x.fixedSize = f.fixedSize;
-        if (f.modifier && f.modifier > 0)
-            x.modifier = f.modifier;
-        const reg = typeMap.get(x.dataTypeId);
-        if (reg) {
-            x.jsType = reg.jsType;
-        }
-        return x;
-    });
-}
-exports.wrapRowDescription = wrapRowDescription;
Index: node_modules/postgresql-client/esm/util/wrap-row-description.js
===================================================================
diff --git a/node_modules/postgresql-client/esm/util/wrap-row-description.js b/node_modules/postgresql-client/esm/util/wrap-row-description.js
deleted file mode 100644
--- a/node_modules/postgresql-client/esm/util/wrap-row-description.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ /dev/null	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
@@ -1,31 +0,0 @@
-import { DataFormat, DataTypeNames } from '../constants.js';
-export function wrapRowDescription(typeMap, fields, columnFormat) {
-    return fields.map((f, idx) => {
-        const cf = Array.isArray(columnFormat) ? columnFormat[idx] : columnFormat;
-        const x = {
-            fieldName: f.fieldName,
-            tableId: f.tableId,
-            columnId: f.columnId,
-            dataTypeId: f.dataTypeId,
-            dataTypeName: DataTypeNames[f.dataTypeId] || '',
-            jsType: cf === DataFormat.binary ? 'Buffer' : 'string',
-        };
-        x.isArray = x.dataTypeName.startsWith('_');
-        if (x.isArray) {
-            x.elementDataTypeName = x.dataTypeName.substring(1);
-            for (const oid of Object.keys(DataTypeNames)) {
-                if (DataTypeNames[oid] === x.elementDataTypeName)
-                    x.elementDataTypeId = parseInt(oid, 10);
-            }
-        }
-        if (f.fixedSize && f.fixedSize > 0)
-            x.fixedSize = f.fixedSize;
-        if (f.modifier && f.modifier > 0)
-            x.modifier = f.modifier;
-        const reg = typeMap.get(x.dataTypeId);
-        if (reg) {
-            x.jsType = reg.jsType;
-        }
-        return x;
-    });
-}
Index: node_modules/jwa/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"jwa\",\r\n  \"version\": \"1.4.1\",\r\n  \"description\": \"JWA implementation (supports all JWS algorithms)\",\r\n  \"main\": \"index.js\",\r\n  \"directories\": {\r\n    \"test\": \"test\"\r\n  },\r\n  \"dependencies\": {\r\n    \"buffer-equal-constant-time\": \"1.0.1\",\r\n    \"ecdsa-sig-formatter\": \"1.0.11\",\r\n    \"safe-buffer\": \"^5.0.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"base64url\": \"^2.0.0\",\r\n    \"jwk-to-pem\": \"^2.0.1\",\r\n    \"semver\": \"4.3.6\",\r\n    \"tap\": \"6.2.0\"\r\n  },\r\n  \"scripts\": {\r\n    \"test\": \"make test\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git://github.com/brianloveswords/node-jwa.git\"\r\n  },\r\n  \"keywords\": [\r\n    \"jwa\",\r\n    \"jws\",\r\n    \"jwt\",\r\n    \"rsa\",\r\n    \"ecdsa\",\r\n    \"hmac\"\r\n  ],\r\n  \"author\": \"Brian J. Brennan <brianloveswords@gmail.com>\",\r\n  \"license\": \"MIT\"\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/jwa/package.json b/node_modules/jwa/package.json
--- a/node_modules/jwa/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/jwa/package.json	(date 1753913035639)
@@ -1,13 +1,13 @@
 {
   "name": "jwa",
-  "version": "1.4.1",
+  "version": "1.4.2",
   "description": "JWA implementation (supports all JWS algorithms)",
   "main": "index.js",
   "directories": {
     "test": "test"
   },
   "dependencies": {
-    "buffer-equal-constant-time": "1.0.1",
+    "buffer-equal-constant-time": "^1.0.1",
     "ecdsa-sig-formatter": "1.0.11",
     "safe-buffer": "^5.0.1"
   },
Index: node_modules/jwa/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>var bufferEqual = require('buffer-equal-constant-time');\r\nvar Buffer = require('safe-buffer').Buffer;\r\nvar crypto = require('crypto');\r\nvar formatEcdsa = require('ecdsa-sig-formatter');\r\nvar util = require('util');\r\n\r\nvar MSG_INVALID_ALGORITHM = '\"%s\" is not a valid algorithm.\\n  Supported algorithms are:\\n  \"HS256\", \"HS384\", \"HS512\", \"RS256\", \"RS384\", \"RS512\", \"PS256\", \"PS384\", \"PS512\", \"ES256\", \"ES384\", \"ES512\" and \"none\".'\r\nvar MSG_INVALID_SECRET = 'secret must be a string or buffer';\r\nvar MSG_INVALID_VERIFIER_KEY = 'key must be a string or a buffer';\r\nvar MSG_INVALID_SIGNER_KEY = 'key must be a string, a buffer or an object';\r\n\r\nvar supportsKeyObjects = typeof crypto.createPublicKey === 'function';\r\nif (supportsKeyObjects) {\r\n  MSG_INVALID_VERIFIER_KEY += ' or a KeyObject';\r\n  MSG_INVALID_SECRET += 'or a KeyObject';\r\n}\r\n\r\nfunction checkIsPublicKey(key) {\r\n  if (Buffer.isBuffer(key)) {\r\n    return;\r\n  }\r\n\r\n  if (typeof key === 'string') {\r\n    return;\r\n  }\r\n\r\n  if (!supportsKeyObjects) {\r\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\r\n  }\r\n\r\n  if (typeof key !== 'object') {\r\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\r\n  }\r\n\r\n  if (typeof key.type !== 'string') {\r\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\r\n  }\r\n\r\n  if (typeof key.asymmetricKeyType !== 'string') {\r\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\r\n  }\r\n\r\n  if (typeof key.export !== 'function') {\r\n    throw typeError(MSG_INVALID_VERIFIER_KEY);\r\n  }\r\n};\r\n\r\nfunction checkIsPrivateKey(key) {\r\n  if (Buffer.isBuffer(key)) {\r\n    return;\r\n  }\r\n\r\n  if (typeof key === 'string') {\r\n    return;\r\n  }\r\n\r\n  if (typeof key === 'object') {\r\n    return;\r\n  }\r\n\r\n  throw typeError(MSG_INVALID_SIGNER_KEY);\r\n};\r\n\r\nfunction checkIsSecretKey(key) {\r\n  if (Buffer.isBuffer(key)) {\r\n    return;\r\n  }\r\n\r\n  if (typeof key === 'string') {\r\n    return key;\r\n  }\r\n\r\n  if (!supportsKeyObjects) {\r\n    throw typeError(MSG_INVALID_SECRET);\r\n  }\r\n\r\n  if (typeof key !== 'object') {\r\n    throw typeError(MSG_INVALID_SECRET);\r\n  }\r\n\r\n  if (key.type !== 'secret') {\r\n    throw typeError(MSG_INVALID_SECRET);\r\n  }\r\n\r\n  if (typeof key.export !== 'function') {\r\n    throw typeError(MSG_INVALID_SECRET);\r\n  }\r\n}\r\n\r\nfunction fromBase64(base64) {\r\n  return base64\r\n    .replace(/=/g, '')\r\n    .replace(/\\+/g, '-')\r\n    .replace(/\\//g, '_');\r\n}\r\n\r\nfunction toBase64(base64url) {\r\n  base64url = base64url.toString();\r\n\r\n  var padding = 4 - base64url.length % 4;\r\n  if (padding !== 4) {\r\n    for (var i = 0; i < padding; ++i) {\r\n      base64url += '=';\r\n    }\r\n  }\r\n\r\n  return base64url\r\n    .replace(/\\-/g, '+')\r\n    .replace(/_/g, '/');\r\n}\r\n\r\nfunction typeError(template) {\r\n  var args = [].slice.call(arguments, 1);\r\n  var errMsg = util.format.bind(util, template).apply(null, args);\r\n  return new TypeError(errMsg);\r\n}\r\n\r\nfunction bufferOrString(obj) {\r\n  return Buffer.isBuffer(obj) || typeof obj === 'string';\r\n}\r\n\r\nfunction normalizeInput(thing) {\r\n  if (!bufferOrString(thing))\r\n    thing = JSON.stringify(thing);\r\n  return thing;\r\n}\r\n\r\nfunction createHmacSigner(bits) {\r\n  return function sign(thing, secret) {\r\n    checkIsSecretKey(secret);\r\n    thing = normalizeInput(thing);\r\n    var hmac = crypto.createHmac('sha' + bits, secret);\r\n    var sig = (hmac.update(thing), hmac.digest('base64'))\r\n    return fromBase64(sig);\r\n  }\r\n}\r\n\r\nfunction createHmacVerifier(bits) {\r\n  return function verify(thing, signature, secret) {\r\n    var computedSig = createHmacSigner(bits)(thing, secret);\r\n    return bufferEqual(Buffer.from(signature), Buffer.from(computedSig));\r\n  }\r\n}\r\n\r\nfunction createKeySigner(bits) {\r\n return function sign(thing, privateKey) {\r\n    checkIsPrivateKey(privateKey);\r\n    thing = normalizeInput(thing);\r\n    // Even though we are specifying \"RSA\" here, this works with ECDSA\r\n    // keys as well.\r\n    var signer = crypto.createSign('RSA-SHA' + bits);\r\n    var sig = (signer.update(thing), signer.sign(privateKey, 'base64'));\r\n    return fromBase64(sig);\r\n  }\r\n}\r\n\r\nfunction createKeyVerifier(bits) {\r\n  return function verify(thing, signature, publicKey) {\r\n    checkIsPublicKey(publicKey);\r\n    thing = normalizeInput(thing);\r\n    signature = toBase64(signature);\r\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\r\n    verifier.update(thing);\r\n    return verifier.verify(publicKey, signature, 'base64');\r\n  }\r\n}\r\n\r\nfunction createPSSKeySigner(bits) {\r\n  return function sign(thing, privateKey) {\r\n    checkIsPrivateKey(privateKey);\r\n    thing = normalizeInput(thing);\r\n    var signer = crypto.createSign('RSA-SHA' + bits);\r\n    var sig = (signer.update(thing), signer.sign({\r\n      key: privateKey,\r\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\r\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\r\n    }, 'base64'));\r\n    return fromBase64(sig);\r\n  }\r\n}\r\n\r\nfunction createPSSKeyVerifier(bits) {\r\n  return function verify(thing, signature, publicKey) {\r\n    checkIsPublicKey(publicKey);\r\n    thing = normalizeInput(thing);\r\n    signature = toBase64(signature);\r\n    var verifier = crypto.createVerify('RSA-SHA' + bits);\r\n    verifier.update(thing);\r\n    return verifier.verify({\r\n      key: publicKey,\r\n      padding: crypto.constants.RSA_PKCS1_PSS_PADDING,\r\n      saltLength: crypto.constants.RSA_PSS_SALTLEN_DIGEST\r\n    }, signature, 'base64');\r\n  }\r\n}\r\n\r\nfunction createECDSASigner(bits) {\r\n  var inner = createKeySigner(bits);\r\n  return function sign() {\r\n    var signature = inner.apply(null, arguments);\r\n    signature = formatEcdsa.derToJose(signature, 'ES' + bits);\r\n    return signature;\r\n  };\r\n}\r\n\r\nfunction createECDSAVerifer(bits) {\r\n  var inner = createKeyVerifier(bits);\r\n  return function verify(thing, signature, publicKey) {\r\n    signature = formatEcdsa.joseToDer(signature, 'ES' + bits).toString('base64');\r\n    var result = inner(thing, signature, publicKey);\r\n    return result;\r\n  };\r\n}\r\n\r\nfunction createNoneSigner() {\r\n  return function sign() {\r\n    return '';\r\n  }\r\n}\r\n\r\nfunction createNoneVerifier() {\r\n  return function verify(thing, signature) {\r\n    return signature === '';\r\n  }\r\n}\r\n\r\nmodule.exports = function jwa(algorithm) {\r\n  var signerFactories = {\r\n    hs: createHmacSigner,\r\n    rs: createKeySigner,\r\n    ps: createPSSKeySigner,\r\n    es: createECDSASigner,\r\n    none: createNoneSigner,\r\n  }\r\n  var verifierFactories = {\r\n    hs: createHmacVerifier,\r\n    rs: createKeyVerifier,\r\n    ps: createPSSKeyVerifier,\r\n    es: createECDSAVerifer,\r\n    none: createNoneVerifier,\r\n  }\r\n  var match = algorithm.match(/^(RS|PS|ES|HS)(256|384|512)$|^(none)$/i);\r\n  if (!match)\r\n    throw typeError(MSG_INVALID_ALGORITHM, algorithm);\r\n  var algo = (match[1] || match[3]).toLowerCase();\r\n  var bits = match[2];\r\n\r\n  return {\r\n    sign: signerFactories[algo](bits),\r\n    verify: verifierFactories[algo](bits),\r\n  }\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/jwa/index.js b/node_modules/jwa/index.js
--- a/node_modules/jwa/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/jwa/index.js	(date 1753913035638)
@@ -1,4 +1,3 @@
-var bufferEqual = require('buffer-equal-constant-time');
 var Buffer = require('safe-buffer').Buffer;
 var crypto = require('crypto');
 var formatEcdsa = require('ecdsa-sig-formatter');
@@ -135,10 +134,25 @@
   }
 }
 
+var bufferEqual;
+var timingSafeEqual = 'timingSafeEqual' in crypto ? function timingSafeEqual(a, b) {
+  if (a.byteLength !== b.byteLength) {
+    return false;
+  }
+
+  return crypto.timingSafeEqual(a, b)
+} : function timingSafeEqual(a, b) {
+  if (!bufferEqual) {
+    bufferEqual = require('buffer-equal-constant-time');
+  }
+
+  return bufferEqual(a, b)
+}
+
 function createHmacVerifier(bits) {
   return function verify(thing, signature, secret) {
     var computedSig = createHmacSigner(bits)(thing, secret);
-    return bufferEqual(Buffer.from(signature), Buffer.from(computedSig));
+    return timingSafeEqual(Buffer.from(signature), Buffer.from(computedSig));
   }
 }
 
Index: node_modules/nodemon/lib/config/load.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>var debug = require('debug')('nodemon');\r\nvar fs = require('fs');\r\nvar path = require('path');\r\nvar exists = fs.exists || path.exists;\r\nvar utils = require('../utils');\r\nvar rules = require('../rules');\r\nvar parse = require('../rules/parse');\r\nvar exec = require('./exec');\r\nvar defaults = require('./defaults');\r\n\r\nmodule.exports = load;\r\nmodule.exports.mutateExecOptions = mutateExecOptions;\r\n\r\nvar existsSync = fs.existsSync || path.existsSync;\r\n\r\nfunction findAppScript() {\r\n  // nodemon has been run alone, so try to read the package file\r\n  // or try to read the index.js file\r\n\r\n  var pkg =\r\n    existsSync(path.join(process.cwd(), 'package.json')) &&\r\n    require(path.join(process.cwd(), 'package.json'));\r\n  if ((!pkg || pkg.main == undefined) && existsSync('./index.js')) {\r\n    return 'index.js';\r\n  }\r\n}\r\n\r\n/**\r\n * Load the nodemon config, first reading the global root/nodemon.json, then\r\n * the local nodemon.json to the exec and then overwriting using any user\r\n * specified settings (i.e. from the cli)\r\n *\r\n * @param  {Object} settings user defined settings\r\n * @param  {Function} ready    callback that receives complete config\r\n */\r\nfunction load(settings, options, config, callback) {\r\n  config.loaded = [];\r\n  // first load the root nodemon.json\r\n  loadFile(options, config, utils.home, function (options) {\r\n    // then load the user's local configuration file\r\n    if (settings.configFile) {\r\n      options.configFile = path.resolve(settings.configFile);\r\n    }\r\n    loadFile(options, config, process.cwd(), function (options) {\r\n      // Then merge over with the user settings (parsed from the cli).\r\n      // Note that merge protects and favours existing values over new values,\r\n      // and thus command line arguments get priority\r\n      options = utils.merge(settings, options);\r\n\r\n      // legacy support\r\n      if (!Array.isArray(options.ignore)) {\r\n        options.ignore = [options.ignore];\r\n      }\r\n\r\n      if (!options.ignoreRoot) {\r\n        options.ignoreRoot = defaults.ignoreRoot;\r\n      }\r\n\r\n      // blend the user ignore and the default ignore together\r\n      if (options.ignoreRoot && options.ignore) {\r\n        if (!Array.isArray(options.ignoreRoot)) {\r\n          options.ignoreRoot = [options.ignoreRoot];\r\n        }\r\n        options.ignore = options.ignoreRoot.concat(options.ignore);\r\n      } else {\r\n        options.ignore = defaults.ignore.concat(options.ignore);\r\n      }\r\n\r\n      // add in any missing defaults\r\n      options = utils.merge(options, defaults);\r\n\r\n      if (!options.script && !options.exec) {\r\n        var found = findAppScript();\r\n        if (found) {\r\n          if (!options.args) {\r\n            options.args = [];\r\n          }\r\n          // if the script is found as a result of not being on the command\r\n          // line, then we move any of the pre double-dash args in execArgs\r\n          const n =\r\n            options.scriptPosition === null\r\n              ? options.args.length\r\n              : options.scriptPosition;\r\n\r\n          options.execArgs = (options.execArgs || []).concat(\r\n            options.args.splice(0, n)\r\n          );\r\n          options.scriptPosition = null;\r\n\r\n          options.script = found;\r\n        }\r\n      }\r\n\r\n      mutateExecOptions(options);\r\n\r\n      if (options.quiet) {\r\n        utils.quiet();\r\n      }\r\n\r\n      if (options.verbose) {\r\n        utils.debug = true;\r\n      }\r\n\r\n      // simplify the ready callback to be called after the rules are normalised\r\n      // from strings to regexp through the rules lib. Note that this gets\r\n      // created *after* options is overwritten twice in the lines above.\r\n      var ready = function (options) {\r\n        normaliseRules(options, callback);\r\n      };\r\n\r\n      ready(options);\r\n    });\r\n  });\r\n}\r\n\r\nfunction normaliseRules(options, ready) {\r\n  // convert ignore and watch options to rules/regexp\r\n  rules.watch.add(options.watch);\r\n  rules.ignore.add(options.ignore);\r\n\r\n  // normalise the watch and ignore arrays\r\n  options.watch = options.watch === false ? false : rules.rules.watch;\r\n  options.ignore = rules.rules.ignore;\r\n\r\n  ready(options);\r\n}\r\n\r\n/**\r\n * Looks for a config in the current working directory, and a config in the\r\n * user's home directory, merging the two together, giving priority to local\r\n * config. This can then be overwritten later by command line arguments\r\n *\r\n * @param  {Function} ready callback to pass loaded settings to\r\n */\r\nfunction loadFile(options, config, dir, ready) {\r\n  if (!ready) {\r\n    ready = function () {};\r\n  }\r\n\r\n  var callback = function (settings) {\r\n    // prefer the local nodemon.json and fill in missing items using\r\n    // the global options\r\n    ready(utils.merge(settings, options));\r\n  };\r\n\r\n  if (!dir) {\r\n    return callback({});\r\n  }\r\n\r\n  var filename = options.configFile || path.join(dir, 'nodemon.json');\r\n\r\n  if (config.loaded.indexOf(filename) !== -1) {\r\n    // don't bother re-parsing the same config file\r\n    return callback({});\r\n  }\r\n\r\n  fs.readFile(filename, 'utf8', function (err, data) {\r\n    if (err) {\r\n      if (err.code === 'ENOENT') {\r\n        if (!options.configFile && dir !== utils.home) {\r\n          // if no specified local config file and local nodemon.json\r\n          // doesn't exist, try the package.json\r\n          return loadPackageJSON(config, callback);\r\n        }\r\n      }\r\n      return callback({});\r\n    }\r\n\r\n    var settings = {};\r\n\r\n    try {\r\n      settings = JSON.parse(data.toString('utf8').replace(/^\\uFEFF/, ''));\r\n      if (!filename.endsWith('package.json') || settings.nodemonConfig) {\r\n        config.loaded.push(filename);\r\n      }\r\n    } catch (e) {\r\n      utils.log.fail('Failed to parse config ' + filename);\r\n      console.error(e);\r\n      process.exit(1);\r\n    }\r\n\r\n    // options values will overwrite settings\r\n    callback(settings);\r\n  });\r\n}\r\n\r\nfunction loadPackageJSON(config, ready) {\r\n  if (!ready) {\r\n    ready = () => {};\r\n  }\r\n\r\n  const dir = process.cwd();\r\n  const filename = path.join(dir, 'package.json');\r\n  const packageLoadOptions = { configFile: filename };\r\n  return loadFile(packageLoadOptions, config, dir, (settings) => {\r\n    ready(settings.nodemonConfig || {});\r\n  });\r\n}\r\n\r\nfunction mutateExecOptions(options) {\r\n  // work out the execOptions based on the final config we have\r\n  options.execOptions = exec(\r\n    {\r\n      script: options.script,\r\n      exec: options.exec,\r\n      args: options.args,\r\n      scriptPosition: options.scriptPosition,\r\n      nodeArgs: options.nodeArgs,\r\n      execArgs: options.execArgs,\r\n      ext: options.ext,\r\n      env: options.env,\r\n    },\r\n    options.execMap\r\n  );\r\n\r\n  // clean up values that we don't need at the top level\r\n  delete options.scriptPosition;\r\n  delete options.script;\r\n  delete options.args;\r\n  delete options.ext;\r\n\r\n  return options;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/nodemon/lib/config/load.js b/node_modules/nodemon/lib/config/load.js
--- a/node_modules/nodemon/lib/config/load.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/nodemon/lib/config/load.js	(date 1753913035564)
@@ -30,8 +30,10 @@
  * the local nodemon.json to the exec and then overwriting using any user
  * specified settings (i.e. from the cli)
  *
- * @param  {Object} settings user defined settings
- * @param  {Function} ready    callback that receives complete config
+ * @param {Object} settings user defined settings
+ * @param {Object} options global options
+ * @param {Object} config the config object to be updated
+ * @param {Function} callback that receives complete config
  */
 function load(settings, options, config, callback) {
   config.loaded = [];
Index: node_modules/nodemon/lib/monitor/match.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const minimatch = require('minimatch');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\nconst debug = require('debug')('nodemon:match');\r\nconst utils = require('../utils');\r\n\r\nmodule.exports = match;\r\nmodule.exports.rulesToMonitor = rulesToMonitor;\r\n\r\nfunction rulesToMonitor(watch, ignore, config) {\r\n  var monitor = [];\r\n\r\n  if (!Array.isArray(ignore)) {\r\n    if (ignore) {\r\n      ignore = [ignore];\r\n    } else {\r\n      ignore = [];\r\n    }\r\n  }\r\n\r\n  if (!Array.isArray(watch)) {\r\n    if (watch) {\r\n      watch = [watch];\r\n    } else {\r\n      watch = [];\r\n    }\r\n  }\r\n\r\n  if (watch && watch.length) {\r\n    monitor = utils.clone(watch);\r\n  }\r\n\r\n  if (ignore) {\r\n    [].push.apply(monitor, (ignore || []).map(function (rule) {\r\n      return '!' + rule;\r\n    }));\r\n  }\r\n\r\n  var cwd = process.cwd();\r\n\r\n  // next check if the monitored paths are actual directories\r\n  // or just patterns - and expand the rule to include *.*\r\n  monitor = monitor.map(function (rule) {\r\n    var not = rule.slice(0, 1) === '!';\r\n\r\n    if (not) {\r\n      rule = rule.slice(1);\r\n    }\r\n\r\n    if (rule === '.' || rule === '.*') {\r\n      rule = '*.*';\r\n    }\r\n\r\n    var dir = path.resolve(cwd, rule);\r\n\r\n    try {\r\n      var stat = fs.statSync(dir);\r\n      if (stat.isDirectory()) {\r\n        rule = dir;\r\n        if (rule.slice(-1) !== '/') {\r\n          rule += '/';\r\n        }\r\n        rule += '**/*';\r\n\r\n        // `!not` ... sorry.\r\n        if (!not) {\r\n          config.dirs.push(dir);\r\n        }\r\n      } else {\r\n        // ensures we end up in the check that tries to get a base directory\r\n        // and then adds it to the watch list\r\n        throw new Error();\r\n      }\r\n    } catch (e) {\r\n      var base = tryBaseDir(dir);\r\n      if (!not && base) {\r\n        if (config.dirs.indexOf(base) === -1) {\r\n          config.dirs.push(base);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (rule.slice(-1) === '/') {\r\n      // just slap on a * anyway\r\n      rule += '*';\r\n    }\r\n\r\n    // if the url ends with * but not **/* and not *.*\r\n    // then convert to **/* - somehow it was missed :-\\\r\n    if (rule.slice(-4) !== '**/*' &&\r\n      rule.slice(-1) === '*' &&\r\n      rule.indexOf('*.') === -1) {\r\n\r\n      if (rule.slice(-2) !== '**') {\r\n        rule += '*/*';\r\n      }\r\n    }\r\n\r\n\r\n    return (not ? '!' : '') + rule;\r\n  });\r\n\r\n  return monitor;\r\n}\r\n\r\nfunction tryBaseDir(dir) {\r\n  var stat;\r\n  if (/[?*\\{\\[]+/.test(dir)) { // if this is pattern, then try to find the base\r\n    try {\r\n      var base = path.dirname(dir.replace(/([?*\\{\\[]+.*$)/, 'foo'));\r\n      stat = fs.statSync(base);\r\n      if (stat.isDirectory()) {\r\n        return base;\r\n      }\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  } else {\r\n    try {\r\n      stat = fs.statSync(dir);\r\n      // if this path is actually a single file that exists, then just monitor\r\n      // that, *specifically*.\r\n      if (stat.isFile() || stat.isDirectory()) {\r\n        return dir;\r\n      }\r\n    } catch (e) { }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction match(files, monitor, ext) {\r\n  // sort the rules by highest specificity (based on number of slashes)\r\n  // ignore rules (!) get sorted highest as they take precedent\r\n  const cwd = process.cwd();\r\n  var rules = monitor.sort(function (a, b) {\r\n    var r = b.split(path.sep).length - a.split(path.sep).length;\r\n    var aIsIgnore = a.slice(0, 1) === '!';\r\n    var bIsIgnore = b.slice(0, 1) === '!';\r\n\r\n    if (aIsIgnore || bIsIgnore) {\r\n      if (aIsIgnore) {\r\n        return -1;\r\n      }\r\n\r\n      return 1;\r\n    }\r\n\r\n    if (r === 0) {\r\n      return b.length - a.length;\r\n    }\r\n    return r;\r\n  }).map(function (s) {\r\n    var prefix = s.slice(0, 1);\r\n\r\n    if (prefix === '!') {\r\n      if (s.indexOf('!' + cwd) === 0) {\r\n        return s;\r\n      }\r\n\r\n      // if it starts with a period, then let's get the relative path\r\n      if (s.indexOf('!.') === 0) {\r\n        return '!' + path.resolve(cwd, s.substring(1));\r\n      }\r\n\r\n      return '!**' + (prefix !== path.sep ? path.sep : '') + s.slice(1);\r\n    }\r\n\r\n    // if it starts with a period, then let's get the relative path\r\n    if (s.indexOf('.') === 0) {\r\n      return path.resolve(cwd, s);\r\n    }\r\n\r\n    if (s.indexOf(cwd) === 0) {\r\n      return s;\r\n    }\r\n\r\n    return '**' + (prefix !== path.sep ? path.sep : '') + s;\r\n  });\r\n\r\n  debug('rules', rules);\r\n\r\n  var good = [];\r\n  var whitelist = []; // files that we won't check against the extension\r\n  var ignored = 0;\r\n  var watched = 0;\r\n  var usedRules = [];\r\n  var minimatchOpts = {\r\n    dot: true,\r\n  };\r\n\r\n  // enable case-insensitivity on Windows\r\n  if (utils.isWindows) {\r\n    minimatchOpts.nocase = true;\r\n  }\r\n\r\n  files.forEach(function (file) {\r\n    file = path.resolve(cwd, file);\r\n\r\n    var matched = false;\r\n    for (var i = 0; i < rules.length; i++) {\r\n      if (rules[i].slice(0, 1) === '!') {\r\n        if (!minimatch(file, rules[i], minimatchOpts)) {\r\n          debug('ignored', file, 'rule:', rules[i]);\r\n          ignored++;\r\n          matched = true;\r\n          break;\r\n        }\r\n      } else {\r\n        debug('matched', file, 'rule:', rules[i]);\r\n        if (minimatch(file, rules[i], minimatchOpts)) {\r\n          watched++;\r\n\r\n          // don't repeat the output if a rule is matched\r\n          if (usedRules.indexOf(rules[i]) === -1) {\r\n            usedRules.push(rules[i]);\r\n            utils.log.detail('matched rule: ' + rules[i]);\r\n          }\r\n\r\n          // if the rule doesn't match the WATCH EVERYTHING\r\n          // but *does* match a rule that ends with *.*, then\r\n          // white list it - in that we don't run it through\r\n          // the extension check too.\r\n          if (rules[i] !== '**' + path.sep + '*.*' &&\r\n            rules[i].slice(-3) === '*.*') {\r\n            whitelist.push(file);\r\n          } else if (path.basename(file) === path.basename(rules[i])) {\r\n            // if the file matches the actual rule, then it's put on whitelist\r\n            whitelist.push(file);\r\n          } else {\r\n            good.push(file);\r\n          }\r\n          matched = true;\r\n          break;\r\n        } else {\r\n          // utils.log.detail('no match: ' + rules[i], file);\r\n        }\r\n      }\r\n    }\r\n    if (!matched) {\r\n      ignored++;\r\n    }\r\n  });\r\n\r\n  debug('good', good)\r\n\r\n  // finally check the good files against the extensions that we're monitoring\r\n  if (ext) {\r\n    if (ext.indexOf(',') === -1) {\r\n      ext = '**/*.' + ext;\r\n    } else {\r\n      ext = '**/*.{' + ext + '}';\r\n    }\r\n\r\n    good = good.filter(function (file) {\r\n      // only compare the filename to the extension test\r\n      return minimatch(path.basename(file), ext, minimatchOpts);\r\n    });\r\n  } // else assume *.*\r\n\r\n  var result = good.concat(whitelist);\r\n\r\n  if (utils.isWindows) {\r\n    // fix for windows testing - I *think* this is okay to do\r\n    result = result.map(function (file) {\r\n      return file.slice(0, 1).toLowerCase() + file.slice(1);\r\n    });\r\n  }\r\n\r\n  return {\r\n    result: result,\r\n    ignored: ignored,\r\n    watched: watched,\r\n    total: files.length,\r\n  };\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/nodemon/lib/monitor/match.js b/node_modules/nodemon/lib/monitor/match.js
--- a/node_modules/nodemon/lib/monitor/match.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/nodemon/lib/monitor/match.js	(date 1753913035585)
@@ -31,9 +31,12 @@
   }
 
   if (ignore) {
-    [].push.apply(monitor, (ignore || []).map(function (rule) {
-      return '!' + rule;
-    }));
+    [].push.apply(
+      monitor,
+      (ignore || []).map(function (rule) {
+        return '!' + rule;
+      })
+    );
   }
 
   var cwd = process.cwd();
@@ -87,16 +90,16 @@
 
     // if the url ends with * but not **/* and not *.*
     // then convert to **/* - somehow it was missed :-\
-    if (rule.slice(-4) !== '**/*' &&
+    if (
+      rule.slice(-4) !== '**/*' &&
       rule.slice(-1) === '*' &&
-      rule.indexOf('*.') === -1) {
-
+      rule.indexOf('*.') === -1
+    ) {
       if (rule.slice(-2) !== '**') {
         rule += '*/*';
       }
     }
 
-
     return (not ? '!' : '') + rule;
   });
 
@@ -105,7 +108,8 @@
 
 function tryBaseDir(dir) {
   var stat;
-  if (/[?*\{\[]+/.test(dir)) { // if this is pattern, then try to find the base
+  if (/[?*\{\[]+/.test(dir)) {
+    // if this is pattern, then try to find the base
     try {
       var base = path.dirname(dir.replace(/([?*\{\[]+.*$)/, 'foo'));
       stat = fs.statSync(base);
@@ -123,7 +127,7 @@
       if (stat.isFile() || stat.isDirectory()) {
         return dir;
       }
-    } catch (e) { }
+    } catch (e) {}
   }
 
   return false;
@@ -133,50 +137,52 @@
   // sort the rules by highest specificity (based on number of slashes)
   // ignore rules (!) get sorted highest as they take precedent
   const cwd = process.cwd();
-  var rules = monitor.sort(function (a, b) {
-    var r = b.split(path.sep).length - a.split(path.sep).length;
-    var aIsIgnore = a.slice(0, 1) === '!';
-    var bIsIgnore = b.slice(0, 1) === '!';
+  var rules = monitor
+    .sort(function (a, b) {
+      var r = b.split(path.sep).length - a.split(path.sep).length;
+      var aIsIgnore = a.slice(0, 1) === '!';
+      var bIsIgnore = b.slice(0, 1) === '!';
 
-    if (aIsIgnore || bIsIgnore) {
-      if (aIsIgnore) {
-        return -1;
-      }
+      if (aIsIgnore || bIsIgnore) {
+        if (aIsIgnore) {
+          return -1;
+        }
 
-      return 1;
-    }
+        return 1;
+      }
 
-    if (r === 0) {
-      return b.length - a.length;
-    }
-    return r;
-  }).map(function (s) {
-    var prefix = s.slice(0, 1);
+      if (r === 0) {
+        return b.length - a.length;
+      }
+      return r;
+    })
+    .map(function (s) {
+      var prefix = s.slice(0, 1);
 
-    if (prefix === '!') {
-      if (s.indexOf('!' + cwd) === 0) {
-        return s;
-      }
+      if (prefix === '!') {
+        if (s.indexOf('!' + cwd) === 0) {
+          return s;
+        }
 
-      // if it starts with a period, then let's get the relative path
-      if (s.indexOf('!.') === 0) {
-        return '!' + path.resolve(cwd, s.substring(1));
-      }
+        // if it starts with a period, then let's get the relative path
+        if (s.indexOf('!.') === 0) {
+          return '!' + path.resolve(cwd, s.substring(1));
+        }
 
-      return '!**' + (prefix !== path.sep ? path.sep : '') + s.slice(1);
-    }
+        return '!**' + (prefix !== path.sep ? path.sep : '') + s.slice(1);
+      }
 
-    // if it starts with a period, then let's get the relative path
-    if (s.indexOf('.') === 0) {
-      return path.resolve(cwd, s);
-    }
+      // if it starts with a period, then let's get the relative path
+      if (s.indexOf('.') === 0) {
+        return path.resolve(cwd, s);
+      }
 
-    if (s.indexOf(cwd) === 0) {
-      return s;
-    }
+      if (s.indexOf(cwd) === 0) {
+        return s;
+      }
 
-    return '**' + (prefix !== path.sep ? path.sep : '') + s;
-  });
+      return '**' + (prefix !== path.sep ? path.sep : '') + s;
+    });
 
   debug('rules', rules);
 
@@ -221,8 +227,10 @@
           // but *does* match a rule that ends with *.*, then
           // white list it - in that we don't run it through
           // the extension check too.
-          if (rules[i] !== '**' + path.sep + '*.*' &&
-            rules[i].slice(-3) === '*.*') {
+          if (
+            rules[i] !== '**' + path.sep + '*.*' &&
+            rules[i].slice(-3) === '*.*'
+          ) {
             whitelist.push(file);
           } else if (path.basename(file) === path.basename(rules[i])) {
             // if the file matches the actual rule, then it's put on whitelist
@@ -231,7 +239,6 @@
             good.push(file);
           }
           matched = true;
-          break;
         } else {
           // utils.log.detail('no match: ' + rules[i], file);
         }
@@ -242,8 +249,6 @@
     }
   });
 
-  debug('good', good)
-
   // finally check the good files against the extensions that we're monitoring
   if (ext) {
     if (ext.indexOf(',') === -1) {
@@ -256,7 +261,13 @@
       // only compare the filename to the extension test
       return minimatch(path.basename(file), ext, minimatchOpts);
     });
-  } // else assume *.*
+    debug('good (filtered by ext)', good);
+  } else {
+    // else assume *.*
+    debug('good', good);
+  }
+
+  if (whitelist.length) debug('whitelist', whitelist);
 
   var result = good.concat(whitelist);
 
Index: node_modules/nodemon/lib/monitor/run.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>var debug = require('debug')('nodemon:run');\r\nconst statSync = require('fs').statSync;\r\nvar utils = require('../utils');\r\nvar bus = utils.bus;\r\nvar childProcess = require('child_process');\r\nvar spawn = childProcess.spawn;\r\nvar exec = childProcess.exec;\r\nvar execSync = childProcess.execSync;\r\nvar fork = childProcess.fork;\r\nvar watch = require('./watch').watch;\r\nvar config = require('../config');\r\nvar child = null; // the actual child process we spawn\r\nvar killedAfterChange = false;\r\nvar noop = () => {};\r\nvar restart = null;\r\nvar psTree = require('pstree.remy');\r\nvar path = require('path');\r\nvar signals = require('./signals');\r\nconst undefsafe = require('undefsafe');\r\nconst osRelease = parseInt(require('os').release().split('.')[0], 10);\r\n\r\nfunction run(options) {\r\n  var cmd = config.command.raw;\r\n  // moved up\r\n  // we need restart function below in the global scope for run.kill\r\n  /*jshint validthis:true*/\r\n  restart = run.bind(this, options);\r\n  run.restart = restart;\r\n\r\n  // binding options with instance of run\r\n  // so that we can use it in run.kill\r\n  run.options = options;\r\n\r\n  var runCmd = !options.runOnChangeOnly || config.lastStarted !== 0;\r\n  if (runCmd) {\r\n    utils.log.status('starting `' + config.command.string + '`');\r\n  } else {\r\n    // should just watch file if command is not to be run\r\n    // had another alternate approach\r\n    // to stop process being forked/spawned in the below code\r\n    // but this approach does early exit and makes code cleaner\r\n    debug('start watch on: %s', config.options.watch);\r\n    if (config.options.watch !== false) {\r\n      watch();\r\n      return;\r\n    }\r\n  }\r\n\r\n  config.lastStarted = Date.now();\r\n\r\n  var stdio = ['pipe', 'pipe', 'pipe'];\r\n\r\n  if (config.options.stdout) {\r\n    stdio = ['pipe', process.stdout, process.stderr];\r\n  }\r\n\r\n  if (config.options.stdin === false) {\r\n    stdio = [process.stdin, process.stdout, process.stderr];\r\n  }\r\n\r\n  var sh = 'sh';\r\n  var shFlag = '-c';\r\n\r\n  const binPath = process.cwd() + '/node_modules/.bin';\r\n\r\n  const spawnOptions = {\r\n    env: Object.assign({}, process.env, options.execOptions.env, {\r\n      PATH:\r\n        binPath +\r\n        path.delimiter +\r\n        (undefsafe(options, '.execOptions.env.PATH') || process.env.PATH),\r\n    }),\r\n    stdio: stdio,\r\n  };\r\n\r\n  var executable = cmd.executable;\r\n\r\n  if (utils.isWindows) {\r\n    // if the exec includes a forward slash, reverse it for windows compat\r\n    // but *only* apply to the first command, and none of the arguments.\r\n    // ref #1251 and #1236\r\n    if (executable.indexOf('/') !== -1) {\r\n      executable = executable\r\n        .split(' ')\r\n        .map((e, i) => {\r\n          if (i === 0) {\r\n            return path.normalize(e);\r\n          }\r\n          return e;\r\n        })\r\n        .join(' ');\r\n    }\r\n    // taken from npm's cli: https://git.io/vNFD4\r\n    sh = process.env.comspec || 'cmd';\r\n    shFlag = '/d /s /c';\r\n    spawnOptions.windowsVerbatimArguments = true;\r\n    spawnOptions.windowsHide = true;\r\n  }\r\n\r\n  var args = runCmd ? utils.stringify(executable, cmd.args) : ':';\r\n  var spawnArgs = [sh, [shFlag, args], spawnOptions];\r\n\r\n  const firstArg = cmd.args[0] || '';\r\n\r\n  var inBinPath = false;\r\n  try {\r\n    inBinPath = statSync(`${binPath}/${executable}`).isFile();\r\n  } catch (e) {}\r\n\r\n  // hasStdio allows us to correctly handle stdin piping\r\n  // see: https://git.io/vNtX3\r\n  const hasStdio = utils.satisfies('>= 6.4.0 || < 5');\r\n\r\n  // forking helps with sub-process handling and tends to clean up better\r\n  // than spawning, but it should only be used under specific conditions\r\n  const shouldFork =\r\n    !config.options.spawn &&\r\n    !inBinPath &&\r\n    !(firstArg.indexOf('-') === 0) && // don't fork if there's a node exec arg\r\n    firstArg !== 'inspect' && // don't fork it's `inspect` debugger\r\n    executable === 'node' && // only fork if node\r\n    utils.version.major > 4; // only fork if node version > 4\r\n\r\n  if (shouldFork) {\r\n    // this assumes the first argument is the script and slices it out, since\r\n    // we're forking\r\n    var forkArgs = cmd.args.slice(1);\r\n    var env = utils.merge(options.execOptions.env, process.env);\r\n    stdio.push('ipc');\r\n    const forkOptions = {\r\n      env: env,\r\n      stdio: stdio,\r\n      silent: !hasStdio,\r\n    };\r\n    if (utils.isWindows) {\r\n      forkOptions.windowsHide = true;\r\n    }\r\n    child = fork(options.execOptions.script, forkArgs, forkOptions);\r\n    utils.log.detail('forking');\r\n    debug('fork', sh, shFlag, args);\r\n  } else {\r\n    utils.log.detail('spawning');\r\n    child = spawn.apply(null, spawnArgs);\r\n    debug('spawn', sh, shFlag, args);\r\n  }\r\n\r\n  if (config.required) {\r\n    var emit = {\r\n      stdout: function (data) {\r\n        bus.emit('stdout', data);\r\n      },\r\n      stderr: function (data) {\r\n        bus.emit('stderr', data);\r\n      },\r\n    };\r\n\r\n    // now work out what to bind to...\r\n    if (config.options.stdout) {\r\n      child.on('stdout', emit.stdout).on('stderr', emit.stderr);\r\n    } else {\r\n      child.stdout.on('data', emit.stdout);\r\n      child.stderr.on('data', emit.stderr);\r\n\r\n      bus.stdout = child.stdout;\r\n      bus.stderr = child.stderr;\r\n    }\r\n\r\n    if (shouldFork) {\r\n      child.on('message', function (message, sendHandle) {\r\n        bus.emit('message', message, sendHandle);\r\n      });\r\n    }\r\n  }\r\n\r\n  bus.emit('start');\r\n\r\n  utils.log.detail('child pid: ' + child.pid);\r\n\r\n  child.on('error', function (error) {\r\n    bus.emit('error', error);\r\n    if (error.code === 'ENOENT') {\r\n      utils.log.error('unable to run executable: \"' + cmd.executable + '\"');\r\n      process.exit(1);\r\n    } else {\r\n      utils.log.error('failed to start child process: ' + error.code);\r\n      throw error;\r\n    }\r\n  });\r\n\r\n  child.on('exit', function (code, signal) {\r\n    if (child && child.stdin) {\r\n      process.stdin.unpipe(child.stdin);\r\n    }\r\n\r\n    if (code === 127) {\r\n      utils.log.error(\r\n        'failed to start process, \"' + cmd.executable + '\" exec not found'\r\n      );\r\n      bus.emit('error', code);\r\n      process.exit();\r\n    }\r\n\r\n    // If the command failed with code 2, it may or may not be a syntax error\r\n    // See: http://git.io/fNOAR\r\n    // We will only assume a parse error, if the child failed quickly\r\n    if (code === 2 && Date.now() < config.lastStarted + 500) {\r\n      utils.log.error('process failed, unhandled exit code (2)');\r\n      utils.log.error('');\r\n      utils.log.error('Either the command has a syntax error,');\r\n      utils.log.error('or it is exiting with reserved code 2.');\r\n      utils.log.error('');\r\n      utils.log.error('To keep nodemon running even after a code 2,');\r\n      utils.log.error('add this to the end of your command: || exit 1');\r\n      utils.log.error('');\r\n      utils.log.error('Read more here: https://git.io/fNOAG');\r\n      utils.log.error('');\r\n      utils.log.error('nodemon will stop now so that you can fix the command.');\r\n      utils.log.error('');\r\n      bus.emit('error', code);\r\n      process.exit();\r\n    }\r\n\r\n    // In case we killed the app ourselves, set the signal thusly\r\n    if (killedAfterChange) {\r\n      killedAfterChange = false;\r\n      signal = config.signal;\r\n    }\r\n    // this is nasty, but it gives it windows support\r\n    if (utils.isWindows && signal === 'SIGTERM') {\r\n      signal = config.signal;\r\n    }\r\n\r\n    if (signal === config.signal || code === 0) {\r\n      // this was a clean exit, so emit exit, rather than crash\r\n      debug('bus.emit(exit) via ' + config.signal);\r\n      bus.emit('exit', signal);\r\n\r\n      // exit the monitor, but do it gracefully\r\n      if (signal === config.signal) {\r\n        return restart();\r\n      }\r\n\r\n      if (code === 0) {\r\n        // clean exit - wait until file change to restart\r\n        if (runCmd) {\r\n          utils.log.status('clean exit - waiting for changes before restart');\r\n        }\r\n        child = null;\r\n      }\r\n    } else {\r\n      bus.emit('crash');\r\n      if (options.exitcrash) {\r\n        utils.log.fail('app crashed');\r\n        if (!config.required) {\r\n          process.exit(1);\r\n        }\r\n      } else {\r\n        utils.log.fail(\r\n          'app crashed - waiting for file changes before' + ' starting...'\r\n        );\r\n        child = null;\r\n      }\r\n    }\r\n\r\n    if (config.options.restartable) {\r\n      // stdin needs to kick in again to be able to listen to the\r\n      // restart command\r\n      process.stdin.resume();\r\n    }\r\n  });\r\n\r\n  // moved the run.kill outside to handle both the cases\r\n  // intial start\r\n  // no start\r\n\r\n  // connect stdin to the child process (options.stdin is on by default)\r\n  if (options.stdin) {\r\n    process.stdin.resume();\r\n    // FIXME decide whether or not we need to decide the encoding\r\n    // process.stdin.setEncoding('utf8');\r\n\r\n    // swallow the stdin error if it happens\r\n    // ref: https://github.com/remy/nodemon/issues/1195\r\n    if (hasStdio) {\r\n      child.stdin.on('error', () => {});\r\n      process.stdin.pipe(child.stdin);\r\n    } else {\r\n      if (child.stdout) {\r\n        child.stdout.pipe(process.stdout);\r\n      } else {\r\n        utils.log.error(\r\n          'running an unsupported version of node ' + process.version\r\n        );\r\n        utils.log.error(\r\n          'nodemon may not work as expected - ' +\r\n            'please consider upgrading to LTS'\r\n        );\r\n      }\r\n    }\r\n\r\n    bus.once('exit', function () {\r\n      if (child && process.stdin.unpipe) {\r\n        // node > 0.8\r\n        process.stdin.unpipe(child.stdin);\r\n      }\r\n    });\r\n  }\r\n\r\n  debug('start watch on: %s', config.options.watch);\r\n  if (config.options.watch !== false) {\r\n    watch();\r\n  }\r\n}\r\n\r\nfunction waitForSubProcesses(pid, callback) {\r\n  debug('checking ps tree for pids of ' + pid);\r\n  psTree(pid, (err, pids) => {\r\n    if (!pids.length) {\r\n      return callback();\r\n    }\r\n\r\n    utils.log.status(\r\n      `still waiting for ${pids.length} sub-process${\r\n        pids.length > 2 ? 'es' : ''\r\n      } to finish...`\r\n    );\r\n    setTimeout(() => waitForSubProcesses(pid, callback), 1000);\r\n  });\r\n}\r\n\r\nfunction kill(child, signal, callback) {\r\n  if (!callback) {\r\n    callback = noop;\r\n  }\r\n\r\n  if (utils.isWindows) {\r\n    const taskKill = () => {\r\n      try {\r\n        exec('taskkill /pid ' + child.pid + ' /T /F');\r\n      } catch (e) {\r\n        utils.log.error('Could not shutdown sub process cleanly');\r\n      }\r\n    };\r\n\r\n    // We are handling a 'SIGKILL' , 'SIGUSR2' and 'SIGUSR1' POSIX signal under Windows the\r\n    // same way it is handled on a UNIX system: We are performing\r\n    // a hard shutdown without waiting for the process to clean-up.\r\n    if (\r\n      signal === 'SIGKILL' ||\r\n      osRelease < 10 ||\r\n      signal === 'SIGUSR2' ||\r\n      signal === 'SIGUSR1'\r\n    ) {\r\n      debug('terminating process group by force: %s', child.pid);\r\n\r\n      // We are using the taskkill utility to terminate the whole\r\n      // process group ('/t') of the child ('/pid') by force ('/f').\r\n      // We need to end all sub processes, because the 'child'\r\n      // process in this context is actually a cmd.exe wrapper.\r\n      taskKill();\r\n      callback();\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // We are using the Windows Management Instrumentation Command-line\r\n      // (wmic.exe) to resolve the sub-child process identifier, because the\r\n      // 'child' process in this context is actually a cmd.exe wrapper.\r\n      // We want to send the termination signal directly to the node process.\r\n      // The '2> nul' silences the no process found error message.\r\n      const resultBuffer = execSync(\r\n        `wmic process where (ParentProcessId=${child.pid}) get ProcessId 2> nul`\r\n      );\r\n      const result = resultBuffer.toString().match(/^[0-9]+/m);\r\n\r\n      // If there is no sub-child process we fall back to the child process.\r\n      const processId = Array.isArray(result) ? result[0] : child.pid;\r\n\r\n      debug('sending kill signal SIGINT to process: %s', processId);\r\n\r\n      // We are using the standalone 'windows-kill' executable to send the\r\n      // standard POSIX signal 'SIGINT' to the node process. This fixes #1720.\r\n      const windowsKill = path.normalize(\r\n        `${__dirname}/../../bin/windows-kill.exe`\r\n      );\r\n\r\n      // We have to detach the 'windows-kill' execution completely from this\r\n      // process group to avoid terminating the nodemon process itself.\r\n      // See: https://github.com/alirdn/windows-kill#how-it-works--limitations\r\n      //\r\n      // Therefore we are using 'start' to create a new cmd.exe context.\r\n      // The '/min' option hides the new terminal window and the '/wait'\r\n      // option lets the process wait for the command to finish.\r\n\r\n      execSync(\r\n        `start \"windows-kill\" /min /wait \"${windowsKill}\" -SIGINT ${processId}`\r\n      );\r\n    } catch (e) {\r\n      taskKill();\r\n    }\r\n    callback();\r\n  } else {\r\n    // we use psTree to kill the full subtree of nodemon, because when\r\n    // spawning processes like `coffee` under the `--debug` flag, it'll spawn\r\n    // it's own child, and that can't be killed by nodemon, so psTree gives us\r\n    // an array of PIDs that have spawned under nodemon, and we send each the\r\n    // configured signal (default: SIGUSR2) signal, which fixes #335\r\n    // note that psTree also works if `ps` is missing by looking in /proc\r\n    let sig = signal.replace('SIG', '');\r\n\r\n    psTree(child.pid, function (err, pids) {\r\n      // if ps isn't native to the OS, then we need to send the numeric value\r\n      // for the signal during the kill, `signals` is a lookup table for that.\r\n      if (!psTree.hasPS) {\r\n        sig = signals[signal];\r\n      }\r\n\r\n      // the sub processes need to be killed from smallest to largest\r\n      debug('sending kill signal to ' + pids.join(', '));\r\n\r\n      child.kill(signal);\r\n\r\n      pids.sort().forEach((pid) => exec(`kill -${sig} ${pid}`, noop));\r\n\r\n      waitForSubProcesses(child.pid, () => {\r\n        // finally kill the main user process\r\n        exec(`kill -${sig} ${child.pid}`, callback);\r\n      });\r\n    });\r\n  }\r\n}\r\n\r\nrun.kill = function (noRestart, callback) {\r\n  // I hate code like this :(  - Remy (author of said code)\r\n  if (typeof noRestart === 'function') {\r\n    callback = noRestart;\r\n    noRestart = false;\r\n  }\r\n\r\n  if (!callback) {\r\n    callback = noop;\r\n  }\r\n\r\n  if (child !== null) {\r\n    // if the stdin piping is on, we need to unpipe, but also close stdin on\r\n    // the child, otherwise linux can throw EPIPE or ECONNRESET errors.\r\n    if (run.options.stdin) {\r\n      process.stdin.unpipe(child.stdin);\r\n    }\r\n\r\n    // For the on('exit', ...) handler above the following looks like a\r\n    // crash, so we set the killedAfterChange flag if a restart is planned\r\n    if (!noRestart) {\r\n      killedAfterChange = true;\r\n    }\r\n\r\n    /* Now kill the entire subtree of processes belonging to nodemon */\r\n    var oldPid = child.pid;\r\n    if (child) {\r\n      kill(child, config.signal, function () {\r\n        // this seems to fix the 0.11.x issue with the \"rs\" restart command,\r\n        // though I'm unsure why. it seems like more data is streamed in to\r\n        // stdin after we close.\r\n        if (child && run.options.stdin && child.stdin && oldPid === child.pid) {\r\n          child.stdin.end();\r\n        }\r\n        callback();\r\n      });\r\n    }\r\n  } else if (!noRestart) {\r\n    // if there's no child, then we need to manually start the process\r\n    // this is because as there was no child, the child.on('exit') event\r\n    // handler doesn't exist which would normally trigger the restart.\r\n    bus.once('start', callback);\r\n    run.restart();\r\n  } else {\r\n    callback();\r\n  }\r\n};\r\n\r\nrun.restart = noop;\r\n\r\nbus.on('quit', function onQuit(code) {\r\n  if (code === undefined) {\r\n    code = 0;\r\n  }\r\n\r\n  // remove event listener\r\n  var exitTimer = null;\r\n  var exit = function () {\r\n    clearTimeout(exitTimer);\r\n    exit = noop; // null out in case of race condition\r\n    child = null;\r\n    if (!config.required) {\r\n      // Execute all other quit listeners.\r\n      bus.listeners('quit').forEach(function (listener) {\r\n        if (listener !== onQuit) {\r\n          listener();\r\n        }\r\n      });\r\n      process.exit(code);\r\n    } else {\r\n      bus.emit('exit');\r\n    }\r\n  };\r\n\r\n  // if we're not running already, don't bother with trying to kill\r\n  if (config.run === false) {\r\n    return exit();\r\n  }\r\n\r\n  // immediately try to stop any polling\r\n  config.run = false;\r\n\r\n  if (child) {\r\n    // give up waiting for the kids after 10 seconds\r\n    exitTimer = setTimeout(exit, 10 * 1000);\r\n    child.removeAllListeners('exit');\r\n    child.once('exit', exit);\r\n\r\n    kill(child, 'SIGINT');\r\n  } else {\r\n    exit();\r\n  }\r\n});\r\n\r\nbus.on('restart', function () {\r\n  // run.kill will send a SIGINT to the child process, which will cause it\r\n  // to terminate, which in turn uses the 'exit' event handler to restart\r\n  run.kill();\r\n});\r\n\r\n// remove the child file on exit\r\nprocess.on('exit', function () {\r\n  utils.log.detail('exiting');\r\n  if (child) {\r\n    child.kill();\r\n  }\r\n});\r\n\r\n// because windows borks when listening for the SIG* events\r\nif (!utils.isWindows) {\r\n  bus.once('boot', () => {\r\n    // usual suspect: ctrl+c exit\r\n    process.once('SIGINT', () => bus.emit('quit', 130));\r\n    process.once('SIGTERM', () => {\r\n      bus.emit('quit', 143);\r\n      if (child) {\r\n        child.kill('SIGTERM');\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\nmodule.exports = run;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/nodemon/lib/monitor/run.js b/node_modules/nodemon/lib/monitor/run.js
--- a/node_modules/nodemon/lib/monitor/run.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/nodemon/lib/monitor/run.js	(date 1753913035591)
@@ -64,7 +64,7 @@
   const binPath = process.cwd() + '/node_modules/.bin';
 
   const spawnOptions = {
-    env: Object.assign({}, process.env, options.execOptions.env, {
+    env: Object.assign({}, options.execOptions.env, process.env, {
       PATH:
         binPath +
         path.delimiter +
@@ -249,7 +249,14 @@
       }
     } else {
       bus.emit('crash');
+
+      // support the old syntax of `exitcrash` - 2024-12-13
       if (options.exitcrash) {
+        options.exitCrash = true;
+        delete options.exitcrash;
+      }
+
+      if (options.exitCrash) {
         utils.log.fail('app crashed');
         if (!config.required) {
           process.exit(1);
Index: node_modules/object-inspect/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>var hasMap = typeof Map === 'function' && Map.prototype;\r\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\r\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\r\nvar mapForEach = hasMap && Map.prototype.forEach;\r\nvar hasSet = typeof Set === 'function' && Set.prototype;\r\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\r\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\r\nvar setForEach = hasSet && Set.prototype.forEach;\r\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\r\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\r\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\r\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\r\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\r\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\r\nvar booleanValueOf = Boolean.prototype.valueOf;\r\nvar objectToString = Object.prototype.toString;\r\nvar functionToString = Function.prototype.toString;\r\nvar $match = String.prototype.match;\r\nvar $slice = String.prototype.slice;\r\nvar $replace = String.prototype.replace;\r\nvar $toUpperCase = String.prototype.toUpperCase;\r\nvar $toLowerCase = String.prototype.toLowerCase;\r\nvar $test = RegExp.prototype.test;\r\nvar $concat = Array.prototype.concat;\r\nvar $join = Array.prototype.join;\r\nvar $arrSlice = Array.prototype.slice;\r\nvar $floor = Math.floor;\r\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\r\nvar gOPS = Object.getOwnPropertySymbols;\r\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\r\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\r\n// ie, `has-tostringtag/shams\r\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\r\n    ? Symbol.toStringTag\r\n    : null;\r\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\r\n\r\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\r\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\r\n        ? function (O) {\r\n            return O.__proto__; // eslint-disable-line no-proto\r\n        }\r\n        : null\r\n);\r\n\r\nfunction addNumericSeparator(num, str) {\r\n    if (\r\n        num === Infinity\r\n        || num === -Infinity\r\n        || num !== num\r\n        || (num && num > -1000 && num < 1000)\r\n        || $test.call(/e/, str)\r\n    ) {\r\n        return str;\r\n    }\r\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\r\n    if (typeof num === 'number') {\r\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\r\n        if (int !== num) {\r\n            var intStr = String(int);\r\n            var dec = $slice.call(str, intStr.length + 1);\r\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\r\n        }\r\n    }\r\n    return $replace.call(str, sepRegex, '$&_');\r\n}\r\n\r\nvar utilInspect = require('./util.inspect');\r\nvar inspectCustom = utilInspect.custom;\r\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\r\n\r\nmodule.exports = function inspect_(obj, options, depth, seen) {\r\n    var opts = options || {};\r\n\r\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\r\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\r\n    }\r\n    if (\r\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\r\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\r\n            : opts.maxStringLength !== null\r\n        )\r\n    ) {\r\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\r\n    }\r\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\r\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\r\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\r\n    }\r\n\r\n    if (\r\n        has(opts, 'indent')\r\n        && opts.indent !== null\r\n        && opts.indent !== '\\t'\r\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\r\n    ) {\r\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\r\n    }\r\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\r\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\r\n    }\r\n    var numericSeparator = opts.numericSeparator;\r\n\r\n    if (typeof obj === 'undefined') {\r\n        return 'undefined';\r\n    }\r\n    if (obj === null) {\r\n        return 'null';\r\n    }\r\n    if (typeof obj === 'boolean') {\r\n        return obj ? 'true' : 'false';\r\n    }\r\n\r\n    if (typeof obj === 'string') {\r\n        return inspectString(obj, opts);\r\n    }\r\n    if (typeof obj === 'number') {\r\n        if (obj === 0) {\r\n            return Infinity / obj > 0 ? '0' : '-0';\r\n        }\r\n        var str = String(obj);\r\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\r\n    }\r\n    if (typeof obj === 'bigint') {\r\n        var bigIntStr = String(obj) + 'n';\r\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\r\n    }\r\n\r\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\r\n    if (typeof depth === 'undefined') { depth = 0; }\r\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\r\n        return isArray(obj) ? '[Array]' : '[Object]';\r\n    }\r\n\r\n    var indent = getIndent(opts, depth);\r\n\r\n    if (typeof seen === 'undefined') {\r\n        seen = [];\r\n    } else if (indexOf(seen, obj) >= 0) {\r\n        return '[Circular]';\r\n    }\r\n\r\n    function inspect(value, from, noIndent) {\r\n        if (from) {\r\n            seen = $arrSlice.call(seen);\r\n            seen.push(from);\r\n        }\r\n        if (noIndent) {\r\n            var newOpts = {\r\n                depth: opts.depth\r\n            };\r\n            if (has(opts, 'quoteStyle')) {\r\n                newOpts.quoteStyle = opts.quoteStyle;\r\n            }\r\n            return inspect_(value, newOpts, depth + 1, seen);\r\n        }\r\n        return inspect_(value, opts, depth + 1, seen);\r\n    }\r\n\r\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\r\n        var name = nameOf(obj);\r\n        var keys = arrObjKeys(obj, inspect);\r\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\r\n    }\r\n    if (isSymbol(obj)) {\r\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\r\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\r\n    }\r\n    if (isElement(obj)) {\r\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\r\n        var attrs = obj.attributes || [];\r\n        for (var i = 0; i < attrs.length; i++) {\r\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\r\n        }\r\n        s += '>';\r\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\r\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\r\n        return s;\r\n    }\r\n    if (isArray(obj)) {\r\n        if (obj.length === 0) { return '[]'; }\r\n        var xs = arrObjKeys(obj, inspect);\r\n        if (indent && !singleLineValues(xs)) {\r\n            return '[' + indentedJoin(xs, indent) + ']';\r\n        }\r\n        return '[ ' + $join.call(xs, ', ') + ' ]';\r\n    }\r\n    if (isError(obj)) {\r\n        var parts = arrObjKeys(obj, inspect);\r\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\r\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\r\n        }\r\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\r\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\r\n    }\r\n    if (typeof obj === 'object' && customInspect) {\r\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\r\n            return utilInspect(obj, { depth: maxDepth - depth });\r\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\r\n            return obj.inspect();\r\n        }\r\n    }\r\n    if (isMap(obj)) {\r\n        var mapParts = [];\r\n        if (mapForEach) {\r\n            mapForEach.call(obj, function (value, key) {\r\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\r\n            });\r\n        }\r\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\r\n    }\r\n    if (isSet(obj)) {\r\n        var setParts = [];\r\n        if (setForEach) {\r\n            setForEach.call(obj, function (value) {\r\n                setParts.push(inspect(value, obj));\r\n            });\r\n        }\r\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\r\n    }\r\n    if (isWeakMap(obj)) {\r\n        return weakCollectionOf('WeakMap');\r\n    }\r\n    if (isWeakSet(obj)) {\r\n        return weakCollectionOf('WeakSet');\r\n    }\r\n    if (isWeakRef(obj)) {\r\n        return weakCollectionOf('WeakRef');\r\n    }\r\n    if (isNumber(obj)) {\r\n        return markBoxed(inspect(Number(obj)));\r\n    }\r\n    if (isBigInt(obj)) {\r\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\r\n    }\r\n    if (isBoolean(obj)) {\r\n        return markBoxed(booleanValueOf.call(obj));\r\n    }\r\n    if (isString(obj)) {\r\n        return markBoxed(inspect(String(obj)));\r\n    }\r\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\r\n    /* eslint-env browser */\r\n    if (typeof window !== 'undefined' && obj === window) {\r\n        return '{ [object Window] }';\r\n    }\r\n    if (obj === global) {\r\n        return '{ [object globalThis] }';\r\n    }\r\n    if (!isDate(obj) && !isRegExp(obj)) {\r\n        var ys = arrObjKeys(obj, inspect);\r\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\r\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\r\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\r\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\r\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\r\n        if (ys.length === 0) { return tag + '{}'; }\r\n        if (indent) {\r\n            return tag + '{' + indentedJoin(ys, indent) + '}';\r\n        }\r\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\r\n    }\r\n    return String(obj);\r\n};\r\n\r\nfunction wrapQuotes(s, defaultStyle, opts) {\r\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\r\n    return quoteChar + s + quoteChar;\r\n}\r\n\r\nfunction quote(s) {\r\n    return $replace.call(String(s), /\"/g, '&quot;');\r\n}\r\n\r\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\r\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\r\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\r\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\r\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\r\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\r\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\r\n\r\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\r\nfunction isSymbol(obj) {\r\n    if (hasShammedSymbols) {\r\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\r\n    }\r\n    if (typeof obj === 'symbol') {\r\n        return true;\r\n    }\r\n    if (!obj || typeof obj !== 'object' || !symToString) {\r\n        return false;\r\n    }\r\n    try {\r\n        symToString.call(obj);\r\n        return true;\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nfunction isBigInt(obj) {\r\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\r\n        return false;\r\n    }\r\n    try {\r\n        bigIntValueOf.call(obj);\r\n        return true;\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\r\nfunction has(obj, key) {\r\n    return hasOwn.call(obj, key);\r\n}\r\n\r\nfunction toStr(obj) {\r\n    return objectToString.call(obj);\r\n}\r\n\r\nfunction nameOf(f) {\r\n    if (f.name) { return f.name; }\r\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\r\n    if (m) { return m[1]; }\r\n    return null;\r\n}\r\n\r\nfunction indexOf(xs, x) {\r\n    if (xs.indexOf) { return xs.indexOf(x); }\r\n    for (var i = 0, l = xs.length; i < l; i++) {\r\n        if (xs[i] === x) { return i; }\r\n    }\r\n    return -1;\r\n}\r\n\r\nfunction isMap(x) {\r\n    if (!mapSize || !x || typeof x !== 'object') {\r\n        return false;\r\n    }\r\n    try {\r\n        mapSize.call(x);\r\n        try {\r\n            setSize.call(x);\r\n        } catch (s) {\r\n            return true;\r\n        }\r\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nfunction isWeakMap(x) {\r\n    if (!weakMapHas || !x || typeof x !== 'object') {\r\n        return false;\r\n    }\r\n    try {\r\n        weakMapHas.call(x, weakMapHas);\r\n        try {\r\n            weakSetHas.call(x, weakSetHas);\r\n        } catch (s) {\r\n            return true;\r\n        }\r\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nfunction isWeakRef(x) {\r\n    if (!weakRefDeref || !x || typeof x !== 'object') {\r\n        return false;\r\n    }\r\n    try {\r\n        weakRefDeref.call(x);\r\n        return true;\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nfunction isSet(x) {\r\n    if (!setSize || !x || typeof x !== 'object') {\r\n        return false;\r\n    }\r\n    try {\r\n        setSize.call(x);\r\n        try {\r\n            mapSize.call(x);\r\n        } catch (m) {\r\n            return true;\r\n        }\r\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nfunction isWeakSet(x) {\r\n    if (!weakSetHas || !x || typeof x !== 'object') {\r\n        return false;\r\n    }\r\n    try {\r\n        weakSetHas.call(x, weakSetHas);\r\n        try {\r\n            weakMapHas.call(x, weakMapHas);\r\n        } catch (s) {\r\n            return true;\r\n        }\r\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nfunction isElement(x) {\r\n    if (!x || typeof x !== 'object') { return false; }\r\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\r\n        return true;\r\n    }\r\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\r\n}\r\n\r\nfunction inspectString(str, opts) {\r\n    if (str.length > opts.maxStringLength) {\r\n        var remaining = str.length - opts.maxStringLength;\r\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\r\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\r\n    }\r\n    // eslint-disable-next-line no-control-regex\r\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\r\n    return wrapQuotes(s, 'single', opts);\r\n}\r\n\r\nfunction lowbyte(c) {\r\n    var n = c.charCodeAt(0);\r\n    var x = {\r\n        8: 'b',\r\n        9: 't',\r\n        10: 'n',\r\n        12: 'f',\r\n        13: 'r'\r\n    }[n];\r\n    if (x) { return '\\\\' + x; }\r\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\r\n}\r\n\r\nfunction markBoxed(str) {\r\n    return 'Object(' + str + ')';\r\n}\r\n\r\nfunction weakCollectionOf(type) {\r\n    return type + ' { ? }';\r\n}\r\n\r\nfunction collectionOf(type, size, entries, indent) {\r\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\r\n    return type + ' (' + size + ') {' + joinedEntries + '}';\r\n}\r\n\r\nfunction singleLineValues(xs) {\r\n    for (var i = 0; i < xs.length; i++) {\r\n        if (indexOf(xs[i], '\\n') >= 0) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction getIndent(opts, depth) {\r\n    var baseIndent;\r\n    if (opts.indent === '\\t') {\r\n        baseIndent = '\\t';\r\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\r\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\r\n    } else {\r\n        return null;\r\n    }\r\n    return {\r\n        base: baseIndent,\r\n        prev: $join.call(Array(depth + 1), baseIndent)\r\n    };\r\n}\r\n\r\nfunction indentedJoin(xs, indent) {\r\n    if (xs.length === 0) { return ''; }\r\n    var lineJoiner = '\\n' + indent.prev + indent.base;\r\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\r\n}\r\n\r\nfunction arrObjKeys(obj, inspect) {\r\n    var isArr = isArray(obj);\r\n    var xs = [];\r\n    if (isArr) {\r\n        xs.length = obj.length;\r\n        for (var i = 0; i < obj.length; i++) {\r\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\r\n        }\r\n    }\r\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\r\n    var symMap;\r\n    if (hasShammedSymbols) {\r\n        symMap = {};\r\n        for (var k = 0; k < syms.length; k++) {\r\n            symMap['$' + syms[k]] = syms[k];\r\n        }\r\n    }\r\n\r\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\r\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\r\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\r\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\r\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\r\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\r\n        } else if ($test.call(/[^\\w$]/, key)) {\r\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\r\n        } else {\r\n            xs.push(key + ': ' + inspect(obj[key], obj));\r\n        }\r\n    }\r\n    if (typeof gOPS === 'function') {\r\n        for (var j = 0; j < syms.length; j++) {\r\n            if (isEnumerable.call(obj, syms[j])) {\r\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\r\n            }\r\n        }\r\n    }\r\n    return xs;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/object-inspect/index.js b/node_modules/object-inspect/index.js
--- a/node_modules/object-inspect/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/object-inspect/index.js	(date 1753913035410)
@@ -69,10 +69,21 @@
 var inspectCustom = utilInspect.custom;
 var inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;
 
+var quotes = {
+    __proto__: null,
+    'double': '"',
+    single: "'"
+};
+var quoteREs = {
+    __proto__: null,
+    'double': /(["\\])/g,
+    single: /(['\\])/g
+};
+
 module.exports = function inspect_(obj, options, depth, seen) {
     var opts = options || {};
 
-    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {
+    if (has(opts, 'quoteStyle') && !has(quotes, opts.quoteStyle)) {
         throw new TypeError('option "quoteStyle" must be "single" or "double"');
     }
     if (
@@ -244,7 +255,10 @@
     if (typeof window !== 'undefined' && obj === window) {
         return '{ [object Window] }';
     }
-    if (obj === global) {
+    if (
+        (typeof globalThis !== 'undefined' && obj === globalThis)
+        || (typeof global !== 'undefined' && obj === global)
+    ) {
         return '{ [object globalThis] }';
     }
     if (!isDate(obj) && !isRegExp(obj)) {
@@ -264,7 +278,8 @@
 };
 
 function wrapQuotes(s, defaultStyle, opts) {
-    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '"' : "'";
+    var style = opts.quoteStyle || defaultStyle;
+    var quoteChar = quotes[style];
     return quoteChar + s + quoteChar;
 }
 
@@ -272,13 +287,16 @@
     return $replace.call(String(s), /"/g, '&quot;');
 }
 
-function isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
-function isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
-function isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
-function isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
-function isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
-function isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
-function isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
+function canTrustToString(obj) {
+    return !toStringTag || !(typeof obj === 'object' && (toStringTag in obj || typeof obj[toStringTag] !== 'undefined'));
+}
+function isArray(obj) { return toStr(obj) === '[object Array]' && canTrustToString(obj); }
+function isDate(obj) { return toStr(obj) === '[object Date]' && canTrustToString(obj); }
+function isRegExp(obj) { return toStr(obj) === '[object RegExp]' && canTrustToString(obj); }
+function isError(obj) { return toStr(obj) === '[object Error]' && canTrustToString(obj); }
+function isString(obj) { return toStr(obj) === '[object String]' && canTrustToString(obj); }
+function isNumber(obj) { return toStr(obj) === '[object Number]' && canTrustToString(obj); }
+function isBoolean(obj) { return toStr(obj) === '[object Boolean]' && canTrustToString(obj); }
 
 // Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives
 function isSymbol(obj) {
@@ -422,8 +440,10 @@
         var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');
         return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;
     }
+    var quoteRE = quoteREs[opts.quoteStyle || 'single'];
+    quoteRE.lastIndex = 0;
     // eslint-disable-next-line no-control-regex
-    var s = $replace.call($replace.call(str, /(['\\])/g, '\\$1'), /[\x00-\x1f]/g, lowbyte);
+    var s = $replace.call($replace.call(str, quoteRE, '\\$1'), /[\x00-\x1f]/g, lowbyte);
     return wrapQuotes(s, 'single', opts);
 }
 
Index: node_modules/nodemon/node_modules/ms/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"ms\",\r\n  \"version\": \"2.1.2\",\r\n  \"description\": \"Tiny millisecond conversion utility\",\r\n  \"repository\": \"zeit/ms\",\r\n  \"main\": \"./index\",\r\n  \"files\": [\r\n    \"index.js\"\r\n  ],\r\n  \"scripts\": {\r\n    \"precommit\": \"lint-staged\",\r\n    \"lint\": \"eslint lib/* bin/*\",\r\n    \"test\": \"mocha tests.js\"\r\n  },\r\n  \"eslintConfig\": {\r\n    \"extends\": \"eslint:recommended\",\r\n    \"env\": {\r\n      \"node\": true,\r\n      \"es6\": true\r\n    }\r\n  },\r\n  \"lint-staged\": {\r\n    \"*.js\": [\r\n      \"npm run lint\",\r\n      \"prettier --single-quote --write\",\r\n      \"git add\"\r\n    ]\r\n  },\r\n  \"license\": \"MIT\",\r\n  \"devDependencies\": {\r\n    \"eslint\": \"4.12.1\",\r\n    \"expect.js\": \"0.3.1\",\r\n    \"husky\": \"0.14.3\",\r\n    \"lint-staged\": \"5.0.0\",\r\n    \"mocha\": \"4.0.1\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/nodemon/node_modules/ms/package.json b/node_modules/nodemon/node_modules/ms/package.json
--- a/node_modules/nodemon/node_modules/ms/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/nodemon/node_modules/ms/package.json	(date 1753913035835)
@@ -1,8 +1,8 @@
 {
   "name": "ms",
-  "version": "2.1.2",
+  "version": "2.1.3",
   "description": "Tiny millisecond conversion utility",
-  "repository": "zeit/ms",
+  "repository": "vercel/ms",
   "main": "./index",
   "files": [
     "index.js"
@@ -28,10 +28,11 @@
   },
   "license": "MIT",
   "devDependencies": {
-    "eslint": "4.12.1",
+    "eslint": "4.18.2",
     "expect.js": "0.3.1",
     "husky": "0.14.3",
     "lint-staged": "5.0.0",
-    "mocha": "4.0.1"
+    "mocha": "4.0.1",
+    "prettier": "2.0.5"
   }
 }
Index: node_modules/nodemon/node_modules/ms/readme.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># ms\r\n\r\n[![Build Status](https://travis-ci.org/zeit/ms.svg?branch=master)](https://travis-ci.org/zeit/ms)\r\n[![Join the community on Spectrum](https://withspectrum.github.io/badge/badge.svg)](https://spectrum.chat/zeit)\r\n\r\nUse this package to easily convert various time formats to milliseconds.\r\n\r\n## Examples\r\n\r\n```js\r\nms('2 days')  // 172800000\r\nms('1d')      // 86400000\r\nms('10h')     // 36000000\r\nms('2.5 hrs') // 9000000\r\nms('2h')      // 7200000\r\nms('1m')      // 60000\r\nms('5s')      // 5000\r\nms('1y')      // 31557600000\r\nms('100')     // 100\r\nms('-3 days') // -259200000\r\nms('-1h')     // -3600000\r\nms('-200')    // -200\r\n```\r\n\r\n### Convert from Milliseconds\r\n\r\n```js\r\nms(60000)             // \"1m\"\r\nms(2 * 60000)         // \"2m\"\r\nms(-3 * 60000)        // \"-3m\"\r\nms(ms('10 hours'))    // \"10h\"\r\n```\r\n\r\n### Time Format Written-Out\r\n\r\n```js\r\nms(60000, { long: true })             // \"1 minute\"\r\nms(2 * 60000, { long: true })         // \"2 minutes\"\r\nms(-3 * 60000, { long: true })        // \"-3 minutes\"\r\nms(ms('10 hours'), { long: true })    // \"10 hours\"\r\n```\r\n\r\n## Features\r\n\r\n- Works both in [Node.js](https://nodejs.org) and in the browser\r\n- If a number is supplied to `ms`, a string with a unit is returned\r\n- If a string that contains the number is supplied, it returns it as a number (e.g.: it returns `100` for `'100'`)\r\n- If you pass a string with a number and a valid unit, the number of equivalent milliseconds is returned\r\n\r\n## Related Packages\r\n\r\n- [ms.macro](https://github.com/knpwrs/ms.macro) - Run `ms` as a macro at build-time.\r\n\r\n## Caught a Bug?\r\n\r\n1. [Fork](https://help.github.com/articles/fork-a-repo/) this repository to your own GitHub account and then [clone](https://help.github.com/articles/cloning-a-repository/) it to your local device\r\n2. Link the package to the global module directory: `npm link`\r\n3. Within the module you want to test your local development instance of ms, just link it to the dependencies: `npm link ms`. Instead of the default one from npm, Node.js will now use your clone of ms!\r\n\r\nAs always, you can run the tests using: `npm test`\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/nodemon/node_modules/ms/readme.md b/node_modules/nodemon/node_modules/ms/readme.md
--- a/node_modules/nodemon/node_modules/ms/readme.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/nodemon/node_modules/ms/readme.md	(date 1753913035844)
@@ -1,7 +1,6 @@
 # ms
 
-[![Build Status](https://travis-ci.org/zeit/ms.svg?branch=master)](https://travis-ci.org/zeit/ms)
-[![Join the community on Spectrum](https://withspectrum.github.io/badge/badge.svg)](https://spectrum.chat/zeit)
+![CI](https://github.com/vercel/ms/workflows/CI/badge.svg)
 
 Use this package to easily convert various time formats to milliseconds.
 
Index: node_modules/object-inspect/readme.markdown
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># object-inspect <sup>[![Version Badge][2]][1]</sup>\r\n\r\nstring representations of objects in node and the browser\r\n\r\n[![github actions][actions-image]][actions-url]\r\n[![coverage][codecov-image]][codecov-url]\r\n[![dependency status][5]][6]\r\n[![dev dependency status][7]][8]\r\n[![License][license-image]][license-url]\r\n[![Downloads][downloads-image]][downloads-url]\r\n\r\n[![npm badge][11]][1]\r\n\r\n# example\r\n\r\n## circular\r\n\r\n``` js\r\nvar inspect = require('object-inspect');\r\nvar obj = { a: 1, b: [3,4] };\r\nobj.c = obj;\r\nconsole.log(inspect(obj));\r\n```\r\n\r\n## dom element\r\n\r\n``` js\r\nvar inspect = require('object-inspect');\r\n\r\nvar d = document.createElement('div');\r\nd.setAttribute('id', 'beep');\r\nd.innerHTML = '<b>wooo</b><i>iiiii</i>';\r\n\r\nconsole.log(inspect([ d, { a: 3, b : 4, c: [5,6,[7,[8,[9]]]] } ]));\r\n```\r\n\r\noutput:\r\n\r\n```\r\n[ <div id=\"beep\">...</div>, { a: 3, b: 4, c: [ 5, 6, [ 7, [ 8, [ ... ] ] ] ] } ]\r\n```\r\n\r\n# methods\r\n\r\n``` js\r\nvar inspect = require('object-inspect')\r\n```\r\n\r\n## var s = inspect(obj, opts={})\r\n\r\nReturn a string `s` with the string representation of `obj` up to a depth of `opts.depth`.\r\n\r\nAdditional options:\r\n  - `quoteStyle`: must be \"single\" or \"double\", if present. Default `'single'` for strings, `'double'` for HTML elements.\r\n  - `maxStringLength`: must be `0`, a positive integer, `Infinity`, or `null`, if present. Default `Infinity`.\r\n  - `customInspect`: When `true`, a custom inspect method function will be invoked (either undere the `util.inspect.custom` symbol, or the `inspect` property). When the string `'symbol'`, only the symbol method will be invoked. Default `true`.\r\n  - `indent`: must be \"\\t\", `null`, or a positive integer. Default `null`.\r\n  - `numericSeparator`: must be a boolean, if present. Default `false`. If `true`, all numbers will be printed with numeric separators (eg, `1234.5678` will be printed as `'1_234.567_8'`)\r\n\r\n# install\r\n\r\nWith [npm](https://npmjs.org) do:\r\n\r\n```\r\nnpm install object-inspect\r\n```\r\n\r\n# license\r\n\r\nMIT\r\n\r\n[1]: https://npmjs.org/package/object-inspect\r\n[2]: https://versionbadg.es/inspect-js/object-inspect.svg\r\n[5]: https://david-dm.org/inspect-js/object-inspect.svg\r\n[6]: https://david-dm.org/inspect-js/object-inspect\r\n[7]: https://david-dm.org/inspect-js/object-inspect/dev-status.svg\r\n[8]: https://david-dm.org/inspect-js/object-inspect#info=devDependencies\r\n[11]: https://nodei.co/npm/object-inspect.png?downloads=true&stars=true\r\n[license-image]: https://img.shields.io/npm/l/object-inspect.svg\r\n[license-url]: LICENSE\r\n[downloads-image]: https://img.shields.io/npm/dm/object-inspect.svg\r\n[downloads-url]: https://npm-stat.com/charts.html?package=object-inspect\r\n[codecov-image]: https://codecov.io/gh/inspect-js/object-inspect/branch/main/graphs/badge.svg\r\n[codecov-url]: https://app.codecov.io/gh/inspect-js/object-inspect/\r\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/inspect-js/object-inspect\r\n[actions-url]: https://github.com/inspect-js/object-inspect/actions\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/object-inspect/readme.markdown b/node_modules/object-inspect/readme.markdown
--- a/node_modules/object-inspect/readme.markdown	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/object-inspect/readme.markdown	(date 1753913035419)
@@ -1,15 +1,13 @@
-# object-inspect <sup>[![Version Badge][2]][1]</sup>
+# object-inspect <sup>[![Version Badge][npm-version-svg]][package-url]</sup>
 
 string representations of objects in node and the browser
 
 [![github actions][actions-image]][actions-url]
 [![coverage][codecov-image]][codecov-url]
-[![dependency status][5]][6]
-[![dev dependency status][7]][8]
 [![License][license-image]][license-url]
 [![Downloads][downloads-image]][downloads-url]
 
-[![npm badge][11]][1]
+[![npm badge][npm-badge-png]][package-url]
 
 # example
 
@@ -69,13 +67,13 @@
 
 MIT
 
-[1]: https://npmjs.org/package/object-inspect
-[2]: https://versionbadg.es/inspect-js/object-inspect.svg
-[5]: https://david-dm.org/inspect-js/object-inspect.svg
-[6]: https://david-dm.org/inspect-js/object-inspect
-[7]: https://david-dm.org/inspect-js/object-inspect/dev-status.svg
-[8]: https://david-dm.org/inspect-js/object-inspect#info=devDependencies
-[11]: https://nodei.co/npm/object-inspect.png?downloads=true&stars=true
+[package-url]: https://npmjs.org/package/object-inspect
+[npm-version-svg]: https://versionbadg.es/inspect-js/object-inspect.svg
+[deps-svg]: https://david-dm.org/inspect-js/object-inspect.svg
+[deps-url]: https://david-dm.org/inspect-js/object-inspect
+[dev-deps-svg]: https://david-dm.org/inspect-js/object-inspect/dev-status.svg
+[dev-deps-url]: https://david-dm.org/inspect-js/object-inspect#info=devDependencies
+[npm-badge-png]: https://nodei.co/npm/object-inspect.png?downloads=true&stars=true
 [license-image]: https://img.shields.io/npm/l/object-inspect.svg
 [license-url]: LICENSE
 [downloads-image]: https://img.shields.io/npm/dm/object-inspect.svg
Index: node_modules/nodemon/node_modules/ms/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * Helpers.\r\n */\r\n\r\nvar s = 1000;\r\nvar m = s * 60;\r\nvar h = m * 60;\r\nvar d = h * 24;\r\nvar w = d * 7;\r\nvar y = d * 365.25;\r\n\r\n/**\r\n * Parse or format the given `val`.\r\n *\r\n * Options:\r\n *\r\n *  - `long` verbose formatting [false]\r\n *\r\n * @param {String|Number} val\r\n * @param {Object} [options]\r\n * @throws {Error} throw an error if val is not a non-empty string or a number\r\n * @return {String|Number}\r\n * @api public\r\n */\r\n\r\nmodule.exports = function(val, options) {\r\n  options = options || {};\r\n  var type = typeof val;\r\n  if (type === 'string' && val.length > 0) {\r\n    return parse(val);\r\n  } else if (type === 'number' && isFinite(val)) {\r\n    return options.long ? fmtLong(val) : fmtShort(val);\r\n  }\r\n  throw new Error(\r\n    'val is not a non-empty string or a valid number. val=' +\r\n      JSON.stringify(val)\r\n  );\r\n};\r\n\r\n/**\r\n * Parse the given `str` and return milliseconds.\r\n *\r\n * @param {String} str\r\n * @return {Number}\r\n * @api private\r\n */\r\n\r\nfunction parse(str) {\r\n  str = String(str);\r\n  if (str.length > 100) {\r\n    return;\r\n  }\r\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\r\n    str\r\n  );\r\n  if (!match) {\r\n    return;\r\n  }\r\n  var n = parseFloat(match[1]);\r\n  var type = (match[2] || 'ms').toLowerCase();\r\n  switch (type) {\r\n    case 'years':\r\n    case 'year':\r\n    case 'yrs':\r\n    case 'yr':\r\n    case 'y':\r\n      return n * y;\r\n    case 'weeks':\r\n    case 'week':\r\n    case 'w':\r\n      return n * w;\r\n    case 'days':\r\n    case 'day':\r\n    case 'd':\r\n      return n * d;\r\n    case 'hours':\r\n    case 'hour':\r\n    case 'hrs':\r\n    case 'hr':\r\n    case 'h':\r\n      return n * h;\r\n    case 'minutes':\r\n    case 'minute':\r\n    case 'mins':\r\n    case 'min':\r\n    case 'm':\r\n      return n * m;\r\n    case 'seconds':\r\n    case 'second':\r\n    case 'secs':\r\n    case 'sec':\r\n    case 's':\r\n      return n * s;\r\n    case 'milliseconds':\r\n    case 'millisecond':\r\n    case 'msecs':\r\n    case 'msec':\r\n    case 'ms':\r\n      return n;\r\n    default:\r\n      return undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Short format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtShort(ms) {\r\n  var msAbs = Math.abs(ms);\r\n  if (msAbs >= d) {\r\n    return Math.round(ms / d) + 'd';\r\n  }\r\n  if (msAbs >= h) {\r\n    return Math.round(ms / h) + 'h';\r\n  }\r\n  if (msAbs >= m) {\r\n    return Math.round(ms / m) + 'm';\r\n  }\r\n  if (msAbs >= s) {\r\n    return Math.round(ms / s) + 's';\r\n  }\r\n  return ms + 'ms';\r\n}\r\n\r\n/**\r\n * Long format for `ms`.\r\n *\r\n * @param {Number} ms\r\n * @return {String}\r\n * @api private\r\n */\r\n\r\nfunction fmtLong(ms) {\r\n  var msAbs = Math.abs(ms);\r\n  if (msAbs >= d) {\r\n    return plural(ms, msAbs, d, 'day');\r\n  }\r\n  if (msAbs >= h) {\r\n    return plural(ms, msAbs, h, 'hour');\r\n  }\r\n  if (msAbs >= m) {\r\n    return plural(ms, msAbs, m, 'minute');\r\n  }\r\n  if (msAbs >= s) {\r\n    return plural(ms, msAbs, s, 'second');\r\n  }\r\n  return ms + ' ms';\r\n}\r\n\r\n/**\r\n * Pluralization helper.\r\n */\r\n\r\nfunction plural(ms, msAbs, n, name) {\r\n  var isPlural = msAbs >= n * 1.5;\r\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/nodemon/node_modules/ms/index.js b/node_modules/nodemon/node_modules/ms/index.js
--- a/node_modules/nodemon/node_modules/ms/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/nodemon/node_modules/ms/index.js	(date 1753913035833)
@@ -23,7 +23,7 @@
  * @api public
  */
 
-module.exports = function(val, options) {
+module.exports = function (val, options) {
   options = options || {};
   var type = typeof val;
   if (type === 'string' && val.length > 0) {
Index: node_modules/nodemon/node_modules/ms/license.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>The MIT License (MIT)\r\n\r\nCopyright (c) 2016 Zeit, Inc.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/nodemon/node_modules/ms/license.md b/node_modules/nodemon/node_modules/ms/license.md
--- a/node_modules/nodemon/node_modules/ms/license.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/nodemon/node_modules/ms/license.md	(date 1753913035840)
@@ -1,6 +1,6 @@
 The MIT License (MIT)
 
-Copyright (c) 2016 Zeit, Inc.
+Copyright (c) 2020 Vercel, Inc.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
Index: node_modules/nodemon/node_modules/debug/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"debug\",\r\n  \"version\": \"4.3.4\",\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git://github.com/debug-js/debug.git\"\r\n  },\r\n  \"description\": \"Lightweight debugging utility for Node.js and the browser\",\r\n  \"keywords\": [\r\n    \"debug\",\r\n    \"log\",\r\n    \"debugger\"\r\n  ],\r\n  \"files\": [\r\n    \"src\",\r\n    \"LICENSE\",\r\n    \"README.md\"\r\n  ],\r\n  \"author\": \"Josh Junon <josh.junon@protonmail.com>\",\r\n  \"contributors\": [\r\n    \"TJ Holowaychuk <tj@vision-media.ca>\",\r\n    \"Nathan Rajlich <nathan@tootallnate.net> (http://n8.io)\",\r\n    \"Andrew Rhyne <rhyneandrew@gmail.com>\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"scripts\": {\r\n    \"lint\": \"xo\",\r\n    \"test\": \"npm run test:node && npm run test:browser && npm run lint\",\r\n    \"test:node\": \"istanbul cover _mocha -- test.js\",\r\n    \"test:browser\": \"karma start --single-run\",\r\n    \"test:coverage\": \"cat ./coverage/lcov.info | coveralls\"\r\n  },\r\n  \"dependencies\": {\r\n    \"ms\": \"2.1.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"brfs\": \"^2.0.1\",\r\n    \"browserify\": \"^16.2.3\",\r\n    \"coveralls\": \"^3.0.2\",\r\n    \"istanbul\": \"^0.4.5\",\r\n    \"karma\": \"^3.1.4\",\r\n    \"karma-browserify\": \"^6.0.0\",\r\n    \"karma-chrome-launcher\": \"^2.2.0\",\r\n    \"karma-mocha\": \"^1.3.0\",\r\n    \"mocha\": \"^5.2.0\",\r\n    \"mocha-lcov-reporter\": \"^1.2.0\",\r\n    \"xo\": \"^0.23.0\"\r\n  },\r\n  \"peerDependenciesMeta\": {\r\n    \"supports-color\": {\r\n      \"optional\": true\r\n    }\r\n  },\r\n  \"main\": \"./src/index.js\",\r\n  \"browser\": \"./src/browser.js\",\r\n  \"engines\": {\r\n    \"node\": \">=6.0\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/nodemon/node_modules/debug/package.json b/node_modules/nodemon/node_modules/debug/package.json
--- a/node_modules/nodemon/node_modules/debug/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/nodemon/node_modules/debug/package.json	(date 1753913035849)
@@ -1,6 +1,6 @@
 {
   "name": "debug",
-  "version": "4.3.4",
+  "version": "4.4.1",
   "repository": {
     "type": "git",
     "url": "git://github.com/debug-js/debug.git"
@@ -16,7 +16,7 @@
     "LICENSE",
     "README.md"
   ],
-  "author": "Josh Junon <josh.junon@protonmail.com>",
+  "author": "Josh Junon (https://github.com/qix-)",
   "contributors": [
     "TJ Holowaychuk <tj@vision-media.ca>",
     "Nathan Rajlich <nathan@tootallnate.net> (http://n8.io)",
@@ -26,24 +26,24 @@
   "scripts": {
     "lint": "xo",
     "test": "npm run test:node && npm run test:browser && npm run lint",
-    "test:node": "istanbul cover _mocha -- test.js",
+    "test:node": "mocha test.js test.node.js",
     "test:browser": "karma start --single-run",
     "test:coverage": "cat ./coverage/lcov.info | coveralls"
   },
   "dependencies": {
-    "ms": "2.1.2"
+    "ms": "^2.1.3"
   },
   "devDependencies": {
     "brfs": "^2.0.1",
     "browserify": "^16.2.3",
     "coveralls": "^3.0.2",
-    "istanbul": "^0.4.5",
     "karma": "^3.1.4",
     "karma-browserify": "^6.0.0",
     "karma-chrome-launcher": "^2.2.0",
     "karma-mocha": "^1.3.0",
     "mocha": "^5.2.0",
     "mocha-lcov-reporter": "^1.2.0",
+    "sinon": "^14.0.0",
     "xo": "^0.23.0"
   },
   "peerDependenciesMeta": {
@@ -55,5 +55,10 @@
   "browser": "./src/browser.js",
   "engines": {
     "node": ">=6.0"
+  },
+  "xo": {
+    "rules": {
+      "import/extensions": "off"
+    }
   }
 }
Index: node_modules/nodemon/node_modules/debug/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># debug\r\n[![Build Status](https://travis-ci.org/debug-js/debug.svg?branch=master)](https://travis-ci.org/debug-js/debug)  [![Coverage Status](https://coveralls.io/repos/github/debug-js/debug/badge.svg?branch=master)](https://coveralls.io/github/debug-js/debug?branch=master)  [![Slack](https://visionmedia-community-slackin.now.sh/badge.svg)](https://visionmedia-community-slackin.now.sh/) [![OpenCollective](https://opencollective.com/debug/backers/badge.svg)](#backers)\r\n[![OpenCollective](https://opencollective.com/debug/sponsors/badge.svg)](#sponsors)\r\n\r\n<img width=\"647\" src=\"https://user-images.githubusercontent.com/71256/29091486-fa38524c-7c37-11e7-895f-e7ec8e1039b6.png\">\r\n\r\nA tiny JavaScript debugging utility modelled after Node.js core's debugging\r\ntechnique. Works in Node.js and web browsers.\r\n\r\n## Installation\r\n\r\n```bash\r\n$ npm install debug\r\n```\r\n\r\n## Usage\r\n\r\n`debug` exposes a function; simply pass this function the name of your module, and it will return a decorated version of `console.error` for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole.\r\n\r\nExample [_app.js_](./examples/node/app.js):\r\n\r\n```js\r\nvar debug = require('debug')('http')\r\n  , http = require('http')\r\n  , name = 'My App';\r\n\r\n// fake app\r\n\r\ndebug('booting %o', name);\r\n\r\nhttp.createServer(function(req, res){\r\n  debug(req.method + ' ' + req.url);\r\n  res.end('hello\\n');\r\n}).listen(3000, function(){\r\n  debug('listening');\r\n});\r\n\r\n// fake worker of some kind\r\n\r\nrequire('./worker');\r\n```\r\n\r\nExample [_worker.js_](./examples/node/worker.js):\r\n\r\n```js\r\nvar a = require('debug')('worker:a')\r\n  , b = require('debug')('worker:b');\r\n\r\nfunction work() {\r\n  a('doing lots of uninteresting work');\r\n  setTimeout(work, Math.random() * 1000);\r\n}\r\n\r\nwork();\r\n\r\nfunction workb() {\r\n  b('doing some work');\r\n  setTimeout(workb, Math.random() * 2000);\r\n}\r\n\r\nworkb();\r\n```\r\n\r\nThe `DEBUG` environment variable is then used to enable these based on space or\r\ncomma-delimited names.\r\n\r\nHere are some examples:\r\n\r\n<img width=\"647\" alt=\"screen shot 2017-08-08 at 12 53 04 pm\" src=\"https://user-images.githubusercontent.com/71256/29091703-a6302cdc-7c38-11e7-8304-7c0b3bc600cd.png\">\r\n<img width=\"647\" alt=\"screen shot 2017-08-08 at 12 53 38 pm\" src=\"https://user-images.githubusercontent.com/71256/29091700-a62a6888-7c38-11e7-800b-db911291ca2b.png\">\r\n<img width=\"647\" alt=\"screen shot 2017-08-08 at 12 53 25 pm\" src=\"https://user-images.githubusercontent.com/71256/29091701-a62ea114-7c38-11e7-826a-2692bedca740.png\">\r\n\r\n#### Windows command prompt notes\r\n\r\n##### CMD\r\n\r\nOn Windows the environment variable is set using the `set` command.\r\n\r\n```cmd\r\nset DEBUG=*,-not_this\r\n```\r\n\r\nExample:\r\n\r\n```cmd\r\nset DEBUG=* & node app.js\r\n```\r\n\r\n##### PowerShell (VS Code default)\r\n\r\nPowerShell uses different syntax to set environment variables.\r\n\r\n```cmd\r\n$env:DEBUG = \"*,-not_this\"\r\n```\r\n\r\nExample:\r\n\r\n```cmd\r\n$env:DEBUG='app';node app.js\r\n```\r\n\r\nThen, run the program to be debugged as usual.\r\n\r\nnpm script example:\r\n```js\r\n  \"windowsDebug\": \"@powershell -Command $env:DEBUG='*';node app.js\",\r\n```\r\n\r\n## Namespace Colors\r\n\r\nEvery debug instance has a color generated for it based on its namespace name.\r\nThis helps when visually parsing the debug output to identify which debug instance\r\na debug line belongs to.\r\n\r\n#### Node.js\r\n\r\nIn Node.js, colors are enabled when stderr is a TTY. You also _should_ install\r\nthe [`supports-color`](https://npmjs.org/supports-color) module alongside debug,\r\notherwise debug will only use a small handful of basic colors.\r\n\r\n<img width=\"521\" src=\"https://user-images.githubusercontent.com/71256/29092181-47f6a9e6-7c3a-11e7-9a14-1928d8a711cd.png\">\r\n\r\n#### Web Browser\r\n\r\nColors are also enabled on \"Web Inspectors\" that understand the `%c` formatting\r\noption. These are WebKit web inspectors, Firefox ([since version\r\n31](https://hacks.mozilla.org/2014/05/editable-box-model-multiple-selection-sublime-text-keys-much-more-firefox-developer-tools-episode-31/))\r\nand the Firebug plugin for Firefox (any version).\r\n\r\n<img width=\"524\" src=\"https://user-images.githubusercontent.com/71256/29092033-b65f9f2e-7c39-11e7-8e32-f6f0d8e865c1.png\">\r\n\r\n\r\n## Millisecond diff\r\n\r\nWhen actively developing an application it can be useful to see when the time spent between one `debug()` call and the next. Suppose for example you invoke `debug()` before requesting a resource, and after as well, the \"+NNNms\" will show you how much time was spent between calls.\r\n\r\n<img width=\"647\" src=\"https://user-images.githubusercontent.com/71256/29091486-fa38524c-7c37-11e7-895f-e7ec8e1039b6.png\">\r\n\r\nWhen stdout is not a TTY, `Date#toISOString()` is used, making it more useful for logging the debug information as shown below:\r\n\r\n<img width=\"647\" src=\"https://user-images.githubusercontent.com/71256/29091956-6bd78372-7c39-11e7-8c55-c948396d6edd.png\">\r\n\r\n\r\n## Conventions\r\n\r\nIf you're using this in one or more of your libraries, you _should_ use the name of your library so that developers may toggle debugging as desired without guessing names. If you have more than one debuggers you _should_ prefix them with your library name and use \":\" to separate features. For example \"bodyParser\" from Connect would then be \"connect:bodyParser\".  If you append a \"*\" to the end of your name, it will always be enabled regardless of the setting of the DEBUG environment variable.  You can then use it for normal output as well as debug output.\r\n\r\n## Wildcards\r\n\r\nThe `*` character may be used as a wildcard. Suppose for example your library has\r\ndebuggers named \"connect:bodyParser\", \"connect:compress\", \"connect:session\",\r\ninstead of listing all three with\r\n`DEBUG=connect:bodyParser,connect:compress,connect:session`, you may simply do\r\n`DEBUG=connect:*`, or to run everything using this module simply use `DEBUG=*`.\r\n\r\nYou can also exclude specific debuggers by prefixing them with a \"-\" character.\r\nFor example, `DEBUG=*,-connect:*` would include all debuggers except those\r\nstarting with \"connect:\".\r\n\r\n## Environment Variables\r\n\r\nWhen running through Node.js, you can set a few environment variables that will\r\nchange the behavior of the debug logging:\r\n\r\n| Name      | Purpose                                         |\r\n|-----------|-------------------------------------------------|\r\n| `DEBUG`   | Enables/disables specific debugging namespaces. |\r\n| `DEBUG_HIDE_DATE` | Hide date from debug output (non-TTY).  |\r\n| `DEBUG_COLORS`| Whether or not to use colors in the debug output. |\r\n| `DEBUG_DEPTH` | Object inspection depth.                    |\r\n| `DEBUG_SHOW_HIDDEN` | Shows hidden properties on inspected objects. |\r\n\r\n\r\n__Note:__ The environment variables beginning with `DEBUG_` end up being\r\nconverted into an Options object that gets used with `%o`/`%O` formatters.\r\nSee the Node.js documentation for\r\n[`util.inspect()`](https://nodejs.org/api/util.html#util_util_inspect_object_options)\r\nfor the complete list.\r\n\r\n## Formatters\r\n\r\nDebug uses [printf-style](https://wikipedia.org/wiki/Printf_format_string) formatting.\r\nBelow are the officially supported formatters:\r\n\r\n| Formatter | Representation |\r\n|-----------|----------------|\r\n| `%O`      | Pretty-print an Object on multiple lines. |\r\n| `%o`      | Pretty-print an Object all on a single line. |\r\n| `%s`      | String. |\r\n| `%d`      | Number (both integer and float). |\r\n| `%j`      | JSON. Replaced with the string '[Circular]' if the argument contains circular references. |\r\n| `%%`      | Single percent sign ('%'). This does not consume an argument. |\r\n\r\n\r\n### Custom formatters\r\n\r\nYou can add custom formatters by extending the `debug.formatters` object.\r\nFor example, if you wanted to add support for rendering a Buffer as hex with\r\n`%h`, you could do something like:\r\n\r\n```js\r\nconst createDebug = require('debug')\r\ncreateDebug.formatters.h = (v) => {\r\n  return v.toString('hex')\r\n}\r\n\r\n// …elsewhere\r\nconst debug = createDebug('foo')\r\ndebug('this is hex: %h', new Buffer('hello world'))\r\n//   foo this is hex: 68656c6c6f20776f726c6421 +0ms\r\n```\r\n\r\n\r\n## Browser Support\r\n\r\nYou can build a browser-ready script using [browserify](https://github.com/substack/node-browserify),\r\nor just use the [browserify-as-a-service](https://wzrd.in/) [build](https://wzrd.in/standalone/debug@latest),\r\nif you don't want to build it yourself.\r\n\r\nDebug's enable state is currently persisted by `localStorage`.\r\nConsider the situation shown below where you have `worker:a` and `worker:b`,\r\nand wish to debug both. You can enable this using `localStorage.debug`:\r\n\r\n```js\r\nlocalStorage.debug = 'worker:*'\r\n```\r\n\r\nAnd then refresh the page.\r\n\r\n```js\r\na = debug('worker:a');\r\nb = debug('worker:b');\r\n\r\nsetInterval(function(){\r\n  a('doing some work');\r\n}, 1000);\r\n\r\nsetInterval(function(){\r\n  b('doing some work');\r\n}, 1200);\r\n```\r\n\r\nIn Chromium-based web browsers (e.g. Brave, Chrome, and Electron), the JavaScript console will—by default—only show messages logged by `debug` if the \"Verbose\" log level is _enabled_.\r\n\r\n<img width=\"647\" src=\"https://user-images.githubusercontent.com/7143133/152083257-29034707-c42c-4959-8add-3cee850e6fcf.png\">\r\n\r\n## Output streams\r\n\r\n  By default `debug` will log to stderr, however this can be configured per-namespace by overriding the `log` method:\r\n\r\nExample [_stdout.js_](./examples/node/stdout.js):\r\n\r\n```js\r\nvar debug = require('debug');\r\nvar error = debug('app:error');\r\n\r\n// by default stderr is used\r\nerror('goes to stderr!');\r\n\r\nvar log = debug('app:log');\r\n// set this namespace to log via console.log\r\nlog.log = console.log.bind(console); // don't forget to bind to console!\r\nlog('goes to stdout');\r\nerror('still goes to stderr!');\r\n\r\n// set all output to go via console.info\r\n// overrides all per-namespace log settings\r\ndebug.log = console.info.bind(console);\r\nerror('now goes to stdout via console.info');\r\nlog('still goes to stdout, but via console.info now');\r\n```\r\n\r\n## Extend\r\nYou can simply extend debugger \r\n```js\r\nconst log = require('debug')('auth');\r\n\r\n//creates new debug instance with extended namespace\r\nconst logSign = log.extend('sign');\r\nconst logLogin = log.extend('login');\r\n\r\nlog('hello'); // auth hello\r\nlogSign('hello'); //auth:sign hello\r\nlogLogin('hello'); //auth:login hello\r\n```\r\n\r\n## Set dynamically\r\n\r\nYou can also enable debug dynamically by calling the `enable()` method :\r\n\r\n```js\r\nlet debug = require('debug');\r\n\r\nconsole.log(1, debug.enabled('test'));\r\n\r\ndebug.enable('test');\r\nconsole.log(2, debug.enabled('test'));\r\n\r\ndebug.disable();\r\nconsole.log(3, debug.enabled('test'));\r\n\r\n```\r\n\r\nprint :   \r\n```\r\n1 false\r\n2 true\r\n3 false\r\n```\r\n\r\nUsage :  \r\n`enable(namespaces)`  \r\n`namespaces` can include modes separated by a colon and wildcards.\r\n   \r\nNote that calling `enable()` completely overrides previously set DEBUG variable : \r\n\r\n```\r\n$ DEBUG=foo node -e 'var dbg = require(\"debug\"); dbg.enable(\"bar\"); console.log(dbg.enabled(\"foo\"))'\r\n=> false\r\n```\r\n\r\n`disable()`\r\n\r\nWill disable all namespaces. The functions returns the namespaces currently\r\nenabled (and skipped). This can be useful if you want to disable debugging\r\ntemporarily without knowing what was enabled to begin with.\r\n\r\nFor example:\r\n\r\n```js\r\nlet debug = require('debug');\r\ndebug.enable('foo:*,-foo:bar');\r\nlet namespaces = debug.disable();\r\ndebug.enable(namespaces);\r\n```\r\n\r\nNote: There is no guarantee that the string will be identical to the initial\r\nenable string, but semantically they will be identical.\r\n\r\n## Checking whether a debug target is enabled\r\n\r\nAfter you've created a debug instance, you can determine whether or not it is\r\nenabled by checking the `enabled` property:\r\n\r\n```javascript\r\nconst debug = require('debug')('http');\r\n\r\nif (debug.enabled) {\r\n  // do stuff...\r\n}\r\n```\r\n\r\nYou can also manually toggle this property to force the debug instance to be\r\nenabled or disabled.\r\n\r\n## Usage in child processes\r\n\r\nDue to the way `debug` detects if the output is a TTY or not, colors are not shown in child processes when `stderr` is piped. A solution is to pass the `DEBUG_COLORS=1` environment variable to the child process.  \r\nFor example:\r\n\r\n```javascript\r\nworker = fork(WORKER_WRAP_PATH, [workerPath], {\r\n  stdio: [\r\n    /* stdin: */ 0,\r\n    /* stdout: */ 'pipe',\r\n    /* stderr: */ 'pipe',\r\n    'ipc',\r\n  ],\r\n  env: Object.assign({}, process.env, {\r\n    DEBUG_COLORS: 1 // without this settings, colors won't be shown\r\n  }),\r\n});\r\n\r\nworker.stderr.pipe(process.stderr, { end: false });\r\n```\r\n\r\n\r\n## Authors\r\n\r\n - TJ Holowaychuk\r\n - Nathan Rajlich\r\n - Andrew Rhyne\r\n - Josh Junon\r\n\r\n## Backers\r\n\r\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/debug#backer)]\r\n\r\n<a href=\"https://opencollective.com/debug/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/0/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/1/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/2/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/3/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/4/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/5/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/6/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/7/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/8/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/9/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/10/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/11/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/12/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/13/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/14/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/15/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/16/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/17/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/18/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/19/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/20/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/21/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/22/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/23/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/24/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/25/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/26/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/27/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/28/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/backer/29/avatar.svg\"></a>\r\n\r\n\r\n## Sponsors\r\n\r\nBecome a sponsor and get your logo on our README on Github with a link to your site. [[Become a sponsor](https://opencollective.com/debug#sponsor)]\r\n\r\n<a href=\"https://opencollective.com/debug/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/0/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/1/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/2/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/3/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/4/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/5/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/6/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/7/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/8/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/9/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/10/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/11/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/12/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/13/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/14/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/15/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/16/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/17/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/18/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/19/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/20/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/21/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/22/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/23/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/24/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/25/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/26/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/27/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/28/avatar.svg\"></a>\r\n<a href=\"https://opencollective.com/debug/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/debug/sponsor/29/avatar.svg\"></a>\r\n\r\n## License\r\n\r\n(The MIT License)\r\n\r\nCopyright (c) 2014-2017 TJ Holowaychuk &lt;tj@vision-media.ca&gt;\r\nCopyright (c) 2018-2021 Josh Junon\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining\r\na copy of this software and associated documentation files (the\r\n'Software'), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be\r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/nodemon/node_modules/debug/README.md b/node_modules/nodemon/node_modules/debug/README.md
--- a/node_modules/nodemon/node_modules/debug/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/nodemon/node_modules/debug/README.md	(date 1753913035853)
@@ -1,5 +1,5 @@
 # debug
-[![Build Status](https://travis-ci.org/debug-js/debug.svg?branch=master)](https://travis-ci.org/debug-js/debug)  [![Coverage Status](https://coveralls.io/repos/github/debug-js/debug/badge.svg?branch=master)](https://coveralls.io/github/debug-js/debug?branch=master)  [![Slack](https://visionmedia-community-slackin.now.sh/badge.svg)](https://visionmedia-community-slackin.now.sh/) [![OpenCollective](https://opencollective.com/debug/backers/badge.svg)](#backers)
+[![OpenCollective](https://opencollective.com/debug/backers/badge.svg)](#backers)
 [![OpenCollective](https://opencollective.com/debug/sponsors/badge.svg)](#sponsors)
 
 <img width="647" src="https://user-images.githubusercontent.com/71256/29091486-fa38524c-7c37-11e7-895f-e7ec8e1039b6.png">
Index: node_modules/object-inspect/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"object-inspect\",\r\n  \"version\": \"1.13.1\",\r\n  \"description\": \"string representations of objects in node and the browser\",\r\n  \"main\": \"index.js\",\r\n  \"sideEffects\": false,\r\n  \"devDependencies\": {\r\n    \"@ljharb/eslint-config\": \"^21.1.0\",\r\n    \"@pkgjs/support\": \"^0.0.6\",\r\n    \"auto-changelog\": \"^2.4.0\",\r\n    \"core-js\": \"^2.6.12\",\r\n    \"error-cause\": \"^1.0.6\",\r\n    \"es-value-fixtures\": \"^1.4.2\",\r\n    \"eslint\": \"=8.8.0\",\r\n    \"for-each\": \"^0.3.3\",\r\n    \"functions-have-names\": \"^1.2.3\",\r\n    \"glob\": \"=10.3.7\",\r\n    \"globalthis\": \"^1.0.3\",\r\n    \"has-tostringtag\": \"^1.0.0\",\r\n    \"in-publish\": \"^2.0.1\",\r\n    \"jackspeak\": \"=2.1.1\",\r\n    \"make-arrow-function\": \"^1.2.0\",\r\n    \"mock-property\": \"^1.0.2\",\r\n    \"npmignore\": \"^0.3.0\",\r\n    \"nyc\": \"^10.3.2\",\r\n    \"safe-publish-latest\": \"^2.0.0\",\r\n    \"string.prototype.repeat\": \"^1.0.0\",\r\n    \"tape\": \"^5.7.1\"\r\n  },\r\n  \"scripts\": {\r\n    \"prepack\": \"npmignore --auto --commentLines=autogenerated\",\r\n    \"prepublish\": \"not-in-publish || npm run prepublishOnly\",\r\n    \"prepublishOnly\": \"safe-publish-latest\",\r\n    \"pretest\": \"npm run lint\",\r\n    \"lint\": \"eslint --ext=js,mjs .\",\r\n    \"postlint\": \"npx @pkgjs/support validate\",\r\n    \"test\": \"npm run tests-only && npm run test:corejs\",\r\n    \"tests-only\": \"nyc tape 'test/*.js'\",\r\n    \"test:corejs\": \"nyc tape test-core-js.js 'test/*.js'\",\r\n    \"posttest\": \"npx aud --production\",\r\n    \"version\": \"auto-changelog && git add CHANGELOG.md\",\r\n    \"postversion\": \"auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \\\"v$(node -e \\\"console.log(require('./package.json').version)\\\")\\\"\"\r\n  },\r\n  \"testling\": {\r\n    \"files\": [\r\n      \"test/*.js\",\r\n      \"test/browser/*.js\"\r\n    ],\r\n    \"browsers\": [\r\n      \"ie/6..latest\",\r\n      \"chrome/latest\",\r\n      \"firefox/latest\",\r\n      \"safari/latest\",\r\n      \"opera/latest\",\r\n      \"iphone/latest\",\r\n      \"ipad/latest\",\r\n      \"android/latest\"\r\n    ]\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git://github.com/inspect-js/object-inspect.git\"\r\n  },\r\n  \"homepage\": \"https://github.com/inspect-js/object-inspect\",\r\n  \"keywords\": [\r\n    \"inspect\",\r\n    \"util.inspect\",\r\n    \"object\",\r\n    \"stringify\",\r\n    \"pretty\"\r\n  ],\r\n  \"author\": {\r\n    \"name\": \"James Halliday\",\r\n    \"email\": \"mail@substack.net\",\r\n    \"url\": \"http://substack.net\"\r\n  },\r\n  \"funding\": {\r\n    \"url\": \"https://github.com/sponsors/ljharb\"\r\n  },\r\n  \"license\": \"MIT\",\r\n  \"browser\": {\r\n    \"./util.inspect.js\": false\r\n  },\r\n  \"auto-changelog\": {\r\n    \"output\": \"CHANGELOG.md\",\r\n    \"template\": \"keepachangelog\",\r\n    \"unreleased\": false,\r\n    \"commitLimit\": false,\r\n    \"backfillLimit\": false,\r\n    \"hideCredit\": true\r\n  },\r\n  \"publishConfig\": {\r\n    \"ignore\": [\r\n      \".github/workflows\",\r\n      \"./test-core-js.js\"\r\n    ]\r\n  },\r\n  \"support\": true\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/object-inspect/package.json b/node_modules/object-inspect/package.json
--- a/node_modules/object-inspect/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/object-inspect/package.json	(date 1753913035419)
@@ -1,31 +1,34 @@
 {
   "name": "object-inspect",
-  "version": "1.13.1",
+  "version": "1.13.4",
   "description": "string representations of objects in node and the browser",
   "main": "index.js",
   "sideEffects": false,
   "devDependencies": {
-    "@ljharb/eslint-config": "^21.1.0",
+    "@ljharb/eslint-config": "^21.1.1",
     "@pkgjs/support": "^0.0.6",
-    "auto-changelog": "^2.4.0",
+    "auto-changelog": "^2.5.0",
     "core-js": "^2.6.12",
-    "error-cause": "^1.0.6",
-    "es-value-fixtures": "^1.4.2",
+    "error-cause": "^1.0.8",
+    "es-value-fixtures": "^1.7.1",
     "eslint": "=8.8.0",
-    "for-each": "^0.3.3",
+    "for-each": "^0.3.4",
     "functions-have-names": "^1.2.3",
     "glob": "=10.3.7",
-    "globalthis": "^1.0.3",
-    "has-tostringtag": "^1.0.0",
+    "globalthis": "^1.0.4",
+    "has-symbols": "^1.1.0",
+    "has-tostringtag": "^1.0.2",
     "in-publish": "^2.0.1",
     "jackspeak": "=2.1.1",
     "make-arrow-function": "^1.2.0",
-    "mock-property": "^1.0.2",
-    "npmignore": "^0.3.0",
+    "mock-property": "^1.1.0",
+    "npmignore": "^0.3.1",
     "nyc": "^10.3.2",
     "safe-publish-latest": "^2.0.0",
+    "safer-buffer": "^2.1.2",
+    "semver": "^6.3.1",
     "string.prototype.repeat": "^1.0.0",
-    "tape": "^5.7.1"
+    "tape": "^5.9.0"
   },
   "scripts": {
     "prepack": "npmignore --auto --commentLines=autogenerated",
@@ -37,7 +40,7 @@
     "test": "npm run tests-only && npm run test:corejs",
     "tests-only": "nyc tape 'test/*.js'",
     "test:corejs": "nyc tape test-core-js.js 'test/*.js'",
-    "posttest": "npx aud --production",
+    "posttest": "npx npm@'>=10.2' audit --production",
     "version": "auto-changelog && git add CHANGELOG.md",
     "postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
   },
@@ -95,5 +98,8 @@
       "./test-core-js.js"
     ]
   },
-  "support": true
+  "support": true,
+  "engines": {
+    "node": ">= 0.4"
+  }
 }
Index: node_modules/nodemon/node_modules/debug/src/common.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\n/**\r\n * This is the common logic for both the Node.js and web browser\r\n * implementations of `debug()`.\r\n */\r\n\r\nfunction setup(env) {\r\n\tcreateDebug.debug = createDebug;\r\n\tcreateDebug.default = createDebug;\r\n\tcreateDebug.coerce = coerce;\r\n\tcreateDebug.disable = disable;\r\n\tcreateDebug.enable = enable;\r\n\tcreateDebug.enabled = enabled;\r\n\tcreateDebug.humanize = require('ms');\r\n\tcreateDebug.destroy = destroy;\r\n\r\n\tObject.keys(env).forEach(key => {\r\n\t\tcreateDebug[key] = env[key];\r\n\t});\r\n\r\n\t/**\r\n\t* The currently active debug mode names, and names to skip.\r\n\t*/\r\n\r\n\tcreateDebug.names = [];\r\n\tcreateDebug.skips = [];\r\n\r\n\t/**\r\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\r\n\t*\r\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\r\n\t*/\r\n\tcreateDebug.formatters = {};\r\n\r\n\t/**\r\n\t* Selects a color for a debug namespace\r\n\t* @param {String} namespace The namespace string for the debug instance to be colored\r\n\t* @return {Number|String} An ANSI color code for the given namespace\r\n\t* @api private\r\n\t*/\r\n\tfunction selectColor(namespace) {\r\n\t\tlet hash = 0;\r\n\r\n\t\tfor (let i = 0; i < namespace.length; i++) {\r\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\r\n\t\t\thash |= 0; // Convert to 32bit integer\r\n\t\t}\r\n\r\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\r\n\t}\r\n\tcreateDebug.selectColor = selectColor;\r\n\r\n\t/**\r\n\t* Create a debugger with the given `namespace`.\r\n\t*\r\n\t* @param {String} namespace\r\n\t* @return {Function}\r\n\t* @api public\r\n\t*/\r\n\tfunction createDebug(namespace) {\r\n\t\tlet prevTime;\r\n\t\tlet enableOverride = null;\r\n\t\tlet namespacesCache;\r\n\t\tlet enabledCache;\r\n\r\n\t\tfunction debug(...args) {\r\n\t\t\t// Disabled?\r\n\t\t\tif (!debug.enabled) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst self = debug;\r\n\r\n\t\t\t// Set `diff` timestamp\r\n\t\t\tconst curr = Number(new Date());\r\n\t\t\tconst ms = curr - (prevTime || curr);\r\n\t\t\tself.diff = ms;\r\n\t\t\tself.prev = prevTime;\r\n\t\t\tself.curr = curr;\r\n\t\t\tprevTime = curr;\r\n\r\n\t\t\targs[0] = createDebug.coerce(args[0]);\r\n\r\n\t\t\tif (typeof args[0] !== 'string') {\r\n\t\t\t\t// Anything else let's inspect with %O\r\n\t\t\t\targs.unshift('%O');\r\n\t\t\t}\r\n\r\n\t\t\t// Apply any `formatters` transformations\r\n\t\t\tlet index = 0;\r\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\r\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\r\n\t\t\t\tif (match === '%%') {\r\n\t\t\t\t\treturn '%';\r\n\t\t\t\t}\r\n\t\t\t\tindex++;\r\n\t\t\t\tconst formatter = createDebug.formatters[format];\r\n\t\t\t\tif (typeof formatter === 'function') {\r\n\t\t\t\t\tconst val = args[index];\r\n\t\t\t\t\tmatch = formatter.call(self, val);\r\n\r\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\r\n\t\t\t\t\targs.splice(index, 1);\r\n\t\t\t\t\tindex--;\r\n\t\t\t\t}\r\n\t\t\t\treturn match;\r\n\t\t\t});\r\n\r\n\t\t\t// Apply env-specific formatting (colors, etc.)\r\n\t\t\tcreateDebug.formatArgs.call(self, args);\r\n\r\n\t\t\tconst logFn = self.log || createDebug.log;\r\n\t\t\tlogFn.apply(self, args);\r\n\t\t}\r\n\r\n\t\tdebug.namespace = namespace;\r\n\t\tdebug.useColors = createDebug.useColors();\r\n\t\tdebug.color = createDebug.selectColor(namespace);\r\n\t\tdebug.extend = extend;\r\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\r\n\r\n\t\tObject.defineProperty(debug, 'enabled', {\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: false,\r\n\t\t\tget: () => {\r\n\t\t\t\tif (enableOverride !== null) {\r\n\t\t\t\t\treturn enableOverride;\r\n\t\t\t\t}\r\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\r\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\r\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn enabledCache;\r\n\t\t\t},\r\n\t\t\tset: v => {\r\n\t\t\t\tenableOverride = v;\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\t// Env-specific initialization logic for debug instances\r\n\t\tif (typeof createDebug.init === 'function') {\r\n\t\t\tcreateDebug.init(debug);\r\n\t\t}\r\n\r\n\t\treturn debug;\r\n\t}\r\n\r\n\tfunction extend(namespace, delimiter) {\r\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\r\n\t\tnewDebug.log = this.log;\r\n\t\treturn newDebug;\r\n\t}\r\n\r\n\t/**\r\n\t* Enables a debug mode by namespaces. This can include modes\r\n\t* separated by a colon and wildcards.\r\n\t*\r\n\t* @param {String} namespaces\r\n\t* @api public\r\n\t*/\r\n\tfunction enable(namespaces) {\r\n\t\tcreateDebug.save(namespaces);\r\n\t\tcreateDebug.namespaces = namespaces;\r\n\r\n\t\tcreateDebug.names = [];\r\n\t\tcreateDebug.skips = [];\r\n\r\n\t\tlet i;\r\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\r\n\t\tconst len = split.length;\r\n\r\n\t\tfor (i = 0; i < len; i++) {\r\n\t\t\tif (!split[i]) {\r\n\t\t\t\t// ignore empty strings\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\r\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\r\n\r\n\t\t\tif (namespaces[0] === '-') {\r\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\r\n\t\t\t} else {\r\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t* Disable debug output.\r\n\t*\r\n\t* @return {String} namespaces\r\n\t* @api public\r\n\t*/\r\n\tfunction disable() {\r\n\t\tconst namespaces = [\r\n\t\t\t...createDebug.names.map(toNamespace),\r\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\r\n\t\t].join(',');\r\n\t\tcreateDebug.enable('');\r\n\t\treturn namespaces;\r\n\t}\r\n\r\n\t/**\r\n\t* Returns true if the given mode name is enabled, false otherwise.\r\n\t*\r\n\t* @param {String} name\r\n\t* @return {Boolean}\r\n\t* @api public\r\n\t*/\r\n\tfunction enabled(name) {\r\n\t\tif (name[name.length - 1] === '*') {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tlet i;\r\n\t\tlet len;\r\n\r\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\r\n\t\t\tif (createDebug.skips[i].test(name)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\r\n\t\t\tif (createDebug.names[i].test(name)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t}\r\n\r\n\t/**\r\n\t* Convert regexp to namespace\r\n\t*\r\n\t* @param {RegExp} regxep\r\n\t* @return {String} namespace\r\n\t* @api private\r\n\t*/\r\n\tfunction toNamespace(regexp) {\r\n\t\treturn regexp.toString()\r\n\t\t\t.substring(2, regexp.toString().length - 2)\r\n\t\t\t.replace(/\\.\\*\\?$/, '*');\r\n\t}\r\n\r\n\t/**\r\n\t* Coerce `val`.\r\n\t*\r\n\t* @param {Mixed} val\r\n\t* @return {Mixed}\r\n\t* @api private\r\n\t*/\r\n\tfunction coerce(val) {\r\n\t\tif (val instanceof Error) {\r\n\t\t\treturn val.stack || val.message;\r\n\t\t}\r\n\t\treturn val;\r\n\t}\r\n\r\n\t/**\r\n\t* XXX DO NOT USE. This is a temporary stub function.\r\n\t* XXX It WILL be removed in the next major release.\r\n\t*/\r\n\tfunction destroy() {\r\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\r\n\t}\r\n\r\n\tcreateDebug.enable(createDebug.load());\r\n\r\n\treturn createDebug;\r\n}\r\n\r\nmodule.exports = setup;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/nodemon/node_modules/debug/src/common.js b/node_modules/nodemon/node_modules/debug/src/common.js
--- a/node_modules/nodemon/node_modules/debug/src/common.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/nodemon/node_modules/debug/src/common.js	(date 1753913035844)
@@ -166,24 +166,62 @@
 		createDebug.names = [];
 		createDebug.skips = [];
 
-		let i;
-		const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
-		const len = split.length;
+		const split = (typeof namespaces === 'string' ? namespaces : '')
+			.trim()
+			.replace(/\s+/g, ',')
+			.split(',')
+			.filter(Boolean);
 
-		for (i = 0; i < len; i++) {
-			if (!split[i]) {
-				// ignore empty strings
-				continue;
+		for (const ns of split) {
+			if (ns[0] === '-') {
+				createDebug.skips.push(ns.slice(1));
+			} else {
+				createDebug.names.push(ns);
 			}
+		}
+	}
 
-			namespaces = split[i].replace(/\*/g, '.*?');
+	/**
+	 * Checks if the given string matches a namespace template, honoring
+	 * asterisks as wildcards.
+	 *
+	 * @param {String} search
+	 * @param {String} template
+	 * @return {Boolean}
+	 */
+	function matchesTemplate(search, template) {
+		let searchIndex = 0;
+		let templateIndex = 0;
+		let starIndex = -1;
+		let matchIndex = 0;
 
-			if (namespaces[0] === '-') {
-				createDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));
+		while (searchIndex < search.length) {
+			if (templateIndex < template.length && (template[templateIndex] === search[searchIndex] || template[templateIndex] === '*')) {
+				// Match character or proceed with wildcard
+				if (template[templateIndex] === '*') {
+					starIndex = templateIndex;
+					matchIndex = searchIndex;
+					templateIndex++; // Skip the '*'
+				} else {
+					searchIndex++;
+					templateIndex++;
+				}
+			} else if (starIndex !== -1) { // eslint-disable-line no-negated-condition
+				// Backtrack to the last '*' and try to match more characters
+				templateIndex = starIndex + 1;
+				matchIndex++;
+				searchIndex = matchIndex;
 			} else {
-				createDebug.names.push(new RegExp('^' + namespaces + '$'));
+				return false; // No match
 			}
 		}
+
+		// Handle trailing '*' in template
+		while (templateIndex < template.length && template[templateIndex] === '*') {
+			templateIndex++;
+		}
+
+		return templateIndex === template.length;
 	}
 
 	/**
@@ -194,8 +232,8 @@
 	*/
 	function disable() {
 		const namespaces = [
-			...createDebug.names.map(toNamespace),
-			...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)
+			...createDebug.names,
+			...createDebug.skips.map(namespace => '-' + namespace)
 		].join(',');
 		createDebug.enable('');
 		return namespaces;
@@ -209,21 +247,14 @@
 	* @api public
 	*/
 	function enabled(name) {
-		if (name[name.length - 1] === '*') {
-			return true;
-		}
-
-		let i;
-		let len;
-
-		for (i = 0, len = createDebug.skips.length; i < len; i++) {
-			if (createDebug.skips[i].test(name)) {
+		for (const skip of createDebug.skips) {
+			if (matchesTemplate(name, skip)) {
 				return false;
 			}
 		}
 
-		for (i = 0, len = createDebug.names.length; i < len; i++) {
-			if (createDebug.names[i].test(name)) {
+		for (const ns of createDebug.names) {
+			if (matchesTemplate(name, ns)) {
 				return true;
 			}
 		}
@@ -231,19 +262,6 @@
 		return false;
 	}
 
-	/**
-	* Convert regexp to namespace
-	*
-	* @param {RegExp} regxep
-	* @return {String} namespace
-	* @api private
-	*/
-	function toNamespace(regexp) {
-		return regexp.toString()
-			.substring(2, regexp.toString().length - 2)
-			.replace(/\.\*\?$/, '*');
-	}
-
 	/**
 	* Coerce `val`.
 	*
Index: node_modules/object-inspect/CHANGELOG.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [v1.13.1](https://github.com/inspect-js/object-inspect/compare/v1.13.0...v1.13.1) - 2023-10-19\r\n\r\n### Commits\r\n\r\n- [Fix] in IE 8, global can !== window despite them being prototypes of each other [`30d0859`](https://github.com/inspect-js/object-inspect/commit/30d0859dc4606cf75c2410edcd5d5c6355f8d372)\r\n\r\n## [v1.13.0](https://github.com/inspect-js/object-inspect/compare/v1.12.3...v1.13.0) - 2023-10-14\r\n\r\n### Commits\r\n\r\n- [New] add special handling for the global object [`431bab2`](https://github.com/inspect-js/object-inspect/commit/431bab21a490ee51d35395966a504501e8c685da)\r\n- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `tape` [`fd4f619`](https://github.com/inspect-js/object-inspect/commit/fd4f6193562b4b0e95dcf5c0201b4e8cbbc4f58d)\r\n- [Dev Deps] update `mock-property`, `tape` [`b453f6c`](https://github.com/inspect-js/object-inspect/commit/b453f6ceeebf8a1b738a1029754092e0367a4134)\r\n- [Dev Deps] update `error-cause` [`e8ffc57`](https://github.com/inspect-js/object-inspect/commit/e8ffc577d73b92bb6a4b00c44f14e3319e374888)\r\n- [Dev Deps] update `tape` [`054b8b9`](https://github.com/inspect-js/object-inspect/commit/054b8b9b98633284cf989e582450ebfbbe53503c)\r\n- [Dev Deps] temporarily remove `aud` due to breaking change in transitive deps [`2476845`](https://github.com/inspect-js/object-inspect/commit/2476845e0678dd290c541c81cd3dec8420782c52)\r\n- [Dev Deps] pin `glob`, since v10.3.8+ requires a broken `jackspeak` [`383fa5e`](https://github.com/inspect-js/object-inspect/commit/383fa5eebc0afd705cc778a4b49d8e26452e49a8)\r\n- [Dev Deps] pin `jackspeak` since 2.1.2+ depends on npm aliases, which kill the install process in npm &lt; 6 [`68c244c`](https://github.com/inspect-js/object-inspect/commit/68c244c5174cdd877e5dcb8ee90aa3f44b2f25be)\r\n\r\n## [v1.12.3](https://github.com/inspect-js/object-inspect/compare/v1.12.2...v1.12.3) - 2023-01-12\r\n\r\n### Commits\r\n\r\n- [Fix] in eg FF 24, collections lack forEach [`75fc226`](https://github.com/inspect-js/object-inspect/commit/75fc22673c82d45f28322b1946bb0eb41b672b7f)\r\n- [actions] update rebase action to use reusable workflow [`250a277`](https://github.com/inspect-js/object-inspect/commit/250a277a095e9dacc029ab8454dcfc15de549dcd)\r\n- [Dev Deps] update `aud`, `es-value-fixtures`, `tape` [`66a19b3`](https://github.com/inspect-js/object-inspect/commit/66a19b3209ccc3c5ef4b34c3cb0160e65d1ce9d5)\r\n- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `error-cause` [`c43d332`](https://github.com/inspect-js/object-inspect/commit/c43d3324b48384a16fd3dc444e5fc589d785bef3)\r\n- [Tests] add `@pkgjs/support` to `postlint` [`e2618d2`](https://github.com/inspect-js/object-inspect/commit/e2618d22a7a3fa361b6629b53c1752fddc9c4d80)\r\n\r\n## [v1.12.2](https://github.com/inspect-js/object-inspect/compare/v1.12.1...v1.12.2) - 2022-05-26\r\n\r\n### Commits\r\n\r\n- [Fix] use `util.inspect` for a custom inspection symbol method [`e243bf2`](https://github.com/inspect-js/object-inspect/commit/e243bf2eda6c4403ac6f1146fddb14d12e9646c1)\r\n- [meta] add support info [`ca20ba3`](https://github.com/inspect-js/object-inspect/commit/ca20ba35713c17068ca912a86c542f5e8acb656c)\r\n- [Fix] ignore `cause` in node v16.9 and v16.10 where it has a bug [`86aa553`](https://github.com/inspect-js/object-inspect/commit/86aa553a4a455562c2c56f1540f0bf857b9d314b)\r\n\r\n## [v1.12.1](https://github.com/inspect-js/object-inspect/compare/v1.12.0...v1.12.1) - 2022-05-21\r\n\r\n### Commits\r\n\r\n- [Tests] use `mock-property` [`4ec8893`](https://github.com/inspect-js/object-inspect/commit/4ec8893ea9bfd28065ca3638cf6762424bf44352)\r\n- [meta] use `npmignore` to autogenerate an npmignore file [`07f868c`](https://github.com/inspect-js/object-inspect/commit/07f868c10bd25a9d18686528339bb749c211fc9a)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `tape` [`b05244b`](https://github.com/inspect-js/object-inspect/commit/b05244b4f331e00c43b3151bc498041be77ccc91)\r\n- [Dev Deps] update `@ljharb/eslint-config`, `error-cause`, `es-value-fixtures`, `functions-have-names`, `tape` [`d037398`](https://github.com/inspect-js/object-inspect/commit/d037398dcc5d531532e4c19c4a711ed677f579c1)\r\n- [Fix] properly handle callable regexes in older engines [`848fe48`](https://github.com/inspect-js/object-inspect/commit/848fe48bd6dd0064ba781ee6f3c5e54a94144c37)\r\n\r\n## [v1.12.0](https://github.com/inspect-js/object-inspect/compare/v1.11.1...v1.12.0) - 2021-12-18\r\n\r\n### Commits\r\n\r\n- [New] add `numericSeparator` boolean option [`2d2d537`](https://github.com/inspect-js/object-inspect/commit/2d2d537f5359a4300ce1c10241369f8024f89e11)\r\n- [Robustness] cache more prototype methods [`191533d`](https://github.com/inspect-js/object-inspect/commit/191533da8aec98a05eadd73a5a6e979c9c8653e8)\r\n- [New] ensure an Error’s `cause` is displayed [`53bc2ce`](https://github.com/inspect-js/object-inspect/commit/53bc2cee4e5a9cc4986f3cafa22c0685f340715e)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config` [`bc164b6`](https://github.com/inspect-js/object-inspect/commit/bc164b6e2e7d36b263970f16f54de63048b84a36)\r\n- [Robustness] cache `RegExp.prototype.test` [`a314ab8`](https://github.com/inspect-js/object-inspect/commit/a314ab8271b905cbabc594c82914d2485a8daf12)\r\n- [meta] fix auto-changelog settings [`5ed0983`](https://github.com/inspect-js/object-inspect/commit/5ed0983be72f73e32e2559997517a95525c7e20d)\r\n\r\n## [v1.11.1](https://github.com/inspect-js/object-inspect/compare/v1.11.0...v1.11.1) - 2021-12-05\r\n\r\n### Commits\r\n\r\n- [meta] add `auto-changelog` [`7dbdd22`](https://github.com/inspect-js/object-inspect/commit/7dbdd228401d6025d8b7391476d88aee9ea9bbdf)\r\n- [actions] reuse common workflows [`c8823bc`](https://github.com/inspect-js/object-inspect/commit/c8823bc0a8790729680709d45fb6e652432e91aa)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `safe-publish-latest`, `tape` [`7532b12`](https://github.com/inspect-js/object-inspect/commit/7532b120598307497b712890f75af8056f6d37a6)\r\n- [Refactor] use `has-tostringtag` to behave correctly in the presence of symbol shams [`94abb5d`](https://github.com/inspect-js/object-inspect/commit/94abb5d4e745bf33253942dea86b3e538d2ff6c6)\r\n- [actions] update codecov uploader [`5ed5102`](https://github.com/inspect-js/object-inspect/commit/5ed51025267a00e53b1341357315490ac4eb0874)\r\n- [Dev Deps] update `eslint`, `tape` [`37b2ad2`](https://github.com/inspect-js/object-inspect/commit/37b2ad26c08d94bfd01d5d07069a0b28ef4e2ad7)\r\n- [meta] add `sideEffects` flag [`d341f90`](https://github.com/inspect-js/object-inspect/commit/d341f905ef8bffa6a694cda6ddc5ba343532cd4f)\r\n\r\n## [v1.11.0](https://github.com/inspect-js/object-inspect/compare/v1.10.3...v1.11.0) - 2021-07-12\r\n\r\n### Commits\r\n\r\n- [New] `customInspect`: add `symbol` option, to mimic modern util.inspect behavior [`e973a6e`](https://github.com/inspect-js/object-inspect/commit/e973a6e21f8140c5837cf25e9d89bdde88dc3120)\r\n- [Dev Deps] update `eslint` [`05f1cb3`](https://github.com/inspect-js/object-inspect/commit/05f1cb3cbcfe1f238e8b51cf9bc294305b7ed793)\r\n\r\n## [v1.10.3](https://github.com/inspect-js/object-inspect/compare/v1.10.2...v1.10.3) - 2021-05-07\r\n\r\n### Commits\r\n\r\n- [Fix] handle core-js Symbol shams [`4acfc2c`](https://github.com/inspect-js/object-inspect/commit/4acfc2c4b503498759120eb517abad6d51c9c5d6)\r\n- [readme] update badges [`95c323a`](https://github.com/inspect-js/object-inspect/commit/95c323ad909d6cbabb95dd6015c190ba6db9c1f2)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud` [`cb38f48`](https://github.com/inspect-js/object-inspect/commit/cb38f485de6ec7a95109b5a9bbd0a1deba2f6611)\r\n\r\n## [v1.10.2](https://github.com/inspect-js/object-inspect/compare/v1.10.1...v1.10.2) - 2021-04-17\r\n\r\n### Commits\r\n\r\n- [Fix] use a robust check for a boxed Symbol [`87f12d6`](https://github.com/inspect-js/object-inspect/commit/87f12d6e69ce530be04659c81a4cd502943acac5)\r\n\r\n## [v1.10.1](https://github.com/inspect-js/object-inspect/compare/v1.10.0...v1.10.1) - 2021-04-17\r\n\r\n### Commits\r\n\r\n- [Fix] use a robust check for a boxed bigint [`d5ca829`](https://github.com/inspect-js/object-inspect/commit/d5ca8298b6d2e5c7b9334a5b21b96ed95d225c91)\r\n\r\n## [v1.10.0](https://github.com/inspect-js/object-inspect/compare/v1.9.0...v1.10.0) - 2021-04-17\r\n\r\n### Commits\r\n\r\n- [Tests] increase coverage [`d8abb8a`](https://github.com/inspect-js/object-inspect/commit/d8abb8a62c2f084919df994a433b346e0d87a227)\r\n- [actions] use `node/install` instead of `node/run`; use `codecov` action [`4bfec2e`](https://github.com/inspect-js/object-inspect/commit/4bfec2e30aaef6ddef6cbb1448306f9f8b9520b7)\r\n- [New] respect `Symbol.toStringTag` on objects [`799b58f`](https://github.com/inspect-js/object-inspect/commit/799b58f536a45e4484633a8e9daeb0330835f175)\r\n- [Fix] do not allow Symbol.toStringTag to masquerade as builtins [`d6c5b37`](https://github.com/inspect-js/object-inspect/commit/d6c5b37d7e94427796b82432fb0c8964f033a6ab)\r\n- [New] add `WeakRef` support [`b6d898e`](https://github.com/inspect-js/object-inspect/commit/b6d898ee21868c780a7ee66b28532b5b34ed7f09)\r\n- [meta] do not publish github action workflow files [`918cdfc`](https://github.com/inspect-js/object-inspect/commit/918cdfc4b6fe83f559ff6ef04fe66201e3ff5cbd)\r\n- [meta] create `FUNDING.yml` [`0bb5fc5`](https://github.com/inspect-js/object-inspect/commit/0bb5fc516dbcd2cd728bd89cee0b580acc5ce301)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `tape` [`22c8dc0`](https://github.com/inspect-js/object-inspect/commit/22c8dc0cac113d70f4781e49a950070923a671be)\r\n- [meta] use `prepublishOnly` script for npm 7+ [`e52ee09`](https://github.com/inspect-js/object-inspect/commit/e52ee09e8050b8dbac94ef57f786675567728223)\r\n- [Dev Deps] update `eslint` [`7c4e6fd`](https://github.com/inspect-js/object-inspect/commit/7c4e6fdedcd27cc980e13c9ad834d05a96f3d40c)\r\n\r\n## [v1.9.0](https://github.com/inspect-js/object-inspect/compare/v1.8.0...v1.9.0) - 2020-11-30\r\n\r\n### Commits\r\n\r\n- [Tests] migrate tests to Github Actions [`d262251`](https://github.com/inspect-js/object-inspect/commit/d262251e13e16d3490b5473672f6b6d6ff86675d)\r\n- [New] add enumerable own Symbols to plain object output [`ee60c03`](https://github.com/inspect-js/object-inspect/commit/ee60c033088cff9d33baa71e59a362a541b48284)\r\n- [Tests] add passing tests [`01ac3e4`](https://github.com/inspect-js/object-inspect/commit/01ac3e4b5a30f97875a63dc9b1416b3bd626afc9)\r\n- [actions] add \"Require Allow Edits\" action [`c2d7746`](https://github.com/inspect-js/object-inspect/commit/c2d774680cde4ca4af332d84d4121b26f798ba9e)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `core-js` [`70058de`](https://github.com/inspect-js/object-inspect/commit/70058de1579fc54d1d15ed6c2dbe246637ce70ff)\r\n- [Fix] hex characters in strings should be uppercased, to match node `assert` [`6ab8faa`](https://github.com/inspect-js/object-inspect/commit/6ab8faaa0abc08fe7a8e2afd8b39c6f1f0e00113)\r\n- [Tests] run `nyc` on all tests [`4c47372`](https://github.com/inspect-js/object-inspect/commit/4c473727879ddc8e28b599202551ddaaf07b6210)\r\n- [Tests] node 0.8 has an unpredictable property order; fix `groups` test by removing property [`f192069`](https://github.com/inspect-js/object-inspect/commit/f192069a978a3b60e6f0e0d45ac7df260ab9a778)\r\n- [New] add enumerable properties to Function inspect result, per node’s `assert` [`fd38e1b`](https://github.com/inspect-js/object-inspect/commit/fd38e1bc3e2a1dc82091ce3e021917462eee64fc)\r\n- [Tests] fix tests for node &lt; 10, due to regex match `groups` [`2ac6462`](https://github.com/inspect-js/object-inspect/commit/2ac6462cc4f72eaa0b63a8cfee9aabe3008b2330)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config` [`44b59e2`](https://github.com/inspect-js/object-inspect/commit/44b59e2676a7f825ef530dfd19dafb599e3b9456)\r\n- [Robustness] cache `Symbol.prototype.toString` [`f3c2074`](https://github.com/inspect-js/object-inspect/commit/f3c2074d8f32faf8292587c07c9678ea931703dd)\r\n- [Dev Deps] update `eslint` [`9411294`](https://github.com/inspect-js/object-inspect/commit/94112944b9245e3302e25453277876402d207e7f)\r\n- [meta] `require-allow-edits` no longer requires an explicit github token [`36c0220`](https://github.com/inspect-js/object-inspect/commit/36c02205de3c2b0e84d53777c5c9fd54a36c48ab)\r\n- [actions] update rebase checkout action to v2 [`55a39a6`](https://github.com/inspect-js/object-inspect/commit/55a39a64e944f19c6a7d8efddf3df27700f20d14)\r\n- [actions] switch Automatic Rebase workflow to `pull_request_target` event [`f59fd3c`](https://github.com/inspect-js/object-inspect/commit/f59fd3cf406c3a7c7ece140904a80bbc6bacfcca)\r\n- [Dev Deps] update `eslint` [`a492bec`](https://github.com/inspect-js/object-inspect/commit/a492becec644b0155c9c4bc1caf6f9fac11fb2c7)\r\n\r\n## [v1.8.0](https://github.com/inspect-js/object-inspect/compare/v1.7.0...v1.8.0) - 2020-06-18\r\n\r\n### Fixed\r\n\r\n- [New] add `indent` option [`#27`](https://github.com/inspect-js/object-inspect/issues/27)\r\n\r\n### Commits\r\n\r\n- [Tests] add codecov [`4324cbb`](https://github.com/inspect-js/object-inspect/commit/4324cbb1a2bd7710822a4151ff373570db22453e)\r\n- [New] add `maxStringLength` option [`b3995cb`](https://github.com/inspect-js/object-inspect/commit/b3995cb71e15b5ee127a3094c43994df9d973502)\r\n- [New] add `customInspect` option, to disable custom inspect methods [`28b9179`](https://github.com/inspect-js/object-inspect/commit/28b9179ee802bb3b90810100c11637db90c2fb6d)\r\n- [Tests] add Date and RegExp tests [`3b28eca`](https://github.com/inspect-js/object-inspect/commit/3b28eca57b0367aeadffac604ea09e8bdae7d97b)\r\n- [actions] add automatic rebasing / merge commit blocking [`0d9c6c0`](https://github.com/inspect-js/object-inspect/commit/0d9c6c044e83475ff0bfffb9d35b149834c83a2e)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `core-js`, `tape`; add `aud` [`7c204f2`](https://github.com/inspect-js/object-inspect/commit/7c204f22b9e41bc97147f4d32d4cb045b17769a6)\r\n- [readme] fix repo URLs, remove testling [`34ca9a0`](https://github.com/inspect-js/object-inspect/commit/34ca9a0dabfe75bd311f806a326fadad029909a3)\r\n- [Fix] when truncating a deep array, note it as `[Array]` instead of just `[Object]` [`f74c82d`](https://github.com/inspect-js/object-inspect/commit/f74c82dd0b35386445510deb250f34c41be3ec0e)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `tape` [`1a8a5ea`](https://github.com/inspect-js/object-inspect/commit/1a8a5ea069ea2bee89d77caedad83ffa23d35711)\r\n- [Fix] do not be fooled by a function’s own `toString` method [`7cb5c65`](https://github.com/inspect-js/object-inspect/commit/7cb5c657a976f94715c19c10556a30f15bb7d5d7)\r\n- [patch] indicate explicitly that anon functions are anonymous, to match node [`81ebdd4`](https://github.com/inspect-js/object-inspect/commit/81ebdd4215005144074bbdff3f6bafa01407910a)\r\n- [Dev Deps] loosen the `core-js` dep [`e7472e8`](https://github.com/inspect-js/object-inspect/commit/e7472e8e242117670560bd995830c2a4d12080f5)\r\n- [Dev Deps] update `tape` [`699827e`](https://github.com/inspect-js/object-inspect/commit/699827e6b37258b5203c33c78c009bf4b0e6a66d)\r\n- [meta] add `safe-publish-latest` [`c5d2868`](https://github.com/inspect-js/object-inspect/commit/c5d2868d6eb33c472f37a20f89ceef2787046088)\r\n- [Dev Deps] update `@ljharb/eslint-config` [`9199501`](https://github.com/inspect-js/object-inspect/commit/919950195d486114ccebacbdf9d74d7f382693b0)\r\n\r\n## [v1.7.0](https://github.com/inspect-js/object-inspect/compare/v1.6.0...v1.7.0) - 2019-11-10\r\n\r\n### Commits\r\n\r\n- [Tests] use shared travis-ci configs [`19899ed`](https://github.com/inspect-js/object-inspect/commit/19899edbf31f4f8809acf745ce34ad1ce1bfa63b)\r\n- [Tests] add linting [`a00f057`](https://github.com/inspect-js/object-inspect/commit/a00f057d917f66ea26dd37769c6b810ec4af97e8)\r\n- [Tests] lint last file [`2698047`](https://github.com/inspect-js/object-inspect/commit/2698047b58af1e2e88061598ef37a75f228dddf6)\r\n- [Tests] up to `node` `v12.7`, `v11.15`, `v10.16`, `v8.16`, `v6.17` [`589e87a`](https://github.com/inspect-js/object-inspect/commit/589e87a99cadcff4b600e6a303418e9d922836e8)\r\n- [New] add support for `WeakMap` and `WeakSet` [`3ddb3e4`](https://github.com/inspect-js/object-inspect/commit/3ddb3e4e0c8287130c61a12e0ed9c104b1549306)\r\n- [meta] clean up license so github can detect it properly [`27527bb`](https://github.com/inspect-js/object-inspect/commit/27527bb801520c9610c68cc3b55d6f20a2bee56d)\r\n- [Tests] cover `util.inspect.custom` [`36d47b9`](https://github.com/inspect-js/object-inspect/commit/36d47b9c59056a57ef2f1491602c726359561800)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `core-js`, `tape` [`b614eaa`](https://github.com/inspect-js/object-inspect/commit/b614eaac901da0e5c69151f534671f990a94cace)\r\n- [Tests] fix coverage thresholds [`7b7b176`](https://github.com/inspect-js/object-inspect/commit/7b7b176e15f8bd6e8b2f261ff5a493c2fe78d9c2)\r\n- [Tests] bigint tests now can run on unflagged node [`063af31`](https://github.com/inspect-js/object-inspect/commit/063af31ce9cd13c202e3b67c07ba06dc9b7c0f81)\r\n- [Refactor] add early bailout to `isMap` and `isSet` checks [`fc51047`](https://github.com/inspect-js/object-inspect/commit/fc5104714a3671d37e225813db79470d6335683b)\r\n- [meta] add `funding` field [`7f9953a`](https://github.com/inspect-js/object-inspect/commit/7f9953a113eec7b064a6393cf9f90ba15f1d131b)\r\n- [Tests] Fix invalid strict-mode syntax with hexadecimal [`a8b5425`](https://github.com/inspect-js/object-inspect/commit/a8b542503b4af1599a275209a1a99f5fdedb1ead)\r\n- [Dev Deps] update `@ljharb/eslint-config` [`98df157`](https://github.com/inspect-js/object-inspect/commit/98df1577314d9188a3fc3f17fdcf2fba697ae1bd)\r\n- add copyright to LICENSE [`bb69fd0`](https://github.com/inspect-js/object-inspect/commit/bb69fd017a062d299e44da1f9b2c7dcd67f621e6)\r\n- [Tests] use `npx aud` in `posttest` [`4838353`](https://github.com/inspect-js/object-inspect/commit/4838353593974cf7f905b9ef04c03c094f0cdbe2)\r\n- [Tests] move `0.6` to allowed failures, because it won‘t build on travis [`1bff32a`](https://github.com/inspect-js/object-inspect/commit/1bff32aa52e8aea687f0856b28ba754b3e43ebf7)\r\n\r\n## [v1.6.0](https://github.com/inspect-js/object-inspect/compare/v1.5.0...v1.6.0) - 2018-05-02\r\n\r\n### Commits\r\n\r\n- [New] add support for boxed BigInt primitives [`356c66a`](https://github.com/inspect-js/object-inspect/commit/356c66a410e7aece7162c8319880a5ef647beaa9)\r\n- [Tests] up to `node` `v10.0`, `v9.11`, `v8.11`, `v6.14`, `v4.9` [`c77b65b`](https://github.com/inspect-js/object-inspect/commit/c77b65bba593811b906b9ec57561c5cba92e2db3)\r\n- [New] Add support for upcoming `BigInt` [`1ac548e`](https://github.com/inspect-js/object-inspect/commit/1ac548e4b27e26466c28c9a5e63e5d4e0591c31f)\r\n- [Tests] run bigint tests in CI with --harmony-bigint flag [`d31b738`](https://github.com/inspect-js/object-inspect/commit/d31b73831880254b5c6cf5691cda9a149fbc5f04)\r\n- [Dev Deps] update `core-js`, `tape` [`ff9eff6`](https://github.com/inspect-js/object-inspect/commit/ff9eff67113341ee1aaf80c1c22d683f43bfbccf)\r\n- [Docs] fix example to use `safer-buffer` [`48cae12`](https://github.com/inspect-js/object-inspect/commit/48cae12a73ec6cacc955175bc56bbe6aee6a211f)\r\n\r\n## [v1.5.0](https://github.com/inspect-js/object-inspect/compare/v1.4.1...v1.5.0) - 2017-12-25\r\n\r\n### Commits\r\n\r\n- [New] add `quoteStyle` option [`f5a72d2`](https://github.com/inspect-js/object-inspect/commit/f5a72d26edb3959b048f74c056ca7100a6b091e4)\r\n- [Tests] add more test coverage [`30ebe4e`](https://github.com/inspect-js/object-inspect/commit/30ebe4e1fa943b99ecbb85be7614256d536e2759)\r\n- [Tests] require 0.6 to pass [`99a008c`](https://github.com/inspect-js/object-inspect/commit/99a008ccace189a60fd7da18bf00e32c9572b980)\r\n\r\n## [v1.4.1](https://github.com/inspect-js/object-inspect/compare/v1.4.0...v1.4.1) - 2017-12-19\r\n\r\n### Commits\r\n\r\n- [Tests] up to `node` `v9.3`, `v8.9`, `v6.12` [`6674476`](https://github.com/inspect-js/object-inspect/commit/6674476cc56acaac1bde96c84fed5ef631911906)\r\n- [Fix] `inspect(Object(-0))` should be “Object(-0)”, not “Object(0)” [`d0a031f`](https://github.com/inspect-js/object-inspect/commit/d0a031f1cbb3024ee9982bfe364dd18a7e4d1bd3)\r\n\r\n## [v1.4.0](https://github.com/inspect-js/object-inspect/compare/v1.3.0...v1.4.0) - 2017-10-24\r\n\r\n### Commits\r\n\r\n- [Tests] add `npm run coverage` [`3b48fb2`](https://github.com/inspect-js/object-inspect/commit/3b48fb25db037235eeb808f0b2830aad7aa36f70)\r\n- [Tests] remove commented-out osx builds [`71e24db`](https://github.com/inspect-js/object-inspect/commit/71e24db8ad6ee3b9b381c5300b0475f2ba595a73)\r\n- [New] add support for `util.inspect.custom`, in node only. [`20cca77`](https://github.com/inspect-js/object-inspect/commit/20cca7762d7e17f15b21a90793dff84acce155df)\r\n- [Tests] up to `node` `v8.6`; use `nvm install-latest-npm` to ensure new npm doesn’t break old node [`252952d`](https://github.com/inspect-js/object-inspect/commit/252952d230d8065851dd3d4d5fe8398aae068529)\r\n- [Tests] up to `node` `v8.8` [`4aa868d`](https://github.com/inspect-js/object-inspect/commit/4aa868d3a62914091d489dd6ec6eed194ee67cd3)\r\n- [Dev Deps] update `core-js`, `tape` [`59483d1`](https://github.com/inspect-js/object-inspect/commit/59483d1df418f852f51fa0db7b24aa6b0209a27a)\r\n\r\n## [v1.3.0](https://github.com/inspect-js/object-inspect/compare/v1.2.2...v1.3.0) - 2017-07-31\r\n\r\n### Fixed\r\n\r\n- [Fix] Map/Set: work around core-js bug &lt; v2.5.0 [`#9`](https://github.com/inspect-js/object-inspect/issues/9)\r\n\r\n### Commits\r\n\r\n- [New] add support for arrays with additional object keys [`0d19937`](https://github.com/inspect-js/object-inspect/commit/0d199374ee37959e51539616666f420ccb29acb9)\r\n- [Tests] up to `node` `v8.2`, `v7.10`, `v6.11`; fix new npm breaking on older nodes [`e24784a`](https://github.com/inspect-js/object-inspect/commit/e24784a90c49117787157a12a63897c49cf89bbb)\r\n- Only apps should have lockfiles [`c6faebc`](https://github.com/inspect-js/object-inspect/commit/c6faebcb2ee486a889a4a1c4d78c0776c7576185)\r\n- [Dev Deps] update `tape` [`7345a0a`](https://github.com/inspect-js/object-inspect/commit/7345a0aeba7e91b888a079c10004d17696a7f586)\r\n\r\n## [v1.2.2](https://github.com/inspect-js/object-inspect/compare/v1.2.1...v1.2.2) - 2017-03-24\r\n\r\n### Commits\r\n\r\n- [Tests] up to `node` `v7.7`, `v6.10`, `v4.8`; improve test matrix [`a2ddc15`](https://github.com/inspect-js/object-inspect/commit/a2ddc15a1f2c65af18076eea1c0eb9cbceb478a0)\r\n- [Tests] up to `node` `v7.0`, `v6.9`, `v5.12`, `v4.6`, `io.js` `v3.3`; improve test matrix [`a48949f`](https://github.com/inspect-js/object-inspect/commit/a48949f6b574b2d4d2298109d8e8d0eb3e7a83e7)\r\n- [Performance] check for primitive types as early as possible. [`3b8092a`](https://github.com/inspect-js/object-inspect/commit/3b8092a2a4deffd0575f94334f00194e2d48dad3)\r\n- [Refactor] remove unneeded `else`s. [`7255034`](https://github.com/inspect-js/object-inspect/commit/725503402e08de4f96f6bf2d8edef44ac36f26b6)\r\n- [Refactor] avoid recreating `lowbyte` function every time. [`81edd34`](https://github.com/inspect-js/object-inspect/commit/81edd3475bd15bdd18e84de7472033dcf5004aaa)\r\n- [Fix] differentiate -0 from 0 [`521d345`](https://github.com/inspect-js/object-inspect/commit/521d3456b009da7bf1c5785c8a9df5a9f8718264)\r\n- [Refactor] move object key gathering into separate function [`aca6265`](https://github.com/inspect-js/object-inspect/commit/aca626536eaeef697196c6e9db3e90e7e0355b6a)\r\n- [Refactor] consolidate wrapping logic for boxed primitives into a function. [`4e440cd`](https://github.com/inspect-js/object-inspect/commit/4e440cd9065df04802a2a1dead03f48c353ca301)\r\n- [Robustness] use `typeof` instead of comparing to literal `undefined` [`5ca6f60`](https://github.com/inspect-js/object-inspect/commit/5ca6f601937506daff8ed2fcf686363b55807b69)\r\n- [Refactor] consolidate Map/Set notations. [`4e576e5`](https://github.com/inspect-js/object-inspect/commit/4e576e5d7ed2f9ec3fb7f37a0d16732eb10758a9)\r\n- [Tests] ensure that this function remains anonymous, despite ES6 name inference. [`7540ae5`](https://github.com/inspect-js/object-inspect/commit/7540ae591278756db614fa4def55ca413150e1a3)\r\n- [Refactor] explicitly coerce Error objects to strings. [`7f4ca84`](https://github.com/inspect-js/object-inspect/commit/7f4ca8424ee8dc2c0ca5a422d94f7fac40327261)\r\n- [Refactor] split up `var` declarations for debuggability [`6f2c11e`](https://github.com/inspect-js/object-inspect/commit/6f2c11e6a85418586a00292dcec5e97683f89bc3)\r\n- [Robustness] cache `Object.prototype.toString` [`df44a20`](https://github.com/inspect-js/object-inspect/commit/df44a20adfccf31529d60d1df2079bfc3c836e27)\r\n- [Dev Deps] update `tape` [`3ec714e`](https://github.com/inspect-js/object-inspect/commit/3ec714eba57bc3f58a6eb4fca1376f49e70d300a)\r\n- [Dev Deps] update `tape` [`beb72d9`](https://github.com/inspect-js/object-inspect/commit/beb72d969653747d7cde300393c28755375329b0)\r\n\r\n## [v1.2.1](https://github.com/inspect-js/object-inspect/compare/v1.2.0...v1.2.1) - 2016-04-09\r\n\r\n### Fixed\r\n\r\n- [Fix] fix Boolean `false` object inspection. [`#7`](https://github.com/substack/object-inspect/pull/7)\r\n\r\n## [v1.2.0](https://github.com/inspect-js/object-inspect/compare/v1.1.0...v1.2.0) - 2016-04-09\r\n\r\n### Fixed\r\n\r\n- [New] add support for inspecting String/Number/Boolean objects. [`#6`](https://github.com/inspect-js/object-inspect/issues/6)\r\n\r\n### Commits\r\n\r\n- [Dev Deps] update `tape` [`742caa2`](https://github.com/inspect-js/object-inspect/commit/742caa262cf7af4c815d4821c8bd0129c1446432)\r\n\r\n## [v1.1.0](https://github.com/inspect-js/object-inspect/compare/1.0.2...v1.1.0) - 2015-12-14\r\n\r\n### Merged\r\n\r\n- [New] add ES6 Map/Set support. [`#4`](https://github.com/inspect-js/object-inspect/pull/4)\r\n\r\n### Fixed\r\n\r\n- [New] add ES6 Map/Set support. [`#3`](https://github.com/inspect-js/object-inspect/issues/3)\r\n\r\n### Commits\r\n\r\n- Update `travis.yml` to test on bunches of `iojs` and `node` versions. [`4c1fd65`](https://github.com/inspect-js/object-inspect/commit/4c1fd65cc3bd95307e854d114b90478324287fd2)\r\n- [Dev Deps] update `tape` [`88a907e`](https://github.com/inspect-js/object-inspect/commit/88a907e33afbe408e4b5d6e4e42a33143f88848c)\r\n\r\n## [1.0.2](https://github.com/inspect-js/object-inspect/compare/1.0.1...1.0.2) - 2015-08-07\r\n\r\n### Commits\r\n\r\n- [Fix] Cache `Object.prototype.hasOwnProperty` in case it's deleted later. [`1d0075d`](https://github.com/inspect-js/object-inspect/commit/1d0075d3091dc82246feeb1f9871cb2b8ed227b3)\r\n- [Dev Deps] Update `tape` [`ca8d5d7`](https://github.com/inspect-js/object-inspect/commit/ca8d5d75635ddbf76f944e628267581e04958457)\r\n- gitignore node_modules since this is a reusable modules. [`ed41407`](https://github.com/inspect-js/object-inspect/commit/ed41407811743ca530cdeb28f982beb96026af82)\r\n\r\n## [1.0.1](https://github.com/inspect-js/object-inspect/compare/1.0.0...1.0.1) - 2015-07-19\r\n\r\n### Commits\r\n\r\n- Make `inspect` work with symbol primitives and objects, including in node 0.11 and 0.12. [`ddf1b94`](https://github.com/inspect-js/object-inspect/commit/ddf1b94475ab951f1e3bccdc0a48e9073cfbfef4)\r\n- bump tape [`103d674`](https://github.com/inspect-js/object-inspect/commit/103d67496b504bdcfdd765d303a773f87ec106e2)\r\n- use newer travis config [`d497276`](https://github.com/inspect-js/object-inspect/commit/d497276c1da14234bb5098a59cf20de75fbc316a)\r\n\r\n## [1.0.0](https://github.com/inspect-js/object-inspect/compare/0.4.0...1.0.0) - 2014-08-05\r\n\r\n### Commits\r\n\r\n- error inspect works properly [`260a22d`](https://github.com/inspect-js/object-inspect/commit/260a22d134d3a8a482c67d52091c6040c34f4299)\r\n- seen coverage [`57269e8`](https://github.com/inspect-js/object-inspect/commit/57269e8baa992a7439047f47325111fdcbcb8417)\r\n- htmlelement instance coverage [`397ffe1`](https://github.com/inspect-js/object-inspect/commit/397ffe10a1980350868043ef9de65686d438979f)\r\n- more element coverage [`6905cc2`](https://github.com/inspect-js/object-inspect/commit/6905cc2f7df35600177e613b0642b4df5efd3eca)\r\n- failing test for type errors [`385b615`](https://github.com/inspect-js/object-inspect/commit/385b6152e49b51b68449a662f410b084ed7c601a)\r\n- fn name coverage [`edc906d`](https://github.com/inspect-js/object-inspect/commit/edc906d40fca6b9194d304062c037ee8e398c4c2)\r\n- server-side element test [`362d1d3`](https://github.com/inspect-js/object-inspect/commit/362d1d3e86f187651c29feeb8478110afada385b)\r\n- custom inspect fn [`e89b0f6`](https://github.com/inspect-js/object-inspect/commit/e89b0f6fe6d5e03681282af83732a509160435a6)\r\n- fixed browser test [`b530882`](https://github.com/inspect-js/object-inspect/commit/b5308824a1c8471c5617e394766a03a6977102a9)\r\n- depth test, matches node [`1cfd9e0`](https://github.com/inspect-js/object-inspect/commit/1cfd9e0285a4ae1dff44101ad482915d9bf47e48)\r\n- exercise hasOwnProperty path [`8d753fb`](https://github.com/inspect-js/object-inspect/commit/8d753fb362a534fa1106e4d80f2ee9bea06a66d9)\r\n- more cases covered for errors [`c5c46a5`](https://github.com/inspect-js/object-inspect/commit/c5c46a569ec4606583497e8550f0d8c7ad39a4a4)\r\n- \\W obj key test case [`b0eceee`](https://github.com/inspect-js/object-inspect/commit/b0eceeea6e0eb94d686c1046e99b9e25e5005f75)\r\n- coverage for explicit depth param [`e12b91c`](https://github.com/inspect-js/object-inspect/commit/e12b91cd59683362f3a0e80f46481a0211e26c15)\r\n\r\n## [0.4.0](https://github.com/inspect-js/object-inspect/compare/0.3.1...0.4.0) - 2014-03-21\r\n\r\n### Commits\r\n\r\n- passing lowbyte interpolation test [`b847511`](https://github.com/inspect-js/object-inspect/commit/b8475114f5def7e7961c5353d48d3d8d9a520985)\r\n- lowbyte test [`4a2b0e1`](https://github.com/inspect-js/object-inspect/commit/4a2b0e142667fc933f195472759385ac08f3946c)\r\n\r\n## [0.3.1](https://github.com/inspect-js/object-inspect/compare/0.3.0...0.3.1) - 2014-03-04\r\n\r\n### Commits\r\n\r\n- sort keys [`a07b19c`](https://github.com/inspect-js/object-inspect/commit/a07b19cc3b1521a82d4fafb6368b7a9775428a05)\r\n\r\n## [0.3.0](https://github.com/inspect-js/object-inspect/compare/0.2.0...0.3.0) - 2014-03-04\r\n\r\n### Commits\r\n\r\n- [] and {} instead of [ ] and { } [`654c44b`](https://github.com/inspect-js/object-inspect/commit/654c44b2865811f3519e57bb8526e0821caf5c6b)\r\n\r\n## [0.2.0](https://github.com/inspect-js/object-inspect/compare/0.1.3...0.2.0) - 2014-03-04\r\n\r\n### Commits\r\n\r\n- failing holes test [`99cdfad`](https://github.com/inspect-js/object-inspect/commit/99cdfad03c6474740275a75636fe6ca86c77737a)\r\n- regex already work [`e324033`](https://github.com/inspect-js/object-inspect/commit/e324033267025995ec97d32ed0a65737c99477a6)\r\n- failing undef/null test [`1f88a00`](https://github.com/inspect-js/object-inspect/commit/1f88a00265d3209719dda8117b7e6360b4c20943)\r\n- holes in the all example [`7d345f3`](https://github.com/inspect-js/object-inspect/commit/7d345f3676dcbe980cff89a4f6c243269ebbb709)\r\n- check for .inspect(), fixes Buffer use-case [`c3f7546`](https://github.com/inspect-js/object-inspect/commit/c3f75466dbca125347d49847c05262c292f12b79)\r\n- fixes for holes [`ce25f73`](https://github.com/inspect-js/object-inspect/commit/ce25f736683de4b92ff27dc5471218415e2d78d8)\r\n- weird null behavior [`405c1ea`](https://github.com/inspect-js/object-inspect/commit/405c1ea72cd5a8cf3b498c3eaa903d01b9fbcab5)\r\n- tape is actually a devDependency, upgrade [`703b0ce`](https://github.com/inspect-js/object-inspect/commit/703b0ce6c5817b4245a082564bccd877e0bb6990)\r\n- put date in the example [`a342219`](https://github.com/inspect-js/object-inspect/commit/a3422190eeaa013215f46df2d0d37b48595ac058)\r\n- passing the null test [`4ab737e`](https://github.com/inspect-js/object-inspect/commit/4ab737ebf862a75d247ebe51e79307a34d6380d4)\r\n\r\n## [0.1.3](https://github.com/inspect-js/object-inspect/compare/0.1.1...0.1.3) - 2013-07-26\r\n\r\n### Commits\r\n\r\n- special isElement() check [`882768a`](https://github.com/inspect-js/object-inspect/commit/882768a54035d30747be9de1baf14e5aa0daa128)\r\n- oh right old IEs don't have indexOf either [`36d1275`](https://github.com/inspect-js/object-inspect/commit/36d12756c38b08a74370b0bb696c809e529913a5)\r\n\r\n## [0.1.1](https://github.com/inspect-js/object-inspect/compare/0.1.0...0.1.1) - 2013-07-26\r\n\r\n### Commits\r\n\r\n- tests! [`4422fd9`](https://github.com/inspect-js/object-inspect/commit/4422fd95532c2745aa6c4f786f35f1090be29998)\r\n- fix for ie&lt;9, doesn't have hasOwnProperty [`6b7d611`](https://github.com/inspect-js/object-inspect/commit/6b7d61183050f6da801ea04473211da226482613)\r\n- fix for all IEs: no f.name [`4e0c2f6`](https://github.com/inspect-js/object-inspect/commit/4e0c2f6dfd01c306d067d7163319acc97c94ee50)\r\n- badges [`5ed0d88`](https://github.com/inspect-js/object-inspect/commit/5ed0d88e4e407f9cb327fa4a146c17921f9680f3)\r\n\r\n## [0.1.0](https://github.com/inspect-js/object-inspect/compare/0.0.0...0.1.0) - 2013-07-26\r\n\r\n### Commits\r\n\r\n- [Function] for functions [`ad5c485`](https://github.com/inspect-js/object-inspect/commit/ad5c485098fc83352cb540a60b2548ca56820e0b)\r\n\r\n## 0.0.0 - 2013-07-26\r\n\r\n### Commits\r\n\r\n- working browser example [`34be6b6`](https://github.com/inspect-js/object-inspect/commit/34be6b6548f9ce92bdc3c27572857ba0c4a1218d)\r\n- package.json etc [`cad51f2`](https://github.com/inspect-js/object-inspect/commit/cad51f23fc6bcf1a456ed6abe16088256c2f632f)\r\n- docs complete [`b80cce2`](https://github.com/inspect-js/object-inspect/commit/b80cce2490c4e7183a9ee11ea89071f0abec4446)\r\n- circular example [`4b4a7b9`](https://github.com/inspect-js/object-inspect/commit/4b4a7b92209e4e6b4630976cb6bcd17d14165a59)\r\n- string rep [`7afb479`](https://github.com/inspect-js/object-inspect/commit/7afb479baa798d27f09e0a178b72ea327f60f5c8)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/object-inspect/CHANGELOG.md b/node_modules/object-inspect/CHANGELOG.md
--- a/node_modules/object-inspect/CHANGELOG.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/object-inspect/CHANGELOG.md	(date 1753913035422)
@@ -5,6 +5,41 @@
 The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
 and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
 
+## [v1.13.4](https://github.com/inspect-js/object-inspect/compare/v1.13.3...v1.13.4) - 2025-02-04
+
+### Commits
+
+- [Fix] avoid being fooled by a `Symbol.toStringTag` [`fa5870d`](https://github.com/inspect-js/object-inspect/commit/fa5870da468a525d2f20193700f70752f506cbf7)
+- [Tests] fix tests in node v6.0 - v6.4 [`2abfe1b`](https://github.com/inspect-js/object-inspect/commit/2abfe1bc3c69f9293c07c5cd65a9d7d87a628b84)
+- [Dev Deps] update `es-value-fixtures`, `for-each`, `has-symbols` [`3edfb01`](https://github.com/inspect-js/object-inspect/commit/3edfb01cc8cce220fba0dfdfe2dc8bc955758cdd)
+
+## [v1.13.3](https://github.com/inspect-js/object-inspect/compare/v1.13.2...v1.13.3) - 2024-11-09
+
+### Commits
+
+- [actions] split out node 10-20, and 20+ [`44395a8`](https://github.com/inspect-js/object-inspect/commit/44395a8fc1deda6718a5e125e86b9ffcaa1c7580)
+- [Fix] `quoteStyle`: properly escape only the containing quotes [`5137f8f`](https://github.com/inspect-js/object-inspect/commit/5137f8f7bea69a7fc671bb683fd35f244f38fc52)
+- [Refactor] clean up `quoteStyle` code [`450680c`](https://github.com/inspect-js/object-inspect/commit/450680cd50de4e689ee3b8e1d6db3a1bcf3fc18c)
+- [Tests] add `quoteStyle` escaping tests [`e997c59`](https://github.com/inspect-js/object-inspect/commit/e997c595aeaea84fd98ca35d7e1c3b5ab3ae26e0)
+- [Dev Deps] update `auto-changelog`, `es-value-fixtures`, `tape` [`d5a469c`](https://github.com/inspect-js/object-inspect/commit/d5a469c99ec07ccaeafc36ac4b36a93285086d48)
+- [Tests] replace `aud` with `npm audit` [`fb7815f`](https://github.com/inspect-js/object-inspect/commit/fb7815f9b72cae277a04f65bbb0543f85b88be62)
+- [Dev Deps] update `mock-property` [`11c817b`](https://github.com/inspect-js/object-inspect/commit/11c817bf10392aa017755962ba6bc89d731359ee)
+
+## [v1.13.2](https://github.com/inspect-js/object-inspect/compare/v1.13.1...v1.13.2) - 2024-06-21
+
+### Commits
+
+- [readme] update badges [`8a51e6b`](https://github.com/inspect-js/object-inspect/commit/8a51e6bedaf389ec40cc4659e9df53e8543d176e)
+- [Dev Deps] update `@ljharb/eslint-config`, `tape` [`ef05f58`](https://github.com/inspect-js/object-inspect/commit/ef05f58c9761a41416ab907299bf0fa79517014b)
+- [Dev Deps] update `error-cause`, `has-tostringtag`, `tape` [`c0c6c26`](https://github.com/inspect-js/object-inspect/commit/c0c6c26c44cee6671f7c5d43d2b91d27c5c00d90)
+- [Fix] Don't throw when `global` is not defined [`d4d0965`](https://github.com/inspect-js/object-inspect/commit/d4d096570f7dbd0e03266a96de11d05eb7b63e0f)
+- [meta] add missing `engines.node` [`17a352a`](https://github.com/inspect-js/object-inspect/commit/17a352af6fe1ba6b70a19081674231eb1a50c940)
+- [Dev Deps] update `globalthis` [`9c08884`](https://github.com/inspect-js/object-inspect/commit/9c08884aa662a149e2f11403f413927736b97da7)
+- [Dev Deps] update `error-cause` [`6af352d`](https://github.com/inspect-js/object-inspect/commit/6af352d7c3929a4cc4c55768c27bf547a5e900f4)
+- [Dev Deps] update `npmignore` [`94e617d`](https://github.com/inspect-js/object-inspect/commit/94e617d38831722562fa73dff4c895746861d267)
+- [Dev Deps] update `mock-property` [`2ac24d7`](https://github.com/inspect-js/object-inspect/commit/2ac24d7e58cd388ad093c33249e413e05bbfd6c3)
+- [Dev Deps] update `tape` [`46125e5`](https://github.com/inspect-js/object-inspect/commit/46125e58f1d1dcfb170ed3d1ea69da550ea8d77b)
+
 ## [v1.13.1](https://github.com/inspect-js/object-inspect/compare/v1.13.0...v1.13.1) - 2023-10-19
 
 ### Commits
Index: node_modules/nodemon/node_modules/debug/src/node.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * Module dependencies.\r\n */\r\n\r\nconst tty = require('tty');\r\nconst util = require('util');\r\n\r\n/**\r\n * This is the Node.js implementation of `debug()`.\r\n */\r\n\r\nexports.init = init;\r\nexports.log = log;\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\nexports.destroy = util.deprecate(\r\n\t() => {},\r\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\r\n);\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [6, 2, 3, 4, 5, 1];\r\n\r\ntry {\r\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\r\n\t// eslint-disable-next-line import/no-extraneous-dependencies\r\n\tconst supportsColor = require('supports-color');\r\n\r\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\r\n\t\texports.colors = [\r\n\t\t\t20,\r\n\t\t\t21,\r\n\t\t\t26,\r\n\t\t\t27,\r\n\t\t\t32,\r\n\t\t\t33,\r\n\t\t\t38,\r\n\t\t\t39,\r\n\t\t\t40,\r\n\t\t\t41,\r\n\t\t\t42,\r\n\t\t\t43,\r\n\t\t\t44,\r\n\t\t\t45,\r\n\t\t\t56,\r\n\t\t\t57,\r\n\t\t\t62,\r\n\t\t\t63,\r\n\t\t\t68,\r\n\t\t\t69,\r\n\t\t\t74,\r\n\t\t\t75,\r\n\t\t\t76,\r\n\t\t\t77,\r\n\t\t\t78,\r\n\t\t\t79,\r\n\t\t\t80,\r\n\t\t\t81,\r\n\t\t\t92,\r\n\t\t\t93,\r\n\t\t\t98,\r\n\t\t\t99,\r\n\t\t\t112,\r\n\t\t\t113,\r\n\t\t\t128,\r\n\t\t\t129,\r\n\t\t\t134,\r\n\t\t\t135,\r\n\t\t\t148,\r\n\t\t\t149,\r\n\t\t\t160,\r\n\t\t\t161,\r\n\t\t\t162,\r\n\t\t\t163,\r\n\t\t\t164,\r\n\t\t\t165,\r\n\t\t\t166,\r\n\t\t\t167,\r\n\t\t\t168,\r\n\t\t\t169,\r\n\t\t\t170,\r\n\t\t\t171,\r\n\t\t\t172,\r\n\t\t\t173,\r\n\t\t\t178,\r\n\t\t\t179,\r\n\t\t\t184,\r\n\t\t\t185,\r\n\t\t\t196,\r\n\t\t\t197,\r\n\t\t\t198,\r\n\t\t\t199,\r\n\t\t\t200,\r\n\t\t\t201,\r\n\t\t\t202,\r\n\t\t\t203,\r\n\t\t\t204,\r\n\t\t\t205,\r\n\t\t\t206,\r\n\t\t\t207,\r\n\t\t\t208,\r\n\t\t\t209,\r\n\t\t\t214,\r\n\t\t\t215,\r\n\t\t\t220,\r\n\t\t\t221\r\n\t\t];\r\n\t}\r\n} catch (error) {\r\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\r\n}\r\n\r\n/**\r\n * Build up the default `inspectOpts` object from the environment variables.\r\n *\r\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\r\n */\r\n\r\nexports.inspectOpts = Object.keys(process.env).filter(key => {\r\n\treturn /^debug_/i.test(key);\r\n}).reduce((obj, key) => {\r\n\t// Camel-case\r\n\tconst prop = key\r\n\t\t.substring(6)\r\n\t\t.toLowerCase()\r\n\t\t.replace(/_([a-z])/g, (_, k) => {\r\n\t\t\treturn k.toUpperCase();\r\n\t\t});\r\n\r\n\t// Coerce string value into JS value\r\n\tlet val = process.env[key];\r\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\r\n\t\tval = true;\r\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\r\n\t\tval = false;\r\n\t} else if (val === 'null') {\r\n\t\tval = null;\r\n\t} else {\r\n\t\tval = Number(val);\r\n\t}\r\n\r\n\tobj[prop] = val;\r\n\treturn obj;\r\n}, {});\r\n\r\n/**\r\n * Is stdout a TTY? Colored output is enabled when `true`.\r\n */\r\n\r\nfunction useColors() {\r\n\treturn 'colors' in exports.inspectOpts ?\r\n\t\tBoolean(exports.inspectOpts.colors) :\r\n\t\ttty.isatty(process.stderr.fd);\r\n}\r\n\r\n/**\r\n * Adds ANSI color escape codes if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs(args) {\r\n\tconst {namespace: name, useColors} = this;\r\n\r\n\tif (useColors) {\r\n\t\tconst c = this.color;\r\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\r\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\r\n\r\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\r\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\r\n\t} else {\r\n\t\targs[0] = getDate() + name + ' ' + args[0];\r\n\t}\r\n}\r\n\r\nfunction getDate() {\r\n\tif (exports.inspectOpts.hideDate) {\r\n\t\treturn '';\r\n\t}\r\n\treturn new Date().toISOString() + ' ';\r\n}\r\n\r\n/**\r\n * Invokes `util.format()` with the specified arguments and writes to stderr.\r\n */\r\n\r\nfunction log(...args) {\r\n\treturn process.stderr.write(util.format(...args) + '\\n');\r\n}\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\nfunction save(namespaces) {\r\n\tif (namespaces) {\r\n\t\tprocess.env.DEBUG = namespaces;\r\n\t} else {\r\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\r\n\t\t// string 'null' or 'undefined'. Just delete instead.\r\n\t\tdelete process.env.DEBUG;\r\n\t}\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\n\r\nfunction load() {\r\n\treturn process.env.DEBUG;\r\n}\r\n\r\n/**\r\n * Init logic for `debug` instances.\r\n *\r\n * Create a new `inspectOpts` object in case `useColors` is set\r\n * differently for a particular `debug` instance.\r\n */\r\n\r\nfunction init(debug) {\r\n\tdebug.inspectOpts = {};\r\n\r\n\tconst keys = Object.keys(exports.inspectOpts);\r\n\tfor (let i = 0; i < keys.length; i++) {\r\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\r\n\t}\r\n}\r\n\r\nmodule.exports = require('./common')(exports);\r\n\r\nconst {formatters} = module.exports;\r\n\r\n/**\r\n * Map %o to `util.inspect()`, all on a single line.\r\n */\r\n\r\nformatters.o = function (v) {\r\n\tthis.inspectOpts.colors = this.useColors;\r\n\treturn util.inspect(v, this.inspectOpts)\r\n\t\t.split('\\n')\r\n\t\t.map(str => str.trim())\r\n\t\t.join(' ');\r\n};\r\n\r\n/**\r\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\r\n */\r\n\r\nformatters.O = function (v) {\r\n\tthis.inspectOpts.colors = this.useColors;\r\n\treturn util.inspect(v, this.inspectOpts);\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/nodemon/node_modules/debug/src/node.js b/node_modules/nodemon/node_modules/debug/src/node.js
--- a/node_modules/nodemon/node_modules/debug/src/node.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/nodemon/node_modules/debug/src/node.js	(date 1753913035848)
@@ -187,11 +187,11 @@
 }
 
 /**
- * Invokes `util.format()` with the specified arguments and writes to stderr.
+ * Invokes `util.formatWithOptions()` with the specified arguments and writes to stderr.
  */
 
 function log(...args) {
-	return process.stderr.write(util.format(...args) + '\n');
+	return process.stderr.write(util.formatWithOptions(exports.inspectOpts, ...args) + '\n');
 }
 
 /**
Index: node_modules/object-inspect/test/quoteStyle.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar inspect = require('../');\r\nvar test = require('tape');\r\n\r\ntest('quoteStyle option', function (t) {\r\n    t['throws'](function () { inspect(null, { quoteStyle: false }); }, 'false is not a valid value');\r\n    t['throws'](function () { inspect(null, { quoteStyle: true }); }, 'true is not a valid value');\r\n    t['throws'](function () { inspect(null, { quoteStyle: '' }); }, '\"\" is not a valid value');\r\n    t['throws'](function () { inspect(null, { quoteStyle: {} }); }, '{} is not a valid value');\r\n    t['throws'](function () { inspect(null, { quoteStyle: [] }); }, '[] is not a valid value');\r\n    t['throws'](function () { inspect(null, { quoteStyle: 42 }); }, '42 is not a valid value');\r\n    t['throws'](function () { inspect(null, { quoteStyle: NaN }); }, 'NaN is not a valid value');\r\n    t['throws'](function () { inspect(null, { quoteStyle: function () {} }); }, 'a function is not a valid value');\r\n\r\n    t.end();\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/object-inspect/test/quoteStyle.js b/node_modules/object-inspect/test/quoteStyle.js
--- a/node_modules/object-inspect/test/quoteStyle.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/object-inspect/test/quoteStyle.js	(date 1753913035413)
@@ -13,5 +13,14 @@
     t['throws'](function () { inspect(null, { quoteStyle: NaN }); }, 'NaN is not a valid value');
     t['throws'](function () { inspect(null, { quoteStyle: function () {} }); }, 'a function is not a valid value');
 
+    t.equal(inspect('"', { quoteStyle: 'single' }), '\'"\'', 'double quote, quoteStyle: "single"');
+    t.equal(inspect('"', { quoteStyle: 'double' }), '"\\""', 'double quote, quoteStyle: "double"');
+
+    t.equal(inspect('\'', { quoteStyle: 'single' }), '\'\\\'\'', 'single quote, quoteStyle: "single"');
+    t.equal(inspect('\'', { quoteStyle: 'double' }), '"\'"', 'single quote, quoteStyle: "double"');
+
+    t.equal(inspect('`', { quoteStyle: 'single' }), '\'`\'', 'backtick, quoteStyle: "single"');
+    t.equal(inspect('`', { quoteStyle: 'double' }), '"`"', 'backtick, quoteStyle: "double"');
+
     t.end();
 });
Index: node_modules/nodemon/node_modules/debug/src/browser.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/* eslint-env browser */\r\n\r\n/**\r\n * This is the web browser implementation of `debug()`.\r\n */\r\n\r\nexports.formatArgs = formatArgs;\r\nexports.save = save;\r\nexports.load = load;\r\nexports.useColors = useColors;\r\nexports.storage = localstorage();\r\nexports.destroy = (() => {\r\n\tlet warned = false;\r\n\r\n\treturn () => {\r\n\t\tif (!warned) {\r\n\t\t\twarned = true;\r\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\r\n\t\t}\r\n\t};\r\n})();\r\n\r\n/**\r\n * Colors.\r\n */\r\n\r\nexports.colors = [\r\n\t'#0000CC',\r\n\t'#0000FF',\r\n\t'#0033CC',\r\n\t'#0033FF',\r\n\t'#0066CC',\r\n\t'#0066FF',\r\n\t'#0099CC',\r\n\t'#0099FF',\r\n\t'#00CC00',\r\n\t'#00CC33',\r\n\t'#00CC66',\r\n\t'#00CC99',\r\n\t'#00CCCC',\r\n\t'#00CCFF',\r\n\t'#3300CC',\r\n\t'#3300FF',\r\n\t'#3333CC',\r\n\t'#3333FF',\r\n\t'#3366CC',\r\n\t'#3366FF',\r\n\t'#3399CC',\r\n\t'#3399FF',\r\n\t'#33CC00',\r\n\t'#33CC33',\r\n\t'#33CC66',\r\n\t'#33CC99',\r\n\t'#33CCCC',\r\n\t'#33CCFF',\r\n\t'#6600CC',\r\n\t'#6600FF',\r\n\t'#6633CC',\r\n\t'#6633FF',\r\n\t'#66CC00',\r\n\t'#66CC33',\r\n\t'#9900CC',\r\n\t'#9900FF',\r\n\t'#9933CC',\r\n\t'#9933FF',\r\n\t'#99CC00',\r\n\t'#99CC33',\r\n\t'#CC0000',\r\n\t'#CC0033',\r\n\t'#CC0066',\r\n\t'#CC0099',\r\n\t'#CC00CC',\r\n\t'#CC00FF',\r\n\t'#CC3300',\r\n\t'#CC3333',\r\n\t'#CC3366',\r\n\t'#CC3399',\r\n\t'#CC33CC',\r\n\t'#CC33FF',\r\n\t'#CC6600',\r\n\t'#CC6633',\r\n\t'#CC9900',\r\n\t'#CC9933',\r\n\t'#CCCC00',\r\n\t'#CCCC33',\r\n\t'#FF0000',\r\n\t'#FF0033',\r\n\t'#FF0066',\r\n\t'#FF0099',\r\n\t'#FF00CC',\r\n\t'#FF00FF',\r\n\t'#FF3300',\r\n\t'#FF3333',\r\n\t'#FF3366',\r\n\t'#FF3399',\r\n\t'#FF33CC',\r\n\t'#FF33FF',\r\n\t'#FF6600',\r\n\t'#FF6633',\r\n\t'#FF9900',\r\n\t'#FF9933',\r\n\t'#FFCC00',\r\n\t'#FFCC33'\r\n];\r\n\r\n/**\r\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\r\n * and the Firebug extension (any Firefox version) are known\r\n * to support \"%c\" CSS customizations.\r\n *\r\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\r\n */\r\n\r\n// eslint-disable-next-line complexity\r\nfunction useColors() {\r\n\t// NB: In an Electron preload script, document will be defined but not fully\r\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\r\n\t// explicitly\r\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t// Internet Explorer and Edge do not support colors.\r\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\r\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\r\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\r\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\r\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\r\n\t\t// Is firefox >= v31?\r\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\r\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\r\n\t\t// Double check webkit in userAgent just in case we are in a worker\r\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\r\n}\r\n\r\n/**\r\n * Colorize log arguments if enabled.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction formatArgs(args) {\r\n\targs[0] = (this.useColors ? '%c' : '') +\r\n\t\tthis.namespace +\r\n\t\t(this.useColors ? ' %c' : ' ') +\r\n\t\targs[0] +\r\n\t\t(this.useColors ? '%c ' : ' ') +\r\n\t\t'+' + module.exports.humanize(this.diff);\r\n\r\n\tif (!this.useColors) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst c = 'color: ' + this.color;\r\n\targs.splice(1, 0, c, 'color: inherit');\r\n\r\n\t// The final \"%c\" is somewhat tricky, because there could be other\r\n\t// arguments passed either before or after the %c, so we need to\r\n\t// figure out the correct index to insert the CSS into\r\n\tlet index = 0;\r\n\tlet lastC = 0;\r\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\r\n\t\tif (match === '%%') {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tindex++;\r\n\t\tif (match === '%c') {\r\n\t\t\t// We only are interested in the *last* %c\r\n\t\t\t// (the user may have provided their own)\r\n\t\t\tlastC = index;\r\n\t\t}\r\n\t});\r\n\r\n\targs.splice(lastC, 0, c);\r\n}\r\n\r\n/**\r\n * Invokes `console.debug()` when available.\r\n * No-op when `console.debug` is not a \"function\".\r\n * If `console.debug` is not available, falls back\r\n * to `console.log`.\r\n *\r\n * @api public\r\n */\r\nexports.log = console.debug || console.log || (() => {});\r\n\r\n/**\r\n * Save `namespaces`.\r\n *\r\n * @param {String} namespaces\r\n * @api private\r\n */\r\nfunction save(namespaces) {\r\n\ttry {\r\n\t\tif (namespaces) {\r\n\t\t\texports.storage.setItem('debug', namespaces);\r\n\t\t} else {\r\n\t\t\texports.storage.removeItem('debug');\r\n\t\t}\r\n\t} catch (error) {\r\n\t\t// Swallow\r\n\t\t// XXX (@Qix-) should we be logging these?\r\n\t}\r\n}\r\n\r\n/**\r\n * Load `namespaces`.\r\n *\r\n * @return {String} returns the previously persisted debug modes\r\n * @api private\r\n */\r\nfunction load() {\r\n\tlet r;\r\n\ttry {\r\n\t\tr = exports.storage.getItem('debug');\r\n\t} catch (error) {\r\n\t\t// Swallow\r\n\t\t// XXX (@Qix-) should we be logging these?\r\n\t}\r\n\r\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\r\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\r\n\t\tr = process.env.DEBUG;\r\n\t}\r\n\r\n\treturn r;\r\n}\r\n\r\n/**\r\n * Localstorage attempts to return the localstorage.\r\n *\r\n * This is necessary because safari throws\r\n * when a user disables cookies/localstorage\r\n * and you attempt to access it.\r\n *\r\n * @return {LocalStorage}\r\n * @api private\r\n */\r\n\r\nfunction localstorage() {\r\n\ttry {\r\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\r\n\t\t// The Browser also has localStorage in the global context.\r\n\t\treturn localStorage;\r\n\t} catch (error) {\r\n\t\t// Swallow\r\n\t\t// XXX (@Qix-) should we be logging these?\r\n\t}\r\n}\r\n\r\nmodule.exports = require('./common')(exports);\r\n\r\nconst {formatters} = module.exports;\r\n\r\n/**\r\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\r\n */\r\n\r\nformatters.j = function (v) {\r\n\ttry {\r\n\t\treturn JSON.stringify(v);\r\n\t} catch (error) {\r\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\r\n\t}\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/nodemon/node_modules/debug/src/browser.js b/node_modules/nodemon/node_modules/debug/src/browser.js
--- a/node_modules/nodemon/node_modules/debug/src/browser.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/nodemon/node_modules/debug/src/browser.js	(date 1753913035838)
@@ -125,14 +125,17 @@
 		return false;
 	}
 
+	let m;
+
 	// Is webkit? http://stackoverflow.com/a/16459606/376773
 	// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
+	// eslint-disable-next-line no-return-assign
 	return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||
 		// Is firebug? http://stackoverflow.com/a/398120/376773
 		(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||
 		// Is firefox >= v31?
 		// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
-		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||
+		(typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)) && parseInt(m[1], 10) >= 31) ||
 		// Double check webkit in userAgent just in case we are in a worker
 		(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/));
 }
@@ -216,7 +219,7 @@
 function load() {
 	let r;
 	try {
-		r = exports.storage.getItem('debug');
+		r = exports.storage.getItem('debug') || exports.storage.getItem('DEBUG') ;
 	} catch (error) {
 		// Swallow
 		// XXX (@Qix-) should we be logging these?
Index: node_modules/.bin/semver
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>../semver/bin/semver.js
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/.bin/semver b/node_modules/.bin/semver
--- a/node_modules/.bin/semver	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/.bin/semver	(date 1753913036347)
@@ -1,1 +1,16 @@
-../semver/bin/semver.js
\ No newline at end of file
+#!/bin/sh
+basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")
+
+case `uname` in
+    *CYGWIN*|*MINGW*|*MSYS*)
+        if command -v cygpath > /dev/null 2>&1; then
+            basedir=`cygpath -w "$basedir"`
+        fi
+    ;;
+esac
+
+if [ -x "$basedir/node" ]; then
+  exec "$basedir/node"  "$basedir/../semver/bin/semver.js" "$@"
+else 
+  exec node  "$basedir/../semver/bin/semver.js" "$@"
+fi
Index: node_modules/body-parser/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"body-parser\",\r\n  \"description\": \"Node.js body parsing middleware\",\r\n  \"version\": \"1.20.2\",\r\n  \"contributors\": [\r\n    \"Douglas Christopher Wilson <doug@somethingdoug.com>\",\r\n    \"Jonathan Ong <me@jongleberry.com> (http://jongleberry.com)\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"repository\": \"expressjs/body-parser\",\r\n  \"dependencies\": {\r\n    \"bytes\": \"3.1.2\",\r\n    \"content-type\": \"~1.0.5\",\r\n    \"debug\": \"2.6.9\",\r\n    \"depd\": \"2.0.0\",\r\n    \"destroy\": \"1.2.0\",\r\n    \"http-errors\": \"2.0.0\",\r\n    \"iconv-lite\": \"0.4.24\",\r\n    \"on-finished\": \"2.4.1\",\r\n    \"qs\": \"6.11.0\",\r\n    \"raw-body\": \"2.5.2\",\r\n    \"type-is\": \"~1.6.18\",\r\n    \"unpipe\": \"1.0.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"eslint\": \"8.34.0\",\r\n    \"eslint-config-standard\": \"14.1.1\",\r\n    \"eslint-plugin-import\": \"2.27.5\",\r\n    \"eslint-plugin-markdown\": \"3.0.0\",\r\n    \"eslint-plugin-node\": \"11.1.0\",\r\n    \"eslint-plugin-promise\": \"6.1.1\",\r\n    \"eslint-plugin-standard\": \"4.1.0\",\r\n    \"methods\": \"1.1.2\",\r\n    \"mocha\": \"10.2.0\",\r\n    \"nyc\": \"15.1.0\",\r\n    \"safe-buffer\": \"5.2.1\",\r\n    \"supertest\": \"6.3.3\"\r\n  },\r\n  \"files\": [\r\n    \"lib/\",\r\n    \"LICENSE\",\r\n    \"HISTORY.md\",\r\n    \"SECURITY.md\",\r\n    \"index.js\"\r\n  ],\r\n  \"engines\": {\r\n    \"node\": \">= 0.8\",\r\n    \"npm\": \"1.2.8000 || >= 1.4.16\"\r\n  },\r\n  \"scripts\": {\r\n    \"lint\": \"eslint .\",\r\n    \"test\": \"mocha --require test/support/env --reporter spec --check-leaks --bail test/\",\r\n    \"test-ci\": \"nyc --reporter=lcov --reporter=text npm test\",\r\n    \"test-cov\": \"nyc --reporter=html --reporter=text npm test\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/body-parser/package.json b/node_modules/body-parser/package.json
--- a/node_modules/body-parser/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/body-parser/package.json	(date 1753913035854)
@@ -1,7 +1,7 @@
 {
   "name": "body-parser",
   "description": "Node.js body parsing middleware",
-  "version": "1.20.2",
+  "version": "1.20.3",
   "contributors": [
     "Douglas Christopher Wilson <doug@somethingdoug.com>",
     "Jonathan Ong <me@jongleberry.com> (http://jongleberry.com)"
@@ -17,7 +17,7 @@
     "http-errors": "2.0.0",
     "iconv-lite": "0.4.24",
     "on-finished": "2.4.1",
-    "qs": "6.11.0",
+    "qs": "6.13.0",
     "raw-body": "2.5.2",
     "type-is": "~1.6.18",
     "unpipe": "1.0.0"
Index: node_modules/pg-pool/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"pg-pool\",\r\n  \"version\": \"3.6.2\",\r\n  \"description\": \"Connection pool for node-postgres\",\r\n  \"main\": \"index.js\",\r\n  \"directories\": {\r\n    \"test\": \"test\"\r\n  },\r\n  \"scripts\": {\r\n    \"test\": \" node_modules/.bin/mocha\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git://github.com/brianc/node-postgres.git\",\r\n    \"directory\": \"packages/pg-pool\"\r\n  },\r\n  \"keywords\": [\r\n    \"pg\",\r\n    \"postgres\",\r\n    \"pool\",\r\n    \"database\"\r\n  ],\r\n  \"author\": \"Brian M. Carlson\",\r\n  \"license\": \"MIT\",\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/brianc/node-pg-pool/issues\"\r\n  },\r\n  \"homepage\": \"https://github.com/brianc/node-pg-pool#readme\",\r\n  \"devDependencies\": {\r\n    \"bluebird\": \"3.4.1\",\r\n    \"co\": \"4.6.0\",\r\n    \"expect.js\": \"0.3.1\",\r\n    \"lodash\": \"^4.17.11\",\r\n    \"mocha\": \"^7.1.2\",\r\n    \"pg-cursor\": \"^1.3.0\"\r\n  },\r\n  \"peerDependencies\": {\r\n    \"pg\": \">=8.0\"\r\n  },\r\n  \"gitHead\": \"b03c071d2d15af259e1e008e9628191c865e58fa\"\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-pool/package.json b/node_modules/pg-pool/package.json
--- a/node_modules/pg-pool/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-pool/package.json	(date 1753913035282)
@@ -1,8 +1,15 @@
 {
   "name": "pg-pool",
-  "version": "3.6.2",
+  "version": "3.10.1",
   "description": "Connection pool for node-postgres",
   "main": "index.js",
+  "exports": {
+    ".": {
+      "import": "./esm/index.mjs",
+      "require": "./index.js",
+      "default": "./index.js"
+    }
+  },
   "directories": {
     "test": "test"
   },
@@ -27,15 +34,18 @@
   },
   "homepage": "https://github.com/brianc/node-pg-pool#readme",
   "devDependencies": {
-    "bluebird": "3.4.1",
+    "bluebird": "3.7.2",
     "co": "4.6.0",
     "expect.js": "0.3.1",
     "lodash": "^4.17.11",
-    "mocha": "^7.1.2",
-    "pg-cursor": "^1.3.0"
+    "mocha": "^10.5.2"
   },
   "peerDependencies": {
     "pg": ">=8.0"
   },
-  "gitHead": "b03c071d2d15af259e1e008e9628191c865e58fa"
+  "files": [
+    "index.js",
+    "esm"
+  ],
+  "gitHead": "cd877a57612a39335a97b593111710d26126279d"
 }
Index: node_modules/dotenv/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"dotenv\",\r\n  \"version\": \"16.4.5\",\r\n  \"description\": \"Loads environment variables from .env file\",\r\n  \"main\": \"lib/main.js\",\r\n  \"types\": \"lib/main.d.ts\",\r\n  \"exports\": {\r\n    \".\": {\r\n      \"types\": \"./lib/main.d.ts\",\r\n      \"require\": \"./lib/main.js\",\r\n      \"default\": \"./lib/main.js\"\r\n    },\r\n    \"./config\": \"./config.js\",\r\n    \"./config.js\": \"./config.js\",\r\n    \"./lib/env-options\": \"./lib/env-options.js\",\r\n    \"./lib/env-options.js\": \"./lib/env-options.js\",\r\n    \"./lib/cli-options\": \"./lib/cli-options.js\",\r\n    \"./lib/cli-options.js\": \"./lib/cli-options.js\",\r\n    \"./package.json\": \"./package.json\"\r\n  },\r\n  \"scripts\": {\r\n    \"dts-check\": \"tsc --project tests/types/tsconfig.json\",\r\n    \"lint\": \"standard\",\r\n    \"lint-readme\": \"standard-markdown\",\r\n    \"pretest\": \"npm run lint && npm run dts-check\",\r\n    \"test\": \"tap tests/*.js --100 -Rspec\",\r\n    \"test:coverage\": \"tap --coverage-report=lcov\",\r\n    \"prerelease\": \"npm test\",\r\n    \"release\": \"standard-version\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git://github.com/motdotla/dotenv.git\"\r\n  },\r\n  \"funding\": \"https://dotenvx.com\",\r\n  \"keywords\": [\r\n    \"dotenv\",\r\n    \"env\",\r\n    \".env\",\r\n    \"environment\",\r\n    \"variables\",\r\n    \"config\",\r\n    \"settings\"\r\n  ],\r\n  \"readmeFilename\": \"README.md\",\r\n  \"license\": \"BSD-2-Clause\",\r\n  \"devDependencies\": {\r\n    \"@definitelytyped/dtslint\": \"^0.0.133\",\r\n    \"@types/node\": \"^18.11.3\",\r\n    \"decache\": \"^4.6.1\",\r\n    \"sinon\": \"^14.0.1\",\r\n    \"standard\": \"^17.0.0\",\r\n    \"standard-markdown\": \"^7.1.0\",\r\n    \"standard-version\": \"^9.5.0\",\r\n    \"tap\": \"^16.3.0\",\r\n    \"tar\": \"^6.1.11\",\r\n    \"typescript\": \"^4.8.4\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">=12\"\r\n  },\r\n  \"browser\": {\r\n    \"fs\": false\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/dotenv/package.json b/node_modules/dotenv/package.json
--- a/node_modules/dotenv/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/dotenv/package.json	(date 1753913035718)
@@ -1,6 +1,6 @@
 {
   "name": "dotenv",
-  "version": "16.4.5",
+  "version": "16.6.1",
   "description": "Loads environment variables from .env file",
   "main": "lib/main.js",
   "types": "lib/main.d.ts",
@@ -21,10 +21,9 @@
   "scripts": {
     "dts-check": "tsc --project tests/types/tsconfig.json",
     "lint": "standard",
-    "lint-readme": "standard-markdown",
     "pretest": "npm run lint && npm run dts-check",
-    "test": "tap tests/*.js --100 -Rspec",
-    "test:coverage": "tap --coverage-report=lcov",
+    "test": "tap run --allow-empty-coverage --disable-coverage --timeout=60000",
+    "test:coverage": "tap run --show-full-coverage --timeout=60000 --coverage-report=text --coverage-report=lcov",
     "prerelease": "npm test",
     "release": "standard-version"
   },
@@ -32,6 +31,7 @@
     "type": "git",
     "url": "git://github.com/motdotla/dotenv.git"
   },
+  "homepage": "https://github.com/motdotla/dotenv#readme",
   "funding": "https://dotenvx.com",
   "keywords": [
     "dotenv",
@@ -45,15 +45,12 @@
   "readmeFilename": "README.md",
   "license": "BSD-2-Clause",
   "devDependencies": {
-    "@definitelytyped/dtslint": "^0.0.133",
     "@types/node": "^18.11.3",
-    "decache": "^4.6.1",
+    "decache": "^4.6.2",
     "sinon": "^14.0.1",
     "standard": "^17.0.0",
-    "standard-markdown": "^7.1.0",
     "standard-version": "^9.5.0",
-    "tap": "^16.3.0",
-    "tar": "^6.1.11",
+    "tap": "^19.2.0",
     "typescript": "^4.8.4"
   },
   "engines": {
Index: node_modules/.bin/nodetouch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>../touch/bin/nodetouch.js
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/.bin/nodetouch b/node_modules/.bin/nodetouch
--- a/node_modules/.bin/nodetouch	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/.bin/nodetouch	(date 1753913036346)
@@ -1,1 +1,16 @@
-../touch/bin/nodetouch.js
\ No newline at end of file
+#!/bin/sh
+basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")
+
+case `uname` in
+    *CYGWIN*|*MINGW*|*MSYS*)
+        if command -v cygpath > /dev/null 2>&1; then
+            basedir=`cygpath -w "$basedir"`
+        fi
+    ;;
+esac
+
+if [ -x "$basedir/node" ]; then
+  exec "$basedir/node"  "$basedir/../touch/bin/nodetouch.js" "$@"
+else 
+  exec node  "$basedir/../touch/bin/nodetouch.js" "$@"
+fi
Index: node_modules/.bin/mime
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>../mime/cli.js
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/.bin/mime b/node_modules/.bin/mime
--- a/node_modules/.bin/mime	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/.bin/mime	(date 1753869876861)
@@ -1,1 +1,16 @@
-../mime/cli.js
\ No newline at end of file
+#!/bin/sh
+basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")
+
+case `uname` in
+    *CYGWIN*|*MINGW*|*MSYS*)
+        if command -v cygpath > /dev/null 2>&1; then
+            basedir=`cygpath -w "$basedir"`
+        fi
+    ;;
+esac
+
+if [ -x "$basedir/node" ]; then
+  exec "$basedir/node"  "$basedir/../mime/cli.js" "$@"
+else 
+  exec node  "$basedir/../mime/cli.js" "$@"
+fi
Index: node_modules/pg-pool/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># pg-pool\r\n[![Build Status](https://travis-ci.org/brianc/node-pg-pool.svg?branch=master)](https://travis-ci.org/brianc/node-pg-pool)\r\n\r\nA connection pool for node-postgres\r\n\r\n## install\r\n```sh\r\nnpm i pg-pool pg\r\n```\r\n\r\n## use\r\n\r\n### create\r\n\r\nto use pg-pool you must first create an instance of a pool\r\n\r\n```js\r\nvar Pool = require('pg-pool')\r\n\r\n// by default the pool uses the same\r\n// configuration as whatever `pg` version you have installed\r\nvar pool = new Pool()\r\n\r\n// you can pass properties to the pool\r\n// these properties are passed unchanged to both the node-postgres Client constructor\r\n// and the node-pool (https://github.com/coopernurse/node-pool) constructor\r\n// allowing you to fully configure the behavior of both\r\nvar pool2 = new Pool({\r\n  database: 'postgres',\r\n  user: 'brianc',\r\n  password: 'secret!',\r\n  port: 5432,\r\n  ssl: true,\r\n  max: 20, // set pool max size to 20\r\n  idleTimeoutMillis: 1000, // close idle clients after 1 second\r\n  connectionTimeoutMillis: 1000, // return an error after 1 second if connection could not be established\r\n  maxUses: 7500, // close (and replace) a connection after it has been used 7500 times (see below for discussion)\r\n})\r\n\r\n//you can supply a custom client constructor\r\n//if you want to use the native postgres client\r\nvar NativeClient = require('pg').native.Client\r\nvar nativePool = new Pool({ Client: NativeClient })\r\n\r\n//you can even pool pg-native clients directly\r\nvar PgNativeClient = require('pg-native')\r\nvar pgNativePool = new Pool({ Client: PgNativeClient })\r\n```\r\n\r\n##### Note:\r\nThe Pool constructor does not support passing a Database URL as the parameter. To use pg-pool on heroku, for example, you need to parse the URL into a config object. Here is an example of how to parse a Database URL.\r\n\r\n```js\r\nconst Pool = require('pg-pool');\r\nconst url = require('url')\r\n\r\nconst params = url.parse(process.env.DATABASE_URL);\r\nconst auth = params.auth.split(':');\r\n\r\nconst config = {\r\n  user: auth[0],\r\n  password: auth[1],\r\n  host: params.hostname,\r\n  port: params.port,\r\n  database: params.pathname.split('/')[1],\r\n  ssl: true\r\n};\r\n\r\nconst pool = new Pool(config);\r\n\r\n/*\r\n  Transforms, 'postgres://DBuser:secret@DBHost:#####/myDB', into\r\n  config = {\r\n    user: 'DBuser',\r\n    password: 'secret',\r\n    host: 'DBHost',\r\n    port: '#####',\r\n    database: 'myDB',\r\n    ssl: true\r\n  }\r\n*/\r\n``` \r\n\r\n### acquire clients with a promise\r\n\r\npg-pool supports a fully promise-based api for acquiring clients\r\n\r\n```js\r\nvar pool = new Pool()\r\npool.connect().then(client => {\r\n  client.query('select $1::text as name', ['pg-pool']).then(res => {\r\n    client.release()\r\n    console.log('hello from', res.rows[0].name)\r\n  })\r\n  .catch(e => {\r\n    client.release()\r\n    console.error('query error', e.message, e.stack)\r\n  })\r\n})\r\n```\r\n\r\n### plays nice with async/await\r\n\r\nthis ends up looking much nicer if you're using [co](https://github.com/tj/co) or async/await:\r\n\r\n```js\r\n// with async/await\r\n(async () => {\r\n  var pool = new Pool()\r\n  var client = await pool.connect()\r\n  try {\r\n    var result = await client.query('select $1::text as name', ['brianc'])\r\n    console.log('hello from', result.rows[0])\r\n  } finally {\r\n    client.release()\r\n  }\r\n})().catch(e => console.error(e.message, e.stack))\r\n\r\n// with co\r\nco(function * () {\r\n  var client = yield pool.connect()\r\n  try {\r\n    var result = yield client.query('select $1::text as name', ['brianc'])\r\n    console.log('hello from', result.rows[0])\r\n  } finally {\r\n    client.release()\r\n  }\r\n}).catch(e => console.error(e.message, e.stack))\r\n```\r\n\r\n### your new favorite helper method\r\n\r\nbecause its so common to just run a query and return the client to the pool afterward pg-pool has this built-in:\r\n\r\n```js\r\nvar pool = new Pool()\r\nvar time = await pool.query('SELECT NOW()')\r\nvar name = await pool.query('select $1::text as name', ['brianc'])\r\nconsole.log(name.rows[0].name, 'says hello at', time.rows[0].now)\r\n```\r\n\r\nyou can also use a callback here if you'd like:\r\n\r\n```js\r\nvar pool = new Pool()\r\npool.query('SELECT $1::text as name', ['brianc'], function (err, res) {\r\n  console.log(res.rows[0].name) // brianc\r\n})\r\n```\r\n\r\n__pro tip:__ unless you need to run a transaction (which requires a single client for multiple queries) or you\r\nhave some other edge case like [streaming rows](https://github.com/brianc/node-pg-query-stream) or using a [cursor](https://github.com/brianc/node-pg-cursor)\r\nyou should almost always just use `pool.query`.  Its easy, it does the right thing :tm:, and wont ever forget to return\r\nclients back to the pool after the query is done.\r\n\r\n### drop-in backwards compatible\r\n\r\npg-pool still and will always support the traditional callback api for acquiring a client.  This is the exact API node-postgres has shipped with for years:\r\n\r\n```js\r\nvar pool = new Pool()\r\npool.connect((err, client, done) => {\r\n  if (err) return done(err)\r\n\r\n  client.query('SELECT $1::text as name', ['pg-pool'], (err, res) => {\r\n    done()\r\n    if (err) {\r\n      return console.error('query error', err.message, err.stack)\r\n    }\r\n    console.log('hello from', res.rows[0].name)\r\n  })\r\n})\r\n```\r\n\r\n### shut it down\r\n\r\nWhen you are finished with the pool if all the clients are idle the pool will close them after `config.idleTimeoutMillis` and your app\r\nwill shutdown gracefully.  If you don't want to wait for the timeout you can end the pool as follows:\r\n\r\n```js\r\nvar pool = new Pool()\r\nvar client = await pool.connect()\r\nconsole.log(await client.query('select now()'))\r\nclient.release()\r\nawait pool.end()\r\n```\r\n\r\n### a note on instances\r\n\r\nThe pool should be a __long-lived object__ in your application.  Generally you'll want to instantiate one pool when your app starts up and use the same instance of the pool throughout the lifetime of your application.  If you are frequently creating a new pool within your code you likely don't have your pool initialization code in the correct place.  Example:\r\n\r\n```js\r\n// assume this is a file in your program at ./your-app/lib/db.js\r\n\r\n// correct usage: create the pool and let it live\r\n// 'globally' here, controlling access to it through exported methods\r\nvar pool = new pg.Pool()\r\n\r\n// this is the right way to export the query method\r\nmodule.exports.query = (text, values) => {\r\n  console.log('query:', text, values)\r\n  return pool.query(text, values)\r\n}\r\n\r\n// this would be the WRONG way to export the connect method\r\nmodule.exports.connect = () => {\r\n  // notice how we would be creating a pool instance here\r\n  // every time we called 'connect' to get a new client?\r\n  // that's a bad thing & results in creating an unbounded\r\n  // number of pools & therefore connections\r\n  var aPool = new pg.Pool()\r\n  return aPool.connect()\r\n}\r\n```\r\n\r\n### events\r\n\r\nEvery instance of a `Pool` is an event emitter.  These instances emit the following events:\r\n\r\n#### error\r\n\r\nEmitted whenever an idle client in the pool encounters an error.  This is common when your PostgreSQL server shuts down, reboots, or a network partition otherwise causes it to become unavailable while your pool has connected clients.\r\n\r\nExample:\r\n\r\n```js\r\nconst Pool = require('pg-pool')\r\nconst pool = new Pool()\r\n\r\n// attach an error handler to the pool for when a connected, idle client\r\n// receives an error by being disconnected, etc\r\npool.on('error', function(error, client) {\r\n  // handle this in the same way you would treat process.on('uncaughtException')\r\n  // it is supplied the error as well as the idle client which received the error\r\n})\r\n```\r\n\r\n#### connect\r\n\r\nFired whenever the pool creates a __new__ `pg.Client` instance and successfully connects it to the backend.\r\n\r\nExample:\r\n\r\n```js\r\nconst Pool = require('pg-pool')\r\nconst pool = new Pool()\r\n\r\nvar count = 0\r\n\r\npool.on('connect', client => {\r\n  client.count = count++\r\n})\r\n\r\npool\r\n  .connect()\r\n  .then(client => {\r\n    return client\r\n      .query('SELECT $1::int AS \"clientCount\"', [client.count])\r\n      .then(res => console.log(res.rows[0].clientCount)) // outputs 0\r\n      .then(() => client)\r\n  })\r\n  .then(client => client.release())\r\n\r\n```\r\n\r\n#### acquire\r\n\r\nFired whenever the a client is acquired from the pool\r\n\r\nExample:\r\n\r\nThis allows you to count the number of clients which have ever been acquired from the pool.\r\n\r\n```js\r\nvar Pool = require('pg-pool')\r\nvar pool = new Pool()\r\n\r\nvar acquireCount = 0\r\npool.on('acquire', function (client) {\r\n  acquireCount++\r\n})\r\n\r\nvar connectCount = 0\r\npool.on('connect', function () {\r\n  connectCount++\r\n})\r\n\r\nfor (var i = 0; i < 200; i++) {\r\n  pool.query('SELECT NOW()')\r\n}\r\n\r\nsetTimeout(function () {\r\n  console.log('connect count:', connectCount) // output: connect count: 10\r\n  console.log('acquire count:', acquireCount) // output: acquire count: 200\r\n}, 100)\r\n\r\n```\r\n\r\n### environment variables\r\n\r\npg-pool & node-postgres support some of the same environment variables as `psql` supports.  The most common are:\r\n\r\n```\r\nPGDATABASE=my_db\r\nPGUSER=username\r\nPGPASSWORD=\"my awesome password\"\r\nPGPORT=5432\r\nPGSSLMODE=require\r\n```\r\n\r\nUsually I will export these into my local environment via a `.env` file with environment settings or export them in `~/.bash_profile` or something similar.  This way I get configurability which works with both the postgres suite of tools (`psql`, `pg_dump`, `pg_restore`) and node, I can vary the environment variables locally and in production, and it supports the concept of a [12-factor app](http://12factor.net/) out of the box.\r\n\r\n## bring your own promise\r\n\r\nIn versions of node `<=0.12.x` there is no native promise implementation available globally.  You can polyfill the promise globally like this:\r\n\r\n```js\r\n// first run `npm install promise-polyfill --save\r\nif (typeof Promise == 'undefined') {\r\n  global.Promise = require('promise-polyfill')\r\n}\r\n```\r\n\r\nYou can use any other promise implementation you'd like.  The pool also allows you to configure the promise implementation on a per-pool level:\r\n\r\n```js\r\nvar bluebirdPool = new Pool({\r\n  Promise: require('bluebird')\r\n})\r\n```\r\n\r\n__please note:__ in node `<=0.12.x` the pool will throw if you do not provide a promise constructor in one of the two ways mentioned above.  In node `>=4.0.0` the pool will use the native promise implementation by default; however, the two methods above still allow you to \"bring your own.\"\r\n\r\n## maxUses and read-replica autoscaling (e.g. AWS Aurora)\r\n\r\nThe maxUses config option can help an application instance rebalance load against a replica set that has been auto-scaled after the connection pool is already full of healthy connections.\r\n\r\nThe mechanism here is that a connection is considered \"expended\" after it has been acquired and released `maxUses` number of times.  Depending on the load on your system, this means there will be an approximate time in which any given connection will live, thus creating a window for rebalancing.\r\n\r\nImagine a scenario where you have 10 app instances providing an API running against a replica cluster of 3 that are accessed via a round-robin DNS entry.  Each instance runs a connection pool size of 20.  With an ambient load of 50 requests per second, the connection pool will likely fill up in a few minutes with healthy connections.\r\n\r\nIf you have weekly bursts of traffic which peak at 1,000 requests per second, you might want to grow your replicas to 10 during this period.  Without setting `maxUses`, the new replicas will not be adopted by the app servers without an intervention -- namely, restarting each in turn in order to build up new connection pools that are balanced against all the replicas.  Adding additional app server instances will help to some extent because they will adopt all the replicas in an even way, but the initial app servers will continue to focus additional load on the original replicas.\r\n\r\nThis is where the `maxUses` configuration option comes into play.  Setting `maxUses` to 7500 will ensure that over a period of 30 minutes or so the new replicas will be adopted as the pre-existing connections are closed and replaced with new ones, thus creating a window for eventual balance.\r\n\r\nYou'll want to test based on your own scenarios, but one way to make a first guess at `maxUses` is to identify an acceptable window for rebalancing and then solve for the value:\r\n\r\n```\r\nmaxUses = rebalanceWindowSeconds * totalRequestsPerSecond / numAppInstances / poolSize\r\n```\r\n\r\nIn the example above, assuming we acquire and release 1 connection per request and we are aiming for a 30 minute rebalancing window:\r\n\r\n```\r\nmaxUses = rebalanceWindowSeconds * totalRequestsPerSecond / numAppInstances / poolSize\r\n   7200 =        1800            *          1000          /        10       /    25\r\n```\r\n\r\n## tests\r\n\r\nTo run tests clone the repo, `npm i` in the working dir, and then run `npm test`\r\n\r\n## contributions\r\n\r\nI love contributions.  Please make sure they have tests, and submit a PR.  If you're not sure if the issue is worth it or will be accepted it never hurts to open an issue to begin the conversation.  If you're interested in keeping up with node-postgres releated stuff, you can follow me on twitter at [@briancarlson](https://twitter.com/briancarlson) - I generally announce any noteworthy updates there.\r\n\r\n## license\r\n\r\nThe MIT License (MIT)\r\nCopyright (c) 2016 Brian M. Carlson\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-pool/README.md b/node_modules/pg-pool/README.md
--- a/node_modules/pg-pool/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-pool/README.md	(date 1753913035286)
@@ -15,17 +15,17 @@
 to use pg-pool you must first create an instance of a pool
 
 ```js
-var Pool = require('pg-pool')
+const Pool = require('pg-pool')
 
 // by default the pool uses the same
 // configuration as whatever `pg` version you have installed
-var pool = new Pool()
+const pool = new Pool()
 
 // you can pass properties to the pool
 // these properties are passed unchanged to both the node-postgres Client constructor
 // and the node-pool (https://github.com/coopernurse/node-pool) constructor
 // allowing you to fully configure the behavior of both
-var pool2 = new Pool({
+const pool2 = new Pool({
   database: 'postgres',
   user: 'brianc',
   password: 'secret!',
@@ -37,14 +37,14 @@
   maxUses: 7500, // close (and replace) a connection after it has been used 7500 times (see below for discussion)
 })
 
-//you can supply a custom client constructor
-//if you want to use the native postgres client
-var NativeClient = require('pg').native.Client
-var nativePool = new Pool({ Client: NativeClient })
+// you can supply a custom client constructor
+// if you want to use the native postgres client
+const NativeClient = require('pg').native.Client
+const nativePool = new Pool({ Client: NativeClient })
 
-//you can even pool pg-native clients directly
-var PgNativeClient = require('pg-native')
-var pgNativePool = new Pool({ Client: PgNativeClient })
+// you can even pool pg-native clients directly
+const PgNativeClient = require('pg-native')
+const pgNativePool = new Pool({ Client: PgNativeClient })
 ```
 
 ##### Note:
@@ -86,7 +86,7 @@
 pg-pool supports a fully promise-based api for acquiring clients
 
 ```js
-var pool = new Pool()
+const pool = new Pool()
 pool.connect().then(client => {
   client.query('select $1::text as name', ['pg-pool']).then(res => {
     client.release()
@@ -106,10 +106,10 @@
 ```js
 // with async/await
 (async () => {
-  var pool = new Pool()
-  var client = await pool.connect()
+  const pool = new Pool()
+  const client = await pool.connect()
   try {
-    var result = await client.query('select $1::text as name', ['brianc'])
+    const result = await client.query('select $1::text as name', ['brianc'])
     console.log('hello from', result.rows[0])
   } finally {
     client.release()
@@ -118,9 +118,9 @@
 
 // with co
 co(function * () {
-  var client = yield pool.connect()
+  const client = yield pool.connect()
   try {
-    var result = yield client.query('select $1::text as name', ['brianc'])
+    const result = yield client.query('select $1::text as name', ['brianc'])
     console.log('hello from', result.rows[0])
   } finally {
     client.release()
@@ -133,16 +133,16 @@
 because its so common to just run a query and return the client to the pool afterward pg-pool has this built-in:
 
 ```js
-var pool = new Pool()
-var time = await pool.query('SELECT NOW()')
-var name = await pool.query('select $1::text as name', ['brianc'])
+const pool = new Pool()
+const time = await pool.query('SELECT NOW()')
+const name = await pool.query('select $1::text as name', ['brianc'])
 console.log(name.rows[0].name, 'says hello at', time.rows[0].now)
 ```
 
 you can also use a callback here if you'd like:
 
 ```js
-var pool = new Pool()
+const pool = new Pool()
 pool.query('SELECT $1::text as name', ['brianc'], function (err, res) {
   console.log(res.rows[0].name) // brianc
 })
@@ -158,7 +158,7 @@
 pg-pool still and will always support the traditional callback api for acquiring a client.  This is the exact API node-postgres has shipped with for years:
 
 ```js
-var pool = new Pool()
+const pool = new Pool()
 pool.connect((err, client, done) => {
   if (err) return done(err)
 
@@ -178,8 +178,8 @@
 will shutdown gracefully.  If you don't want to wait for the timeout you can end the pool as follows:
 
 ```js
-var pool = new Pool()
-var client = await pool.connect()
+const pool = new Pool()
+const client = await pool.connect()
 console.log(await client.query('select now()'))
 client.release()
 await pool.end()
@@ -194,7 +194,7 @@
 
 // correct usage: create the pool and let it live
 // 'globally' here, controlling access to it through exported methods
-var pool = new pg.Pool()
+const pool = new pg.Pool()
 
 // this is the right way to export the query method
 module.exports.query = (text, values) => {
@@ -208,7 +208,7 @@
   // every time we called 'connect' to get a new client?
   // that's a bad thing & results in creating an unbounded
   // number of pools & therefore connections
-  var aPool = new pg.Pool()
+  const aPool = new pg.Pool()
   return aPool.connect()
 }
 ```
@@ -245,7 +245,7 @@
 const Pool = require('pg-pool')
 const pool = new Pool()
 
-var count = 0
+const count = 0
 
 pool.on('connect', client => {
   client.count = count++
@@ -265,27 +265,27 @@
 
 #### acquire
 
-Fired whenever the a client is acquired from the pool
+Fired whenever a client is acquired from the pool
 
 Example:
 
 This allows you to count the number of clients which have ever been acquired from the pool.
 
 ```js
-var Pool = require('pg-pool')
-var pool = new Pool()
+const Pool = require('pg-pool')
+const pool = new Pool()
 
-var acquireCount = 0
+const acquireCount = 0
 pool.on('acquire', function (client) {
   acquireCount++
 })
 
-var connectCount = 0
+const connectCount = 0
 pool.on('connect', function () {
   connectCount++
 })
 
-for (var i = 0; i < 200; i++) {
+for (let i = 0; i < 200; i++) {
   pool.query('SELECT NOW()')
 }
 
@@ -324,7 +324,7 @@
 You can use any other promise implementation you'd like.  The pool also allows you to configure the promise implementation on a per-pool level:
 
 ```js
-var bluebirdPool = new Pool({
+const bluebirdPool = new Pool({
   Promise: require('bluebird')
 })
 ```
Index: node_modules/pg-pool/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict'\r\nconst EventEmitter = require('events').EventEmitter\r\n\r\nconst NOOP = function () {}\r\n\r\nconst removeWhere = (list, predicate) => {\r\n  const i = list.findIndex(predicate)\r\n\r\n  return i === -1 ? undefined : list.splice(i, 1)[0]\r\n}\r\n\r\nclass IdleItem {\r\n  constructor(client, idleListener, timeoutId) {\r\n    this.client = client\r\n    this.idleListener = idleListener\r\n    this.timeoutId = timeoutId\r\n  }\r\n}\r\n\r\nclass PendingItem {\r\n  constructor(callback) {\r\n    this.callback = callback\r\n  }\r\n}\r\n\r\nfunction throwOnDoubleRelease() {\r\n  throw new Error('Release called on client which has already been released to the pool.')\r\n}\r\n\r\nfunction promisify(Promise, callback) {\r\n  if (callback) {\r\n    return { callback: callback, result: undefined }\r\n  }\r\n  let rej\r\n  let res\r\n  const cb = function (err, client) {\r\n    err ? rej(err) : res(client)\r\n  }\r\n  const result = new Promise(function (resolve, reject) {\r\n    res = resolve\r\n    rej = reject\r\n  }).catch((err) => {\r\n    // replace the stack trace that leads to `TCP.onStreamRead` with one that leads back to the\r\n    // application that created the query\r\n    Error.captureStackTrace(err)\r\n    throw err\r\n  })\r\n  return { callback: cb, result: result }\r\n}\r\n\r\nfunction makeIdleListener(pool, client) {\r\n  return function idleListener(err) {\r\n    err.client = client\r\n\r\n    client.removeListener('error', idleListener)\r\n    client.on('error', () => {\r\n      pool.log('additional client error after disconnection due to error', err)\r\n    })\r\n    pool._remove(client)\r\n    // TODO - document that once the pool emits an error\r\n    // the client has already been closed & purged and is unusable\r\n    pool.emit('error', err, client)\r\n  }\r\n}\r\n\r\nclass Pool extends EventEmitter {\r\n  constructor(options, Client) {\r\n    super()\r\n    this.options = Object.assign({}, options)\r\n\r\n    if (options != null && 'password' in options) {\r\n      // \"hiding\" the password so it doesn't show up in stack traces\r\n      // or if the client is console.logged\r\n      Object.defineProperty(this.options, 'password', {\r\n        configurable: true,\r\n        enumerable: false,\r\n        writable: true,\r\n        value: options.password,\r\n      })\r\n    }\r\n    if (options != null && options.ssl && options.ssl.key) {\r\n      // \"hiding\" the ssl->key so it doesn't show up in stack traces\r\n      // or if the client is console.logged\r\n      Object.defineProperty(this.options.ssl, 'key', {\r\n        enumerable: false,\r\n      })\r\n    }\r\n\r\n    this.options.max = this.options.max || this.options.poolSize || 10\r\n    this.options.maxUses = this.options.maxUses || Infinity\r\n    this.options.allowExitOnIdle = this.options.allowExitOnIdle || false\r\n    this.options.maxLifetimeSeconds = this.options.maxLifetimeSeconds || 0\r\n    this.log = this.options.log || function () {}\r\n    this.Client = this.options.Client || Client || require('pg').Client\r\n    this.Promise = this.options.Promise || global.Promise\r\n\r\n    if (typeof this.options.idleTimeoutMillis === 'undefined') {\r\n      this.options.idleTimeoutMillis = 10000\r\n    }\r\n\r\n    this._clients = []\r\n    this._idle = []\r\n    this._expired = new WeakSet()\r\n    this._pendingQueue = []\r\n    this._endCallback = undefined\r\n    this.ending = false\r\n    this.ended = false\r\n  }\r\n\r\n  _isFull() {\r\n    return this._clients.length >= this.options.max\r\n  }\r\n\r\n  _pulseQueue() {\r\n    this.log('pulse queue')\r\n    if (this.ended) {\r\n      this.log('pulse queue ended')\r\n      return\r\n    }\r\n    if (this.ending) {\r\n      this.log('pulse queue on ending')\r\n      if (this._idle.length) {\r\n        this._idle.slice().map((item) => {\r\n          this._remove(item.client)\r\n        })\r\n      }\r\n      if (!this._clients.length) {\r\n        this.ended = true\r\n        this._endCallback()\r\n      }\r\n      return\r\n    }\r\n\r\n    // if we don't have any waiting, do nothing\r\n    if (!this._pendingQueue.length) {\r\n      this.log('no queued requests')\r\n      return\r\n    }\r\n    // if we don't have any idle clients and we have no more room do nothing\r\n    if (!this._idle.length && this._isFull()) {\r\n      return\r\n    }\r\n    const pendingItem = this._pendingQueue.shift()\r\n    if (this._idle.length) {\r\n      const idleItem = this._idle.pop()\r\n      clearTimeout(idleItem.timeoutId)\r\n      const client = idleItem.client\r\n      client.ref && client.ref()\r\n      const idleListener = idleItem.idleListener\r\n\r\n      return this._acquireClient(client, pendingItem, idleListener, false)\r\n    }\r\n    if (!this._isFull()) {\r\n      return this.newClient(pendingItem)\r\n    }\r\n    throw new Error('unexpected condition')\r\n  }\r\n\r\n  _remove(client) {\r\n    const removed = removeWhere(this._idle, (item) => item.client === client)\r\n\r\n    if (removed !== undefined) {\r\n      clearTimeout(removed.timeoutId)\r\n    }\r\n\r\n    this._clients = this._clients.filter((c) => c !== client)\r\n    client.end()\r\n    this.emit('remove', client)\r\n  }\r\n\r\n  connect(cb) {\r\n    if (this.ending) {\r\n      const err = new Error('Cannot use a pool after calling end on the pool')\r\n      return cb ? cb(err) : this.Promise.reject(err)\r\n    }\r\n\r\n    const response = promisify(this.Promise, cb)\r\n    const result = response.result\r\n\r\n    // if we don't have to connect a new client, don't do so\r\n    if (this._isFull() || this._idle.length) {\r\n      // if we have idle clients schedule a pulse immediately\r\n      if (this._idle.length) {\r\n        process.nextTick(() => this._pulseQueue())\r\n      }\r\n\r\n      if (!this.options.connectionTimeoutMillis) {\r\n        this._pendingQueue.push(new PendingItem(response.callback))\r\n        return result\r\n      }\r\n\r\n      const queueCallback = (err, res, done) => {\r\n        clearTimeout(tid)\r\n        response.callback(err, res, done)\r\n      }\r\n\r\n      const pendingItem = new PendingItem(queueCallback)\r\n\r\n      // set connection timeout on checking out an existing client\r\n      const tid = setTimeout(() => {\r\n        // remove the callback from pending waiters because\r\n        // we're going to call it with a timeout error\r\n        removeWhere(this._pendingQueue, (i) => i.callback === queueCallback)\r\n        pendingItem.timedOut = true\r\n        response.callback(new Error('timeout exceeded when trying to connect'))\r\n      }, this.options.connectionTimeoutMillis)\r\n\r\n      this._pendingQueue.push(pendingItem)\r\n      return result\r\n    }\r\n\r\n    this.newClient(new PendingItem(response.callback))\r\n\r\n    return result\r\n  }\r\n\r\n  newClient(pendingItem) {\r\n    const client = new this.Client(this.options)\r\n    this._clients.push(client)\r\n    const idleListener = makeIdleListener(this, client)\r\n\r\n    this.log('checking client timeout')\r\n\r\n    // connection timeout logic\r\n    let tid\r\n    let timeoutHit = false\r\n    if (this.options.connectionTimeoutMillis) {\r\n      tid = setTimeout(() => {\r\n        this.log('ending client due to timeout')\r\n        timeoutHit = true\r\n        // force kill the node driver, and let libpq do its teardown\r\n        client.connection ? client.connection.stream.destroy() : client.end()\r\n      }, this.options.connectionTimeoutMillis)\r\n    }\r\n\r\n    this.log('connecting new client')\r\n    client.connect((err) => {\r\n      if (tid) {\r\n        clearTimeout(tid)\r\n      }\r\n      client.on('error', idleListener)\r\n      if (err) {\r\n        this.log('client failed to connect', err)\r\n        // remove the dead client from our list of clients\r\n        this._clients = this._clients.filter((c) => c !== client)\r\n        if (timeoutHit) {\r\n          err.message = 'Connection terminated due to connection timeout'\r\n        }\r\n\r\n        // this client won’t be released, so move on immediately\r\n        this._pulseQueue()\r\n\r\n        if (!pendingItem.timedOut) {\r\n          pendingItem.callback(err, undefined, NOOP)\r\n        }\r\n      } else {\r\n        this.log('new client connected')\r\n\r\n        if (this.options.maxLifetimeSeconds !== 0) {\r\n          const maxLifetimeTimeout = setTimeout(() => {\r\n            this.log('ending client due to expired lifetime')\r\n            this._expired.add(client)\r\n            const idleIndex = this._idle.findIndex((idleItem) => idleItem.client === client)\r\n            if (idleIndex !== -1) {\r\n              this._acquireClient(\r\n                client,\r\n                new PendingItem((err, client, clientRelease) => clientRelease()),\r\n                idleListener,\r\n                false\r\n              )\r\n            }\r\n          }, this.options.maxLifetimeSeconds * 1000)\r\n\r\n          maxLifetimeTimeout.unref()\r\n          client.once('end', () => clearTimeout(maxLifetimeTimeout))\r\n        }\r\n\r\n        return this._acquireClient(client, pendingItem, idleListener, true)\r\n      }\r\n    })\r\n  }\r\n\r\n  // acquire a client for a pending work item\r\n  _acquireClient(client, pendingItem, idleListener, isNew) {\r\n    if (isNew) {\r\n      this.emit('connect', client)\r\n    }\r\n\r\n    this.emit('acquire', client)\r\n\r\n    client.release = this._releaseOnce(client, idleListener)\r\n\r\n    client.removeListener('error', idleListener)\r\n\r\n    if (!pendingItem.timedOut) {\r\n      if (isNew && this.options.verify) {\r\n        this.options.verify(client, (err) => {\r\n          if (err) {\r\n            client.release(err)\r\n            return pendingItem.callback(err, undefined, NOOP)\r\n          }\r\n\r\n          pendingItem.callback(undefined, client, client.release)\r\n        })\r\n      } else {\r\n        pendingItem.callback(undefined, client, client.release)\r\n      }\r\n    } else {\r\n      if (isNew && this.options.verify) {\r\n        this.options.verify(client, client.release)\r\n      } else {\r\n        client.release()\r\n      }\r\n    }\r\n  }\r\n\r\n  // returns a function that wraps _release and throws if called more than once\r\n  _releaseOnce(client, idleListener) {\r\n    let released = false\r\n\r\n    return (err) => {\r\n      if (released) {\r\n        throwOnDoubleRelease()\r\n      }\r\n\r\n      released = true\r\n      this._release(client, idleListener, err)\r\n    }\r\n  }\r\n\r\n  // release a client back to the poll, include an error\r\n  // to remove it from the pool\r\n  _release(client, idleListener, err) {\r\n    client.on('error', idleListener)\r\n\r\n    client._poolUseCount = (client._poolUseCount || 0) + 1\r\n\r\n    this.emit('release', err, client)\r\n\r\n    // TODO(bmc): expose a proper, public interface _queryable and _ending\r\n    if (err || this.ending || !client._queryable || client._ending || client._poolUseCount >= this.options.maxUses) {\r\n      if (client._poolUseCount >= this.options.maxUses) {\r\n        this.log('remove expended client')\r\n      }\r\n      this._remove(client)\r\n      this._pulseQueue()\r\n      return\r\n    }\r\n\r\n    const isExpired = this._expired.has(client)\r\n    if (isExpired) {\r\n      this.log('remove expired client')\r\n      this._expired.delete(client)\r\n      this._remove(client)\r\n      this._pulseQueue()\r\n      return\r\n    }\r\n\r\n    // idle timeout\r\n    let tid\r\n    if (this.options.idleTimeoutMillis) {\r\n      tid = setTimeout(() => {\r\n        this.log('remove idle client')\r\n        this._remove(client)\r\n      }, this.options.idleTimeoutMillis)\r\n\r\n      if (this.options.allowExitOnIdle) {\r\n        // allow Node to exit if this is all that's left\r\n        tid.unref()\r\n      }\r\n    }\r\n\r\n    if (this.options.allowExitOnIdle) {\r\n      client.unref()\r\n    }\r\n\r\n    this._idle.push(new IdleItem(client, idleListener, tid))\r\n    this._pulseQueue()\r\n  }\r\n\r\n  query(text, values, cb) {\r\n    // guard clause against passing a function as the first parameter\r\n    if (typeof text === 'function') {\r\n      const response = promisify(this.Promise, text)\r\n      setImmediate(function () {\r\n        return response.callback(new Error('Passing a function as the first parameter to pool.query is not supported'))\r\n      })\r\n      return response.result\r\n    }\r\n\r\n    // allow plain text query without values\r\n    if (typeof values === 'function') {\r\n      cb = values\r\n      values = undefined\r\n    }\r\n    const response = promisify(this.Promise, cb)\r\n    cb = response.callback\r\n\r\n    this.connect((err, client) => {\r\n      if (err) {\r\n        return cb(err)\r\n      }\r\n\r\n      let clientReleased = false\r\n      const onError = (err) => {\r\n        if (clientReleased) {\r\n          return\r\n        }\r\n        clientReleased = true\r\n        client.release(err)\r\n        cb(err)\r\n      }\r\n\r\n      client.once('error', onError)\r\n      this.log('dispatching query')\r\n      try {\r\n        client.query(text, values, (err, res) => {\r\n          this.log('query dispatched')\r\n          client.removeListener('error', onError)\r\n          if (clientReleased) {\r\n            return\r\n          }\r\n          clientReleased = true\r\n          client.release(err)\r\n          if (err) {\r\n            return cb(err)\r\n          }\r\n          return cb(undefined, res)\r\n        })\r\n      } catch (err) {\r\n        client.release(err)\r\n        return cb(err)\r\n      }\r\n    })\r\n    return response.result\r\n  }\r\n\r\n  end(cb) {\r\n    this.log('ending')\r\n    if (this.ending) {\r\n      const err = new Error('Called end on pool more than once')\r\n      return cb ? cb(err) : this.Promise.reject(err)\r\n    }\r\n    this.ending = true\r\n    const promised = promisify(this.Promise, cb)\r\n    this._endCallback = promised.callback\r\n    this._pulseQueue()\r\n    return promised.result\r\n  }\r\n\r\n  get waitingCount() {\r\n    return this._pendingQueue.length\r\n  }\r\n\r\n  get idleCount() {\r\n    return this._idle.length\r\n  }\r\n\r\n  get expiredCount() {\r\n    return this._clients.reduce((acc, client) => acc + (this._expired.has(client) ? 1 : 0), 0)\r\n  }\r\n\r\n  get totalCount() {\r\n    return this._clients.length\r\n  }\r\n}\r\nmodule.exports = Pool\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-pool/index.js b/node_modules/pg-pool/index.js
--- a/node_modules/pg-pool/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-pool/index.js	(date 1753913035278)
@@ -87,6 +87,7 @@
     }
 
     this.options.max = this.options.max || this.options.poolSize || 10
+    this.options.min = this.options.min || 0
     this.options.maxUses = this.options.maxUses || Infinity
     this.options.allowExitOnIdle = this.options.allowExitOnIdle || false
     this.options.maxLifetimeSeconds = this.options.maxLifetimeSeconds || 0
@@ -111,6 +112,10 @@
     return this._clients.length >= this.options.max
   }
 
+  _isAboveMin() {
+    return this._clients.length > this.options.min
+  }
+
   _pulseQueue() {
     this.log('pulse queue')
     if (this.ended) {
@@ -156,7 +161,7 @@
     throw new Error('unexpected condition')
   }
 
-  _remove(client) {
+  _remove(client, callback) {
     const removed = removeWhere(this._idle, (item) => item.client === client)
 
     if (removed !== undefined) {
@@ -164,8 +169,14 @@
     }
 
     this._clients = this._clients.filter((c) => c !== client)
-    client.end()
-    this.emit('remove', client)
+    const context = this
+    client.end(() => {
+      context.emit('remove', client)
+
+      if (typeof callback === 'function') {
+        callback()
+      }
+    })
   }
 
   connect(cb) {
@@ -205,6 +216,10 @@
         response.callback(new Error('timeout exceeded when trying to connect'))
       }, this.options.connectionTimeoutMillis)
 
+      if (tid.unref) {
+        tid.unref()
+      }
+
       this._pendingQueue.push(pendingItem)
       return result
     }
@@ -244,7 +259,7 @@
         // remove the dead client from our list of clients
         this._clients = this._clients.filter((c) => c !== client)
         if (timeoutHit) {
-          err.message = 'Connection terminated due to connection timeout'
+          err = new Error('Connection terminated due to connection timeout', { cause: err })
         }
 
         // this client won’t be released, so move on immediately
@@ -342,26 +357,23 @@
       if (client._poolUseCount >= this.options.maxUses) {
         this.log('remove expended client')
       }
-      this._remove(client)
-      this._pulseQueue()
-      return
+
+      return this._remove(client, this._pulseQueue.bind(this))
     }
 
     const isExpired = this._expired.has(client)
     if (isExpired) {
       this.log('remove expired client')
       this._expired.delete(client)
-      this._remove(client)
-      this._pulseQueue()
-      return
+      return this._remove(client, this._pulseQueue.bind(this))
     }
 
     // idle timeout
     let tid
-    if (this.options.idleTimeoutMillis) {
+    if (this.options.idleTimeoutMillis && this._isAboveMin()) {
       tid = setTimeout(() => {
         this.log('remove idle client')
-        this._remove(client)
+        this._remove(client, this._pulseQueue.bind(this))
       }, this.options.idleTimeoutMillis)
 
       if (this.options.allowExitOnIdle) {
Index: node_modules/.bin/nodemon
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>../nodemon/bin/nodemon.js
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/.bin/nodemon b/node_modules/.bin/nodemon
--- a/node_modules/.bin/nodemon	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/.bin/nodemon	(date 1753913036346)
@@ -1,1 +1,16 @@
-../nodemon/bin/nodemon.js
\ No newline at end of file
+#!/bin/sh
+basedir=$(dirname "$(echo "$0" | sed -e 's,\\,/,g')")
+
+case `uname` in
+    *CYGWIN*|*MINGW*|*MSYS*)
+        if command -v cygpath > /dev/null 2>&1; then
+            basedir=`cygpath -w "$basedir"`
+        fi
+    ;;
+esac
+
+if [ -x "$basedir/node" ]; then
+  exec "$basedir/node"  "$basedir/../nodemon/bin/nodemon.js" "$@"
+else 
+  exec node  "$basedir/../nodemon/bin/nodemon.js" "$@"
+fi
Index: node_modules/ts-gems/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"ts-gems\",\r\n  \"description\": \"Valuable typing extensions for TypeScript\",\r\n  \"keywords\": [\r\n    \"typescript\",\r\n    \"types\",\r\n    \"gems\",\r\n    \"essentials\",\r\n    \"utils\",\r\n    \"toolbox\",\r\n    \"toolbelt\",\r\n    \"lodash\",\r\n    \"underscore\"\r\n  ],\r\n  \"version\": \"3.4.0\",\r\n  \"type\": \"module\",\r\n  \"module\": \"lib/index.mjs\",\r\n  \"main\": \"lib/index.cjs\",\r\n  \"types\": \"lib/index.d.ts\",\r\n  \"repository\": \"git@github.com:panates/ts-gems.git\",\r\n  \"author\": \"Eray Hanoglu <e.hanoglu@panates.com>\",\r\n  \"license\": \"MIT\",\r\n  \"scripts\": {\r\n    \"compile\": \"tsc -b tsconfig.json\",\r\n    \"lint\": \"eslint --no-error-on-unmatched-pattern\",\r\n    \"format\": \"prettier . --write --log-level=warn\",\r\n    \"test:common\": \"jest --clearCache && jest --config=./jest.config.mjs\",\r\n    \"test:nostrict\": \"jest --clearCache && jest --config=./jest.nostrict.config.mjs\",\r\n    \"test\": \"npm run test:common && npm run test:nostrict\"\r\n  },\r\n  \"files\": [\r\n    \"LICENSE\",\r\n    \"README\",\r\n    \"lib/\"\r\n  ],\r\n  \"devDependencies\": {\r\n    \"@types/jest\": \"^29.5.12\",\r\n    \"eslint\": \"^8.57.0\",\r\n    \"eslint-config-prettier\": \"^9.1.0\",\r\n    \"eslint-plugin-import\": \"^2.29.1\",\r\n    \"eslint-plugin-prettier\": \"^5.1.3\",\r\n    \"eslint-plugin-security\": \"^3.0.0\",\r\n    \"eslint-plugin-simple-import-sort\": \"^12.1.0\",\r\n    \"eslint-plugin-unused-imports\": \"^3.1.0\",\r\n    \"jest\": \"^29.7.0\",\r\n    \"prettier\": \"^3.2.5\",\r\n    \"ts-jest\": \"^29.1.2\",\r\n    \"typescript\": \"^5.4.5\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/ts-gems/package.json b/node_modules/ts-gems/package.json
--- a/node_modules/ts-gems/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/ts-gems/package.json	(date 1753913035511)
@@ -1,50 +1,55 @@
 {
   "name": "ts-gems",
   "description": "Valuable typing extensions for TypeScript",
-  "keywords": [
-    "typescript",
-    "types",
-    "gems",
-    "essentials",
-    "utils",
-    "toolbox",
-    "toolbelt",
-    "lodash",
-    "underscore"
-  ],
-  "version": "3.4.0",
-  "type": "module",
-  "module": "lib/index.mjs",
-  "main": "lib/index.cjs",
-  "types": "lib/index.d.ts",
+  "version": "3.11.3",
+  "license": "MIT",
+  "module": "./lib/index.mjs",
+  "main": "./lib/index.cjs",
+  "types": "./lib/index.d.ts",
+  "exports": {
+    ".": {
+      "import": "./lib/index.mjs",
+      "require": "./lib/index.cjs",
+      "types": "./lib/index.d.ts"
+    }
+  },
   "repository": "git@github.com:panates/ts-gems.git",
   "author": "Eray Hanoglu <e.hanoglu@panates.com>",
-  "license": "MIT",
   "scripts": {
     "compile": "tsc -b tsconfig.json",
-    "lint": "eslint --no-error-on-unmatched-pattern",
+    "lint": "eslint . --max-warnings=0",
+    "lint:fix": "eslint . --max-warnings=0 --fix",
     "format": "prettier . --write --log-level=warn",
     "test:common": "jest --clearCache && jest --config=./jest.config.mjs",
     "test:nostrict": "jest --clearCache && jest --config=./jest.nostrict.config.mjs",
     "test": "npm run test:common && npm run test:nostrict"
   },
+  "devDependencies": {
+    "@panates/eslint-config": "^2.0.2",
+    "@panates/eslint-config-ts": "^2.0.2",
+    "@panates/tsconfig": "^2.0.2",
+    "@types/jest": "^29.5.14",
+    "globals": "^15.14.0",
+    "husky": "^9.1.7",
+    "jest": "^29.7.0",
+    "prettier": "^3.4.2",
+    "ts-jest": "^29.2.5",
+    "typescript": "^5.7.3"
+  },
   "files": [
     "LICENSE",
     "README",
     "lib/"
   ],
-  "devDependencies": {
-    "@types/jest": "^29.5.12",
-    "eslint": "^8.57.0",
-    "eslint-config-prettier": "^9.1.0",
-    "eslint-plugin-import": "^2.29.1",
-    "eslint-plugin-prettier": "^5.1.3",
-    "eslint-plugin-security": "^3.0.0",
-    "eslint-plugin-simple-import-sort": "^12.1.0",
-    "eslint-plugin-unused-imports": "^3.1.0",
-    "jest": "^29.7.0",
-    "prettier": "^3.2.5",
-    "ts-jest": "^29.1.2",
-    "typescript": "^5.4.5"
-  }
+  "keywords": [
+    "typescript",
+    "types",
+    "gems",
+    "essentials",
+    "utils",
+    "toolbox",
+    "toolbelt",
+    "lodash",
+    "underscore"
+  ]
 }
Index: node_modules/ts-gems/lib/omit-never.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { IfNoDeepValue } from './helpers';\r\nimport { IfNever } from './type-check';\r\n\r\n/**\r\n * OmitNever<T> is a type that omits all properties with a value of type \"never\".\r\n *\r\n * @template T - The original type\r\n *\r\n * @example\r\n * type MyType = {\r\n *   a: string;\r\n *   b: number;\r\n *   c?: never;\r\n * };\r\n *\r\n * type Result = OmitNever<MyType>;\r\n * // Result is:\r\n * // {\r\n * //   a: string;\r\n * //   b: number;\r\n * // }\r\n */\r\nexport type OmitNever<T> = {\r\n  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]: T[K];\r\n};\r\n\r\n/**\r\n * Omit all \"never\" and \"undefined\" properties in T deeply\r\n */\r\nexport type DeepOmitNever<T> = {\r\n  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]: IfNoDeepValue< // Do not deep process No-Deep values\r\n    Exclude<T[K], undefined>\r\n  > extends true\r\n    ? T[K]\r\n    : // Deep process objects\r\n      DeepOmitNever<Exclude<T[K], undefined>>;\r\n};\r\n\r\n/**\r\n * Omit all \"never\" and \"undefined\" properties in T deeply including arrays\r\n */\r\nexport type DeeperOmitNever<T> = {\r\n  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]: Exclude< // Deep process arrays\r\n    T[K],\r\n    undefined\r\n  > extends (infer U)[]\r\n    ? DeeperOmitNever<U>[]\r\n    : // Do not deep process No-Deep values\r\n      IfNoDeepValue<Exclude<T[K], undefined>> extends true\r\n      ? T[K]\r\n      : // Deep process objects\r\n        DeepOmitNever<Exclude<T[K], undefined>>;\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/ts-gems/lib/omit-never.d.ts b/node_modules/ts-gems/lib/omit-never.d.ts
--- a/node_modules/ts-gems/lib/omit-never.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/ts-gems/lib/omit-never.d.ts	(date 1753913035522)
@@ -1,5 +1,5 @@
-import { IfNoDeepValue } from './helpers';
-import { IfNever } from './type-check';
+import { IfNoDeepValue } from './helpers.js';
+import { IfNever } from './type-check.js';
 
 /**
  * OmitNever<T> is a type that omits all properties with a value of type "never".
@@ -28,26 +28,27 @@
  * Omit all "never" and "undefined" properties in T deeply
  */
 export type DeepOmitNever<T> = {
-  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]: IfNoDeepValue< // Do not deep process No-Deep values
-    Exclude<T[K], undefined>
+  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]: IfNoDeepValue<
+    // Do not deep process No-Deep values
+    NonNullable<T[K]>
   > extends true
     ? T[K]
     : // Deep process objects
-      DeepOmitNever<Exclude<T[K], undefined>>;
+      DeepOmitNever<NonNullable<T[K]>>;
 };
 
 /**
  * Omit all "never" and "undefined" properties in T deeply including arrays
  */
 export type DeeperOmitNever<T> = {
-  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]: Exclude< // Deep process arrays
-    T[K],
-    undefined
+  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]: NonNullable<
+    // Deep process arrays
+    T[K]
   > extends (infer U)[]
     ? DeeperOmitNever<U>[]
     : // Do not deep process No-Deep values
-      IfNoDeepValue<Exclude<T[K], undefined>> extends true
+      IfNoDeepValue<NonNullable<T[K]>> extends true
       ? T[K]
       : // Deep process objects
-        DeepOmitNever<Exclude<T[K], undefined>>;
+        DeeperOmitNever<NonNullable<T[K]>>;
 };
Index: node_modules/ts-gems/lib/types.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * Declare ReadableStream and WritableStream in case dom.d.ts is not added to the tsconfig\r\n * lib causing ReadableStream or WritableStream interface is not defined.\r\n * For developers with dom.d.ts added, the ReadableStream and WritableStream\r\n * interface will be merged correctly.\r\n *\r\n * This is also required for any clients with streaming interface where ReadableStream\r\n * or WritableStream type is also referred.\r\n */\r\ndeclare global {\r\n  export interface ReadableStream<R = any> {\r\n    readonly locked: boolean;\r\n\r\n    cancel(reason?: any): Promise<void>;\r\n\r\n    getReader(options: { mode: 'byob' }): ReadableStreamBYOBReader;\r\n\r\n    getReader(): ReadableStreamDefaultReader<R>;\r\n\r\n    getReader(\r\n      options?: ReadableStreamGetReaderOptions,\r\n    ): ReadableStreamReader<R>;\r\n  }\r\n\r\n  export interface WritableStream<W = any> {\r\n    readonly locked: boolean;\r\n\r\n    abort(reason?: any): Promise<void>;\r\n\r\n    getWriter(): WritableStreamDefaultWriter<W>;\r\n  }\r\n}\r\n\r\n/**\r\n * BasicPrimitive\r\n * @desc Type representing [`BasicPrimitive`](https://www.typescriptlang.org/docs/handbook/release-notes/overview.html#smarter-type-alias-preservation) types in TypeScript\r\n */\r\ntype BasicPrimitive = number | string | boolean;\r\n\r\n/**\r\n * Primitive\r\n * @desc Type representing [`Primitive`](https://developer.mozilla.org/en-US/docs/Glossary/Primitive) types\r\n * in TypeScript: `string | number | bigint | boolean |  symbol | null | undefined`\r\n */\r\nexport type Primitive = BasicPrimitive | null | bigint | symbol | undefined;\r\n\r\n/**\r\n * JsonTypes\r\n * @desc Type representing JSON types in TypeScript\r\n */\r\ntype JsonType = BasicPrimitive | null | object | (BasicPrimitive | object)[];\r\n\r\n/**\r\n * Builtin\r\n * @desc Type representing Builtin types in JavaScript\r\n */\r\nexport type Builtin =\r\n  | Primitive\r\n  | Function\r\n  | String\r\n  | Number\r\n  | Date\r\n  | Error\r\n  | RegExp\r\n  | Buffer\r\n  | ArrayBuffer\r\n  | Int8Array\r\n  | Uint8Array\r\n  | Uint8ClampedArray\r\n  | Int16Array\r\n  | Uint16Array\r\n  | Int32Array\r\n  | Uint32Array\r\n  | Float32Array\r\n  | Float64Array\r\n  | URL\r\n  | ReadableStream\r\n  | WritableStream;\r\n\r\n/**\r\n * Type\r\n * @desc Represents constructor of type T\r\n */\r\nexport interface Type<T = any> {\r\n  new (...args: any[]): T;\r\n}\r\n\r\n/**\r\n * Class\r\n * @desc Represents Class constructor of type T\r\n */\r\nexport type Class<\r\n  Args extends any[] = any[],\r\n  Instance = {},\r\n  Static = {},\r\n> = (new (...args: Args) => Instance) & Static;\r\n\r\n/**\r\n * Maybe\r\n * @desc Type representing T | undefined\r\n */\r\nexport type Maybe<T> = T | undefined;\r\n\r\n/**\r\n * Nullish\r\n * @desc Type representing T | undefined | null\r\n */\r\nexport type Nullish<T = null> = T | undefined | null;\r\n\r\nexport type Awaited<T> = T extends PromiseLike<infer U> ? U : T;\r\n\r\nexport type Thunk<T> = T | (() => T);\r\nexport type ThunkAsync<T> = Thunk<T> | (() => Promise<T>);\r\nexport type TypeThunk<T = any> = Thunk<Type<T>>;\r\nexport type TypeThunkAsync<T = any> = ThunkAsync<Type<T>>;\r\n\r\nexport type MaybePromise<T> = T | Promise<T>;\r\n\r\n/**\r\n * PropertyType\r\n * @desc Returns the type of property at a given key `K`\r\n */\r\nexport type PropertyType<T, K extends keyof T> = T[K];\r\n\r\n/**\r\n * $ElementType\r\n * @desc Returns the type of elements inside of array, tuple or object of type `T`, that matches the given index type `K`\r\n */\r\nexport type ElementType<\r\n  T extends { [P in K & any]: any },\r\n  K extends keyof T | number,\r\n> = T[K];\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/ts-gems/lib/types.d.ts b/node_modules/ts-gems/lib/types.d.ts
--- a/node_modules/ts-gems/lib/types.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/ts-gems/lib/types.d.ts	(date 1753913035531)
@@ -1,39 +1,10 @@
-/**
- * Declare ReadableStream and WritableStream in case dom.d.ts is not added to the tsconfig
- * lib causing ReadableStream or WritableStream interface is not defined.
- * For developers with dom.d.ts added, the ReadableStream and WritableStream
- * interface will be merged correctly.
- *
- * This is also required for any clients with streaming interface where ReadableStream
- * or WritableStream type is also referred.
- */
-declare global {
-  export interface ReadableStream<R = any> {
-    readonly locked: boolean;
-
-    cancel(reason?: any): Promise<void>;
-
-    getReader(options: { mode: 'byob' }): ReadableStreamBYOBReader;
-
-    getReader(): ReadableStreamDefaultReader<R>;
-
-    getReader(
-      options?: ReadableStreamGetReaderOptions,
-    ): ReadableStreamReader<R>;
-  }
-
-  export interface WritableStream<W = any> {
-    readonly locked: boolean;
-
-    abort(reason?: any): Promise<void>;
-
-    getWriter(): WritableStreamDefaultWriter<W>;
-  }
-}
+/// <reference lib="dom" />
 
 /**
  * BasicPrimitive
- * @desc Type representing [`BasicPrimitive`](https://www.typescriptlang.org/docs/handbook/release-notes/overview.html#smarter-type-alias-preservation) types in TypeScript
+ * @desc Type representing
+ * [`BasicPrimitive`](https://www.typescriptlang.org/docs/handbook/release-notes/overview.html#smarter-type-alias-preservation)
+ * types in TypeScript
  */
 type BasicPrimitive = number | string | boolean;
 
Index: node_modules/ts-gems/lib/omit.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { IfNoDeepValue } from './helpers';\r\nimport { Or } from './logical.js';\r\nimport { IfFunction, IfNever } from './type-check';\r\n\r\n/**\r\n * Construct a type with the properties of T except for those in type K,\r\n * while preserving strict type checking.\r\n */\r\nexport type StrictOmit<T, X extends keyof T> = {\r\n  [K in keyof T as K extends X ? never : K]: T[K];\r\n};\r\n\r\n/**\r\n * Omit all function properties in T\r\n */\r\nexport type OmitFunctions<T> = {\r\n  [K in keyof T as Or<\r\n    // Omit never keys\r\n    IfNever<Exclude<T[K], undefined>>,\r\n    // Omit functions\r\n    IfFunction<Exclude<T[K], undefined>>\r\n  > extends true\r\n    ? never\r\n    : K]: T[K];\r\n};\r\n\r\n/**\r\n * Exclude from properties of T those types that are assignable to X\r\n */\r\nexport type OmitTypes<T, X> = {\r\n  [K in keyof T as IfNever<Exclude<T[K], undefined | X>, never, K>]: Exclude<\r\n    T[K],\r\n    X\r\n  >;\r\n};\r\n\r\n/**\r\n * Omit all function properties in T\r\n */\r\nexport type DeepOmitTypes<T, X> = {\r\n  [K in keyof T as IfNever<\r\n    Exclude<T[K], undefined | X>,\r\n    never,\r\n    K\r\n  >]: IfNoDeepValue<Exclude<T[K], undefined>> extends true // Do not deep process No-Deep values\r\n    ? Exclude<T[K], X>\r\n    : // Deep process objects\r\n      DeepOmitTypes<Exclude<T[K], undefined>, X>;\r\n};\r\n\r\n/**\r\n * Omit all function properties in T deeply including arrays\r\n */\r\nexport type DeeperOmitTypes<T, X> = {\r\n  [K in keyof T as IfNever<Exclude<T[K], undefined | X>, never, K>]: Exclude< // Deep process arrays // Do not deep process No-Deep values\r\n    T[K],\r\n    undefined\r\n  > extends (infer U)[]\r\n    ? DeeperOmitTypes<U, X>[]\r\n    : IfNoDeepValue<Exclude<T[K], undefined>> extends true\r\n      ? Exclude<T[K], X>\r\n      : // Deep process objects\r\n        DeeperOmitTypes<Exclude<T[K], undefined>, X>;\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/ts-gems/lib/omit.d.ts b/node_modules/ts-gems/lib/omit.d.ts
--- a/node_modules/ts-gems/lib/omit.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/ts-gems/lib/omit.d.ts	(date 1753913035524)
@@ -1,6 +1,6 @@
-import { IfNoDeepValue } from './helpers';
+import { IfNoDeepValue } from './helpers.js';
 import { Or } from './logical.js';
-import { IfFunction, IfNever } from './type-check';
+import { IfFunction, IfNever } from './type-check.js';
 
 /**
  * Construct a type with the properties of T except for those in type K,
@@ -18,7 +18,7 @@
     // Omit never keys
     IfNever<Exclude<T[K], undefined>>,
     // Omit functions
-    IfFunction<Exclude<T[K], undefined>>
+    IfFunction<NonNullable<T[K]>>
   > extends true
     ? never
     : K]: T[K];
@@ -45,20 +45,24 @@
   >]: IfNoDeepValue<Exclude<T[K], undefined>> extends true // Do not deep process No-Deep values
     ? Exclude<T[K], X>
     : // Deep process objects
-      DeepOmitTypes<Exclude<T[K], undefined>, X>;
+      DeepOmitTypes<NonNullable<T[K]>, X>;
 };
 
 /**
  * Omit all function properties in T deeply including arrays
  */
 export type DeeperOmitTypes<T, X> = {
-  [K in keyof T as IfNever<Exclude<T[K], undefined | X>, never, K>]: Exclude< // Deep process arrays // Do not deep process No-Deep values
-    T[K],
-    undefined
+  [K in keyof T as IfNever<
+    Exclude<T[K], undefined | X>,
+    never,
+    K
+  >]: NonNullable<
+    // Deep process arrays // Do not deep process No-Deep values
+    T[K]
   > extends (infer U)[]
     ? DeeperOmitTypes<U, X>[]
-    : IfNoDeepValue<Exclude<T[K], undefined>> extends true
+    : IfNoDeepValue<NonNullable<T[K]>> extends true
       ? Exclude<T[K], X>
       : // Deep process objects
-        DeeperOmitTypes<Exclude<T[K], undefined>, X>;
+        DeeperOmitTypes<NonNullable<T[K]>, X>;
 };
Index: node_modules/object-inspect/test/values.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar inspect = require('../');\r\nvar test = require('tape');\r\nvar mockProperty = require('mock-property');\r\nvar hasSymbols = require('has-symbols/shams')();\r\nvar hasToStringTag = require('has-tostringtag/shams')();\r\n\r\ntest('values', function (t) {\r\n    t.plan(1);\r\n    var obj = [{}, [], { 'a-b': 5 }];\r\n    t.equal(inspect(obj), '[ {}, [], { \\'a-b\\': 5 } ]');\r\n});\r\n\r\ntest('arrays with properties', function (t) {\r\n    t.plan(1);\r\n    var arr = [3];\r\n    arr.foo = 'bar';\r\n    var obj = [1, 2, arr];\r\n    obj.baz = 'quux';\r\n    obj.index = -1;\r\n    t.equal(inspect(obj), '[ 1, 2, [ 3, foo: \\'bar\\' ], baz: \\'quux\\', index: -1 ]');\r\n});\r\n\r\ntest('has', function (t) {\r\n    t.plan(1);\r\n    t.teardown(mockProperty(Object.prototype, 'hasOwnProperty', { 'delete': true }));\r\n\r\n    t.equal(inspect({ a: 1, b: 2 }), '{ a: 1, b: 2 }');\r\n});\r\n\r\ntest('indexOf seen', function (t) {\r\n    t.plan(1);\r\n    var xs = [1, 2, 3, {}];\r\n    xs.push(xs);\r\n\r\n    var seen = [];\r\n    seen.indexOf = undefined;\r\n\r\n    t.equal(\r\n        inspect(xs, {}, 0, seen),\r\n        '[ 1, 2, 3, {}, [Circular] ]'\r\n    );\r\n});\r\n\r\ntest('seen seen', function (t) {\r\n    t.plan(1);\r\n    var xs = [1, 2, 3];\r\n\r\n    var seen = [xs];\r\n    seen.indexOf = undefined;\r\n\r\n    t.equal(\r\n        inspect(xs, {}, 0, seen),\r\n        '[Circular]'\r\n    );\r\n});\r\n\r\ntest('seen seen seen', function (t) {\r\n    t.plan(1);\r\n    var xs = [1, 2, 3];\r\n\r\n    var seen = [5, xs];\r\n    seen.indexOf = undefined;\r\n\r\n    t.equal(\r\n        inspect(xs, {}, 0, seen),\r\n        '[Circular]'\r\n    );\r\n});\r\n\r\ntest('symbols', { skip: !hasSymbols }, function (t) {\r\n    var sym = Symbol('foo');\r\n    t.equal(inspect(sym), 'Symbol(foo)', 'Symbol(\"foo\") should be \"Symbol(foo)\"');\r\n    if (typeof sym === 'symbol') {\r\n        // Symbol shams are incapable of differentiating boxed from unboxed symbols\r\n        t.equal(inspect(Object(sym)), 'Object(Symbol(foo))', 'Object(Symbol(\"foo\")) should be \"Object(Symbol(foo))\"');\r\n    }\r\n\r\n    t.test('toStringTag', { skip: !hasToStringTag }, function (st) {\r\n        st.plan(1);\r\n\r\n        var faker = {};\r\n        faker[Symbol.toStringTag] = 'Symbol';\r\n        st.equal(\r\n            inspect(faker),\r\n            '{ [Symbol(Symbol.toStringTag)]: \\'Symbol\\' }',\r\n            'object lying about being a Symbol inspects as an object'\r\n        );\r\n    });\r\n\r\n    t.end();\r\n});\r\n\r\ntest('Map', { skip: typeof Map !== 'function' }, function (t) {\r\n    var map = new Map();\r\n    map.set({ a: 1 }, ['b']);\r\n    map.set(3, NaN);\r\n    var expectedString = 'Map (2) {' + inspect({ a: 1 }) + ' => ' + inspect(['b']) + ', 3 => NaN}';\r\n    t.equal(inspect(map), expectedString, 'new Map([[{ a: 1 }, [\"b\"]], [3, NaN]]) should show size and contents');\r\n    t.equal(inspect(new Map()), 'Map (0) {}', 'empty Map should show as empty');\r\n\r\n    var nestedMap = new Map();\r\n    nestedMap.set(nestedMap, map);\r\n    t.equal(inspect(nestedMap), 'Map (1) {[Circular] => ' + expectedString + '}', 'Map containing a Map should work');\r\n\r\n    t.end();\r\n});\r\n\r\ntest('WeakMap', { skip: typeof WeakMap !== 'function' }, function (t) {\r\n    var map = new WeakMap();\r\n    map.set({ a: 1 }, ['b']);\r\n    var expectedString = 'WeakMap { ? }';\r\n    t.equal(inspect(map), expectedString, 'new WeakMap([[{ a: 1 }, [\"b\"]]]) should not show size or contents');\r\n    t.equal(inspect(new WeakMap()), 'WeakMap { ? }', 'empty WeakMap should not show as empty');\r\n\r\n    t.end();\r\n});\r\n\r\ntest('Set', { skip: typeof Set !== 'function' }, function (t) {\r\n    var set = new Set();\r\n    set.add({ a: 1 });\r\n    set.add(['b']);\r\n    var expectedString = 'Set (2) {' + inspect({ a: 1 }) + ', ' + inspect(['b']) + '}';\r\n    t.equal(inspect(set), expectedString, 'new Set([{ a: 1 }, [\"b\"]]) should show size and contents');\r\n    t.equal(inspect(new Set()), 'Set (0) {}', 'empty Set should show as empty');\r\n\r\n    var nestedSet = new Set();\r\n    nestedSet.add(set);\r\n    nestedSet.add(nestedSet);\r\n    t.equal(inspect(nestedSet), 'Set (2) {' + expectedString + ', [Circular]}', 'Set containing a Set should work');\r\n\r\n    t.end();\r\n});\r\n\r\ntest('WeakSet', { skip: typeof WeakSet !== 'function' }, function (t) {\r\n    var map = new WeakSet();\r\n    map.add({ a: 1 });\r\n    var expectedString = 'WeakSet { ? }';\r\n    t.equal(inspect(map), expectedString, 'new WeakSet([{ a: 1 }]) should not show size or contents');\r\n    t.equal(inspect(new WeakSet()), 'WeakSet { ? }', 'empty WeakSet should not show as empty');\r\n\r\n    t.end();\r\n});\r\n\r\ntest('WeakRef', { skip: typeof WeakRef !== 'function' }, function (t) {\r\n    var ref = new WeakRef({ a: 1 });\r\n    var expectedString = 'WeakRef { ? }';\r\n    t.equal(inspect(ref), expectedString, 'new WeakRef({ a: 1 }) should not show contents');\r\n\r\n    t.end();\r\n});\r\n\r\ntest('FinalizationRegistry', { skip: typeof FinalizationRegistry !== 'function' }, function (t) {\r\n    var registry = new FinalizationRegistry(function () {});\r\n    var expectedString = 'FinalizationRegistry [FinalizationRegistry] {}';\r\n    t.equal(inspect(registry), expectedString, 'new FinalizationRegistry(function () {}) should work normallys');\r\n\r\n    t.end();\r\n});\r\n\r\ntest('Strings', function (t) {\r\n    var str = 'abc';\r\n\r\n    t.equal(inspect(str), \"'\" + str + \"'\", 'primitive string shows as such');\r\n    t.equal(inspect(str, { quoteStyle: 'single' }), \"'\" + str + \"'\", 'primitive string shows as such, single quoted');\r\n    t.equal(inspect(str, { quoteStyle: 'double' }), '\"' + str + '\"', 'primitive string shows as such, double quoted');\r\n    t.equal(inspect(Object(str)), 'Object(' + inspect(str) + ')', 'String object shows as such');\r\n    t.equal(inspect(Object(str), { quoteStyle: 'single' }), 'Object(' + inspect(str, { quoteStyle: 'single' }) + ')', 'String object shows as such, single quoted');\r\n    t.equal(inspect(Object(str), { quoteStyle: 'double' }), 'Object(' + inspect(str, { quoteStyle: 'double' }) + ')', 'String object shows as such, double quoted');\r\n\r\n    t.end();\r\n});\r\n\r\ntest('Numbers', function (t) {\r\n    var num = 42;\r\n\r\n    t.equal(inspect(num), String(num), 'primitive number shows as such');\r\n    t.equal(inspect(Object(num)), 'Object(' + inspect(num) + ')', 'Number object shows as such');\r\n\r\n    t.end();\r\n});\r\n\r\ntest('Booleans', function (t) {\r\n    t.equal(inspect(true), String(true), 'primitive true shows as such');\r\n    t.equal(inspect(Object(true)), 'Object(' + inspect(true) + ')', 'Boolean object true shows as such');\r\n\r\n    t.equal(inspect(false), String(false), 'primitive false shows as such');\r\n    t.equal(inspect(Object(false)), 'Object(' + inspect(false) + ')', 'Boolean false object shows as such');\r\n\r\n    t.end();\r\n});\r\n\r\ntest('Date', function (t) {\r\n    var now = new Date();\r\n    t.equal(inspect(now), String(now), 'Date shows properly');\r\n    t.equal(inspect(new Date(NaN)), 'Invalid Date', 'Invalid Date shows properly');\r\n\r\n    t.end();\r\n});\r\n\r\ntest('RegExps', function (t) {\r\n    t.equal(inspect(/a/g), '/a/g', 'regex shows properly');\r\n    t.equal(inspect(new RegExp('abc', 'i')), '/abc/i', 'new RegExp shows properly');\r\n\r\n    var match = 'abc abc'.match(/[ab]+/);\r\n    delete match.groups; // for node < 10\r\n    t.equal(inspect(match), '[ \\'ab\\', index: 0, input: \\'abc abc\\' ]', 'RegExp match object shows properly');\r\n\r\n    t.end();\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/object-inspect/test/values.js b/node_modules/object-inspect/test/values.js
--- a/node_modules/object-inspect/test/values.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/object-inspect/test/values.js	(date 1753913035418)
@@ -5,6 +5,8 @@
 var mockProperty = require('mock-property');
 var hasSymbols = require('has-symbols/shams')();
 var hasToStringTag = require('has-tostringtag/shams')();
+var forEach = require('for-each');
+var semver = require('semver');
 
 test('values', function (t) {
     t.plan(1);
@@ -209,3 +211,51 @@
 
     t.end();
 });
+
+test('Proxies', { skip: typeof Proxy !== 'function' || !hasToStringTag }, function (t) {
+    var target = { proxy: true };
+    var fake = new Proxy(target, { has: function () { return false; } });
+
+    // needed to work around a weird difference in node v6.0 - v6.4 where non-present properties are not logged
+    var isNode60 = semver.satisfies(process.version, '6.0 - 6.4');
+
+    forEach([
+        'Boolean',
+        'Number',
+        'String',
+        'Symbol',
+        'Date'
+    ], function (tag) {
+        target[Symbol.toStringTag] = tag;
+
+        t.equal(
+            inspect(fake),
+            '{ ' + (isNode60 ? '' : 'proxy: true, ') + '[Symbol(Symbol.toStringTag)]: \'' + tag + '\' }',
+            'Proxy for + ' + tag + ' shows as the target, which has no slots'
+        );
+    });
+
+    t.end();
+});
+
+test('fakers', { skip: !hasToStringTag }, function (t) {
+    var target = { proxy: false };
+
+    forEach([
+        'Boolean',
+        'Number',
+        'String',
+        'Symbol',
+        'Date'
+    ], function (tag) {
+        target[Symbol.toStringTag] = tag;
+
+        t.equal(
+            inspect(target),
+            '{ proxy: false, [Symbol(Symbol.toStringTag)]: \'' + tag + '\' }',
+            'Object pretending to be ' + tag + ' does not trick us'
+        );
+    });
+
+    t.end();
+});
Index: node_modules/ts-gems/lib/dto.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { IfNoDeepValue } from './helpers.js';\r\nimport { DeepNullish } from './nullish.js';\r\nimport { DeepPartial } from './partial.js';\r\nimport { IfNever } from './type-check.js';\r\n\r\n/**\r\n * Returns given type as a Data Transfer Object (DTO) interface, Removes symbol keys and function properties.\r\n * @template T - The type of the data being transferred.\r\n */\r\nexport type DTO<T> = {\r\n  [K in keyof T as IfNever<\r\n    Exclude<T[K], undefined | Function>,\r\n    never,\r\n    K\r\n  >]: Exclude<T[K], undefined | null> extends (infer U)[] // Deep process arrays\r\n    ? DTO<U>[]\r\n    : // Do not deep process No-Deep values\r\n      IfNoDeepValue<Exclude<T[K], undefined | null>> extends true\r\n      ? Exclude<T[K], undefined | null>\r\n      : // Deep process objects\r\n        DTO<Exclude<T[K], undefined | null>>;\r\n};\r\n\r\nexport type PartialDTO<T> = DeepPartial<DTO<T>>;\r\nexport type PatchDTO<T> = DeepNullish<DTO<T>>;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/ts-gems/lib/dto.d.ts b/node_modules/ts-gems/lib/dto.d.ts
--- a/node_modules/ts-gems/lib/dto.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/ts-gems/lib/dto.d.ts	(date 1753913035515)
@@ -1,6 +1,6 @@
 import { IfNoDeepValue } from './helpers.js';
-import { DeepNullish } from './nullish.js';
-import { DeepPartial } from './partial.js';
+import { DeeperNullish } from './nullish.js';
+import { DeeperPartial } from './partial.js';
 import { IfNever } from './type-check.js';
 
 /**
@@ -9,17 +9,17 @@
  */
 export type DTO<T> = {
   [K in keyof T as IfNever<
-    Exclude<T[K], undefined | Function>,
+    Exclude<NonNullable<T[K]>, Function>,
     never,
     K
-  >]: Exclude<T[K], undefined | null> extends (infer U)[] // Deep process arrays
+  >]: NonNullable<T[K]> extends (infer U)[] // Deep process arrays
     ? DTO<U>[]
     : // Do not deep process No-Deep values
-      IfNoDeepValue<Exclude<T[K], undefined | null>> extends true
-      ? Exclude<T[K], undefined | null>
+      IfNoDeepValue<NonNullable<T[K]>> extends true
+      ? NonNullable<T[K]>
       : // Deep process objects
-        DTO<Exclude<T[K], undefined | null>>;
+        DTO<NonNullable<T[K]>>;
 };
 
-export type PartialDTO<T> = DeepPartial<DTO<T>>;
-export type PatchDTO<T> = DeepNullish<DTO<T>>;
+export type PartialDTO<T> = DeeperPartial<DTO<T>>;
+export type PatchDTO<T> = DeeperNullish<DTO<T>>;
Index: node_modules/ts-gems/lib/type-check.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Primitive, Type } from './types';\r\n\r\ntype NonObj = Primitive | Function;\r\n\r\n/**\r\n * Returns Y if typeof T is \"any\", N otherwise\r\n */\r\nexport type IfAny<T, Y = true, N = false> = 0 extends 1 & T ? Y : N;\r\n\r\n/**\r\n * Returns \"Y\" if \"T\" is \"never\", \"N\" otherwise\r\n */\r\nexport type IfNever<T, Y = true, N = false> = [T] extends [never] ? Y : N;\r\n\r\n/**\r\n * Returns Y if T is undefined, N otherwise\r\n */\r\nexport type IfUndefined<T, Y = true, N = false> = IfEquals<T, undefined, Y, N>;\r\n\r\n/**\r\n * Returns \"Y\" if \"T\" is \"never\", \"N\" otherwise\r\n */\r\nexport type IfSymbol<T, Y = true, N = false> = IfEquals<T, symbol, Y, N>;\r\n\r\n/**\r\n * Returns Y if typeof T is \"unknown\", N otherwise\r\n */\r\nexport type IfUnknown<T, Y = true, N = false> = IfEquals<T, unknown, Y, N>;\r\n\r\n/**\r\n * Returns Y if typeof T is null, N otherwise\r\n */\r\nexport type IfNull<T, Y = true, N = false> = IfEquals<T, null, Y, N>;\r\n\r\n/**\r\n * Returns Y if typeof T is null, N otherwise\r\n */\r\nexport type IfNullish<T, Y = true, N = false> =\r\n  IfNever<T> extends true\r\n    ? N\r\n    : T extends null\r\n      ? Y\r\n      : T extends undefined\r\n        ? Y\r\n        : N;\r\n\r\n/**\r\n * Returns Y if typeof T is a tuple, N otherwise\r\n */\r\nexport type IfTuple<T, Y = true, N = false> =\r\n  IfEquals<T, [any]> extends true\r\n    ? T extends [any]\r\n      ? number extends T['length']\r\n        ? N\r\n        : Y\r\n      : N\r\n    : N;\r\nexport type IfTupleOrAny<T, Y = true, N = false> =\r\n  IfAny<T> extends true ? Y : IfTuple<T, Y, N>;\r\n\r\n/**\r\n * Returns Y if typeof T is \"Primitive\", N otherwise\r\n */\r\nexport type IfPrimitive<T, Y = true, N = false> =\r\n  IfNever<T> extends true\r\n    ? N\r\n    : IfNull<T> extends true\r\n      ? Y\r\n      : IfUndefined<T> extends true\r\n        ? Y\r\n        : IfClass<T> extends true\r\n          ? N\r\n          : IfFunction<T> extends true\r\n            ? N\r\n            : T extends Primitive\r\n              ? Y\r\n              : N;\r\n\r\nexport type IfPrimitiveOrAny<T, Y = true, N = false> =\r\n  IfAny<T> extends true ? Y : IfPrimitive<T, Y, N>;\r\n\r\n/**\r\n * Returns Y if typeof T is an empty object, N otherwise\r\n */\r\nexport type IfEmptyObject<T, Y = true, N = false> = IfEquals<T, {}, Y, N>;\r\n\r\n/**\r\n * Returns Y if typeof T is an object, N otherwise\r\n */\r\nexport type IfObject<T, Y = true, N = false> =\r\n  IfNever<T> extends true\r\n    ? N\r\n    : T extends object\r\n      ? T extends NonObj | any[]\r\n        ? N\r\n        : Y\r\n      : N;\r\n\r\nexport type IfObjectOrAny<T, Y = true, N = false> =\r\n  IfAny<T> extends true ? Y : IfObject<T, Y, N>;\r\n\r\n/**\r\n * Returns Y if typeof T is an empty object, N otherwise\r\n */\r\nexport type IfFunction<T, Y = true, N = false> =\r\n  IfNever<T> extends true ? N : T extends Type ? N : T extends Function ? Y : N;\r\n\r\nexport type IfFunctionOrAny<T, Y = true, N = false> =\r\n  IfAny<T> extends true ? Y : IfFunction<T, Y, N>;\r\n\r\n/**\r\n * Returns Y if typeof T is a constructor type, N otherwise\r\n */\r\nexport type IfClass<T, Y = true, N = false> =\r\n  IfNever<T> extends true\r\n    ? N\r\n    : IfUndefined<T> extends true\r\n      ? N\r\n      : T extends Type\r\n        ? Y\r\n        : N;\r\n\r\nexport type IfClassOrAny<T, Y = true, N = false> =\r\n  IfAny<T> extends true ? Y : IfClass<T, Y, N>;\r\n\r\n/**\r\n * Returns \"Y\" if \"T1\" is exactly same with \"T2\", \"N\" otherwise\r\n */\r\nexport type IfEquals<T1, T2, Y = true, N = false> =\r\n  | IfObject<T1>\r\n  | IfObject<T2> extends true\r\n  ? (<G>() => G extends EqualsWrapped<T1> ? 1 : 2) extends <\r\n      G,\r\n    >() => G extends EqualsWrapped<T2> ? 1 : 2\r\n    ? Y\r\n    : N\r\n  : (<G>() => G extends T1 ? 1 : 2) extends <G>() => G extends T2 ? 1 : 2\r\n    ? Y\r\n    : N;\r\n\r\ntype EqualsWrapped<T> = T extends infer R & {}\r\n  ? { [P in keyof R]: R[P] }\r\n  : never;\r\n\r\n/**\r\n * Returns \"Y\" if type \"T\" matches \"U\", \"N\" otherwise\r\n */\r\nexport type IfCompatible<T1, T2, Y = true, N = false> =\r\n  IfUndefined<T1> extends true\r\n    ? IfEquals<T1, T2, Y, N>\r\n    : IfUndefined<T2> extends true\r\n      ? N\r\n      : IfNever<T1> extends true\r\n        ? IfEquals<T1, T2, Y, N>\r\n        : IfNever<T2> extends true\r\n          ? N\r\n          : IfNull<T1> extends true\r\n            ? IfEquals<T1, T2, Y, N>\r\n            : IfNull<T2> extends true\r\n              ? N\r\n              : IfUnknown<T1> extends true\r\n                ? Y\r\n                : IfUnknown<T2> extends true\r\n                  ? Y\r\n                  : IfAny<T1> extends true\r\n                    ? Y\r\n                    : IfAny<T2> extends true\r\n                      ? Y\r\n                      : IfEmptyObject<T1> extends true\r\n                        ? IfObject<T2, Y, N>\r\n                        : IfEmptyObject<T2> extends true\r\n                          ? IfObject<T1, Y, N>\r\n                          : IfFunction<T1> extends true\r\n                            ? IfCompatibleFunction<T1, T2, Y, N>\r\n                            : IfObject<T1> extends true\r\n                              ? [T1] extends [T2]\r\n                                ? Y\r\n                                : N\r\n                              : [T1] extends [T2]\r\n                                ? Y\r\n                                : IfPrimitive<T2> extends true\r\n                                  ? [T2] extends [T1]\r\n                                    ? Y\r\n                                    : N\r\n                                  : N;\r\n\r\ntype IfCompatibleFunction<T1, T2, Y = true, N = false> =\r\n  IfFunction<T1> extends false\r\n    ? N\r\n    : IfFunction<T2> extends false\r\n      ? N\r\n      : T1 extends T2\r\n        ? Y\r\n        : N;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/ts-gems/lib/type-check.d.ts b/node_modules/ts-gems/lib/type-check.d.ts
--- a/node_modules/ts-gems/lib/type-check.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/ts-gems/lib/type-check.d.ts	(date 1753913035530)
@@ -1,4 +1,4 @@
-import { Primitive, Type } from './types';
+import { Primitive, Type } from './types.js';
 
 type NonObj = Primitive | Function;
 
Index: node_modules/ts-gems/lib/index.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// noinspection JSUnusedGlobalSymbols\r\n\r\nimport { DeeperMutable, DeepMutable, Mutable } from './mutable';\r\nimport { DeeperPartial, DeepPartial } from './partial';\r\nimport { DeeperReadonly, DeepReadonly } from './readonly';\r\nimport { DeeperRequired, DeepRequired } from './required';\r\n\r\nexport * from './combine';\r\nexport * from './dto';\r\nexport * from './helpers';\r\nexport * from './logical';\r\nexport * from './mutable';\r\nexport * from './nullish';\r\nexport * from './omit';\r\nexport * from './omit-never';\r\nexport * from './opaque';\r\nexport * from './partial';\r\nexport * from './pick';\r\nexport * from './readonly';\r\nexport * from './required';\r\nexport * from './type-check';\r\nexport * from './types';\r\n\r\ndeclare function asMutable<T>(x: T): Mutable<T>;\r\n\r\ndeclare function asDeepMutable<T>(x: T): DeepMutable<T>;\r\n\r\ndeclare function asDeeperMutable<T>(x: T): DeeperMutable<T>;\r\n\r\ndeclare function asReadonly<T>(x: T): Readonly<T>;\r\n\r\ndeclare function asDeepReadonly<T>(x: T): DeepReadonly<T>;\r\n\r\ndeclare function asDeeperReadonly<T>(x: T): DeeperReadonly<T>;\r\n\r\ndeclare function asPartial<T>(x: T): Partial<T>;\r\n\r\ndeclare function asDeepPartial<T>(x: T): DeepPartial<T>;\r\n\r\ndeclare function asDeeperPartial<T>(x: T): DeeperPartial<T>;\r\n\r\ndeclare function asRequired<T>(x: T): Required<T>;\r\n\r\ndeclare function asDeepRequired<T>(x: T): DeepRequired<T>;\r\n\r\ndeclare function asDeeperRequired<T>(x: T): DeeperRequired<T>;\r\n\r\nexport {\r\n  asMutable,\r\n  asDeepMutable,\r\n  asDeeperMutable,\r\n  asReadonly,\r\n  asDeepReadonly,\r\n  asDeeperReadonly,\r\n  asPartial,\r\n  asDeepPartial,\r\n  asDeeperPartial,\r\n  asRequired,\r\n  asDeepRequired,\r\n  asDeeperRequired,\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/ts-gems/lib/index.d.ts b/node_modules/ts-gems/lib/index.d.ts
--- a/node_modules/ts-gems/lib/index.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/ts-gems/lib/index.d.ts	(date 1753913035517)
@@ -1,25 +1,27 @@
 // noinspection JSUnusedGlobalSymbols
 
-import { DeeperMutable, DeepMutable, Mutable } from './mutable';
-import { DeeperPartial, DeepPartial } from './partial';
-import { DeeperReadonly, DeepReadonly } from './readonly';
-import { DeeperRequired, DeepRequired } from './required';
+import type { DeeperMutable, DeepMutable, Mutable } from './mutable';
+import type { DeeperPartial, DeepPartial } from './partial';
+import type { DeeperReadonly, DeepReadonly } from './readonly';
+import type { DeeperRequired, DeepRequired } from './required';
 
-export * from './combine';
-export * from './dto';
-export * from './helpers';
-export * from './logical';
-export * from './mutable';
-export * from './nullish';
-export * from './omit';
-export * from './omit-never';
-export * from './opaque';
-export * from './partial';
-export * from './pick';
-export * from './readonly';
-export * from './required';
-export * from './type-check';
-export * from './types';
+export type * from './combine';
+export type * from './dto';
+export type * from './helpers';
+export type * from './logical';
+export type * from './mutable';
+export type * from './non-nullable';
+export type * from './nullish';
+export type * from './omit';
+export type * from './omit-never';
+export type * from './omit-undefined';
+export type * from './opaque';
+export type * from './partial';
+export type * from './pick';
+export type * from './readonly';
+export type * from './required';
+export type * from './type-check';
+export type * from './types';
 
 declare function asMutable<T>(x: T): Mutable<T>;
 
@@ -46,16 +48,16 @@
 declare function asDeeperRequired<T>(x: T): DeeperRequired<T>;
 
 export {
-  asMutable,
-  asDeepMutable,
   asDeeperMutable,
-  asReadonly,
-  asDeepReadonly,
+  asDeeperPartial,
   asDeeperReadonly,
-  asPartial,
+  asDeeperRequired,
+  asDeepMutable,
   asDeepPartial,
-  asDeeperPartial,
-  asRequired,
+  asDeepReadonly,
   asDeepRequired,
-  asDeeperRequired,
+  asMutable,
+  asPartial,
+  asReadonly,
+  asRequired,
 };
Index: node_modules/ts-gems/lib/nullish.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { IfNoDeepValue } from './helpers';\r\nimport { IfNever } from './type-check';\r\n\r\n/**\r\n * Make all properties in T nullish\r\n */\r\nexport type NullishObject<T = null> = {\r\n  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]?: T[K] | null;\r\n};\r\n\r\n/**\r\n * Make all properties in T nullish deeply\r\n */\r\nexport type DeepNullish<T> = {\r\n  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]?: IfNoDeepValue< // Do not deep process No-Deep values\r\n    Exclude<T[K], undefined>\r\n  > extends true\r\n    ? T[K] | null\r\n    : // Deep process objects\r\n      DeepNullish<Exclude<T[K], undefined>> | null;\r\n};\r\n\r\n/**\r\n * Make all properties in T nullish deeply including arrays\r\n */\r\nexport type DeeperNullish<T> = {\r\n  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]?: Exclude< // Deep process arrays\r\n    T[K],\r\n    undefined\r\n  > extends (infer U)[]\r\n    ? DeeperNullish<U>[] | null\r\n    : // Do not deep process No-Deep values\r\n      IfNoDeepValue<Exclude<T[K], undefined>> extends true\r\n      ? T[K] | null\r\n      : // Deep process objects\r\n        DeeperNullish<Exclude<T[K], undefined>> | null;\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/ts-gems/lib/nullish.d.ts b/node_modules/ts-gems/lib/nullish.d.ts
--- a/node_modules/ts-gems/lib/nullish.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/ts-gems/lib/nullish.d.ts	(date 1753913035522)
@@ -1,5 +1,5 @@
-import { IfNoDeepValue } from './helpers';
-import { IfNever } from './type-check';
+import { IfNoDeepValue } from './helpers.js';
+import { IfNever } from './type-check.js';
 
 /**
  * Make all properties in T nullish
@@ -12,26 +12,27 @@
  * Make all properties in T nullish deeply
  */
 export type DeepNullish<T> = {
-  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]?: IfNoDeepValue< // Do not deep process No-Deep values
+  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]?: IfNoDeepValue<
+    // Do not deep process No-Deep values
     Exclude<T[K], undefined>
   > extends true
     ? T[K] | null
     : // Deep process objects
-      DeepNullish<Exclude<T[K], undefined>> | null;
+      DeepNullish<NonNullable<T[K]>> | null;
 };
 
 /**
  * Make all properties in T nullish deeply including arrays
  */
 export type DeeperNullish<T> = {
-  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]?: Exclude< // Deep process arrays
-    T[K],
-    undefined
+  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]?: NonNullable<
+    // Deep process arrays
+    T[K]
   > extends (infer U)[]
     ? DeeperNullish<U>[] | null
     : // Do not deep process No-Deep values
-      IfNoDeepValue<Exclude<T[K], undefined>> extends true
+      IfNoDeepValue<NonNullable<T[K]>> extends true
       ? T[K] | null
       : // Deep process objects
-        DeeperNullish<Exclude<T[K], undefined>> | null;
+        DeeperNullish<NonNullable<T[K]>> | null;
 };
Index: node_modules/ts-gems/lib/mutable.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { IfNoDeepValue } from './helpers';\r\nimport {\r\n  DeeperOmitReadonly,\r\n  DeeperPickReadonly,\r\n  DeepOmitReadonly,\r\n  DeepPickReadonly,\r\n  OmitReadonly,\r\n  PickReadonly,\r\n} from './readonly';\r\nimport { IfNever } from './type-check';\r\n\r\n/**\r\n * Make all properties in T mutable\r\n */\r\nexport type Mutable<T> = {\r\n  -readonly [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]: T[K];\r\n};\r\n\r\n/**\r\n * Marks given keys as mutable\r\n */\r\nexport type MutableSome<T, K extends keyof T> = Mutable<Pick<T, K>> &\r\n  Omit<T, K>;\r\n\r\n/**\r\n * Make all properties in T mutable deeply\r\n */\r\nexport type DeepMutable<T> = {\r\n  -readonly [K in keyof T as IfNever<\r\n    Exclude<T[K], undefined>,\r\n    never,\r\n    K\r\n  >]: IfNoDeepValue<Exclude<T[K], undefined>> extends true // Do not deep process No-Deep values\r\n    ? T[K]\r\n    : // Deep process objects\r\n      DeepMutable<Exclude<T[K], undefined>>;\r\n};\r\n\r\n/**\r\n * Make all properties in T mutable deeply\r\n */\r\nexport type DeeperMutable<T> = {\r\n  -readonly [K in keyof T as IfNever<\r\n    Exclude<T[K], undefined>,\r\n    never,\r\n    K\r\n  >]: Exclude<T[K], undefined> extends (infer U)[] // Deep process arrays\r\n    ? DeeperMutable<U>[]\r\n    : // Do not deep process No-Deep values\r\n      IfNoDeepValue<Exclude<T[K], undefined>> extends true\r\n      ? T[K]\r\n      : // Deep process objects\r\n        DeeperMutable<Exclude<T[K], undefined>>;\r\n};\r\n\r\n/**\r\n * Returns mutable keys of an object\r\n */\r\nexport type MutableKeys<T> = keyof OmitReadonly<T>;\r\n\r\n/**\r\n * Pick all mutable properties in T\r\n */\r\nexport type PickMutable<T> = OmitReadonly<T>;\r\n\r\n/**\r\n * Omit all mutable properties in T\r\n */\r\nexport type OmitMutable<T> = PickReadonly<T>;\r\n\r\n/**\r\n * Pick all mutable properties in T deeply\r\n */\r\nexport type DeepPickMutable<T> = DeepOmitReadonly<T>;\r\n\r\n/**\r\n * Pick all mutable properties in T deeply\r\n */\r\nexport type DeepOmitMutable<T> = DeepPickReadonly<T>;\r\n\r\n/**\r\n * Pick all mutable properties in T deeply including arrays\r\n */\r\nexport type DeeperPickMutable<T> = DeeperOmitReadonly<T>;\r\n\r\n/**\r\n * Pick all mutable properties in T deeply including arrays\r\n */\r\nexport type DeeperOmitMutable<T> = DeeperPickReadonly<T>;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/ts-gems/lib/mutable.d.ts b/node_modules/ts-gems/lib/mutable.d.ts
--- a/node_modules/ts-gems/lib/mutable.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/ts-gems/lib/mutable.d.ts	(date 1753913035519)
@@ -1,4 +1,4 @@
-import { IfNoDeepValue } from './helpers';
+import { IfNoDeepValue } from './helpers.js';
 import {
   DeeperOmitReadonly,
   DeeperPickReadonly,
@@ -6,8 +6,8 @@
   DeepPickReadonly,
   OmitReadonly,
   PickReadonly,
-} from './readonly';
-import { IfNever } from './type-check';
+} from './readonly.js';
+import { IfNever } from './type-check.js';
 
 /**
  * Make all properties in T mutable
@@ -33,7 +33,7 @@
   >]: IfNoDeepValue<Exclude<T[K], undefined>> extends true // Do not deep process No-Deep values
     ? T[K]
     : // Deep process objects
-      DeepMutable<Exclude<T[K], undefined>>;
+      DeepMutable<NonNullable<T[K]>>;
 };
 
 /**
@@ -44,13 +44,13 @@
     Exclude<T[K], undefined>,
     never,
     K
-  >]: Exclude<T[K], undefined> extends (infer U)[] // Deep process arrays
+  >]: NonNullable<T[K]> extends (infer U)[] // Deep process arrays
     ? DeeperMutable<U>[]
     : // Do not deep process No-Deep values
-      IfNoDeepValue<Exclude<T[K], undefined>> extends true
+      IfNoDeepValue<NonNullable<T[K]>> extends true
       ? T[K]
       : // Deep process objects
-        DeeperMutable<Exclude<T[K], undefined>>;
+        DeeperMutable<NonNullable<T[K]>>;
 };
 
 /**
Index: node_modules/ts-gems/lib/helpers.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { IfAny, IfClass, IfTuple } from './type-check';\r\nimport { Builtin } from './types';\r\n\r\n/**\r\n * Returns true if T is excluded from deep operations\r\n */\r\nexport type IfNoDeepValue<T> = T extends Builtin\r\n  ? true\r\n  : IfAny<T> extends true\r\n    ? T\r\n    : IfTuple<T> extends true\r\n      ? true\r\n      : T extends Function\r\n        ? true\r\n        : IfClass<T> extends true\r\n          ? true\r\n          : T extends Map<any, any>\r\n            ? true\r\n            : T extends ReadonlyMap<any, any>\r\n              ? true\r\n              : T extends WeakMap<any, any>\r\n                ? true\r\n                : T extends Set<any>\r\n                  ? true\r\n                  : T extends ReadonlySet<any>\r\n                    ? true\r\n                    : T extends WeakSet<any>\r\n                      ? true\r\n                      : T extends any[]\r\n                        ? true\r\n                        : false;\r\n\r\n/**\r\n * ValuesOf\r\n * @desc Returns the union type of all the values in a type\r\n */\r\nexport type ValuesOf<T> = T[keyof T];\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/ts-gems/lib/helpers.d.ts b/node_modules/ts-gems/lib/helpers.d.ts
--- a/node_modules/ts-gems/lib/helpers.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/ts-gems/lib/helpers.d.ts	(date 1753913035516)
@@ -1,5 +1,5 @@
-import { IfAny, IfClass, IfTuple } from './type-check';
-import { Builtin } from './types';
+import { IfAny, IfClass, IfTuple } from './type-check.js';
+import { Builtin } from './types.js';
 
 /**
  * Returns true if T is excluded from deep operations
Index: node_modules/ts-gems/lib/pick.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Or } from './logical.js';\r\nimport { OmitFunctions } from './omit';\r\nimport {\r\n  IfAny,\r\n  IfEmptyObject,\r\n  IfFunction,\r\n  IfNever,\r\n  IfUnknown,\r\n} from './type-check';\r\n\r\n/**\r\n * From T, pick a set of properties whose keys are in the union K,\r\n * while preserving strict type checking.\r\n */\r\nexport type StrictPick<T, X extends keyof T> = {\r\n  [K in keyof T as Or<\r\n    // Omit never keys\r\n    IfNever<Exclude<T[K], undefined>>,\r\n    // Omit X\r\n    K extends X ? false : true\r\n  > extends true\r\n    ? never\r\n    : K]: T[K];\r\n};\r\n\r\n/**\r\n * Pick all function properties in T\r\n */\r\nexport type PickFunctions<T> = {\r\n  [K in keyof T as Or<\r\n    // Omit never keys\r\n    IfNever<Exclude<T[K], undefined>>,\r\n    // Omit non functions\r\n    IfFunction<Exclude<T[K], undefined>, false, true>\r\n  > extends true\r\n    ? never\r\n    : K]: T[K];\r\n};\r\n\r\n/**\r\n * Pick all function properties in T\r\n */\r\nexport type PickTypes<T, X> = {\r\n  [K in keyof T as Or<\r\n    // Omit never keys\r\n    IfNever<Exclude<T[K], undefined>>,\r\n    // Omit types which not exists in X\r\n    T[K] extends X ? false : X extends T[K] ? false : true\r\n  > extends true\r\n    ? never\r\n    : K]: T[K];\r\n};\r\n\r\n/**\r\n * Pick all function properties in T\r\n */\r\nexport type StrictPickTypes<T, X> = {\r\n  [K in keyof T as Or<\r\n    // Omit never keys\r\n    IfNever<Exclude<T[K], undefined>>,\r\n    // Omit unknown\r\n    IfUnknown<T[K]>,\r\n    // Omit any\r\n    IfAny<T[K]>,\r\n    // Omit {}\r\n    IfEmptyObject<T[K]>,\r\n    // Omit types which not exists in X\r\n    T[K] extends X ? false : X extends T[K] ? false : true\r\n  > extends true\r\n    ? never\r\n    : K]: T[K];\r\n};\r\n\r\n/**\r\n * @desc Returns Function keys of an object\r\n */\r\nexport type FunctionKeys<T> = keyof PickFunctions<T>;\r\n\r\n/**\r\n * @desc Returns non function keys of an object\r\n */\r\nexport type NonFunctionKeys<T> = keyof OmitFunctions<T>;\r\n\r\n/**\r\n * @desc Returns keys that match given type\r\n */\r\nexport type KeysOfTypes<T, X> = keyof PickTypes<T, X>;\r\n\r\n/**\r\n * @desc Returns keys that equals given type\r\n */\r\nexport type StrictKeysOfTypes<T, X> = keyof StrictPickTypes<T, X>;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/ts-gems/lib/pick.d.ts b/node_modules/ts-gems/lib/pick.d.ts
--- a/node_modules/ts-gems/lib/pick.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/ts-gems/lib/pick.d.ts	(date 1753913035527)
@@ -1,12 +1,12 @@
 import { Or } from './logical.js';
-import { OmitFunctions } from './omit';
+import { OmitFunctions } from './omit.js';
 import {
   IfAny,
   IfEmptyObject,
   IfFunction,
   IfNever,
   IfUnknown,
-} from './type-check';
+} from './type-check.js';
 
 /**
  * From T, pick a set of properties whose keys are in the union K,
@@ -31,7 +31,7 @@
     // Omit never keys
     IfNever<Exclude<T[K], undefined>>,
     // Omit non functions
-    IfFunction<Exclude<T[K], undefined>, false, true>
+    IfFunction<NonNullable<T[K]>, false, true>
   > extends true
     ? never
     : K]: T[K];
Index: node_modules/path-to-regexp/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"path-to-regexp\",\r\n  \"description\": \"Express style path to RegExp utility\",\r\n  \"version\": \"0.1.7\",\r\n  \"files\": [\r\n    \"index.js\",\r\n    \"LICENSE\"\r\n  ],\r\n  \"scripts\": {\r\n    \"test\": \"istanbul cover _mocha -- -R spec\"\r\n  },\r\n  \"keywords\": [\r\n    \"express\",\r\n    \"regexp\"\r\n  ],\r\n  \"component\": {\r\n    \"scripts\": {\r\n      \"path-to-regexp\": \"index.js\"\r\n    }\r\n  },\r\n  \"license\": \"MIT\",\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/component/path-to-regexp.git\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"mocha\": \"^1.17.1\",\r\n    \"istanbul\": \"^0.2.6\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/path-to-regexp/package.json b/node_modules/path-to-regexp/package.json
--- a/node_modules/path-to-regexp/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/path-to-regexp/package.json	(date 1753913035375)
@@ -1,7 +1,7 @@
 {
   "name": "path-to-regexp",
   "description": "Express style path to RegExp utility",
-  "version": "0.1.7",
+  "version": "0.1.12",
   "files": [
     "index.js",
     "LICENSE"
@@ -21,7 +21,7 @@
   "license": "MIT",
   "repository": {
     "type": "git",
-    "url": "https://github.com/component/path-to-regexp.git"
+    "url": "https://github.com/pillarjs/path-to-regexp.git"
   },
   "devDependencies": {
     "mocha": "^1.17.1",
Index: node_modules/ts-gems/lib/readonly.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { IfNoDeepValue } from './helpers';\r\nimport { Or } from './logical.js';\r\nimport { IfEquals, IfNever } from './type-check';\r\n\r\n/**\r\n * Marks given keys as readonly\r\n */\r\nexport type ReadonlySome<T, K extends keyof T> = Readonly<Pick<T, K>> &\r\n  Omit<T, K>;\r\n\r\n/**\r\n * Make all properties in T readonly deeply\r\n */\r\nexport type DeepReadonly<T> = {\r\n  readonly [K in keyof T as IfNever<\r\n    Exclude<T[K], undefined>,\r\n    never,\r\n    K\r\n  >]: IfNoDeepValue<Exclude<T[K], undefined>> extends true // Do not deep process No-Deep values\r\n    ? T[K]\r\n    : // Deep process objects\r\n      DeepReadonly<Exclude<T[K], undefined>>;\r\n};\r\n\r\n/**\r\n * Make all properties in T readonly deeply\r\n */\r\nexport type DeeperReadonly<T> = {\r\n  readonly [K in keyof T as IfNever<\r\n    Exclude<T[K], undefined>,\r\n    never,\r\n    K\r\n  >]: Exclude<T[K], undefined> extends (infer U)[] // Deep process arrays\r\n    ? DeeperReadonly<U>[]\r\n    : // Do not deep process No-Deep values\r\n      IfNoDeepValue<Exclude<T[K], undefined>> extends true\r\n      ? T[K]\r\n      : // Deep process objects\r\n        DeeperReadonly<Exclude<T[K], undefined>>;\r\n};\r\n\r\n/**\r\n * Returns readonly keys of an object\r\n */\r\nexport type ReadonlyKeys<T> = keyof PickReadonly<T>;\r\n\r\n/**\r\n * Pick all readonly properties in T\r\n */\r\nexport type PickReadonly<T> = {\r\n  [K in keyof T as Or<\r\n    // Omit never keys\r\n    IfNever<Exclude<T[K], undefined>>,\r\n    // Omit required\r\n    IfEquals<{ [Q in K]: T[K] }, { readonly [Q in K]: T[K] }, false, true>\r\n  > extends true\r\n    ? never\r\n    : K]: T[K];\r\n};\r\n\r\n/**\r\n * Omit all readonly properties in T\r\n */\r\nexport type OmitReadonly<T> = {\r\n  [K in keyof T as Or<\r\n    // Omit never keys\r\n    IfNever<Exclude<T[K], undefined>>,\r\n    // Omit required\r\n    IfEquals<{ [Q in K]: T[K] }, { readonly [Q in K]: T[K] }>\r\n  > extends true\r\n    ? never\r\n    : K]: T[K];\r\n};\r\n\r\n/**\r\n * Pick all readonly properties in T deeply\r\n */\r\nexport type DeepPickReadonly<T> = {\r\n  [K in keyof T as Or<\r\n    // Omit never keys\r\n    IfNever<Exclude<T[K], undefined>>,\r\n    // Omit required\r\n    IfEquals<{ [Q in K]: T[K] }, { readonly [Q in K]: T[K] }, false, true>\r\n  > extends true\r\n    ? never\r\n    : K]: IfNoDeepValue<Exclude<T[K], undefined>> extends true // Do not deep process No-Deep values\r\n    ? T[K]\r\n    : // Deep process objects\r\n      DeepPickReadonly<Exclude<T[K], undefined>>;\r\n};\r\n\r\n/**\r\n * Pick all readonly properties in T deeply\r\n */\r\nexport type DeepOmitReadonly<T> = {\r\n  [K in keyof T as Or<\r\n    // Omit never keys\r\n    IfNever<Exclude<T[K], undefined>>,\r\n    // Omit required\r\n    IfEquals<{ [Q in K]: T[K] }, { readonly [Q in K]: T[K] }>\r\n  > extends true\r\n    ? never\r\n    : K]: IfNoDeepValue<Exclude<T[K], undefined>> extends true // Do not deep process No-Deep values\r\n    ? T[K]\r\n    : // Deep process objects\r\n      DeepOmitReadonly<Exclude<T[K], undefined>>;\r\n};\r\n\r\n/**\r\n * Pick all readonly properties in T deeply including arrays\r\n */\r\nexport type DeeperPickReadonly<T> = {\r\n  [K in keyof T as Or<\r\n    // Omit never keys\r\n    IfNever<Exclude<T[K], undefined>>,\r\n    // Omit required\r\n    IfEquals<{ [Q in K]: T[K] }, { readonly [Q in K]: T[K] }, false, true>\r\n  > extends true\r\n    ? never\r\n    : K]: Exclude<T[K], undefined> extends (infer U)[] // Deep process arrays\r\n    ? DeeperPickReadonly<U>[]\r\n    : // Do not deep process No-Deep values\r\n      IfNoDeepValue<Exclude<T[K], undefined>> extends true\r\n      ? T[K]\r\n      : // Deep process objects\r\n        DeeperPickReadonly<Exclude<T[K], undefined>>;\r\n};\r\n\r\n/**\r\n * Pick all readonly properties in T deeply including arrays\r\n */\r\nexport type DeeperOmitReadonly<T> = {\r\n  [K in keyof T as Or<\r\n    // Omit never keys\r\n    IfNever<Exclude<T[K], undefined>>,\r\n    // Omit required\r\n    IfEquals<{ [Q in K]: T[K] }, { readonly [Q in K]: T[K] }>\r\n  > extends true\r\n    ? never\r\n    : K]: Exclude<T[K], undefined> extends (infer U)[] // Deep process arrays\r\n    ? DeeperOmitReadonly<U>[]\r\n    : // Do not deep process No-Deep values\r\n      IfNoDeepValue<Exclude<T[K], undefined>> extends true\r\n      ? T[K]\r\n      : // Deep process objects\r\n        DeeperOmitReadonly<Exclude<T[K], undefined>>;\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/ts-gems/lib/readonly.d.ts b/node_modules/ts-gems/lib/readonly.d.ts
--- a/node_modules/ts-gems/lib/readonly.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/ts-gems/lib/readonly.d.ts	(date 1753913035528)
@@ -1,6 +1,6 @@
-import { IfNoDeepValue } from './helpers';
+import { IfNoDeepValue } from './helpers.js';
 import { Or } from './logical.js';
-import { IfEquals, IfNever } from './type-check';
+import { IfEquals, IfNever } from './type-check.js';
 
 /**
  * Marks given keys as readonly
@@ -30,7 +30,7 @@
     Exclude<T[K], undefined>,
     never,
     K
-  >]: Exclude<T[K], undefined> extends (infer U)[] // Deep process arrays
+  >]: NonNullable<T[K]> extends (infer U)[] // Deep process arrays
     ? DeeperReadonly<U>[]
     : // Do not deep process No-Deep values
       IfNoDeepValue<Exclude<T[K], undefined>> extends true
@@ -83,10 +83,10 @@
     IfEquals<{ [Q in K]: T[K] }, { readonly [Q in K]: T[K] }, false, true>
   > extends true
     ? never
-    : K]: IfNoDeepValue<Exclude<T[K], undefined>> extends true // Do not deep process No-Deep values
+    : K]: IfNoDeepValue<NonNullable<T[K]>> extends true // Do not deep process No-Deep values
     ? T[K]
     : // Deep process objects
-      DeepPickReadonly<Exclude<T[K], undefined>>;
+      DeepPickReadonly<NonNullable<T[K]>>;
 };
 
 /**
@@ -95,15 +95,15 @@
 export type DeepOmitReadonly<T> = {
   [K in keyof T as Or<
     // Omit never keys
-    IfNever<Exclude<T[K], undefined>>,
+    IfNever<NonNullable<T[K]>>,
     // Omit required
     IfEquals<{ [Q in K]: T[K] }, { readonly [Q in K]: T[K] }>
   > extends true
     ? never
-    : K]: IfNoDeepValue<Exclude<T[K], undefined>> extends true // Do not deep process No-Deep values
+    : K]: IfNoDeepValue<NonNullable<T[K]>> extends true // Do not deep process No-Deep values
     ? T[K]
     : // Deep process objects
-      DeepOmitReadonly<Exclude<T[K], undefined>>;
+      DeepOmitReadonly<NonNullable<T[K]>>;
 };
 
 /**
@@ -117,13 +117,13 @@
     IfEquals<{ [Q in K]: T[K] }, { readonly [Q in K]: T[K] }, false, true>
   > extends true
     ? never
-    : K]: Exclude<T[K], undefined> extends (infer U)[] // Deep process arrays
+    : K]: NonNullable<T[K]> extends (infer U)[] // Deep process arrays
     ? DeeperPickReadonly<U>[]
     : // Do not deep process No-Deep values
-      IfNoDeepValue<Exclude<T[K], undefined>> extends true
+      IfNoDeepValue<NonNullable<T[K]>> extends true
       ? T[K]
       : // Deep process objects
-        DeeperPickReadonly<Exclude<T[K], undefined>>;
+        DeeperPickReadonly<NonNullable<T[K]>>;
 };
 
 /**
@@ -137,11 +137,11 @@
     IfEquals<{ [Q in K]: T[K] }, { readonly [Q in K]: T[K] }>
   > extends true
     ? never
-    : K]: Exclude<T[K], undefined> extends (infer U)[] // Deep process arrays
+    : K]: NonNullable<T[K]> extends (infer U)[] // Deep process arrays
     ? DeeperOmitReadonly<U>[]
     : // Do not deep process No-Deep values
-      IfNoDeepValue<Exclude<T[K], undefined>> extends true
+      IfNoDeepValue<NonNullable<T[K]>> extends true
       ? T[K]
       : // Deep process objects
-        DeeperOmitReadonly<Exclude<T[K], undefined>>;
+        DeeperOmitReadonly<NonNullable<T[K]>>;
 };
Index: node_modules/ts-gems/lib/logical.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { IfNever } from './type-check';\r\n\r\nexport type And<T1, T2, T3 = true, T4 = true, T5 = true, T6 = true> =\r\n  IfNever<Exclude<T1, undefined | null | false>> extends true\r\n    ? false\r\n    : IfNever<Exclude<T2, undefined | null | false>> extends true\r\n      ? false\r\n      : IfNever<Exclude<T3, undefined | null | false>> extends true\r\n        ? false\r\n        : IfNever<Exclude<T4, undefined | null | false>> extends true\r\n          ? false\r\n          : IfNever<Exclude<T5, undefined | null | false>> extends true\r\n            ? false\r\n            : IfNever<Exclude<T6, undefined | null | false>> extends true\r\n              ? false\r\n              : true;\r\n\r\nexport type Or<T1, T2, T3 = false, T4 = false, T5 = false, T6 = false> =\r\n  IfNever<Exclude<T1, undefined | null | false>> extends false\r\n    ? true\r\n    : IfNever<Exclude<T2, undefined | null | false>> extends false\r\n      ? true\r\n      : IfNever<Exclude<T3, undefined | null | false>> extends false\r\n        ? true\r\n        : IfNever<Exclude<T4, undefined | null | false>> extends false\r\n          ? true\r\n          : IfNever<Exclude<T5, undefined | null | false>> extends false\r\n            ? true\r\n            : IfNever<Exclude<T6, undefined | null | false>> extends false\r\n              ? true\r\n              : false;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/ts-gems/lib/logical.d.ts b/node_modules/ts-gems/lib/logical.d.ts
--- a/node_modules/ts-gems/lib/logical.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/ts-gems/lib/logical.d.ts	(date 1753913035518)
@@ -1,4 +1,4 @@
-import { IfNever } from './type-check';
+import { IfNever } from './type-check.js';
 
 export type And<T1, T2, T3 = true, T4 = true, T5 = true, T6 = true> =
   IfNever<Exclude<T1, undefined | null | false>> extends true
Index: node_modules/path-to-regexp/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * Expose `pathtoRegexp`.\r\n */\r\n\r\nmodule.exports = pathtoRegexp;\r\n\r\n/**\r\n * Match matching groups in a regular expression.\r\n */\r\nvar MATCHING_GROUP_REGEXP = /\\((?!\\?)/g;\r\n\r\n/**\r\n * Normalize the given path string,\r\n * returning a regular expression.\r\n *\r\n * An empty array should be passed,\r\n * which will contain the placeholder\r\n * key names. For example \"/user/:id\" will\r\n * then contain [\"id\"].\r\n *\r\n * @param  {String|RegExp|Array} path\r\n * @param  {Array} keys\r\n * @param  {Object} options\r\n * @return {RegExp}\r\n * @api private\r\n */\r\n\r\nfunction pathtoRegexp(path, keys, options) {\r\n  options = options || {};\r\n  keys = keys || [];\r\n  var strict = options.strict;\r\n  var end = options.end !== false;\r\n  var flags = options.sensitive ? '' : 'i';\r\n  var extraOffset = 0;\r\n  var keysOffset = keys.length;\r\n  var i = 0;\r\n  var name = 0;\r\n  var m;\r\n\r\n  if (path instanceof RegExp) {\r\n    while (m = MATCHING_GROUP_REGEXP.exec(path.source)) {\r\n      keys.push({\r\n        name: name++,\r\n        optional: false,\r\n        offset: m.index\r\n      });\r\n    }\r\n\r\n    return path;\r\n  }\r\n\r\n  if (Array.isArray(path)) {\r\n    // Map array parts into regexps and return their source. We also pass\r\n    // the same keys and options instance into every generation to get\r\n    // consistent matching groups before we join the sources together.\r\n    path = path.map(function (value) {\r\n      return pathtoRegexp(value, keys, options).source;\r\n    });\r\n\r\n    return new RegExp('(?:' + path.join('|') + ')', flags);\r\n  }\r\n\r\n  path = ('^' + path + (strict ? '' : path[path.length - 1] === '/' ? '?' : '/?'))\r\n    .replace(/\\/\\(/g, '/(?:')\r\n    .replace(/([\\/\\.])/g, '\\\\$1')\r\n    .replace(/(\\\\\\/)?(\\\\\\.)?:(\\w+)(\\(.*?\\))?(\\*)?(\\?)?/g, function (match, slash, format, key, capture, star, optional, offset) {\r\n      slash = slash || '';\r\n      format = format || '';\r\n      capture = capture || '([^\\\\/' + format + ']+?)';\r\n      optional = optional || '';\r\n\r\n      keys.push({\r\n        name: key,\r\n        optional: !!optional,\r\n        offset: offset + extraOffset\r\n      });\r\n\r\n      var result = ''\r\n        + (optional ? '' : slash)\r\n        + '(?:'\r\n        + format + (optional ? slash : '') + capture\r\n        + (star ? '((?:[\\\\/' + format + '].+?)?)' : '')\r\n        + ')'\r\n        + optional;\r\n\r\n      extraOffset += result.length - match.length;\r\n\r\n      return result;\r\n    })\r\n    .replace(/\\*/g, function (star, index) {\r\n      var len = keys.length\r\n\r\n      while (len-- > keysOffset && keys[len].offset > index) {\r\n        keys[len].offset += 3; // Replacement length minus asterisk length.\r\n      }\r\n\r\n      return '(.*)';\r\n    });\r\n\r\n  // This is a workaround for handling unnamed matching groups.\r\n  while (m = MATCHING_GROUP_REGEXP.exec(path)) {\r\n    var escapeCount = 0;\r\n    var index = m.index;\r\n\r\n    while (path.charAt(--index) === '\\\\') {\r\n      escapeCount++;\r\n    }\r\n\r\n    // It's possible to escape the bracket.\r\n    if (escapeCount % 2 === 1) {\r\n      continue;\r\n    }\r\n\r\n    if (keysOffset + i === keys.length || keys[keysOffset + i].offset > m.index) {\r\n      keys.splice(keysOffset + i, 0, {\r\n        name: name++, // Unnamed matching groups must be consistently linear.\r\n        optional: false,\r\n        offset: m.index\r\n      });\r\n    }\r\n\r\n    i++;\r\n  }\r\n\r\n  // If the path is non-ending, match until the end or a slash.\r\n  path += (end ? '$' : (path[path.length - 1] === '/' ? '' : '(?=\\\\/|$)'));\r\n\r\n  return new RegExp(path, flags);\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/path-to-regexp/index.js b/node_modules/path-to-regexp/index.js
--- a/node_modules/path-to-regexp/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/path-to-regexp/index.js	(date 1753913035374)
@@ -1,13 +1,13 @@
 /**
- * Expose `pathtoRegexp`.
+ * Expose `pathToRegexp`.
  */
 
-module.exports = pathtoRegexp;
+module.exports = pathToRegexp;
 
 /**
  * Match matching groups in a regular expression.
  */
-var MATCHING_GROUP_REGEXP = /\((?!\?)/g;
+var MATCHING_GROUP_REGEXP = /\\.|\((?:\?<(.*?)>)?(?!\?)/g;
 
 /**
  * Normalize the given path string,
@@ -25,22 +25,27 @@
  * @api private
  */
 
-function pathtoRegexp(path, keys, options) {
+function pathToRegexp(path, keys, options) {
   options = options || {};
   keys = keys || [];
   var strict = options.strict;
   var end = options.end !== false;
   var flags = options.sensitive ? '' : 'i';
+  var lookahead = options.lookahead !== false;
   var extraOffset = 0;
   var keysOffset = keys.length;
   var i = 0;
   var name = 0;
+  var pos = 0;
+  var backtrack = '';
   var m;
 
   if (path instanceof RegExp) {
     while (m = MATCHING_GROUP_REGEXP.exec(path.source)) {
+      if (m[0][0] === '\\') continue;
+
       keys.push({
-        name: name++,
+        name: m[1] || name++,
         optional: false,
         offset: m.index
       });
@@ -54,20 +59,57 @@
     // the same keys and options instance into every generation to get
     // consistent matching groups before we join the sources together.
     path = path.map(function (value) {
-      return pathtoRegexp(value, keys, options).source;
+      return pathToRegexp(value, keys, options).source;
     });
 
-    return new RegExp('(?:' + path.join('|') + ')', flags);
+    return new RegExp(path.join('|'), flags);
   }
+
+  if (typeof path !== 'string') {
+    throw new TypeError('path must be a string, array of strings, or regular expression');
+  }
+
+  path = path.replace(
+    /\\.|(\/)?(\.)?:(\w+)(\(.*?\))?(\*)?(\?)?|[.*]|\/\(/g,
+    function (match, slash, format, key, capture, star, optional, offset) {
+      if (match[0] === '\\') {
+        backtrack += match;
+        pos += 2;
+        return match;
+      }
 
-  path = ('^' + path + (strict ? '' : path[path.length - 1] === '/' ? '?' : '/?'))
-    .replace(/\/\(/g, '/(?:')
-    .replace(/([\/\.])/g, '\\$1')
-    .replace(/(\\\/)?(\\\.)?:(\w+)(\(.*?\))?(\*)?(\?)?/g, function (match, slash, format, key, capture, star, optional, offset) {
+      if (match === '.') {
+        backtrack += '\\.';
+        extraOffset += 1;
+        pos += 1;
+        return '\\.';
+      }
+
+      if (slash || format) {
+        backtrack = '';
+      } else {
+        backtrack += path.slice(pos, offset);
+      }
+
+      pos = offset + match.length;
+
+      if (match === '*') {
+        extraOffset += 3;
+        return '(.*)';
+      }
+
+      if (match === '/(') {
+        backtrack += '/';
+        extraOffset += 2;
+        return '/(?:';
+      }
+
       slash = slash || '';
-      format = format || '';
-      capture = capture || '([^\\/' + format + ']+?)';
+      format = format ? '\\.' : '';
       optional = optional || '';
+      capture = capture ?
+        capture.replace(/\\.|\*/, function (m) { return m === '*' ? '(.*)' : m; }) :
+        (backtrack ? '((?:(?!/|' + backtrack + ').)+?)' : '([^/' + format + ']+?)');
 
       keys.push({
         name: key,
@@ -75,41 +117,20 @@
         offset: offset + extraOffset
       });
 
-      var result = ''
-        + (optional ? '' : slash)
-        + '(?:'
-        + format + (optional ? slash : '') + capture
-        + (star ? '((?:[\\/' + format + '].+?)?)' : '')
+      var result = '(?:'
+        + format + slash + capture
+        + (star ? '((?:[/' + format + '].+?)?)' : '')
         + ')'
         + optional;
 
       extraOffset += result.length - match.length;
 
       return result;
-    })
-    .replace(/\*/g, function (star, index) {
-      var len = keys.length
-
-      while (len-- > keysOffset && keys[len].offset > index) {
-        keys[len].offset += 3; // Replacement length minus asterisk length.
-      }
-
-      return '(.*)';
     });
 
   // This is a workaround for handling unnamed matching groups.
   while (m = MATCHING_GROUP_REGEXP.exec(path)) {
-    var escapeCount = 0;
-    var index = m.index;
-
-    while (path.charAt(--index) === '\\') {
-      escapeCount++;
-    }
-
-    // It's possible to escape the bracket.
-    if (escapeCount % 2 === 1) {
-      continue;
-    }
+    if (m[0][0] === '\\') continue;
 
     if (keysOffset + i === keys.length || keys[keysOffset + i].offset > m.index) {
       keys.splice(keysOffset + i, 0, {
@@ -122,8 +143,14 @@
     i++;
   }
 
+  path += strict ? '' : path[path.length - 1] === '/' ? '?' : '/?';
+
   // If the path is non-ending, match until the end or a slash.
-  path += (end ? '$' : (path[path.length - 1] === '/' ? '' : '(?=\\/|$)'));
+  if (end) {
+    path += '$';
+  } else if (path[path.length - 1] !== '/') {
+    path += lookahead ? '(?=/|$)' : '(?:/|$)';
+  }
 
-  return new RegExp(path, flags);
+  return new RegExp('^' + path, flags);
 };
Index: node_modules/ts-gems/lib/partial.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { IfNoDeepValue } from './helpers';\r\nimport {\r\n  DeeperOmitRequired,\r\n  DeeperPickRequired,\r\n  DeepOmitRequired,\r\n  DeepPickRequired,\r\n  OmitRequired,\r\n  PickRequired,\r\n} from './required';\r\nimport { IfNever } from './type-check';\r\n\r\n/**\r\n * Marks given keys as optional\r\n */\r\nexport type PartialSome<T, K extends keyof T> = Partial<Pick<T, K>> &\r\n  Omit<T, K>;\r\n\r\n/**\r\n * Partial but deeply\r\n */\r\nexport type DeepPartial<T> = {\r\n  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]?: IfNoDeepValue< // Do not deep process No-Deep values\r\n    Exclude<T[K], undefined>\r\n  > extends true\r\n    ? T[K]\r\n    : // Deep process objects\r\n      DeepPartial<Exclude<T[K], undefined>>;\r\n};\r\n\r\n/**\r\n * Partial but deeply including arrays\r\n */\r\nexport type DeeperPartial<T> = {\r\n  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]?: Exclude< // Deep process arrays\r\n    T[K],\r\n    undefined\r\n  > extends (infer U)[]\r\n    ? DeeperPartial<U>[]\r\n    : // Do not deep process No-Deep values\r\n      IfNoDeepValue<Exclude<T[K], undefined>> extends true\r\n      ? T[K]\r\n      : // Deep process objects\r\n        DeeperPartial<Exclude<T[K], undefined>>;\r\n};\r\n\r\n/**\r\n * OptionalKeys\r\n * @desc Returns optional keys of an object\r\n */\r\nexport type OptionalKeys<T> = keyof PickOptional<T>;\r\n\r\n/**\r\n * Pick all optional properties in T\r\n */\r\nexport type PickOptional<T> = OmitRequired<T>;\r\n\r\n/**\r\n * Omit all optional properties in T\r\n */\r\nexport type OmitOptional<T> = PickRequired<T>;\r\n\r\n/**\r\n * Pick all optional properties in T deeply\r\n */\r\nexport type DeepPickOptional<T> = DeepOmitRequired<T>;\r\n\r\n/**\r\n * Omit all optional properties in T deeply\r\n */\r\nexport type DeepOmitOptional<T> = DeepPickRequired<T>;\r\n\r\n/**\r\n * Pick all optional properties in T deeply including arrays\r\n */\r\nexport type DeeperPickOptional<T> = DeeperOmitRequired<T>;\r\n\r\n/**\r\n * Omit all optional properties in T deeply including arrays\r\n */\r\nexport type DeeperOmitOptional<T> = DeeperPickRequired<T>;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/ts-gems/lib/partial.d.ts b/node_modules/ts-gems/lib/partial.d.ts
--- a/node_modules/ts-gems/lib/partial.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/ts-gems/lib/partial.d.ts	(date 1753913035526)
@@ -1,4 +1,4 @@
-import { IfNoDeepValue } from './helpers';
+import { IfNoDeepValue } from './helpers.js';
 import {
   DeeperOmitRequired,
   DeeperPickRequired,
@@ -6,8 +6,8 @@
   DeepPickRequired,
   OmitRequired,
   PickRequired,
-} from './required';
-import { IfNever } from './type-check';
+} from './required.js';
+import { IfNever } from './type-check.js';
 
 /**
  * Marks given keys as optional
@@ -19,28 +19,29 @@
  * Partial but deeply
  */
 export type DeepPartial<T> = {
-  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]?: IfNoDeepValue< // Do not deep process No-Deep values
+  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]?: IfNoDeepValue<
+    // Do not deep process No-Deep values
     Exclude<T[K], undefined>
   > extends true
     ? T[K]
     : // Deep process objects
-      DeepPartial<Exclude<T[K], undefined>>;
+      DeepPartial<NonNullable<T[K]>>;
 };
 
 /**
  * Partial but deeply including arrays
  */
 export type DeeperPartial<T> = {
-  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]?: Exclude< // Deep process arrays
-    T[K],
-    undefined
+  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]?: NonNullable<
+    // Deep process arrays
+    T[K]
   > extends (infer U)[]
     ? DeeperPartial<U>[]
     : // Do not deep process No-Deep values
-      IfNoDeepValue<Exclude<T[K], undefined>> extends true
+      IfNoDeepValue<NonNullable<T[K]>> extends true
       ? T[K]
       : // Deep process objects
-        DeeperPartial<Exclude<T[K], undefined>>;
+        DeeperPartial<NonNullable<T[K]>>;
 };
 
 /**
Index: node_modules/ts-gems/lib/required.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { IfNoDeepValue } from './helpers';\r\nimport { Or } from './logical.js';\r\nimport { OmitTypes } from './omit.js';\r\nimport { IfEquals, IfNever } from './type-check';\r\n\r\n/**\r\n * Marks given keys as required\r\n */\r\nexport type RequiredSome<T, K extends keyof T> = OmitTypes<\r\n  Required<Pick<T, K>>,\r\n  null\r\n> &\r\n  Omit<T, K>;\r\n\r\n/**\r\n * Make all properties in T required deeply\r\n */\r\nexport type DeepRequired<T> = {\r\n  [K in keyof T as IfNever<\r\n    Exclude<T[K], undefined>,\r\n    never,\r\n    K\r\n  >]-?: IfNoDeepValue<Exclude<T[K], undefined>> extends true // Do not deep process No-Deep values\r\n    ? Exclude<T[K], undefined>\r\n    : // Deep process objects\r\n      DeepRequired<Exclude<T[K], undefined>>;\r\n};\r\n\r\n/**\r\n * Make all properties in T required deeply including arrays\r\n */\r\nexport type DeeperRequired<T> = {\r\n  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]-?: Exclude< // Deep process arrays\r\n    T[K],\r\n    undefined\r\n  > extends (infer U)[]\r\n    ? DeeperRequired<U>[]\r\n    : // Do not deep process No-Deep values\r\n      IfNoDeepValue<Exclude<T[K], undefined>> extends true\r\n      ? Exclude<T[K], undefined>\r\n      : // Deep process objects\r\n        DeepRequired<Exclude<T[K], undefined>>;\r\n};\r\n\r\n/**\r\n * RequiredKeys\r\n * @desc Returns required keys of an object\r\n */\r\nexport type RequiredKeys<T> = keyof PickRequired<T>;\r\n\r\n/**\r\n * Pick all required properties in T\r\n */\r\nexport type PickRequired<T> = {\r\n  [K in keyof T as Or<\r\n    // Omit never keys\r\n    IfNever<Exclude<T[K], undefined>>,\r\n    // Omit optional\r\n    IfEquals<{ [Q in K]: T[K] }, { [Q in K]?: T[K] }>\r\n  > extends true\r\n    ? never\r\n    : K]: T[K];\r\n};\r\n\r\n/**\r\n * Pick all required properties in T\r\n */\r\nexport type OmitRequired<T> = {\r\n  [K in keyof T as Or<\r\n    // Omit never keys\r\n    IfNever<Exclude<T[K], undefined>>,\r\n    // Omit optional\r\n    IfEquals<{ [Q in K]: T[K] }, { [Q in K]?: T[K] }, false, true>\r\n  > extends true\r\n    ? never\r\n    : K]: T[K];\r\n};\r\n\r\n/**\r\n * Pick all required properties in T deeply\r\n */\r\nexport type DeepPickRequired<T> = {\r\n  [K in keyof T as Or<\r\n    // Omit never keys\r\n    IfNever<Exclude<T[K], undefined>>,\r\n    // Omit optional\r\n    IfEquals<{ [Q in K]: T[K] }, { [Q in K]?: T[K] }>\r\n  > extends true\r\n    ? never\r\n    : K]: IfNoDeepValue<Exclude<T[K], undefined>> extends true // Do not deep process No-Deep values\r\n    ? T[K]\r\n    : // Deep process objects\r\n      DeepPickRequired<Exclude<T[K], undefined>>;\r\n};\r\n\r\n/**\r\n * Omit all required properties in T deeply\r\n */\r\nexport type DeepOmitRequired<T> = {\r\n  [K in keyof T as Or<\r\n    // Omit never keys\r\n    IfNever<Exclude<T[K], undefined>>,\r\n    // Omit required\r\n    IfEquals<{ [Q in K]: T[K] }, { [Q in K]-?: T[K] }>\r\n  > extends true\r\n    ? never\r\n    : K]?: IfNoDeepValue<Exclude<T[K], undefined>> extends true // Do not deep process No-Deep values\r\n    ? T[K]\r\n    : // Deep process objects\r\n      DeepOmitRequired<Exclude<T[K], undefined>>;\r\n};\r\n\r\n/**\r\n * Pick all required properties in T deeply including arrays\r\n */\r\nexport type DeeperPickRequired<T> = {\r\n  [K in keyof T as Or<\r\n    // Omit never keys\r\n    IfNever<Exclude<T[K], undefined>>,\r\n    // Omit required\r\n    IfEquals<{ [Q in K]: T[K] }, { [Q in K]?: T[K] }>\r\n  > extends true\r\n    ? never\r\n    : K]: Exclude<T[K], undefined> extends (infer U)[] // Deep process arrays\r\n    ? DeeperPickRequired<U>[]\r\n    : // Do not deep process No-Deep values\r\n      IfNoDeepValue<Exclude<T[K], undefined>> extends true\r\n      ? T[K]\r\n      : // Deep process objects\r\n        DeeperPickRequired<Exclude<T[K], undefined>>;\r\n};\r\n\r\n/**\r\n * Omit all required properties in T deeply including arrays\r\n */\r\nexport type DeeperOmitRequired<T> = {\r\n  [K in keyof T as Or<\r\n    // Omit never keys\r\n    IfNever<Exclude<T[K], undefined>>,\r\n    // Omit required\r\n    IfEquals<{ [Q in K]: T[K] }, { [Q in K]-?: T[K] }>\r\n  > extends true\r\n    ? never\r\n    : K]: Exclude<T[K], undefined> extends (infer U)[] // Deep process arrays\r\n    ? DeeperOmitRequired<U>[]\r\n    : // Do not deep process No-Deep values\r\n      IfNoDeepValue<Exclude<T[K], undefined>> extends true\r\n      ? T[K]\r\n      : // Deep process objects\r\n        DeeperOmitRequired<Exclude<T[K], undefined>>;\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/ts-gems/lib/required.d.ts b/node_modules/ts-gems/lib/required.d.ts
--- a/node_modules/ts-gems/lib/required.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/ts-gems/lib/required.d.ts	(date 1753913035529)
@@ -1,7 +1,7 @@
-import { IfNoDeepValue } from './helpers';
+import { IfNoDeepValue } from './helpers.js';
 import { Or } from './logical.js';
 import { OmitTypes } from './omit.js';
-import { IfEquals, IfNever } from './type-check';
+import { IfEquals, IfNever } from './type-check.js';
 
 /**
  * Marks given keys as required
@@ -23,23 +23,22 @@
   >]-?: IfNoDeepValue<Exclude<T[K], undefined>> extends true // Do not deep process No-Deep values
     ? Exclude<T[K], undefined>
     : // Deep process objects
-      DeepRequired<Exclude<T[K], undefined>>;
+      DeepRequired<NonNullable<T[K]>>;
 };
 
 /**
  * Make all properties in T required deeply including arrays
  */
 export type DeeperRequired<T> = {
-  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]-?: Exclude< // Deep process arrays
-    T[K],
-    undefined
-  > extends (infer U)[]
+  [K in keyof T as IfNever<Exclude<T[K], undefined>, never, K>]-?: NonNullable<
+    T[K]
+  > extends (infer U)[] // Deep process arrays
     ? DeeperRequired<U>[]
     : // Do not deep process No-Deep values
-      IfNoDeepValue<Exclude<T[K], undefined>> extends true
+      IfNoDeepValue<NonNullable<T[K]>> extends true
       ? Exclude<T[K], undefined>
       : // Deep process objects
-        DeepRequired<Exclude<T[K], undefined>>;
+        DeepRequired<NonNullable<T[K]>>;
 };
 
 /**
@@ -87,10 +86,10 @@
     IfEquals<{ [Q in K]: T[K] }, { [Q in K]?: T[K] }>
   > extends true
     ? never
-    : K]: IfNoDeepValue<Exclude<T[K], undefined>> extends true // Do not deep process No-Deep values
+    : K]: IfNoDeepValue<NonNullable<T[K]>> extends true // Do not deep process No-Deep values
     ? T[K]
     : // Deep process objects
-      DeepPickRequired<Exclude<T[K], undefined>>;
+      DeepPickRequired<NonNullable<T[K]>>;
 };
 
 /**
@@ -104,10 +103,10 @@
     IfEquals<{ [Q in K]: T[K] }, { [Q in K]-?: T[K] }>
   > extends true
     ? never
-    : K]?: IfNoDeepValue<Exclude<T[K], undefined>> extends true // Do not deep process No-Deep values
+    : K]?: IfNoDeepValue<NonNullable<T[K]>> extends true // Do not deep process No-Deep values
     ? T[K]
     : // Deep process objects
-      DeepOmitRequired<Exclude<T[K], undefined>>;
+      DeepOmitRequired<NonNullable<T[K]>>;
 };
 
 /**
@@ -121,13 +120,13 @@
     IfEquals<{ [Q in K]: T[K] }, { [Q in K]?: T[K] }>
   > extends true
     ? never
-    : K]: Exclude<T[K], undefined> extends (infer U)[] // Deep process arrays
+    : K]: NonNullable<T[K]> extends (infer U)[] // Deep process arrays
     ? DeeperPickRequired<U>[]
     : // Do not deep process No-Deep values
-      IfNoDeepValue<Exclude<T[K], undefined>> extends true
+      IfNoDeepValue<NonNullable<T[K]>> extends true
       ? T[K]
       : // Deep process objects
-        DeeperPickRequired<Exclude<T[K], undefined>>;
+        DeeperPickRequired<NonNullable<T[K]>>;
 };
 
 /**
@@ -141,11 +140,11 @@
     IfEquals<{ [Q in K]: T[K] }, { [Q in K]-?: T[K] }>
   > extends true
     ? never
-    : K]: Exclude<T[K], undefined> extends (infer U)[] // Deep process arrays
+    : K]: NonNullable<T[K]> extends (infer U)[] // Deep process arrays
     ? DeeperOmitRequired<U>[]
     : // Do not deep process No-Deep values
-      IfNoDeepValue<Exclude<T[K], undefined>> extends true
+      IfNoDeepValue<NonNullable<T[K]>> extends true
       ? T[K]
       : // Deep process objects
-        DeeperOmitRequired<Exclude<T[K], undefined>>;
+        DeeperOmitRequired<NonNullable<T[K]>>;
 };
Index: node_modules/gopd/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n\t\"name\": \"gopd\",\r\n\t\"version\": \"1.0.1\",\r\n\t\"description\": \"`Object.getOwnPropertyDescriptor`, but accounts for IE's broken implementation.\",\r\n\t\"main\": \"index.js\",\r\n\t\"exports\": {\r\n\t\t\".\": \"./index.js\",\r\n\t\t\"./package.json\": \"./package.json\"\r\n\t},\r\n\t\"sideEffects\": false,\r\n\t\"scripts\": {\r\n\t\t\"prepack\": \"npmignore --auto --commentLines=autogenerated\",\r\n\t\t\"prepublishOnly\": \"safe-publish-latest\",\r\n\t\t\"prepublish\": \"not-in-publish || npm run prepublishOnly\",\r\n\t\t\"lint\": \"eslint --ext=js,mjs .\",\r\n\t\t\"postlint\": \"evalmd README.md\",\r\n\t\t\"pretest\": \"npm run lint\",\r\n\t\t\"tests-only\": \"tape 'test/**/*.js'\",\r\n\t\t\"test\": \"npm run tests-only\",\r\n\t\t\"posttest\": \"aud --production\",\r\n\t\t\"version\": \"auto-changelog && git add CHANGELOG.md\",\r\n\t\t\"postversion\": \"auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \\\"v$(node -e \\\"console.log(require('./package.json').version)\\\")\\\"\"\r\n\t},\r\n\t\"repository\": {\r\n\t\t\"type\": \"git\",\r\n\t\t\"url\": \"git+https://github.com/ljharb/gopd.git\"\r\n\t},\r\n\t\"keywords\": [\r\n\t\t\"ecmascript\",\r\n\t\t\"javascript\",\r\n\t\t\"getownpropertydescriptor\",\r\n\t\t\"property\",\r\n\t\t\"descriptor\"\r\n\t],\r\n\t\"author\": \"Jordan Harband <ljharb@gmail.com>\",\r\n\t\"funding\": {\r\n\t\t\"url\": \"https://github.com/sponsors/ljharb\"\r\n\t},\r\n\t\"license\": \"MIT\",\r\n\t\"bugs\": {\r\n\t\t\"url\": \"https://github.com/ljharb/gopd/issues\"\r\n\t},\r\n\t\"homepage\": \"https://github.com/ljharb/gopd#readme\",\r\n\t\"dependencies\": {\r\n\t\t\"get-intrinsic\": \"^1.1.3\"\r\n\t},\r\n\t\"devDependencies\": {\r\n\t\t\"@ljharb/eslint-config\": \"^21.0.0\",\r\n\t\t\"aud\": \"^2.0.1\",\r\n\t\t\"auto-changelog\": \"^2.4.0\",\r\n\t\t\"eslint\": \"=8.8.0\",\r\n\t\t\"evalmd\": \"^0.0.19\",\r\n\t\t\"in-publish\": \"^2.0.1\",\r\n\t\t\"npmignore\": \"^0.3.0\",\r\n\t\t\"safe-publish-latest\": \"^2.0.0\",\r\n\t\t\"tape\": \"^5.6.1\"\r\n\t},\r\n\t\"auto-changelog\": {\r\n\t\t\"output\": \"CHANGELOG.md\",\r\n\t\t\"template\": \"keepachangelog\",\r\n\t\t\"unreleased\": false,\r\n\t\t\"commitLimit\": false,\r\n\t\t\"backfillLimit\": false,\r\n\t\t\"hideCredit\": true\r\n\t},\r\n\t\"publishConfig\": {\r\n\t\t\"ignore\": [\r\n\t\t\t\".github/workflows\"\r\n\t\t]\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/gopd/package.json b/node_modules/gopd/package.json
--- a/node_modules/gopd/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/gopd/package.json	(date 1753913035655)
@@ -1,10 +1,11 @@
 {
 	"name": "gopd",
-	"version": "1.0.1",
+	"version": "1.2.0",
 	"description": "`Object.getOwnPropertyDescriptor`, but accounts for IE's broken implementation.",
 	"main": "index.js",
 	"exports": {
 		".": "./index.js",
+		"./gOPD": "./gOPD.js",
 		"./package.json": "./package.json"
 	},
 	"sideEffects": false,
@@ -12,12 +13,13 @@
 		"prepack": "npmignore --auto --commentLines=autogenerated",
 		"prepublishOnly": "safe-publish-latest",
 		"prepublish": "not-in-publish || npm run prepublishOnly",
+		"prelint": "tsc -p . && attw -P",
 		"lint": "eslint --ext=js,mjs .",
 		"postlint": "evalmd README.md",
 		"pretest": "npm run lint",
 		"tests-only": "tape 'test/**/*.js'",
 		"test": "npm run tests-only",
-		"posttest": "aud --production",
+		"posttest": "npx npm@'>=10.2' audit --production",
 		"version": "auto-changelog && git add CHANGELOG.md",
 		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
 	},
@@ -41,19 +43,20 @@
 		"url": "https://github.com/ljharb/gopd/issues"
 	},
 	"homepage": "https://github.com/ljharb/gopd#readme",
-	"dependencies": {
-		"get-intrinsic": "^1.1.3"
-	},
 	"devDependencies": {
-		"@ljharb/eslint-config": "^21.0.0",
-		"aud": "^2.0.1",
-		"auto-changelog": "^2.4.0",
+		"@arethetypeswrong/cli": "^0.17.0",
+		"@ljharb/eslint-config": "^21.1.1",
+		"@ljharb/tsconfig": "^0.2.0",
+		"@types/tape": "^5.6.5",
+		"auto-changelog": "^2.5.0",
+		"encoding": "^0.1.13",
 		"eslint": "=8.8.0",
 		"evalmd": "^0.0.19",
 		"in-publish": "^2.0.1",
-		"npmignore": "^0.3.0",
+		"npmignore": "^0.3.1",
 		"safe-publish-latest": "^2.0.0",
-		"tape": "^5.6.1"
+		"tape": "^5.9.0",
+		"typescript": "next"
 	},
 	"auto-changelog": {
 		"output": "CHANGELOG.md",
@@ -67,5 +70,8 @@
 		"ignore": [
 			".github/workflows"
 		]
+	},
+	"engines": {
+		"node": ">= 0.4"
 	}
 }
Index: node_modules/fill-range/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"fill-range\",\r\n  \"description\": \"Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`\",\r\n  \"version\": \"7.0.1\",\r\n  \"homepage\": \"https://github.com/jonschlinkert/fill-range\",\r\n  \"author\": \"Jon Schlinkert (https://github.com/jonschlinkert)\",\r\n  \"contributors\": [\r\n    \"Edo Rivai (edo.rivai.nl)\",\r\n    \"Jon Schlinkert (http://twitter.com/jonschlinkert)\",\r\n    \"Paul Miller (paulmillr.com)\",\r\n    \"Rouven Weßling (www.rouvenwessling.de)\",\r\n    \"(https://github.com/wtgtybhertgeghgtwtg)\"\r\n  ],\r\n  \"repository\": \"jonschlinkert/fill-range\",\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/jonschlinkert/fill-range/issues\"\r\n  },\r\n  \"license\": \"MIT\",\r\n  \"files\": [\r\n    \"index.js\"\r\n  ],\r\n  \"main\": \"index.js\",\r\n  \"engines\": {\r\n    \"node\": \">=8\"\r\n  },\r\n  \"scripts\": {\r\n    \"test\": \"mocha\"\r\n  },\r\n  \"dependencies\": {\r\n    \"to-regex-range\": \"^5.0.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"gulp-format-md\": \"^2.0.0\",\r\n    \"mocha\": \"^6.1.1\"\r\n  },\r\n  \"keywords\": [\r\n    \"alpha\",\r\n    \"alphabetical\",\r\n    \"array\",\r\n    \"bash\",\r\n    \"brace\",\r\n    \"expand\",\r\n    \"expansion\",\r\n    \"fill\",\r\n    \"glob\",\r\n    \"match\",\r\n    \"matches\",\r\n    \"matching\",\r\n    \"number\",\r\n    \"numerical\",\r\n    \"range\",\r\n    \"ranges\",\r\n    \"regex\",\r\n    \"sh\"\r\n  ],\r\n  \"verb\": {\r\n    \"toc\": false,\r\n    \"layout\": \"default\",\r\n    \"tasks\": [\r\n      \"readme\"\r\n    ],\r\n    \"plugins\": [\r\n      \"gulp-format-md\"\r\n    ],\r\n    \"lint\": {\r\n      \"reflinks\": true\r\n    }\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/fill-range/package.json b/node_modules/fill-range/package.json
--- a/node_modules/fill-range/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/fill-range/package.json	(date 1753913035786)
@@ -1,7 +1,7 @@
 {
   "name": "fill-range",
   "description": "Fill in a range of numbers or letters, optionally passing an increment or `step` to use, or create a regex-compatible range with `options.toRegex`",
-  "version": "7.0.1",
+  "version": "7.1.1",
   "homepage": "https://github.com/jonschlinkert/fill-range",
   "author": "Jon Schlinkert (https://github.com/jonschlinkert)",
   "contributors": [
@@ -24,14 +24,19 @@
     "node": ">=8"
   },
   "scripts": {
-    "test": "mocha"
+    "lint": "eslint --cache --cache-location node_modules/.cache/.eslintcache --report-unused-disable-directives --ignore-path .gitignore .",
+    "mocha": "mocha --reporter dot",
+    "test": "npm run lint && npm run mocha",
+    "test:ci": "npm run test:cover",
+    "test:cover": "nyc npm run mocha"
   },
   "dependencies": {
     "to-regex-range": "^5.0.1"
   },
   "devDependencies": {
     "gulp-format-md": "^2.0.0",
-    "mocha": "^6.1.1"
+    "mocha": "^6.1.1",
+    "nyc": "^15.1.0"
   },
   "keywords": [
     "alpha",
Index: node_modules/express/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"express\",\r\n  \"description\": \"Fast, unopinionated, minimalist web framework\",\r\n  \"version\": \"4.19.2\",\r\n  \"author\": \"TJ Holowaychuk <tj@vision-media.ca>\",\r\n  \"contributors\": [\r\n    \"Aaron Heckmann <aaron.heckmann+github@gmail.com>\",\r\n    \"Ciaran Jessup <ciaranj@gmail.com>\",\r\n    \"Douglas Christopher Wilson <doug@somethingdoug.com>\",\r\n    \"Guillermo Rauch <rauchg@gmail.com>\",\r\n    \"Jonathan Ong <me@jongleberry.com>\",\r\n    \"Roman Shtylman <shtylman+expressjs@gmail.com>\",\r\n    \"Young Jae Sim <hanul@hanul.me>\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"repository\": \"expressjs/express\",\r\n  \"homepage\": \"http://expressjs.com/\",\r\n  \"keywords\": [\r\n    \"express\",\r\n    \"framework\",\r\n    \"sinatra\",\r\n    \"web\",\r\n    \"http\",\r\n    \"rest\",\r\n    \"restful\",\r\n    \"router\",\r\n    \"app\",\r\n    \"api\"\r\n  ],\r\n  \"dependencies\": {\r\n    \"accepts\": \"~1.3.8\",\r\n    \"array-flatten\": \"1.1.1\",\r\n    \"body-parser\": \"1.20.2\",\r\n    \"content-disposition\": \"0.5.4\",\r\n    \"content-type\": \"~1.0.4\",\r\n    \"cookie\": \"0.6.0\",\r\n    \"cookie-signature\": \"1.0.6\",\r\n    \"debug\": \"2.6.9\",\r\n    \"depd\": \"2.0.0\",\r\n    \"encodeurl\": \"~1.0.2\",\r\n    \"escape-html\": \"~1.0.3\",\r\n    \"etag\": \"~1.8.1\",\r\n    \"finalhandler\": \"1.2.0\",\r\n    \"fresh\": \"0.5.2\",\r\n    \"http-errors\": \"2.0.0\",\r\n    \"merge-descriptors\": \"1.0.1\",\r\n    \"methods\": \"~1.1.2\",\r\n    \"on-finished\": \"2.4.1\",\r\n    \"parseurl\": \"~1.3.3\",\r\n    \"path-to-regexp\": \"0.1.7\",\r\n    \"proxy-addr\": \"~2.0.7\",\r\n    \"qs\": \"6.11.0\",\r\n    \"range-parser\": \"~1.2.1\",\r\n    \"safe-buffer\": \"5.2.1\",\r\n    \"send\": \"0.18.0\",\r\n    \"serve-static\": \"1.15.0\",\r\n    \"setprototypeof\": \"1.2.0\",\r\n    \"statuses\": \"2.0.1\",\r\n    \"type-is\": \"~1.6.18\",\r\n    \"utils-merge\": \"1.0.1\",\r\n    \"vary\": \"~1.1.2\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"after\": \"0.8.2\",\r\n    \"connect-redis\": \"3.4.2\",\r\n    \"cookie-parser\": \"1.4.6\",\r\n    \"cookie-session\": \"2.0.0\",\r\n    \"ejs\": \"3.1.9\",\r\n    \"eslint\": \"8.47.0\",\r\n    \"express-session\": \"1.17.2\",\r\n    \"hbs\": \"4.2.0\",\r\n    \"marked\": \"0.7.0\",\r\n    \"method-override\": \"3.0.0\",\r\n    \"mocha\": \"10.2.0\",\r\n    \"morgan\": \"1.10.0\",\r\n    \"nyc\": \"15.1.0\",\r\n    \"pbkdf2-password\": \"1.2.1\",\r\n    \"supertest\": \"6.3.0\",\r\n    \"vhost\": \"~3.0.2\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">= 0.10.0\"\r\n  },\r\n  \"files\": [\r\n    \"LICENSE\",\r\n    \"History.md\",\r\n    \"Readme.md\",\r\n    \"index.js\",\r\n    \"lib/\"\r\n  ],\r\n  \"scripts\": {\r\n    \"lint\": \"eslint .\",\r\n    \"test\": \"mocha --require test/support/env --reporter spec --bail --check-leaks test/ test/acceptance/\",\r\n    \"test-ci\": \"nyc --reporter=lcovonly --reporter=text npm test\",\r\n    \"test-cov\": \"nyc --reporter=html --reporter=text npm test\",\r\n    \"test-tap\": \"mocha --require test/support/env --reporter tap --check-leaks test/ test/acceptance/\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/express/package.json b/node_modules/express/package.json
--- a/node_modules/express/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/express/package.json	(date 1753913035739)
@@ -1,7 +1,7 @@
 {
   "name": "express",
   "description": "Fast, unopinionated, minimalist web framework",
-  "version": "4.19.2",
+  "version": "4.21.2",
   "author": "TJ Holowaychuk <tj@vision-media.ca>",
   "contributors": [
     "Aaron Heckmann <aaron.heckmann+github@gmail.com>",
@@ -15,6 +15,10 @@
   "license": "MIT",
   "repository": "expressjs/express",
   "homepage": "http://expressjs.com/",
+  "funding": {
+    "type": "opencollective",
+    "url": "https://opencollective.com/express"
+  },
   "keywords": [
     "express",
     "framework",
@@ -30,30 +34,30 @@
   "dependencies": {
     "accepts": "~1.3.8",
     "array-flatten": "1.1.1",
-    "body-parser": "1.20.2",
+    "body-parser": "1.20.3",
     "content-disposition": "0.5.4",
     "content-type": "~1.0.4",
-    "cookie": "0.6.0",
+    "cookie": "0.7.1",
     "cookie-signature": "1.0.6",
     "debug": "2.6.9",
     "depd": "2.0.0",
-    "encodeurl": "~1.0.2",
+    "encodeurl": "~2.0.0",
     "escape-html": "~1.0.3",
     "etag": "~1.8.1",
-    "finalhandler": "1.2.0",
+    "finalhandler": "1.3.1",
     "fresh": "0.5.2",
     "http-errors": "2.0.0",
-    "merge-descriptors": "1.0.1",
+    "merge-descriptors": "1.0.3",
     "methods": "~1.1.2",
     "on-finished": "2.4.1",
     "parseurl": "~1.3.3",
-    "path-to-regexp": "0.1.7",
+    "path-to-regexp": "0.1.12",
     "proxy-addr": "~2.0.7",
-    "qs": "6.11.0",
+    "qs": "6.13.0",
     "range-parser": "~1.2.1",
     "safe-buffer": "5.2.1",
-    "send": "0.18.0",
-    "serve-static": "1.15.0",
+    "send": "0.19.0",
+    "serve-static": "1.16.2",
     "setprototypeof": "1.2.0",
     "statuses": "2.0.1",
     "type-is": "~1.6.18",
@@ -91,8 +95,8 @@
   "scripts": {
     "lint": "eslint .",
     "test": "mocha --require test/support/env --reporter spec --bail --check-leaks test/ test/acceptance/",
-    "test-ci": "nyc --reporter=lcovonly --reporter=text npm test",
-    "test-cov": "nyc --reporter=html --reporter=text npm test",
+    "test-ci": "nyc --exclude examples --exclude test --exclude benchmarks --reporter=lcovonly --reporter=text npm test",
+    "test-cov": "nyc --exclude examples --exclude test --exclude benchmarks --reporter=html --reporter=text npm test",
     "test-tap": "mocha --require test/support/env --reporter tap --check-leaks test/ test/acceptance/"
   }
 }
Index: node_modules/fill-range/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*!\r\n * fill-range <https://github.com/jonschlinkert/fill-range>\r\n *\r\n * Copyright (c) 2014-present, Jon Schlinkert.\r\n * Licensed under the MIT License.\r\n */\r\n\r\n'use strict';\r\n\r\nconst util = require('util');\r\nconst toRegexRange = require('to-regex-range');\r\n\r\nconst isObject = val => val !== null && typeof val === 'object' && !Array.isArray(val);\r\n\r\nconst transform = toNumber => {\r\n  return value => toNumber === true ? Number(value) : String(value);\r\n};\r\n\r\nconst isValidValue = value => {\r\n  return typeof value === 'number' || (typeof value === 'string' && value !== '');\r\n};\r\n\r\nconst isNumber = num => Number.isInteger(+num);\r\n\r\nconst zeros = input => {\r\n  let value = `${input}`;\r\n  let index = -1;\r\n  if (value[0] === '-') value = value.slice(1);\r\n  if (value === '0') return false;\r\n  while (value[++index] === '0');\r\n  return index > 0;\r\n};\r\n\r\nconst stringify = (start, end, options) => {\r\n  if (typeof start === 'string' || typeof end === 'string') {\r\n    return true;\r\n  }\r\n  return options.stringify === true;\r\n};\r\n\r\nconst pad = (input, maxLength, toNumber) => {\r\n  if (maxLength > 0) {\r\n    let dash = input[0] === '-' ? '-' : '';\r\n    if (dash) input = input.slice(1);\r\n    input = (dash + input.padStart(dash ? maxLength - 1 : maxLength, '0'));\r\n  }\r\n  if (toNumber === false) {\r\n    return String(input);\r\n  }\r\n  return input;\r\n};\r\n\r\nconst toMaxLen = (input, maxLength) => {\r\n  let negative = input[0] === '-' ? '-' : '';\r\n  if (negative) {\r\n    input = input.slice(1);\r\n    maxLength--;\r\n  }\r\n  while (input.length < maxLength) input = '0' + input;\r\n  return negative ? ('-' + input) : input;\r\n};\r\n\r\nconst toSequence = (parts, options) => {\r\n  parts.negatives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\r\n  parts.positives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);\r\n\r\n  let prefix = options.capture ? '' : '?:';\r\n  let positives = '';\r\n  let negatives = '';\r\n  let result;\r\n\r\n  if (parts.positives.length) {\r\n    positives = parts.positives.join('|');\r\n  }\r\n\r\n  if (parts.negatives.length) {\r\n    negatives = `-(${prefix}${parts.negatives.join('|')})`;\r\n  }\r\n\r\n  if (positives && negatives) {\r\n    result = `${positives}|${negatives}`;\r\n  } else {\r\n    result = positives || negatives;\r\n  }\r\n\r\n  if (options.wrap) {\r\n    return `(${prefix}${result})`;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst toRange = (a, b, isNumbers, options) => {\r\n  if (isNumbers) {\r\n    return toRegexRange(a, b, { wrap: false, ...options });\r\n  }\r\n\r\n  let start = String.fromCharCode(a);\r\n  if (a === b) return start;\r\n\r\n  let stop = String.fromCharCode(b);\r\n  return `[${start}-${stop}]`;\r\n};\r\n\r\nconst toRegex = (start, end, options) => {\r\n  if (Array.isArray(start)) {\r\n    let wrap = options.wrap === true;\r\n    let prefix = options.capture ? '' : '?:';\r\n    return wrap ? `(${prefix}${start.join('|')})` : start.join('|');\r\n  }\r\n  return toRegexRange(start, end, options);\r\n};\r\n\r\nconst rangeError = (...args) => {\r\n  return new RangeError('Invalid range arguments: ' + util.inspect(...args));\r\n};\r\n\r\nconst invalidRange = (start, end, options) => {\r\n  if (options.strictRanges === true) throw rangeError([start, end]);\r\n  return [];\r\n};\r\n\r\nconst invalidStep = (step, options) => {\r\n  if (options.strictRanges === true) {\r\n    throw new TypeError(`Expected step \"${step}\" to be a number`);\r\n  }\r\n  return [];\r\n};\r\n\r\nconst fillNumbers = (start, end, step = 1, options = {}) => {\r\n  let a = Number(start);\r\n  let b = Number(end);\r\n\r\n  if (!Number.isInteger(a) || !Number.isInteger(b)) {\r\n    if (options.strictRanges === true) throw rangeError([start, end]);\r\n    return [];\r\n  }\r\n\r\n  // fix negative zero\r\n  if (a === 0) a = 0;\r\n  if (b === 0) b = 0;\r\n\r\n  let descending = a > b;\r\n  let startString = String(start);\r\n  let endString = String(end);\r\n  let stepString = String(step);\r\n  step = Math.max(Math.abs(step), 1);\r\n\r\n  let padded = zeros(startString) || zeros(endString) || zeros(stepString);\r\n  let maxLen = padded ? Math.max(startString.length, endString.length, stepString.length) : 0;\r\n  let toNumber = padded === false && stringify(start, end, options) === false;\r\n  let format = options.transform || transform(toNumber);\r\n\r\n  if (options.toRegex && step === 1) {\r\n    return toRange(toMaxLen(start, maxLen), toMaxLen(end, maxLen), true, options);\r\n  }\r\n\r\n  let parts = { negatives: [], positives: [] };\r\n  let push = num => parts[num < 0 ? 'negatives' : 'positives'].push(Math.abs(num));\r\n  let range = [];\r\n  let index = 0;\r\n\r\n  while (descending ? a >= b : a <= b) {\r\n    if (options.toRegex === true && step > 1) {\r\n      push(a);\r\n    } else {\r\n      range.push(pad(format(a, index), maxLen, toNumber));\r\n    }\r\n    a = descending ? a - step : a + step;\r\n    index++;\r\n  }\r\n\r\n  if (options.toRegex === true) {\r\n    return step > 1\r\n      ? toSequence(parts, options)\r\n      : toRegex(range, null, { wrap: false, ...options });\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nconst fillLetters = (start, end, step = 1, options = {}) => {\r\n  if ((!isNumber(start) && start.length > 1) || (!isNumber(end) && end.length > 1)) {\r\n    return invalidRange(start, end, options);\r\n  }\r\n\r\n\r\n  let format = options.transform || (val => String.fromCharCode(val));\r\n  let a = `${start}`.charCodeAt(0);\r\n  let b = `${end}`.charCodeAt(0);\r\n\r\n  let descending = a > b;\r\n  let min = Math.min(a, b);\r\n  let max = Math.max(a, b);\r\n\r\n  if (options.toRegex && step === 1) {\r\n    return toRange(min, max, false, options);\r\n  }\r\n\r\n  let range = [];\r\n  let index = 0;\r\n\r\n  while (descending ? a >= b : a <= b) {\r\n    range.push(format(a, index));\r\n    a = descending ? a - step : a + step;\r\n    index++;\r\n  }\r\n\r\n  if (options.toRegex === true) {\r\n    return toRegex(range, null, { wrap: false, options });\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nconst fill = (start, end, step, options = {}) => {\r\n  if (end == null && isValidValue(start)) {\r\n    return [start];\r\n  }\r\n\r\n  if (!isValidValue(start) || !isValidValue(end)) {\r\n    return invalidRange(start, end, options);\r\n  }\r\n\r\n  if (typeof step === 'function') {\r\n    return fill(start, end, 1, { transform: step });\r\n  }\r\n\r\n  if (isObject(step)) {\r\n    return fill(start, end, 0, step);\r\n  }\r\n\r\n  let opts = { ...options };\r\n  if (opts.capture === true) opts.wrap = true;\r\n  step = step || opts.step || 1;\r\n\r\n  if (!isNumber(step)) {\r\n    if (step != null && !isObject(step)) return invalidStep(step, opts);\r\n    return fill(start, end, 1, step);\r\n  }\r\n\r\n  if (isNumber(start) && isNumber(end)) {\r\n    return fillNumbers(start, end, step, opts);\r\n  }\r\n\r\n  return fillLetters(start, end, Math.max(Math.abs(step), 1), opts);\r\n};\r\n\r\nmodule.exports = fill;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/fill-range/index.js b/node_modules/fill-range/index.js
--- a/node_modules/fill-range/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/fill-range/index.js	(date 1753913035786)
@@ -60,7 +60,7 @@
   return negative ? ('-' + input) : input;
 };
 
-const toSequence = (parts, options) => {
+const toSequence = (parts, options, maxLen) => {
   parts.negatives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);
   parts.positives.sort((a, b) => a < b ? -1 : a > b ? 1 : 0);
 
@@ -70,11 +70,11 @@
   let result;
 
   if (parts.positives.length) {
-    positives = parts.positives.join('|');
+    positives = parts.positives.map(v => toMaxLen(String(v), maxLen)).join('|');
   }
 
   if (parts.negatives.length) {
-    negatives = `-(${prefix}${parts.negatives.join('|')})`;
+    negatives = `-(${prefix}${parts.negatives.map(v => toMaxLen(String(v), maxLen)).join('|')})`;
   }
 
   if (positives && negatives) {
@@ -172,7 +172,7 @@
 
   if (options.toRegex === true) {
     return step > 1
-      ? toSequence(parts, options)
+      ? toSequence(parts, options, maxLen)
       : toRegex(range, null, { wrap: false, ...options });
   }
 
@@ -184,7 +184,6 @@
     return invalidRange(start, end, options);
   }
 
-
   let format = options.transform || (val => String.fromCharCode(val));
   let a = `${start}`.charCodeAt(0);
   let b = `${end}`.charCodeAt(0);
Index: node_modules/gopd/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar GetIntrinsic = require('get-intrinsic');\r\n\r\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\r\n\r\nif ($gOPD) {\r\n\ttry {\r\n\t\t$gOPD([], 'length');\r\n\t} catch (e) {\r\n\t\t// IE 8 has a broken gOPD\r\n\t\t$gOPD = null;\r\n\t}\r\n}\r\n\r\nmodule.exports = $gOPD;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/gopd/index.js b/node_modules/gopd/index.js
--- a/node_modules/gopd/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/gopd/index.js	(date 1753913035641)
@@ -1,8 +1,7 @@
 'use strict';
 
-var GetIntrinsic = require('get-intrinsic');
-
-var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
+/** @type {import('.')} */
+var $gOPD = require('./gOPD');
 
 if ($gOPD) {
 	try {
Index: node_modules/dotenv/lib/main.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// TypeScript Version: 3.0\r\n/// <reference types=\"node\" />\r\nimport type { URL } from 'url';\r\n\r\nexport interface DotenvParseOutput {\r\n  [name: string]: string;\r\n}\r\n\r\n/**\r\n * Parses a string or buffer in the .env file format into an object.\r\n *\r\n * See https://dotenvx.com/docs\r\n *\r\n * @param src - contents to be parsed. example: `'DB_HOST=localhost'`\r\n * @returns an object with keys and values based on `src`. example: `{ DB_HOST : 'localhost' }`\r\n */\r\nexport function parse<T extends DotenvParseOutput = DotenvParseOutput>(\r\n  src: string | Buffer\r\n): T;\r\n\r\nexport interface DotenvConfigOptions {\r\n  /**\r\n   * Default: `path.resolve(process.cwd(), '.env')`\r\n   *\r\n   * Specify a custom path if your file containing environment variables is located elsewhere.\r\n   * Can also be an array of strings, specifying multiple paths.\r\n   *\r\n   * example: `require('dotenv').config({ path: '/custom/path/to/.env' })`\r\n   * example: `require('dotenv').config({ path: ['/path/to/first.env', '/path/to/second.env'] })`\r\n   */\r\n  path?: string | string[] | URL;\r\n\r\n  /**\r\n   * Default: `utf8`\r\n   *\r\n   * Specify the encoding of your file containing environment variables.\r\n   *\r\n   * example: `require('dotenv').config({ encoding: 'latin1' })`\r\n   */\r\n  encoding?: string;\r\n\r\n  /**\r\n   * Default: `false`\r\n   *\r\n   * Turn on logging to help debug why certain keys or values are not being set as you expect.\r\n   *\r\n   * example: `require('dotenv').config({ debug: process.env.DEBUG })`\r\n   */\r\n  debug?: boolean;\r\n\r\n  /**\r\n   * Default: `false`\r\n   *\r\n   * Override any environment variables that have already been set on your machine with values from your .env file.\r\n   *\r\n   * example: `require('dotenv').config({ override: true })`\r\n   */\r\n  override?: boolean;\r\n\r\n  /**\r\n   * Default: `process.env`\r\n   *\r\n   * Specify an object to write your secrets to. Defaults to process.env environment variables.\r\n   *\r\n   * example: `const processEnv = {}; require('dotenv').config({ processEnv: processEnv })`\r\n   */\r\n  processEnv?: DotenvPopulateInput;\r\n\r\n  /**\r\n   * Default: `undefined`\r\n   *\r\n   * Pass the DOTENV_KEY directly to config options. Defaults to looking for process.env.DOTENV_KEY environment variable. Note this only applies to decrypting .env.vault files. If passed as null or undefined, or not passed at all, dotenv falls back to its traditional job of parsing a .env file.\r\n   *\r\n   * example: `require('dotenv').config({ DOTENV_KEY: 'dotenv://:key_1234…@dotenvx.com/vault/.env.vault?environment=production' })`\r\n   */\r\n  DOTENV_KEY?: string;\r\n}\r\n\r\nexport interface DotenvConfigOutput {\r\n  error?: Error;\r\n  parsed?: DotenvParseOutput;\r\n}\r\n\r\nexport interface DotenvPopulateOptions {\r\n  /**\r\n   * Default: `false`\r\n   *\r\n   * Turn on logging to help debug why certain keys or values are not being set as you expect.\r\n   *\r\n   * example: `require('dotenv').config({ debug: process.env.DEBUG })`\r\n   */\r\n  debug?: boolean;\r\n\r\n  /**\r\n   * Default: `false`\r\n   *\r\n   * Override any environment variables that have already been set on your machine with values from your .env file.\r\n   *\r\n   * example: `require('dotenv').config({ override: true })`\r\n   */\r\n  override?: boolean;\r\n}\r\n\r\nexport interface DotenvPopulateInput {\r\n  [name: string]: string;\r\n}\r\n\r\n/**\r\n * Loads `.env` file contents into process.env by default. If `DOTENV_KEY` is present, it smartly attempts to load encrypted `.env.vault` file contents into process.env.\r\n *\r\n * See https://dotenvx.com/docs\r\n *\r\n * @param options - additional options. example: `{ path: './custom/path', encoding: 'latin1', debug: true, override: false }`\r\n * @returns an object with a `parsed` key if successful or `error` key if an error occurred. example: { parsed: { KEY: 'value' } }\r\n *\r\n */\r\nexport function config(options?: DotenvConfigOptions): DotenvConfigOutput;\r\n\r\n/**\r\n * Loads `.env` file contents into process.env.\r\n *\r\n * See https://dotenvx.com/docs\r\n *\r\n * @param options - additional options. example: `{ path: './custom/path', encoding: 'latin1', debug: true, override: false }`\r\n * @returns an object with a `parsed` key if successful or `error` key if an error occurred. example: { parsed: { KEY: 'value' } }\r\n *\r\n */\r\nexport function configDotenv(options?: DotenvConfigOptions): DotenvConfigOutput;\r\n\r\n/**\r\n * Loads `source` json contents into `target` like process.env.\r\n *\r\n * See https://dotenvx.com/docs\r\n *\r\n * @param processEnv - the target JSON object. in most cases use process.env but you can also pass your own JSON object\r\n * @param parsed - the source JSON object\r\n * @param options - additional options. example: `{ debug: true, override: false }`\r\n * @returns {void}\r\n *\r\n */\r\nexport function populate(processEnv: DotenvPopulateInput, parsed: DotenvPopulateInput, options?: DotenvConfigOptions): void;\r\n\r\n/**\r\n * Decrypt ciphertext\r\n *\r\n * See https://dotenvx.com/docs\r\n *\r\n * @param encrypted - the encrypted ciphertext string\r\n * @param keyStr - the decryption key string\r\n * @returns {string}\r\n *\r\n */\r\nexport function decrypt(encrypted: string, keyStr: string): string;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/dotenv/lib/main.d.ts b/node_modules/dotenv/lib/main.d.ts
--- a/node_modules/dotenv/lib/main.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/dotenv/lib/main.d.ts	(date 1753913035724)
@@ -39,6 +39,15 @@
    */
   encoding?: string;
 
+  /**
+   * Default: `false`
+   *
+   * Suppress all output (except errors).
+   *
+   * example: `require('dotenv').config({ quiet: true })`
+   */
+  quiet?: boolean;
+
   /**
    * Default: `false`
    *
@@ -110,7 +119,7 @@
  *
  * See https://dotenvx.com/docs
  *
- * @param options - additional options. example: `{ path: './custom/path', encoding: 'latin1', debug: true, override: false }`
+ * @param options - additional options. example: `{ path: './custom/path', encoding: 'latin1', quiet: false, debug: true, override: false }`
  * @returns an object with a `parsed` key if successful or `error` key if an error occurred. example: { parsed: { KEY: 'value' } }
  *
  */
@@ -121,7 +130,7 @@
  *
  * See https://dotenvx.com/docs
  *
- * @param options - additional options. example: `{ path: './custom/path', encoding: 'latin1', debug: true, override: false }`
+ * @param options - additional options. example: `{ path: './custom/path', encoding: 'latin1', quiet: false, debug: true, override: false }`
  * @returns an object with a `parsed` key if successful or `error` key if an error occurred. example: { parsed: { KEY: 'value' } }
  *
  */
@@ -134,7 +143,7 @@
  *
  * @param processEnv - the target JSON object. in most cases use process.env but you can also pass your own JSON object
  * @param parsed - the source JSON object
- * @param options - additional options. example: `{ debug: true, override: false }`
+ * @param options - additional options. example: `{ quiet: false, debug: true, override: false }`
  * @returns {void}
  *
  */
Index: node_modules/gopd/CHANGELOG.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [v1.0.1](https://github.com/ljharb/gopd/compare/v1.0.0...v1.0.1) - 2022-11-01\r\n\r\n### Commits\r\n\r\n- [Fix] actually export gOPD instead of dP [`4b624bf`](https://github.com/ljharb/gopd/commit/4b624bfbeff788c5e3ff16d9443a83627847234f)\r\n\r\n## v1.0.0 - 2022-11-01\r\n\r\n### Commits\r\n\r\n- Initial implementation, tests, readme [`0911e01`](https://github.com/ljharb/gopd/commit/0911e012cd642092bd88b732c161c58bf4f20bea)\r\n- Initial commit [`b84e33f`](https://github.com/ljharb/gopd/commit/b84e33f5808a805ac57ff88d4247ad935569acbe)\r\n- [actions] add reusable workflows [`12ae28a`](https://github.com/ljharb/gopd/commit/12ae28ae5f50f86e750215b6e2188901646d0119)\r\n- npm init [`280118b`](https://github.com/ljharb/gopd/commit/280118badb45c80b4483836b5cb5315bddf6e582)\r\n- [meta] add `auto-changelog` [`bb78de5`](https://github.com/ljharb/gopd/commit/bb78de5639a180747fb290c28912beaaf1615709)\r\n- [meta] create FUNDING.yml; add `funding` in package.json [`11c22e6`](https://github.com/ljharb/gopd/commit/11c22e6355bb01f24e7fac4c9bb3055eb5b25002)\r\n- [meta] use `npmignore` to autogenerate an npmignore file [`4f4537a`](https://github.com/ljharb/gopd/commit/4f4537a843b39f698c52f072845092e6fca345bb)\r\n- Only apps should have lockfiles [`c567022`](https://github.com/ljharb/gopd/commit/c567022a18573aa7951cf5399445d9840e23e98b)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/gopd/CHANGELOG.md b/node_modules/gopd/CHANGELOG.md
--- a/node_modules/gopd/CHANGELOG.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/gopd/CHANGELOG.md	(date 1753913035659)
@@ -5,6 +5,26 @@
 The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
 and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
 
+## [v1.2.0](https://github.com/ljharb/gopd/compare/v1.1.0...v1.2.0) - 2024-12-03
+
+### Commits
+
+- [New] add `gOPD` entry point; remove `get-intrinsic` [`5b61232`](https://github.com/ljharb/gopd/commit/5b61232dedea4591a314bcf16101b1961cee024e)
+
+## [v1.1.0](https://github.com/ljharb/gopd/compare/v1.0.1...v1.1.0) - 2024-11-29
+
+### Commits
+
+- [New] add types [`f585e39`](https://github.com/ljharb/gopd/commit/f585e397886d270e4ba84e53d226e4f9ca2eb0e6)
+- [Dev Deps] update `@ljharb/eslint-config`, `auto-changelog`, `tape` [`0b8e4fd`](https://github.com/ljharb/gopd/commit/0b8e4fded64397a7726a9daa144a6cc9a5e2edfa)
+- [Dev Deps] update `aud`, `npmignore`, `tape` [`48378b2`](https://github.com/ljharb/gopd/commit/48378b2443f09a4f7efbd0fb6c3ee845a6cabcf3)
+- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `tape` [`78099ee`](https://github.com/ljharb/gopd/commit/78099eeed41bfdc134c912280483689cc8861c31)
+- [Tests] replace `aud` with `npm audit` [`4e0d0ac`](https://github.com/ljharb/gopd/commit/4e0d0ac47619d24a75318a8e1f543ee04b2a2632)
+- [meta] add missing `engines.node` [`1443316`](https://github.com/ljharb/gopd/commit/14433165d07835c680155b3dfd62d9217d735eca)
+- [Deps] update `get-intrinsic` [`eee5f51`](https://github.com/ljharb/gopd/commit/eee5f51769f3dbaf578b70e2a3199116b01aa670)
+- [Deps] update `get-intrinsic` [`550c378`](https://github.com/ljharb/gopd/commit/550c3780e3a9c77b62565712a001b4ed64ea61f5)
+- [Dev Deps] add missing peer dep [`8c2ecf8`](https://github.com/ljharb/gopd/commit/8c2ecf848122e4e30abfc5b5086fb48b390dce75)
+
 ## [v1.0.1](https://github.com/ljharb/gopd/compare/v1.0.0...v1.0.1) - 2022-11-01
 
 ### Commits
Index: node_modules/gopd/test/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar test = require('tape');\r\nvar gOPD = require('../');\r\n\r\ntest('gOPD', function (t) {\r\n\tt.test('supported', { skip: !gOPD }, function (st) {\r\n\t\tst.equal(typeof gOPD, 'function', 'is a function');\r\n\r\n\t\tvar obj = { x: 1 };\r\n\t\tst.ok('x' in obj, 'property exists');\r\n\r\n\t\tvar desc = gOPD(obj, 'x');\r\n\t\tst.deepEqual(\r\n\t\t\tdesc,\r\n\t\t\t{\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: 1,\r\n\t\t\t\twritable: true\r\n\t\t\t},\r\n\t\t\t'descriptor is as expected'\r\n\t\t);\r\n\r\n\t\tst.end();\r\n\t});\r\n\r\n\tt.test('not supported', { skip: gOPD }, function (st) {\r\n\t\tst.notOk(gOPD, 'is falsy');\r\n\r\n\t\tst.end();\r\n\t});\r\n\r\n\tt.end();\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/gopd/test/index.js b/node_modules/gopd/test/index.js
--- a/node_modules/gopd/test/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/gopd/test/index.js	(date 1753913035653)
@@ -10,6 +10,7 @@
 		var obj = { x: 1 };
 		st.ok('x' in obj, 'property exists');
 
+		// @ts-expect-error TS can't figure out narrowing from `skip`
 		var desc = gOPD(obj, 'x');
 		st.deepEqual(
 			desc,
@@ -25,7 +26,7 @@
 		st.end();
 	});
 
-	t.test('not supported', { skip: gOPD }, function (st) {
+	t.test('not supported', { skip: !!gOPD }, function (st) {
 		st.notOk(gOPD, 'is falsy');
 
 		st.end();
Index: node_modules/nodemon/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"nodemon\",\r\n  \"homepage\": \"https://nodemon.io\",\r\n  \"author\": {\r\n    \"name\": \"Remy Sharp\",\r\n    \"url\": \"https://github.com/remy\"\r\n  },\r\n  \"bin\": {\r\n    \"nodemon\": \"./bin/nodemon.js\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">=10\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/remy/nodemon.git\"\r\n  },\r\n  \"description\": \"Simple monitor script for use during development of a Node.js app.\",\r\n  \"keywords\": [\r\n    \"cli\",\r\n    \"monitor\",\r\n    \"monitor\",\r\n    \"development\",\r\n    \"restart\",\r\n    \"autoload\",\r\n    \"reload\",\r\n    \"terminal\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"main\": \"./lib/nodemon\",\r\n  \"scripts\": {\r\n    \"commitmsg\": \"commitlint -e\",\r\n    \"coverage\": \"istanbul cover _mocha -- --timeout 30000 --ui bdd --reporter list test/**/*.test.js\",\r\n    \"lint\": \"eslint lib/**/*.js\",\r\n    \"test\": \"npm run lint && npm run spec\",\r\n    \"spec\": \"for FILE in test/**/*.test.js; do echo $FILE; TEST=1 mocha --exit --timeout 30000 $FILE; if [ $? -ne 0 ]; then exit 1; fi; sleep 1; done\",\r\n    \"postspec\": \"npm run clean\",\r\n    \"clean\": \"rm -rf test/fixtures/test*.js test/fixtures/test*.md\",\r\n    \"web\": \"node web\",\r\n    \"semantic-release\": \"semantic-release\",\r\n    \"prepush\": \"npm run lint\",\r\n    \"killall\": \"ps auxww | grep node | grep -v grep | awk '{ print $2 }' | xargs kill -9\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@commitlint/cli\": \"^11.0.0\",\r\n    \"@commitlint/config-conventional\": \"^11.0.0\",\r\n    \"async\": \"1.4.2\",\r\n    \"coffee-script\": \"~1.7.1\",\r\n    \"eslint\": \"^7.32.0\",\r\n    \"husky\": \"^7.0.4\",\r\n    \"mocha\": \"^2.5.3\",\r\n    \"nyc\": \"^15.1.0\",\r\n    \"proxyquire\": \"^1.8.0\",\r\n    \"semantic-release\": \"^18.0.0\",\r\n    \"should\": \"~4.0.0\"\r\n  },\r\n  \"dependencies\": {\r\n    \"chokidar\": \"^3.5.2\",\r\n    \"debug\": \"^4\",\r\n    \"ignore-by-default\": \"^1.0.1\",\r\n    \"minimatch\": \"^3.1.2\",\r\n    \"pstree.remy\": \"^1.1.8\",\r\n    \"semver\": \"^7.5.3\",\r\n    \"simple-update-notifier\": \"^2.0.0\",\r\n    \"supports-color\": \"^5.5.0\",\r\n    \"touch\": \"^3.1.0\",\r\n    \"undefsafe\": \"^2.0.5\"\r\n  },\r\n  \"version\": \"3.1.0\",\r\n  \"funding\": {\r\n    \"type\": \"opencollective\",\r\n    \"url\": \"https://opencollective.com/nodemon\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/nodemon/package.json b/node_modules/nodemon/package.json
--- a/node_modules/nodemon/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/nodemon/package.json	(date 1753913035602)
@@ -27,6 +27,7 @@
     "terminal"
   ],
   "license": "MIT",
+  "types": "./index.d.ts",
   "main": "./lib/nodemon",
   "scripts": {
     "commitmsg": "commitlint -e",
@@ -66,7 +67,7 @@
     "touch": "^3.1.0",
     "undefsafe": "^2.0.5"
   },
-  "version": "3.1.0",
+  "version": "3.1.10",
   "funding": {
     "type": "opencollective",
     "url": "https://opencollective.com/nodemon"
Index: node_modules/cookie-parser/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"cookie-parser\",\r\n  \"description\": \"Parse HTTP request cookies\",\r\n  \"version\": \"1.4.6\",\r\n  \"author\": \"TJ Holowaychuk <tj@vision-media.ca> (http://tjholowaychuk.com)\",\r\n  \"contributors\": [\r\n    \"Douglas Christopher Wilson <doug@somethingdoug.com>\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"repository\": \"expressjs/cookie-parser\",\r\n  \"keywords\": [\r\n    \"cookie\",\r\n    \"middleware\"\r\n  ],\r\n  \"dependencies\": {\r\n    \"cookie\": \"0.4.1\",\r\n    \"cookie-signature\": \"1.0.6\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"eslint\": \"7.32.0\",\r\n    \"eslint-config-standard\": \"14.1.1\",\r\n    \"eslint-plugin-import\": \"2.25.2\",\r\n    \"eslint-plugin-markdown\": \"2.2.1\",\r\n    \"eslint-plugin-node\": \"11.1.0\",\r\n    \"eslint-plugin-promise\": \"4.3.1\",\r\n    \"eslint-plugin-standard\": \"4.1.0\",\r\n    \"mocha\": \"9.1.3\",\r\n    \"nyc\": \"15.1.0\",\r\n    \"supertest\": \"6.1.6\"\r\n  },\r\n  \"files\": [\r\n    \"LICENSE\",\r\n    \"HISTORY.md\",\r\n    \"index.js\"\r\n  ],\r\n  \"engines\": {\r\n    \"node\": \">= 0.8.0\"\r\n  },\r\n  \"scripts\": {\r\n    \"lint\": \"eslint .\",\r\n    \"test\": \"mocha --reporter spec --bail --check-leaks test/\",\r\n    \"test-ci\": \"nyc --reporter=lcov --reporter=text npm test\",\r\n    \"test-cov\": \"nyc --reporter=html --reporter=text npm test\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/cookie-parser/package.json b/node_modules/cookie-parser/package.json
--- a/node_modules/cookie-parser/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/cookie-parser/package.json	(date 1753913035715)
@@ -1,7 +1,7 @@
 {
   "name": "cookie-parser",
   "description": "Parse HTTP request cookies",
-  "version": "1.4.6",
+  "version": "1.4.7",
   "author": "TJ Holowaychuk <tj@vision-media.ca> (http://tjholowaychuk.com)",
   "contributors": [
     "Douglas Christopher Wilson <doug@somethingdoug.com>"
@@ -13,7 +13,7 @@
     "middleware"
   ],
   "dependencies": {
-    "cookie": "0.4.1",
+    "cookie": "0.7.2",
     "cookie-signature": "1.0.6"
   },
   "devDependencies": {
@@ -24,7 +24,7 @@
     "eslint-plugin-node": "11.1.0",
     "eslint-plugin-promise": "4.3.1",
     "eslint-plugin-standard": "4.1.0",
-    "mocha": "9.1.3",
+    "mocha": "9.2.1",
     "nyc": "15.1.0",
     "supertest": "6.1.6"
   },
Index: node_modules/postgresql-client/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"postgresql-client\",\r\n  \"description\": \"Enterprise level PostgreSQL client for JavaScript\",\r\n  \"version\": \"2.11.0\",\r\n  \"author\": \"Panates\",\r\n  \"contributors\": [\r\n    \"Eray Hanoglu <e.hanoglu@panates.com>\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/panates/postgresql-client.git\"\r\n  },\r\n  \"type\": \"module\",\r\n  \"main\": \"./cjs/index.js\",\r\n  \"module\": \"./esm/index.js\",\r\n  \"types\": \"typings/index.d.ts\",\r\n  \"dependencies\": {\r\n    \"doublylinked\": \"^2.5.4\",\r\n    \"lightning-pool\": \"^4.2.2\",\r\n    \"postgres-bytea\": \"^3.0.0\",\r\n    \"power-tasks\": \"^1.7.3\",\r\n    \"putil-merge\": \"^3.12.1\",\r\n    \"putil-promisify\": \"^1.10.1\",\r\n    \"putil-varhelpers\": \"^1.6.5\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">=16.0\"\r\n  },\r\n  \"files\": [\r\n    \"cjs/\",\r\n    \"esm/\",\r\n    \"typings/\",\r\n    \"LICENSE\",\r\n    \"README.md\",\r\n    \"CHANGELOG.md\"\r\n  ],\r\n  \"keywords\": [\r\n    \"postgresql\",\r\n    \"postgres\",\r\n    \"postgre\",\r\n    \"pg\",\r\n    \"database\",\r\n    \"db\",\r\n    \"driver\",\r\n    \"client\",\r\n    \"backend\",\r\n    \"rdbms\",\r\n    \"sql\",\r\n    \"typescript\",\r\n    \"ts\",\r\n    \"esm\"\r\n  ]\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/postgresql-client/package.json b/node_modules/postgresql-client/package.json
--- a/node_modules/postgresql-client/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/postgresql-client/package.json	(date 1753913034987)
@@ -1,7 +1,7 @@
 {
   "name": "postgresql-client",
   "description": "Enterprise level PostgreSQL client for JavaScript",
-  "version": "2.11.0",
+  "version": "2.13.0",
   "author": "Panates",
   "contributors": [
     "Eray Hanoglu <e.hanoglu@panates.com>"
@@ -16,13 +16,7 @@
   "module": "./esm/index.js",
   "types": "typings/index.d.ts",
   "dependencies": {
-    "doublylinked": "^2.5.4",
-    "lightning-pool": "^4.2.2",
-    "postgres-bytea": "^3.0.0",
-    "power-tasks": "^1.7.3",
-    "putil-merge": "^3.12.1",
-    "putil-promisify": "^1.10.1",
-    "putil-varhelpers": "^1.6.5"
+    "postgrejs": "^2.15.1"
   },
   "engines": {
     "node": ">=16.0"
Index: node_modules/lightning-pool/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"lightning-pool\",\r\n  \"description\": \"Fastest generic Pool written with TypeScript\",\r\n  \"version\": \"4.2.2\",\r\n  \"author\": \"Panates Ltd.\",\r\n  \"contributors\": [\r\n    \"Eray Hanoglu <e.hanoglu@panates.com>\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"repository\": \"panates/lightning-pool\",\r\n  \"keywords\": [\r\n    \"pool\",\r\n    \"generic\",\r\n    \"generic-pool\"\r\n  ],\r\n  \"dependencies\": {\r\n    \"doublylinked\": \"^2.5.3\",\r\n    \"putil-promisify\": \"^1.10.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@babel/eslint-parser\": \"^7.22.15\",\r\n    \"@types/jest\": \"^29.5.4\",\r\n    \"@types/node\": \"^20.6.0\",\r\n    \"@typescript-eslint/eslint-plugin\": \"^6.6.0\",\r\n    \"@typescript-eslint/parser\": \"^6.6.0\",\r\n    \"dotenv\": \"^16.3.1\",\r\n    \"eslint\": \"^8.49.0\",\r\n    \"eslint-config-google\": \"^0.14.0\",\r\n    \"eslint-plugin-import\": \"^2.28.1\",\r\n    \"eslint-plugin-security\": \"^1.7.1\",\r\n    \"eslint-plugin-simple-import-sort\": \"^10.0.0\",\r\n    \"eslint-plugin-unused-imports\": \"^3.0.0\",\r\n    \"jest\": \"^29.6.4\",\r\n    \"npm-run-path\": \"^5.1.0\",\r\n    \"ts-cleanup\": \"^0.2.6\",\r\n    \"ts-jest\": \"^29.1.1\",\r\n    \"ts-loader\": \"^9.4.4\",\r\n    \"ts-node\": \"^10.9.1\",\r\n    \"tsconfig-paths\": \"^4.2.0\",\r\n    \"typescript\": \"^5.2.2\"\r\n  },\r\n  \"type\": \"module\",\r\n  \"types\": \"esm/index.d.ts\",\r\n  \"exports\": {\r\n    \".\": {\r\n      \"require\": \"./cjs/index.js\",\r\n      \"default\": \"./esm/index.js\"\r\n    },\r\n    \"./cjs\": \"./cjs/index.js\",\r\n    \"./esm\": \"./esm/index.js\"\r\n  },\r\n  \"files\": [\r\n    \"bin/\",\r\n    \"cjs/\",\r\n    \"esm/\",\r\n    \"LICENSE\",\r\n    \"README.md\"\r\n  ],\r\n  \"scripts\": {\r\n    \"lint\": \"eslint .\",\r\n    \"clean\": \"npm run clean:src && npm run clean:dist\",\r\n    \"clean:dist\": \"rimraf cjs esm coverage\",\r\n    \"clean:src\": \"ts-cleanup -s src --all | ts-cleanup -s test\",\r\n    \"prebuild\": \"npm run clean:dist && npm run lint\",\r\n    \"build\": \"npm run build:cjs && npm run build:esm\",\r\n    \"build:cjs\": \"tsc -b tsconfig-build-cjs.json\",\r\n    \"build:esm\": \"tsc -b tsconfig-build-esm.json\",\r\n    \"postbuild\": \"cp package.cjs.json ./cjs/package.json\",\r\n    \"test\": \"jest --runInBand --detectOpenHandles\",\r\n    \"precover\": \"rimraf coverage\",\r\n    \"cover\": \"jest --maxWorkers=1 --coverage\",\r\n    \"precitest\": \"rimraf coverage\",\r\n    \"citest\": \"jest --coverage --coverageReporters=lcov\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/lightning-pool/package.json b/node_modules/lightning-pool/package.json
--- a/node_modules/lightning-pool/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/lightning-pool/package.json	(date 1753913035676)
@@ -1,75 +1,49 @@
 {
   "name": "lightning-pool",
   "description": "Fastest generic Pool written with TypeScript",
-  "version": "4.2.2",
-  "author": "Panates Ltd.",
+  "version": "4.11.1",
+  "author": "Panates",
+  "license": "MIT",
+  "dependencies": {
+    "doublylinked": "^2.5.6",
+    "putil-promisify": "^1.10.1",
+    "tslib": "^2.8.1"
+  },
+  "type": "module",
+  "exports": {
+    ".": {
+      "import": {
+        "types": "./types/index.d.ts",
+        "default": "./esm/index.js"
+      },
+      "require": {
+        "types": "./types/index.d.cts",
+        "default": "./cjs/index.js"
+      },
+      "default": "./esm/index.js"
+    },
+    "./package.json": "./package.json"
+  },
+  "main": "./cjs/index.js",
+  "module": "./esm/index.js",
+  "types": "./types/index.d.ts",
+  "repository": {
+    "type": "git",
+    "url": "git+https://github.com/panates/lightning-pool.git"
+  },
   "contributors": [
     "Eray Hanoglu <e.hanoglu@panates.com>"
   ],
-  "license": "MIT",
-  "repository": "panates/lightning-pool",
   "keywords": [
     "pool",
     "generic",
     "generic-pool"
   ],
-  "dependencies": {
-    "doublylinked": "^2.5.3",
-    "putil-promisify": "^1.10.1"
-  },
-  "devDependencies": {
-    "@babel/eslint-parser": "^7.22.15",
-    "@types/jest": "^29.5.4",
-    "@types/node": "^20.6.0",
-    "@typescript-eslint/eslint-plugin": "^6.6.0",
-    "@typescript-eslint/parser": "^6.6.0",
-    "dotenv": "^16.3.1",
-    "eslint": "^8.49.0",
-    "eslint-config-google": "^0.14.0",
-    "eslint-plugin-import": "^2.28.1",
-    "eslint-plugin-security": "^1.7.1",
-    "eslint-plugin-simple-import-sort": "^10.0.0",
-    "eslint-plugin-unused-imports": "^3.0.0",
-    "jest": "^29.6.4",
-    "npm-run-path": "^5.1.0",
-    "ts-cleanup": "^0.2.6",
-    "ts-jest": "^29.1.1",
-    "ts-loader": "^9.4.4",
-    "ts-node": "^10.9.1",
-    "tsconfig-paths": "^4.2.0",
-    "typescript": "^5.2.2"
-  },
-  "type": "module",
-  "types": "esm/index.d.ts",
-  "exports": {
-    ".": {
-      "require": "./cjs/index.js",
-      "default": "./esm/index.js"
-    },
-    "./cjs": "./cjs/index.js",
-    "./esm": "./esm/index.js"
-  },
   "files": [
-    "bin/",
     "cjs/",
     "esm/",
+    "types/",
     "LICENSE",
     "README.md"
-  ],
-  "scripts": {
-    "lint": "eslint .",
-    "clean": "npm run clean:src && npm run clean:dist",
-    "clean:dist": "rimraf cjs esm coverage",
-    "clean:src": "ts-cleanup -s src --all | ts-cleanup -s test",
-    "prebuild": "npm run clean:dist && npm run lint",
-    "build": "npm run build:cjs && npm run build:esm",
-    "build:cjs": "tsc -b tsconfig-build-cjs.json",
-    "build:esm": "tsc -b tsconfig-build-esm.json",
-    "postbuild": "cp package.cjs.json ./cjs/package.json",
-    "test": "jest --runInBand --detectOpenHandles",
-    "precover": "rimraf coverage",
-    "cover": "jest --maxWorkers=1 --coverage",
-    "precitest": "rimraf coverage",
-    "citest": "jest --coverage --coverageReporters=lcov"
-  }
-}
+  ]
+}
\ No newline at end of file
Index: node_modules/power-tasks/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"power-tasks\",\r\n  \"description\": \"Powerful task management for JavaScript\",\r\n  \"version\": \"1.7.3\",\r\n  \"author\": \"Panates\",\r\n  \"license\": \"MIT\",\r\n  \"contributors\": [\r\n    \"Eray Hanoglu <e.hanoglu@panates.com>\"\r\n  ],\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/panates/power-tasks.git\"\r\n  },\r\n  \"type\": \"module\",\r\n  \"main\": \"./cjs/index.js\",\r\n  \"module\": \"./esm/index.js\",\r\n  \"types\": \"./typings/index.d.ts\",\r\n  \"dependencies\": {\r\n    \"doublylinked\": \"^2.5.4\",\r\n    \"strict-typed-events\": \"^2.3.3\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">=16.0\"\r\n  },\r\n  \"files\": [\r\n    \"cjs/\",\r\n    \"esm/\",\r\n    \"typings/\",\r\n    \"LICENSE\",\r\n    \"README.md\",\r\n    \"CHANGELOG.md\"\r\n  ],\r\n  \"keywords\": [\r\n    \"javascript\",\r\n    \"typescript\",\r\n    \"task\",\r\n    \"job\",\r\n    \"queue\"\r\n  ]\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/power-tasks/package.json b/node_modules/power-tasks/package.json
--- a/node_modules/power-tasks/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/power-tasks/package.json	(date 1753913035304)
@@ -1,9 +1,32 @@
 {
   "name": "power-tasks",
   "description": "Powerful task management for JavaScript",
-  "version": "1.7.3",
+  "version": "1.11.0",
   "author": "Panates",
   "license": "MIT",
+  "dependencies": {
+    "doublylinked": "^2.5.4",
+    "strict-typed-events": "^2.8.0",
+    "tslib": "^2.6.3"
+  },
+  "type": "module",
+  "exports": {
+    ".": {
+      "import": {
+        "types": "./types/index.d.ts",
+        "default": "./esm/index.js"
+      },
+      "require": {
+        "types": "./types/index.d.cts",
+        "default": "./cjs/index.js"
+      },
+      "default": "./esm/index.js"
+    },
+    "./package.json": "./package.json"
+  },
+  "main": "./cjs/index.js",
+  "module": "./esm/index.js",
+  "types": "./types/index.d.ts",
   "contributors": [
     "Eray Hanoglu <e.hanoglu@panates.com>"
   ],
@@ -11,21 +34,13 @@
     "type": "git",
     "url": "https://github.com/panates/power-tasks.git"
   },
-  "type": "module",
-  "main": "./cjs/index.js",
-  "module": "./esm/index.js",
-  "types": "./typings/index.d.ts",
-  "dependencies": {
-    "doublylinked": "^2.5.4",
-    "strict-typed-events": "^2.3.3"
-  },
   "engines": {
     "node": ">=16.0"
   },
   "files": [
     "cjs/",
     "esm/",
-    "typings/",
+    "types/",
     "LICENSE",
     "README.md",
     "CHANGELOG.md"
Index: node_modules/strict-typed-events/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"strict-typed-events\",\r\n  \"description\": \"Type safe and promise supported replacement for node's EventEmitter\",\r\n  \"version\": \"2.3.3\",\r\n  \"author\": \"Panates\",\r\n  \"contributors\": [\r\n    \"Eray Hanoglu <e.hanoglu@panates.com>\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"https://github.com/panates/strict-typed-events.git\"\r\n  },\r\n  \"type\": \"module\",\r\n  \"main\": \"./cjs/index.js\",\r\n  \"module\": \"./esm/index.js\",\r\n  \"types\": \"./typings/index.d.ts\",\r\n  \"keywords\": [\r\n    \"type-safe\",\r\n    \"typescript\",\r\n    \"EventEmitter\",\r\n    \"events\",\r\n    \"emitter\"\r\n  ],\r\n  \"dependencies\": {\r\n    \"putil-promisify\": \"^1.10.1\",\r\n    \"ts-gems\": \"^3.1.0\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">=16.0\"\r\n  },\r\n  \"files\": [\r\n    \"cjs/\",\r\n    \"esm/\",\r\n    \"typings/\",\r\n    \"LICENSE\",\r\n    \"README.md\",\r\n    \"CHANGELOG.md\"\r\n  ]\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/strict-typed-events/package.json b/node_modules/strict-typed-events/package.json
--- a/node_modules/strict-typed-events/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/strict-typed-events/package.json	(date 1753913035113)
@@ -1,40 +1,55 @@
 {
   "name": "strict-typed-events",
   "description": "Type safe and promise supported replacement for node's EventEmitter",
-  "version": "2.3.3",
+  "version": "2.8.0",
   "author": "Panates",
+  "license": "MIT",
+  "dependencies": {
+    "putil-promisify": "^1.10.1",
+    "ts-gems": "^3.5.0",
+    "tslib": "^2.6.3"
+  },
+  "type": "module",
+  "exports": {
+    ".": {
+      "import": {
+        "types": "./types/index.d.ts",
+        "default": "./esm/index.js"
+      },
+      "require": {
+        "types": "./types/index.d.cts",
+        "default": "./cjs/index.js"
+      },
+      "default": "./esm/index.js"
+    },
+    "./package.json": "./package.json"
+  },
+  "main": "./cjs/index.js",
+  "module": "./esm/index.js",
+  "types": "./types/index.d.ts",
   "contributors": [
     "Eray Hanoglu <e.hanoglu@panates.com>"
   ],
-  "license": "MIT",
   "repository": {
     "type": "git",
     "url": "https://github.com/panates/strict-typed-events.git"
   },
-  "type": "module",
-  "main": "./cjs/index.js",
-  "module": "./esm/index.js",
-  "types": "./typings/index.d.ts",
-  "keywords": [
-    "type-safe",
-    "typescript",
-    "EventEmitter",
-    "events",
-    "emitter"
-  ],
-  "dependencies": {
-    "putil-promisify": "^1.10.1",
-    "ts-gems": "^3.1.0"
-  },
   "engines": {
     "node": ">=16.0"
   },
   "files": [
     "cjs/",
     "esm/",
-    "typings/",
+    "types/",
     "LICENSE",
     "README.md",
     "CHANGELOG.md"
+  ],
+  "keywords": [
+    "type-safe",
+    "typescript",
+    "EventEmitter",
+    "events",
+    "emitter"
   ]
 }
\ No newline at end of file
Index: node_modules/send/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"send\",\r\n  \"description\": \"Better streaming static file server with Range and conditional-GET support\",\r\n  \"version\": \"0.18.0\",\r\n  \"author\": \"TJ Holowaychuk <tj@vision-media.ca>\",\r\n  \"contributors\": [\r\n    \"Douglas Christopher Wilson <doug@somethingdoug.com>\",\r\n    \"James Wyatt Cready <jcready@gmail.com>\",\r\n    \"Jesús Leganés Combarro <piranna@gmail.com>\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"repository\": \"pillarjs/send\",\r\n  \"keywords\": [\r\n    \"static\",\r\n    \"file\",\r\n    \"server\"\r\n  ],\r\n  \"dependencies\": {\r\n    \"debug\": \"2.6.9\",\r\n    \"depd\": \"2.0.0\",\r\n    \"destroy\": \"1.2.0\",\r\n    \"encodeurl\": \"~1.0.2\",\r\n    \"escape-html\": \"~1.0.3\",\r\n    \"etag\": \"~1.8.1\",\r\n    \"fresh\": \"0.5.2\",\r\n    \"http-errors\": \"2.0.0\",\r\n    \"mime\": \"1.6.0\",\r\n    \"ms\": \"2.1.3\",\r\n    \"on-finished\": \"2.4.1\",\r\n    \"range-parser\": \"~1.2.1\",\r\n    \"statuses\": \"2.0.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"after\": \"0.8.2\",\r\n    \"eslint\": \"7.32.0\",\r\n    \"eslint-config-standard\": \"14.1.1\",\r\n    \"eslint-plugin-import\": \"2.25.4\",\r\n    \"eslint-plugin-markdown\": \"2.2.1\",\r\n    \"eslint-plugin-node\": \"11.1.0\",\r\n    \"eslint-plugin-promise\": \"5.2.0\",\r\n    \"eslint-plugin-standard\": \"4.1.0\",\r\n    \"mocha\": \"9.2.2\",\r\n    \"nyc\": \"15.1.0\",\r\n    \"supertest\": \"6.2.2\"\r\n  },\r\n  \"files\": [\r\n    \"HISTORY.md\",\r\n    \"LICENSE\",\r\n    \"README.md\",\r\n    \"SECURITY.md\",\r\n    \"index.js\"\r\n  ],\r\n  \"engines\": {\r\n    \"node\": \">= 0.8.0\"\r\n  },\r\n  \"scripts\": {\r\n    \"lint\": \"eslint .\",\r\n    \"test\": \"mocha --check-leaks --reporter spec --bail\",\r\n    \"test-ci\": \"nyc --reporter=lcov --reporter=text npm test\",\r\n    \"test-cov\": \"nyc --reporter=html --reporter=text npm test\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/send/package.json b/node_modules/send/package.json
--- a/node_modules/send/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/send/package.json	(date 1753913035266)
@@ -1,7 +1,7 @@
 {
   "name": "send",
   "description": "Better streaming static file server with Range and conditional-GET support",
-  "version": "0.18.0",
+  "version": "0.19.0",
   "author": "TJ Holowaychuk <tj@vision-media.ca>",
   "contributors": [
     "Douglas Christopher Wilson <doug@somethingdoug.com>",
Index: node_modules/send/HISTORY.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>0.18.0 / 2022-03-23\r\n===================\r\n\r\n  * Fix emitted 416 error missing headers property\r\n  * Limit the headers removed for 304 response\r\n  * deps: depd@2.0.0\r\n    - Replace internal `eval` usage with `Function` constructor\r\n    - Use instance methods on `process` to check for listeners\r\n  * deps: destroy@1.2.0\r\n  * deps: http-errors@2.0.0\r\n    - deps: depd@2.0.0\r\n    - deps: statuses@2.0.1\r\n  * deps: on-finished@2.4.1\r\n  * deps: statuses@2.0.1\r\n\r\n0.17.2 / 2021-12-11\r\n===================\r\n\r\n  * pref: ignore empty http tokens\r\n  * deps: http-errors@1.8.1\r\n    - deps: inherits@2.0.4\r\n    - deps: toidentifier@1.0.1\r\n    - deps: setprototypeof@1.2.0\r\n  * deps: ms@2.1.3\r\n\r\n0.17.1 / 2019-05-10\r\n===================\r\n\r\n  * Set stricter CSP header in redirect & error responses\r\n  * deps: range-parser@~1.2.1\r\n\r\n0.17.0 / 2019-05-03\r\n===================\r\n\r\n  * deps: http-errors@~1.7.2\r\n    - Set constructor name when possible\r\n    - Use `toidentifier` module to make class names\r\n    - deps: depd@~1.1.2\r\n    - deps: setprototypeof@1.1.1\r\n    - deps: statuses@'>= 1.5.0 < 2'\r\n  * deps: mime@1.6.0\r\n    - Add extensions for JPEG-2000 images\r\n    - Add new `font/*` types from IANA\r\n    - Add WASM mapping\r\n    - Update `.bdoc` to `application/bdoc`\r\n    - Update `.bmp` to `image/bmp`\r\n    - Update `.m4a` to `audio/mp4`\r\n    - Update `.rtf` to `application/rtf`\r\n    - Update `.wav` to `audio/wav`\r\n    - Update `.xml` to `application/xml`\r\n    - Update generic extensions to `application/octet-stream`:\r\n      `.deb`, `.dll`, `.dmg`, `.exe`, `.iso`, `.msi`\r\n    - Use mime-score module to resolve extension conflicts\r\n  * deps: ms@2.1.1\r\n    - Add `week`/`w` support\r\n    - Fix negative number handling\r\n  * deps: statuses@~1.5.0\r\n  * perf: remove redundant `path.normalize` call\r\n\r\n0.16.2 / 2018-02-07\r\n===================\r\n\r\n  * Fix incorrect end tag in default error & redirects\r\n  * deps: depd@~1.1.2\r\n    - perf: remove argument reassignment\r\n  * deps: encodeurl@~1.0.2\r\n    - Fix encoding `%` as last character\r\n  * deps: statuses@~1.4.0\r\n\r\n0.16.1 / 2017-09-29\r\n===================\r\n\r\n  * Fix regression in edge-case behavior for empty `path`\r\n\r\n0.16.0 / 2017-09-27\r\n===================\r\n\r\n  * Add `immutable` option\r\n  * Fix missing `</html>` in default error & redirects\r\n  * Use instance methods on steam to check for listeners\r\n  * deps: mime@1.4.1\r\n    - Add 70 new types for file extensions\r\n    - Set charset as \"UTF-8\" for .js and .json\r\n  * perf: improve path validation speed\r\n\r\n0.15.6 / 2017-09-22\r\n===================\r\n\r\n  * deps: debug@2.6.9\r\n  * perf: improve `If-Match` token parsing\r\n\r\n0.15.5 / 2017-09-20\r\n===================\r\n\r\n  * deps: etag@~1.8.1\r\n    - perf: replace regular expression with substring\r\n  * deps: fresh@0.5.2\r\n    - Fix handling of modified headers with invalid dates\r\n    - perf: improve ETag match loop\r\n    - perf: improve `If-None-Match` token parsing\r\n\r\n0.15.4 / 2017-08-05\r\n===================\r\n\r\n  * deps: debug@2.6.8\r\n  * deps: depd@~1.1.1\r\n    - Remove unnecessary `Buffer` loading\r\n  * deps: http-errors@~1.6.2\r\n    - deps: depd@1.1.1\r\n\r\n0.15.3 / 2017-05-16\r\n===================\r\n\r\n  * deps: debug@2.6.7\r\n    - deps: ms@2.0.0\r\n  * deps: ms@2.0.0\r\n\r\n0.15.2 / 2017-04-26\r\n===================\r\n\r\n  * deps: debug@2.6.4\r\n    - Fix `DEBUG_MAX_ARRAY_LENGTH`\r\n    - deps: ms@0.7.3\r\n  * deps: ms@1.0.0\r\n\r\n0.15.1 / 2017-03-04\r\n===================\r\n\r\n  * Fix issue when `Date.parse` does not return `NaN` on invalid date\r\n  * Fix strict violation in broken environments\r\n\r\n0.15.0 / 2017-02-25\r\n===================\r\n\r\n  * Support `If-Match` and `If-Unmodified-Since` headers\r\n  * Add `res` and `path` arguments to `directory` event\r\n  * Remove usage of `res._headers` private field\r\n    - Improves compatibility with Node.js 8 nightly\r\n  * Send complete HTML document in redirect & error responses\r\n  * Set default CSP header in redirect & error responses\r\n  * Use `res.getHeaderNames()` when available\r\n  * Use `res.headersSent` when available\r\n  * deps: debug@2.6.1\r\n    - Allow colors in workers\r\n    - Deprecated `DEBUG_FD` environment variable set to `3` or higher\r\n    - Fix error when running under React Native\r\n    - Use same color for same namespace\r\n    - deps: ms@0.7.2\r\n  * deps: etag@~1.8.0\r\n  * deps: fresh@0.5.0\r\n    - Fix false detection of `no-cache` request directive\r\n    - Fix incorrect result when `If-None-Match` has both `*` and ETags\r\n    - Fix weak `ETag` matching to match spec\r\n    - perf: delay reading header values until needed\r\n    - perf: enable strict mode\r\n    - perf: hoist regular expressions\r\n    - perf: remove duplicate conditional\r\n    - perf: remove unnecessary boolean coercions\r\n    - perf: skip checking modified time if ETag check failed\r\n    - perf: skip parsing `If-None-Match` when no `ETag` header\r\n    - perf: use `Date.parse` instead of `new Date`\r\n  * deps: http-errors@~1.6.1\r\n    - Make `message` property enumerable for `HttpError`s\r\n    - deps: setprototypeof@1.0.3\r\n\r\n0.14.2 / 2017-01-23\r\n===================\r\n\r\n  * deps: http-errors@~1.5.1\r\n    - deps: inherits@2.0.3\r\n    - deps: setprototypeof@1.0.2\r\n    - deps: statuses@'>= 1.3.1 < 2'\r\n  * deps: ms@0.7.2\r\n  * deps: statuses@~1.3.1\r\n\r\n0.14.1 / 2016-06-09\r\n===================\r\n\r\n  * Fix redirect error when `path` contains raw non-URL characters\r\n  * Fix redirect when `path` starts with multiple forward slashes\r\n\r\n0.14.0 / 2016-06-06\r\n===================\r\n\r\n  * Add `acceptRanges` option\r\n  * Add `cacheControl` option\r\n  * Attempt to combine multiple ranges into single range\r\n  * Correctly inherit from `Stream` class\r\n  * Fix `Content-Range` header in 416 responses when using `start`/`end` options\r\n  * Fix `Content-Range` header missing from default 416 responses\r\n  * Ignore non-byte `Range` headers\r\n  * deps: http-errors@~1.5.0\r\n    - Add `HttpError` export, for `err instanceof createError.HttpError`\r\n    - Support new code `421 Misdirected Request`\r\n    - Use `setprototypeof` module to replace `__proto__` setting\r\n    - deps: inherits@2.0.1\r\n    - deps: statuses@'>= 1.3.0 < 2'\r\n    - perf: enable strict mode\r\n  * deps: range-parser@~1.2.0\r\n    - Fix incorrectly returning -1 when there is at least one valid range\r\n    - perf: remove internal function\r\n  * deps: statuses@~1.3.0\r\n    - Add `421 Misdirected Request`\r\n    - perf: enable strict mode\r\n  * perf: remove argument reassignment\r\n\r\n0.13.2 / 2016-03-05\r\n===================\r\n\r\n  * Fix invalid `Content-Type` header when `send.mime.default_type` unset\r\n\r\n0.13.1 / 2016-01-16\r\n===================\r\n\r\n  * deps: depd@~1.1.0\r\n    - Support web browser loading\r\n    - perf: enable strict mode\r\n  * deps: destroy@~1.0.4\r\n    - perf: enable strict mode\r\n  * deps: escape-html@~1.0.3\r\n    - perf: enable strict mode\r\n    - perf: optimize string replacement\r\n    - perf: use faster string coercion\r\n  * deps: range-parser@~1.0.3\r\n    - perf: enable strict mode\r\n\r\n0.13.0 / 2015-06-16\r\n===================\r\n\r\n  * Allow Node.js HTTP server to set `Date` response header\r\n  * Fix incorrectly removing `Content-Location` on 304 response\r\n  * Improve the default redirect response headers\r\n  * Send appropriate headers on default error response\r\n  * Use `http-errors` for standard emitted errors\r\n  * Use `statuses` instead of `http` module for status messages\r\n  * deps: escape-html@1.0.2\r\n  * deps: etag@~1.7.0\r\n    - Improve stat performance by removing hashing\r\n  * deps: fresh@0.3.0\r\n    - Add weak `ETag` matching support\r\n  * deps: on-finished@~2.3.0\r\n    - Add defined behavior for HTTP `CONNECT` requests\r\n    - Add defined behavior for HTTP `Upgrade` requests\r\n    - deps: ee-first@1.1.1\r\n  * perf: enable strict mode\r\n  * perf: remove unnecessary array allocations\r\n\r\n0.12.3 / 2015-05-13\r\n===================\r\n\r\n  * deps: debug@~2.2.0\r\n    - deps: ms@0.7.1\r\n  * deps: depd@~1.0.1\r\n  * deps: etag@~1.6.0\r\n   - Improve support for JXcore\r\n   - Support \"fake\" stats objects in environments without `fs`\r\n  * deps: ms@0.7.1\r\n    - Prevent extraordinarily long inputs\r\n  * deps: on-finished@~2.2.1\r\n\r\n0.12.2 / 2015-03-13\r\n===================\r\n\r\n  * Throw errors early for invalid `extensions` or `index` options\r\n  * deps: debug@~2.1.3\r\n    - Fix high intensity foreground color for bold\r\n    - deps: ms@0.7.0\r\n\r\n0.12.1 / 2015-02-17\r\n===================\r\n\r\n  * Fix regression sending zero-length files\r\n\r\n0.12.0 / 2015-02-16\r\n===================\r\n\r\n  * Always read the stat size from the file\r\n  * Fix mutating passed-in `options`\r\n  * deps: mime@1.3.4\r\n\r\n0.11.1 / 2015-01-20\r\n===================\r\n\r\n  * Fix `root` path disclosure\r\n\r\n0.11.0 / 2015-01-05\r\n===================\r\n\r\n  * deps: debug@~2.1.1\r\n  * deps: etag@~1.5.1\r\n    - deps: crc@3.2.1\r\n  * deps: ms@0.7.0\r\n    - Add `milliseconds`\r\n    - Add `msecs`\r\n    - Add `secs`\r\n    - Add `mins`\r\n    - Add `hrs`\r\n    - Add `yrs`\r\n  * deps: on-finished@~2.2.0\r\n\r\n0.10.1 / 2014-10-22\r\n===================\r\n\r\n  * deps: on-finished@~2.1.1\r\n    - Fix handling of pipelined requests\r\n\r\n0.10.0 / 2014-10-15\r\n===================\r\n\r\n  * deps: debug@~2.1.0\r\n    - Implement `DEBUG_FD` env variable support\r\n  * deps: depd@~1.0.0\r\n  * deps: etag@~1.5.0\r\n    - Improve string performance\r\n    - Slightly improve speed for weak ETags over 1KB\r\n\r\n0.9.3 / 2014-09-24\r\n==================\r\n\r\n  * deps: etag@~1.4.0\r\n    - Support \"fake\" stats objects\r\n\r\n0.9.2 / 2014-09-15\r\n==================\r\n\r\n  * deps: depd@0.4.5\r\n  * deps: etag@~1.3.1\r\n  * deps: range-parser@~1.0.2\r\n\r\n0.9.1 / 2014-09-07\r\n==================\r\n\r\n  * deps: fresh@0.2.4\r\n\r\n0.9.0 / 2014-09-07\r\n==================\r\n\r\n  * Add `lastModified` option\r\n  * Use `etag` to generate `ETag` header\r\n  * deps: debug@~2.0.0\r\n\r\n0.8.5 / 2014-09-04\r\n==================\r\n\r\n  * Fix malicious path detection for empty string path\r\n\r\n0.8.4 / 2014-09-04\r\n==================\r\n\r\n  * Fix a path traversal issue when using `root`\r\n\r\n0.8.3 / 2014-08-16\r\n==================\r\n\r\n  * deps: destroy@1.0.3\r\n    - renamed from dethroy\r\n  * deps: on-finished@2.1.0\r\n\r\n0.8.2 / 2014-08-14\r\n==================\r\n\r\n  * Work around `fd` leak in Node.js 0.10 for `fs.ReadStream`\r\n  * deps: dethroy@1.0.2\r\n\r\n0.8.1 / 2014-08-05\r\n==================\r\n\r\n  * Fix `extensions` behavior when file already has extension\r\n\r\n0.8.0 / 2014-08-05\r\n==================\r\n\r\n  * Add `extensions` option\r\n\r\n0.7.4 / 2014-08-04\r\n==================\r\n\r\n  * Fix serving index files without root dir\r\n\r\n0.7.3 / 2014-07-29\r\n==================\r\n\r\n  * Fix incorrect 403 on Windows and Node.js 0.11\r\n\r\n0.7.2 / 2014-07-27\r\n==================\r\n\r\n  * deps: depd@0.4.4\r\n    - Work-around v8 generating empty stack traces\r\n\r\n0.7.1 / 2014-07-26\r\n==================\r\n\r\n * deps: depd@0.4.3\r\n   - Fix exception when global `Error.stackTraceLimit` is too low\r\n\r\n0.7.0 / 2014-07-20\r\n==================\r\n\r\n * Deprecate `hidden` option; use `dotfiles` option\r\n * Add `dotfiles` option\r\n * deps: debug@1.0.4\r\n * deps: depd@0.4.2\r\n   - Add `TRACE_DEPRECATION` environment variable\r\n   - Remove non-standard grey color from color output\r\n   - Support `--no-deprecation` argument\r\n   - Support `--trace-deprecation` argument\r\n\r\n0.6.0 / 2014-07-11\r\n==================\r\n\r\n * Deprecate `from` option; use `root` option\r\n * Deprecate `send.etag()` -- use `etag` in `options`\r\n * Deprecate `send.hidden()` -- use `hidden` in `options`\r\n * Deprecate `send.index()` -- use `index` in `options`\r\n * Deprecate `send.maxage()` -- use `maxAge` in `options`\r\n * Deprecate `send.root()` -- use `root` in `options`\r\n * Cap `maxAge` value to 1 year\r\n * deps: debug@1.0.3\r\n   - Add support for multiple wildcards in namespaces\r\n\r\n0.5.0 / 2014-06-28\r\n==================\r\n\r\n * Accept string for `maxAge` (converted by `ms`)\r\n * Add `headers` event\r\n * Include link in default redirect response\r\n * Use `EventEmitter.listenerCount` to count listeners\r\n\r\n0.4.3 / 2014-06-11\r\n==================\r\n\r\n * Do not throw un-catchable error on file open race condition\r\n * Use `escape-html` for HTML escaping\r\n * deps: debug@1.0.2\r\n   - fix some debugging output colors on node.js 0.8\r\n * deps: finished@1.2.2\r\n * deps: fresh@0.2.2\r\n\r\n0.4.2 / 2014-06-09\r\n==================\r\n\r\n * fix \"event emitter leak\" warnings\r\n * deps: debug@1.0.1\r\n * deps: finished@1.2.1\r\n\r\n0.4.1 / 2014-06-02\r\n==================\r\n\r\n * Send `max-age` in `Cache-Control` in correct format\r\n\r\n0.4.0 / 2014-05-27\r\n==================\r\n\r\n * Calculate ETag with md5 for reduced collisions\r\n * Fix wrong behavior when index file matches directory\r\n * Ignore stream errors after request ends\r\n   - Goodbye `EBADF, read`\r\n * Skip directories in index file search\r\n * deps: debug@0.8.1\r\n\r\n0.3.0 / 2014-04-24\r\n==================\r\n\r\n * Fix sending files with dots without root set\r\n * Coerce option types\r\n * Accept API options in options object\r\n * Set etags to \"weak\"\r\n * Include file path in etag\r\n * Make \"Can't set headers after they are sent.\" catchable\r\n * Send full entity-body for multi range requests\r\n * Default directory access to 403 when index disabled\r\n * Support multiple index paths\r\n * Support \"If-Range\" header\r\n * Control whether to generate etags\r\n * deps: mime@1.2.11\r\n\r\n0.2.0 / 2014-01-29\r\n==================\r\n\r\n * update range-parser and fresh\r\n\r\n0.1.4 / 2013-08-11 \r\n==================\r\n\r\n * update fresh\r\n\r\n0.1.3 / 2013-07-08 \r\n==================\r\n\r\n * Revert \"Fix fd leak\"\r\n\r\n0.1.2 / 2013-07-03 \r\n==================\r\n\r\n * Fix fd leak\r\n\r\n0.1.0 / 2012-08-25 \r\n==================\r\n\r\n  * add options parameter to send() that is passed to fs.createReadStream() [kanongil]\r\n\r\n0.0.4 / 2012-08-16 \r\n==================\r\n\r\n  * allow custom \"Accept-Ranges\" definition\r\n\r\n0.0.3 / 2012-07-16 \r\n==================\r\n\r\n  * fix normalization of the root directory. Closes #3\r\n\r\n0.0.2 / 2012-07-09 \r\n==================\r\n\r\n  * add passing of req explicitly for now (YUCK)\r\n\r\n0.0.1 / 2010-01-03\r\n==================\r\n\r\n  * Initial release\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/send/HISTORY.md b/node_modules/send/HISTORY.md
--- a/node_modules/send/HISTORY.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/send/HISTORY.md	(date 1753913035274)
@@ -1,3 +1,8 @@
+0.19.0 / 2024-09-10
+===================
+
+* Remove link renderization in html while redirecting
+
 0.18.0 / 2022-03-23
 ===================
 
Index: node_modules/send/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*!\r\n * send\r\n * Copyright(c) 2012 TJ Holowaychuk\r\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar createError = require('http-errors')\r\nvar debug = require('debug')('send')\r\nvar deprecate = require('depd')('send')\r\nvar destroy = require('destroy')\r\nvar encodeUrl = require('encodeurl')\r\nvar escapeHtml = require('escape-html')\r\nvar etag = require('etag')\r\nvar fresh = require('fresh')\r\nvar fs = require('fs')\r\nvar mime = require('mime')\r\nvar ms = require('ms')\r\nvar onFinished = require('on-finished')\r\nvar parseRange = require('range-parser')\r\nvar path = require('path')\r\nvar statuses = require('statuses')\r\nvar Stream = require('stream')\r\nvar util = require('util')\r\n\r\n/**\r\n * Path function references.\r\n * @private\r\n */\r\n\r\nvar extname = path.extname\r\nvar join = path.join\r\nvar normalize = path.normalize\r\nvar resolve = path.resolve\r\nvar sep = path.sep\r\n\r\n/**\r\n * Regular expression for identifying a bytes Range header.\r\n * @private\r\n */\r\n\r\nvar BYTES_RANGE_REGEXP = /^ *bytes=/\r\n\r\n/**\r\n * Maximum value allowed for the max age.\r\n * @private\r\n */\r\n\r\nvar MAX_MAXAGE = 60 * 60 * 24 * 365 * 1000 // 1 year\r\n\r\n/**\r\n * Regular expression to match a path with a directory up component.\r\n * @private\r\n */\r\n\r\nvar UP_PATH_REGEXP = /(?:^|[\\\\/])\\.\\.(?:[\\\\/]|$)/\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = send\r\nmodule.exports.mime = mime\r\n\r\n/**\r\n * Return a `SendStream` for `req` and `path`.\r\n *\r\n * @param {object} req\r\n * @param {string} path\r\n * @param {object} [options]\r\n * @return {SendStream}\r\n * @public\r\n */\r\n\r\nfunction send (req, path, options) {\r\n  return new SendStream(req, path, options)\r\n}\r\n\r\n/**\r\n * Initialize a `SendStream` with the given `path`.\r\n *\r\n * @param {Request} req\r\n * @param {String} path\r\n * @param {object} [options]\r\n * @private\r\n */\r\n\r\nfunction SendStream (req, path, options) {\r\n  Stream.call(this)\r\n\r\n  var opts = options || {}\r\n\r\n  this.options = opts\r\n  this.path = path\r\n  this.req = req\r\n\r\n  this._acceptRanges = opts.acceptRanges !== undefined\r\n    ? Boolean(opts.acceptRanges)\r\n    : true\r\n\r\n  this._cacheControl = opts.cacheControl !== undefined\r\n    ? Boolean(opts.cacheControl)\r\n    : true\r\n\r\n  this._etag = opts.etag !== undefined\r\n    ? Boolean(opts.etag)\r\n    : true\r\n\r\n  this._dotfiles = opts.dotfiles !== undefined\r\n    ? opts.dotfiles\r\n    : 'ignore'\r\n\r\n  if (this._dotfiles !== 'ignore' && this._dotfiles !== 'allow' && this._dotfiles !== 'deny') {\r\n    throw new TypeError('dotfiles option must be \"allow\", \"deny\", or \"ignore\"')\r\n  }\r\n\r\n  this._hidden = Boolean(opts.hidden)\r\n\r\n  if (opts.hidden !== undefined) {\r\n    deprecate('hidden: use dotfiles: \\'' + (this._hidden ? 'allow' : 'ignore') + '\\' instead')\r\n  }\r\n\r\n  // legacy support\r\n  if (opts.dotfiles === undefined) {\r\n    this._dotfiles = undefined\r\n  }\r\n\r\n  this._extensions = opts.extensions !== undefined\r\n    ? normalizeList(opts.extensions, 'extensions option')\r\n    : []\r\n\r\n  this._immutable = opts.immutable !== undefined\r\n    ? Boolean(opts.immutable)\r\n    : false\r\n\r\n  this._index = opts.index !== undefined\r\n    ? normalizeList(opts.index, 'index option')\r\n    : ['index.html']\r\n\r\n  this._lastModified = opts.lastModified !== undefined\r\n    ? Boolean(opts.lastModified)\r\n    : true\r\n\r\n  this._maxage = opts.maxAge || opts.maxage\r\n  this._maxage = typeof this._maxage === 'string'\r\n    ? ms(this._maxage)\r\n    : Number(this._maxage)\r\n  this._maxage = !isNaN(this._maxage)\r\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\r\n    : 0\r\n\r\n  this._root = opts.root\r\n    ? resolve(opts.root)\r\n    : null\r\n\r\n  if (!this._root && opts.from) {\r\n    this.from(opts.from)\r\n  }\r\n}\r\n\r\n/**\r\n * Inherits from `Stream`.\r\n */\r\n\r\nutil.inherits(SendStream, Stream)\r\n\r\n/**\r\n * Enable or disable etag generation.\r\n *\r\n * @param {Boolean} val\r\n * @return {SendStream}\r\n * @api public\r\n */\r\n\r\nSendStream.prototype.etag = deprecate.function(function etag (val) {\r\n  this._etag = Boolean(val)\r\n  debug('etag %s', this._etag)\r\n  return this\r\n}, 'send.etag: pass etag as option')\r\n\r\n/**\r\n * Enable or disable \"hidden\" (dot) files.\r\n *\r\n * @param {Boolean} path\r\n * @return {SendStream}\r\n * @api public\r\n */\r\n\r\nSendStream.prototype.hidden = deprecate.function(function hidden (val) {\r\n  this._hidden = Boolean(val)\r\n  this._dotfiles = undefined\r\n  debug('hidden %s', this._hidden)\r\n  return this\r\n}, 'send.hidden: use dotfiles option')\r\n\r\n/**\r\n * Set index `paths`, set to a falsy\r\n * value to disable index support.\r\n *\r\n * @param {String|Boolean|Array} paths\r\n * @return {SendStream}\r\n * @api public\r\n */\r\n\r\nSendStream.prototype.index = deprecate.function(function index (paths) {\r\n  var index = !paths ? [] : normalizeList(paths, 'paths argument')\r\n  debug('index %o', paths)\r\n  this._index = index\r\n  return this\r\n}, 'send.index: pass index as option')\r\n\r\n/**\r\n * Set root `path`.\r\n *\r\n * @param {String} path\r\n * @return {SendStream}\r\n * @api public\r\n */\r\n\r\nSendStream.prototype.root = function root (path) {\r\n  this._root = resolve(String(path))\r\n  debug('root %s', this._root)\r\n  return this\r\n}\r\n\r\nSendStream.prototype.from = deprecate.function(SendStream.prototype.root,\r\n  'send.from: pass root as option')\r\n\r\nSendStream.prototype.root = deprecate.function(SendStream.prototype.root,\r\n  'send.root: pass root as option')\r\n\r\n/**\r\n * Set max-age to `maxAge`.\r\n *\r\n * @param {Number} maxAge\r\n * @return {SendStream}\r\n * @api public\r\n */\r\n\r\nSendStream.prototype.maxage = deprecate.function(function maxage (maxAge) {\r\n  this._maxage = typeof maxAge === 'string'\r\n    ? ms(maxAge)\r\n    : Number(maxAge)\r\n  this._maxage = !isNaN(this._maxage)\r\n    ? Math.min(Math.max(0, this._maxage), MAX_MAXAGE)\r\n    : 0\r\n  debug('max-age %d', this._maxage)\r\n  return this\r\n}, 'send.maxage: pass maxAge as option')\r\n\r\n/**\r\n * Emit error with `status`.\r\n *\r\n * @param {number} status\r\n * @param {Error} [err]\r\n * @private\r\n */\r\n\r\nSendStream.prototype.error = function error (status, err) {\r\n  // emit if listeners instead of responding\r\n  if (hasListeners(this, 'error')) {\r\n    return this.emit('error', createHttpError(status, err))\r\n  }\r\n\r\n  var res = this.res\r\n  var msg = statuses.message[status] || String(status)\r\n  var doc = createHtmlDocument('Error', escapeHtml(msg))\r\n\r\n  // clear existing headers\r\n  clearHeaders(res)\r\n\r\n  // add error headers\r\n  if (err && err.headers) {\r\n    setHeaders(res, err.headers)\r\n  }\r\n\r\n  // send basic response\r\n  res.statusCode = status\r\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\r\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\r\n  res.setHeader('Content-Security-Policy', \"default-src 'none'\")\r\n  res.setHeader('X-Content-Type-Options', 'nosniff')\r\n  res.end(doc)\r\n}\r\n\r\n/**\r\n * Check if the pathname ends with \"/\".\r\n *\r\n * @return {boolean}\r\n * @private\r\n */\r\n\r\nSendStream.prototype.hasTrailingSlash = function hasTrailingSlash () {\r\n  return this.path[this.path.length - 1] === '/'\r\n}\r\n\r\n/**\r\n * Check if this is a conditional GET request.\r\n *\r\n * @return {Boolean}\r\n * @api private\r\n */\r\n\r\nSendStream.prototype.isConditionalGET = function isConditionalGET () {\r\n  return this.req.headers['if-match'] ||\r\n    this.req.headers['if-unmodified-since'] ||\r\n    this.req.headers['if-none-match'] ||\r\n    this.req.headers['if-modified-since']\r\n}\r\n\r\n/**\r\n * Check if the request preconditions failed.\r\n *\r\n * @return {boolean}\r\n * @private\r\n */\r\n\r\nSendStream.prototype.isPreconditionFailure = function isPreconditionFailure () {\r\n  var req = this.req\r\n  var res = this.res\r\n\r\n  // if-match\r\n  var match = req.headers['if-match']\r\n  if (match) {\r\n    var etag = res.getHeader('ETag')\r\n    return !etag || (match !== '*' && parseTokenList(match).every(function (match) {\r\n      return match !== etag && match !== 'W/' + etag && 'W/' + match !== etag\r\n    }))\r\n  }\r\n\r\n  // if-unmodified-since\r\n  var unmodifiedSince = parseHttpDate(req.headers['if-unmodified-since'])\r\n  if (!isNaN(unmodifiedSince)) {\r\n    var lastModified = parseHttpDate(res.getHeader('Last-Modified'))\r\n    return isNaN(lastModified) || lastModified > unmodifiedSince\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Strip various content header fields for a change in entity.\r\n *\r\n * @private\r\n */\r\n\r\nSendStream.prototype.removeContentHeaderFields = function removeContentHeaderFields () {\r\n  var res = this.res\r\n\r\n  res.removeHeader('Content-Encoding')\r\n  res.removeHeader('Content-Language')\r\n  res.removeHeader('Content-Length')\r\n  res.removeHeader('Content-Range')\r\n  res.removeHeader('Content-Type')\r\n}\r\n\r\n/**\r\n * Respond with 304 not modified.\r\n *\r\n * @api private\r\n */\r\n\r\nSendStream.prototype.notModified = function notModified () {\r\n  var res = this.res\r\n  debug('not modified')\r\n  this.removeContentHeaderFields()\r\n  res.statusCode = 304\r\n  res.end()\r\n}\r\n\r\n/**\r\n * Raise error that headers already sent.\r\n *\r\n * @api private\r\n */\r\n\r\nSendStream.prototype.headersAlreadySent = function headersAlreadySent () {\r\n  var err = new Error('Can\\'t set headers after they are sent.')\r\n  debug('headers already sent')\r\n  this.error(500, err)\r\n}\r\n\r\n/**\r\n * Check if the request is cacheable, aka\r\n * responded with 2xx or 304 (see RFC 2616 section 14.2{5,6}).\r\n *\r\n * @return {Boolean}\r\n * @api private\r\n */\r\n\r\nSendStream.prototype.isCachable = function isCachable () {\r\n  var statusCode = this.res.statusCode\r\n  return (statusCode >= 200 && statusCode < 300) ||\r\n    statusCode === 304\r\n}\r\n\r\n/**\r\n * Handle stat() error.\r\n *\r\n * @param {Error} error\r\n * @private\r\n */\r\n\r\nSendStream.prototype.onStatError = function onStatError (error) {\r\n  switch (error.code) {\r\n    case 'ENAMETOOLONG':\r\n    case 'ENOENT':\r\n    case 'ENOTDIR':\r\n      this.error(404, error)\r\n      break\r\n    default:\r\n      this.error(500, error)\r\n      break\r\n  }\r\n}\r\n\r\n/**\r\n * Check if the cache is fresh.\r\n *\r\n * @return {Boolean}\r\n * @api private\r\n */\r\n\r\nSendStream.prototype.isFresh = function isFresh () {\r\n  return fresh(this.req.headers, {\r\n    etag: this.res.getHeader('ETag'),\r\n    'last-modified': this.res.getHeader('Last-Modified')\r\n  })\r\n}\r\n\r\n/**\r\n * Check if the range is fresh.\r\n *\r\n * @return {Boolean}\r\n * @api private\r\n */\r\n\r\nSendStream.prototype.isRangeFresh = function isRangeFresh () {\r\n  var ifRange = this.req.headers['if-range']\r\n\r\n  if (!ifRange) {\r\n    return true\r\n  }\r\n\r\n  // if-range as etag\r\n  if (ifRange.indexOf('\"') !== -1) {\r\n    var etag = this.res.getHeader('ETag')\r\n    return Boolean(etag && ifRange.indexOf(etag) !== -1)\r\n  }\r\n\r\n  // if-range as modified date\r\n  var lastModified = this.res.getHeader('Last-Modified')\r\n  return parseHttpDate(lastModified) <= parseHttpDate(ifRange)\r\n}\r\n\r\n/**\r\n * Redirect to path.\r\n *\r\n * @param {string} path\r\n * @private\r\n */\r\n\r\nSendStream.prototype.redirect = function redirect (path) {\r\n  var res = this.res\r\n\r\n  if (hasListeners(this, 'directory')) {\r\n    this.emit('directory', res, path)\r\n    return\r\n  }\r\n\r\n  if (this.hasTrailingSlash()) {\r\n    this.error(403)\r\n    return\r\n  }\r\n\r\n  var loc = encodeUrl(collapseLeadingSlashes(this.path + '/'))\r\n  var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\r\n    escapeHtml(loc) + '</a>')\r\n\r\n  // redirect\r\n  res.statusCode = 301\r\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\r\n  res.setHeader('Content-Length', Buffer.byteLength(doc))\r\n  res.setHeader('Content-Security-Policy', \"default-src 'none'\")\r\n  res.setHeader('X-Content-Type-Options', 'nosniff')\r\n  res.setHeader('Location', loc)\r\n  res.end(doc)\r\n}\r\n\r\n/**\r\n * Pipe to `res.\r\n *\r\n * @param {Stream} res\r\n * @return {Stream} res\r\n * @api public\r\n */\r\n\r\nSendStream.prototype.pipe = function pipe (res) {\r\n  // root path\r\n  var root = this._root\r\n\r\n  // references\r\n  this.res = res\r\n\r\n  // decode the path\r\n  var path = decode(this.path)\r\n  if (path === -1) {\r\n    this.error(400)\r\n    return res\r\n  }\r\n\r\n  // null byte(s)\r\n  if (~path.indexOf('\\0')) {\r\n    this.error(400)\r\n    return res\r\n  }\r\n\r\n  var parts\r\n  if (root !== null) {\r\n    // normalize\r\n    if (path) {\r\n      path = normalize('.' + sep + path)\r\n    }\r\n\r\n    // malicious path\r\n    if (UP_PATH_REGEXP.test(path)) {\r\n      debug('malicious path \"%s\"', path)\r\n      this.error(403)\r\n      return res\r\n    }\r\n\r\n    // explode path parts\r\n    parts = path.split(sep)\r\n\r\n    // join / normalize from optional root dir\r\n    path = normalize(join(root, path))\r\n  } else {\r\n    // \"..\" is malicious without \"root\"\r\n    if (UP_PATH_REGEXP.test(path)) {\r\n      debug('malicious path \"%s\"', path)\r\n      this.error(403)\r\n      return res\r\n    }\r\n\r\n    // explode path parts\r\n    parts = normalize(path).split(sep)\r\n\r\n    // resolve the path\r\n    path = resolve(path)\r\n  }\r\n\r\n  // dotfile handling\r\n  if (containsDotFile(parts)) {\r\n    var access = this._dotfiles\r\n\r\n    // legacy support\r\n    if (access === undefined) {\r\n      access = parts[parts.length - 1][0] === '.'\r\n        ? (this._hidden ? 'allow' : 'ignore')\r\n        : 'allow'\r\n    }\r\n\r\n    debug('%s dotfile \"%s\"', access, path)\r\n    switch (access) {\r\n      case 'allow':\r\n        break\r\n      case 'deny':\r\n        this.error(403)\r\n        return res\r\n      case 'ignore':\r\n      default:\r\n        this.error(404)\r\n        return res\r\n    }\r\n  }\r\n\r\n  // index file support\r\n  if (this._index.length && this.hasTrailingSlash()) {\r\n    this.sendIndex(path)\r\n    return res\r\n  }\r\n\r\n  this.sendFile(path)\r\n  return res\r\n}\r\n\r\n/**\r\n * Transfer `path`.\r\n *\r\n * @param {String} path\r\n * @api public\r\n */\r\n\r\nSendStream.prototype.send = function send (path, stat) {\r\n  var len = stat.size\r\n  var options = this.options\r\n  var opts = {}\r\n  var res = this.res\r\n  var req = this.req\r\n  var ranges = req.headers.range\r\n  var offset = options.start || 0\r\n\r\n  if (headersSent(res)) {\r\n    // impossible to send now\r\n    this.headersAlreadySent()\r\n    return\r\n  }\r\n\r\n  debug('pipe \"%s\"', path)\r\n\r\n  // set header fields\r\n  this.setHeader(path, stat)\r\n\r\n  // set content-type\r\n  this.type(path)\r\n\r\n  // conditional GET support\r\n  if (this.isConditionalGET()) {\r\n    if (this.isPreconditionFailure()) {\r\n      this.error(412)\r\n      return\r\n    }\r\n\r\n    if (this.isCachable() && this.isFresh()) {\r\n      this.notModified()\r\n      return\r\n    }\r\n  }\r\n\r\n  // adjust len to start/end options\r\n  len = Math.max(0, len - offset)\r\n  if (options.end !== undefined) {\r\n    var bytes = options.end - offset + 1\r\n    if (len > bytes) len = bytes\r\n  }\r\n\r\n  // Range support\r\n  if (this._acceptRanges && BYTES_RANGE_REGEXP.test(ranges)) {\r\n    // parse\r\n    ranges = parseRange(len, ranges, {\r\n      combine: true\r\n    })\r\n\r\n    // If-Range support\r\n    if (!this.isRangeFresh()) {\r\n      debug('range stale')\r\n      ranges = -2\r\n    }\r\n\r\n    // unsatisfiable\r\n    if (ranges === -1) {\r\n      debug('range unsatisfiable')\r\n\r\n      // Content-Range\r\n      res.setHeader('Content-Range', contentRange('bytes', len))\r\n\r\n      // 416 Requested Range Not Satisfiable\r\n      return this.error(416, {\r\n        headers: { 'Content-Range': res.getHeader('Content-Range') }\r\n      })\r\n    }\r\n\r\n    // valid (syntactically invalid/multiple ranges are treated as a regular response)\r\n    if (ranges !== -2 && ranges.length === 1) {\r\n      debug('range %j', ranges)\r\n\r\n      // Content-Range\r\n      res.statusCode = 206\r\n      res.setHeader('Content-Range', contentRange('bytes', len, ranges[0]))\r\n\r\n      // adjust for requested range\r\n      offset += ranges[0].start\r\n      len = ranges[0].end - ranges[0].start + 1\r\n    }\r\n  }\r\n\r\n  // clone options\r\n  for (var prop in options) {\r\n    opts[prop] = options[prop]\r\n  }\r\n\r\n  // set read options\r\n  opts.start = offset\r\n  opts.end = Math.max(offset, offset + len - 1)\r\n\r\n  // content-length\r\n  res.setHeader('Content-Length', len)\r\n\r\n  // HEAD support\r\n  if (req.method === 'HEAD') {\r\n    res.end()\r\n    return\r\n  }\r\n\r\n  this.stream(path, opts)\r\n}\r\n\r\n/**\r\n * Transfer file for `path`.\r\n *\r\n * @param {String} path\r\n * @api private\r\n */\r\nSendStream.prototype.sendFile = function sendFile (path) {\r\n  var i = 0\r\n  var self = this\r\n\r\n  debug('stat \"%s\"', path)\r\n  fs.stat(path, function onstat (err, stat) {\r\n    if (err && err.code === 'ENOENT' && !extname(path) && path[path.length - 1] !== sep) {\r\n      // not found, check extensions\r\n      return next(err)\r\n    }\r\n    if (err) return self.onStatError(err)\r\n    if (stat.isDirectory()) return self.redirect(path)\r\n    self.emit('file', path, stat)\r\n    self.send(path, stat)\r\n  })\r\n\r\n  function next (err) {\r\n    if (self._extensions.length <= i) {\r\n      return err\r\n        ? self.onStatError(err)\r\n        : self.error(404)\r\n    }\r\n\r\n    var p = path + '.' + self._extensions[i++]\r\n\r\n    debug('stat \"%s\"', p)\r\n    fs.stat(p, function (err, stat) {\r\n      if (err) return next(err)\r\n      if (stat.isDirectory()) return next()\r\n      self.emit('file', p, stat)\r\n      self.send(p, stat)\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Transfer index for `path`.\r\n *\r\n * @param {String} path\r\n * @api private\r\n */\r\nSendStream.prototype.sendIndex = function sendIndex (path) {\r\n  var i = -1\r\n  var self = this\r\n\r\n  function next (err) {\r\n    if (++i >= self._index.length) {\r\n      if (err) return self.onStatError(err)\r\n      return self.error(404)\r\n    }\r\n\r\n    var p = join(path, self._index[i])\r\n\r\n    debug('stat \"%s\"', p)\r\n    fs.stat(p, function (err, stat) {\r\n      if (err) return next(err)\r\n      if (stat.isDirectory()) return next()\r\n      self.emit('file', p, stat)\r\n      self.send(p, stat)\r\n    })\r\n  }\r\n\r\n  next()\r\n}\r\n\r\n/**\r\n * Stream `path` to the response.\r\n *\r\n * @param {String} path\r\n * @param {Object} options\r\n * @api private\r\n */\r\n\r\nSendStream.prototype.stream = function stream (path, options) {\r\n  var self = this\r\n  var res = this.res\r\n\r\n  // pipe\r\n  var stream = fs.createReadStream(path, options)\r\n  this.emit('stream', stream)\r\n  stream.pipe(res)\r\n\r\n  // cleanup\r\n  function cleanup () {\r\n    destroy(stream, true)\r\n  }\r\n\r\n  // response finished, cleanup\r\n  onFinished(res, cleanup)\r\n\r\n  // error handling\r\n  stream.on('error', function onerror (err) {\r\n    // clean up stream early\r\n    cleanup()\r\n\r\n    // error\r\n    self.onStatError(err)\r\n  })\r\n\r\n  // end\r\n  stream.on('end', function onend () {\r\n    self.emit('end')\r\n  })\r\n}\r\n\r\n/**\r\n * Set content-type based on `path`\r\n * if it hasn't been explicitly set.\r\n *\r\n * @param {String} path\r\n * @api private\r\n */\r\n\r\nSendStream.prototype.type = function type (path) {\r\n  var res = this.res\r\n\r\n  if (res.getHeader('Content-Type')) return\r\n\r\n  var type = mime.lookup(path)\r\n\r\n  if (!type) {\r\n    debug('no content-type')\r\n    return\r\n  }\r\n\r\n  var charset = mime.charsets.lookup(type)\r\n\r\n  debug('content-type %s', type)\r\n  res.setHeader('Content-Type', type + (charset ? '; charset=' + charset : ''))\r\n}\r\n\r\n/**\r\n * Set response header fields, most\r\n * fields may be pre-defined.\r\n *\r\n * @param {String} path\r\n * @param {Object} stat\r\n * @api private\r\n */\r\n\r\nSendStream.prototype.setHeader = function setHeader (path, stat) {\r\n  var res = this.res\r\n\r\n  this.emit('headers', res, path, stat)\r\n\r\n  if (this._acceptRanges && !res.getHeader('Accept-Ranges')) {\r\n    debug('accept ranges')\r\n    res.setHeader('Accept-Ranges', 'bytes')\r\n  }\r\n\r\n  if (this._cacheControl && !res.getHeader('Cache-Control')) {\r\n    var cacheControl = 'public, max-age=' + Math.floor(this._maxage / 1000)\r\n\r\n    if (this._immutable) {\r\n      cacheControl += ', immutable'\r\n    }\r\n\r\n    debug('cache-control %s', cacheControl)\r\n    res.setHeader('Cache-Control', cacheControl)\r\n  }\r\n\r\n  if (this._lastModified && !res.getHeader('Last-Modified')) {\r\n    var modified = stat.mtime.toUTCString()\r\n    debug('modified %s', modified)\r\n    res.setHeader('Last-Modified', modified)\r\n  }\r\n\r\n  if (this._etag && !res.getHeader('ETag')) {\r\n    var val = etag(stat)\r\n    debug('etag %s', val)\r\n    res.setHeader('ETag', val)\r\n  }\r\n}\r\n\r\n/**\r\n * Clear all headers from a response.\r\n *\r\n * @param {object} res\r\n * @private\r\n */\r\n\r\nfunction clearHeaders (res) {\r\n  var headers = getHeaderNames(res)\r\n\r\n  for (var i = 0; i < headers.length; i++) {\r\n    res.removeHeader(headers[i])\r\n  }\r\n}\r\n\r\n/**\r\n * Collapse all leading slashes into a single slash\r\n *\r\n * @param {string} str\r\n * @private\r\n */\r\nfunction collapseLeadingSlashes (str) {\r\n  for (var i = 0; i < str.length; i++) {\r\n    if (str[i] !== '/') {\r\n      break\r\n    }\r\n  }\r\n\r\n  return i > 1\r\n    ? '/' + str.substr(i)\r\n    : str\r\n}\r\n\r\n/**\r\n * Determine if path parts contain a dotfile.\r\n *\r\n * @api private\r\n */\r\n\r\nfunction containsDotFile (parts) {\r\n  for (var i = 0; i < parts.length; i++) {\r\n    var part = parts[i]\r\n    if (part.length > 1 && part[0] === '.') {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return false\r\n}\r\n\r\n/**\r\n * Create a Content-Range header.\r\n *\r\n * @param {string} type\r\n * @param {number} size\r\n * @param {array} [range]\r\n */\r\n\r\nfunction contentRange (type, size, range) {\r\n  return type + ' ' + (range ? range.start + '-' + range.end : '*') + '/' + size\r\n}\r\n\r\n/**\r\n * Create a minimal HTML document.\r\n *\r\n * @param {string} title\r\n * @param {string} body\r\n * @private\r\n */\r\n\r\nfunction createHtmlDocument (title, body) {\r\n  return '<!DOCTYPE html>\\n' +\r\n    '<html lang=\"en\">\\n' +\r\n    '<head>\\n' +\r\n    '<meta charset=\"utf-8\">\\n' +\r\n    '<title>' + title + '</title>\\n' +\r\n    '</head>\\n' +\r\n    '<body>\\n' +\r\n    '<pre>' + body + '</pre>\\n' +\r\n    '</body>\\n' +\r\n    '</html>\\n'\r\n}\r\n\r\n/**\r\n * Create a HttpError object from simple arguments.\r\n *\r\n * @param {number} status\r\n * @param {Error|object} err\r\n * @private\r\n */\r\n\r\nfunction createHttpError (status, err) {\r\n  if (!err) {\r\n    return createError(status)\r\n  }\r\n\r\n  return err instanceof Error\r\n    ? createError(status, err, { expose: false })\r\n    : createError(status, err)\r\n}\r\n\r\n/**\r\n * decodeURIComponent.\r\n *\r\n * Allows V8 to only deoptimize this fn instead of all\r\n * of send().\r\n *\r\n * @param {String} path\r\n * @api private\r\n */\r\n\r\nfunction decode (path) {\r\n  try {\r\n    return decodeURIComponent(path)\r\n  } catch (err) {\r\n    return -1\r\n  }\r\n}\r\n\r\n/**\r\n * Get the header names on a respnse.\r\n *\r\n * @param {object} res\r\n * @returns {array[string]}\r\n * @private\r\n */\r\n\r\nfunction getHeaderNames (res) {\r\n  return typeof res.getHeaderNames !== 'function'\r\n    ? Object.keys(res._headers || {})\r\n    : res.getHeaderNames()\r\n}\r\n\r\n/**\r\n * Determine if emitter has listeners of a given type.\r\n *\r\n * The way to do this check is done three different ways in Node.js >= 0.8\r\n * so this consolidates them into a minimal set using instance methods.\r\n *\r\n * @param {EventEmitter} emitter\r\n * @param {string} type\r\n * @returns {boolean}\r\n * @private\r\n */\r\n\r\nfunction hasListeners (emitter, type) {\r\n  var count = typeof emitter.listenerCount !== 'function'\r\n    ? emitter.listeners(type).length\r\n    : emitter.listenerCount(type)\r\n\r\n  return count > 0\r\n}\r\n\r\n/**\r\n * Determine if the response headers have been sent.\r\n *\r\n * @param {object} res\r\n * @returns {boolean}\r\n * @private\r\n */\r\n\r\nfunction headersSent (res) {\r\n  return typeof res.headersSent !== 'boolean'\r\n    ? Boolean(res._header)\r\n    : res.headersSent\r\n}\r\n\r\n/**\r\n * Normalize the index option into an array.\r\n *\r\n * @param {boolean|string|array} val\r\n * @param {string} name\r\n * @private\r\n */\r\n\r\nfunction normalizeList (val, name) {\r\n  var list = [].concat(val || [])\r\n\r\n  for (var i = 0; i < list.length; i++) {\r\n    if (typeof list[i] !== 'string') {\r\n      throw new TypeError(name + ' must be array of strings or false')\r\n    }\r\n  }\r\n\r\n  return list\r\n}\r\n\r\n/**\r\n * Parse an HTTP Date into a number.\r\n *\r\n * @param {string} date\r\n * @private\r\n */\r\n\r\nfunction parseHttpDate (date) {\r\n  var timestamp = date && Date.parse(date)\r\n\r\n  return typeof timestamp === 'number'\r\n    ? timestamp\r\n    : NaN\r\n}\r\n\r\n/**\r\n * Parse a HTTP token list.\r\n *\r\n * @param {string} str\r\n * @private\r\n */\r\n\r\nfunction parseTokenList (str) {\r\n  var end = 0\r\n  var list = []\r\n  var start = 0\r\n\r\n  // gather tokens\r\n  for (var i = 0, len = str.length; i < len; i++) {\r\n    switch (str.charCodeAt(i)) {\r\n      case 0x20: /*   */\r\n        if (start === end) {\r\n          start = end = i + 1\r\n        }\r\n        break\r\n      case 0x2c: /* , */\r\n        if (start !== end) {\r\n          list.push(str.substring(start, end))\r\n        }\r\n        start = end = i + 1\r\n        break\r\n      default:\r\n        end = i + 1\r\n        break\r\n    }\r\n  }\r\n\r\n  // final token\r\n  if (start !== end) {\r\n    list.push(str.substring(start, end))\r\n  }\r\n\r\n  return list\r\n}\r\n\r\n/**\r\n * Set an object of headers on a response.\r\n *\r\n * @param {object} res\r\n * @param {object} headers\r\n * @private\r\n */\r\n\r\nfunction setHeaders (res, headers) {\r\n  var keys = Object.keys(headers)\r\n\r\n  for (var i = 0; i < keys.length; i++) {\r\n    var key = keys[i]\r\n    res.setHeader(key, headers[key])\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/send/index.js b/node_modules/send/index.js
--- a/node_modules/send/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/send/index.js	(date 1753913035265)
@@ -482,8 +482,7 @@
   }
 
   var loc = encodeUrl(collapseLeadingSlashes(this.path + '/'))
-  var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href="' + escapeHtml(loc) + '">' +
-    escapeHtml(loc) + '</a>')
+  var doc = createHtmlDocument('Redirecting', 'Redirecting to ' + escapeHtml(loc))
 
   // redirect
   res.statusCode = 301
Index: node_modules/brace-expansion/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"brace-expansion\",\r\n  \"description\": \"Brace expansion as known from sh/bash\",\r\n  \"version\": \"1.1.11\",\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git://github.com/juliangruber/brace-expansion.git\"\r\n  },\r\n  \"homepage\": \"https://github.com/juliangruber/brace-expansion\",\r\n  \"main\": \"index.js\",\r\n  \"scripts\": {\r\n    \"test\": \"tape test/*.js\",\r\n    \"gentest\": \"bash test/generate.sh\",\r\n    \"bench\": \"matcha test/perf/bench.js\"\r\n  },\r\n  \"dependencies\": {\r\n    \"balanced-match\": \"^1.0.0\",\r\n    \"concat-map\": \"0.0.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"matcha\": \"^0.7.0\",\r\n    \"tape\": \"^4.6.0\"\r\n  },\r\n  \"keywords\": [],\r\n  \"author\": {\r\n    \"name\": \"Julian Gruber\",\r\n    \"email\": \"mail@juliangruber.com\",\r\n    \"url\": \"http://juliangruber.com\"\r\n  },\r\n  \"license\": \"MIT\",\r\n  \"testling\": {\r\n    \"files\": \"test/*.js\",\r\n    \"browsers\": [\r\n      \"ie/8..latest\",\r\n      \"firefox/20..latest\",\r\n      \"firefox/nightly\",\r\n      \"chrome/25..latest\",\r\n      \"chrome/canary\",\r\n      \"opera/12..latest\",\r\n      \"opera/next\",\r\n      \"safari/5.1..latest\",\r\n      \"ipad/6.0..latest\",\r\n      \"iphone/6.0..latest\",\r\n      \"android-browser/4.2..latest\"\r\n    ]\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/brace-expansion/package.json b/node_modules/brace-expansion/package.json
--- a/node_modules/brace-expansion/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/brace-expansion/package.json	(date 1753913035837)
@@ -1,7 +1,7 @@
 {
   "name": "brace-expansion",
   "description": "Brace expansion as known from sh/bash",
-  "version": "1.1.11",
+  "version": "1.1.12",
   "repository": {
     "type": "git",
     "url": "git://github.com/juliangruber/brace-expansion.git"
@@ -43,5 +43,8 @@
       "iphone/6.0..latest",
       "android-browser/4.2..latest"
     ]
+  },
+  "publishConfig": {
+    "tag": "1.x"
   }
 }
Index: node_modules/brace-expansion/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>var concatMap = require('concat-map');\r\nvar balanced = require('balanced-match');\r\n\r\nmodule.exports = expandTop;\r\n\r\nvar escSlash = '\\0SLASH'+Math.random()+'\\0';\r\nvar escOpen = '\\0OPEN'+Math.random()+'\\0';\r\nvar escClose = '\\0CLOSE'+Math.random()+'\\0';\r\nvar escComma = '\\0COMMA'+Math.random()+'\\0';\r\nvar escPeriod = '\\0PERIOD'+Math.random()+'\\0';\r\n\r\nfunction numeric(str) {\r\n  return parseInt(str, 10) == str\r\n    ? parseInt(str, 10)\r\n    : str.charCodeAt(0);\r\n}\r\n\r\nfunction escapeBraces(str) {\r\n  return str.split('\\\\\\\\').join(escSlash)\r\n            .split('\\\\{').join(escOpen)\r\n            .split('\\\\}').join(escClose)\r\n            .split('\\\\,').join(escComma)\r\n            .split('\\\\.').join(escPeriod);\r\n}\r\n\r\nfunction unescapeBraces(str) {\r\n  return str.split(escSlash).join('\\\\')\r\n            .split(escOpen).join('{')\r\n            .split(escClose).join('}')\r\n            .split(escComma).join(',')\r\n            .split(escPeriod).join('.');\r\n}\r\n\r\n\r\n// Basically just str.split(\",\"), but handling cases\r\n// where we have nested braced sections, which should be\r\n// treated as individual members, like {a,{b,c},d}\r\nfunction parseCommaParts(str) {\r\n  if (!str)\r\n    return [''];\r\n\r\n  var parts = [];\r\n  var m = balanced('{', '}', str);\r\n\r\n  if (!m)\r\n    return str.split(',');\r\n\r\n  var pre = m.pre;\r\n  var body = m.body;\r\n  var post = m.post;\r\n  var p = pre.split(',');\r\n\r\n  p[p.length-1] += '{' + body + '}';\r\n  var postParts = parseCommaParts(post);\r\n  if (post.length) {\r\n    p[p.length-1] += postParts.shift();\r\n    p.push.apply(p, postParts);\r\n  }\r\n\r\n  parts.push.apply(parts, p);\r\n\r\n  return parts;\r\n}\r\n\r\nfunction expandTop(str) {\r\n  if (!str)\r\n    return [];\r\n\r\n  // I don't know why Bash 4.3 does this, but it does.\r\n  // Anything starting with {} will have the first two bytes preserved\r\n  // but *only* at the top level, so {},a}b will not expand to anything,\r\n  // but a{},b}c will be expanded to [a}c,abc].\r\n  // One could argue that this is a bug in Bash, but since the goal of\r\n  // this module is to match Bash's rules, we escape a leading {}\r\n  if (str.substr(0, 2) === '{}') {\r\n    str = '\\\\{\\\\}' + str.substr(2);\r\n  }\r\n\r\n  return expand(escapeBraces(str), true).map(unescapeBraces);\r\n}\r\n\r\nfunction identity(e) {\r\n  return e;\r\n}\r\n\r\nfunction embrace(str) {\r\n  return '{' + str + '}';\r\n}\r\nfunction isPadded(el) {\r\n  return /^-?0\\d/.test(el);\r\n}\r\n\r\nfunction lte(i, y) {\r\n  return i <= y;\r\n}\r\nfunction gte(i, y) {\r\n  return i >= y;\r\n}\r\n\r\nfunction expand(str, isTop) {\r\n  var expansions = [];\r\n\r\n  var m = balanced('{', '}', str);\r\n  if (!m || /\\$$/.test(m.pre)) return [str];\r\n\r\n  var isNumericSequence = /^-?\\d+\\.\\.-?\\d+(?:\\.\\.-?\\d+)?$/.test(m.body);\r\n  var isAlphaSequence = /^[a-zA-Z]\\.\\.[a-zA-Z](?:\\.\\.-?\\d+)?$/.test(m.body);\r\n  var isSequence = isNumericSequence || isAlphaSequence;\r\n  var isOptions = m.body.indexOf(',') >= 0;\r\n  if (!isSequence && !isOptions) {\r\n    // {a},b}\r\n    if (m.post.match(/,.*\\}/)) {\r\n      str = m.pre + '{' + m.body + escClose + m.post;\r\n      return expand(str);\r\n    }\r\n    return [str];\r\n  }\r\n\r\n  var n;\r\n  if (isSequence) {\r\n    n = m.body.split(/\\.\\./);\r\n  } else {\r\n    n = parseCommaParts(m.body);\r\n    if (n.length === 1) {\r\n      // x{{a,b}}y ==> x{a}y x{b}y\r\n      n = expand(n[0], false).map(embrace);\r\n      if (n.length === 1) {\r\n        var post = m.post.length\r\n          ? expand(m.post, false)\r\n          : [''];\r\n        return post.map(function(p) {\r\n          return m.pre + n[0] + p;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  // at this point, n is the parts, and we know it's not a comma set\r\n  // with a single entry.\r\n\r\n  // no need to expand pre, since it is guaranteed to be free of brace-sets\r\n  var pre = m.pre;\r\n  var post = m.post.length\r\n    ? expand(m.post, false)\r\n    : [''];\r\n\r\n  var N;\r\n\r\n  if (isSequence) {\r\n    var x = numeric(n[0]);\r\n    var y = numeric(n[1]);\r\n    var width = Math.max(n[0].length, n[1].length)\r\n    var incr = n.length == 3\r\n      ? Math.abs(numeric(n[2]))\r\n      : 1;\r\n    var test = lte;\r\n    var reverse = y < x;\r\n    if (reverse) {\r\n      incr *= -1;\r\n      test = gte;\r\n    }\r\n    var pad = n.some(isPadded);\r\n\r\n    N = [];\r\n\r\n    for (var i = x; test(i, y); i += incr) {\r\n      var c;\r\n      if (isAlphaSequence) {\r\n        c = String.fromCharCode(i);\r\n        if (c === '\\\\')\r\n          c = '';\r\n      } else {\r\n        c = String(i);\r\n        if (pad) {\r\n          var need = width - c.length;\r\n          if (need > 0) {\r\n            var z = new Array(need + 1).join('0');\r\n            if (i < 0)\r\n              c = '-' + z + c.slice(1);\r\n            else\r\n              c = z + c;\r\n          }\r\n        }\r\n      }\r\n      N.push(c);\r\n    }\r\n  } else {\r\n    N = concatMap(n, function(el) { return expand(el, false) });\r\n  }\r\n\r\n  for (var j = 0; j < N.length; j++) {\r\n    for (var k = 0; k < post.length; k++) {\r\n      var expansion = pre + N[j] + post[k];\r\n      if (!isTop || isSequence || expansion)\r\n        expansions.push(expansion);\r\n    }\r\n  }\r\n\r\n  return expansions;\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/brace-expansion/index.js b/node_modules/brace-expansion/index.js
--- a/node_modules/brace-expansion/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/brace-expansion/index.js	(date 1753913035834)
@@ -109,7 +109,7 @@
   var isOptions = m.body.indexOf(',') >= 0;
   if (!isSequence && !isOptions) {
     // {a},b}
-    if (m.post.match(/,.*\}/)) {
+    if (m.post.match(/,(?!,).*\}/)) {
       str = m.pre + '{' + m.body + escClose + m.post;
       return expand(str);
     }
Index: node_modules/ts-gems/lib/index.mjs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const noOp = x => x;\r\n\r\nexport {\r\n  noOp as asMutable,\r\n  noOp as asDeepMutable,\r\n  noOp as asDeeperMutable,\r\n  noOp as asReadonly,\r\n  noOp as asDeepReadonly,\r\n  noOp as asDeeperReadonly,\r\n  noOp as asPartial,\r\n  noOp as asDeepPartial,\r\n  noOp as asDeeperPartial,\r\n  noOp as asRequired,\r\n  noOp as asDeepRequired,\r\n  noOp as asDeeperRequired,\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/ts-gems/lib/index.mjs b/node_modules/ts-gems/lib/index.mjs
--- a/node_modules/ts-gems/lib/index.mjs	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/ts-gems/lib/index.mjs	(date 1753913035514)
@@ -1,16 +1,16 @@
 const noOp = x => x;
 
 export {
-  noOp as asMutable,
-  noOp as asDeepMutable,
   noOp as asDeeperMutable,
-  noOp as asReadonly,
-  noOp as asDeepReadonly,
+  noOp as asDeeperPartial,
   noOp as asDeeperReadonly,
-  noOp as asPartial,
+  noOp as asDeeperRequired,
+  noOp as asDeepMutable,
   noOp as asDeepPartial,
-  noOp as asDeeperPartial,
-  noOp as asRequired,
+  noOp as asDeepReadonly,
   noOp as asDeepRequired,
-  noOp as asDeeperRequired,
+  noOp as asMutable,
+  noOp as asPartial,
+  noOp as asReadonly,
+  noOp as asRequired,
 };
Index: node_modules/postgres/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><img align=\"left\" width=\"440\" height=\"180\" alt=\"Fastest full PostgreSQL nodejs client\" src=\"https://raw.githubusercontent.com/porsager/postgres/master/postgresjs.svg?sanitize=true\">\r\n\r\n- [\uD83D\uDE80 Fastest full-featured node & deno client](https://github.com/porsager/postgres-benchmarks#results)\r\n- \uD83C\uDFF7 ES6 Tagged Template Strings at the core\r\n- \uD83C\uDFC4\u200D♀\uFE0F Simple surface API\r\n- \uD83D\uDD8A\uFE0F Dynamic query support\r\n- \uD83D\uDCAC Chat and help on [Gitter](https://gitter.im/porsager/postgres)\r\n- \uD83D\uDC26 Follow on [Twitter](https://twitter.com/rporsager)\r\n\r\n<br>\r\n\r\n## Getting started\r\n\r\n<br>\r\n<img height=\"220\" width=\"458\" alt=\"Good UX with Postgres.js\" src=\"https://raw.githubusercontent.com/porsager/postgres/master/demo.gif\">\r\n<br>\r\n\r\n### Installation\r\n```bash\r\n$ npm install postgres\r\n```\r\n\r\n### Usage\r\nCreate your `sql` database instance\r\n```js\r\n// db.js\r\nimport postgres from 'postgres'\r\n\r\nconst sql = postgres({ /* options */ }) // will use psql environment variables\r\n\r\nexport default sql\r\n```\r\n\r\nSimply import for use elsewhere\r\n```js\r\n// users.js\r\nimport sql from './db.js'\r\n\r\nasync function getUsersOver(age) {\r\n  const users = await sql`\r\n    select\r\n      name,\r\n      age\r\n    from users\r\n    where age > ${ age }\r\n  `\r\n  // users = Result [{ name: \"Walter\", age: 80 }, { name: 'Murray', age: 68 }, ...]\r\n  return users\r\n}\r\n\r\n\r\nasync function insertUser({ name, age }) {\r\n  const users = await sql`\r\n    insert into users\r\n      (name, age)\r\n    values\r\n      (${ name }, ${ age })\r\n    returning name, age\r\n  `\r\n  // users = Result [{ name: \"Murray\", age: 68 }]\r\n  return users\r\n}\r\n```\r\n\r\n#### ESM dynamic imports\r\n\r\nThe library can be used with ESM dynamic imports as well as shown here.\r\n\r\n```js\r\nconst { default: postgres } = await import('postgres')\r\n```\r\n\r\n## Table of Contents\r\n\r\n* [Connection](#connection)\r\n* [Queries](#queries)\r\n* [Building queries](#building-queries)\r\n* [Advanced query methods](#advanced-query-methods)\r\n* [Transactions](#transactions)\r\n* [Data Transformation](#data-transformation)\r\n* [Listen & notify](#listen--notify)\r\n* [Realtime subscribe](#realtime-subscribe)\r\n* [Numbers, bigint, numeric](#numbers-bigint-numeric)\r\n* [Result Array](#result-array)\r\n* [Connection details](#connection-details)\r\n* [Custom Types](#custom-types)\r\n* [Teardown / Cleanup](#teardown--cleanup)\r\n* [Error handling](#error-handling)\r\n* [TypeScript support](#typescript-support)\r\n* [Reserving connections](#reserving-connections)\r\n* [Changelog](./CHANGELOG.md)\r\n\r\n\r\n## Connection\r\n\r\n### `postgres([url], [options])`\r\n\r\nYou can use either a `postgres://` url connection string or the options to define your database connection properties. Options in the object will override any present in the url. Options will fall back to the same environment variables as psql.\r\n\r\n```js\r\nconst sql = postgres('postgres://username:password@host:port/database', {\r\n  host                 : '',            // Postgres ip address[s] or domain name[s]\r\n  port                 : 5432,          // Postgres server port[s]\r\n  database             : '',            // Name of database to connect to\r\n  username             : '',            // Username of database user\r\n  password             : '',            // Password of database user\r\n  ...and more\r\n})\r\n```\r\n\r\nMore options can be found in the [Connection details section](#connection-details).\r\n\r\n## Queries\r\n\r\n### ```await sql`...` -> Result[]```\r\n\r\nPostgres.js utilizes [Tagged template functions](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates) to process query parameters **before** interpolation. Using tagged template literals benefits developers by:\r\n\r\n1. **Enforcing** safe query generation\r\n2. Giving the ` sql`` ` function powerful [utility](#dynamic-inserts) and [query building](#building-queries) features.\r\n\r\nAny generic value will be serialized according to an inferred type, and replaced by a PostgreSQL protocol placeholder `$1, $2, ...`. The parameters are then sent separately to the database which handles escaping & casting.\r\n\r\nAll queries will return a `Result` array, with objects mapping column names to each row.\r\n\r\n```js\r\nconst xs = await sql`\r\n  insert into users (\r\n    name, age\r\n  ) values (\r\n    'Murray', 68\r\n  )\r\n\r\n  returning *\r\n`\r\n\r\n// xs = [{ user_id: 1, name: 'Murray', age: 68 }]\r\n```\r\n\r\n> Please note that queries are first executed when `awaited` – or instantly by using [`.execute()`](#execute).\r\n\r\n### Query parameters\r\n\r\nParameters are automatically extracted and handled by the database so that SQL injection isn't possible. No special handling is necessary, simply use tagged template literals as usual.\r\n\r\n```js\r\nconst name = 'Mur'\r\n    , age = 60\r\n\r\nconst users = await sql`\r\n  select\r\n    name,\r\n    age\r\n  from users\r\n  where\r\n    name like ${ name + '%' }\r\n    and age > ${ age }\r\n`\r\n// users = [{ name: 'Murray', age: 68 }]\r\n```\r\n\r\n> Be careful with quotation marks here. Because Postgres infers column types, you do not need to wrap your interpolated parameters in quotes like `'${name}'`. This will cause an error because the tagged template replaces `${name}` with `$1` in the query string, leaving Postgres to do the interpolation. If you wrap that in a string, Postgres will see `'$1'` and interpret it as a string as opposed to a parameter.\r\n\r\n### Dynamic column selection\r\n\r\n```js\r\nconst columns = ['name', 'age']\r\n\r\nawait sql`\r\n  select\r\n    ${ sql(columns) }\r\n  from users\r\n`\r\n\r\n// Which results in:\r\nselect \"name\", \"age\" from users\r\n```\r\n\r\n### Dynamic inserts\r\n\r\n```js\r\nconst user = {\r\n  name: 'Murray',\r\n  age: 68\r\n}\r\n\r\nawait sql`\r\n  insert into users ${\r\n    sql(user, 'name', 'age')\r\n  }\r\n`\r\n\r\n// Which results in:\r\ninsert into users (\"name\", \"age\") values ($1, $2)\r\n\r\n// The columns can also be given with an array\r\nconst columns = ['name', 'age']\r\n\r\nawait sql`\r\n  insert into users ${\r\n    sql(user, columns)\r\n  }\r\n`\r\n```\r\n\r\n**You can omit column names and simply execute `sql(user)` to get all the fields from the object as columns**. Be careful not to allow users to supply columns that you do not want to be inserted.\r\n\r\n#### Multiple inserts in one query\r\nIf you need to insert multiple rows at the same time it's also much faster to do it with a single `insert`. Simply pass an array of objects to `sql()`.\r\n\r\n```js\r\nconst users = [{\r\n  name: 'Murray',\r\n  age: 68,\r\n  garbage: 'ignore'\r\n},\r\n{\r\n  name: 'Walter',\r\n  age: 80\r\n}]\r\n\r\nawait sql`insert into users ${ sql(users, 'name', 'age') }`\r\n\r\n// Is translated to:\r\ninsert into users (\"name\", \"age\") values ($1, $2), ($3, $4)\r\n\r\n// Here you can also omit column names which will use object keys as columns\r\nawait sql`insert into users ${ sql(users) }`\r\n\r\n// Which results in:\r\ninsert into users (\"name\", \"age\") values ($1, $2), ($3, $4)\r\n```\r\n\r\n### Dynamic columns in updates\r\nThis is also useful for update queries\r\n```js\r\nconst user = {\r\n  id: 1,\r\n  name: 'Murray',\r\n  age: 68\r\n}\r\n\r\nawait sql`\r\n  update users set ${\r\n    sql(user, 'name', 'age')\r\n  }\r\n  where user_id = ${ user.id }\r\n`\r\n\r\n// Which results in:\r\nupdate users set \"name\" = $1, \"age\" = $2 where user_id = $3\r\n\r\n// The columns can also be given with an array\r\nconst columns = ['name', 'age']\r\n\r\nawait sql`\r\n  update users set ${\r\n    sql(user, columns)\r\n  }\r\n  where user_id = ${ user.id }\r\n`\r\n```\r\n\r\n### Multiple updates in one query\r\nTo create multiple updates in a single query, it is necessary to use arrays instead of objects to ensure that the order of the items correspond with the column names.\r\n```js\r\nconst users = [\r\n  [1, 'John', 34],\r\n  [2, 'Jane', 27],\r\n]\r\n\r\nawait sql`\r\n  update users set name = update_data.name, age = (update_data.age)::int\r\n  from (values ${sql(users)}) as update_data (id, name, age)\r\n  where users.id = (update_data.id)::int\r\n  returning users.id, users.name, users.age\r\n`\r\n```\r\n\r\n### Dynamic values and `where in`\r\nValue lists can also be created dynamically, making `where in` queries simple too.\r\n```js\r\nconst users = await sql`\r\n  select\r\n    *\r\n  from users\r\n  where age in ${ sql([68, 75, 23]) }\r\n`\r\n```\r\n\r\nor\r\n```js\r\nconst [{ a, b, c }] = await sql`\r\n  select\r\n    *\r\n  from (values ${ sql(['a', 'b', 'c']) }) as x(a, b, c)\r\n`\r\n```\r\n\r\n## Building queries\r\n\r\nPostgres.js features a simple dynamic query builder by conditionally appending/omitting query fragments.\r\nIt works by nesting ` sql`` ` fragments within other ` sql`` ` calls or fragments. This allows you to build dynamic queries safely without risking sql injections through usual string concatenation.\r\n\r\n### Partial queries\r\n```js\r\nconst olderThan = x => sql`and age > ${ x }`\r\n\r\nconst filterAge = true\r\n\r\nawait sql`\r\n  select\r\n   *\r\n  from users\r\n  where name is not null ${\r\n    filterAge\r\n      ? olderThan(50)\r\n      : sql``\r\n  }\r\n`\r\n// Which results in:\r\nselect * from users where name is not null\r\n// Or\r\nselect * from users where name is not null and age > 50\r\n```\r\n\r\n### Dynamic filters\r\n```js\r\nawait sql`\r\n  select\r\n    *\r\n  from users ${\r\n    id\r\n      ? sql`where user_id = ${ id }`\r\n      : sql``\r\n  }\r\n`\r\n\r\n// Which results in:\r\nselect * from users\r\n// Or\r\nselect * from users where user_id = $1\r\n```\r\n\r\n### SQL functions\r\nUsing keywords or calling functions dynamically is also possible by using ``` sql`` ``` fragments.\r\n```js\r\nconst date = null\r\n\r\nawait sql`\r\n  update users set updated_at = ${ date || sql`now()` }\r\n`\r\n\r\n// Which results in:\r\nupdate users set updated_at = now()\r\n```\r\n\r\n### Table names\r\nDynamic identifiers like table names and column names is also supported like so:\r\n```js\r\nconst table = 'users'\r\n    , column = 'id'\r\n\r\nawait sql`\r\n  select ${ sql(column) } from ${ sql(table) }\r\n`\r\n\r\n// Which results in:\r\nselect \"id\" from \"users\"\r\n```\r\n\r\n### Quick primer on interpolation\r\n\r\nHere's a quick oversight over all the ways to do interpolation in a query template string:\r\n\r\n| Interpolation syntax       | Usage                         | Example                                                   |\r\n| -------------              | -------------                 | -------------                                             |\r\n| `${ sql`` }`               | for keywords or sql fragments | ``await sql`SELECT * FROM users ${sql`order by age desc` }` ``  |\r\n| `${ sql(string) }`         | for identifiers               | ``await sql`SELECT * FROM ${sql('table_name')` ``               |\r\n| `${ sql([] or {}, ...) }`  | for helpers                   | ``await sql`INSERT INTO users ${sql({ name: 'Peter'})}` ``      |\r\n| `${ 'somevalue' }`         | for values                    | ``await sql`SELECT * FROM users WHERE age = ${42}` ``           |\r\n\r\n## Advanced query methods\r\n\r\n### Cursors\r\n\r\n#### ```await sql``.cursor([rows = 1], [fn])```\r\n\r\nUse cursors if you need to throttle the amount of rows being returned from a query. You can use a cursor either as an [async iterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for-await...of) or with a callback function. For a callback function new results won't be requested until the promise / async callback function has resolved.\r\n\r\n##### callback function\r\n```js\r\nawait sql`\r\n  select\r\n    *\r\n  from generate_series(1,4) as x\r\n`.cursor(async([row]) => {\r\n  // row = { x: 1 }\r\n  await http.request('https://example.com/wat', { row })\r\n})\r\n```\r\n\r\n##### for await...of\r\n```js\r\n// for await...of\r\nconst cursor = sql`select * from generate_series(1,4) as x`.cursor()\r\n\r\nfor await (const [row] of cursor) {\r\n  // row = { x: 1 }\r\n  await http.request('https://example.com/wat', { row })\r\n}\r\n```\r\n\r\nA single row will be returned by default, but you can also request batches by setting the number of rows desired in each batch as the first argument to `.cursor`:\r\n```js\r\nawait sql`\r\n  select\r\n    *\r\n  from generate_series(1,1000) as x\r\n`.cursor(10, async rows => {\r\n  // rows = [{ x: 1 }, { x: 2 }, ... ]\r\n  await Promise.all(rows.map(row =>\r\n    http.request('https://example.com/wat', { row })\r\n  ))\r\n})\r\n```\r\n\r\nIf an error is thrown inside the callback function no more rows will be requested and the outer promise will reject with the thrown error.\r\n\r\nYou can close the cursor early either by calling `break` in the `for await...of` loop, or by returning the token `sql.CLOSE` from the callback function.\r\n\r\n```js\r\nawait sql`\r\n  select * from generate_series(1,1000) as x\r\n`.cursor(row => {\r\n  return Math.random() > 0.9 && sql.CLOSE // or sql.END\r\n})\r\n```\r\n\r\n### Instant iteration\r\n\r\n#### ```await sql``.forEach(fn)```\r\n\r\nIf you want to handle rows returned by a query one by one, you can use `.forEach` which returns a promise that resolves once there are no more rows.\r\n```js\r\nawait sql`\r\n  select created_at, name from events\r\n`.forEach(row => {\r\n  // row = { created_at: '2019-11-22T14:22:00Z', name: 'connected' }\r\n})\r\n\r\n// No more rows\r\n```\r\n\r\n### Query Descriptions\r\n#### ```await sql``.describe() -> Result[]```\r\n\r\nRather than executing a given query, `.describe` will return information utilized in the query process. This information can include the query identifier, column types, etc.\r\n\r\nThis is useful for debugging and analyzing your Postgres queries. Furthermore, **`.describe` will give you access to the final generated query string that would be executed.**\r\n\r\n### Rows as Array of Values\r\n#### ```sql``.values()```\r\n\r\nUsing `.values` will return rows as an array of values for each column, instead of objects.\r\n\r\nThis can be useful to receive identically named columns, or for specific performance/transformation reasons. The column definitions are still included on the result array, plus access to parsers for each column.\r\n\r\n### Rows as Raw Array of Buffers\r\n#### ```sql``.raw()```\r\n\r\nUsing `.raw` will return rows as an array with `Buffer` values for each column, instead of objects.\r\n\r\nThis can be useful for specific performance/transformation reasons. The column definitions are still included on the result array, plus access to parsers for each column.\r\n\r\n### Queries in Files\r\n#### `await sql.file(path, [args], [options]) -> Result[]`\r\n\r\nUsing a file for a query is also supported with optional parameters to use if the file includes `$1, $2, etc`\r\n\r\n```js\r\nconst result = await sql.file('query.sql', ['Murray', 68])\r\n```\r\n\r\n### Multiple statements in one query\r\n#### ```await sql``.simple()```\r\n\r\nThe postgres wire protocol supports [\"simple\"](https://www.postgresql.org/docs/current/protocol-flow.html#id-1.10.6.7.4) and [\"extended\"](https://www.postgresql.org/docs/current/protocol-flow.html#PROTOCOL-FLOW-EXT-QUERY) queries. \"simple\" queries supports multiple statements, but does not support any dynamic parameters. \"extended\" queries support parameters but only one statement. To use \"simple\" queries you can use\r\n```sql``.simple()```. That will create it as a simple query.\r\n\r\n```js\r\nawait sql`select 1; select 2;`.simple()\r\n```\r\n\r\n### Copy to/from as Streams\r\n\r\nPostgres.js supports [`COPY ...`](https://www.postgresql.org/docs/14/sql-copy.html) queries, which are exposed as [Node.js streams](https://nodejs.org/api/stream.html).\r\n\r\n#### ```await sql`copy ... from stdin`.writable() -> Writable```\r\n\r\n```js\r\nimport { pipeline } from 'node:stream/promises'\r\n\r\n// Stream of users with the default tab delimitated cells and new-line delimitated rows\r\nconst userStream = Readable.from([\r\n  'Murray\\t68\\n',\r\n  'Walter\\t80\\n'\r\n])\r\n\r\nconst query = await sql`copy users (name, age) from stdin`.writable()\r\nawait pipeline(userStream, query);\r\n```\r\n\r\n#### ```await sql`copy ... to stdout`.readable() -> Readable```\r\n\r\n##### Using Stream Pipeline\r\n```js\r\nimport { pipeline } from 'node:stream/promises'\r\nimport { createWriteStream } from 'node:fs'\r\n\r\nconst readableStream = await sql`copy users (name, age) to stdout`.readable()\r\nawait pipeline(readableStream, createWriteStream('output.tsv'))\r\n// output.tsv content: `Murray\\t68\\nWalter\\t80\\n`\r\n```\r\n\r\n##### Using `for await...of`\r\n```js\r\nconst readableStream = await sql`\r\n  copy (\r\n    select name, age\r\n    from users\r\n    where age = 68\r\n  ) to stdout\r\n`.readable()\r\nfor await (const chunk of readableStream) {\r\n  // chunk.toString() === `Murray\\t68\\n`\r\n}\r\n```\r\n\r\n> **NOTE** This is a low-level API which does not provide any type safety. To make this work, you must match your [`copy query` parameters](https://www.postgresql.org/docs/14/sql-copy.html) correctly to your [Node.js stream read or write](https://nodejs.org/api/stream.html) code. Ensure [Node.js stream backpressure](https://nodejs.org/en/docs/guides/backpressuring-in-streams/) is handled correctly to avoid memory exhaustion.\r\n\r\n### Canceling Queries in Progress\r\n\r\nPostgres.js supports, [canceling queries in progress](https://www.postgresql.org/docs/7.1/protocol-protocol.html#AEN39000). It works by opening a new connection with a protocol level startup message to cancel the current query running on a specific connection. That means there is no guarantee that the query will be canceled, and due to the possible race conditions it might even result in canceling another query. This is fine for long running queries, but in the case of high load and fast queries it might be better to simply ignore results instead of canceling.\r\n\r\n```js\r\nconst query = sql`select pg_sleep 100`.execute()\r\nsetTimeout(() => query.cancel(), 100)\r\nconst result = await query\r\n```\r\n\r\n### Execute\r\n\r\n#### ```await sql``.execute()```\r\n\r\nThe lazy Promise implementation in Postgres.js is what allows it to distinguish [Nested Fragments](#building-queries) from the main outer query. This also means that queries are always executed at the earliest in the following tick. If you have a specific need to execute the query in the same tick, you can call `.execute()`\r\n\r\n### Unsafe raw string queries\r\n\r\n<details>\r\n<summary>Advanced unsafe use cases</summary>\r\n\r\n### `await sql.unsafe(query, [args], [options]) -> Result[]`\r\n\r\nIf you know what you're doing, you can use `unsafe` to pass any string you'd like to postgres. Please note that this can lead to SQL injection if you're not careful.\r\n\r\n```js\r\nsql.unsafe('select ' + danger + ' from users where id = ' + dragons)\r\n```\r\n\r\nYou can also nest `sql.unsafe` within a safe `sql` expression.  This is useful if only part of your fraction has unsafe elements.\r\n\r\n```js\r\nconst triggerName = 'friend_created'\r\nconst triggerFnName = 'on_friend_created'\r\nconst eventType = 'insert'\r\nconst schema_name = 'app'\r\nconst table_name = 'friends'\r\n\r\nawait sql`\r\n  create or replace trigger ${sql(triggerName)}\r\n  after ${sql.unsafe(eventType)} on ${sql.unsafe(`${schema_name}.${table_name}`)}\r\n  for each row\r\n  execute function ${sql(triggerFnName)}()\r\n`\r\n\r\nawait sql`\r\n  create role friend_service with login password ${sql.unsafe(`'${password}'`)}\r\n`\r\n```\r\n\r\n</details>\r\n\r\n## Transactions\r\n\r\n#### BEGIN / COMMIT `await sql.begin([options = ''], fn) -> fn()`\r\n\r\nUse `sql.begin` to start a new transaction. Postgres.js will reserve a connection for the transaction and supply a scoped `sql` instance for all transaction uses in the callback function. `sql.begin` will resolve with the returned value from the callback function.\r\n\r\n`BEGIN` is automatically sent with the optional options, and if anything fails `ROLLBACK` will be called so the connection can be released and execution can continue.\r\n\r\n```js\r\nconst [user, account] = await sql.begin(async sql => {\r\n  const [user] = await sql`\r\n    insert into users (\r\n      name\r\n    ) values (\r\n      'Murray'\r\n    )\r\n    returning *\r\n  `\r\n\r\n  const [account] = await sql`\r\n    insert into accounts (\r\n      user_id\r\n    ) values (\r\n      ${ user.user_id }\r\n    )\r\n    returning *\r\n  `\r\n\r\n  return [user, account]\r\n})\r\n```\r\n\r\nDo note that you can often achieve the same result using [`WITH` queries (Common Table Expressions)](https://www.postgresql.org/docs/current/queries-with.html) instead of using transactions.\r\n\r\nIt's also possible to pipeline the requests in a transaction if needed by returning an array with queries from the callback function like this:\r\n\r\n```js\r\nconst result = await sql.begin(sql => [\r\n  sql`update ...`,\r\n  sql`update ...`,\r\n  sql`insert ...`\r\n])\r\n```\r\n\r\n#### SAVEPOINT `await sql.savepoint([name], fn) -> fn()`\r\n\r\n```js\r\nsql.begin('read write', async sql => {\r\n  const [user] = await sql`\r\n    insert into users (\r\n      name\r\n    ) values (\r\n      'Murray'\r\n    )\r\n  `\r\n\r\n  const [account] = (await sql.savepoint(sql =>\r\n    sql`\r\n      insert into accounts (\r\n        user_id\r\n      ) values (\r\n        ${ user.user_id }\r\n      )\r\n    `\r\n  ).catch(err => {\r\n    // Account could not be created. ROLLBACK SAVEPOINT is called because we caught the rejection.\r\n  })) || []\r\n\r\n  return [user, account]\r\n})\r\n.then(([user, account]) => {\r\n  // great success - COMMIT succeeded\r\n})\r\n.catch(() => {\r\n  // not so good - ROLLBACK was called\r\n})\r\n```\r\n\r\n\r\n#### PREPARE TRANSACTION `await sql.prepare([name]) -> fn()`\r\n\r\nIndicates that the transactions should be prepared using the [`PREPARE TRANSACTION [NAME]`](https://www.postgresql.org/docs/current/sql-prepare-transaction.html) statement\r\ninstead of being committed.\r\n\r\n```js\r\nsql.begin('read write', async sql => {\r\n  const [user] = await sql`\r\n    insert into users (\r\n      name\r\n    ) values (\r\n      'Murray'\r\n    )\r\n  `\r\n\r\n  await sql.prepare('tx1')\r\n})\r\n```\r\n\r\n## Data Transformation\r\n\r\nPostgres.js allows for transformation of the data passed to or returned from a query by using the `transform` option.\r\n\r\nBuilt in transformation functions are:\r\n\r\n* For camelCase - `postgres.camel`, `postgres.toCamel`, `postgres.fromCamel`\r\n* For PascalCase - `postgres.pascal`, `postgres.toPascal`, `postgres.fromPascal`\r\n* For Kebab-Case - `postgres.kebab`, `postgres.toKebab`, `postgres.fromKebab`\r\n\r\nThese built in transformations will only convert to/from snake_case. For example, using `{ transform: postgres.toCamel }` will convert the column names to camelCase only if the column names are in snake_case to begin with. `{ transform: postgres.fromCamel }` will convert camelCase only to snake_case.\r\n\r\nBy default, using `postgres.camel`, `postgres.pascal` and `postgres.kebab` will perform a two-way transformation - both the data passed to the query and the data returned by the query will be transformed:\r\n\r\n```js\r\n// Transform the column names to and from camel case\r\nconst sql = postgres({ transform: postgres.camel })\r\n\r\nawait sql`CREATE TABLE IF NOT EXISTS camel_case (a_test INTEGER, b_test TEXT)`\r\nawait sql`INSERT INTO camel_case ${ sql([{ aTest: 1, bTest: 1 }]) }`\r\nconst data = await sql`SELECT ${ sql('aTest', 'bTest') } FROM camel_case`\r\n\r\nconsole.log(data) // [ { aTest: 1, bTest: '1' } ]\r\n```\r\n\r\nTo only perform half of the transformation (eg. only the transformation **to** or **from** camel case), use the other transformation functions:\r\n\r\n```js\r\n// Transform the column names only to camel case\r\n// (for the results that are returned from the query)\r\npostgres({ transform: postgres.toCamel })\r\n\r\nawait sql`CREATE TABLE IF NOT EXISTS camel_case (a_test INTEGER)`\r\nawait sql`INSERT INTO camel_case ${ sql([{ a_test: 1 }]) }`\r\nconst data = await sql`SELECT a_test FROM camel_case`\r\n\r\nconsole.log(data) // [ { aTest: 1 } ]\r\n```\r\n\r\n```js\r\n// Transform the column names only from camel case\r\n// (for interpolated inserts, updates, and selects)\r\nconst sql = postgres({ transform: postgres.fromCamel })\r\n\r\nawait sql`CREATE TABLE IF NOT EXISTS camel_case (a_test INTEGER)`\r\nawait sql`INSERT INTO camel_case ${ sql([{ aTest: 1 }]) }`\r\nconst data = await sql`SELECT ${ sql('aTest') } FROM camel_case`\r\n\r\nconsole.log(data) // [ { a_test: 1 } ]\r\n```\r\n\r\n> Note that Postgres.js does not rewrite the static parts of the tagged template strings. So to transform column names in your queries, the `sql()` helper must be used - eg. `${ sql('columnName') }` as in the examples above.\r\n\r\n### Transform `undefined` Values\r\n\r\nBy default, Postgres.js will throw the error `UNDEFINED_VALUE: Undefined values are not allowed` when undefined values are passed\r\n\r\n```js\r\n// Transform the column names to and from camel case\r\nconst sql = postgres({\r\n  transform: {\r\n    undefined: null\r\n  }\r\n})\r\n\r\nawait sql`CREATE TABLE IF NOT EXISTS transform_undefined (a_test INTEGER)`\r\nawait sql`INSERT INTO transform_undefined ${ sql([{ a_test: undefined }]) }`\r\nconst data = await sql`SELECT a_test FROM transform_undefined`\r\n\r\nconsole.log(data) // [ { a_test: null } ]\r\n```\r\n\r\nTo combine with the built in transform functions, spread the transform in the `transform` object:\r\n\r\n```js\r\n// Transform the column names to and from camel case\r\nconst sql = postgres({\r\n  transform: {\r\n    ...postgres.camel,\r\n    undefined: null\r\n  }\r\n})\r\n\r\nawait sql`CREATE TABLE IF NOT EXISTS transform_undefined (a_test INTEGER)`\r\nawait sql`INSERT INTO transform_undefined ${ sql([{ aTest: undefined }]) }`\r\nconst data = await sql`SELECT ${ sql('aTest') } FROM transform_undefined`\r\n\r\nconsole.log(data) // [ { aTest: null } ]\r\n```\r\n\r\n### Custom Transform Functions\r\n\r\nTo specify your own transformation functions, you can use the `column`, `value` and `row` options inside of `transform`, each an object possibly including `to` and `from` keys:\r\n\r\n* `to`: The function to transform the outgoing query column name to, i.e `SELECT ${ sql('aName') }` to `SELECT a_name` when using `postgres.toCamel`.\r\n* `from`: The function to transform the incoming query result column name to, see example below.\r\n\r\n> Both parameters are optional, if not provided, the default transformation function will be used.\r\n\r\n```js\r\n// Implement your own functions, look at postgres.toCamel, etc\r\n// as a reference:\r\n// https://github.com/porsager/postgres/blob/4241824ffd7aa94ffb482e54ca9f585d9d0a4eea/src/types.js#L310-L328\r\nfunction transformColumnToDatabase() { /* ... */ }\r\nfunction transformColumnFromDatabase() { /* ... */ }\r\n\r\nconst sql = postgres({\r\n  transform: {\r\n    column: {\r\n      to: transformColumnToDatabase,\r\n      from: transformColumnFromDatabase,\r\n    },\r\n    value: { /* ... */ },\r\n    row: { /* ... */ }\r\n  }\r\n})\r\n```\r\n\r\n## Listen & notify\r\n\r\nWhen you call `.listen`, a dedicated connection will be created to ensure that you receive notifications instantly. This connection will be used for any further calls to `.listen`. The connection will automatically reconnect according to a backoff reconnection pattern to not overload the database server.\r\n\r\n### Listen `await sql.listen(channel, onnotify, [onlisten]) -> { state }`\r\n`.listen` takes the channel name, a function to handle each notify, and an optional function to run every time listen is registered and ready (happens on initial connect and reconnects). It returns a promise which resolves once the `LISTEN` query to Postgres completes, or if there is already a listener active.\r\n\r\n```js\r\nawait sql.listen('news', payload => {\r\n  const json = JSON.parse(payload)\r\n  console.log(json.this) // logs 'is'\r\n})\r\n```\r\n\r\nThe optional `onlisten` method is great to use for a very simply queue mechanism:\r\n\r\n```js\r\nawait sql.listen(\r\n  'jobs',\r\n  (x) => run(JSON.parse(x)),\r\n  ( ) => sql`select unfinished_jobs()`.forEach(run)\r\n)\r\n\r\nfunction run(job) {\r\n  // And here you do the work you please\r\n}\r\n```\r\n### Notify `await sql.notify(channel, payload) -> Result[]`\r\nNotify can be done as usual in SQL, or by using the `sql.notify` method.\r\n```js\r\nsql.notify('news', JSON.stringify({ no: 'this', is: 'news' }))\r\n```\r\n\r\n## Realtime subscribe\r\n\r\nPostgres.js implements the logical replication protocol of PostgreSQL to support subscription to real-time updates of `insert`, `update` and `delete` operations.\r\n\r\n> **NOTE** To make this work you must [create the proper publications in your database](https://www.postgresql.org/docs/current/sql-createpublication.html), enable logical replication by setting `wal_level = logical` in `postgresql.conf` and connect using either a replication or superuser.\r\n\r\n### Quick start\r\n\r\n#### Create a publication (eg. in migration)\r\n```sql\r\nCREATE PUBLICATION alltables FOR ALL TABLES\r\n```\r\n\r\n#### Subscribe to updates\r\n```js\r\nconst sql = postgres({ publications: 'alltables' })\r\n\r\nconst { unsubscribe } = await sql.subscribe(\r\n  'insert:events',\r\n  (row, { command, relation, key, old }) => {\r\n    // Callback function for each row change\r\n    // tell about new event row over eg. websockets or do something else\r\n  },\r\n  () => {\r\n    // Callback on initial connect and potential reconnects\r\n  }\r\n)\r\n```\r\n\r\n### Subscribe pattern\r\n\r\nYou can subscribe to specific operations, tables, or even rows with primary keys.\r\n\r\n#### `operation`      `:` `schema` `.` `table` `=` `primary_key`\r\n\r\n**`operation`** is one of ``` * | insert | update | delete ``` and defaults to `*`\r\n\r\n**`schema`** defaults to `public`\r\n\r\n**`table`** is a specific table name and defaults to `*`\r\n\r\n**`primary_key`** can be used to only subscribe to specific rows\r\n\r\n### Examples\r\n\r\n```js\r\nsql.subscribe('*',                () => /* everything */ )\r\nsql.subscribe('insert',           () => /* all inserts */ )\r\nsql.subscribe('*:users',          () => /* all operations on the public.users table */ )\r\nsql.subscribe('delete:users',     () => /* all deletes on the public.users table */ )\r\nsql.subscribe('update:users=1',   () => /* all updates on the users row with a primary key = 1 */ )\r\n```\r\n\r\n## Numbers, bigint, numeric\r\n\r\n`Number` in javascript is only able to represent 2<sup>53</sup>-1 safely which means that types in PostgreSQLs like `bigint` and `numeric` won't fit into `Number`.\r\n\r\nSince Node.js v10.4 we can use [`BigInt`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt) to match the PostgreSQL type `bigint` which is returned for eg. `count(*)`. Unfortunately, it doesn't work with `JSON.stringify` out of the box, so Postgres.js will return it as a string.\r\n\r\nIf you want to use `BigInt` you can add this custom type:\r\n\r\n```js\r\nconst sql = postgres({\r\n  types: {\r\n    bigint: postgres.BigInt\r\n  }\r\n})\r\n```\r\n\r\nThere is currently no guaranteed way to handle `numeric` / `decimal` types in native Javascript. **These [and similar] types will be returned as a `string`**. The best way in this case is to use  [custom types](#custom-types).\r\n\r\n## Result Array\r\n\r\nThe `Result` Array returned from queries is a custom array allowing for easy destructuring or passing on directly to JSON.stringify or general Array usage. It includes the following properties.\r\n\r\n### .count\r\n\r\nThe `count` property is the number of affected rows returned by the database. This is useful for insert, update and delete operations to know the number of rows since .length will be 0 in these cases if not using `RETURNING ...`.\r\n\r\n### .command\r\n\r\nThe `command` run by the query - eg. one of `SELECT`, `UPDATE`, `INSERT`, `DELETE`\r\n\r\n### .columns\r\n\r\nThe `columns` returned by the query useful to determine types, or map to the result values when using `.values()`\r\n\r\n```js\r\n{\r\n  name  : String,    // Column name,\r\n  type  : oid,       // PostgreSQL oid column type\r\n  parser: Function   // The function used by Postgres.js for parsing\r\n}\r\n```\r\n\r\n### .statement\r\n\r\nThe `statement` contains information about the statement implicitly created by Postgres.js.\r\n\r\n```js\r\n{\r\n  name    : String,  // The auto generated statement name\r\n  string  : String,  // The actual query string executed\r\n  types   : [oid],   // An array of oid expected as input parameters\r\n  columns : [Column] // Array of columns - same as Result.columns\r\n}\r\n```\r\n\r\n### .state\r\n\r\nThis is the state `{ pid, secret }` of the connection that executed the query.\r\n\r\n## Connection details\r\n\r\n### All Postgres options\r\n\r\n```js\r\nconst sql = postgres('postgres://username:password@host:port/database', {\r\n  host                 : '',            // Postgres ip address[es] or domain name[s]\r\n  port                 : 5432,          // Postgres server port[s]\r\n  path                 : '',            // unix socket path (usually '/tmp')\r\n  database             : '',            // Name of database to connect to\r\n  username             : '',            // Username of database user\r\n  password             : '',            // Password of database user\r\n  ssl                  : false,         // true, prefer, require, tls.connect options\r\n  max                  : 10,            // Max number of connections\r\n  max_lifetime         : null,          // Max lifetime in seconds (more info below)\r\n  idle_timeout         : 0,             // Idle connection timeout in seconds\r\n  connect_timeout      : 30,            // Connect timeout in seconds\r\n  prepare              : true,          // Automatic creation of prepared statements\r\n  types                : [],            // Array of custom types, see more below\r\n  onnotice             : fn,            // Default console.log, set false to silence NOTICE\r\n  onparameter          : fn,            // (key, value) when server param change\r\n  debug                : fn,            // Is called with (connection, query, params, types)\r\n  socket               : fn,            // fn returning custom socket to use\r\n  transform            : {\r\n    undefined          : undefined,     // Transforms undefined values (eg. to null)\r\n    column             : fn,            // Transforms incoming column names\r\n    value              : fn,            // Transforms incoming row values\r\n    row                : fn             // Transforms entire rows\r\n  },\r\n  connection           : {\r\n    application_name   : 'postgres.js', // Default application_name\r\n    ...                                 // Other connection parameters, see https://www.postgresql.org/docs/current/runtime-config-client.html\r\n  },\r\n  target_session_attrs : null,          // Use 'read-write' with multiple hosts to\r\n                                        // ensure only connecting to primary\r\n  fetch_types          : true,          // Automatically fetches types on connect\r\n                                        // on initial connection.\r\n})\r\n```\r\n\r\nNote that `max_lifetime = 60 * (30 + Math.random() * 30)` by default. This resolves to an interval between 45 and 90 minutes to optimize for the benefits of prepared statements **and** working nicely with Linux's OOM killer.\r\n\r\n### Dynamic passwords\r\n\r\nWhen clients need to use alternative authentication schemes such as access tokens or connections to databases with rotating passwords, provide either a synchronous or asynchronous function that will resolve the dynamic password value at connection time.\r\n\r\n```js\r\nconst sql = postgres(url, {\r\n  // Other connection config\r\n  ...\r\n  // Password function for the database user\r\n  password : async () => await signer.getAuthToken(),\r\n})\r\n```\r\n\r\n### SSL\r\n\r\nAlthough [vulnerable to MITM attacks](https://security.stackexchange.com/a/229297/174913), a common configuration for the `ssl` option for some cloud providers is to set `rejectUnauthorized` to `false` (if `NODE_ENV` is `production`):\r\n\r\n```js\r\nconst sql =\r\n  process.env.NODE_ENV === 'production'\r\n    ? // \"Unless you're using a Private or Shield Heroku Postgres database, Heroku Postgres does not currently support verifiable certificates\"\r\n      // https://help.heroku.com/3DELT3RK/why-can-t-my-third-party-utility-connect-to-heroku-postgres-with-ssl\r\n      postgres({ ssl: { rejectUnauthorized: false } })\r\n    : postgres()\r\n```\r\n\r\nFor more information regarding `ssl` with `postgres`, check out the [Node.js documentation for tls](https://nodejs.org/dist/latest-v16.x/docs/api/tls.html#new-tlstlssocketsocket-options).\r\n\r\n\r\n### Multi-host connections - High Availability (HA)\r\n\r\nMultiple connection strings can be passed to `postgres()` in the form of `postgres('postgres://localhost:5432,localhost:5433', ...)`. This works the same as native the `psql` command. Read more at [multiple host URIs](https://www.postgresql.org/docs/13/libpq-connect.html#LIBPQ-MULTIPLE-HOSTS).\r\n\r\nConnections will be attempted in order of the specified hosts/ports. On a successful connection, all retries will be reset. This ensures that hosts can come up and down seamlessly.\r\n\r\nIf you specify `target_session_attrs: 'primary'` or `PGTARGETSESSIONATTRS=primary` Postgres.js will only connect to the primary host, allowing for zero downtime failovers.\r\n\r\n### The Connection Pool\r\n\r\nConnections are created lazily once a query is created. This means that simply doing const `sql = postgres(...)` won't have any effect other than instantiating a new `sql` instance.\r\n\r\n> No connection will be made until a query is made.\r\n\r\nFor example:\r\n\r\n```js\r\nconst sql = postgres() // no connections are opened\r\n\r\nawait sql`...` // one connection is now opened\r\nawait sql`...` // previous opened connection is reused\r\n\r\n// two connections are opened now\r\nawait Promise.all([\r\n  sql`...`,\r\n  sql`...`\r\n])\r\n```\r\n\r\n> When there are high amount of concurrent queries, `postgres` will open as many connections as needed up until `max` number of connections is reached. By default `max` is 10. This can be changed by setting `max` in the `postgres()` call. Example - `postgres('connectionURL', { max: 20 })`.\r\n\r\nThis means that we get a much simpler story for error handling and reconnections. Queries will be sent over the wire immediately on the next available connection in the pool. Connections are automatically taken out of the pool if you start a transaction using `sql.begin()`, and automatically returned to the pool once your transaction is done.\r\n\r\nAny query which was already sent over the wire will be rejected if the connection is lost. It'll automatically defer to the error handling you have for that query, and since connections are lazy it'll automatically try to reconnect the next time a query is made. The benefit of this is no weird generic \"onerror\" handler that tries to get things back to normal, and also simpler application code since you don't have to handle errors out of context.\r\n\r\nThere are no guarantees about queries executing in order unless using a transaction with `sql.begin()` or setting `max: 1`. Of course doing a series of queries, one awaiting the other will work as expected, but that's just due to the nature of js async/promise handling, so it's not necessary for this library to be concerned with ordering.\r\n\r\nSince this library automatically creates prepared statements, it also has a default max lifetime for connections to prevent memory bloat on the database itself. This is a random interval for each connection between 45 and 90 minutes. This allows multiple connections to independently come up and down without affecting the service.\r\n\r\n### Connection timeout\r\n\r\nBy default, connections will not close until `.end()` is called. However, it may be useful to have them close automatically when:\r\n\r\n- re-instantiating multiple ` sql`` ` instances\r\n- using Postgres.js in a Serverless environment (Lambda, etc.)\r\n- using Postgres.js with a database service that automatically closes connections after some time (see [`ECONNRESET` issue](https://github.com/porsager/postgres/issues/179))\r\n\r\nThis can be done using the `idle_timeout` or `max_lifetime` options. These configuration options specify the number of seconds to wait before automatically closing an idle connection and the maximum time a connection can exist, respectively.\r\n\r\nFor example, to close a connection that has either been idle for 20 seconds or existed for more than 30 minutes:\r\n\r\n```js\r\nconst sql = postgres({\r\n  idle_timeout: 20,\r\n  max_lifetime: 60 * 30\r\n})\r\n```\r\n\r\n### Cloudflare Workers support\r\n\r\nPostgres.js has built-in support for the [TCP socket API](https://developers.cloudflare.com/workers/runtime-apis/tcp-sockets/) in Cloudflare Workers, which is [on-track](https://github.com/wintercg/proposal-sockets-api) to be standardized and adopted in Node.js and other JavaScript runtimes, such as Deno.\r\n\r\nYou can use Postgres.js directly in a Worker, or to benefit from connection pooling and query caching, via the [Hyperdrive](https://developers.cloudflare.com/hyperdrive/learning/connect-to-postgres/#driver-examples) service available to Workers by passing the Hyperdrive `connectionString` when creating a new `postgres` client as follows:\r\n\r\n```ts\r\n// Requires Postgres.js 3.4.0 or later\r\nimport postgres from 'postgres'\r\n\r\ninterface Env {\r\n    HYPERDRIVE: Hyperdrive;\r\n}\r\n\r\nexport default async fetch(req: Request, env: Env, ctx: ExecutionContext) {\r\n    // The Postgres.js library accepts a connection string directly\r\n    const sql = postgres(env.HYPERDRIVE.connectionString)\r\n    const results = await sql`SELECT * FROM users LIMIT 10`\r\n    return Response.json(results)\r\n}\r\n```\r\n\r\nIn `wrangler.toml` you will need to enable the `nodejs_compat` compatibility flag to allow Postgres.js to operate in the Workers environment:\r\n\r\n```toml\r\ncompatibility_flags = [\"nodejs_compat\"]\r\n```\r\n\r\n### Auto fetching of array types\r\n\r\nPostgres.js will automatically fetch table/array-type information when it first connects to a database.\r\n\r\nIf you have revoked access to `pg_catalog` this feature will no longer work and will need to be disabled.\r\n\r\nYou can disable this feature by setting `fetch_types` to `false`.\r\n\r\n### Environmental variables\r\n\r\nIt is also possible to connect to the database without a connection string or any options. Postgres.js will fall back to the common environment variables used by `psql` as in the table below:\r\n\r\n```js\r\nconst sql = postgres()\r\n```\r\n\r\n| Option            | Environment Variables    |\r\n| ----------------- | ------------------------ |\r\n| `host`            | `PGHOST`                 |\r\n| `port`            | `PGPORT`                 |\r\n| `database`        | `PGDATABASE`             |\r\n| `username`        | `PGUSERNAME` or `PGUSER` |\r\n| `password`        | `PGPASSWORD`             |\r\n| `idle_timeout`    | `PGIDLE_TIMEOUT`         |\r\n| `connect_timeout` | `PGCONNECT_TIMEOUT`      |\r\n\r\n### Prepared statements\r\n\r\nPrepared statements will automatically be created for any queries where it can be inferred that the query is static. This can be disabled by using the `prepare: false` option. For instance — this is useful when [using PGBouncer in `transaction mode`](https://github.com/porsager/postgres/issues/93#issuecomment-656290493).\r\n\r\n## Custom Types\r\n\r\nYou can add ergonomic support for custom types, or simply use `sql.typed(value, type)` inline, where type is the PostgreSQL `oid` for the type and the correctly serialized string. _(`oid` values for types can be found in the `pg_catalog.pg_type` table.)_\r\n\r\nAdding Query helpers is the cleanest approach which can be done like this:\r\n\r\n```js\r\nconst sql = postgres({\r\n  types: {\r\n    rect: {\r\n      // The pg_types oid to pass to the db along with the serialized value.\r\n      to        : 1337,\r\n\r\n      // An array of pg_types oids to handle when parsing values coming from the db.\r\n      from      : [1337],\r\n\r\n      //Function that transform values before sending them to the db.\r\n      serialize : ({ x, y, width, height }) => [x, y, width, height],\r\n\r\n      // Function that transforms values coming from the db.\r\n      parse     : ([x, y, width, height]) => { x, y, width, height }\r\n    }\r\n  }\r\n})\r\n\r\n// Now you can use sql.typed.rect() as specified above\r\nconst [custom] = await sql`\r\n  insert into rectangles (\r\n    name,\r\n    rect\r\n  ) values (\r\n    'wat',\r\n    ${ sql.typed.rect({ x: 13, y: 37, width: 42, height: 80 }) }\r\n  )\r\n  returning *\r\n`\r\n\r\n// custom = { name: 'wat', rect: { x: 13, y: 37, width: 42, height: 80 } }\r\n\r\n```\r\n\r\n### Custom socket\r\n\r\nEasily do in-process ssh tunneling to your database by providing a custom socket for Postgres.js to use. The function (optionally async) must return a socket-like duplex stream.\r\n\r\nHere's a sample using [ssh2](https://github.com/mscdex/ssh2)\r\n\r\n```js\r\nimport ssh2 from 'ssh2'\r\n\r\nconst sql = postgres({\r\n  ...options,\r\n  socket: ({ host: [host], port: [port] }) => new Promise((resolve, reject) => {\r\n    const ssh = new ssh2.Client()\r\n    ssh\r\n    .on('error', reject)\r\n    .on('ready', () =>\r\n      ssh.forwardOut('127.0.0.1', 12345, host, port,\r\n        (err, socket) => err ? reject(err) : resolve(socket)\r\n      )\r\n    )\r\n    .connect(sshOptions)\r\n  })\r\n})\r\n```\r\n\r\n## Teardown / Cleanup\r\n\r\nTo ensure proper teardown and cleanup on server restarts use `await sql.end()` before `process.exit()`.\r\n\r\nCalling `sql.end()` will reject new queries and return a Promise which resolves when all queries are finished and the underlying connections are closed. If a `{ timeout }` option is provided any pending queries will be rejected once the timeout (in seconds) is reached and the connections will be destroyed.\r\n\r\n#### Sample shutdown using [Prexit](https://github.com/porsager/prexit)\r\n\r\n```js\r\nimport prexit from 'prexit'\r\n\r\nprexit(async () => {\r\n  await sql.end({ timeout: 5 })\r\n  await new Promise(r => server.close(r))\r\n})\r\n```\r\n\r\n## Reserving connections\r\n\r\n### `await sql.reserve()`\r\n\r\nThe `reserve` method pulls out a connection from the pool, and returns a client that wraps the single connection. This can be used for running queries on an isolated connection.\r\n\r\n```ts\r\nconst reserved = await sql.reserve()\r\nawait reserved`select * from users`\r\nawait reserved.release()\r\n```\r\n\r\n### `reserved.release()`\r\n\r\nOnce you have finished with the reserved connection, call `release` to add it back to the pool.\r\n\r\n## Error handling\r\n\r\nErrors are all thrown to related queries and never globally. Errors coming from database itself are always in the [native Postgres format](https://www.postgresql.org/docs/current/errcodes-appendix.html), and the same goes for any [Node.js errors](https://nodejs.org/api/errors.html#errors_common_system_errors) eg. coming from the underlying connection.\r\n\r\nQuery errors will contain a stored error with the origin of the query to aid in tracing errors.\r\n\r\nQuery errors will also contain the `query` string and the `parameters`. These are not enumerable to avoid accidentally leaking confidential information in logs. To log these it is required to specifically access `error.query` and `error.parameters`, or set `debug: true` in options.\r\n\r\nThere are also the following errors specifically for this library.\r\n\r\n##### UNSAFE_TRANSACTION\r\n> Only use sql.begin or max: 1\r\n\r\nTo ensure statements in a transaction runs on the same connection (which is required for them to run inside the transaction), you must use [`sql.begin(...)`](#transactions) or only allow a single connection in options (`max: 1`).\r\n\r\n##### UNDEFINED_VALUE\r\n> Undefined values are not allowed\r\n\r\nPostgres.js won't accept `undefined` as values in tagged template queries since it becomes ambiguous what to do with the value. If you want to set something to null, use `null` explicitly.\r\n\r\n##### MESSAGE_NOT_SUPPORTED\r\n> X (X) is not supported\r\n\r\nWhenever a message is received from Postgres which is not supported by this library. Feel free to file an issue if you think something is missing.\r\n\r\n##### MAX_PARAMETERS_EXCEEDED\r\n> Max number of parameters (65534) exceeded\r\n\r\nThe postgres protocol doesn't allow more than 65534 (16bit) parameters. If you run into this issue there are various workarounds such as using `sql([...])` to escape values instead of passing them as parameters.\r\n\r\n##### SASL_SIGNATURE_MISMATCH\r\n> Message type X not supported\r\n\r\nWhen using SASL authentication the server responds with a signature at the end of the authentication flow which needs to match the one on the client. This is to avoid [man-in-the-middle attacks](https://en.wikipedia.org/wiki/Man-in-the-middle_attack). If you receive this error the connection was canceled because the server did not reply with the expected signature.\r\n\r\n##### NOT_TAGGED_CALL\r\n> Query not called as a tagged template literal\r\n\r\nMaking queries has to be done using the sql function as a [tagged template](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates). This is to ensure parameters are serialized and passed to Postgres as query parameters with correct types and to avoid SQL injection.\r\n\r\n##### AUTH_TYPE_NOT_IMPLEMENTED\r\n> Auth type X not implemented\r\n\r\nPostgres supports many different authentication types. This one is not supported.\r\n\r\n##### CONNECTION_CLOSED\r\n> write CONNECTION_CLOSED host:port\r\n\r\nThis error is thrown if the connection was closed without an error. This should not happen during normal operations, so please create an issue if this was unexpected.\r\n\r\n##### CONNECTION_ENDED\r\n> write CONNECTION_ENDED host:port\r\n\r\nThis error is thrown if the user has called [`sql.end()`](#teardown--cleanup) and performed a query afterward.\r\n\r\n##### CONNECTION_DESTROYED\r\n> write CONNECTION_DESTROYED host:port\r\n\r\nThis error is thrown for any queries that were pending when the timeout to [`sql.end({ timeout: X })`](#teardown--cleanup) was reached.\r\n\r\n##### CONNECTION_CONNECT_TIMEOUT\r\n> write CONNECTION_CONNECT_TIMEOUT host:port\r\n\r\nThis error is thrown if the startup phase of the connection (tcp, protocol negotiation, and auth) took more than the default 30 seconds or what was specified using `connect_timeout` or `PGCONNECT_TIMEOUT`.\r\n\r\n## TypeScript support\r\n\r\n`postgres` has TypeScript support. You can pass a row list type for your queries in this way:\r\n```ts\r\ninterface User {\r\n  id: number\r\n  name: string\r\n}\r\n\r\nconst users = await sql<User[]>`SELECT * FROM users`\r\nusers[0].id // ok => number\r\nusers[1].name // ok => string\r\nusers[0].invalid // fails: `invalid` does not exists on `User`\r\n```\r\n\r\nHowever, be sure to check the array length to avoid accessing properties of `undefined` rows:\r\n```ts\r\nconst users = await sql<User[]>`SELECT * FROM users WHERE id = ${id}`\r\nif (!users.length)\r\n  throw new Error('Not found')\r\nreturn users[0]\r\n```\r\n\r\nYou can also prefer destructuring when you only care about a fixed number of rows.\r\nIn this case, we recommend you to prefer using tuples to handle `undefined` properly:\r\n```ts\r\nconst [user]: [User?] = await sql`SELECT * FROM users WHERE id = ${id}`\r\nif (!user) // => User | undefined\r\n  throw new Error('Not found')\r\nreturn user // => User\r\n\r\n// NOTE:\r\nconst [first, second]: [User?] = await sql`SELECT * FROM users WHERE id = ${id}` // fails: `second` does not exist on `[User?]`\r\nconst [first, second] = await sql<[User?]>`SELECT * FROM users WHERE id = ${id}` // don't fail : `second: User | undefined`\r\n```\r\n\r\nWe do our best to type all the public API, however types are not always updated when features are added or changed. Feel free to open an issue if you have trouble with types.\r\n\r\n## Migration tools\r\n\r\nPostgres.js doesn't come with any migration solution since it's way out of scope, but here are some modules that support Postgres.js for migrations:\r\n\r\n- https://github.com/porsager/postgres-shift\r\n- https://github.com/lukeed/ley\r\n- https://github.com/JAForbes/pgmg\r\n\r\n## Thank you\r\n\r\nA really big thank you to [@JAForbes](https://twitter.com/jmsfbs) who introduced me to Postgres and still holds my hand navigating all the great opportunities we have.\r\n\r\nThanks to [@ACXgit](https://twitter.com/andreacoiutti) for initial tests and dogfooding.\r\n\r\nAlso thanks to [Ryan Dahl](https://github.com/ry) for letting me have the `postgres` npm package name.\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/postgres/README.md b/node_modules/postgres/README.md
--- a/node_modules/postgres/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/postgres/README.md	(date 1753913035237)
@@ -342,6 +342,27 @@
 select * from users where user_id = $1
 ```
 
+### Dynamic ordering
+
+```js
+const id = 1
+const order = {
+  username: 'asc'
+  created_at: 'desc'
+}
+await sql`
+  select 
+    * 
+  from ticket 
+  where account = ${ id }  
+  order by ${
+    Object.entries(order).flatMap(([column, order], i) =>
+      [i ? sql`,` : sql``, sql`${ sql(column) } ${ order === 'desc' ? sql`desc` : sql`asc` }`]
+    )
+  }
+`
+```
+
 ### SQL functions
 Using keywords or calling functions dynamically is also possible by using ``` sql`` ``` fragments.
 ```js
@@ -537,7 +558,7 @@
 }
 ```
 
-> **NOTE** This is a low-level API which does not provide any type safety. To make this work, you must match your [`copy query` parameters](https://www.postgresql.org/docs/14/sql-copy.html) correctly to your [Node.js stream read or write](https://nodejs.org/api/stream.html) code. Ensure [Node.js stream backpressure](https://nodejs.org/en/docs/guides/backpressuring-in-streams/) is handled correctly to avoid memory exhaustion.
+> **NOTE** This is a low-level API which does not provide any type safety. To make this work, you must match your [`copy query` parameters](https://www.postgresql.org/docs/14/sql-copy.html) correctly to your [Node.js stream read or write](https://nodejs.org/api/stream.html) code. Ensure [Node.js stream backpressure](https://nodejs.org/en/learn/modules/backpressuring-in-streams) is handled correctly to avoid memory exhaustion.
 
 ### Canceling Queries in Progress
 
@@ -568,6 +589,8 @@
 sql.unsafe('select ' + danger + ' from users where id = ' + dragons)
 ```
 
+By default, `sql.unsafe` assumes the `query` string is sufficiently dynamic that prepared statements do not make sense, and so defaults them to off. If you'd like to re-enable prepared statements, you can pass `{ prepare: true }`.
+
 You can also nest `sql.unsafe` within a safe `sql` expression.  This is useful if only part of your fraction has unsafe elements.
 
 ```js
@@ -992,7 +1015,7 @@
 })
 ```
 
-Note that `max_lifetime = 60 * (30 + Math.random() * 30)` by default. This resolves to an interval between 45 and 90 minutes to optimize for the benefits of prepared statements **and** working nicely with Linux's OOM killer.
+Note that `max_lifetime = 60 * (30 + Math.random() * 30)` by default. This resolves to an interval between 30 and 60 minutes to optimize for the benefits of prepared statements **and** working nicely with Linux's OOM killer.
 
 ### Dynamic passwords
 
@@ -1125,20 +1148,25 @@
 const sql = postgres()
 ```
 
-| Option            | Environment Variables    |
-| ----------------- | ------------------------ |
-| `host`            | `PGHOST`                 |
-| `port`            | `PGPORT`                 |
-| `database`        | `PGDATABASE`             |
-| `username`        | `PGUSERNAME` or `PGUSER` |
-| `password`        | `PGPASSWORD`             |
-| `idle_timeout`    | `PGIDLE_TIMEOUT`         |
-| `connect_timeout` | `PGCONNECT_TIMEOUT`      |
+| Option             | Environment Variables    |
+| ------------------ | ------------------------ |
+| `host`             | `PGHOST`                 |
+| `port`             | `PGPORT`                 |
+| `database`         | `PGDATABASE`             |
+| `username`         | `PGUSERNAME` or `PGUSER` |
+| `password`         | `PGPASSWORD`             |
+| `application_name` | `PGAPPNAME`              |
+| `idle_timeout`     | `PGIDLE_TIMEOUT`         |
+| `connect_timeout`  | `PGCONNECT_TIMEOUT`      |
 
 ### Prepared statements
 
 Prepared statements will automatically be created for any queries where it can be inferred that the query is static. This can be disabled by using the `prepare: false` option. For instance — this is useful when [using PGBouncer in `transaction mode`](https://github.com/porsager/postgres/issues/93#issuecomment-656290493).
 
+**update**: [since 1.21.0](https://www.pgbouncer.org/2023/10/pgbouncer-1-21-0)
+PGBouncer supports protocol-level named prepared statements when [configured
+properly](https://www.pgbouncer.org/config.html#max_prepared_statements)
+
 ## Custom Types
 
 You can add ergonomic support for custom types, or simply use `sql.typed(value, type)` inline, where type is the PostgreSQL `oid` for the type and the correctly serialized string. _(`oid` values for types can be found in the `pg_catalog.pg_type` table.)_
@@ -1298,8 +1326,8 @@
 
 This error is thrown for any queries that were pending when the timeout to [`sql.end({ timeout: X })`](#teardown--cleanup) was reached.
 
-##### CONNECTION_CONNECT_TIMEOUT
-> write CONNECTION_CONNECT_TIMEOUT host:port
+##### CONNECT_TIMEOUT
+> write CONNECT_TIMEOUT host:port
 
 This error is thrown if the startup phase of the connection (tcp, protocol negotiation, and auth) took more than the default 30 seconds or what was specified using `connect_timeout` or `PGCONNECT_TIMEOUT`.
 
Index: node_modules/postgresql-client/cjs/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./constants.js\"), exports);\r\n__exportStar(require(\"./data-type-map.js\"), exports);\r\n__exportStar(require(\"./types.js\"), exports);\r\n__exportStar(require(\"./connection/bind-param.js\"), exports);\r\n__exportStar(require(\"./connection/connection.js\"), exports);\r\n__exportStar(require(\"./connection/cursor.js\"), exports);\r\n__exportStar(require(\"./connection/pool.js\"), exports);\r\n__exportStar(require(\"./connection/prepared-statement.js\"), exports);\r\n__exportStar(require(\"./interfaces/command-result.js\"), exports);\r\n__exportStar(require(\"./interfaces/data-mapping-options.js\"), exports);\r\n__exportStar(require(\"./interfaces/data-type.js\"), exports);\r\n__exportStar(require(\"./interfaces/database-connection-params.js\"), exports);\r\n__exportStar(require(\"./interfaces/field-info.js\"), exports);\r\n__exportStar(require(\"./interfaces/query-options.js\"), exports);\r\n__exportStar(require(\"./interfaces/query-result.js\"), exports);\r\n__exportStar(require(\"./interfaces/script-execute-options.js\"), exports);\r\n__exportStar(require(\"./interfaces/script-result.js\"), exports);\r\n__exportStar(require(\"./interfaces/statement-prepare-options.js\"), exports);\r\n__exportStar(require(\"./util/connection-config.js\"), exports);\r\n__exportStar(require(\"./util/escape-literal.js\"), exports);\r\n__exportStar(require(\"./util/parse-datetime.js\"), exports);\r\n__exportStar(require(\"./util/stringify-arrayliteral.js\"), exports);\r\n__exportStar(require(\"./util/stringify-for-sql.js\"), exports);\r\n__exportStar(require(\"./protocol/smart-buffer.js\"), exports);\r\n__exportStar(require(\"./protocol/database-error.js\"), exports);\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/postgresql-client/cjs/index.js b/node_modules/postgresql-client/cjs/index.js
--- a/node_modules/postgresql-client/cjs/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/postgresql-client/cjs/index.js	(date 1753913034982)
@@ -1,41 +1,4 @@
 "use strict";
-var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    var desc = Object.getOwnPropertyDescriptor(m, k);
-    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
-      desc = { enumerable: true, get: function() { return m[k]; } };
-    }
-    Object.defineProperty(o, k2, desc);
-}) : (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    o[k2] = m[k];
-}));
-var __exportStar = (this && this.__exportStar) || function(m, exports) {
-    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
-};
 Object.defineProperty(exports, "__esModule", { value: true });
-__exportStar(require("./constants.js"), exports);
-__exportStar(require("./data-type-map.js"), exports);
-__exportStar(require("./types.js"), exports);
-__exportStar(require("./connection/bind-param.js"), exports);
-__exportStar(require("./connection/connection.js"), exports);
-__exportStar(require("./connection/cursor.js"), exports);
-__exportStar(require("./connection/pool.js"), exports);
-__exportStar(require("./connection/prepared-statement.js"), exports);
-__exportStar(require("./interfaces/command-result.js"), exports);
-__exportStar(require("./interfaces/data-mapping-options.js"), exports);
-__exportStar(require("./interfaces/data-type.js"), exports);
-__exportStar(require("./interfaces/database-connection-params.js"), exports);
-__exportStar(require("./interfaces/field-info.js"), exports);
-__exportStar(require("./interfaces/query-options.js"), exports);
-__exportStar(require("./interfaces/query-result.js"), exports);
-__exportStar(require("./interfaces/script-execute-options.js"), exports);
-__exportStar(require("./interfaces/script-result.js"), exports);
-__exportStar(require("./interfaces/statement-prepare-options.js"), exports);
-__exportStar(require("./util/connection-config.js"), exports);
-__exportStar(require("./util/escape-literal.js"), exports);
-__exportStar(require("./util/parse-datetime.js"), exports);
-__exportStar(require("./util/stringify-arrayliteral.js"), exports);
-__exportStar(require("./util/stringify-for-sql.js"), exports);
-__exportStar(require("./protocol/smart-buffer.js"), exports);
-__exportStar(require("./protocol/database-error.js"), exports);
+const tslib_1 = require("tslib");
+tslib_1.__exportStar(require("postgrejs"), exports);
Index: node_modules/body-parser/HISTORY.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>1.20.2 / 2023-02-21\r\n===================\r\n\r\n  * Fix strict json error message on Node.js 19+\r\n  * deps: content-type@~1.0.5\r\n    - perf: skip value escaping when unnecessary\r\n  * deps: raw-body@2.5.2\r\n\r\n1.20.1 / 2022-10-06\r\n===================\r\n\r\n  * deps: qs@6.11.0\r\n  * perf: remove unnecessary object clone\r\n\r\n1.20.0 / 2022-04-02\r\n===================\r\n\r\n  * Fix error message for json parse whitespace in `strict`\r\n  * Fix internal error when inflated body exceeds limit\r\n  * Prevent loss of async hooks context\r\n  * Prevent hanging when request already read\r\n  * deps: depd@2.0.0\r\n    - Replace internal `eval` usage with `Function` constructor\r\n    - Use instance methods on `process` to check for listeners\r\n  * deps: http-errors@2.0.0\r\n    - deps: depd@2.0.0\r\n    - deps: statuses@2.0.1\r\n  * deps: on-finished@2.4.1\r\n  * deps: qs@6.10.3\r\n  * deps: raw-body@2.5.1\r\n    - deps: http-errors@2.0.0\r\n\r\n1.19.2 / 2022-02-15\r\n===================\r\n\r\n  * deps: bytes@3.1.2\r\n  * deps: qs@6.9.7\r\n    * Fix handling of `__proto__` keys\r\n  * deps: raw-body@2.4.3\r\n    - deps: bytes@3.1.2\r\n\r\n1.19.1 / 2021-12-10\r\n===================\r\n\r\n  * deps: bytes@3.1.1\r\n  * deps: http-errors@1.8.1\r\n    - deps: inherits@2.0.4\r\n    - deps: toidentifier@1.0.1\r\n    - deps: setprototypeof@1.2.0\r\n  * deps: qs@6.9.6\r\n  * deps: raw-body@2.4.2\r\n    - deps: bytes@3.1.1\r\n    - deps: http-errors@1.8.1\r\n  * deps: safe-buffer@5.2.1\r\n  * deps: type-is@~1.6.18\r\n\r\n1.19.0 / 2019-04-25\r\n===================\r\n\r\n  * deps: bytes@3.1.0\r\n    - Add petabyte (`pb`) support\r\n  * deps: http-errors@1.7.2\r\n    - Set constructor name when possible\r\n    - deps: setprototypeof@1.1.1\r\n    - deps: statuses@'>= 1.5.0 < 2'\r\n  * deps: iconv-lite@0.4.24\r\n    - Added encoding MIK\r\n  * deps: qs@6.7.0\r\n    - Fix parsing array brackets after index\r\n  * deps: raw-body@2.4.0\r\n    - deps: bytes@3.1.0\r\n    - deps: http-errors@1.7.2\r\n    - deps: iconv-lite@0.4.24\r\n  * deps: type-is@~1.6.17\r\n    - deps: mime-types@~2.1.24\r\n    - perf: prevent internal `throw` on invalid type\r\n\r\n1.18.3 / 2018-05-14\r\n===================\r\n\r\n  * Fix stack trace for strict json parse error\r\n  * deps: depd@~1.1.2\r\n    - perf: remove argument reassignment\r\n  * deps: http-errors@~1.6.3\r\n    - deps: depd@~1.1.2\r\n    - deps: setprototypeof@1.1.0\r\n    - deps: statuses@'>= 1.3.1 < 2'\r\n  * deps: iconv-lite@0.4.23\r\n    - Fix loading encoding with year appended\r\n    - Fix deprecation warnings on Node.js 10+\r\n  * deps: qs@6.5.2\r\n  * deps: raw-body@2.3.3\r\n    - deps: http-errors@1.6.3\r\n    - deps: iconv-lite@0.4.23\r\n  * deps: type-is@~1.6.16\r\n    - deps: mime-types@~2.1.18\r\n\r\n1.18.2 / 2017-09-22\r\n===================\r\n\r\n  * deps: debug@2.6.9\r\n  * perf: remove argument reassignment\r\n\r\n1.18.1 / 2017-09-12\r\n===================\r\n\r\n  * deps: content-type@~1.0.4\r\n    - perf: remove argument reassignment\r\n    - perf: skip parameter parsing when no parameters\r\n  * deps: iconv-lite@0.4.19\r\n    - Fix ISO-8859-1 regression\r\n    - Update Windows-1255\r\n  * deps: qs@6.5.1\r\n    - Fix parsing & compacting very deep objects\r\n  * deps: raw-body@2.3.2\r\n    - deps: iconv-lite@0.4.19\r\n\r\n1.18.0 / 2017-09-08\r\n===================\r\n\r\n  * Fix JSON strict violation error to match native parse error\r\n  * Include the `body` property on verify errors\r\n  * Include the `type` property on all generated errors\r\n  * Use `http-errors` to set status code on errors\r\n  * deps: bytes@3.0.0\r\n  * deps: debug@2.6.8\r\n  * deps: depd@~1.1.1\r\n    - Remove unnecessary `Buffer` loading\r\n  * deps: http-errors@~1.6.2\r\n    - deps: depd@1.1.1\r\n  * deps: iconv-lite@0.4.18\r\n    - Add support for React Native\r\n    - Add a warning if not loaded as utf-8\r\n    - Fix CESU-8 decoding in Node.js 8\r\n    - Improve speed of ISO-8859-1 encoding\r\n  * deps: qs@6.5.0\r\n  * deps: raw-body@2.3.1\r\n    - Use `http-errors` for standard emitted errors\r\n    - deps: bytes@3.0.0\r\n    - deps: iconv-lite@0.4.18\r\n    - perf: skip buffer decoding on overage chunk\r\n  * perf: prevent internal `throw` when missing charset\r\n\r\n1.17.2 / 2017-05-17\r\n===================\r\n\r\n  * deps: debug@2.6.7\r\n    - Fix `DEBUG_MAX_ARRAY_LENGTH`\r\n    - deps: ms@2.0.0\r\n  * deps: type-is@~1.6.15\r\n    - deps: mime-types@~2.1.15\r\n\r\n1.17.1 / 2017-03-06\r\n===================\r\n\r\n  * deps: qs@6.4.0\r\n    - Fix regression parsing keys starting with `[`\r\n\r\n1.17.0 / 2017-03-01\r\n===================\r\n\r\n  * deps: http-errors@~1.6.1\r\n    - Make `message` property enumerable for `HttpError`s\r\n    - deps: setprototypeof@1.0.3\r\n  * deps: qs@6.3.1\r\n    - Fix compacting nested arrays\r\n\r\n1.16.1 / 2017-02-10\r\n===================\r\n\r\n  * deps: debug@2.6.1\r\n    - Fix deprecation messages in WebStorm and other editors\r\n    - Undeprecate `DEBUG_FD` set to `1` or `2`\r\n\r\n1.16.0 / 2017-01-17\r\n===================\r\n\r\n  * deps: debug@2.6.0\r\n    - Allow colors in workers\r\n    - Deprecated `DEBUG_FD` environment variable\r\n    - Fix error when running under React Native\r\n    - Use same color for same namespace\r\n    - deps: ms@0.7.2\r\n  * deps: http-errors@~1.5.1\r\n    - deps: inherits@2.0.3\r\n    - deps: setprototypeof@1.0.2\r\n    - deps: statuses@'>= 1.3.1 < 2'\r\n  * deps: iconv-lite@0.4.15\r\n    - Added encoding MS-31J\r\n    - Added encoding MS-932\r\n    - Added encoding MS-936\r\n    - Added encoding MS-949\r\n    - Added encoding MS-950\r\n    - Fix GBK/GB18030 handling of Euro character\r\n  * deps: qs@6.2.1\r\n    - Fix array parsing from skipping empty values\r\n  * deps: raw-body@~2.2.0\r\n    - deps: iconv-lite@0.4.15\r\n  * deps: type-is@~1.6.14\r\n    - deps: mime-types@~2.1.13\r\n\r\n1.15.2 / 2016-06-19\r\n===================\r\n\r\n  * deps: bytes@2.4.0\r\n  * deps: content-type@~1.0.2\r\n    - perf: enable strict mode\r\n  * deps: http-errors@~1.5.0\r\n    - Use `setprototypeof` module to replace `__proto__` setting\r\n    - deps: statuses@'>= 1.3.0 < 2'\r\n    - perf: enable strict mode\r\n  * deps: qs@6.2.0\r\n  * deps: raw-body@~2.1.7\r\n    - deps: bytes@2.4.0\r\n    - perf: remove double-cleanup on happy path\r\n  * deps: type-is@~1.6.13\r\n    - deps: mime-types@~2.1.11\r\n\r\n1.15.1 / 2016-05-05\r\n===================\r\n\r\n  * deps: bytes@2.3.0\r\n    - Drop partial bytes on all parsed units\r\n    - Fix parsing byte string that looks like hex\r\n  * deps: raw-body@~2.1.6\r\n    - deps: bytes@2.3.0\r\n  * deps: type-is@~1.6.12\r\n    - deps: mime-types@~2.1.10\r\n\r\n1.15.0 / 2016-02-10\r\n===================\r\n\r\n  * deps: http-errors@~1.4.0\r\n    - Add `HttpError` export, for `err instanceof createError.HttpError`\r\n    - deps: inherits@2.0.1\r\n    - deps: statuses@'>= 1.2.1 < 2'\r\n  * deps: qs@6.1.0\r\n  * deps: type-is@~1.6.11\r\n    - deps: mime-types@~2.1.9\r\n\r\n1.14.2 / 2015-12-16\r\n===================\r\n\r\n  * deps: bytes@2.2.0\r\n  * deps: iconv-lite@0.4.13\r\n  * deps: qs@5.2.0\r\n  * deps: raw-body@~2.1.5\r\n    - deps: bytes@2.2.0\r\n    - deps: iconv-lite@0.4.13\r\n  * deps: type-is@~1.6.10\r\n    - deps: mime-types@~2.1.8\r\n\r\n1.14.1 / 2015-09-27\r\n===================\r\n\r\n  * Fix issue where invalid charset results in 400 when `verify` used\r\n  * deps: iconv-lite@0.4.12\r\n    - Fix CESU-8 decoding in Node.js 4.x\r\n  * deps: raw-body@~2.1.4\r\n    - Fix masking critical errors from `iconv-lite`\r\n    - deps: iconv-lite@0.4.12\r\n  * deps: type-is@~1.6.9\r\n    - deps: mime-types@~2.1.7\r\n\r\n1.14.0 / 2015-09-16\r\n===================\r\n\r\n  * Fix JSON strict parse error to match syntax errors\r\n  * Provide static `require` analysis in `urlencoded` parser\r\n  * deps: depd@~1.1.0\r\n    - Support web browser loading\r\n  * deps: qs@5.1.0\r\n  * deps: raw-body@~2.1.3\r\n    - Fix sync callback when attaching data listener causes sync read\r\n  * deps: type-is@~1.6.8\r\n    - Fix type error when given invalid type to match against\r\n    - deps: mime-types@~2.1.6\r\n\r\n1.13.3 / 2015-07-31\r\n===================\r\n\r\n  * deps: type-is@~1.6.6\r\n    - deps: mime-types@~2.1.4\r\n\r\n1.13.2 / 2015-07-05\r\n===================\r\n\r\n  * deps: iconv-lite@0.4.11\r\n  * deps: qs@4.0.0\r\n    - Fix dropping parameters like `hasOwnProperty`\r\n    - Fix user-visible incompatibilities from 3.1.0\r\n    - Fix various parsing edge cases\r\n  * deps: raw-body@~2.1.2\r\n    - Fix error stack traces to skip `makeError`\r\n    - deps: iconv-lite@0.4.11\r\n  * deps: type-is@~1.6.4\r\n    - deps: mime-types@~2.1.2\r\n    - perf: enable strict mode\r\n    - perf: remove argument reassignment\r\n\r\n1.13.1 / 2015-06-16\r\n===================\r\n\r\n  * deps: qs@2.4.2\r\n    - Downgraded from 3.1.0 because of user-visible incompatibilities\r\n\r\n1.13.0 / 2015-06-14\r\n===================\r\n\r\n  * Add `statusCode` property on `Error`s, in addition to `status`\r\n  * Change `type` default to `application/json` for JSON parser\r\n  * Change `type` default to `application/x-www-form-urlencoded` for urlencoded parser\r\n  * Provide static `require` analysis\r\n  * Use the `http-errors` module to generate errors\r\n  * deps: bytes@2.1.0\r\n    - Slight optimizations\r\n  * deps: iconv-lite@0.4.10\r\n    - The encoding UTF-16 without BOM now defaults to UTF-16LE when detection fails\r\n    - Leading BOM is now removed when decoding\r\n  * deps: on-finished@~2.3.0\r\n    - Add defined behavior for HTTP `CONNECT` requests\r\n    - Add defined behavior for HTTP `Upgrade` requests\r\n    - deps: ee-first@1.1.1\r\n  * deps: qs@3.1.0\r\n    - Fix dropping parameters like `hasOwnProperty`\r\n    - Fix various parsing edge cases\r\n    - Parsed object now has `null` prototype\r\n  * deps: raw-body@~2.1.1\r\n    - Use `unpipe` module for unpiping requests\r\n    - deps: iconv-lite@0.4.10\r\n  * deps: type-is@~1.6.3\r\n    - deps: mime-types@~2.1.1\r\n    - perf: reduce try block size\r\n    - perf: remove bitwise operations\r\n  * perf: enable strict mode\r\n  * perf: remove argument reassignment\r\n  * perf: remove delete call\r\n\r\n1.12.4 / 2015-05-10\r\n===================\r\n\r\n  * deps: debug@~2.2.0\r\n  * deps: qs@2.4.2\r\n    - Fix allowing parameters like `constructor`\r\n  * deps: on-finished@~2.2.1\r\n  * deps: raw-body@~2.0.1\r\n    - Fix a false-positive when unpiping in Node.js 0.8\r\n    - deps: bytes@2.0.1\r\n  * deps: type-is@~1.6.2\r\n    - deps: mime-types@~2.0.11\r\n\r\n1.12.3 / 2015-04-15\r\n===================\r\n\r\n  * Slight efficiency improvement when not debugging\r\n  * deps: depd@~1.0.1\r\n  * deps: iconv-lite@0.4.8\r\n    - Add encoding alias UNICODE-1-1-UTF-7\r\n  * deps: raw-body@1.3.4\r\n    - Fix hanging callback if request aborts during read\r\n    - deps: iconv-lite@0.4.8\r\n\r\n1.12.2 / 2015-03-16\r\n===================\r\n\r\n  * deps: qs@2.4.1\r\n    - Fix error when parameter `hasOwnProperty` is present\r\n\r\n1.12.1 / 2015-03-15\r\n===================\r\n\r\n  * deps: debug@~2.1.3\r\n    - Fix high intensity foreground color for bold\r\n    - deps: ms@0.7.0\r\n  * deps: type-is@~1.6.1\r\n    - deps: mime-types@~2.0.10\r\n\r\n1.12.0 / 2015-02-13\r\n===================\r\n\r\n  * add `debug` messages\r\n  * accept a function for the `type` option\r\n  * use `content-type` to parse `Content-Type` headers\r\n  * deps: iconv-lite@0.4.7\r\n    - Gracefully support enumerables on `Object.prototype`\r\n  * deps: raw-body@1.3.3\r\n    - deps: iconv-lite@0.4.7\r\n  * deps: type-is@~1.6.0\r\n    - fix argument reassignment\r\n    - fix false-positives in `hasBody` `Transfer-Encoding` check\r\n    - support wildcard for both type and subtype (`*/*`)\r\n    - deps: mime-types@~2.0.9\r\n\r\n1.11.0 / 2015-01-30\r\n===================\r\n\r\n  * make internal `extended: true` depth limit infinity\r\n  * deps: type-is@~1.5.6\r\n    - deps: mime-types@~2.0.8\r\n\r\n1.10.2 / 2015-01-20\r\n===================\r\n\r\n  * deps: iconv-lite@0.4.6\r\n    - Fix rare aliases of single-byte encodings\r\n  * deps: raw-body@1.3.2\r\n    - deps: iconv-lite@0.4.6\r\n\r\n1.10.1 / 2015-01-01\r\n===================\r\n\r\n  * deps: on-finished@~2.2.0\r\n  * deps: type-is@~1.5.5\r\n    - deps: mime-types@~2.0.7\r\n\r\n1.10.0 / 2014-12-02\r\n===================\r\n\r\n  * make internal `extended: true` array limit dynamic\r\n\r\n1.9.3 / 2014-11-21\r\n==================\r\n\r\n  * deps: iconv-lite@0.4.5\r\n    - Fix Windows-31J and X-SJIS encoding support\r\n  * deps: qs@2.3.3\r\n    - Fix `arrayLimit` behavior\r\n  * deps: raw-body@1.3.1\r\n    - deps: iconv-lite@0.4.5\r\n  * deps: type-is@~1.5.3\r\n    - deps: mime-types@~2.0.3\r\n\r\n1.9.2 / 2014-10-27\r\n==================\r\n\r\n  * deps: qs@2.3.2\r\n    - Fix parsing of mixed objects and values\r\n\r\n1.9.1 / 2014-10-22\r\n==================\r\n\r\n  * deps: on-finished@~2.1.1\r\n    - Fix handling of pipelined requests\r\n  * deps: qs@2.3.0\r\n    - Fix parsing of mixed implicit and explicit arrays\r\n  * deps: type-is@~1.5.2\r\n    - deps: mime-types@~2.0.2\r\n\r\n1.9.0 / 2014-09-24\r\n==================\r\n\r\n  * include the charset in \"unsupported charset\" error message\r\n  * include the encoding in \"unsupported content encoding\" error message\r\n  * deps: depd@~1.0.0\r\n\r\n1.8.4 / 2014-09-23\r\n==================\r\n\r\n  * fix content encoding to be case-insensitive\r\n\r\n1.8.3 / 2014-09-19\r\n==================\r\n\r\n  * deps: qs@2.2.4\r\n    - Fix issue with object keys starting with numbers truncated\r\n\r\n1.8.2 / 2014-09-15\r\n==================\r\n\r\n  * deps: depd@0.4.5\r\n\r\n1.8.1 / 2014-09-07\r\n==================\r\n\r\n  * deps: media-typer@0.3.0\r\n  * deps: type-is@~1.5.1\r\n\r\n1.8.0 / 2014-09-05\r\n==================\r\n\r\n  * make empty-body-handling consistent between chunked requests\r\n    - empty `json` produces `{}`\r\n    - empty `raw` produces `new Buffer(0)`\r\n    - empty `text` produces `''`\r\n    - empty `urlencoded` produces `{}`\r\n  * deps: qs@2.2.3\r\n    - Fix issue where first empty value in array is discarded\r\n  * deps: type-is@~1.5.0\r\n    - fix `hasbody` to be true for `content-length: 0`\r\n\r\n1.7.0 / 2014-09-01\r\n==================\r\n\r\n  * add `parameterLimit` option to `urlencoded` parser\r\n  * change `urlencoded` extended array limit to 100\r\n  * respond with 413 when over `parameterLimit` in `urlencoded`\r\n\r\n1.6.7 / 2014-08-29\r\n==================\r\n\r\n  * deps: qs@2.2.2\r\n    - Remove unnecessary cloning\r\n\r\n1.6.6 / 2014-08-27\r\n==================\r\n\r\n  * deps: qs@2.2.0\r\n    - Array parsing fix\r\n    - Performance improvements\r\n\r\n1.6.5 / 2014-08-16\r\n==================\r\n\r\n  * deps: on-finished@2.1.0\r\n\r\n1.6.4 / 2014-08-14\r\n==================\r\n\r\n  * deps: qs@1.2.2\r\n\r\n1.6.3 / 2014-08-10\r\n==================\r\n\r\n  * deps: qs@1.2.1\r\n\r\n1.6.2 / 2014-08-07\r\n==================\r\n\r\n  * deps: qs@1.2.0\r\n    - Fix parsing array of objects\r\n\r\n1.6.1 / 2014-08-06\r\n==================\r\n\r\n  * deps: qs@1.1.0\r\n    - Accept urlencoded square brackets\r\n    - Accept empty values in implicit array notation\r\n\r\n1.6.0 / 2014-08-05\r\n==================\r\n\r\n  * deps: qs@1.0.2\r\n    - Complete rewrite\r\n    - Limits array length to 20\r\n    - Limits object depth to 5\r\n    - Limits parameters to 1,000\r\n\r\n1.5.2 / 2014-07-27\r\n==================\r\n\r\n  * deps: depd@0.4.4\r\n    - Work-around v8 generating empty stack traces\r\n\r\n1.5.1 / 2014-07-26\r\n==================\r\n\r\n  * deps: depd@0.4.3\r\n    - Fix exception when global `Error.stackTraceLimit` is too low\r\n\r\n1.5.0 / 2014-07-20\r\n==================\r\n\r\n  * deps: depd@0.4.2\r\n    - Add `TRACE_DEPRECATION` environment variable\r\n    - Remove non-standard grey color from color output\r\n    - Support `--no-deprecation` argument\r\n    - Support `--trace-deprecation` argument\r\n  * deps: iconv-lite@0.4.4\r\n    - Added encoding UTF-7\r\n  * deps: raw-body@1.3.0\r\n    - deps: iconv-lite@0.4.4\r\n    - Added encoding UTF-7\r\n    - Fix `Cannot switch to old mode now` error on Node.js 0.10+\r\n  * deps: type-is@~1.3.2\r\n\r\n1.4.3 / 2014-06-19\r\n==================\r\n\r\n  * deps: type-is@1.3.1\r\n    - fix global variable leak\r\n\r\n1.4.2 / 2014-06-19\r\n==================\r\n\r\n  * deps: type-is@1.3.0\r\n    - improve type parsing\r\n\r\n1.4.1 / 2014-06-19\r\n==================\r\n\r\n  * fix urlencoded extended deprecation message\r\n\r\n1.4.0 / 2014-06-19\r\n==================\r\n\r\n  * add `text` parser\r\n  * add `raw` parser\r\n  * check accepted charset in content-type (accepts utf-8)\r\n  * check accepted encoding in content-encoding (accepts identity)\r\n  * deprecate `bodyParser()` middleware; use `.json()` and `.urlencoded()` as needed\r\n  * deprecate `urlencoded()` without provided `extended` option\r\n  * lazy-load urlencoded parsers\r\n  * parsers split into files for reduced mem usage\r\n  * support gzip and deflate bodies\r\n    - set `inflate: false` to turn off\r\n  * deps: raw-body@1.2.2\r\n    - Support all encodings from `iconv-lite`\r\n\r\n1.3.1 / 2014-06-11\r\n==================\r\n\r\n  * deps: type-is@1.2.1\r\n    - Switch dependency from mime to mime-types@1.0.0\r\n\r\n1.3.0 / 2014-05-31\r\n==================\r\n\r\n  * add `extended` option to urlencoded parser\r\n\r\n1.2.2 / 2014-05-27\r\n==================\r\n\r\n  * deps: raw-body@1.1.6\r\n    - assert stream encoding on node.js 0.8\r\n    - assert stream encoding on node.js < 0.10.6\r\n    - deps: bytes@1\r\n\r\n1.2.1 / 2014-05-26\r\n==================\r\n\r\n  * invoke `next(err)` after request fully read\r\n    - prevents hung responses and socket hang ups\r\n\r\n1.2.0 / 2014-05-11\r\n==================\r\n\r\n  * add `verify` option\r\n  * deps: type-is@1.2.0\r\n    - support suffix matching\r\n\r\n1.1.2 / 2014-05-11\r\n==================\r\n\r\n  * improve json parser speed\r\n\r\n1.1.1 / 2014-05-11\r\n==================\r\n\r\n  * fix repeated limit parsing with every request\r\n\r\n1.1.0 / 2014-05-10\r\n==================\r\n\r\n  * add `type` option\r\n  * deps: pin for safety and consistency\r\n\r\n1.0.2 / 2014-04-14\r\n==================\r\n\r\n  * use `type-is` module\r\n\r\n1.0.1 / 2014-03-20\r\n==================\r\n\r\n  * lower default limits to 100kb\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/body-parser/HISTORY.md b/node_modules/body-parser/HISTORY.md
--- a/node_modules/body-parser/HISTORY.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/body-parser/HISTORY.md	(date 1753913035856)
@@ -1,3 +1,10 @@
+1.20.3 / 2024-09-10
+===================
+
+  * deps: qs@6.13.0
+  * add `depth` option to customize the depth level in the parser
+  * IMPORTANT: The default `depth` level for parsing URL-encoded data is now `32` (previously was `Infinity`)
+
 1.20.2 / 2023-02-21
 ===================
 
Index: node_modules/body-parser/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># body-parser\r\n\r\n[![NPM Version][npm-version-image]][npm-url]\r\n[![NPM Downloads][npm-downloads-image]][npm-url]\r\n[![Build Status][ci-image]][ci-url]\r\n[![Test Coverage][coveralls-image]][coveralls-url]\r\n\r\nNode.js body parsing middleware.\r\n\r\nParse incoming request bodies in a middleware before your handlers, available\r\nunder the `req.body` property.\r\n\r\n**Note** As `req.body`'s shape is based on user-controlled input, all\r\nproperties and values in this object are untrusted and should be validated\r\nbefore trusting. For example, `req.body.foo.toString()` may fail in multiple\r\nways, for example the `foo` property may not be there or may not be a string,\r\nand `toString` may not be a function and instead a string or other user input.\r\n\r\n[Learn about the anatomy of an HTTP transaction in Node.js](https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/).\r\n\r\n_This does not handle multipart bodies_, due to their complex and typically\r\nlarge nature. For multipart bodies, you may be interested in the following\r\nmodules:\r\n\r\n  * [busboy](https://www.npmjs.org/package/busboy#readme) and\r\n    [connect-busboy](https://www.npmjs.org/package/connect-busboy#readme)\r\n  * [multiparty](https://www.npmjs.org/package/multiparty#readme) and\r\n    [connect-multiparty](https://www.npmjs.org/package/connect-multiparty#readme)\r\n  * [formidable](https://www.npmjs.org/package/formidable#readme)\r\n  * [multer](https://www.npmjs.org/package/multer#readme)\r\n\r\nThis module provides the following parsers:\r\n\r\n  * [JSON body parser](#bodyparserjsonoptions)\r\n  * [Raw body parser](#bodyparserrawoptions)\r\n  * [Text body parser](#bodyparsertextoptions)\r\n  * [URL-encoded form body parser](#bodyparserurlencodedoptions)\r\n\r\nOther body parsers you might be interested in:\r\n\r\n- [body](https://www.npmjs.org/package/body#readme)\r\n- [co-body](https://www.npmjs.org/package/co-body#readme)\r\n\r\n## Installation\r\n\r\n```sh\r\n$ npm install body-parser\r\n```\r\n\r\n## API\r\n\r\n```js\r\nvar bodyParser = require('body-parser')\r\n```\r\n\r\nThe `bodyParser` object exposes various factories to create middlewares. All\r\nmiddlewares will populate the `req.body` property with the parsed body when\r\nthe `Content-Type` request header matches the `type` option, or an empty\r\nobject (`{}`) if there was no body to parse, the `Content-Type` was not matched,\r\nor an error occurred.\r\n\r\nThe various errors returned by this module are described in the\r\n[errors section](#errors).\r\n\r\n### bodyParser.json([options])\r\n\r\nReturns middleware that only parses `json` and only looks at requests where\r\nthe `Content-Type` header matches the `type` option. This parser accepts any\r\nUnicode encoding of the body and supports automatic inflation of `gzip` and\r\n`deflate` encodings.\r\n\r\nA new `body` object containing the parsed data is populated on the `request`\r\nobject after the middleware (i.e. `req.body`).\r\n\r\n#### Options\r\n\r\nThe `json` function takes an optional `options` object that may contain any of\r\nthe following keys:\r\n\r\n##### inflate\r\n\r\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\r\n`false`, deflated bodies are rejected. Defaults to `true`.\r\n\r\n##### limit\r\n\r\nControls the maximum request body size. If this is a number, then the value\r\nspecifies the number of bytes; if it is a string, the value is passed to the\r\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\r\nto `'100kb'`.\r\n\r\n##### reviver\r\n\r\nThe `reviver` option is passed directly to `JSON.parse` as the second\r\nargument. You can find more information on this argument\r\n[in the MDN documentation about JSON.parse](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Example.3A_Using_the_reviver_parameter).\r\n\r\n##### strict\r\n\r\nWhen set to `true`, will only accept arrays and objects; when `false` will\r\naccept anything `JSON.parse` accepts. Defaults to `true`.\r\n\r\n##### type\r\n\r\nThe `type` option is used to determine what media type the middleware will\r\nparse. This option can be a string, array of strings, or a function. If not a\r\nfunction, `type` option is passed directly to the\r\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\r\nbe an extension name (like `json`), a mime type (like `application/json`), or\r\na mime type with a wildcard (like `*/*` or `*/json`). If a function, the `type`\r\noption is called as `fn(req)` and the request is parsed if it returns a truthy\r\nvalue. Defaults to `application/json`.\r\n\r\n##### verify\r\n\r\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\r\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\r\nencoding of the request. The parsing can be aborted by throwing an error.\r\n\r\n### bodyParser.raw([options])\r\n\r\nReturns middleware that parses all bodies as a `Buffer` and only looks at\r\nrequests where the `Content-Type` header matches the `type` option. This\r\nparser supports automatic inflation of `gzip` and `deflate` encodings.\r\n\r\nA new `body` object containing the parsed data is populated on the `request`\r\nobject after the middleware (i.e. `req.body`). This will be a `Buffer` object\r\nof the body.\r\n\r\n#### Options\r\n\r\nThe `raw` function takes an optional `options` object that may contain any of\r\nthe following keys:\r\n\r\n##### inflate\r\n\r\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\r\n`false`, deflated bodies are rejected. Defaults to `true`.\r\n\r\n##### limit\r\n\r\nControls the maximum request body size. If this is a number, then the value\r\nspecifies the number of bytes; if it is a string, the value is passed to the\r\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\r\nto `'100kb'`.\r\n\r\n##### type\r\n\r\nThe `type` option is used to determine what media type the middleware will\r\nparse. This option can be a string, array of strings, or a function.\r\nIf not a function, `type` option is passed directly to the\r\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this\r\ncan be an extension name (like `bin`), a mime type (like\r\n`application/octet-stream`), or a mime type with a wildcard (like `*/*` or\r\n`application/*`). If a function, the `type` option is called as `fn(req)`\r\nand the request is parsed if it returns a truthy value. Defaults to\r\n`application/octet-stream`.\r\n\r\n##### verify\r\n\r\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\r\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\r\nencoding of the request. The parsing can be aborted by throwing an error.\r\n\r\n### bodyParser.text([options])\r\n\r\nReturns middleware that parses all bodies as a string and only looks at\r\nrequests where the `Content-Type` header matches the `type` option. This\r\nparser supports automatic inflation of `gzip` and `deflate` encodings.\r\n\r\nA new `body` string containing the parsed data is populated on the `request`\r\nobject after the middleware (i.e. `req.body`). This will be a string of the\r\nbody.\r\n\r\n#### Options\r\n\r\nThe `text` function takes an optional `options` object that may contain any of\r\nthe following keys:\r\n\r\n##### defaultCharset\r\n\r\nSpecify the default character set for the text content if the charset is not\r\nspecified in the `Content-Type` header of the request. Defaults to `utf-8`.\r\n\r\n##### inflate\r\n\r\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\r\n`false`, deflated bodies are rejected. Defaults to `true`.\r\n\r\n##### limit\r\n\r\nControls the maximum request body size. If this is a number, then the value\r\nspecifies the number of bytes; if it is a string, the value is passed to the\r\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\r\nto `'100kb'`.\r\n\r\n##### type\r\n\r\nThe `type` option is used to determine what media type the middleware will\r\nparse. This option can be a string, array of strings, or a function. If not\r\na function, `type` option is passed directly to the\r\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\r\nbe an extension name (like `txt`), a mime type (like `text/plain`), or a mime\r\ntype with a wildcard (like `*/*` or `text/*`). If a function, the `type`\r\noption is called as `fn(req)` and the request is parsed if it returns a\r\ntruthy value. Defaults to `text/plain`.\r\n\r\n##### verify\r\n\r\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\r\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\r\nencoding of the request. The parsing can be aborted by throwing an error.\r\n\r\n### bodyParser.urlencoded([options])\r\n\r\nReturns middleware that only parses `urlencoded` bodies and only looks at\r\nrequests where the `Content-Type` header matches the `type` option. This\r\nparser accepts only UTF-8 encoding of the body and supports automatic\r\ninflation of `gzip` and `deflate` encodings.\r\n\r\nA new `body` object containing the parsed data is populated on the `request`\r\nobject after the middleware (i.e. `req.body`). This object will contain\r\nkey-value pairs, where the value can be a string or array (when `extended` is\r\n`false`), or any type (when `extended` is `true`).\r\n\r\n#### Options\r\n\r\nThe `urlencoded` function takes an optional `options` object that may contain\r\nany of the following keys:\r\n\r\n##### extended\r\n\r\nThe `extended` option allows to choose between parsing the URL-encoded data\r\nwith the `querystring` library (when `false`) or the `qs` library (when\r\n`true`). The \"extended\" syntax allows for rich objects and arrays to be\r\nencoded into the URL-encoded format, allowing for a JSON-like experience\r\nwith URL-encoded. For more information, please\r\n[see the qs library](https://www.npmjs.org/package/qs#readme).\r\n\r\nDefaults to `true`, but using the default has been deprecated. Please\r\nresearch into the difference between `qs` and `querystring` and choose the\r\nappropriate setting.\r\n\r\n##### inflate\r\n\r\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\r\n`false`, deflated bodies are rejected. Defaults to `true`.\r\n\r\n##### limit\r\n\r\nControls the maximum request body size. If this is a number, then the value\r\nspecifies the number of bytes; if it is a string, the value is passed to the\r\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\r\nto `'100kb'`.\r\n\r\n##### parameterLimit\r\n\r\nThe `parameterLimit` option controls the maximum number of parameters that\r\nare allowed in the URL-encoded data. If a request contains more parameters\r\nthan this value, a 413 will be returned to the client. Defaults to `1000`.\r\n\r\n##### type\r\n\r\nThe `type` option is used to determine what media type the middleware will\r\nparse. This option can be a string, array of strings, or a function. If not\r\na function, `type` option is passed directly to the\r\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\r\nbe an extension name (like `urlencoded`), a mime type (like\r\n`application/x-www-form-urlencoded`), or a mime type with a wildcard (like\r\n`*/x-www-form-urlencoded`). If a function, the `type` option is called as\r\n`fn(req)` and the request is parsed if it returns a truthy value. Defaults\r\nto `application/x-www-form-urlencoded`.\r\n\r\n##### verify\r\n\r\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\r\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\r\nencoding of the request. The parsing can be aborted by throwing an error.\r\n\r\n## Errors\r\n\r\nThe middlewares provided by this module create errors using the\r\n[`http-errors` module](https://www.npmjs.com/package/http-errors). The errors\r\nwill typically have a `status`/`statusCode` property that contains the suggested\r\nHTTP response code, an `expose` property to determine if the `message` property\r\nshould be displayed to the client, a `type` property to determine the type of\r\nerror without matching against the `message`, and a `body` property containing\r\nthe read body, if available.\r\n\r\nThe following are the common errors created, though any error can come through\r\nfor various reasons.\r\n\r\n### content encoding unsupported\r\n\r\nThis error will occur when the request had a `Content-Encoding` header that\r\ncontained an encoding but the \"inflation\" option was set to `false`. The\r\n`status` property is set to `415`, the `type` property is set to\r\n`'encoding.unsupported'`, and the `charset` property will be set to the\r\nencoding that is unsupported.\r\n\r\n### entity parse failed\r\n\r\nThis error will occur when the request contained an entity that could not be\r\nparsed by the middleware. The `status` property is set to `400`, the `type`\r\nproperty is set to `'entity.parse.failed'`, and the `body` property is set to\r\nthe entity value that failed parsing.\r\n\r\n### entity verify failed\r\n\r\nThis error will occur when the request contained an entity that could not be\r\nfailed verification by the defined `verify` option. The `status` property is\r\nset to `403`, the `type` property is set to `'entity.verify.failed'`, and the\r\n`body` property is set to the entity value that failed verification.\r\n\r\n### request aborted\r\n\r\nThis error will occur when the request is aborted by the client before reading\r\nthe body has finished. The `received` property will be set to the number of\r\nbytes received before the request was aborted and the `expected` property is\r\nset to the number of expected bytes. The `status` property is set to `400`\r\nand `type` property is set to `'request.aborted'`.\r\n\r\n### request entity too large\r\n\r\nThis error will occur when the request body's size is larger than the \"limit\"\r\noption. The `limit` property will be set to the byte limit and the `length`\r\nproperty will be set to the request body's length. The `status` property is\r\nset to `413` and the `type` property is set to `'entity.too.large'`.\r\n\r\n### request size did not match content length\r\n\r\nThis error will occur when the request's length did not match the length from\r\nthe `Content-Length` header. This typically occurs when the request is malformed,\r\ntypically when the `Content-Length` header was calculated based on characters\r\ninstead of bytes. The `status` property is set to `400` and the `type` property\r\nis set to `'request.size.invalid'`.\r\n\r\n### stream encoding should not be set\r\n\r\nThis error will occur when something called the `req.setEncoding` method prior\r\nto this middleware. This module operates directly on bytes only and you cannot\r\ncall `req.setEncoding` when using this module. The `status` property is set to\r\n`500` and the `type` property is set to `'stream.encoding.set'`.\r\n\r\n### stream is not readable\r\n\r\nThis error will occur when the request is no longer readable when this middleware\r\nattempts to read it. This typically means something other than a middleware from\r\nthis module read the request body already and the middleware was also configured to\r\nread the same request. The `status` property is set to `500` and the `type`\r\nproperty is set to `'stream.not.readable'`.\r\n\r\n### too many parameters\r\n\r\nThis error will occur when the content of the request exceeds the configured\r\n`parameterLimit` for the `urlencoded` parser. The `status` property is set to\r\n`413` and the `type` property is set to `'parameters.too.many'`.\r\n\r\n### unsupported charset \"BOGUS\"\r\n\r\nThis error will occur when the request had a charset parameter in the\r\n`Content-Type` header, but the `iconv-lite` module does not support it OR the\r\nparser does not support it. The charset is contained in the message as well\r\nas in the `charset` property. The `status` property is set to `415`, the\r\n`type` property is set to `'charset.unsupported'`, and the `charset` property\r\nis set to the charset that is unsupported.\r\n\r\n### unsupported content encoding \"bogus\"\r\n\r\nThis error will occur when the request had a `Content-Encoding` header that\r\ncontained an unsupported encoding. The encoding is contained in the message\r\nas well as in the `encoding` property. The `status` property is set to `415`,\r\nthe `type` property is set to `'encoding.unsupported'`, and the `encoding`\r\nproperty is set to the encoding that is unsupported.\r\n\r\n## Examples\r\n\r\n### Express/Connect top-level generic\r\n\r\nThis example demonstrates adding a generic JSON and URL-encoded parser as a\r\ntop-level middleware, which will parse the bodies of all incoming requests.\r\nThis is the simplest setup.\r\n\r\n```js\r\nvar express = require('express')\r\nvar bodyParser = require('body-parser')\r\n\r\nvar app = express()\r\n\r\n// parse application/x-www-form-urlencoded\r\napp.use(bodyParser.urlencoded({ extended: false }))\r\n\r\n// parse application/json\r\napp.use(bodyParser.json())\r\n\r\napp.use(function (req, res) {\r\n  res.setHeader('Content-Type', 'text/plain')\r\n  res.write('you posted:\\n')\r\n  res.end(JSON.stringify(req.body, null, 2))\r\n})\r\n```\r\n\r\n### Express route-specific\r\n\r\nThis example demonstrates adding body parsers specifically to the routes that\r\nneed them. In general, this is the most recommended way to use body-parser with\r\nExpress.\r\n\r\n```js\r\nvar express = require('express')\r\nvar bodyParser = require('body-parser')\r\n\r\nvar app = express()\r\n\r\n// create application/json parser\r\nvar jsonParser = bodyParser.json()\r\n\r\n// create application/x-www-form-urlencoded parser\r\nvar urlencodedParser = bodyParser.urlencoded({ extended: false })\r\n\r\n// POST /login gets urlencoded bodies\r\napp.post('/login', urlencodedParser, function (req, res) {\r\n  res.send('welcome, ' + req.body.username)\r\n})\r\n\r\n// POST /api/users gets JSON bodies\r\napp.post('/api/users', jsonParser, function (req, res) {\r\n  // create user in req.body\r\n})\r\n```\r\n\r\n### Change accepted type for parsers\r\n\r\nAll the parsers accept a `type` option which allows you to change the\r\n`Content-Type` that the middleware will parse.\r\n\r\n```js\r\nvar express = require('express')\r\nvar bodyParser = require('body-parser')\r\n\r\nvar app = express()\r\n\r\n// parse various different custom JSON types as JSON\r\napp.use(bodyParser.json({ type: 'application/*+json' }))\r\n\r\n// parse some custom thing into a Buffer\r\napp.use(bodyParser.raw({ type: 'application/vnd.custom-type' }))\r\n\r\n// parse an HTML body into a string\r\napp.use(bodyParser.text({ type: 'text/html' }))\r\n```\r\n\r\n## License\r\n\r\n[MIT](LICENSE)\r\n\r\n[ci-image]: https://badgen.net/github/checks/expressjs/body-parser/master?label=ci\r\n[ci-url]: https://github.com/expressjs/body-parser/actions/workflows/ci.yml\r\n[coveralls-image]: https://badgen.net/coveralls/c/github/expressjs/body-parser/master\r\n[coveralls-url]: https://coveralls.io/r/expressjs/body-parser?branch=master\r\n[node-version-image]: https://badgen.net/npm/node/body-parser\r\n[node-version-url]: https://nodejs.org/en/download\r\n[npm-downloads-image]: https://badgen.net/npm/dm/body-parser\r\n[npm-url]: https://npmjs.org/package/body-parser\r\n[npm-version-image]: https://badgen.net/npm/v/body-parser\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/body-parser/README.md b/node_modules/body-parser/README.md
--- a/node_modules/body-parser/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/body-parser/README.md	(date 1753913035858)
@@ -4,6 +4,7 @@
 [![NPM Downloads][npm-downloads-image]][npm-url]
 [![Build Status][ci-image]][ci-url]
 [![Test Coverage][coveralls-image]][coveralls-url]
+[![OpenSSF Scorecard Badge][ossf-scorecard-badge]][ossf-scorecard-visualizer]
 
 Node.js body parsing middleware.
 
@@ -277,6 +278,10 @@
 where `buf` is a `Buffer` of the raw request body and `encoding` is the
 encoding of the request. The parsing can be aborted by throwing an error.
 
+#### depth
+
+The `depth` option is used to configure the maximum depth of the `qs` library when `extended` is `true`. This allows you to limit the amount of keys that are parsed and can be useful to prevent certain types of abuse. Defaults to `32`. It is recommended to keep this value as low as possible.
+
 ## Errors
 
 The middlewares provided by this module create errors using the
@@ -373,6 +378,10 @@
 the `type` property is set to `'encoding.unsupported'`, and the `encoding`
 property is set to the encoding that is unsupported.
 
+### The input exceeded the depth
+
+This error occurs when using `bodyParser.urlencoded` with the `extended` property set to `true` and the input exceeds the configured `depth` option. The `status` property is set to `400`. It is recommended to review the `depth` option and evaluate if it requires a higher value. When the `depth` option is set to `32` (default value), the error will not be thrown.
+
 ## Examples
 
 ### Express/Connect top-level generic
@@ -463,3 +472,5 @@
 [npm-downloads-image]: https://badgen.net/npm/dm/body-parser
 [npm-url]: https://npmjs.org/package/body-parser
 [npm-version-image]: https://badgen.net/npm/v/body-parser
+[ossf-scorecard-badge]: https://api.scorecard.dev/projects/github.com/expressjs/body-parser/badge
+[ossf-scorecard-visualizer]: https://ossf.github.io/scorecard-visualizer/#/projects/github.com/expressjs/body-parser
\ No newline at end of file
Index: node_modules/body-parser/lib/types/urlencoded.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*!\r\n * body-parser\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar bytes = require('bytes')\r\nvar contentType = require('content-type')\r\nvar createError = require('http-errors')\r\nvar debug = require('debug')('body-parser:urlencoded')\r\nvar deprecate = require('depd')('body-parser')\r\nvar read = require('../read')\r\nvar typeis = require('type-is')\r\n\r\n/**\r\n * Module exports.\r\n */\r\n\r\nmodule.exports = urlencoded\r\n\r\n/**\r\n * Cache of parser modules.\r\n */\r\n\r\nvar parsers = Object.create(null)\r\n\r\n/**\r\n * Create a middleware to parse urlencoded bodies.\r\n *\r\n * @param {object} [options]\r\n * @return {function}\r\n * @public\r\n */\r\n\r\nfunction urlencoded (options) {\r\n  var opts = options || {}\r\n\r\n  // notice because option default will flip in next major\r\n  if (opts.extended === undefined) {\r\n    deprecate('undefined extended: provide extended option')\r\n  }\r\n\r\n  var extended = opts.extended !== false\r\n  var inflate = opts.inflate !== false\r\n  var limit = typeof opts.limit !== 'number'\r\n    ? bytes.parse(opts.limit || '100kb')\r\n    : opts.limit\r\n  var type = opts.type || 'application/x-www-form-urlencoded'\r\n  var verify = opts.verify || false\r\n\r\n  if (verify !== false && typeof verify !== 'function') {\r\n    throw new TypeError('option verify must be function')\r\n  }\r\n\r\n  // create the appropriate query parser\r\n  var queryparse = extended\r\n    ? extendedparser(opts)\r\n    : simpleparser(opts)\r\n\r\n  // create the appropriate type checking function\r\n  var shouldParse = typeof type !== 'function'\r\n    ? typeChecker(type)\r\n    : type\r\n\r\n  function parse (body) {\r\n    return body.length\r\n      ? queryparse(body)\r\n      : {}\r\n  }\r\n\r\n  return function urlencodedParser (req, res, next) {\r\n    if (req._body) {\r\n      debug('body already parsed')\r\n      next()\r\n      return\r\n    }\r\n\r\n    req.body = req.body || {}\r\n\r\n    // skip requests without bodies\r\n    if (!typeis.hasBody(req)) {\r\n      debug('skip empty body')\r\n      next()\r\n      return\r\n    }\r\n\r\n    debug('content-type %j', req.headers['content-type'])\r\n\r\n    // determine if request should be parsed\r\n    if (!shouldParse(req)) {\r\n      debug('skip parsing')\r\n      next()\r\n      return\r\n    }\r\n\r\n    // assert charset\r\n    var charset = getCharset(req) || 'utf-8'\r\n    if (charset !== 'utf-8') {\r\n      debug('invalid charset')\r\n      next(createError(415, 'unsupported charset \"' + charset.toUpperCase() + '\"', {\r\n        charset: charset,\r\n        type: 'charset.unsupported'\r\n      }))\r\n      return\r\n    }\r\n\r\n    // read\r\n    read(req, res, next, parse, debug, {\r\n      debug: debug,\r\n      encoding: charset,\r\n      inflate: inflate,\r\n      limit: limit,\r\n      verify: verify\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Get the extended query parser.\r\n *\r\n * @param {object} options\r\n */\r\n\r\nfunction extendedparser (options) {\r\n  var parameterLimit = options.parameterLimit !== undefined\r\n    ? options.parameterLimit\r\n    : 1000\r\n  var parse = parser('qs')\r\n\r\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\r\n    throw new TypeError('option parameterLimit must be a positive number')\r\n  }\r\n\r\n  if (isFinite(parameterLimit)) {\r\n    parameterLimit = parameterLimit | 0\r\n  }\r\n\r\n  return function queryparse (body) {\r\n    var paramCount = parameterCount(body, parameterLimit)\r\n\r\n    if (paramCount === undefined) {\r\n      debug('too many parameters')\r\n      throw createError(413, 'too many parameters', {\r\n        type: 'parameters.too.many'\r\n      })\r\n    }\r\n\r\n    var arrayLimit = Math.max(100, paramCount)\r\n\r\n    debug('parse extended urlencoding')\r\n    return parse(body, {\r\n      allowPrototypes: true,\r\n      arrayLimit: arrayLimit,\r\n      depth: Infinity,\r\n      parameterLimit: parameterLimit\r\n    })\r\n  }\r\n}\r\n\r\n/**\r\n * Get the charset of a request.\r\n *\r\n * @param {object} req\r\n * @api private\r\n */\r\n\r\nfunction getCharset (req) {\r\n  try {\r\n    return (contentType.parse(req).parameters.charset || '').toLowerCase()\r\n  } catch (e) {\r\n    return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Count the number of parameters, stopping once limit reached\r\n *\r\n * @param {string} body\r\n * @param {number} limit\r\n * @api private\r\n */\r\n\r\nfunction parameterCount (body, limit) {\r\n  var count = 0\r\n  var index = 0\r\n\r\n  while ((index = body.indexOf('&', index)) !== -1) {\r\n    count++\r\n    index++\r\n\r\n    if (count === limit) {\r\n      return undefined\r\n    }\r\n  }\r\n\r\n  return count\r\n}\r\n\r\n/**\r\n * Get parser for module name dynamically.\r\n *\r\n * @param {string} name\r\n * @return {function}\r\n * @api private\r\n */\r\n\r\nfunction parser (name) {\r\n  var mod = parsers[name]\r\n\r\n  if (mod !== undefined) {\r\n    return mod.parse\r\n  }\r\n\r\n  // this uses a switch for static require analysis\r\n  switch (name) {\r\n    case 'qs':\r\n      mod = require('qs')\r\n      break\r\n    case 'querystring':\r\n      mod = require('querystring')\r\n      break\r\n  }\r\n\r\n  // store to prevent invoking require()\r\n  parsers[name] = mod\r\n\r\n  return mod.parse\r\n}\r\n\r\n/**\r\n * Get the simple query parser.\r\n *\r\n * @param {object} options\r\n */\r\n\r\nfunction simpleparser (options) {\r\n  var parameterLimit = options.parameterLimit !== undefined\r\n    ? options.parameterLimit\r\n    : 1000\r\n  var parse = parser('querystring')\r\n\r\n  if (isNaN(parameterLimit) || parameterLimit < 1) {\r\n    throw new TypeError('option parameterLimit must be a positive number')\r\n  }\r\n\r\n  if (isFinite(parameterLimit)) {\r\n    parameterLimit = parameterLimit | 0\r\n  }\r\n\r\n  return function queryparse (body) {\r\n    var paramCount = parameterCount(body, parameterLimit)\r\n\r\n    if (paramCount === undefined) {\r\n      debug('too many parameters')\r\n      throw createError(413, 'too many parameters', {\r\n        type: 'parameters.too.many'\r\n      })\r\n    }\r\n\r\n    debug('parse urlencoding')\r\n    return parse(body, undefined, undefined, { maxKeys: parameterLimit })\r\n  }\r\n}\r\n\r\n/**\r\n * Get the simple type checker.\r\n *\r\n * @param {string} type\r\n * @return {function}\r\n */\r\n\r\nfunction typeChecker (type) {\r\n  return function checkType (req) {\r\n    return Boolean(typeis(req, type))\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/body-parser/lib/types/urlencoded.js b/node_modules/body-parser/lib/types/urlencoded.js
--- a/node_modules/body-parser/lib/types/urlencoded.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/body-parser/lib/types/urlencoded.js	(date 1753913035853)
@@ -55,6 +55,9 @@
     : opts.limit
   var type = opts.type || 'application/x-www-form-urlencoded'
   var verify = opts.verify || false
+  var depth = typeof opts.depth !== 'number'
+    ? Number(opts.depth || 32)
+    : opts.depth
 
   if (verify !== false && typeof verify !== 'function') {
     throw new TypeError('option verify must be function')
@@ -118,7 +121,8 @@
       encoding: charset,
       inflate: inflate,
       limit: limit,
-      verify: verify
+      verify: verify,
+      depth: depth
     })
   }
 }
@@ -133,12 +137,20 @@
   var parameterLimit = options.parameterLimit !== undefined
     ? options.parameterLimit
     : 1000
+
+  var depth = typeof options.depth !== 'number'
+    ? Number(options.depth || 32)
+    : options.depth
   var parse = parser('qs')
 
   if (isNaN(parameterLimit) || parameterLimit < 1) {
     throw new TypeError('option parameterLimit must be a positive number')
   }
 
+  if (isNaN(depth) || depth < 0) {
+    throw new TypeError('option depth must be a zero or a positive number')
+  }
+
   if (isFinite(parameterLimit)) {
     parameterLimit = parameterLimit | 0
   }
@@ -156,12 +168,23 @@
     var arrayLimit = Math.max(100, paramCount)
 
     debug('parse extended urlencoding')
-    return parse(body, {
-      allowPrototypes: true,
-      arrayLimit: arrayLimit,
-      depth: Infinity,
-      parameterLimit: parameterLimit
-    })
+    try {
+      return parse(body, {
+        allowPrototypes: true,
+        arrayLimit: arrayLimit,
+        depth: depth,
+        strictDepth: true,
+        parameterLimit: parameterLimit
+      })
+    } catch (err) {
+      if (err instanceof RangeError) {
+        throw createError(400, 'The input exceeded the depth', {
+          type: 'querystring.parse.rangeError'
+        })
+      } else {
+        throw err
+      }
+    }
   }
 }
 
Index: node_modules/touch/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"author\": \"Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me/)\",\r\n  \"name\": \"touch\",\r\n  \"description\": \"like touch(1) in node\",\r\n  \"version\": \"3.1.0\",\r\n  \"repository\": \"git://github.com/isaacs/node-touch.git\",\r\n  \"bin\": {\r\n    \"nodetouch\": \"./bin/nodetouch.js\"\r\n  },\r\n  \"dependencies\": {\r\n    \"nopt\": \"~1.0.10\"\r\n  },\r\n  \"license\": \"ISC\",\r\n  \"scripts\": {\r\n    \"test\": \"tap test/*.js --100 -J\",\r\n    \"preversion\": \"npm test\",\r\n    \"postversion\": \"npm publish\",\r\n    \"postpublish\": \"git push origin --all; git push origin --tags\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"mutate-fs\": \"^1.1.0\",\r\n    \"tap\": \"^10.7.0\"\r\n  },\r\n  \"files\": [\r\n    \"index.js\",\r\n    \"bin/nodetouch.js\"\r\n  ]\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/touch/package.json b/node_modules/touch/package.json
--- a/node_modules/touch/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/touch/package.json	(date 1753913035451)
@@ -2,14 +2,11 @@
   "author": "Isaac Z. Schlueter <i@izs.me> (http://blog.izs.me/)",
   "name": "touch",
   "description": "like touch(1) in node",
-  "version": "3.1.0",
+  "version": "3.1.1",
   "repository": "git://github.com/isaacs/node-touch.git",
   "bin": {
     "nodetouch": "./bin/nodetouch.js"
   },
-  "dependencies": {
-    "nopt": "~1.0.10"
-  },
   "license": "ISC",
   "scripts": {
     "test": "tap test/*.js --100 -J",
Index: node_modules/pg/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># node-postgres\r\n\r\n[![Build Status](https://secure.travis-ci.org/brianc/node-postgres.svg?branch=master)](http://travis-ci.org/brianc/node-postgres)\r\n<span class=\"badge-npmversion\"><a href=\"https://npmjs.org/package/pg\" title=\"View this project on NPM\"><img src=\"https://img.shields.io/npm/v/pg.svg\" alt=\"NPM version\" /></a></span>\r\n<span class=\"badge-npmdownloads\"><a href=\"https://npmjs.org/package/pg\" title=\"View this project on NPM\"><img src=\"https://img.shields.io/npm/dm/pg.svg\" alt=\"NPM downloads\" /></a></span>\r\n\r\nNon-blocking PostgreSQL client for Node.js. Pure JavaScript and optional native libpq bindings.\r\n\r\n## Install\r\n\r\n```sh\r\n$ npm install pg\r\n```\r\n\r\n---\r\n\r\n## :star: [Documentation](https://node-postgres.com) :star:\r\n\r\n### Features\r\n\r\n- Pure JavaScript client and native libpq bindings share _the same API_\r\n- Connection pooling\r\n- Extensible JS ↔ PostgreSQL data-type coercion\r\n- Supported PostgreSQL features\r\n  - Parameterized queries\r\n  - Named statements with query plan caching\r\n  - Async notifications with `LISTEN/NOTIFY`\r\n  - Bulk import & export with `COPY TO/COPY FROM`\r\n\r\n### Extras\r\n\r\nnode-postgres is by design pretty light on abstractions. These are some handy modules we've been using over the years to complete the picture.\r\nThe entire list can be found on our [wiki](https://github.com/brianc/node-postgres/wiki/Extras).\r\n\r\n## Support\r\n\r\nnode-postgres is free software. If you encounter a bug with the library please open an issue on the [GitHub repo](https://github.com/brianc/node-postgres). If you have questions unanswered by the documentation please open an issue pointing out how the documentation was unclear & I will do my best to make it better!\r\n\r\nWhen you open an issue please provide:\r\n\r\n- version of Node\r\n- version of Postgres\r\n- smallest possible snippet of code to reproduce the problem\r\n\r\nYou can also follow me [@briancarlson](https://twitter.com/briancarlson) if that's your thing. I try to always announce noteworthy changes & developments with node-postgres on Twitter.\r\n\r\n## Sponsorship :two_hearts:\r\n\r\nnode-postgres's continued development has been made possible in part by generous finanical support from [the community](https://github.com/brianc/node-postgres/blob/master/SPONSORS.md).\r\n\r\nIf you or your company are benefiting from node-postgres and would like to help keep the project financially sustainable [please consider supporting](https://github.com/sponsors/brianc) its development.\r\n\r\n## Contributing\r\n\r\n**:heart: contributions!**\r\n\r\nI will **happily** accept your pull request if it:\r\n\r\n- **has tests**\r\n- looks reasonable\r\n- does not break backwards compatibility\r\n\r\nIf your change involves breaking backwards compatibility please please point that out in the pull request & we can discuss & plan when and how to release it and what type of documentation or communicate it will require.\r\n\r\n## Troubleshooting and FAQ\r\n\r\nThe causes and solutions to common errors can be found among the [Frequently Asked Questions (FAQ)](https://github.com/brianc/node-postgres/wiki/FAQ)\r\n\r\n## License\r\n\r\nCopyright (c) 2010-2020 Brian Carlson (brian.m.carlson@gmail.com)\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg/README.md b/node_modules/pg/README.md
--- a/node_modules/pg/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg/README.md	(date 1753913035457)
@@ -46,10 +46,16 @@
 
 ## Sponsorship :two_hearts:
 
-node-postgres's continued development has been made possible in part by generous finanical support from [the community](https://github.com/brianc/node-postgres/blob/master/SPONSORS.md).
+node-postgres's continued development has been made possible in part by generous financial support from [the community](https://github.com/brianc/node-postgres/blob/master/SPONSORS.md).
 
 If you or your company are benefiting from node-postgres and would like to help keep the project financially sustainable [please consider supporting](https://github.com/sponsors/brianc) its development.
 
+### Featured sponsor
+
+Special thanks to [medplum](https://medplum.com) for their generous and thoughtful support of node-postgres!
+
+![medplum](https://raw.githubusercontent.com/medplum/medplum-logo/refs/heads/main/medplum-logo.png)
+
 ## Contributing
 
 **:heart: contributions!**
Index: node_modules/touch/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict'\r\n\r\nconst EE = require('events').EventEmitter\r\nconst cons = require('constants')\r\nconst fs = require('fs')\r\n\r\nmodule.exports = (f, options, cb) => {\r\n  if (typeof options === 'function')\r\n    cb = options, options = {}\r\n\r\n  const p = new Promise((res, rej) => {\r\n    new Touch(validOpts(options, f, null))\r\n      .on('done', res).on('error', rej)\r\n  })\r\n\r\n  return cb ? p.then(res => cb(null, res), cb) : p\r\n}\r\n\r\nmodule.exports.sync = module.exports.touchSync = (f, options) =>\r\n  (new TouchSync(validOpts(options, f, null)), undefined)\r\n\r\nmodule.exports.ftouch = (fd, options, cb) => {\r\n  if (typeof options === 'function')\r\n    cb = options, options = {}\r\n\r\n  const p = new Promise((res, rej) => {\r\n    new Touch(validOpts(options, null, fd))\r\n      .on('done', res).on('error', rej)\r\n  })\r\n\r\n  return cb ? p.then(res => cb(null, res), cb) : p\r\n}\r\n\r\nmodule.exports.ftouchSync = (fd, opt) =>\r\n  (new TouchSync(validOpts(opt, null, fd)), undefined)\r\n\r\nconst validOpts = (options, path, fd) => {\r\n  options = Object.create(options || {})\r\n  options.fd = fd\r\n  options.path = path\r\n\r\n  // {mtime: true}, {ctime: true}\r\n  // If set to something else, then treat as epoch ms value\r\n  const now = parseInt(new Date(options.time || Date.now()).getTime() / 1000)\r\n  if (!options.atime && !options.mtime)\r\n    options.atime = options.mtime = now\r\n  else {\r\n    if (true === options.atime)\r\n      options.atime = now\r\n\r\n    if (true === options.mtime)\r\n      options.mtime = now\r\n  }\r\n\r\n  let oflags = 0\r\n  if (!options.force)\r\n    oflags = oflags | cons.O_RDWR\r\n\r\n  if (!options.nocreate)\r\n    oflags = oflags | cons.O_CREAT\r\n\r\n  options.oflags = oflags\r\n  return options\r\n}\r\n\r\nclass Touch extends EE {\r\n  constructor (options) {\r\n    super(options)\r\n    this.fd = options.fd\r\n    this.path = options.path\r\n    this.atime = options.atime\r\n    this.mtime = options.mtime\r\n    this.ref = options.ref\r\n    this.nocreate = !!options.nocreate\r\n    this.force = !!options.force\r\n    this.closeAfter = options.closeAfter\r\n    this.oflags = options.oflags\r\n    this.options = options\r\n\r\n    if (typeof this.fd !== 'number') {\r\n      this.closeAfter = true\r\n      this.open()\r\n    } else\r\n      this.onopen(null, this.fd)\r\n  }\r\n\r\n  emit (ev, data) {\r\n    // we only emit when either done or erroring\r\n    // in both cases, need to close\r\n    this.close()\r\n    return super.emit(ev, data)\r\n  }\r\n\r\n  close () {\r\n    if (typeof this.fd === 'number' && this.closeAfter)\r\n      fs.close(this.fd, () => {})\r\n  }\r\n\r\n  open () {\r\n    fs.open(this.path, this.oflags, (er, fd) => this.onopen(er, fd))\r\n  }\r\n\r\n  onopen (er, fd) {\r\n    if (er) {\r\n      if (er.code === 'EISDIR')\r\n        this.onopen(null, null)\r\n      else if (er.code === 'ENOENT' && this.nocreate)\r\n        this.emit('done')\r\n      else\r\n        this.emit('error', er)\r\n    } else {\r\n      this.fd = fd\r\n      if (this.ref)\r\n        this.statref()\r\n      else if (!this.atime || !this.mtime)\r\n        this.fstat()\r\n      else\r\n        this.futimes()\r\n    }\r\n  }\r\n\r\n  statref () {\r\n    fs.stat(this.ref, (er, st) => {\r\n      if (er)\r\n        this.emit('error', er)\r\n      else\r\n        this.onstatref(st)\r\n    })\r\n  }\r\n\r\n  onstatref (st) {\r\n    this.atime = this.atime && parseInt(st.atime.getTime()/1000, 10)\r\n    this.mtime = this.mtime && parseInt(st.mtime.getTime()/1000, 10)\r\n    if (!this.atime || !this.mtime)\r\n      this.fstat()\r\n    else\r\n      this.futimes()\r\n  }\r\n\r\n  fstat () {\r\n    const stat = this.fd ? 'fstat' : 'stat'\r\n    const target = this.fd || this.path\r\n    fs[stat](target, (er, st) => {\r\n      if (er)\r\n        this.emit('error', er)\r\n      else\r\n        this.onfstat(st)\r\n    })\r\n  }\r\n\r\n  onfstat (st) {\r\n    if (typeof this.atime !== 'number')\r\n      this.atime = parseInt(st.atime.getTime()/1000, 10)\r\n\r\n    if (typeof this.mtime !== 'number')\r\n      this.mtime = parseInt(st.mtime.getTime()/1000, 10)\r\n\r\n    this.futimes()\r\n  }\r\n\r\n  futimes () {\r\n    const utimes = this.fd ? 'futimes' : 'utimes'\r\n    const target = this.fd || this.path\r\n    fs[utimes](target, ''+this.atime, ''+this.mtime, er => {\r\n      if (er)\r\n        this.emit('error', er)\r\n      else\r\n        this.emit('done')\r\n    })\r\n  }\r\n}\r\n\r\nclass TouchSync extends Touch {\r\n  open () {\r\n    try {\r\n      this.onopen(null, fs.openSync(this.path, this.oflags))\r\n    } catch (er) {\r\n      this.onopen(er)\r\n    }\r\n  }\r\n\r\n  statref () {\r\n    let threw = true\r\n    try {\r\n      this.onstatref(fs.statSync(this.ref))\r\n      threw = false\r\n    } finally {\r\n      if (threw)\r\n        this.close()\r\n    }\r\n  }\r\n\r\n  fstat () {\r\n    let threw = true\r\n    const stat = this.fd ? 'fstatSync' : 'statSync'\r\n    const target = this.fd || this.path\r\n    try {\r\n      this.onfstat(fs[stat](target))\r\n      threw = false\r\n    } finally {\r\n      if (threw)\r\n        this.close()\r\n    }\r\n  }\r\n\r\n  futimes () {\r\n    let threw = true\r\n    const utimes = this.fd ? 'futimesSync' : 'utimesSync'\r\n    const target = this.fd || this.path\r\n    try {\r\n      fs[utimes](target, this.atime, this.mtime)\r\n      threw = false\r\n    } finally {\r\n      if (threw)\r\n        this.close()\r\n    }\r\n    this.emit('done')\r\n  }\r\n\r\n  close () {\r\n    if (typeof this.fd === 'number' && this.closeAfter)\r\n      try { fs.closeSync(this.fd) } catch (er) {}\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/touch/index.js b/node_modules/touch/index.js
--- a/node_modules/touch/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/touch/index.js	(date 1753913035448)
@@ -41,7 +41,7 @@
 
   // {mtime: true}, {ctime: true}
   // If set to something else, then treat as epoch ms value
-  const now = parseInt(new Date(options.time || Date.now()).getTime() / 1000)
+  const now = new Date(options.time || Date.now()).getTime() / 1000
   if (!options.atime && !options.mtime)
     options.atime = options.mtime = now
   else {
@@ -129,8 +129,8 @@
   }
 
   onstatref (st) {
-    this.atime = this.atime && parseInt(st.atime.getTime()/1000, 10)
-    this.mtime = this.mtime && parseInt(st.mtime.getTime()/1000, 10)
+    this.atime = this.atime && st.atime.getTime()/1000
+    this.mtime = this.mtime && st.mtime.getTime()/1000
     if (!this.atime || !this.mtime)
       this.fstat()
     else
@@ -150,10 +150,10 @@
 
   onfstat (st) {
     if (typeof this.atime !== 'number')
-      this.atime = parseInt(st.atime.getTime()/1000, 10)
+      this.atime = st.atime.getTime()/1000
 
     if (typeof this.mtime !== 'number')
-      this.mtime = parseInt(st.mtime.getTime()/1000, 10)
+      this.mtime = st.mtime.getTime()/1000
 
     this.futimes()
   }
Index: node_modules/doublylinked/lib/doubly-linked.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/* doublylinked\r\n ------------------------\r\n (c) 2017-present Panates\r\n SQB may be freely distributed under the MIT license.\r\n For details and documentation:\r\n https://panates.github.io/doublylinked/\r\n */\r\n'use strict';\r\n\r\n/**\r\n *\r\n * @class\r\n */\r\nclass DoublyLinked {\r\n\r\n  /**\r\n   * @param {*} element... - The elements to add to the end of the list\r\n   * @constructor\r\n   */\r\n  constructor(...element) {\r\n    this._cursor = undefined;\r\n    this._head = undefined;\r\n    this._tail = undefined;\r\n    this._length = 0;\r\n    this._eof = undefined;\r\n    if (arguments.length)\r\n      this.push.apply(this, arguments);\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Node}\r\n   */\r\n  get cursor() {\r\n    return this._cursor;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Node}\r\n   */\r\n  get head() {\r\n    return this._head;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {int}\r\n   */\r\n  get length() {\r\n    return this._length;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @returns {Node}\r\n   */\r\n  get tail() {\r\n    return this._tail;\r\n  }\r\n\r\n  /**\r\n   * Merges cursor list with and given lists/values into new list\r\n   *\r\n   * @param {String} element... - Lists and/or values to concatenate into a new list\r\n   * @return {DoublyLinked} - A new DoublyLinked instance\r\n   * @public\r\n   */\r\n  concat(...element) {\r\n    const result = new DoublyLinked();\r\n    const mergeFn = (acc, node) => {\r\n      acc.push(node);\r\n      return acc;\r\n    };\r\n    this.reduce(mergeFn, result);\r\n    for (const arg of element) {\r\n      if (arg instanceof DoublyLinked)\r\n        arg.reduce(mergeFn, result);\r\n      else result.push(arg);\r\n    }\r\n\r\n    return result.reset();\r\n  }\r\n\r\n  /**\r\n   * Returns the iterator object contains entries\r\n   *\r\n   * @return {Iterator}\r\n   */\r\n  entries() {\r\n    return {\r\n      [Symbol.iterator]() {\r\n        let _cursor;\r\n        let i = 0;\r\n        return {\r\n          next: () => {\r\n            _cursor = _cursor ? _cursor.next : this.head;\r\n            return {\r\n              value: _cursor && [i++, _cursor.value],\r\n              done: !_cursor\r\n            };\r\n          }\r\n        };\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns the iterator object contains keys\r\n   *\r\n   * @return {Iterator}\r\n   */\r\n  keys() {\r\n    return {\r\n      [Symbol.iterator]() {\r\n        let _cursor;\r\n        let i = 0;\r\n        return {\r\n          next: () => {\r\n            _cursor = _cursor ? _cursor.next : this.head;\r\n            return {\r\n              value: _cursor && i++,\r\n              done: !_cursor\r\n            };\r\n          }\r\n        };\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Returns the iterator object contains values\r\n   *\r\n   * @return {function}\r\n   */\r\n  values() {\r\n    return {\r\n      [Symbol.iterator]() {\r\n        let _cursor;\r\n        return {\r\n          next: () => {\r\n            _cursor = _cursor ? _cursor.next : this.head;\r\n            return {\r\n              value: _cursor && _cursor.value,\r\n              done: !_cursor\r\n            };\r\n          }\r\n        };\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Tests whether all elements in the list pass the test implemented by\r\n   * the provided function (from left to right)\r\n   *\r\n   * @param {Function} callback - Function to test for each element\r\n   * @param {*} [thisArg] - Value to use as this when executing callback\r\n   * @return {Boolean} - true if the callback function returns a truthy value for every list element; otherwise, false\r\n   * @public\r\n   */\r\n  every(callback, thisArg) {\r\n    if (typeof callback !== 'function')\r\n      throw new TypeError('You must provide a function as first argument');\r\n    if (!(this._length && callback))\r\n      return true;\r\n    thisArg = thisArg !== undefined ? thisArg : this;\r\n    let tmp = this._head;\r\n    let nxt;\r\n    let i = 0;\r\n    while (tmp) {\r\n      nxt = tmp.next;\r\n      if (!callback.call(thisArg, tmp.value, i++, thisArg))\r\n        return false;\r\n      tmp = nxt;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Tests whether all elements in the list pass the test implemented by\r\n   * the provided function (from right to left)\r\n   *\r\n   * @param {Function} callback - Function to test for each element\r\n   * @param {*} [thisArg] - Value to use as this when executing callback\r\n   * @return {Boolean} - true if the callback function returns a truthy value for every list element; otherwise, false\r\n   * @public\r\n   */\r\n  everyRight(callback, thisArg) {\r\n    if (typeof callback !== 'function')\r\n      throw new TypeError('You must provide a function as first argument');\r\n    if (!(this._length && callback))\r\n      return true;\r\n    thisArg = thisArg !== undefined ? thisArg : this;\r\n    let tmp = this.tail;\r\n    for (let i = 0; i < this._length; i++) {\r\n      if (!callback.call(thisArg, tmp.value, this._length - i - 1, thisArg))\r\n        return false;\r\n      tmp = tmp.prev;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Creates a new list with all elements that pass the test implemented\r\n   * by the provided function\r\n   *\r\n   * @param {Function} callback - Function to test for each element\r\n   * @param {*} [thisArg] - Value to use as this when executing callback\r\n   * @return {DoublyLinked} - A new list with the elements that pass the test\r\n   * @public\r\n   */\r\n  filter(callback, thisArg) {\r\n    if (typeof callback !== 'function')\r\n      throw new TypeError('You must provide a function as first argument');\r\n    thisArg = thisArg !== undefined ? thisArg : this;\r\n    let index = 0;\r\n    return this.reduce((acc, value) => {\r\n      if (callback.call(thisArg, value, index++, thisArg))\r\n        acc.push(value);\r\n      return acc;\r\n    }, new DoublyLinked());\r\n  }\r\n\r\n  /**\r\n   * Returns the value of the first element in the list that satisfies\r\n   * the provided testing function. Otherwise undefined is returned\r\n   *\r\n   * @param {Function} callback - Function to test for each element\r\n   * @param {*} [thisArg] - Value to use as this when executing callback\r\n   * @return {*} - A value in the list if an element passes the test; otherwise, undefined\r\n   * @public\r\n   */\r\n  find(callback, thisArg) {\r\n    if (typeof callback !== 'function')\r\n      throw new TypeError('You must provide a function as first argument');\r\n    if (!this._length)\r\n      return;\r\n    thisArg = thisArg !== undefined ? thisArg : this;\r\n    let tmp = this.head;\r\n    for (let i = 0; i < this.length; i++) {\r\n      if (callback.call(thisArg, tmp.value, i, thisArg)) {\r\n        this._cursor = tmp;\r\n        this._eof = false;\r\n        return tmp.value;\r\n      }\r\n      tmp = tmp.next;\r\n    }\r\n    this._cursor = undefined;\r\n  }\r\n\r\n  /**\r\n   * Executes a provided function once for each list element (from left to right)\r\n   *\r\n   * @param {Function} callback - Function to execute for each element\r\n   * @param {*} [thisArg] - Value to use as this when executing callback\r\n   * @public\r\n   */\r\n  forEach(callback, thisArg) {\r\n    this.every((element, index, instance) => {\r\n      callback.call(this, element, index, instance);\r\n      return true;\r\n    }, thisArg);\r\n  }\r\n\r\n  /**\r\n   * Executes a provided function once for each list element (from right-to-left)\r\n   *\r\n   * @param {Function} callback - Function to execute for each element\r\n   * @param {*} [thisArg] - Value to use as this when executing callback\r\n   * @public\r\n   */\r\n  forEachRight(callback, thisArg) {\r\n    this.everyRight((element, index, instance) => {\r\n      callback.call(this, element, index, instance);\r\n      return true;\r\n    }, thisArg);\r\n  }\r\n\r\n  /**\r\n   * Determines whether an list includes a certain element,\r\n   * returning true or false as appropriate\r\n   *\r\n   * @param {*} searchElement - The element to search for\r\n   * @param {int} [fromIndex = 0] - The position in this list at which to begin searching for searchElement\r\n   * @return {Boolean} - true if the searchElement found in the list; otherwise, false\r\n   * @public\r\n   */\r\n  includes(searchElement, fromIndex) {\r\n\r\n    const sameValueZero = (x, y) => {\r\n      return x === y ||\r\n          (typeof x === 'number' && typeof y === 'number' &&\r\n              isNaN(x) && isNaN(y));\r\n    };\r\n\r\n    fromIndex = fromIndex || 0;\r\n    if (fromIndex < 0)\r\n      fromIndex = this.length + fromIndex;\r\n    this.find((element, index) =>\r\n        (index >= fromIndex && sameValueZero(element, searchElement)));\r\n    return !!this.cursor;\r\n  }\r\n\r\n  /**\r\n   * Adds one or more elements right after the cursor node of the list and returns\r\n   * the new length of the list\r\n   *\r\n   * @param {*} element... - The elements to add after cursor node\r\n   * @returns {int} - The new length of the list\r\n   * @public\r\n   */\r\n  insert(...element) {\r\n    for (const arg of element) {\r\n      const node = new Node(this, arg);\r\n      if (this._length) {\r\n        this._cursor.next = node;\r\n        node.prev = this._cursor;\r\n        this._cursor = node;\r\n      } else {\r\n        this._head = node;\r\n        this._tail = node;\r\n        this._cursor = node;\r\n      }\r\n      this._length++;\r\n      this._eof = false;\r\n    }\r\n    return this._length;\r\n  }\r\n\r\n  /**\r\n   * Joins all elements of the list into a string and returns this string\r\n   *\r\n   * @param {String} [separator=','] - Specifies a string to separate each pair of adjacent elements of the list\r\n   * @return {String} - A string with all list elements joined. If length is 0, the empty string is returned\r\n   * @public\r\n   */\r\n  join(separator) {\r\n    separator = separator || ',';\r\n    let out = '';\r\n    this.forEach((value) => {\r\n      out += (out ? separator : '') + value;\r\n    });\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * Creates a new list with the results of calling a provided function on\r\n   * every element in the calling list\r\n   *\r\n   * @param {Function} callback - Function that produces an element of the new list\r\n   * @return {DoublyLinked} - A new list with each element being the result of the callback function\r\n   * @public\r\n   */\r\n  map(callback) {\r\n    if (typeof callback !== 'function')\r\n      throw new TypeError('You must provide a function as first argument');\r\n    const out = new DoublyLinked();\r\n    this.forEach((value, index, instance) => out.push(callback(value, index, instance)));\r\n    return out.reset();\r\n  }\r\n\r\n  /**\r\n   * Moves cursor to the next and returns its value\r\n   *\r\n   * @return {*} - Returns value of next node to the cursor. If cursor reaches to the end it returns undefined\r\n   * @public\r\n   */\r\n  next() {\r\n    if (this._cursor === this._tail) {\r\n      this._eof = true;\r\n      return undefined;\r\n    }\r\n    const c = this._cursor ? this._cursor.next : this._head;\r\n    this._cursor = c;\r\n    return c && c.value;\r\n  }\r\n\r\n  /**\r\n   * Moves cursor to the previous and returns its value\r\n   *\r\n   * @return {*} - Returns value of previous node to the cursor. If cursor reaches to the head it returns undefined\r\n   * @public\r\n   */\r\n  prev() {\r\n    let c;\r\n    if (this._eof) {\r\n      this._eof = false;\r\n      c = this._cursor = this._tail;\r\n      return c && c.value;\r\n    }\r\n    c = this._cursor && this._cursor.prev;\r\n    this._cursor = c;\r\n    return c && c.value;\r\n  }\r\n\r\n  /**\r\n   * Removes the last element from the list and returns that element\r\n   *\r\n   * @returns {*} - The removed element from the list; undefined if the list is empty.\r\n   * @public\r\n   */\r\n  pop() {\r\n    const ret = this._tail;\r\n    if (ret) {\r\n      ret.remove();\r\n      return ret.value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds one or more elements to the end of the list and returns\r\n   * the new length of the list\r\n   *\r\n   * @param {*} element... - The elements to add to the end of the list\r\n   * @returns {int} - The new length of the list\r\n   * @public\r\n   */\r\n  push(...element) {\r\n    if (element.length)\r\n      this._eof = false;\r\n    for (const arg of element) {\r\n      const node = new Node(this, arg);\r\n      if (this._length) {\r\n        this._tail.next = node;\r\n        node.prev = this._tail;\r\n        this._tail = node;\r\n      } else {\r\n        this._head = node;\r\n        this._tail = node;\r\n      }\r\n      this._length++;\r\n    }\r\n    return this._length;\r\n  }\r\n\r\n  /**\r\n   * Applies a function against an accumulator and each element in\r\n   * the list (from left-to-right) to reduce it to a single value\r\n   *\r\n   * @param {Function} callback - Function to execute on each element in the list\r\n   * @param {*} [initialValue] - Value to use as the first argument to the first call of the callback\r\n   * @return {*} - The value that results from the reduction\r\n   * @public\r\n   */\r\n  reduce(callback, initialValue) {\r\n    if (typeof callback !== 'function')\r\n      throw new TypeError('You must provide a function as first argument');\r\n    let accumulator = initialValue;\r\n    this.forEach((value, index) => {\r\n      accumulator = callback(accumulator, value, index, this);\r\n    });\r\n    return accumulator;\r\n  }\r\n\r\n  /**\r\n   * Applies a function against an accumulator and each element in\r\n   * the list (from right-to-left) to reduce it to a single value\r\n   *\r\n   * @param {Function} callback - Function to execute on each element in the list\r\n   * @param {*} [initialValue] - Value to use as the first argument to the first call of the callback\r\n   * @return {*} - The value that results from the reduction\r\n   * @public\r\n   */\r\n  reduceRight(callback, initialValue) {\r\n    if (typeof callback !== 'function')\r\n      throw new TypeError('You must provide a function as first argument');\r\n    let accumulator = initialValue;\r\n    this.forEachRight((value, index) => {\r\n      accumulator = callback(accumulator, value, index, this);\r\n    });\r\n    return accumulator;\r\n  }\r\n\r\n  /**\r\n   * Removes an element from the list\r\n   *\r\n   * @param {*} element - The element to be removed\r\n   * @param {int} [fromIndex = 0] - The position in this list at which to begin searching for element\r\n   * @return {*} - Returns removed element if found, undefined otherwise\r\n   * @public\r\n   */\r\n  remove(element, fromIndex) {\r\n    if (this.includes(element, fromIndex)) {\r\n      const cur = this._cursor;\r\n      cur.remove();\r\n      return cur.value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resets cursor to head\r\n   *\r\n   * @return {DoublyLinked} - Returns the DoublyLinked instance which this method is called\r\n   * @public\r\n   */\r\n  reset() {\r\n    this._cursor = undefined;\r\n    this._eof = false;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Reverses a list in place. The first array element becomes the last, and the last list element becomes the first.\r\n   *\r\n   * @return {DoublyLinked} - Returns the DoublyLinked instance which this method is called\r\n   * @public\r\n   */\r\n  reverse() {\r\n    let cur = this._head;\r\n    let p, n;\r\n    for (let i = 0; i < this._length; i++) {\r\n      p = cur.prev;\r\n      n = cur.next;\r\n      cur.prev = n;\r\n      cur.next = p;\r\n      cur = n;\r\n    }\r\n    p = this._head;\r\n    n = this._tail;\r\n    this._head = n;\r\n    this._tail = p;\r\n    this.reset();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Removes the first element from the list and returns that element\r\n   *\r\n   * @returns {*} - The removed element from the list; undefined if the list is empty\r\n   * @public\r\n   */\r\n  shift() {\r\n    const ret = this._head;\r\n    if (ret) {\r\n      ret.remove();\r\n      return ret.value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns a shallow copy of a portion of an array into a new array object\r\n   * selected from start to end (end not included) where start and\r\n   * end represent the index of items in that array.\r\n   *\r\n   * @param {number} [start]\r\n   * @param {number} [end]\r\n   * @returns {Array}\r\n   * @public\r\n   */\r\n  slice(start, end) {\r\n    start = start || 0;\r\n    const acc = [];\r\n    this.every((value, index) => {\r\n      if (index >= start)\r\n        acc.push(value);\r\n      return !end || index < end;\r\n    });\r\n    return acc;\r\n  }\r\n\r\n  /**\r\n   * Tests whether all elements in the list pass the test implemented by\r\n   * the provided function (from left to right)\r\n   *\r\n   * @param {Function} callback - Function to test for each element\r\n   * @param {*} [thisArg] - Value to use as this when executing callback\r\n   * @public\r\n   */\r\n  some(callback, thisArg) {\r\n    return !this.every((element, index, instance) =>\r\n        !callback.call(this, element, index, instance), thisArg);\r\n  }\r\n\r\n  /**\r\n   * Tests whether at least one element in the list passes the test\r\n   * implemented by the provided function (from right to left)\r\n   *\r\n   * @param {Function} callback - Function to test for each element\r\n   * @param {*} [thisArg] - Value to use as this when executing callback\r\n   * @public\r\n   */\r\n  someRight(callback, thisArg) {\r\n    return !this.everyRight((element, index, instance) =>\r\n        !callback.call(this, element, index, instance), thisArg);\r\n  }\r\n\r\n  /**\r\n   * Returns a new array containing elements of the list\r\n   *\r\n   * @return {Array} - A new Array instance contains elements of the list\r\n   * @public\r\n   */\r\n  toArray() {\r\n    return this.slice();\r\n  }\r\n\r\n  /**\r\n   * Returns a string representing the specified list and its elements.\r\n   * @return {string} - Returns a string representing the specified list and its elements.\r\n   */\r\n  toString() {\r\n    return 'DoublyLinked(' + this.join() + ')';\r\n  }\r\n\r\n  /**\r\n   * Adds one or more elements to the beginning of the list\r\n   * the new length of the list\r\n   *\r\n   * @param {*} element... - The elements to add to the front of the list\r\n   * @returns {int} - The new length of the list\r\n   * @public\r\n   */\r\n  unshift(...element) {\r\n    for (const arg of element) {\r\n      const node = new Node(this, arg);\r\n      if (this._length) {\r\n        this._head.prev = node;\r\n        node.next = this._head;\r\n        this._head = node;\r\n      } else {\r\n        this._head = node;\r\n        this._tail = node;\r\n      }\r\n      this._length++;\r\n    }\r\n    return this._length;\r\n  }\r\n\r\n  /**\r\n   * Returns the iterator object contains entries\r\n   *\r\n   * @return {Object} - Returns the iterator object contains entries\r\n   */\r\n  [Symbol.iterator]() {\r\n    let _cursor;\r\n    return {\r\n      next: () => {\r\n        _cursor = _cursor ? _cursor.next : this.head;\r\n        return {\r\n          value: _cursor && _cursor.value,\r\n          done: !_cursor\r\n        };\r\n      }\r\n    };\r\n  }\r\n\r\n}\r\n\r\n/**\r\n *\r\n * @constructor\r\n */\r\nclass Node {\r\n  constructor(list, value) {\r\n    this.list = list;\r\n    this.value = value;\r\n    this.prev = undefined;\r\n    this.next = undefined;\r\n  }\r\n\r\n  remove() {\r\n    if (!this.list)\r\n      return;\r\n    if (this.prev)\r\n        // noinspection JSUnresolvedVariable\r\n      this.prev.next = this.next;\r\n    if (this.next)\r\n        // noinspection JSUnresolvedVariable\r\n      this.next.prev = this.prev;\r\n    if (this === this.list._cursor)\r\n      this.list._cursor = this.next || this.prev;\r\n    if (this === this.list._head)\r\n      this.list._head = this.next;\r\n    if (this === this.list._tail)\r\n      this.list._tail = this.prev;\r\n    this.list._length--;\r\n    this.prev = undefined;\r\n    this.next = undefined;\r\n    this.list = undefined;\r\n  }\r\n}\r\n\r\n/**\r\n * Expose `DoublyLinked`.\r\n */\r\n\r\nmodule.exports = DoublyLinked;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/doublylinked/lib/doubly-linked.js b/node_modules/doublylinked/lib/doubly-linked.js
--- a/node_modules/doublylinked/lib/doubly-linked.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/doublylinked/lib/doubly-linked.js	(date 1753913035758)
@@ -12,7 +12,6 @@
  * @class
  */
 class DoublyLinked {
-
   /**
    * @param {*} element... - The elements to add to the end of the list
    * @constructor
@@ -23,8 +22,9 @@
     this._tail = undefined;
     this._length = 0;
     this._eof = undefined;
-    if (arguments.length)
-      this.push.apply(this, arguments);
+    if (element.length) {
+      this.push.apply(this, element);
+    }
   }
 
   /**
@@ -74,9 +74,9 @@
     };
     this.reduce(mergeFn, result);
     for (const arg of element) {
-      if (arg instanceof DoublyLinked)
+      if (arg instanceof DoublyLinked) {
         arg.reduce(mergeFn, result);
-      else result.push(arg);
+      } else result.push(arg);
     }
 
     return result.reset();
@@ -97,11 +97,11 @@
             _cursor = _cursor ? _cursor.next : this.head;
             return {
               value: _cursor && [i++, _cursor.value],
-              done: !_cursor
+              done: !_cursor,
             };
-          }
+          },
         };
-      }
+      },
     };
   }
 
@@ -120,11 +120,11 @@
             _cursor = _cursor ? _cursor.next : this.head;
             return {
               value: _cursor && i++,
-              done: !_cursor
+              done: !_cursor,
             };
-          }
+          },
         };
-      }
+      },
     };
   }
 
@@ -142,11 +142,11 @@
             _cursor = _cursor ? _cursor.next : this.head;
             return {
               value: _cursor && _cursor.value,
-              done: !_cursor
+              done: !_cursor,
             };
-          }
+          },
         };
-      }
+      },
     };
   }
 
@@ -160,18 +160,21 @@
    * @public
    */
   every(callback, thisArg) {
-    if (typeof callback !== 'function')
+    if (typeof callback !== 'function') {
       throw new TypeError('You must provide a function as first argument');
-    if (!(this._length && callback))
+    }
+    if (!(this._length && callback)) {
       return true;
+    }
     thisArg = thisArg !== undefined ? thisArg : this;
     let tmp = this._head;
     let nxt;
     let i = 0;
     while (tmp) {
       nxt = tmp.next;
-      if (!callback.call(thisArg, tmp.value, i++, thisArg))
+      if (!callback.call(thisArg, tmp.value, i++, thisArg)) {
         return false;
+      }
       tmp = nxt;
     }
     return true;
@@ -187,15 +190,18 @@
    * @public
    */
   everyRight(callback, thisArg) {
-    if (typeof callback !== 'function')
+    if (typeof callback !== 'function') {
       throw new TypeError('You must provide a function as first argument');
-    if (!(this._length && callback))
+    }
+    if (!(this._length && callback)) {
       return true;
+    }
     thisArg = thisArg !== undefined ? thisArg : this;
     let tmp = this.tail;
     for (let i = 0; i < this._length; i++) {
-      if (!callback.call(thisArg, tmp.value, this._length - i - 1, thisArg))
+      if (!callback.call(thisArg, tmp.value, this._length - i - 1, thisArg)) {
         return false;
+      }
       tmp = tmp.prev;
     }
     return true;
@@ -211,13 +217,15 @@
    * @public
    */
   filter(callback, thisArg) {
-    if (typeof callback !== 'function')
+    if (typeof callback !== 'function') {
       throw new TypeError('You must provide a function as first argument');
+    }
     thisArg = thisArg !== undefined ? thisArg : this;
     let index = 0;
     return this.reduce((acc, value) => {
-      if (callback.call(thisArg, value, index++, thisArg))
+      if (callback.call(thisArg, value, index++, thisArg)) {
         acc.push(value);
+      }
       return acc;
     }, new DoublyLinked());
   }
@@ -232,10 +240,12 @@
    * @public
    */
   find(callback, thisArg) {
-    if (typeof callback !== 'function')
+    if (typeof callback !== 'function') {
       throw new TypeError('You must provide a function as first argument');
-    if (!this._length)
+    }
+    if (!this._length) {
       return;
+    }
     thisArg = thisArg !== undefined ? thisArg : this;
     let tmp = this.head;
     for (let i = 0; i < this.length; i++) {
@@ -287,18 +297,18 @@
    * @public
    */
   includes(searchElement, fromIndex) {
-
-    const sameValueZero = (x, y) => {
-      return x === y ||
-          (typeof x === 'number' && typeof y === 'number' &&
-              isNaN(x) && isNaN(y));
-    };
+    const sameValueZero = (x, y) =>
+      x === y ||
+      (typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y));
 
     fromIndex = fromIndex || 0;
-    if (fromIndex < 0)
+    if (fromIndex < 0) {
       fromIndex = this.length + fromIndex;
-    this.find((element, index) =>
-        (index >= fromIndex && sameValueZero(element, searchElement)));
+    }
+    this.find(
+      (element, index) =>
+        index >= fromIndex && sameValueZero(element, searchElement),
+    );
     return !!this.cursor;
   }
 
@@ -338,7 +348,7 @@
   join(separator) {
     separator = separator || ',';
     let out = '';
-    this.forEach((value) => {
+    this.forEach(value => {
       out += (out ? separator : '') + value;
     });
     return out;
@@ -353,10 +363,13 @@
    * @public
    */
   map(callback) {
-    if (typeof callback !== 'function')
+    if (typeof callback !== 'function') {
       throw new TypeError('You must provide a function as first argument');
+    }
     const out = new DoublyLinked();
-    this.forEach((value, index, instance) => out.push(callback(value, index, instance)));
+    this.forEach((value, index, instance) =>
+      out.push(callback(value, index, instance)),
+    );
     return out.reset();
   }
 
@@ -417,8 +430,9 @@
    * @public
    */
   push(...element) {
-    if (element.length)
+    if (element.length) {
       this._eof = false;
+    }
     for (const arg of element) {
       const node = new Node(this, arg);
       if (this._length) {
@@ -444,8 +458,9 @@
    * @public
    */
   reduce(callback, initialValue) {
-    if (typeof callback !== 'function')
+    if (typeof callback !== 'function') {
       throw new TypeError('You must provide a function as first argument');
+    }
     let accumulator = initialValue;
     this.forEach((value, index) => {
       accumulator = callback(accumulator, value, index, this);
@@ -463,8 +478,9 @@
    * @public
    */
   reduceRight(callback, initialValue) {
-    if (typeof callback !== 'function')
+    if (typeof callback !== 'function') {
       throw new TypeError('You must provide a function as first argument');
+    }
     let accumulator = initialValue;
     this.forEachRight((value, index) => {
       accumulator = callback(accumulator, value, index, this);
@@ -508,7 +524,8 @@
    */
   reverse() {
     let cur = this._head;
-    let p, n;
+    let p;
+    let n;
     for (let i = 0; i < this._length; i++) {
       p = cur.prev;
       n = cur.next;
@@ -552,8 +569,9 @@
     start = start || 0;
     const acc = [];
     this.every((value, index) => {
-      if (index >= start)
+      if (index >= start) {
         acc.push(value);
+      }
       return !end || index < end;
     });
     return acc;
@@ -568,8 +586,11 @@
    * @public
    */
   some(callback, thisArg) {
-    return !this.every((element, index, instance) =>
-        !callback.call(this, element, index, instance), thisArg);
+    return !this.every(
+      (element, index, instance) =>
+        !callback.call(this, element, index, instance),
+      thisArg,
+    );
   }
 
   /**
@@ -581,8 +602,11 @@
    * @public
    */
   someRight(callback, thisArg) {
-    return !this.everyRight((element, index, instance) =>
-        !callback.call(this, element, index, instance), thisArg);
+    return !this.everyRight(
+      (element, index, instance) =>
+        !callback.call(this, element, index, instance),
+      thisArg,
+    );
   }
 
   /**
@@ -639,12 +663,11 @@
         _cursor = _cursor ? _cursor.next : this.head;
         return {
           value: _cursor && _cursor.value,
-          done: !_cursor
+          done: !_cursor,
         };
-      }
+      },
     };
   }
-
 }
 
 /**
@@ -660,20 +683,26 @@
   }
 
   remove() {
-    if (!this.list)
+    if (!this.list) {
       return;
-    if (this.prev)
-        // noinspection JSUnresolvedVariable
+    }
+    if (this.prev) {
+      // noinspection JSUnresolvedVariable
       this.prev.next = this.next;
-    if (this.next)
-        // noinspection JSUnresolvedVariable
+    }
+    if (this.next) {
+      // noinspection JSUnresolvedVariable
       this.next.prev = this.prev;
-    if (this === this.list._cursor)
+    }
+    if (this === this.list._cursor) {
       this.list._cursor = this.next || this.prev;
-    if (this === this.list._head)
+    }
+    if (this === this.list._head) {
       this.list._head = this.next;
-    if (this === this.list._tail)
+    }
+    if (this === this.list._tail) {
       this.list._tail = this.prev;
+    }
     this.list._length--;
     this.prev = undefined;
     this.next = undefined;
Index: node_modules/has-symbols/shams.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\r\nmodule.exports = function hasSymbols() {\r\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\r\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\r\n\r\n\tvar obj = {};\r\n\tvar sym = Symbol('test');\r\n\tvar symObj = Object(sym);\r\n\tif (typeof sym === 'string') { return false; }\r\n\r\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\r\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\r\n\r\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\r\n\t// if (sym instanceof Symbol) { return false; }\r\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\r\n\t// if (!(symObj instanceof Symbol)) { return false; }\r\n\r\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\r\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\r\n\r\n\tvar symVal = 42;\r\n\tobj[sym] = symVal;\r\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\r\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\r\n\r\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\r\n\r\n\tvar syms = Object.getOwnPropertySymbols(obj);\r\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\r\n\r\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\r\n\r\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\r\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\r\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/has-symbols/shams.js b/node_modules/has-symbols/shams.js
--- a/node_modules/has-symbols/shams.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/has-symbols/shams.js	(date 1753913035661)
@@ -1,10 +1,12 @@
 'use strict';
 
+/** @type {import('./shams')} */
 /* eslint complexity: [2, 18], max-statements: [2, 33] */
 module.exports = function hasSymbols() {
 	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
 	if (typeof Symbol.iterator === 'symbol') { return true; }
 
+	/** @type {{ [k in symbol]?: unknown }} */
 	var obj = {};
 	var sym = Symbol('test');
 	var symObj = Object(sym);
@@ -23,7 +25,7 @@
 
 	var symVal = 42;
 	obj[sym] = symVal;
-	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
+	for (var _ in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
 	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }
 
 	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }
@@ -34,7 +36,8 @@
 	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }
 
 	if (typeof Object.getOwnPropertyDescriptor === 'function') {
-		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
+		// eslint-disable-next-line no-extra-parens
+		var descriptor = /** @type {PropertyDescriptor} */ (Object.getOwnPropertyDescriptor(obj, sym));
 		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
 	}
 
Index: node_modules/has-symbols/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\r\nvar hasSymbolSham = require('./shams');\r\n\r\nmodule.exports = function hasNativeSymbols() {\r\n\tif (typeof origSymbol !== 'function') { return false; }\r\n\tif (typeof Symbol !== 'function') { return false; }\r\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\r\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\r\n\r\n\treturn hasSymbolSham();\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/has-symbols/index.js b/node_modules/has-symbols/index.js
--- a/node_modules/has-symbols/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/has-symbols/index.js	(date 1753913035656)
@@ -3,6 +3,7 @@
 var origSymbol = typeof Symbol !== 'undefined' && Symbol;
 var hasSymbolSham = require('./shams');
 
+/** @type {import('.')} */
 module.exports = function hasNativeSymbols() {
 	if (typeof origSymbol !== 'function') { return false; }
 	if (typeof Symbol !== 'function') { return false; }
Index: models/User.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// import postgres from 'postgres'\r\nconst { dbPool } = require('../db/connectDb')\r\n\r\nconst createUserTable = async () => {\r\n  const query = `CREATE TABLE users(\r\n  id SERIAL PRIMARY KEY,\r\n  name VARCHAR(30),\r\n  email VARCHAR(30) NOT  NULL,\r\n  password VARCHAR(30) NOT  NULL);\r\n`\r\n  try {\r\n    await dbPool.query(query)\r\n    console.log('User table created successfully.')\r\n  } catch (error) {\r\n    console.log(error.message)\r\n    console.error('Error creating user table:', error)\r\n  }\r\n}\r\n\r\nmodule.exports = createUserTable\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/models/User.js b/models/User.js
--- a/models/User.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/models/User.js	(date 1753948138300)
@@ -1,6 +1,17 @@
 // import postgres from 'postgres'
-const { dbPool } = require('../db/connectDb')
+const { dbPool, sqlPool} = require('../db/connectDb')
+
 
+
+
+
+const  getUserById  =async (id) => {
+  const  user = await  sqlPool.query(`SELECT * FROM users WHERE id='${id}' `)
+  if(!user.length) {
+    return {}
+  }
+
+}
 const createUserTable = async () => {
   const query = `CREATE TABLE users(
   id SERIAL PRIMARY KEY,
Index: node_modules/has-symbols/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n\t\"name\": \"has-symbols\",\r\n\t\"version\": \"1.0.3\",\r\n\t\"description\": \"Determine if the JS environment has Symbol support. Supports spec, or shams.\",\r\n\t\"main\": \"index.js\",\r\n\t\"scripts\": {\r\n\t\t\"prepublishOnly\": \"safe-publish-latest\",\r\n\t\t\"prepublish\": \"not-in-publish || npm run prepublishOnly\",\r\n\t\t\"pretest\": \"npm run --silent lint\",\r\n\t\t\"test\": \"npm run tests-only\",\r\n\t\t\"posttest\": \"aud --production\",\r\n\t\t\"tests-only\": \"npm run test:stock && npm run test:staging && npm run test:shams\",\r\n\t\t\"test:stock\": \"nyc node test\",\r\n\t\t\"test:staging\": \"nyc node --harmony --es-staging test\",\r\n\t\t\"test:shams\": \"npm run --silent test:shams:getownpropertysymbols && npm run --silent test:shams:corejs\",\r\n\t\t\"test:shams:corejs\": \"nyc node test/shams/core-js.js\",\r\n\t\t\"test:shams:getownpropertysymbols\": \"nyc node test/shams/get-own-property-symbols.js\",\r\n\t\t\"lint\": \"eslint --ext=js,mjs .\",\r\n\t\t\"version\": \"auto-changelog && git add CHANGELOG.md\",\r\n\t\t\"postversion\": \"auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \\\"v$(node -e \\\"console.log(require('./package.json').version)\\\")\\\"\"\r\n\t},\r\n\t\"repository\": {\r\n\t\t\"type\": \"git\",\r\n\t\t\"url\": \"git://github.com/inspect-js/has-symbols.git\"\r\n\t},\r\n\t\"keywords\": [\r\n\t\t\"Symbol\",\r\n\t\t\"symbols\",\r\n\t\t\"typeof\",\r\n\t\t\"sham\",\r\n\t\t\"polyfill\",\r\n\t\t\"native\",\r\n\t\t\"core-js\",\r\n\t\t\"ES6\"\r\n\t],\r\n\t\"author\": {\r\n\t\t\"name\": \"Jordan Harband\",\r\n\t\t\"email\": \"ljharb@gmail.com\",\r\n\t\t\"url\": \"http://ljharb.codes\"\r\n\t},\r\n\t\"contributors\": [\r\n\t\t{\r\n\t\t\t\"name\": \"Jordan Harband\",\r\n\t\t\t\"email\": \"ljharb@gmail.com\",\r\n\t\t\t\"url\": \"http://ljharb.codes\"\r\n\t\t}\r\n\t],\r\n\t\"funding\": {\r\n\t\t\"url\": \"https://github.com/sponsors/ljharb\"\r\n\t},\r\n\t\"license\": \"MIT\",\r\n\t\"bugs\": {\r\n\t\t\"url\": \"https://github.com/ljharb/has-symbols/issues\"\r\n\t},\r\n\t\"homepage\": \"https://github.com/ljharb/has-symbols#readme\",\r\n\t\"devDependencies\": {\r\n\t\t\"@ljharb/eslint-config\": \"^20.2.3\",\r\n\t\t\"aud\": \"^2.0.0\",\r\n\t\t\"auto-changelog\": \"^2.4.0\",\r\n\t\t\"core-js\": \"^2.6.12\",\r\n\t\t\"eslint\": \"=8.8.0\",\r\n\t\t\"get-own-property-symbols\": \"^0.9.5\",\r\n\t\t\"nyc\": \"^10.3.2\",\r\n\t\t\"safe-publish-latest\": \"^2.0.0\",\r\n\t\t\"tape\": \"^5.5.2\"\r\n\t},\r\n\t\"testling\": {\r\n\t\t\"files\": \"test/index.js\",\r\n\t\t\"browsers\": [\r\n\t\t\t\"iexplore/6.0..latest\",\r\n\t\t\t\"firefox/3.0..6.0\",\r\n\t\t\t\"firefox/15.0..latest\",\r\n\t\t\t\"firefox/nightly\",\r\n\t\t\t\"chrome/4.0..10.0\",\r\n\t\t\t\"chrome/20.0..latest\",\r\n\t\t\t\"chrome/canary\",\r\n\t\t\t\"opera/10.0..latest\",\r\n\t\t\t\"opera/next\",\r\n\t\t\t\"safari/4.0..latest\",\r\n\t\t\t\"ipad/6.0..latest\",\r\n\t\t\t\"iphone/6.0..latest\",\r\n\t\t\t\"android-browser/4.2\"\r\n\t\t]\r\n\t},\r\n\t\"engines\": {\r\n\t\t\"node\": \">= 0.4\"\r\n\t},\r\n\t\"auto-changelog\": {\r\n\t\t\"output\": \"CHANGELOG.md\",\r\n\t\t\"template\": \"keepachangelog\",\r\n\t\t\"unreleased\": false,\r\n\t\t\"commitLimit\": false,\r\n\t\t\"backfillLimit\": false,\r\n\t\t\"hideCredit\": true\r\n\t},\r\n\t\"greenkeeper\": {\r\n\t\t\"ignore\": [\r\n\t\t\t\"core-js\"\r\n\t\t]\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/has-symbols/package.json b/node_modules/has-symbols/package.json
--- a/node_modules/has-symbols/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/has-symbols/package.json	(date 1753913035665)
@@ -1,21 +1,23 @@
 {
 	"name": "has-symbols",
-	"version": "1.0.3",
+	"version": "1.1.0",
 	"description": "Determine if the JS environment has Symbol support. Supports spec, or shams.",
 	"main": "index.js",
 	"scripts": {
+		"prepack": "npmignore --auto --commentLines=autogenerated",
 		"prepublishOnly": "safe-publish-latest",
 		"prepublish": "not-in-publish || npm run prepublishOnly",
 		"pretest": "npm run --silent lint",
 		"test": "npm run tests-only",
-		"posttest": "aud --production",
-		"tests-only": "npm run test:stock && npm run test:staging && npm run test:shams",
+		"posttest": "npx npm@'>=10.2' audit --production",
+		"tests-only": "npm run test:stock && npm run test:shams",
 		"test:stock": "nyc node test",
 		"test:staging": "nyc node --harmony --es-staging test",
 		"test:shams": "npm run --silent test:shams:getownpropertysymbols && npm run --silent test:shams:corejs",
 		"test:shams:corejs": "nyc node test/shams/core-js.js",
 		"test:shams:getownpropertysymbols": "nyc node test/shams/get-own-property-symbols.js",
 		"lint": "eslint --ext=js,mjs .",
+		"postlint": "tsc -p . && attw -P",
 		"version": "auto-changelog && git add CHANGELOG.md",
 		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
 	},
@@ -54,15 +56,22 @@
 	},
 	"homepage": "https://github.com/ljharb/has-symbols#readme",
 	"devDependencies": {
-		"@ljharb/eslint-config": "^20.2.3",
-		"aud": "^2.0.0",
-		"auto-changelog": "^2.4.0",
+		"@arethetypeswrong/cli": "^0.17.0",
+		"@ljharb/eslint-config": "^21.1.1",
+		"@ljharb/tsconfig": "^0.2.0",
+		"@types/core-js": "^2.5.8",
+		"@types/tape": "^5.6.5",
+		"auto-changelog": "^2.5.0",
 		"core-js": "^2.6.12",
+		"encoding": "^0.1.13",
 		"eslint": "=8.8.0",
 		"get-own-property-symbols": "^0.9.5",
+		"in-publish": "^2.0.1",
+		"npmignore": "^0.3.1",
 		"nyc": "^10.3.2",
 		"safe-publish-latest": "^2.0.0",
-		"tape": "^5.5.2"
+		"tape": "^5.9.0",
+		"typescript": "next"
 	},
 	"testling": {
 		"files": "test/index.js",
@@ -93,9 +102,10 @@
 		"backfillLimit": false,
 		"hideCredit": true
 	},
-	"greenkeeper": {
+	"publishConfig": {
 		"ignore": [
-			"core-js"
+			".github/workflows",
+			"types"
 		]
 	}
 }
Index: node_modules/has-symbols/CHANGELOG.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [v1.0.3](https://github.com/inspect-js/has-symbols/compare/v1.0.2...v1.0.3) - 2022-03-01\r\n\r\n### Commits\r\n\r\n- [actions] use `node/install` instead of `node/run`; use `codecov` action [`518b28f`](https://github.com/inspect-js/has-symbols/commit/518b28f6c5a516cbccae30794e40aa9f738b1693)\r\n- [meta] add `bugs` and `homepage` fields; reorder package.json [`c480b13`](https://github.com/inspect-js/has-symbols/commit/c480b13fd6802b557e1cef9749872cb5fdeef744)\r\n- [actions] reuse common workflows [`01d0ee0`](https://github.com/inspect-js/has-symbols/commit/01d0ee0a8d97c0947f5edb73eb722027a77b2b07)\r\n- [actions] update codecov uploader [`6424ebe`](https://github.com/inspect-js/has-symbols/commit/6424ebe86b2c9c7c3d2e9bd4413a4e4f168cb275)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `tape` [`dfa7e7f`](https://github.com/inspect-js/has-symbols/commit/dfa7e7ff38b594645d8c8222aab895157fa7e282)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `safe-publish-latest`, `tape` [`0c8d436`](https://github.com/inspect-js/has-symbols/commit/0c8d43685c45189cea9018191d4fd7eca91c9d02)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `tape` [`9026554`](https://github.com/inspect-js/has-symbols/commit/902655442a1bf88e72b42345494ef0c60f5d36ab)\r\n- [readme] add actions and codecov badges [`eaa9682`](https://github.com/inspect-js/has-symbols/commit/eaa9682f990f481d3acf7a1c7600bec36f7b3adc)\r\n- [Dev Deps] update `eslint`, `tape` [`bc7a3ba`](https://github.com/inspect-js/has-symbols/commit/bc7a3ba46f27b7743f8a2579732d59d1b9ac791e)\r\n- [Dev Deps] update `eslint`, `auto-changelog` [`0ace00a`](https://github.com/inspect-js/has-symbols/commit/0ace00af08a88cdd1e6ce0d60357d941c60c2d9f)\r\n- [meta] use `prepublishOnly` script for npm 7+ [`093f72b`](https://github.com/inspect-js/has-symbols/commit/093f72bc2b0ed00c781f444922a5034257bf561d)\r\n- [Tests] test on all 16 minors [`9b80d3d`](https://github.com/inspect-js/has-symbols/commit/9b80d3d9102529f04c20ec5b1fcc6e38426c6b03)\r\n\r\n## [v1.0.2](https://github.com/inspect-js/has-symbols/compare/v1.0.1...v1.0.2) - 2021-02-27\r\n\r\n### Fixed\r\n\r\n- [Fix] use a universal way to get the original Symbol [`#11`](https://github.com/inspect-js/has-symbols/issues/11)\r\n\r\n### Commits\r\n\r\n- [Tests] migrate tests to Github Actions [`90ae798`](https://github.com/inspect-js/has-symbols/commit/90ae79820bdfe7bc703d67f5f3c5e205f98556d3)\r\n- [meta] do not publish github action workflow files [`29e60a1`](https://github.com/inspect-js/has-symbols/commit/29e60a1b7c25c7f1acf7acff4a9320d0d10c49b4)\r\n- [Tests] run `nyc` on all tests [`8476b91`](https://github.com/inspect-js/has-symbols/commit/8476b915650d360915abe2522505abf4b0e8f0ae)\r\n- [readme] fix repo URLs, remove defunct badges [`126288e`](https://github.com/inspect-js/has-symbols/commit/126288ecc1797c0a40247a6b78bcb2e0bc5d7036)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `core-js`, `get-own-property-symbols` [`d84bdfa`](https://github.com/inspect-js/has-symbols/commit/d84bdfa48ac5188abbb4904b42614cd6c030940a)\r\n- [Tests] fix linting errors [`0df3070`](https://github.com/inspect-js/has-symbols/commit/0df3070b981b6c9f2ee530c09189a7f5c6def839)\r\n- [actions] add \"Allow Edits\" workflow [`1e6bc29`](https://github.com/inspect-js/has-symbols/commit/1e6bc29b188f32b9648657b07eda08504be5aa9c)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `tape` [`36cea2a`](https://github.com/inspect-js/has-symbols/commit/36cea2addd4e6ec435f35a2656b4e9ef82498e9b)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `tape` [`1278338`](https://github.com/inspect-js/has-symbols/commit/127833801865fbc2cc8979beb9ca869c7bfe8222)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `tape` [`1493254`](https://github.com/inspect-js/has-symbols/commit/1493254eda13db5fb8fc5e4a3e8324b3d196029d)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `core-js` [`b090bf2`](https://github.com/inspect-js/has-symbols/commit/b090bf214d3679a30edc1e2d729d466ab5183e1d)\r\n- [actions] switch Automatic Rebase workflow to `pull_request_target` event [`4addb7a`](https://github.com/inspect-js/has-symbols/commit/4addb7ab4dc73f927ae99928d68817554fc21dc0)\r\n- [Dev Deps] update `auto-changelog`, `tape` [`81d0baf`](https://github.com/inspect-js/has-symbols/commit/81d0baf3816096a89a8558e8043895f7a7d10d8b)\r\n- [Dev Deps] update `auto-changelog`; add `aud` [`1a4e561`](https://github.com/inspect-js/has-symbols/commit/1a4e5612c25d91c3a03d509721d02630bc4fe3da)\r\n- [readme] remove unused testling URLs [`3000941`](https://github.com/inspect-js/has-symbols/commit/3000941f958046e923ed8152edb1ef4a599e6fcc)\r\n- [Tests] only audit prod deps [`692e974`](https://github.com/inspect-js/has-symbols/commit/692e9743c912410e9440207631a643a34b4741a1)\r\n- [Dev Deps] update `@ljharb/eslint-config` [`51c946c`](https://github.com/inspect-js/has-symbols/commit/51c946c7f6baa793ec5390bb5a45cdce16b4ba76)\r\n\r\n## [v1.0.1](https://github.com/inspect-js/has-symbols/compare/v1.0.0...v1.0.1) - 2019-11-16\r\n\r\n### Commits\r\n\r\n- [Tests] use shared travis-ci configs [`ce396c9`](https://github.com/inspect-js/has-symbols/commit/ce396c9419ff11c43d0da5d05cdbb79f7fb42229)\r\n- [Tests] up to `node` `v12.4`, `v11.15`, `v10.15`, `v9.11`, `v8.15`, `v7.10`, `v6.17`, `v4.9`; use `nvm install-latest-npm` [`0690732`](https://github.com/inspect-js/has-symbols/commit/0690732801f47ab429f39ba1962f522d5c462d6b)\r\n- [meta] add `auto-changelog` [`2163d0b`](https://github.com/inspect-js/has-symbols/commit/2163d0b7f36343076b8f947cd1667dd1750f26fc)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `core-js`, `safe-publish-latest`, `tape` [`8e0951f`](https://github.com/inspect-js/has-symbols/commit/8e0951f1a7a2e52068222b7bb73511761e6e4d9c)\r\n- [actions] add automatic rebasing / merge commit blocking [`b09cdb7`](https://github.com/inspect-js/has-symbols/commit/b09cdb7cd7ee39e7a769878f56e2d6066f5ccd1d)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `safe-publish-latest`, `core-js`, `get-own-property-symbols`, `tape` [`1dd42cd`](https://github.com/inspect-js/has-symbols/commit/1dd42cd86183ed0c50f99b1062345c458babca91)\r\n- [meta] create FUNDING.yml [`aa57a17`](https://github.com/inspect-js/has-symbols/commit/aa57a17b19708906d1927f821ea8e73394d84ca4)\r\n- Only apps should have lockfiles [`a2d8bea`](https://github.com/inspect-js/has-symbols/commit/a2d8bea23a97d15c09eaf60f5b107fcf9a4d57aa)\r\n- [Tests] use `npx aud` instead of `nsp` or `npm audit` with hoops [`9e96cb7`](https://github.com/inspect-js/has-symbols/commit/9e96cb783746cbed0c10ef78e599a8eaa7ebe193)\r\n- [meta] add `funding` field [`a0b32cf`](https://github.com/inspect-js/has-symbols/commit/a0b32cf68e803f963c1639b6d47b0a9d6440bab0)\r\n- [Dev Deps] update `safe-publish-latest` [`cb9f0a5`](https://github.com/inspect-js/has-symbols/commit/cb9f0a521a3a1790f1064d437edd33bb6c3d6af0)\r\n\r\n## v1.0.0 - 2016-09-19\r\n\r\n### Commits\r\n\r\n- Tests. [`ecb6eb9`](https://github.com/inspect-js/has-symbols/commit/ecb6eb934e4883137f3f93b965ba5e0a98df430d)\r\n- package.json [`88a337c`](https://github.com/inspect-js/has-symbols/commit/88a337cee0864a0da35f5d19e69ff0ef0150e46a)\r\n- Initial commit [`42e1e55`](https://github.com/inspect-js/has-symbols/commit/42e1e5502536a2b8ac529c9443984acd14836b1c)\r\n- Initial implementation. [`33f5cc6`](https://github.com/inspect-js/has-symbols/commit/33f5cc6cdff86e2194b081ee842bfdc63caf43fb)\r\n- read me [`01f1170`](https://github.com/inspect-js/has-symbols/commit/01f1170188ff7cb1558aa297f6ba5b516c6d7b0c)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/has-symbols/CHANGELOG.md b/node_modules/has-symbols/CHANGELOG.md
--- a/node_modules/has-symbols/CHANGELOG.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/has-symbols/CHANGELOG.md	(date 1753913035667)
@@ -5,6 +5,22 @@
 The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
 and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
 
+## [v1.1.0](https://github.com/inspect-js/has-symbols/compare/v1.0.3...v1.1.0) - 2024-12-02
+
+### Commits
+
+- [actions] update workflows [`548c0bf`](https://github.com/inspect-js/has-symbols/commit/548c0bf8c9b1235458df7a1c0490b0064647a282)
+- [actions] further shard; update action deps [`bec56bb`](https://github.com/inspect-js/has-symbols/commit/bec56bb0fb44b43a786686b944875a3175cf3ff3)
+- [meta] use `npmignore` to autogenerate an npmignore file [`ac81032`](https://github.com/inspect-js/has-symbols/commit/ac81032809157e0a079e5264e9ce9b6f1275777e)
+- [New] add types [`6469cbf`](https://github.com/inspect-js/has-symbols/commit/6469cbff1866cfe367b2b3d181d9296ec14b2a3d)
+- [actions] update rebase action to use reusable workflow [`9c9d4d0`](https://github.com/inspect-js/has-symbols/commit/9c9d4d0d8938e4b267acdf8e421f4e92d1716d72)
+- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `tape` [`adb5887`](https://github.com/inspect-js/has-symbols/commit/adb5887ca9444849b08beb5caaa9e1d42320cdfb)
+- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `tape` [`13ec198`](https://github.com/inspect-js/has-symbols/commit/13ec198ec80f1993a87710af1606a1970b22c7cb)
+- [Dev Deps] update `auto-changelog`, `core-js`, `tape` [`941be52`](https://github.com/inspect-js/has-symbols/commit/941be5248387cab1da72509b22acf3fdb223f057)
+- [Tests] replace `aud` with `npm audit` [`74f49e9`](https://github.com/inspect-js/has-symbols/commit/74f49e9a9d17a443020784234a1c53ce765b3559)
+- [Dev Deps] update `npmignore` [`9c0ac04`](https://github.com/inspect-js/has-symbols/commit/9c0ac0452a834f4c2a4b54044f2d6a89f17e9a70)
+- [Dev Deps] add missing peer dep [`52337a5`](https://github.com/inspect-js/has-symbols/commit/52337a5621cced61f846f2afdab7707a8132cc12)
+
 ## [v1.0.3](https://github.com/inspect-js/has-symbols/compare/v1.0.2...v1.0.3) - 2022-03-01
 
 ### Commits
Index: node_modules/has-symbols/test/tests.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\n// eslint-disable-next-line consistent-return\r\nmodule.exports = function runSymbolTests(t) {\r\n\tt.equal(typeof Symbol, 'function', 'global Symbol is a function');\r\n\r\n\tif (typeof Symbol !== 'function') { return false; }\r\n\r\n\tt.notEqual(Symbol(), Symbol(), 'two symbols are not equal');\r\n\r\n\t/*\r\n\tt.equal(\r\n\t\tSymbol.prototype.toString.call(Symbol('foo')),\r\n\t\tSymbol.prototype.toString.call(Symbol('foo')),\r\n\t\t'two symbols with the same description stringify the same'\r\n\t);\r\n\t*/\r\n\r\n\t/*\r\n\tvar foo = Symbol('foo');\r\n\r\n\tt.notEqual(\r\n\t\tString(foo),\r\n\t\tString(Symbol('bar')),\r\n\t\t'two symbols with different descriptions do not stringify the same'\r\n\t);\r\n\t*/\r\n\r\n\tt.equal(typeof Symbol.prototype.toString, 'function', 'Symbol#toString is a function');\r\n\t// t.equal(String(foo), Symbol.prototype.toString.call(foo), 'Symbol#toString equals String of the same symbol');\r\n\r\n\tt.equal(typeof Object.getOwnPropertySymbols, 'function', 'Object.getOwnPropertySymbols is a function');\r\n\r\n\tvar obj = {};\r\n\tvar sym = Symbol('test');\r\n\tvar symObj = Object(sym);\r\n\tt.notEqual(typeof sym, 'string', 'Symbol is not a string');\r\n\tt.equal(Object.prototype.toString.call(sym), '[object Symbol]', 'symbol primitive Object#toStrings properly');\r\n\tt.equal(Object.prototype.toString.call(symObj), '[object Symbol]', 'symbol primitive Object#toStrings properly');\r\n\r\n\tvar symVal = 42;\r\n\tobj[sym] = symVal;\r\n\t// eslint-disable-next-line no-restricted-syntax\r\n\tfor (sym in obj) { t.fail('symbol property key was found in for..in of object'); }\r\n\r\n\tt.deepEqual(Object.keys(obj), [], 'no enumerable own keys on symbol-valued object');\r\n\tt.deepEqual(Object.getOwnPropertyNames(obj), [], 'no own names on symbol-valued object');\r\n\tt.deepEqual(Object.getOwnPropertySymbols(obj), [sym], 'one own symbol on symbol-valued object');\r\n\tt.equal(Object.prototype.propertyIsEnumerable.call(obj, sym), true, 'symbol is enumerable');\r\n\tt.deepEqual(Object.getOwnPropertyDescriptor(obj, sym), {\r\n\t\tconfigurable: true,\r\n\t\tenumerable: true,\r\n\t\tvalue: 42,\r\n\t\twritable: true\r\n\t}, 'property descriptor is correct');\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/has-symbols/test/tests.js b/node_modules/has-symbols/test/tests.js
--- a/node_modules/has-symbols/test/tests.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/has-symbols/test/tests.js	(date 1753913035663)
@@ -1,5 +1,6 @@
 'use strict';
 
+/** @type {(t: import('tape').Test) => false | void} */
 // eslint-disable-next-line consistent-return
 module.exports = function runSymbolTests(t) {
 	t.equal(typeof Symbol, 'function', 'global Symbol is a function');
@@ -31,6 +32,7 @@
 
 	t.equal(typeof Object.getOwnPropertySymbols, 'function', 'Object.getOwnPropertySymbols is a function');
 
+	/** @type {{ [k in symbol]?: unknown }} */
 	var obj = {};
 	var sym = Symbol('test');
 	var symObj = Object(sym);
@@ -40,8 +42,8 @@
 
 	var symVal = 42;
 	obj[sym] = symVal;
-	// eslint-disable-next-line no-restricted-syntax
-	for (sym in obj) { t.fail('symbol property key was found in for..in of object'); }
+	// eslint-disable-next-line no-restricted-syntax, no-unused-vars
+	for (var _ in obj) { t.fail('symbol property key was found in for..in of object'); }
 
 	t.deepEqual(Object.keys(obj), [], 'no enumerable own keys on symbol-valued object');
 	t.deepEqual(Object.getOwnPropertyNames(obj), [], 'no own names on symbol-valued object');
Index: node_modules/postgres/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"postgres\",\r\n  \"version\": \"3.4.4\",\r\n  \"description\": \"Fastest full featured PostgreSQL client for Node.js\",\r\n  \"type\": \"module\",\r\n  \"module\": \"src/index.js\",\r\n  \"main\": \"cjs/src/index.js\",\r\n  \"exports\": {\r\n    \"types\": \"./types/index.d.ts\",\r\n    \"bun\": \"./src/index.js\",\r\n    \"worker\": \"./cf/src/index.js\",\r\n    \"import\": \"./src/index.js\",\r\n    \"default\": \"./cjs/src/index.js\"\r\n  },\r\n  \"types\": \"types/index.d.ts\",\r\n  \"typings\": \"types/index.d.ts\",\r\n  \"engines\": {\r\n    \"node\": \">=12\"\r\n  },\r\n  \"scripts\": {\r\n    \"build\": \"npm run build:cjs && npm run build:deno && npm run build:cf\",\r\n    \"build:cjs\": \"node transpile.cjs\",\r\n    \"build:deno\": \"node transpile.deno.js\",\r\n    \"build:cf\": \"node transpile.cf.js\",\r\n    \"test\": \"npm run test:esm && npm run test:cjs && npm run test:deno\",\r\n    \"test:esm\": \"node tests/index.js\",\r\n    \"test:cjs\": \"npm run build:cjs && cd cjs/tests && node index.js && cd ../../\",\r\n    \"test:deno\": \"npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../\",\r\n    \"lint\": \"eslint src && eslint tests\",\r\n    \"prepare\": \"npm run build\",\r\n    \"prepublishOnly\": \"npm run lint\"\r\n  },\r\n  \"files\": [\r\n    \"/cf/src\",\r\n    \"/cf/polyfills.js\",\r\n    \"/cjs/src\",\r\n    \"/cjs/package.json\",\r\n    \"/src\",\r\n    \"/types\"\r\n  ],\r\n  \"author\": \"Rasmus Porsager <rasmus@porsager.com> (https://www.porsager.com)\",\r\n  \"funding\": {\r\n    \"type\": \"individual\",\r\n    \"url\": \"https://github.com/sponsors/porsager\"\r\n  },\r\n  \"license\": \"Unlicense\",\r\n  \"repository\": \"porsager/postgres\",\r\n  \"homepage\": \"https://github.com/porsager/postgres\",\r\n  \"bugs\": \"https://github.com/porsager/postgres/issues\",\r\n  \"keywords\": [\r\n    \"driver\",\r\n    \"postgresql\",\r\n    \"postgres.js\",\r\n    \"postgres\",\r\n    \"postrges\",\r\n    \"postgre\",\r\n    \"client\",\r\n    \"sql\",\r\n    \"db\",\r\n    \"pg\",\r\n    \"database\"\r\n  ]\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/postgres/package.json b/node_modules/postgres/package.json
--- a/node_modules/postgres/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/postgres/package.json	(date 1753913035233)
@@ -1,6 +1,6 @@
 {
   "name": "postgres",
-  "version": "3.4.4",
+  "version": "3.4.7",
   "description": "Fastest full featured PostgreSQL client for Node.js",
   "type": "module",
   "module": "src/index.js",
@@ -8,7 +8,7 @@
   "exports": {
     "types": "./types/index.d.ts",
     "bun": "./src/index.js",
-    "worker": "./cf/src/index.js",
+    "workerd": "./cf/src/index.js",
     "import": "./src/index.js",
     "default": "./cjs/src/index.js"
   },
@@ -25,7 +25,7 @@
     "test": "npm run test:esm && npm run test:cjs && npm run test:deno",
     "test:esm": "node tests/index.js",
     "test:cjs": "npm run build:cjs && cd cjs/tests && node index.js && cd ../../",
-    "test:deno": "npm run build:deno && cd deno/tests && deno run --unstable --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../",
+    "test:deno": "npm run build:deno && cd deno/tests && deno run --no-lock --allow-all --unsafely-ignore-certificate-errors index.js && cd ../../",
     "lint": "eslint src && eslint tests",
     "prepare": "npm run build",
     "prepublishOnly": "npm run lint"
Index: node_modules/has-symbols/test/shams/core-js.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar test = require('tape');\r\n\r\nif (typeof Symbol === 'function' && typeof Symbol() === 'symbol') {\r\n\ttest('has native Symbol support', function (t) {\r\n\t\tt.equal(typeof Symbol, 'function');\r\n\t\tt.equal(typeof Symbol(), 'symbol');\r\n\t\tt.end();\r\n\t});\r\n\treturn;\r\n}\r\n\r\nvar hasSymbols = require('../../shams');\r\n\r\ntest('polyfilled Symbols', function (t) {\r\n\t/* eslint-disable global-require */\r\n\tt.equal(hasSymbols(), false, 'hasSymbols is false before polyfilling');\r\n\trequire('core-js/fn/symbol');\r\n\trequire('core-js/fn/symbol/to-string-tag');\r\n\r\n\trequire('../tests')(t);\r\n\r\n\tvar hasSymbolsAfter = hasSymbols();\r\n\tt.equal(hasSymbolsAfter, true, 'hasSymbols is true after polyfilling');\r\n\t/* eslint-enable global-require */\r\n\tt.end();\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/has-symbols/test/shams/core-js.js b/node_modules/has-symbols/test/shams/core-js.js
--- a/node_modules/has-symbols/test/shams/core-js.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/has-symbols/test/shams/core-js.js	(date 1753913035650)
@@ -8,6 +8,7 @@
 		t.equal(typeof Symbol(), 'symbol');
 		t.end();
 	});
+	// @ts-expect-error TS is stupid and doesn't know about top level return
 	return;
 }
 
Index: node_modules/has-symbols/test/shams/get-own-property-symbols.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar test = require('tape');\r\n\r\nif (typeof Symbol === 'function' && typeof Symbol() === 'symbol') {\r\n\ttest('has native Symbol support', function (t) {\r\n\t\tt.equal(typeof Symbol, 'function');\r\n\t\tt.equal(typeof Symbol(), 'symbol');\r\n\t\tt.end();\r\n\t});\r\n\treturn;\r\n}\r\n\r\nvar hasSymbols = require('../../shams');\r\n\r\ntest('polyfilled Symbols', function (t) {\r\n\t/* eslint-disable global-require */\r\n\tt.equal(hasSymbols(), false, 'hasSymbols is false before polyfilling');\r\n\r\n\trequire('get-own-property-symbols');\r\n\r\n\trequire('../tests')(t);\r\n\r\n\tvar hasSymbolsAfter = hasSymbols();\r\n\tt.equal(hasSymbolsAfter, true, 'hasSymbols is true after polyfilling');\r\n\t/* eslint-enable global-require */\r\n\tt.end();\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/has-symbols/test/shams/get-own-property-symbols.js b/node_modules/has-symbols/test/shams/get-own-property-symbols.js
--- a/node_modules/has-symbols/test/shams/get-own-property-symbols.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/has-symbols/test/shams/get-own-property-symbols.js	(date 1753913035654)
@@ -8,6 +8,7 @@
 		t.equal(typeof Symbol(), 'symbol');
 		t.end();
 	});
+	// @ts-expect-error TS is stupid and doesn't know about top level return
 	return;
 }
 
Index: node_modules/postgres/cf/src/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { process } from '../polyfills.js'\r\nimport { os } from '../polyfills.js'\r\nimport { fs } from '../polyfills.js'\r\n\r\nimport {\r\n  mergeUserTypes,\r\n  inferType,\r\n  Parameter,\r\n  Identifier,\r\n  Builder,\r\n  toPascal,\r\n  pascal,\r\n  toCamel,\r\n  camel,\r\n  toKebab,\r\n  kebab,\r\n  fromPascal,\r\n  fromCamel,\r\n  fromKebab\r\n} from './types.js'\r\n\r\nimport Connection from './connection.js'\r\nimport { Query, CLOSE } from './query.js'\r\nimport Queue from './queue.js'\r\nimport { Errors, PostgresError } from './errors.js'\r\nimport Subscribe from './subscribe.js'\r\nimport largeObject from './large.js'\r\n\r\nObject.assign(Postgres, {\r\n  PostgresError,\r\n  toPascal,\r\n  pascal,\r\n  toCamel,\r\n  camel,\r\n  toKebab,\r\n  kebab,\r\n  fromPascal,\r\n  fromCamel,\r\n  fromKebab,\r\n  BigInt: {\r\n    to: 20,\r\n    from: [20],\r\n    parse: x => BigInt(x), // eslint-disable-line\r\n    serialize: x => x.toString()\r\n  }\r\n})\r\n\r\nexport default Postgres\r\n\r\nfunction Postgres(a, b) {\r\n  const options = parseOptions(a, b)\r\n      , subscribe = options.no_subscribe || Subscribe(Postgres, { ...options })\r\n\r\n  let ending = false\r\n\r\n  const queries = Queue()\r\n      , connecting = Queue()\r\n      , reserved = Queue()\r\n      , closed = Queue()\r\n      , ended = Queue()\r\n      , open = Queue()\r\n      , busy = Queue()\r\n      , full = Queue()\r\n      , queues = { connecting, reserved, closed, ended, open, busy, full }\r\n\r\n  const connections = [...Array(options.max)].map(() => Connection(options, queues, { onopen, onend, onclose }))\r\n\r\n  const sql = Sql(handler)\r\n\r\n  Object.assign(sql, {\r\n    get parameters() { return options.parameters },\r\n    largeObject: largeObject.bind(null, sql),\r\n    subscribe,\r\n    CLOSE,\r\n    END: CLOSE,\r\n    PostgresError,\r\n    options,\r\n    reserve,\r\n    listen,\r\n    begin,\r\n    close,\r\n    end\r\n  })\r\n\r\n  return sql\r\n\r\n  function Sql(handler) {\r\n    handler.debug = options.debug\r\n\r\n    Object.entries(options.types).reduce((acc, [name, type]) => {\r\n      acc[name] = (x) => new Parameter(x, type.to)\r\n      return acc\r\n    }, typed)\r\n\r\n    Object.assign(sql, {\r\n      types: typed,\r\n      typed,\r\n      unsafe,\r\n      notify,\r\n      array,\r\n      json,\r\n      file\r\n    })\r\n\r\n    return sql\r\n\r\n    function typed(value, type) {\r\n      return new Parameter(value, type)\r\n    }\r\n\r\n    function sql(strings, ...args) {\r\n      const query = strings && Array.isArray(strings.raw)\r\n        ? new Query(strings, args, handler, cancel)\r\n        : typeof strings === 'string' && !args.length\r\n          ? new Identifier(options.transform.column.to ? options.transform.column.to(strings) : strings)\r\n          : new Builder(strings, args)\r\n      return query\r\n    }\r\n\r\n    function unsafe(string, args = [], options = {}) {\r\n      arguments.length === 2 && !Array.isArray(args) && (options = args, args = [])\r\n      const query = new Query([string], args, handler, cancel, {\r\n        prepare: false,\r\n        ...options,\r\n        simple: 'simple' in options ? options.simple : args.length === 0\r\n      })\r\n      return query\r\n    }\r\n\r\n    function file(path, args = [], options = {}) {\r\n      arguments.length === 2 && !Array.isArray(args) && (options = args, args = [])\r\n      const query = new Query([], args, (query) => {\r\n        fs.readFile(path, 'utf8', (err, string) => {\r\n          if (err)\r\n            return query.reject(err)\r\n\r\n          query.strings = [string]\r\n          handler(query)\r\n        })\r\n      }, cancel, {\r\n        ...options,\r\n        simple: 'simple' in options ? options.simple : args.length === 0\r\n      })\r\n      return query\r\n    }\r\n  }\r\n\r\n  async function listen(name, fn, onlisten) {\r\n    const listener = { fn, onlisten }\r\n\r\n    const sql = listen.sql || (listen.sql = Postgres({\r\n      ...options,\r\n      max: 1,\r\n      idle_timeout: null,\r\n      max_lifetime: null,\r\n      fetch_types: false,\r\n      onclose() {\r\n        Object.entries(listen.channels).forEach(([name, { listeners }]) => {\r\n          delete listen.channels[name]\r\n          Promise.all(listeners.map(l => listen(name, l.fn, l.onlisten).catch(() => { /* noop */ })))\r\n        })\r\n      },\r\n      onnotify(c, x) {\r\n        c in listen.channels && listen.channels[c].listeners.forEach(l => l.fn(x))\r\n      }\r\n    }))\r\n\r\n    const channels = listen.channels || (listen.channels = {})\r\n        , exists = name in channels\r\n\r\n    if (exists) {\r\n      channels[name].listeners.push(listener)\r\n      const result = await channels[name].result\r\n      listener.onlisten && listener.onlisten()\r\n      return { state: result.state, unlisten }\r\n    }\r\n\r\n    channels[name] = { result: sql`listen ${\r\n      sql.unsafe('\"' + name.replace(/\"/g, '\"\"') + '\"')\r\n    }`, listeners: [listener] }\r\n    const result = await channels[name].result\r\n    listener.onlisten && listener.onlisten()\r\n    return { state: result.state, unlisten }\r\n\r\n    async function unlisten() {\r\n      if (name in channels === false)\r\n        return\r\n\r\n      channels[name].listeners = channels[name].listeners.filter(x => x !== listener)\r\n      if (channels[name].listeners.length)\r\n        return\r\n\r\n      delete channels[name]\r\n      return sql`unlisten ${\r\n        sql.unsafe('\"' + name.replace(/\"/g, '\"\"') + '\"')\r\n      }`\r\n    }\r\n  }\r\n\r\n  async function notify(channel, payload) {\r\n    return await sql`select pg_notify(${ channel }, ${ '' + payload })`\r\n  }\r\n\r\n  async function reserve() {\r\n    const queue = Queue()\r\n    const c = open.length\r\n      ? open.shift()\r\n      : await new Promise(r => {\r\n        queries.push({ reserve: r })\r\n        closed.length && connect(closed.shift())\r\n      })\r\n\r\n    move(c, reserved)\r\n    c.reserved = () => queue.length\r\n      ? c.execute(queue.shift())\r\n      : move(c, reserved)\r\n    c.reserved.release = true\r\n\r\n    const sql = Sql(handler)\r\n    sql.release = () => {\r\n      c.reserved = null\r\n      onopen(c)\r\n    }\r\n\r\n    return sql\r\n\r\n    function handler(q) {\r\n      c.queue === full\r\n        ? queue.push(q)\r\n        : c.execute(q) || move(c, full)\r\n    }\r\n  }\r\n\r\n  async function begin(options, fn) {\r\n    !fn && (fn = options, options = '')\r\n    const queries = Queue()\r\n    let savepoints = 0\r\n      , connection\r\n      , prepare = null\r\n\r\n    try {\r\n      await sql.unsafe('begin ' + options.replace(/[^a-z ]/ig, ''), [], { onexecute }).execute()\r\n      return await Promise.race([\r\n        scope(connection, fn),\r\n        new Promise((_, reject) => connection.onclose = reject)\r\n      ])\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n\r\n    async function scope(c, fn, name) {\r\n      const sql = Sql(handler)\r\n      sql.savepoint = savepoint\r\n      sql.prepare = x => prepare = x.replace(/[^a-z0-9$-_. ]/gi)\r\n      let uncaughtError\r\n        , result\r\n\r\n      name && await sql`savepoint ${ sql(name) }`\r\n      try {\r\n        result = await new Promise((resolve, reject) => {\r\n          const x = fn(sql)\r\n          Promise.resolve(Array.isArray(x) ? Promise.all(x) : x).then(resolve, reject)\r\n        })\r\n\r\n        if (uncaughtError)\r\n          throw uncaughtError\r\n      } catch (e) {\r\n        await (name\r\n          ? sql`rollback to ${ sql(name) }`\r\n          : sql`rollback`\r\n        )\r\n        throw e instanceof PostgresError && e.code === '25P02' && uncaughtError || e\r\n      }\r\n\r\n      if (!name) {\r\n        prepare\r\n          ? await sql`prepare transaction '${ sql.unsafe(prepare) }'`\r\n          : await sql`commit`\r\n      }\r\n\r\n      return result\r\n\r\n      function savepoint(name, fn) {\r\n        if (name && Array.isArray(name.raw))\r\n          return savepoint(sql => sql.apply(sql, arguments))\r\n\r\n        arguments.length === 1 && (fn = name, name = null)\r\n        return scope(c, fn, 's' + savepoints++ + (name ? '_' + name : ''))\r\n      }\r\n\r\n      function handler(q) {\r\n        q.catch(e => uncaughtError || (uncaughtError = e))\r\n        c.queue === full\r\n          ? queries.push(q)\r\n          : c.execute(q) || move(c, full)\r\n      }\r\n    }\r\n\r\n    function onexecute(c) {\r\n      connection = c\r\n      move(c, reserved)\r\n      c.reserved = () => queries.length\r\n        ? c.execute(queries.shift())\r\n        : move(c, reserved)\r\n    }\r\n  }\r\n\r\n  function move(c, queue) {\r\n    c.queue.remove(c)\r\n    queue.push(c)\r\n    c.queue = queue\r\n    queue === open\r\n      ? c.idleTimer.start()\r\n      : c.idleTimer.cancel()\r\n    return c\r\n  }\r\n\r\n  function json(x) {\r\n    return new Parameter(x, 3802)\r\n  }\r\n\r\n  function array(x, type) {\r\n    if (!Array.isArray(x))\r\n      return array(Array.from(arguments))\r\n\r\n    return new Parameter(x, type || (x.length ? inferType(x) || 25 : 0), options.shared.typeArrayMap)\r\n  }\r\n\r\n  function handler(query) {\r\n    if (ending)\r\n      return query.reject(Errors.connection('CONNECTION_ENDED', options, options))\r\n\r\n    if (open.length)\r\n      return go(open.shift(), query)\r\n\r\n    if (closed.length)\r\n      return connect(closed.shift(), query)\r\n\r\n    busy.length\r\n      ? go(busy.shift(), query)\r\n      : queries.push(query)\r\n  }\r\n\r\n  function go(c, query) {\r\n    return c.execute(query)\r\n      ? move(c, busy)\r\n      : move(c, full)\r\n  }\r\n\r\n  function cancel(query) {\r\n    return new Promise((resolve, reject) => {\r\n      query.state\r\n        ? query.active\r\n          ? Connection(options).cancel(query.state, resolve, reject)\r\n          : query.cancelled = { resolve, reject }\r\n        : (\r\n          queries.remove(query),\r\n          query.cancelled = true,\r\n          query.reject(Errors.generic('57014', 'canceling statement due to user request')),\r\n          resolve()\r\n        )\r\n    })\r\n  }\r\n\r\n  async function end({ timeout = null } = {}) {\r\n    if (ending)\r\n      return ending\r\n\r\n    await 1\r\n    let timer\r\n    return ending = Promise.race([\r\n      new Promise(r => timeout !== null && (timer = setTimeout(destroy, timeout * 1000, r))),\r\n      Promise.all(connections.map(c => c.end()).concat(\r\n        listen.sql ? listen.sql.end({ timeout: 0 }) : [],\r\n        subscribe.sql ? subscribe.sql.end({ timeout: 0 }) : []\r\n      ))\r\n    ]).then(() => clearTimeout(timer))\r\n  }\r\n\r\n  async function close() {\r\n    await Promise.all(connections.map(c => c.end()))\r\n  }\r\n\r\n  async function destroy(resolve) {\r\n    await Promise.all(connections.map(c => c.terminate()))\r\n    while (queries.length)\r\n      queries.shift().reject(Errors.connection('CONNECTION_DESTROYED', options))\r\n    resolve()\r\n  }\r\n\r\n  function connect(c, query) {\r\n    move(c, connecting)\r\n    c.connect(query)\r\n    return c\r\n  }\r\n\r\n  function onend(c) {\r\n    move(c, ended)\r\n  }\r\n\r\n  function onopen(c) {\r\n    if (queries.length === 0)\r\n      return move(c, open)\r\n\r\n    let max = Math.ceil(queries.length / (connecting.length + 1))\r\n      , ready = true\r\n\r\n    while (ready && queries.length && max-- > 0) {\r\n      const query = queries.shift()\r\n      if (query.reserve)\r\n        return query.reserve(c)\r\n\r\n      ready = c.execute(query)\r\n    }\r\n\r\n    ready\r\n      ? move(c, busy)\r\n      : move(c, full)\r\n  }\r\n\r\n  function onclose(c, e) {\r\n    move(c, closed)\r\n    c.reserved = null\r\n    c.onclose && (c.onclose(e), c.onclose = null)\r\n    options.onclose && options.onclose(c.id)\r\n    queries.length && connect(c, queries.shift())\r\n  }\r\n}\r\n\r\nfunction parseOptions(a, b) {\r\n  if (a && a.shared)\r\n    return a\r\n\r\n  const env = process.env // eslint-disable-line\r\n      , o = (!a || typeof a === 'string' ? b : a) || {}\r\n      , { url, multihost } = parseUrl(a)\r\n      , query = [...url.searchParams].reduce((a, [b, c]) => (a[b] = c, a), {})\r\n      , host = o.hostname || o.host || multihost || url.hostname || env.PGHOST || 'localhost'\r\n      , port = o.port || url.port || env.PGPORT || 5432\r\n      , user = o.user || o.username || url.username || env.PGUSERNAME || env.PGUSER || osUsername()\r\n\r\n  o.no_prepare && (o.prepare = false)\r\n  query.sslmode && (query.ssl = query.sslmode, delete query.sslmode)\r\n  'timeout' in o && (console.log('The timeout option is deprecated, use idle_timeout instead'), o.idle_timeout = o.timeout) // eslint-disable-line\r\n  query.sslrootcert === 'system' && (query.ssl = 'verify-full')\r\n\r\n  const ints = ['idle_timeout', 'connect_timeout', 'max_lifetime', 'max_pipeline', 'backoff', 'keep_alive']\r\n  const defaults = {\r\n    max             : 10,\r\n    ssl             : false,\r\n    idle_timeout    : null,\r\n    connect_timeout : 30,\r\n    max_lifetime    : max_lifetime,\r\n    max_pipeline    : 100,\r\n    backoff         : backoff,\r\n    keep_alive      : 60,\r\n    prepare         : true,\r\n    debug           : false,\r\n    fetch_types     : true,\r\n    publications    : 'alltables',\r\n    target_session_attrs: null\r\n  }\r\n\r\n  return {\r\n    host            : Array.isArray(host) ? host : host.split(',').map(x => x.split(':')[0]),\r\n    port            : Array.isArray(port) ? port : host.split(',').map(x => parseInt(x.split(':')[1] || port)),\r\n    path            : o.path || host.indexOf('/') > -1 && host + '/.s.PGSQL.' + port,\r\n    database        : o.database || o.db || (url.pathname || '').slice(1) || env.PGDATABASE || user,\r\n    user            : user,\r\n    pass            : o.pass || o.password || url.password || env.PGPASSWORD || '',\r\n    ...Object.entries(defaults).reduce(\r\n      (acc, [k, d]) => {\r\n        const value = k in o ? o[k] : k in query\r\n          ? (query[k] === 'disable' || query[k] === 'false' ? false : query[k])\r\n          : env['PG' + k.toUpperCase()] || d\r\n        acc[k] = typeof value === 'string' && ints.includes(k)\r\n          ? +value\r\n          : value\r\n        return acc\r\n      },\r\n      {}\r\n    ),\r\n    connection      : {\r\n      application_name: 'postgres.js',\r\n      ...o.connection,\r\n      ...Object.entries(query).reduce((acc, [k, v]) => (k in defaults || (acc[k] = v), acc), {})\r\n    },\r\n    types           : o.types || {},\r\n    target_session_attrs: tsa(o, url, env),\r\n    onnotice        : o.onnotice,\r\n    onnotify        : o.onnotify,\r\n    onclose         : o.onclose,\r\n    onparameter     : o.onparameter,\r\n    socket          : o.socket,\r\n    transform       : parseTransform(o.transform || { undefined: undefined }),\r\n    parameters      : {},\r\n    shared          : { retries: 0, typeArrayMap: {} },\r\n    ...mergeUserTypes(o.types)\r\n  }\r\n}\r\n\r\nfunction tsa(o, url, env) {\r\n  const x = o.target_session_attrs || url.searchParams.get('target_session_attrs') || env.PGTARGETSESSIONATTRS\r\n  if (!x || ['read-write', 'read-only', 'primary', 'standby', 'prefer-standby'].includes(x))\r\n    return x\r\n\r\n  throw new Error('target_session_attrs ' + x + ' is not supported')\r\n}\r\n\r\nfunction backoff(retries) {\r\n  return (0.5 + Math.random() / 2) * Math.min(3 ** retries / 100, 20)\r\n}\r\n\r\nfunction max_lifetime() {\r\n  return 60 * (30 + Math.random() * 30)\r\n}\r\n\r\nfunction parseTransform(x) {\r\n  return {\r\n    undefined: x.undefined,\r\n    column: {\r\n      from: typeof x.column === 'function' ? x.column : x.column && x.column.from,\r\n      to: x.column && x.column.to\r\n    },\r\n    value: {\r\n      from: typeof x.value === 'function' ? x.value : x.value && x.value.from,\r\n      to: x.value && x.value.to\r\n    },\r\n    row: {\r\n      from: typeof x.row === 'function' ? x.row : x.row && x.row.from,\r\n      to: x.row && x.row.to\r\n    }\r\n  }\r\n}\r\n\r\nfunction parseUrl(url) {\r\n  if (!url || typeof url !== 'string')\r\n    return { url: { searchParams: new Map() } }\r\n\r\n  let host = url\r\n  host = host.slice(host.indexOf('://') + 3).split(/[?/]/)[0]\r\n  host = decodeURIComponent(host.slice(host.indexOf('@') + 1))\r\n\r\n  const urlObj = new URL(url.replace(host, host.split(',')[0]))\r\n\r\n  return {\r\n    url: {\r\n      username: decodeURIComponent(urlObj.username),\r\n      password: decodeURIComponent(urlObj.password),\r\n      host: urlObj.host,\r\n      hostname: urlObj.hostname,\r\n      port: urlObj.port,\r\n      pathname: urlObj.pathname,\r\n      searchParams: urlObj.searchParams\r\n    },\r\n    multihost: host.indexOf(',') > -1 && host\r\n  }\r\n}\r\n\r\nfunction osUsername() {\r\n  try {\r\n    return os.userInfo().username // eslint-disable-line\r\n  } catch (_) {\r\n    return process.env.USERNAME || process.env.USER || process.env.LOGNAME  // eslint-disable-line\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/postgres/cf/src/index.js b/node_modules/postgres/cf/src/index.js
--- a/node_modules/postgres/cf/src/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/postgres/cf/src/index.js	(date 1753913035212)
@@ -205,9 +205,10 @@
     const queue = Queue()
     const c = open.length
       ? open.shift()
-      : await new Promise(r => {
-        queries.push({ reserve: r })
-        closed.length && connect(closed.shift())
+      : await new Promise((resolve, reject) => {
+        const query = { reserve: resolve, reject }
+        queries.push(query)
+        closed.length && connect(closed.shift(), query)
       })
 
     move(c, reserved)
@@ -481,7 +482,7 @@
       {}
     ),
     connection      : {
-      application_name: 'postgres.js',
+      application_name: env.PGAPPNAME || 'postgres.js',
       ...o.connection,
       ...Object.entries(query).reduce((acc, [k, v]) => (k in defaults || (acc[k] = v), acc), {})
     },
Index: node_modules/postgres/cf/src/connection.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Buffer } from 'node:buffer'\r\nimport { setImmediate, clearImmediate } from '../polyfills.js'\r\nimport { net } from '../polyfills.js'\r\nimport { tls } from '../polyfills.js'\r\nimport { crypto } from '../polyfills.js'\r\nimport Stream from 'node:stream'\r\nimport { performance } from '../polyfills.js'\r\n\r\nimport { stringify, handleValue, arrayParser, arraySerializer } from './types.js'\r\nimport { Errors } from './errors.js'\r\nimport Result from './result.js'\r\nimport Queue from './queue.js'\r\nimport { Query, CLOSE } from './query.js'\r\nimport b from './bytes.js'\r\n\r\nexport default Connection\r\n\r\nlet uid = 1\r\n\r\nconst Sync = b().S().end()\r\n    , Flush = b().H().end()\r\n    , SSLRequest = b().i32(8).i32(80877103).end(8)\r\n    , ExecuteUnnamed = Buffer.concat([b().E().str(b.N).i32(0).end(), Sync])\r\n    , DescribeUnnamed = b().D().str('S').str(b.N).end()\r\n    , noop = () => { /* noop */ }\r\n\r\nconst retryRoutines = new Set([\r\n  'FetchPreparedStatement',\r\n  'RevalidateCachedQuery',\r\n  'transformAssignedExpr'\r\n])\r\n\r\nconst errorFields = {\r\n  83  : 'severity_local',    // S\r\n  86  : 'severity',          // V\r\n  67  : 'code',              // C\r\n  77  : 'message',           // M\r\n  68  : 'detail',            // D\r\n  72  : 'hint',              // H\r\n  80  : 'position',          // P\r\n  112 : 'internal_position', // p\r\n  113 : 'internal_query',    // q\r\n  87  : 'where',             // W\r\n  115 : 'schema_name',       // s\r\n  116 : 'table_name',        // t\r\n  99  : 'column_name',       // c\r\n  100 : 'data type_name',    // d\r\n  110 : 'constraint_name',   // n\r\n  70  : 'file',              // F\r\n  76  : 'line',              // L\r\n  82  : 'routine'            // R\r\n}\r\n\r\nfunction Connection(options, queues = {}, { onopen = noop, onend = noop, onclose = noop } = {}) {\r\n  const {\r\n    ssl,\r\n    max,\r\n    user,\r\n    host,\r\n    port,\r\n    database,\r\n    parsers,\r\n    transform,\r\n    onnotice,\r\n    onnotify,\r\n    onparameter,\r\n    max_pipeline,\r\n    keep_alive,\r\n    backoff,\r\n    target_session_attrs\r\n  } = options\r\n\r\n  const sent = Queue()\r\n      , id = uid++\r\n      , backend = { pid: null, secret: null }\r\n      , idleTimer = timer(end, options.idle_timeout)\r\n      , lifeTimer = timer(end, options.max_lifetime)\r\n      , connectTimer = timer(connectTimedOut, options.connect_timeout)\r\n\r\n  let socket = null\r\n    , cancelMessage\r\n    , result = new Result()\r\n    , incoming = Buffer.alloc(0)\r\n    , needsTypes = options.fetch_types\r\n    , backendParameters = {}\r\n    , statements = {}\r\n    , statementId = Math.random().toString(36).slice(2)\r\n    , statementCount = 1\r\n    , closedDate = 0\r\n    , remaining = 0\r\n    , hostIndex = 0\r\n    , retries = 0\r\n    , length = 0\r\n    , delay = 0\r\n    , rows = 0\r\n    , serverSignature = null\r\n    , nextWriteTimer = null\r\n    , terminated = false\r\n    , incomings = null\r\n    , results = null\r\n    , initial = null\r\n    , ending = null\r\n    , stream = null\r\n    , chunk = null\r\n    , ended = null\r\n    , nonce = null\r\n    , query = null\r\n    , final = null\r\n\r\n  const connection = {\r\n    queue: queues.closed,\r\n    idleTimer,\r\n    connect(query) {\r\n      initial = query || true\r\n      reconnect()\r\n    },\r\n    terminate,\r\n    execute,\r\n    cancel,\r\n    end,\r\n    count: 0,\r\n    id\r\n  }\r\n\r\n  queues.closed && queues.closed.push(connection)\r\n\r\n  return connection\r\n\r\n  async function createSocket() {\r\n    let x\r\n    try {\r\n      x = options.socket\r\n        ? (await Promise.resolve(options.socket(options)))\r\n        : new net.Socket()\r\n    } catch (e) {\r\n      error(e)\r\n      return\r\n    }\r\n    x.on('error', error)\r\n    x.on('close', closed)\r\n    x.on('drain', drain)\r\n    return x\r\n  }\r\n\r\n  async function cancel({ pid, secret }, resolve, reject) {\r\n    try {\r\n      cancelMessage = b().i32(16).i32(80877102).i32(pid).i32(secret).end(16)\r\n      await connect()\r\n      socket.once('error', reject)\r\n      socket.once('close', resolve)\r\n    } catch (error) {\r\n      reject(error)\r\n    }\r\n  }\r\n\r\n  function execute(q) {\r\n    if (terminated)\r\n      return queryError(q, Errors.connection('CONNECTION_DESTROYED', options))\r\n\r\n    if (q.cancelled)\r\n      return\r\n\r\n    try {\r\n      q.state = backend\r\n      query\r\n        ? sent.push(q)\r\n        : (query = q, query.active = true)\r\n\r\n      build(q)\r\n      return write(toBuffer(q))\r\n        && !q.describeFirst\r\n        && !q.cursorFn\r\n        && sent.length < max_pipeline\r\n        && (!q.options.onexecute || q.options.onexecute(connection))\r\n    } catch (error) {\r\n      sent.length === 0 && write(Sync)\r\n      errored(error)\r\n      return true\r\n    }\r\n  }\r\n\r\n  function toBuffer(q) {\r\n    if (q.parameters.length >= 65534)\r\n      throw Errors.generic('MAX_PARAMETERS_EXCEEDED', 'Max number of parameters (65534) exceeded')\r\n\r\n    return q.options.simple\r\n      ? b().Q().str(q.statement.string + b.N).end()\r\n      : q.describeFirst\r\n        ? Buffer.concat([describe(q), Flush])\r\n        : q.prepare\r\n          ? q.prepared\r\n            ? prepared(q)\r\n            : Buffer.concat([describe(q), prepared(q)])\r\n          : unnamed(q)\r\n  }\r\n\r\n  function describe(q) {\r\n    return Buffer.concat([\r\n      Parse(q.statement.string, q.parameters, q.statement.types, q.statement.name),\r\n      Describe('S', q.statement.name)\r\n    ])\r\n  }\r\n\r\n  function prepared(q) {\r\n    return Buffer.concat([\r\n      Bind(q.parameters, q.statement.types, q.statement.name, q.cursorName),\r\n      q.cursorFn\r\n        ? Execute('', q.cursorRows)\r\n        : ExecuteUnnamed\r\n    ])\r\n  }\r\n\r\n  function unnamed(q) {\r\n    return Buffer.concat([\r\n      Parse(q.statement.string, q.parameters, q.statement.types),\r\n      DescribeUnnamed,\r\n      prepared(q)\r\n    ])\r\n  }\r\n\r\n  function build(q) {\r\n    const parameters = []\r\n        , types = []\r\n\r\n    const string = stringify(q, q.strings[0], q.args[0], parameters, types, options)\r\n\r\n    !q.tagged && q.args.forEach(x => handleValue(x, parameters, types, options))\r\n\r\n    q.prepare = options.prepare && ('prepare' in q.options ? q.options.prepare : true)\r\n    q.string = string\r\n    q.signature = q.prepare && types + string\r\n    q.onlyDescribe && (delete statements[q.signature])\r\n    q.parameters = q.parameters || parameters\r\n    q.prepared = q.prepare && q.signature in statements\r\n    q.describeFirst = q.onlyDescribe || (parameters.length && !q.prepared)\r\n    q.statement = q.prepared\r\n      ? statements[q.signature]\r\n      : { string, types, name: q.prepare ? statementId + statementCount++ : '' }\r\n\r\n    typeof options.debug === 'function' && options.debug(id, string, parameters, types)\r\n  }\r\n\r\n  function write(x, fn) {\r\n    chunk = chunk ? Buffer.concat([chunk, x]) : Buffer.from(x)\r\n    if (fn || chunk.length >= 1024)\r\n      return nextWrite(fn)\r\n    nextWriteTimer === null && (nextWriteTimer = setImmediate(nextWrite))\r\n    return true\r\n  }\r\n\r\n  function nextWrite(fn) {\r\n    const x = socket.write(chunk, fn)\r\n    nextWriteTimer !== null && clearImmediate(nextWriteTimer)\r\n    chunk = nextWriteTimer = null\r\n    return x\r\n  }\r\n\r\n  function connectTimedOut() {\r\n    errored(Errors.connection('CONNECT_TIMEOUT', options, socket))\r\n    socket.destroy()\r\n  }\r\n\r\n  async function secure() {\r\n    write(SSLRequest)\r\n    const canSSL = await new Promise(r => socket.once('data', x => r(x[0] === 83))) // S\r\n\r\n    if (!canSSL && ssl === 'prefer')\r\n      return connected()\r\n\r\n    socket.removeAllListeners()\r\n    socket = tls.connect({\r\n      socket,\r\n      servername: net.isIP(socket.host) ? undefined : socket.host,\r\n      ...(ssl === 'require' || ssl === 'allow' || ssl === 'prefer'\r\n        ? { rejectUnauthorized: false }\r\n        : ssl === 'verify-full'\r\n          ? {}\r\n          : typeof ssl === 'object'\r\n            ? ssl\r\n            : {}\r\n      )\r\n    })\r\n    socket.on('secureConnect', connected)\r\n    socket.on('error', error)\r\n    socket.on('close', closed)\r\n    socket.on('drain', drain)\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function drain() {\r\n    !query && onopen(connection)\r\n  }\r\n\r\n  function data(x) {\r\n    if (incomings) {\r\n      incomings.push(x)\r\n      remaining -= x.length\r\n      if (remaining >= 0)\r\n        return\r\n    }\r\n\r\n    incoming = incomings\r\n      ? Buffer.concat(incomings, length - remaining)\r\n      : incoming.length === 0\r\n        ? x\r\n        : Buffer.concat([incoming, x], incoming.length + x.length)\r\n\r\n    while (incoming.length > 4) {\r\n      length = incoming.readUInt32BE(1)\r\n      if (length >= incoming.length) {\r\n        remaining = length - incoming.length\r\n        incomings = [incoming]\r\n        break\r\n      }\r\n\r\n      try {\r\n        handle(incoming.subarray(0, length + 1))\r\n      } catch (e) {\r\n        query && (query.cursorFn || query.describeFirst) && write(Sync)\r\n        errored(e)\r\n      }\r\n      incoming = incoming.subarray(length + 1)\r\n      remaining = 0\r\n      incomings = null\r\n    }\r\n  }\r\n\r\n  async function connect() {\r\n    terminated = false\r\n    backendParameters = {}\r\n    socket || (socket = await createSocket())\r\n\r\n    if (!socket)\r\n      return\r\n\r\n    connectTimer.start()\r\n\r\n    if (options.socket)\r\n      return ssl ? secure() : connected()\r\n\r\n    socket.on('connect', ssl ? secure : connected)\r\n\r\n    if (options.path)\r\n      return socket.connect(options.path)\r\n\r\n    socket.ssl = ssl\r\n    socket.connect(port[hostIndex], host[hostIndex])\r\n    socket.host = host[hostIndex]\r\n    socket.port = port[hostIndex]\r\n\r\n    hostIndex = (hostIndex + 1) % port.length\r\n  }\r\n\r\n  function reconnect() {\r\n    setTimeout(connect, closedDate ? closedDate + delay - performance.now() : 0)\r\n  }\r\n\r\n  function connected() {\r\n    try {\r\n      statements = {}\r\n      needsTypes = options.fetch_types\r\n      statementId = Math.random().toString(36).slice(2)\r\n      statementCount = 1\r\n      lifeTimer.start()\r\n      socket.on('data', data)\r\n      keep_alive && socket.setKeepAlive && socket.setKeepAlive(true, 1000 * keep_alive)\r\n      const s = StartupMessage()\r\n      write(s)\r\n    } catch (err) {\r\n      error(err)\r\n    }\r\n  }\r\n\r\n  function error(err) {\r\n    if (connection.queue === queues.connecting && options.host[retries + 1])\r\n      return\r\n\r\n    errored(err)\r\n    while (sent.length)\r\n      queryError(sent.shift(), err)\r\n  }\r\n\r\n  function errored(err) {\r\n    stream && (stream.destroy(err), stream = null)\r\n    query && queryError(query, err)\r\n    initial && (queryError(initial, err), initial = null)\r\n  }\r\n\r\n  function queryError(query, err) {\r\n    Object.defineProperties(err, {\r\n      stack: { value: err.stack + query.origin.replace(/.*\\n/, '\\n'), enumerable: options.debug },\r\n      query: { value: query.string, enumerable: options.debug },\r\n      parameters: { value: query.parameters, enumerable: options.debug },\r\n      args: { value: query.args, enumerable: options.debug },\r\n      types: { value: query.statement && query.statement.types, enumerable: options.debug }\r\n    })\r\n    query.reject(err)\r\n  }\r\n\r\n  function end() {\r\n    return ending || (\r\n      !connection.reserved && onend(connection),\r\n      !connection.reserved && !initial && !query && sent.length === 0\r\n        ? (terminate(), new Promise(r => socket && socket.readyState !== 'closed' ? socket.once('close', r) : r()))\r\n        : ending = new Promise(r => ended = r)\r\n    )\r\n  }\r\n\r\n  function terminate() {\r\n    terminated = true\r\n    if (stream || query || initial || sent.length)\r\n      error(Errors.connection('CONNECTION_DESTROYED', options))\r\n\r\n    clearImmediate(nextWriteTimer)\r\n    if (socket) {\r\n      socket.removeListener('data', data)\r\n      socket.removeListener('connect', connected)\r\n      socket.readyState === 'open' && socket.end(b().X().end())\r\n    }\r\n    ended && (ended(), ending = ended = null)\r\n  }\r\n\r\n  async function closed(hadError) {\r\n    incoming = Buffer.alloc(0)\r\n    remaining = 0\r\n    incomings = null\r\n    clearImmediate(nextWriteTimer)\r\n    socket.removeListener('data', data)\r\n    socket.removeListener('connect', connected)\r\n    idleTimer.cancel()\r\n    lifeTimer.cancel()\r\n    connectTimer.cancel()\r\n\r\n    socket.removeAllListeners()\r\n    socket = null\r\n\r\n    if (initial)\r\n      return reconnect()\r\n\r\n    !hadError && (query || sent.length) && error(Errors.connection('CONNECTION_CLOSED', options, socket))\r\n    closedDate = performance.now()\r\n    hadError && options.shared.retries++\r\n    delay = (typeof backoff === 'function' ? backoff(options.shared.retries) : backoff) * 1000\r\n    onclose(connection, Errors.connection('CONNECTION_CLOSED', options, socket))\r\n  }\r\n\r\n  /* Handlers */\r\n  function handle(xs, x = xs[0]) {\r\n    (\r\n      x === 68 ? DataRow :                   // D\r\n      x === 100 ? CopyData :                 // d\r\n      x === 65 ? NotificationResponse :      // A\r\n      x === 83 ? ParameterStatus :           // S\r\n      x === 90 ? ReadyForQuery :             // Z\r\n      x === 67 ? CommandComplete :           // C\r\n      x === 50 ? BindComplete :              // 2\r\n      x === 49 ? ParseComplete :             // 1\r\n      x === 116 ? ParameterDescription :     // t\r\n      x === 84 ? RowDescription :            // T\r\n      x === 82 ? Authentication :            // R\r\n      x === 110 ? NoData :                   // n\r\n      x === 75 ? BackendKeyData :            // K\r\n      x === 69 ? ErrorResponse :             // E\r\n      x === 115 ? PortalSuspended :          // s\r\n      x === 51 ? CloseComplete :             // 3\r\n      x === 71 ? CopyInResponse :            // G\r\n      x === 78 ? NoticeResponse :            // N\r\n      x === 72 ? CopyOutResponse :           // H\r\n      x === 99 ? CopyDone :                  // c\r\n      x === 73 ? EmptyQueryResponse :        // I\r\n      x === 86 ? FunctionCallResponse :      // V\r\n      x === 118 ? NegotiateProtocolVersion : // v\r\n      x === 87 ? CopyBothResponse :          // W\r\n      /* c8 ignore next */\r\n      UnknownMessage\r\n    )(xs)\r\n  }\r\n\r\n  function DataRow(x) {\r\n    let index = 7\r\n    let length\r\n    let column\r\n    let value\r\n\r\n    const row = query.isRaw ? new Array(query.statement.columns.length) : {}\r\n    for (let i = 0; i < query.statement.columns.length; i++) {\r\n      column = query.statement.columns[i]\r\n      length = x.readInt32BE(index)\r\n      index += 4\r\n\r\n      value = length === -1\r\n        ? null\r\n        : query.isRaw === true\r\n          ? x.subarray(index, index += length)\r\n          : column.parser === undefined\r\n            ? x.toString('utf8', index, index += length)\r\n            : column.parser.array === true\r\n              ? column.parser(x.toString('utf8', index + 1, index += length))\r\n              : column.parser(x.toString('utf8', index, index += length))\r\n\r\n      query.isRaw\r\n        ? (row[i] = query.isRaw === true\r\n          ? value\r\n          : transform.value.from ? transform.value.from(value, column) : value)\r\n        : (row[column.name] = transform.value.from ? transform.value.from(value, column) : value)\r\n    }\r\n\r\n    query.forEachFn\r\n      ? query.forEachFn(transform.row.from ? transform.row.from(row) : row, result)\r\n      : (result[rows++] = transform.row.from ? transform.row.from(row) : row)\r\n  }\r\n\r\n  function ParameterStatus(x) {\r\n    const [k, v] = x.toString('utf8', 5, x.length - 1).split(b.N)\r\n    backendParameters[k] = v\r\n    if (options.parameters[k] !== v) {\r\n      options.parameters[k] = v\r\n      onparameter && onparameter(k, v)\r\n    }\r\n  }\r\n\r\n  function ReadyForQuery(x) {\r\n    query && query.options.simple && query.resolve(results || result)\r\n    query = results = null\r\n    result = new Result()\r\n    connectTimer.cancel()\r\n\r\n    if (initial) {\r\n      if (target_session_attrs) {\r\n        if (!backendParameters.in_hot_standby || !backendParameters.default_transaction_read_only)\r\n          return fetchState()\r\n        else if (tryNext(target_session_attrs, backendParameters))\r\n          return terminate()\r\n      }\r\n\r\n      if (needsTypes) {\r\n        initial === true && (initial = null)\r\n        return fetchArrayTypes()\r\n      }\r\n\r\n      initial !== true && execute(initial)\r\n      options.shared.retries = retries = 0\r\n      initial = null\r\n      return\r\n    }\r\n\r\n    while (sent.length && (query = sent.shift()) && (query.active = true, query.cancelled))\r\n      Connection(options).cancel(query.state, query.cancelled.resolve, query.cancelled.reject)\r\n\r\n    if (query)\r\n      return // Consider opening if able and sent.length < 50\r\n\r\n    connection.reserved\r\n      ? !connection.reserved.release && x[5] === 73 // I\r\n        ? ending\r\n          ? terminate()\r\n          : (connection.reserved = null, onopen(connection))\r\n        : connection.reserved()\r\n      : ending\r\n        ? terminate()\r\n        : onopen(connection)\r\n  }\r\n\r\n  function CommandComplete(x) {\r\n    rows = 0\r\n\r\n    for (let i = x.length - 1; i > 0; i--) {\r\n      if (x[i] === 32 && x[i + 1] < 58 && result.count === null)\r\n        result.count = +x.toString('utf8', i + 1, x.length - 1)\r\n      if (x[i - 1] >= 65) {\r\n        result.command = x.toString('utf8', 5, i)\r\n        result.state = backend\r\n        break\r\n      }\r\n    }\r\n\r\n    final && (final(), final = null)\r\n\r\n    if (result.command === 'BEGIN' && max !== 1 && !connection.reserved)\r\n      return errored(Errors.generic('UNSAFE_TRANSACTION', 'Only use sql.begin, sql.reserved or max: 1'))\r\n\r\n    if (query.options.simple)\r\n      return BindComplete()\r\n\r\n    if (query.cursorFn) {\r\n      result.count && query.cursorFn(result)\r\n      write(Sync)\r\n    }\r\n\r\n    query.resolve(result)\r\n  }\r\n\r\n  function ParseComplete() {\r\n    query.parsing = false\r\n  }\r\n\r\n  function BindComplete() {\r\n    !result.statement && (result.statement = query.statement)\r\n    result.columns = query.statement.columns\r\n  }\r\n\r\n  function ParameterDescription(x) {\r\n    const length = x.readUInt16BE(5)\r\n\r\n    for (let i = 0; i < length; ++i)\r\n      !query.statement.types[i] && (query.statement.types[i] = x.readUInt32BE(7 + i * 4))\r\n\r\n    query.prepare && (statements[query.signature] = query.statement)\r\n    query.describeFirst && !query.onlyDescribe && (write(prepared(query)), query.describeFirst = false)\r\n  }\r\n\r\n  function RowDescription(x) {\r\n    if (result.command) {\r\n      results = results || [result]\r\n      results.push(result = new Result())\r\n      result.count = null\r\n      query.statement.columns = null\r\n    }\r\n\r\n    const length = x.readUInt16BE(5)\r\n    let index = 7\r\n    let start\r\n\r\n    query.statement.columns = Array(length)\r\n\r\n    for (let i = 0; i < length; ++i) {\r\n      start = index\r\n      while (x[index++] !== 0);\r\n      const table = x.readUInt32BE(index)\r\n      const number = x.readUInt16BE(index + 4)\r\n      const type = x.readUInt32BE(index + 6)\r\n      query.statement.columns[i] = {\r\n        name: transform.column.from\r\n          ? transform.column.from(x.toString('utf8', start, index - 1))\r\n          : x.toString('utf8', start, index - 1),\r\n        parser: parsers[type],\r\n        table,\r\n        number,\r\n        type\r\n      }\r\n      index += 18\r\n    }\r\n\r\n    result.statement = query.statement\r\n    if (query.onlyDescribe)\r\n      return (query.resolve(query.statement), write(Sync))\r\n  }\r\n\r\n  async function Authentication(x, type = x.readUInt32BE(5)) {\r\n    (\r\n      type === 3 ? AuthenticationCleartextPassword :\r\n      type === 5 ? AuthenticationMD5Password :\r\n      type === 10 ? SASL :\r\n      type === 11 ? SASLContinue :\r\n      type === 12 ? SASLFinal :\r\n      type !== 0 ? UnknownAuth :\r\n      noop\r\n    )(x, type)\r\n  }\r\n\r\n  /* c8 ignore next 5 */\r\n  async function AuthenticationCleartextPassword() {\r\n    const payload = await Pass()\r\n    write(\r\n      b().p().str(payload).z(1).end()\r\n    )\r\n  }\r\n\r\n  async function AuthenticationMD5Password(x) {\r\n    const payload = 'md5' + (\r\n      await md5(\r\n        Buffer.concat([\r\n          Buffer.from(await md5((await Pass()) + user)),\r\n          x.subarray(9)\r\n        ])\r\n      )\r\n    )\r\n    write(\r\n      b().p().str(payload).z(1).end()\r\n    )\r\n  }\r\n\r\n  async function SASL() {\r\n    nonce = (await crypto.randomBytes(18)).toString('base64')\r\n    b().p().str('SCRAM-SHA-256' + b.N)\r\n    const i = b.i\r\n    write(b.inc(4).str('n,,n=*,r=' + nonce).i32(b.i - i - 4, i).end())\r\n  }\r\n\r\n  async function SASLContinue(x) {\r\n    const res = x.toString('utf8', 9).split(',').reduce((acc, x) => (acc[x[0]] = x.slice(2), acc), {})\r\n\r\n    const saltedPassword = await crypto.pbkdf2Sync(\r\n      await Pass(),\r\n      Buffer.from(res.s, 'base64'),\r\n      parseInt(res.i), 32,\r\n      'sha256'\r\n    )\r\n\r\n    const clientKey = await hmac(saltedPassword, 'Client Key')\r\n\r\n    const auth = 'n=*,r=' + nonce + ','\r\n               + 'r=' + res.r + ',s=' + res.s + ',i=' + res.i\r\n               + ',c=biws,r=' + res.r\r\n\r\n    serverSignature = (await hmac(await hmac(saltedPassword, 'Server Key'), auth)).toString('base64')\r\n\r\n    const payload = 'c=biws,r=' + res.r + ',p=' + xor(\r\n      clientKey, Buffer.from(await hmac(await sha256(clientKey), auth))\r\n    ).toString('base64')\r\n\r\n    write(\r\n      b().p().str(payload).end()\r\n    )\r\n  }\r\n\r\n  function SASLFinal(x) {\r\n    if (x.toString('utf8', 9).split(b.N, 1)[0].slice(2) === serverSignature)\r\n      return\r\n    /* c8 ignore next 5 */\r\n    errored(Errors.generic('SASL_SIGNATURE_MISMATCH', 'The server did not return the correct signature'))\r\n    socket.destroy()\r\n  }\r\n\r\n  function Pass() {\r\n    return Promise.resolve(typeof options.pass === 'function'\r\n      ? options.pass()\r\n      : options.pass\r\n    )\r\n  }\r\n\r\n  function NoData() {\r\n    result.statement = query.statement\r\n    result.statement.columns = []\r\n    if (query.onlyDescribe)\r\n      return (query.resolve(query.statement), write(Sync))\r\n  }\r\n\r\n  function BackendKeyData(x) {\r\n    backend.pid = x.readUInt32BE(5)\r\n    backend.secret = x.readUInt32BE(9)\r\n  }\r\n\r\n  async function fetchArrayTypes() {\r\n    needsTypes = false\r\n    const types = await new Query([`\r\n      select b.oid, b.typarray\r\n      from pg_catalog.pg_type a\r\n      left join pg_catalog.pg_type b on b.oid = a.typelem\r\n      where a.typcategory = 'A'\r\n      group by b.oid, b.typarray\r\n      order by b.oid\r\n    `], [], execute)\r\n    types.forEach(({ oid, typarray }) => addArrayType(oid, typarray))\r\n  }\r\n\r\n  function addArrayType(oid, typarray) {\r\n    if (!!options.parsers[typarray] && !!options.serializers[typarray]) return\r\n    const parser = options.parsers[oid]\r\n    options.shared.typeArrayMap[oid] = typarray\r\n    options.parsers[typarray] = (xs) => arrayParser(xs, parser, typarray)\r\n    options.parsers[typarray].array = true\r\n    options.serializers[typarray] = (xs) => arraySerializer(xs, options.serializers[oid], options, typarray)\r\n  }\r\n\r\n  function tryNext(x, xs) {\r\n    return (\r\n      (x === 'read-write' && xs.default_transaction_read_only === 'on') ||\r\n      (x === 'read-only' && xs.default_transaction_read_only === 'off') ||\r\n      (x === 'primary' && xs.in_hot_standby === 'on') ||\r\n      (x === 'standby' && xs.in_hot_standby === 'off') ||\r\n      (x === 'prefer-standby' && xs.in_hot_standby === 'off' && options.host[retries])\r\n    )\r\n  }\r\n\r\n  function fetchState() {\r\n    const query = new Query([`\r\n      show transaction_read_only;\r\n      select pg_catalog.pg_is_in_recovery()\r\n    `], [], execute, null, { simple: true })\r\n    query.resolve = ([[a], [b]]) => {\r\n      backendParameters.default_transaction_read_only = a.transaction_read_only\r\n      backendParameters.in_hot_standby = b.pg_is_in_recovery ? 'on' : 'off'\r\n    }\r\n    query.execute()\r\n  }\r\n\r\n  function ErrorResponse(x) {\r\n    query && (query.cursorFn || query.describeFirst) && write(Sync)\r\n    const error = Errors.postgres(parseError(x))\r\n    query && query.retried\r\n      ? errored(query.retried)\r\n      : query && query.prepared && retryRoutines.has(error.routine)\r\n        ? retry(query, error)\r\n        : errored(error)\r\n  }\r\n\r\n  function retry(q, error) {\r\n    delete statements[q.signature]\r\n    q.retried = error\r\n    execute(q)\r\n  }\r\n\r\n  function NotificationResponse(x) {\r\n    if (!onnotify)\r\n      return\r\n\r\n    let index = 9\r\n    while (x[index++] !== 0);\r\n    onnotify(\r\n      x.toString('utf8', 9, index - 1),\r\n      x.toString('utf8', index, x.length - 1)\r\n    )\r\n  }\r\n\r\n  async function PortalSuspended() {\r\n    try {\r\n      const x = await Promise.resolve(query.cursorFn(result))\r\n      rows = 0\r\n      x === CLOSE\r\n        ? write(Close(query.portal))\r\n        : (result = new Result(), write(Execute('', query.cursorRows)))\r\n    } catch (err) {\r\n      write(Sync)\r\n      query.reject(err)\r\n    }\r\n  }\r\n\r\n  function CloseComplete() {\r\n    result.count && query.cursorFn(result)\r\n    query.resolve(result)\r\n  }\r\n\r\n  function CopyInResponse() {\r\n    stream = new Stream.Writable({\r\n      autoDestroy: true,\r\n      write(chunk, encoding, callback) {\r\n        socket.write(b().d().raw(chunk).end(), callback)\r\n      },\r\n      destroy(error, callback) {\r\n        callback(error)\r\n        socket.write(b().f().str(error + b.N).end())\r\n        stream = null\r\n      },\r\n      final(callback) {\r\n        socket.write(b().c().end())\r\n        final = callback\r\n      }\r\n    })\r\n    query.resolve(stream)\r\n  }\r\n\r\n  function CopyOutResponse() {\r\n    stream = new Stream.Readable({\r\n      read() { socket.resume() }\r\n    })\r\n    query.resolve(stream)\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function CopyBothResponse() {\r\n    stream = new Stream.Duplex({\r\n      autoDestroy: true,\r\n      read() { socket.resume() },\r\n      /* c8 ignore next 11 */\r\n      write(chunk, encoding, callback) {\r\n        socket.write(b().d().raw(chunk).end(), callback)\r\n      },\r\n      destroy(error, callback) {\r\n        callback(error)\r\n        socket.write(b().f().str(error + b.N).end())\r\n        stream = null\r\n      },\r\n      final(callback) {\r\n        socket.write(b().c().end())\r\n        final = callback\r\n      }\r\n    })\r\n    query.resolve(stream)\r\n  }\r\n\r\n  function CopyData(x) {\r\n    stream && (stream.push(x.subarray(5)) || socket.pause())\r\n  }\r\n\r\n  function CopyDone() {\r\n    stream && stream.push(null)\r\n    stream = null\r\n  }\r\n\r\n  function NoticeResponse(x) {\r\n    onnotice\r\n      ? onnotice(parseError(x))\r\n      : console.log(parseError(x)) // eslint-disable-line\r\n\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function EmptyQueryResponse() {\r\n    /* noop */\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function FunctionCallResponse() {\r\n    errored(Errors.notSupported('FunctionCallResponse'))\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function NegotiateProtocolVersion() {\r\n    errored(Errors.notSupported('NegotiateProtocolVersion'))\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function UnknownMessage(x) {\r\n    console.error('Postgres.js : Unknown Message:', x[0]) // eslint-disable-line\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function UnknownAuth(x, type) {\r\n    console.error('Postgres.js : Unknown Auth:', type) // eslint-disable-line\r\n  }\r\n\r\n  /* Messages */\r\n  function Bind(parameters, types, statement = '', portal = '') {\r\n    let prev\r\n      , type\r\n\r\n    b().B().str(portal + b.N).str(statement + b.N).i16(0).i16(parameters.length)\r\n\r\n    parameters.forEach((x, i) => {\r\n      if (x === null)\r\n        return b.i32(0xFFFFFFFF)\r\n\r\n      type = types[i]\r\n      parameters[i] = x = type in options.serializers\r\n        ? options.serializers[type](x)\r\n        : '' + x\r\n\r\n      prev = b.i\r\n      b.inc(4).str(x).i32(b.i - prev - 4, prev)\r\n    })\r\n\r\n    b.i16(0)\r\n\r\n    return b.end()\r\n  }\r\n\r\n  function Parse(str, parameters, types, name = '') {\r\n    b().P().str(name + b.N).str(str + b.N).i16(parameters.length)\r\n    parameters.forEach((x, i) => b.i32(types[i] || 0))\r\n    return b.end()\r\n  }\r\n\r\n  function Describe(x, name = '') {\r\n    return b().D().str(x).str(name + b.N).end()\r\n  }\r\n\r\n  function Execute(portal = '', rows = 0) {\r\n    return Buffer.concat([\r\n      b().E().str(portal + b.N).i32(rows).end(),\r\n      Flush\r\n    ])\r\n  }\r\n\r\n  function Close(portal = '') {\r\n    return Buffer.concat([\r\n      b().C().str('P').str(portal + b.N).end(),\r\n      b().S().end()\r\n    ])\r\n  }\r\n\r\n  function StartupMessage() {\r\n    return cancelMessage || b().inc(4).i16(3).z(2).str(\r\n      Object.entries(Object.assign({\r\n        user,\r\n        database,\r\n        client_encoding: 'UTF8'\r\n      },\r\n        options.connection\r\n      )).filter(([, v]) => v).map(([k, v]) => k + b.N + v).join(b.N)\r\n    ).z(2).end(0)\r\n  }\r\n\r\n}\r\n\r\nfunction parseError(x) {\r\n  const error = {}\r\n  let start = 5\r\n  for (let i = 5; i < x.length - 1; i++) {\r\n    if (x[i] === 0) {\r\n      error[errorFields[x[start]]] = x.toString('utf8', start + 1, i)\r\n      start = i + 1\r\n    }\r\n  }\r\n  return error\r\n}\r\n\r\nfunction md5(x) {\r\n  return crypto.createHash('md5').update(x).digest('hex')\r\n}\r\n\r\nfunction hmac(key, x) {\r\n  return crypto.createHmac('sha256', key).update(x).digest()\r\n}\r\n\r\nfunction sha256(x) {\r\n  return crypto.createHash('sha256').update(x).digest()\r\n}\r\n\r\nfunction xor(a, b) {\r\n  const length = Math.max(a.length, b.length)\r\n  const buffer = Buffer.allocUnsafe(length)\r\n  for (let i = 0; i < length; i++)\r\n    buffer[i] = a[i] ^ b[i]\r\n  return buffer\r\n}\r\n\r\nfunction timer(fn, seconds) {\r\n  seconds = typeof seconds === 'function' ? seconds() : seconds\r\n  if (!seconds)\r\n    return { cancel: noop, start: noop }\r\n\r\n  let timer\r\n  return {\r\n    cancel() {\r\n      timer && (clearTimeout(timer), timer = null)\r\n    },\r\n    start() {\r\n      timer && clearTimeout(timer)\r\n      timer = setTimeout(done, seconds * 1000, arguments)\r\n    }\r\n  }\r\n\r\n  function done(args) {\r\n    fn.apply(null, args)\r\n    timer = null\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/postgres/cf/src/connection.js b/node_modules/postgres/cf/src/connection.js
--- a/node_modules/postgres/cf/src/connection.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/postgres/cf/src/connection.js	(date 1753913035205)
@@ -111,7 +111,7 @@
     queue: queues.closed,
     idleTimer,
     connect(query) {
-      initial = query || true
+      initial = query
       reconnect()
     },
     terminate,
@@ -295,7 +295,7 @@
     if (incomings) {
       incomings.push(x)
       remaining -= x.length
-      if (remaining >= 0)
+      if (remaining > 0)
         return
     }
 
@@ -387,7 +387,13 @@
   }
 
   function queryError(query, err) {
-    Object.defineProperties(err, {
+    if (query.reserve)
+      return query.reject(err)
+
+    if (!err || typeof err !== 'object')
+      err = new Error(err)
+
+    'query' in err || 'parameters' in err || Object.defineProperties(err, {
       stack: { value: err.stack + query.origin.replace(/.*\n/, '\n'), enumerable: options.debug },
       query: { value: query.string, enumerable: options.debug },
       parameters: { value: query.parameters, enumerable: options.debug },
@@ -534,11 +540,11 @@
       }
 
       if (needsTypes) {
-        initial === true && (initial = null)
+        initial.reserve && (initial = null)
         return fetchArrayTypes()
       }
 
-      initial !== true && execute(initial)
+      initial && !initial.reserve && execute(initial)
       options.shared.retries = retries = 0
       initial = null
       return
Index: node_modules/postgres/cjs/src/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const os = require('os')\r\nconst fs = require('fs')\r\n\r\nconst {\r\n  mergeUserTypes,\r\n  inferType,\r\n  Parameter,\r\n  Identifier,\r\n  Builder,\r\n  toPascal,\r\n  pascal,\r\n  toCamel,\r\n  camel,\r\n  toKebab,\r\n  kebab,\r\n  fromPascal,\r\n  fromCamel,\r\n  fromKebab\r\n} = require('./types.js')\r\n\r\nconst Connection = require('./connection.js')\r\nconst { Query, CLOSE } = require('./query.js')\r\nconst Queue = require('./queue.js')\r\nconst { Errors, PostgresError } = require('./errors.js')\r\nconst Subscribe = require('./subscribe.js')\r\nconst largeObject = require('./large.js')\r\n\r\nObject.assign(Postgres, {\r\n  PostgresError,\r\n  toPascal,\r\n  pascal,\r\n  toCamel,\r\n  camel,\r\n  toKebab,\r\n  kebab,\r\n  fromPascal,\r\n  fromCamel,\r\n  fromKebab,\r\n  BigInt: {\r\n    to: 20,\r\n    from: [20],\r\n    parse: x => BigInt(x), // eslint-disable-line\r\n    serialize: x => x.toString()\r\n  }\r\n})\r\n\r\nmodule.exports = Postgres\r\n\r\nfunction Postgres(a, b) {\r\n  const options = parseOptions(a, b)\r\n      , subscribe = options.no_subscribe || Subscribe(Postgres, { ...options })\r\n\r\n  let ending = false\r\n\r\n  const queries = Queue()\r\n      , connecting = Queue()\r\n      , reserved = Queue()\r\n      , closed = Queue()\r\n      , ended = Queue()\r\n      , open = Queue()\r\n      , busy = Queue()\r\n      , full = Queue()\r\n      , queues = { connecting, reserved, closed, ended, open, busy, full }\r\n\r\n  const connections = [...Array(options.max)].map(() => Connection(options, queues, { onopen, onend, onclose }))\r\n\r\n  const sql = Sql(handler)\r\n\r\n  Object.assign(sql, {\r\n    get parameters() { return options.parameters },\r\n    largeObject: largeObject.bind(null, sql),\r\n    subscribe,\r\n    CLOSE,\r\n    END: CLOSE,\r\n    PostgresError,\r\n    options,\r\n    reserve,\r\n    listen,\r\n    begin,\r\n    close,\r\n    end\r\n  })\r\n\r\n  return sql\r\n\r\n  function Sql(handler) {\r\n    handler.debug = options.debug\r\n\r\n    Object.entries(options.types).reduce((acc, [name, type]) => {\r\n      acc[name] = (x) => new Parameter(x, type.to)\r\n      return acc\r\n    }, typed)\r\n\r\n    Object.assign(sql, {\r\n      types: typed,\r\n      typed,\r\n      unsafe,\r\n      notify,\r\n      array,\r\n      json,\r\n      file\r\n    })\r\n\r\n    return sql\r\n\r\n    function typed(value, type) {\r\n      return new Parameter(value, type)\r\n    }\r\n\r\n    function sql(strings, ...args) {\r\n      const query = strings && Array.isArray(strings.raw)\r\n        ? new Query(strings, args, handler, cancel)\r\n        : typeof strings === 'string' && !args.length\r\n          ? new Identifier(options.transform.column.to ? options.transform.column.to(strings) : strings)\r\n          : new Builder(strings, args)\r\n      return query\r\n    }\r\n\r\n    function unsafe(string, args = [], options = {}) {\r\n      arguments.length === 2 && !Array.isArray(args) && (options = args, args = [])\r\n      const query = new Query([string], args, handler, cancel, {\r\n        prepare: false,\r\n        ...options,\r\n        simple: 'simple' in options ? options.simple : args.length === 0\r\n      })\r\n      return query\r\n    }\r\n\r\n    function file(path, args = [], options = {}) {\r\n      arguments.length === 2 && !Array.isArray(args) && (options = args, args = [])\r\n      const query = new Query([], args, (query) => {\r\n        fs.readFile(path, 'utf8', (err, string) => {\r\n          if (err)\r\n            return query.reject(err)\r\n\r\n          query.strings = [string]\r\n          handler(query)\r\n        })\r\n      }, cancel, {\r\n        ...options,\r\n        simple: 'simple' in options ? options.simple : args.length === 0\r\n      })\r\n      return query\r\n    }\r\n  }\r\n\r\n  async function listen(name, fn, onlisten) {\r\n    const listener = { fn, onlisten }\r\n\r\n    const sql = listen.sql || (listen.sql = Postgres({\r\n      ...options,\r\n      max: 1,\r\n      idle_timeout: null,\r\n      max_lifetime: null,\r\n      fetch_types: false,\r\n      onclose() {\r\n        Object.entries(listen.channels).forEach(([name, { listeners }]) => {\r\n          delete listen.channels[name]\r\n          Promise.all(listeners.map(l => listen(name, l.fn, l.onlisten).catch(() => { /* noop */ })))\r\n        })\r\n      },\r\n      onnotify(c, x) {\r\n        c in listen.channels && listen.channels[c].listeners.forEach(l => l.fn(x))\r\n      }\r\n    }))\r\n\r\n    const channels = listen.channels || (listen.channels = {})\r\n        , exists = name in channels\r\n\r\n    if (exists) {\r\n      channels[name].listeners.push(listener)\r\n      const result = await channels[name].result\r\n      listener.onlisten && listener.onlisten()\r\n      return { state: result.state, unlisten }\r\n    }\r\n\r\n    channels[name] = { result: sql`listen ${\r\n      sql.unsafe('\"' + name.replace(/\"/g, '\"\"') + '\"')\r\n    }`, listeners: [listener] }\r\n    const result = await channels[name].result\r\n    listener.onlisten && listener.onlisten()\r\n    return { state: result.state, unlisten }\r\n\r\n    async function unlisten() {\r\n      if (name in channels === false)\r\n        return\r\n\r\n      channels[name].listeners = channels[name].listeners.filter(x => x !== listener)\r\n      if (channels[name].listeners.length)\r\n        return\r\n\r\n      delete channels[name]\r\n      return sql`unlisten ${\r\n        sql.unsafe('\"' + name.replace(/\"/g, '\"\"') + '\"')\r\n      }`\r\n    }\r\n  }\r\n\r\n  async function notify(channel, payload) {\r\n    return await sql`select pg_notify(${ channel }, ${ '' + payload })`\r\n  }\r\n\r\n  async function reserve() {\r\n    const queue = Queue()\r\n    const c = open.length\r\n      ? open.shift()\r\n      : await new Promise(r => {\r\n        queries.push({ reserve: r })\r\n        closed.length && connect(closed.shift())\r\n      })\r\n\r\n    move(c, reserved)\r\n    c.reserved = () => queue.length\r\n      ? c.execute(queue.shift())\r\n      : move(c, reserved)\r\n    c.reserved.release = true\r\n\r\n    const sql = Sql(handler)\r\n    sql.release = () => {\r\n      c.reserved = null\r\n      onopen(c)\r\n    }\r\n\r\n    return sql\r\n\r\n    function handler(q) {\r\n      c.queue === full\r\n        ? queue.push(q)\r\n        : c.execute(q) || move(c, full)\r\n    }\r\n  }\r\n\r\n  async function begin(options, fn) {\r\n    !fn && (fn = options, options = '')\r\n    const queries = Queue()\r\n    let savepoints = 0\r\n      , connection\r\n      , prepare = null\r\n\r\n    try {\r\n      await sql.unsafe('begin ' + options.replace(/[^a-z ]/ig, ''), [], { onexecute }).execute()\r\n      return await Promise.race([\r\n        scope(connection, fn),\r\n        new Promise((_, reject) => connection.onclose = reject)\r\n      ])\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n\r\n    async function scope(c, fn, name) {\r\n      const sql = Sql(handler)\r\n      sql.savepoint = savepoint\r\n      sql.prepare = x => prepare = x.replace(/[^a-z0-9$-_. ]/gi)\r\n      let uncaughtError\r\n        , result\r\n\r\n      name && await sql`savepoint ${ sql(name) }`\r\n      try {\r\n        result = await new Promise((resolve, reject) => {\r\n          const x = fn(sql)\r\n          Promise.resolve(Array.isArray(x) ? Promise.all(x) : x).then(resolve, reject)\r\n        })\r\n\r\n        if (uncaughtError)\r\n          throw uncaughtError\r\n      } catch (e) {\r\n        await (name\r\n          ? sql`rollback to ${ sql(name) }`\r\n          : sql`rollback`\r\n        )\r\n        throw e instanceof PostgresError && e.code === '25P02' && uncaughtError || e\r\n      }\r\n\r\n      if (!name) {\r\n        prepare\r\n          ? await sql`prepare transaction '${ sql.unsafe(prepare) }'`\r\n          : await sql`commit`\r\n      }\r\n\r\n      return result\r\n\r\n      function savepoint(name, fn) {\r\n        if (name && Array.isArray(name.raw))\r\n          return savepoint(sql => sql.apply(sql, arguments))\r\n\r\n        arguments.length === 1 && (fn = name, name = null)\r\n        return scope(c, fn, 's' + savepoints++ + (name ? '_' + name : ''))\r\n      }\r\n\r\n      function handler(q) {\r\n        q.catch(e => uncaughtError || (uncaughtError = e))\r\n        c.queue === full\r\n          ? queries.push(q)\r\n          : c.execute(q) || move(c, full)\r\n      }\r\n    }\r\n\r\n    function onexecute(c) {\r\n      connection = c\r\n      move(c, reserved)\r\n      c.reserved = () => queries.length\r\n        ? c.execute(queries.shift())\r\n        : move(c, reserved)\r\n    }\r\n  }\r\n\r\n  function move(c, queue) {\r\n    c.queue.remove(c)\r\n    queue.push(c)\r\n    c.queue = queue\r\n    queue === open\r\n      ? c.idleTimer.start()\r\n      : c.idleTimer.cancel()\r\n    return c\r\n  }\r\n\r\n  function json(x) {\r\n    return new Parameter(x, 3802)\r\n  }\r\n\r\n  function array(x, type) {\r\n    if (!Array.isArray(x))\r\n      return array(Array.from(arguments))\r\n\r\n    return new Parameter(x, type || (x.length ? inferType(x) || 25 : 0), options.shared.typeArrayMap)\r\n  }\r\n\r\n  function handler(query) {\r\n    if (ending)\r\n      return query.reject(Errors.connection('CONNECTION_ENDED', options, options))\r\n\r\n    if (open.length)\r\n      return go(open.shift(), query)\r\n\r\n    if (closed.length)\r\n      return connect(closed.shift(), query)\r\n\r\n    busy.length\r\n      ? go(busy.shift(), query)\r\n      : queries.push(query)\r\n  }\r\n\r\n  function go(c, query) {\r\n    return c.execute(query)\r\n      ? move(c, busy)\r\n      : move(c, full)\r\n  }\r\n\r\n  function cancel(query) {\r\n    return new Promise((resolve, reject) => {\r\n      query.state\r\n        ? query.active\r\n          ? Connection(options).cancel(query.state, resolve, reject)\r\n          : query.cancelled = { resolve, reject }\r\n        : (\r\n          queries.remove(query),\r\n          query.cancelled = true,\r\n          query.reject(Errors.generic('57014', 'canceling statement due to user request')),\r\n          resolve()\r\n        )\r\n    })\r\n  }\r\n\r\n  async function end({ timeout = null } = {}) {\r\n    if (ending)\r\n      return ending\r\n\r\n    await 1\r\n    let timer\r\n    return ending = Promise.race([\r\n      new Promise(r => timeout !== null && (timer = setTimeout(destroy, timeout * 1000, r))),\r\n      Promise.all(connections.map(c => c.end()).concat(\r\n        listen.sql ? listen.sql.end({ timeout: 0 }) : [],\r\n        subscribe.sql ? subscribe.sql.end({ timeout: 0 }) : []\r\n      ))\r\n    ]).then(() => clearTimeout(timer))\r\n  }\r\n\r\n  async function close() {\r\n    await Promise.all(connections.map(c => c.end()))\r\n  }\r\n\r\n  async function destroy(resolve) {\r\n    await Promise.all(connections.map(c => c.terminate()))\r\n    while (queries.length)\r\n      queries.shift().reject(Errors.connection('CONNECTION_DESTROYED', options))\r\n    resolve()\r\n  }\r\n\r\n  function connect(c, query) {\r\n    move(c, connecting)\r\n    c.connect(query)\r\n    return c\r\n  }\r\n\r\n  function onend(c) {\r\n    move(c, ended)\r\n  }\r\n\r\n  function onopen(c) {\r\n    if (queries.length === 0)\r\n      return move(c, open)\r\n\r\n    let max = Math.ceil(queries.length / (connecting.length + 1))\r\n      , ready = true\r\n\r\n    while (ready && queries.length && max-- > 0) {\r\n      const query = queries.shift()\r\n      if (query.reserve)\r\n        return query.reserve(c)\r\n\r\n      ready = c.execute(query)\r\n    }\r\n\r\n    ready\r\n      ? move(c, busy)\r\n      : move(c, full)\r\n  }\r\n\r\n  function onclose(c, e) {\r\n    move(c, closed)\r\n    c.reserved = null\r\n    c.onclose && (c.onclose(e), c.onclose = null)\r\n    options.onclose && options.onclose(c.id)\r\n    queries.length && connect(c, queries.shift())\r\n  }\r\n}\r\n\r\nfunction parseOptions(a, b) {\r\n  if (a && a.shared)\r\n    return a\r\n\r\n  const env = process.env // eslint-disable-line\r\n      , o = (!a || typeof a === 'string' ? b : a) || {}\r\n      , { url, multihost } = parseUrl(a)\r\n      , query = [...url.searchParams].reduce((a, [b, c]) => (a[b] = c, a), {})\r\n      , host = o.hostname || o.host || multihost || url.hostname || env.PGHOST || 'localhost'\r\n      , port = o.port || url.port || env.PGPORT || 5432\r\n      , user = o.user || o.username || url.username || env.PGUSERNAME || env.PGUSER || osUsername()\r\n\r\n  o.no_prepare && (o.prepare = false)\r\n  query.sslmode && (query.ssl = query.sslmode, delete query.sslmode)\r\n  'timeout' in o && (console.log('The timeout option is deprecated, use idle_timeout instead'), o.idle_timeout = o.timeout) // eslint-disable-line\r\n  query.sslrootcert === 'system' && (query.ssl = 'verify-full')\r\n\r\n  const ints = ['idle_timeout', 'connect_timeout', 'max_lifetime', 'max_pipeline', 'backoff', 'keep_alive']\r\n  const defaults = {\r\n    max             : 10,\r\n    ssl             : false,\r\n    idle_timeout    : null,\r\n    connect_timeout : 30,\r\n    max_lifetime    : max_lifetime,\r\n    max_pipeline    : 100,\r\n    backoff         : backoff,\r\n    keep_alive      : 60,\r\n    prepare         : true,\r\n    debug           : false,\r\n    fetch_types     : true,\r\n    publications    : 'alltables',\r\n    target_session_attrs: null\r\n  }\r\n\r\n  return {\r\n    host            : Array.isArray(host) ? host : host.split(',').map(x => x.split(':')[0]),\r\n    port            : Array.isArray(port) ? port : host.split(',').map(x => parseInt(x.split(':')[1] || port)),\r\n    path            : o.path || host.indexOf('/') > -1 && host + '/.s.PGSQL.' + port,\r\n    database        : o.database || o.db || (url.pathname || '').slice(1) || env.PGDATABASE || user,\r\n    user            : user,\r\n    pass            : o.pass || o.password || url.password || env.PGPASSWORD || '',\r\n    ...Object.entries(defaults).reduce(\r\n      (acc, [k, d]) => {\r\n        const value = k in o ? o[k] : k in query\r\n          ? (query[k] === 'disable' || query[k] === 'false' ? false : query[k])\r\n          : env['PG' + k.toUpperCase()] || d\r\n        acc[k] = typeof value === 'string' && ints.includes(k)\r\n          ? +value\r\n          : value\r\n        return acc\r\n      },\r\n      {}\r\n    ),\r\n    connection      : {\r\n      application_name: 'postgres.js',\r\n      ...o.connection,\r\n      ...Object.entries(query).reduce((acc, [k, v]) => (k in defaults || (acc[k] = v), acc), {})\r\n    },\r\n    types           : o.types || {},\r\n    target_session_attrs: tsa(o, url, env),\r\n    onnotice        : o.onnotice,\r\n    onnotify        : o.onnotify,\r\n    onclose         : o.onclose,\r\n    onparameter     : o.onparameter,\r\n    socket          : o.socket,\r\n    transform       : parseTransform(o.transform || { undefined: undefined }),\r\n    parameters      : {},\r\n    shared          : { retries: 0, typeArrayMap: {} },\r\n    ...mergeUserTypes(o.types)\r\n  }\r\n}\r\n\r\nfunction tsa(o, url, env) {\r\n  const x = o.target_session_attrs || url.searchParams.get('target_session_attrs') || env.PGTARGETSESSIONATTRS\r\n  if (!x || ['read-write', 'read-only', 'primary', 'standby', 'prefer-standby'].includes(x))\r\n    return x\r\n\r\n  throw new Error('target_session_attrs ' + x + ' is not supported')\r\n}\r\n\r\nfunction backoff(retries) {\r\n  return (0.5 + Math.random() / 2) * Math.min(3 ** retries / 100, 20)\r\n}\r\n\r\nfunction max_lifetime() {\r\n  return 60 * (30 + Math.random() * 30)\r\n}\r\n\r\nfunction parseTransform(x) {\r\n  return {\r\n    undefined: x.undefined,\r\n    column: {\r\n      from: typeof x.column === 'function' ? x.column : x.column && x.column.from,\r\n      to: x.column && x.column.to\r\n    },\r\n    value: {\r\n      from: typeof x.value === 'function' ? x.value : x.value && x.value.from,\r\n      to: x.value && x.value.to\r\n    },\r\n    row: {\r\n      from: typeof x.row === 'function' ? x.row : x.row && x.row.from,\r\n      to: x.row && x.row.to\r\n    }\r\n  }\r\n}\r\n\r\nfunction parseUrl(url) {\r\n  if (!url || typeof url !== 'string')\r\n    return { url: { searchParams: new Map() } }\r\n\r\n  let host = url\r\n  host = host.slice(host.indexOf('://') + 3).split(/[?/]/)[0]\r\n  host = decodeURIComponent(host.slice(host.indexOf('@') + 1))\r\n\r\n  const urlObj = new URL(url.replace(host, host.split(',')[0]))\r\n\r\n  return {\r\n    url: {\r\n      username: decodeURIComponent(urlObj.username),\r\n      password: decodeURIComponent(urlObj.password),\r\n      host: urlObj.host,\r\n      hostname: urlObj.hostname,\r\n      port: urlObj.port,\r\n      pathname: urlObj.pathname,\r\n      searchParams: urlObj.searchParams\r\n    },\r\n    multihost: host.indexOf(',') > -1 && host\r\n  }\r\n}\r\n\r\nfunction osUsername() {\r\n  try {\r\n    return os.userInfo().username // eslint-disable-line\r\n  } catch (_) {\r\n    return process.env.USERNAME || process.env.USER || process.env.LOGNAME  // eslint-disable-line\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/postgres/cjs/src/index.js b/node_modules/postgres/cjs/src/index.js
--- a/node_modules/postgres/cjs/src/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/postgres/cjs/src/index.js	(date 1753913035213)
@@ -204,9 +204,10 @@
     const queue = Queue()
     const c = open.length
       ? open.shift()
-      : await new Promise(r => {
-        queries.push({ reserve: r })
-        closed.length && connect(closed.shift())
+      : await new Promise((resolve, reject) => {
+        const query = { reserve: resolve, reject }
+        queries.push(query)
+        closed.length && connect(closed.shift(), query)
       })
 
     move(c, reserved)
@@ -480,7 +481,7 @@
       {}
     ),
     connection      : {
-      application_name: 'postgres.js',
+      application_name: env.PGAPPNAME || 'postgres.js',
       ...o.connection,
       ...Object.entries(query).reduce((acc, [k, v]) => (k in defaults || (acc[k] = v), acc), {})
     },
Index: node_modules/postgres/cjs/src/connection.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const net = require('net')\r\nconst tls = require('tls')\r\nconst crypto = require('crypto')\r\nconst Stream = require('stream')\r\nconst { performance } = require('perf_hooks')\r\n\r\nconst { stringify, handleValue, arrayParser, arraySerializer } = require('./types.js')\r\nconst { Errors } = require('./errors.js')\r\nconst Result = require('./result.js')\r\nconst Queue = require('./queue.js')\r\nconst { Query, CLOSE } = require('./query.js')\r\nconst b = require('./bytes.js')\r\n\r\nmodule.exports = Connection\r\n\r\nlet uid = 1\r\n\r\nconst Sync = b().S().end()\r\n    , Flush = b().H().end()\r\n    , SSLRequest = b().i32(8).i32(80877103).end(8)\r\n    , ExecuteUnnamed = Buffer.concat([b().E().str(b.N).i32(0).end(), Sync])\r\n    , DescribeUnnamed = b().D().str('S').str(b.N).end()\r\n    , noop = () => { /* noop */ }\r\n\r\nconst retryRoutines = new Set([\r\n  'FetchPreparedStatement',\r\n  'RevalidateCachedQuery',\r\n  'transformAssignedExpr'\r\n])\r\n\r\nconst errorFields = {\r\n  83  : 'severity_local',    // S\r\n  86  : 'severity',          // V\r\n  67  : 'code',              // C\r\n  77  : 'message',           // M\r\n  68  : 'detail',            // D\r\n  72  : 'hint',              // H\r\n  80  : 'position',          // P\r\n  112 : 'internal_position', // p\r\n  113 : 'internal_query',    // q\r\n  87  : 'where',             // W\r\n  115 : 'schema_name',       // s\r\n  116 : 'table_name',        // t\r\n  99  : 'column_name',       // c\r\n  100 : 'data type_name',    // d\r\n  110 : 'constraint_name',   // n\r\n  70  : 'file',              // F\r\n  76  : 'line',              // L\r\n  82  : 'routine'            // R\r\n}\r\n\r\nfunction Connection(options, queues = {}, { onopen = noop, onend = noop, onclose = noop } = {}) {\r\n  const {\r\n    ssl,\r\n    max,\r\n    user,\r\n    host,\r\n    port,\r\n    database,\r\n    parsers,\r\n    transform,\r\n    onnotice,\r\n    onnotify,\r\n    onparameter,\r\n    max_pipeline,\r\n    keep_alive,\r\n    backoff,\r\n    target_session_attrs\r\n  } = options\r\n\r\n  const sent = Queue()\r\n      , id = uid++\r\n      , backend = { pid: null, secret: null }\r\n      , idleTimer = timer(end, options.idle_timeout)\r\n      , lifeTimer = timer(end, options.max_lifetime)\r\n      , connectTimer = timer(connectTimedOut, options.connect_timeout)\r\n\r\n  let socket = null\r\n    , cancelMessage\r\n    , result = new Result()\r\n    , incoming = Buffer.alloc(0)\r\n    , needsTypes = options.fetch_types\r\n    , backendParameters = {}\r\n    , statements = {}\r\n    , statementId = Math.random().toString(36).slice(2)\r\n    , statementCount = 1\r\n    , closedDate = 0\r\n    , remaining = 0\r\n    , hostIndex = 0\r\n    , retries = 0\r\n    , length = 0\r\n    , delay = 0\r\n    , rows = 0\r\n    , serverSignature = null\r\n    , nextWriteTimer = null\r\n    , terminated = false\r\n    , incomings = null\r\n    , results = null\r\n    , initial = null\r\n    , ending = null\r\n    , stream = null\r\n    , chunk = null\r\n    , ended = null\r\n    , nonce = null\r\n    , query = null\r\n    , final = null\r\n\r\n  const connection = {\r\n    queue: queues.closed,\r\n    idleTimer,\r\n    connect(query) {\r\n      initial = query || true\r\n      reconnect()\r\n    },\r\n    terminate,\r\n    execute,\r\n    cancel,\r\n    end,\r\n    count: 0,\r\n    id\r\n  }\r\n\r\n  queues.closed && queues.closed.push(connection)\r\n\r\n  return connection\r\n\r\n  async function createSocket() {\r\n    let x\r\n    try {\r\n      x = options.socket\r\n        ? (await Promise.resolve(options.socket(options)))\r\n        : new net.Socket()\r\n    } catch (e) {\r\n      error(e)\r\n      return\r\n    }\r\n    x.on('error', error)\r\n    x.on('close', closed)\r\n    x.on('drain', drain)\r\n    return x\r\n  }\r\n\r\n  async function cancel({ pid, secret }, resolve, reject) {\r\n    try {\r\n      cancelMessage = b().i32(16).i32(80877102).i32(pid).i32(secret).end(16)\r\n      await connect()\r\n      socket.once('error', reject)\r\n      socket.once('close', resolve)\r\n    } catch (error) {\r\n      reject(error)\r\n    }\r\n  }\r\n\r\n  function execute(q) {\r\n    if (terminated)\r\n      return queryError(q, Errors.connection('CONNECTION_DESTROYED', options))\r\n\r\n    if (q.cancelled)\r\n      return\r\n\r\n    try {\r\n      q.state = backend\r\n      query\r\n        ? sent.push(q)\r\n        : (query = q, query.active = true)\r\n\r\n      build(q)\r\n      return write(toBuffer(q))\r\n        && !q.describeFirst\r\n        && !q.cursorFn\r\n        && sent.length < max_pipeline\r\n        && (!q.options.onexecute || q.options.onexecute(connection))\r\n    } catch (error) {\r\n      sent.length === 0 && write(Sync)\r\n      errored(error)\r\n      return true\r\n    }\r\n  }\r\n\r\n  function toBuffer(q) {\r\n    if (q.parameters.length >= 65534)\r\n      throw Errors.generic('MAX_PARAMETERS_EXCEEDED', 'Max number of parameters (65534) exceeded')\r\n\r\n    return q.options.simple\r\n      ? b().Q().str(q.statement.string + b.N).end()\r\n      : q.describeFirst\r\n        ? Buffer.concat([describe(q), Flush])\r\n        : q.prepare\r\n          ? q.prepared\r\n            ? prepared(q)\r\n            : Buffer.concat([describe(q), prepared(q)])\r\n          : unnamed(q)\r\n  }\r\n\r\n  function describe(q) {\r\n    return Buffer.concat([\r\n      Parse(q.statement.string, q.parameters, q.statement.types, q.statement.name),\r\n      Describe('S', q.statement.name)\r\n    ])\r\n  }\r\n\r\n  function prepared(q) {\r\n    return Buffer.concat([\r\n      Bind(q.parameters, q.statement.types, q.statement.name, q.cursorName),\r\n      q.cursorFn\r\n        ? Execute('', q.cursorRows)\r\n        : ExecuteUnnamed\r\n    ])\r\n  }\r\n\r\n  function unnamed(q) {\r\n    return Buffer.concat([\r\n      Parse(q.statement.string, q.parameters, q.statement.types),\r\n      DescribeUnnamed,\r\n      prepared(q)\r\n    ])\r\n  }\r\n\r\n  function build(q) {\r\n    const parameters = []\r\n        , types = []\r\n\r\n    const string = stringify(q, q.strings[0], q.args[0], parameters, types, options)\r\n\r\n    !q.tagged && q.args.forEach(x => handleValue(x, parameters, types, options))\r\n\r\n    q.prepare = options.prepare && ('prepare' in q.options ? q.options.prepare : true)\r\n    q.string = string\r\n    q.signature = q.prepare && types + string\r\n    q.onlyDescribe && (delete statements[q.signature])\r\n    q.parameters = q.parameters || parameters\r\n    q.prepared = q.prepare && q.signature in statements\r\n    q.describeFirst = q.onlyDescribe || (parameters.length && !q.prepared)\r\n    q.statement = q.prepared\r\n      ? statements[q.signature]\r\n      : { string, types, name: q.prepare ? statementId + statementCount++ : '' }\r\n\r\n    typeof options.debug === 'function' && options.debug(id, string, parameters, types)\r\n  }\r\n\r\n  function write(x, fn) {\r\n    chunk = chunk ? Buffer.concat([chunk, x]) : Buffer.from(x)\r\n    if (fn || chunk.length >= 1024)\r\n      return nextWrite(fn)\r\n    nextWriteTimer === null && (nextWriteTimer = setImmediate(nextWrite))\r\n    return true\r\n  }\r\n\r\n  function nextWrite(fn) {\r\n    const x = socket.write(chunk, fn)\r\n    nextWriteTimer !== null && clearImmediate(nextWriteTimer)\r\n    chunk = nextWriteTimer = null\r\n    return x\r\n  }\r\n\r\n  function connectTimedOut() {\r\n    errored(Errors.connection('CONNECT_TIMEOUT', options, socket))\r\n    socket.destroy()\r\n  }\r\n\r\n  async function secure() {\r\n    write(SSLRequest)\r\n    const canSSL = await new Promise(r => socket.once('data', x => r(x[0] === 83))) // S\r\n\r\n    if (!canSSL && ssl === 'prefer')\r\n      return connected()\r\n\r\n    socket.removeAllListeners()\r\n    socket = tls.connect({\r\n      socket,\r\n      servername: net.isIP(socket.host) ? undefined : socket.host,\r\n      ...(ssl === 'require' || ssl === 'allow' || ssl === 'prefer'\r\n        ? { rejectUnauthorized: false }\r\n        : ssl === 'verify-full'\r\n          ? {}\r\n          : typeof ssl === 'object'\r\n            ? ssl\r\n            : {}\r\n      )\r\n    })\r\n    socket.on('secureConnect', connected)\r\n    socket.on('error', error)\r\n    socket.on('close', closed)\r\n    socket.on('drain', drain)\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function drain() {\r\n    !query && onopen(connection)\r\n  }\r\n\r\n  function data(x) {\r\n    if (incomings) {\r\n      incomings.push(x)\r\n      remaining -= x.length\r\n      if (remaining >= 0)\r\n        return\r\n    }\r\n\r\n    incoming = incomings\r\n      ? Buffer.concat(incomings, length - remaining)\r\n      : incoming.length === 0\r\n        ? x\r\n        : Buffer.concat([incoming, x], incoming.length + x.length)\r\n\r\n    while (incoming.length > 4) {\r\n      length = incoming.readUInt32BE(1)\r\n      if (length >= incoming.length) {\r\n        remaining = length - incoming.length\r\n        incomings = [incoming]\r\n        break\r\n      }\r\n\r\n      try {\r\n        handle(incoming.subarray(0, length + 1))\r\n      } catch (e) {\r\n        query && (query.cursorFn || query.describeFirst) && write(Sync)\r\n        errored(e)\r\n      }\r\n      incoming = incoming.subarray(length + 1)\r\n      remaining = 0\r\n      incomings = null\r\n    }\r\n  }\r\n\r\n  async function connect() {\r\n    terminated = false\r\n    backendParameters = {}\r\n    socket || (socket = await createSocket())\r\n\r\n    if (!socket)\r\n      return\r\n\r\n    connectTimer.start()\r\n\r\n    if (options.socket)\r\n      return ssl ? secure() : connected()\r\n\r\n    socket.on('connect', ssl ? secure : connected)\r\n\r\n    if (options.path)\r\n      return socket.connect(options.path)\r\n\r\n    socket.ssl = ssl\r\n    socket.connect(port[hostIndex], host[hostIndex])\r\n    socket.host = host[hostIndex]\r\n    socket.port = port[hostIndex]\r\n\r\n    hostIndex = (hostIndex + 1) % port.length\r\n  }\r\n\r\n  function reconnect() {\r\n    setTimeout(connect, closedDate ? closedDate + delay - performance.now() : 0)\r\n  }\r\n\r\n  function connected() {\r\n    try {\r\n      statements = {}\r\n      needsTypes = options.fetch_types\r\n      statementId = Math.random().toString(36).slice(2)\r\n      statementCount = 1\r\n      lifeTimer.start()\r\n      socket.on('data', data)\r\n      keep_alive && socket.setKeepAlive && socket.setKeepAlive(true, 1000 * keep_alive)\r\n      const s = StartupMessage()\r\n      write(s)\r\n    } catch (err) {\r\n      error(err)\r\n    }\r\n  }\r\n\r\n  function error(err) {\r\n    if (connection.queue === queues.connecting && options.host[retries + 1])\r\n      return\r\n\r\n    errored(err)\r\n    while (sent.length)\r\n      queryError(sent.shift(), err)\r\n  }\r\n\r\n  function errored(err) {\r\n    stream && (stream.destroy(err), stream = null)\r\n    query && queryError(query, err)\r\n    initial && (queryError(initial, err), initial = null)\r\n  }\r\n\r\n  function queryError(query, err) {\r\n    Object.defineProperties(err, {\r\n      stack: { value: err.stack + query.origin.replace(/.*\\n/, '\\n'), enumerable: options.debug },\r\n      query: { value: query.string, enumerable: options.debug },\r\n      parameters: { value: query.parameters, enumerable: options.debug },\r\n      args: { value: query.args, enumerable: options.debug },\r\n      types: { value: query.statement && query.statement.types, enumerable: options.debug }\r\n    })\r\n    query.reject(err)\r\n  }\r\n\r\n  function end() {\r\n    return ending || (\r\n      !connection.reserved && onend(connection),\r\n      !connection.reserved && !initial && !query && sent.length === 0\r\n        ? (terminate(), new Promise(r => socket && socket.readyState !== 'closed' ? socket.once('close', r) : r()))\r\n        : ending = new Promise(r => ended = r)\r\n    )\r\n  }\r\n\r\n  function terminate() {\r\n    terminated = true\r\n    if (stream || query || initial || sent.length)\r\n      error(Errors.connection('CONNECTION_DESTROYED', options))\r\n\r\n    clearImmediate(nextWriteTimer)\r\n    if (socket) {\r\n      socket.removeListener('data', data)\r\n      socket.removeListener('connect', connected)\r\n      socket.readyState === 'open' && socket.end(b().X().end())\r\n    }\r\n    ended && (ended(), ending = ended = null)\r\n  }\r\n\r\n  async function closed(hadError) {\r\n    incoming = Buffer.alloc(0)\r\n    remaining = 0\r\n    incomings = null\r\n    clearImmediate(nextWriteTimer)\r\n    socket.removeListener('data', data)\r\n    socket.removeListener('connect', connected)\r\n    idleTimer.cancel()\r\n    lifeTimer.cancel()\r\n    connectTimer.cancel()\r\n\r\n    socket.removeAllListeners()\r\n    socket = null\r\n\r\n    if (initial)\r\n      return reconnect()\r\n\r\n    !hadError && (query || sent.length) && error(Errors.connection('CONNECTION_CLOSED', options, socket))\r\n    closedDate = performance.now()\r\n    hadError && options.shared.retries++\r\n    delay = (typeof backoff === 'function' ? backoff(options.shared.retries) : backoff) * 1000\r\n    onclose(connection, Errors.connection('CONNECTION_CLOSED', options, socket))\r\n  }\r\n\r\n  /* Handlers */\r\n  function handle(xs, x = xs[0]) {\r\n    (\r\n      x === 68 ? DataRow :                   // D\r\n      x === 100 ? CopyData :                 // d\r\n      x === 65 ? NotificationResponse :      // A\r\n      x === 83 ? ParameterStatus :           // S\r\n      x === 90 ? ReadyForQuery :             // Z\r\n      x === 67 ? CommandComplete :           // C\r\n      x === 50 ? BindComplete :              // 2\r\n      x === 49 ? ParseComplete :             // 1\r\n      x === 116 ? ParameterDescription :     // t\r\n      x === 84 ? RowDescription :            // T\r\n      x === 82 ? Authentication :            // R\r\n      x === 110 ? NoData :                   // n\r\n      x === 75 ? BackendKeyData :            // K\r\n      x === 69 ? ErrorResponse :             // E\r\n      x === 115 ? PortalSuspended :          // s\r\n      x === 51 ? CloseComplete :             // 3\r\n      x === 71 ? CopyInResponse :            // G\r\n      x === 78 ? NoticeResponse :            // N\r\n      x === 72 ? CopyOutResponse :           // H\r\n      x === 99 ? CopyDone :                  // c\r\n      x === 73 ? EmptyQueryResponse :        // I\r\n      x === 86 ? FunctionCallResponse :      // V\r\n      x === 118 ? NegotiateProtocolVersion : // v\r\n      x === 87 ? CopyBothResponse :          // W\r\n      /* c8 ignore next */\r\n      UnknownMessage\r\n    )(xs)\r\n  }\r\n\r\n  function DataRow(x) {\r\n    let index = 7\r\n    let length\r\n    let column\r\n    let value\r\n\r\n    const row = query.isRaw ? new Array(query.statement.columns.length) : {}\r\n    for (let i = 0; i < query.statement.columns.length; i++) {\r\n      column = query.statement.columns[i]\r\n      length = x.readInt32BE(index)\r\n      index += 4\r\n\r\n      value = length === -1\r\n        ? null\r\n        : query.isRaw === true\r\n          ? x.subarray(index, index += length)\r\n          : column.parser === undefined\r\n            ? x.toString('utf8', index, index += length)\r\n            : column.parser.array === true\r\n              ? column.parser(x.toString('utf8', index + 1, index += length))\r\n              : column.parser(x.toString('utf8', index, index += length))\r\n\r\n      query.isRaw\r\n        ? (row[i] = query.isRaw === true\r\n          ? value\r\n          : transform.value.from ? transform.value.from(value, column) : value)\r\n        : (row[column.name] = transform.value.from ? transform.value.from(value, column) : value)\r\n    }\r\n\r\n    query.forEachFn\r\n      ? query.forEachFn(transform.row.from ? transform.row.from(row) : row, result)\r\n      : (result[rows++] = transform.row.from ? transform.row.from(row) : row)\r\n  }\r\n\r\n  function ParameterStatus(x) {\r\n    const [k, v] = x.toString('utf8', 5, x.length - 1).split(b.N)\r\n    backendParameters[k] = v\r\n    if (options.parameters[k] !== v) {\r\n      options.parameters[k] = v\r\n      onparameter && onparameter(k, v)\r\n    }\r\n  }\r\n\r\n  function ReadyForQuery(x) {\r\n    query && query.options.simple && query.resolve(results || result)\r\n    query = results = null\r\n    result = new Result()\r\n    connectTimer.cancel()\r\n\r\n    if (initial) {\r\n      if (target_session_attrs) {\r\n        if (!backendParameters.in_hot_standby || !backendParameters.default_transaction_read_only)\r\n          return fetchState()\r\n        else if (tryNext(target_session_attrs, backendParameters))\r\n          return terminate()\r\n      }\r\n\r\n      if (needsTypes) {\r\n        initial === true && (initial = null)\r\n        return fetchArrayTypes()\r\n      }\r\n\r\n      initial !== true && execute(initial)\r\n      options.shared.retries = retries = 0\r\n      initial = null\r\n      return\r\n    }\r\n\r\n    while (sent.length && (query = sent.shift()) && (query.active = true, query.cancelled))\r\n      Connection(options).cancel(query.state, query.cancelled.resolve, query.cancelled.reject)\r\n\r\n    if (query)\r\n      return // Consider opening if able and sent.length < 50\r\n\r\n    connection.reserved\r\n      ? !connection.reserved.release && x[5] === 73 // I\r\n        ? ending\r\n          ? terminate()\r\n          : (connection.reserved = null, onopen(connection))\r\n        : connection.reserved()\r\n      : ending\r\n        ? terminate()\r\n        : onopen(connection)\r\n  }\r\n\r\n  function CommandComplete(x) {\r\n    rows = 0\r\n\r\n    for (let i = x.length - 1; i > 0; i--) {\r\n      if (x[i] === 32 && x[i + 1] < 58 && result.count === null)\r\n        result.count = +x.toString('utf8', i + 1, x.length - 1)\r\n      if (x[i - 1] >= 65) {\r\n        result.command = x.toString('utf8', 5, i)\r\n        result.state = backend\r\n        break\r\n      }\r\n    }\r\n\r\n    final && (final(), final = null)\r\n\r\n    if (result.command === 'BEGIN' && max !== 1 && !connection.reserved)\r\n      return errored(Errors.generic('UNSAFE_TRANSACTION', 'Only use sql.begin, sql.reserved or max: 1'))\r\n\r\n    if (query.options.simple)\r\n      return BindComplete()\r\n\r\n    if (query.cursorFn) {\r\n      result.count && query.cursorFn(result)\r\n      write(Sync)\r\n    }\r\n\r\n    query.resolve(result)\r\n  }\r\n\r\n  function ParseComplete() {\r\n    query.parsing = false\r\n  }\r\n\r\n  function BindComplete() {\r\n    !result.statement && (result.statement = query.statement)\r\n    result.columns = query.statement.columns\r\n  }\r\n\r\n  function ParameterDescription(x) {\r\n    const length = x.readUInt16BE(5)\r\n\r\n    for (let i = 0; i < length; ++i)\r\n      !query.statement.types[i] && (query.statement.types[i] = x.readUInt32BE(7 + i * 4))\r\n\r\n    query.prepare && (statements[query.signature] = query.statement)\r\n    query.describeFirst && !query.onlyDescribe && (write(prepared(query)), query.describeFirst = false)\r\n  }\r\n\r\n  function RowDescription(x) {\r\n    if (result.command) {\r\n      results = results || [result]\r\n      results.push(result = new Result())\r\n      result.count = null\r\n      query.statement.columns = null\r\n    }\r\n\r\n    const length = x.readUInt16BE(5)\r\n    let index = 7\r\n    let start\r\n\r\n    query.statement.columns = Array(length)\r\n\r\n    for (let i = 0; i < length; ++i) {\r\n      start = index\r\n      while (x[index++] !== 0);\r\n      const table = x.readUInt32BE(index)\r\n      const number = x.readUInt16BE(index + 4)\r\n      const type = x.readUInt32BE(index + 6)\r\n      query.statement.columns[i] = {\r\n        name: transform.column.from\r\n          ? transform.column.from(x.toString('utf8', start, index - 1))\r\n          : x.toString('utf8', start, index - 1),\r\n        parser: parsers[type],\r\n        table,\r\n        number,\r\n        type\r\n      }\r\n      index += 18\r\n    }\r\n\r\n    result.statement = query.statement\r\n    if (query.onlyDescribe)\r\n      return (query.resolve(query.statement), write(Sync))\r\n  }\r\n\r\n  async function Authentication(x, type = x.readUInt32BE(5)) {\r\n    (\r\n      type === 3 ? AuthenticationCleartextPassword :\r\n      type === 5 ? AuthenticationMD5Password :\r\n      type === 10 ? SASL :\r\n      type === 11 ? SASLContinue :\r\n      type === 12 ? SASLFinal :\r\n      type !== 0 ? UnknownAuth :\r\n      noop\r\n    )(x, type)\r\n  }\r\n\r\n  /* c8 ignore next 5 */\r\n  async function AuthenticationCleartextPassword() {\r\n    const payload = await Pass()\r\n    write(\r\n      b().p().str(payload).z(1).end()\r\n    )\r\n  }\r\n\r\n  async function AuthenticationMD5Password(x) {\r\n    const payload = 'md5' + (\r\n      await md5(\r\n        Buffer.concat([\r\n          Buffer.from(await md5((await Pass()) + user)),\r\n          x.subarray(9)\r\n        ])\r\n      )\r\n    )\r\n    write(\r\n      b().p().str(payload).z(1).end()\r\n    )\r\n  }\r\n\r\n  async function SASL() {\r\n    nonce = (await crypto.randomBytes(18)).toString('base64')\r\n    b().p().str('SCRAM-SHA-256' + b.N)\r\n    const i = b.i\r\n    write(b.inc(4).str('n,,n=*,r=' + nonce).i32(b.i - i - 4, i).end())\r\n  }\r\n\r\n  async function SASLContinue(x) {\r\n    const res = x.toString('utf8', 9).split(',').reduce((acc, x) => (acc[x[0]] = x.slice(2), acc), {})\r\n\r\n    const saltedPassword = await crypto.pbkdf2Sync(\r\n      await Pass(),\r\n      Buffer.from(res.s, 'base64'),\r\n      parseInt(res.i), 32,\r\n      'sha256'\r\n    )\r\n\r\n    const clientKey = await hmac(saltedPassword, 'Client Key')\r\n\r\n    const auth = 'n=*,r=' + nonce + ','\r\n               + 'r=' + res.r + ',s=' + res.s + ',i=' + res.i\r\n               + ',c=biws,r=' + res.r\r\n\r\n    serverSignature = (await hmac(await hmac(saltedPassword, 'Server Key'), auth)).toString('base64')\r\n\r\n    const payload = 'c=biws,r=' + res.r + ',p=' + xor(\r\n      clientKey, Buffer.from(await hmac(await sha256(clientKey), auth))\r\n    ).toString('base64')\r\n\r\n    write(\r\n      b().p().str(payload).end()\r\n    )\r\n  }\r\n\r\n  function SASLFinal(x) {\r\n    if (x.toString('utf8', 9).split(b.N, 1)[0].slice(2) === serverSignature)\r\n      return\r\n    /* c8 ignore next 5 */\r\n    errored(Errors.generic('SASL_SIGNATURE_MISMATCH', 'The server did not return the correct signature'))\r\n    socket.destroy()\r\n  }\r\n\r\n  function Pass() {\r\n    return Promise.resolve(typeof options.pass === 'function'\r\n      ? options.pass()\r\n      : options.pass\r\n    )\r\n  }\r\n\r\n  function NoData() {\r\n    result.statement = query.statement\r\n    result.statement.columns = []\r\n    if (query.onlyDescribe)\r\n      return (query.resolve(query.statement), write(Sync))\r\n  }\r\n\r\n  function BackendKeyData(x) {\r\n    backend.pid = x.readUInt32BE(5)\r\n    backend.secret = x.readUInt32BE(9)\r\n  }\r\n\r\n  async function fetchArrayTypes() {\r\n    needsTypes = false\r\n    const types = await new Query([`\r\n      select b.oid, b.typarray\r\n      from pg_catalog.pg_type a\r\n      left join pg_catalog.pg_type b on b.oid = a.typelem\r\n      where a.typcategory = 'A'\r\n      group by b.oid, b.typarray\r\n      order by b.oid\r\n    `], [], execute)\r\n    types.forEach(({ oid, typarray }) => addArrayType(oid, typarray))\r\n  }\r\n\r\n  function addArrayType(oid, typarray) {\r\n    if (!!options.parsers[typarray] && !!options.serializers[typarray]) return\r\n    const parser = options.parsers[oid]\r\n    options.shared.typeArrayMap[oid] = typarray\r\n    options.parsers[typarray] = (xs) => arrayParser(xs, parser, typarray)\r\n    options.parsers[typarray].array = true\r\n    options.serializers[typarray] = (xs) => arraySerializer(xs, options.serializers[oid], options, typarray)\r\n  }\r\n\r\n  function tryNext(x, xs) {\r\n    return (\r\n      (x === 'read-write' && xs.default_transaction_read_only === 'on') ||\r\n      (x === 'read-only' && xs.default_transaction_read_only === 'off') ||\r\n      (x === 'primary' && xs.in_hot_standby === 'on') ||\r\n      (x === 'standby' && xs.in_hot_standby === 'off') ||\r\n      (x === 'prefer-standby' && xs.in_hot_standby === 'off' && options.host[retries])\r\n    )\r\n  }\r\n\r\n  function fetchState() {\r\n    const query = new Query([`\r\n      show transaction_read_only;\r\n      select pg_catalog.pg_is_in_recovery()\r\n    `], [], execute, null, { simple: true })\r\n    query.resolve = ([[a], [b]]) => {\r\n      backendParameters.default_transaction_read_only = a.transaction_read_only\r\n      backendParameters.in_hot_standby = b.pg_is_in_recovery ? 'on' : 'off'\r\n    }\r\n    query.execute()\r\n  }\r\n\r\n  function ErrorResponse(x) {\r\n    query && (query.cursorFn || query.describeFirst) && write(Sync)\r\n    const error = Errors.postgres(parseError(x))\r\n    query && query.retried\r\n      ? errored(query.retried)\r\n      : query && query.prepared && retryRoutines.has(error.routine)\r\n        ? retry(query, error)\r\n        : errored(error)\r\n  }\r\n\r\n  function retry(q, error) {\r\n    delete statements[q.signature]\r\n    q.retried = error\r\n    execute(q)\r\n  }\r\n\r\n  function NotificationResponse(x) {\r\n    if (!onnotify)\r\n      return\r\n\r\n    let index = 9\r\n    while (x[index++] !== 0);\r\n    onnotify(\r\n      x.toString('utf8', 9, index - 1),\r\n      x.toString('utf8', index, x.length - 1)\r\n    )\r\n  }\r\n\r\n  async function PortalSuspended() {\r\n    try {\r\n      const x = await Promise.resolve(query.cursorFn(result))\r\n      rows = 0\r\n      x === CLOSE\r\n        ? write(Close(query.portal))\r\n        : (result = new Result(), write(Execute('', query.cursorRows)))\r\n    } catch (err) {\r\n      write(Sync)\r\n      query.reject(err)\r\n    }\r\n  }\r\n\r\n  function CloseComplete() {\r\n    result.count && query.cursorFn(result)\r\n    query.resolve(result)\r\n  }\r\n\r\n  function CopyInResponse() {\r\n    stream = new Stream.Writable({\r\n      autoDestroy: true,\r\n      write(chunk, encoding, callback) {\r\n        socket.write(b().d().raw(chunk).end(), callback)\r\n      },\r\n      destroy(error, callback) {\r\n        callback(error)\r\n        socket.write(b().f().str(error + b.N).end())\r\n        stream = null\r\n      },\r\n      final(callback) {\r\n        socket.write(b().c().end())\r\n        final = callback\r\n      }\r\n    })\r\n    query.resolve(stream)\r\n  }\r\n\r\n  function CopyOutResponse() {\r\n    stream = new Stream.Readable({\r\n      read() { socket.resume() }\r\n    })\r\n    query.resolve(stream)\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function CopyBothResponse() {\r\n    stream = new Stream.Duplex({\r\n      autoDestroy: true,\r\n      read() { socket.resume() },\r\n      /* c8 ignore next 11 */\r\n      write(chunk, encoding, callback) {\r\n        socket.write(b().d().raw(chunk).end(), callback)\r\n      },\r\n      destroy(error, callback) {\r\n        callback(error)\r\n        socket.write(b().f().str(error + b.N).end())\r\n        stream = null\r\n      },\r\n      final(callback) {\r\n        socket.write(b().c().end())\r\n        final = callback\r\n      }\r\n    })\r\n    query.resolve(stream)\r\n  }\r\n\r\n  function CopyData(x) {\r\n    stream && (stream.push(x.subarray(5)) || socket.pause())\r\n  }\r\n\r\n  function CopyDone() {\r\n    stream && stream.push(null)\r\n    stream = null\r\n  }\r\n\r\n  function NoticeResponse(x) {\r\n    onnotice\r\n      ? onnotice(parseError(x))\r\n      : console.log(parseError(x)) // eslint-disable-line\r\n\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function EmptyQueryResponse() {\r\n    /* noop */\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function FunctionCallResponse() {\r\n    errored(Errors.notSupported('FunctionCallResponse'))\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function NegotiateProtocolVersion() {\r\n    errored(Errors.notSupported('NegotiateProtocolVersion'))\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function UnknownMessage(x) {\r\n    console.error('Postgres.js : Unknown Message:', x[0]) // eslint-disable-line\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function UnknownAuth(x, type) {\r\n    console.error('Postgres.js : Unknown Auth:', type) // eslint-disable-line\r\n  }\r\n\r\n  /* Messages */\r\n  function Bind(parameters, types, statement = '', portal = '') {\r\n    let prev\r\n      , type\r\n\r\n    b().B().str(portal + b.N).str(statement + b.N).i16(0).i16(parameters.length)\r\n\r\n    parameters.forEach((x, i) => {\r\n      if (x === null)\r\n        return b.i32(0xFFFFFFFF)\r\n\r\n      type = types[i]\r\n      parameters[i] = x = type in options.serializers\r\n        ? options.serializers[type](x)\r\n        : '' + x\r\n\r\n      prev = b.i\r\n      b.inc(4).str(x).i32(b.i - prev - 4, prev)\r\n    })\r\n\r\n    b.i16(0)\r\n\r\n    return b.end()\r\n  }\r\n\r\n  function Parse(str, parameters, types, name = '') {\r\n    b().P().str(name + b.N).str(str + b.N).i16(parameters.length)\r\n    parameters.forEach((x, i) => b.i32(types[i] || 0))\r\n    return b.end()\r\n  }\r\n\r\n  function Describe(x, name = '') {\r\n    return b().D().str(x).str(name + b.N).end()\r\n  }\r\n\r\n  function Execute(portal = '', rows = 0) {\r\n    return Buffer.concat([\r\n      b().E().str(portal + b.N).i32(rows).end(),\r\n      Flush\r\n    ])\r\n  }\r\n\r\n  function Close(portal = '') {\r\n    return Buffer.concat([\r\n      b().C().str('P').str(portal + b.N).end(),\r\n      b().S().end()\r\n    ])\r\n  }\r\n\r\n  function StartupMessage() {\r\n    return cancelMessage || b().inc(4).i16(3).z(2).str(\r\n      Object.entries(Object.assign({\r\n        user,\r\n        database,\r\n        client_encoding: 'UTF8'\r\n      },\r\n        options.connection\r\n      )).filter(([, v]) => v).map(([k, v]) => k + b.N + v).join(b.N)\r\n    ).z(2).end(0)\r\n  }\r\n\r\n}\r\n\r\nfunction parseError(x) {\r\n  const error = {}\r\n  let start = 5\r\n  for (let i = 5; i < x.length - 1; i++) {\r\n    if (x[i] === 0) {\r\n      error[errorFields[x[start]]] = x.toString('utf8', start + 1, i)\r\n      start = i + 1\r\n    }\r\n  }\r\n  return error\r\n}\r\n\r\nfunction md5(x) {\r\n  return crypto.createHash('md5').update(x).digest('hex')\r\n}\r\n\r\nfunction hmac(key, x) {\r\n  return crypto.createHmac('sha256', key).update(x).digest()\r\n}\r\n\r\nfunction sha256(x) {\r\n  return crypto.createHash('sha256').update(x).digest()\r\n}\r\n\r\nfunction xor(a, b) {\r\n  const length = Math.max(a.length, b.length)\r\n  const buffer = Buffer.allocUnsafe(length)\r\n  for (let i = 0; i < length; i++)\r\n    buffer[i] = a[i] ^ b[i]\r\n  return buffer\r\n}\r\n\r\nfunction timer(fn, seconds) {\r\n  seconds = typeof seconds === 'function' ? seconds() : seconds\r\n  if (!seconds)\r\n    return { cancel: noop, start: noop }\r\n\r\n  let timer\r\n  return {\r\n    cancel() {\r\n      timer && (clearTimeout(timer), timer = null)\r\n    },\r\n    start() {\r\n      timer && clearTimeout(timer)\r\n      timer = setTimeout(done, seconds * 1000, arguments)\r\n    }\r\n  }\r\n\r\n  function done(args) {\r\n    fn.apply(null, args)\r\n    timer = null\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/postgres/cjs/src/connection.js b/node_modules/postgres/cjs/src/connection.js
--- a/node_modules/postgres/cjs/src/connection.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/postgres/cjs/src/connection.js	(date 1753913035205)
@@ -109,7 +109,7 @@
     queue: queues.closed,
     idleTimer,
     connect(query) {
-      initial = query || true
+      initial = query
       reconnect()
     },
     terminate,
@@ -293,7 +293,7 @@
     if (incomings) {
       incomings.push(x)
       remaining -= x.length
-      if (remaining >= 0)
+      if (remaining > 0)
         return
     }
 
@@ -385,7 +385,13 @@
   }
 
   function queryError(query, err) {
-    Object.defineProperties(err, {
+    if (query.reserve)
+      return query.reject(err)
+
+    if (!err || typeof err !== 'object')
+      err = new Error(err)
+
+    'query' in err || 'parameters' in err || Object.defineProperties(err, {
       stack: { value: err.stack + query.origin.replace(/.*\n/, '\n'), enumerable: options.debug },
       query: { value: query.string, enumerable: options.debug },
       parameters: { value: query.parameters, enumerable: options.debug },
@@ -532,11 +538,11 @@
       }
 
       if (needsTypes) {
-        initial === true && (initial = null)
+        initial.reserve && (initial = null)
         return fetchArrayTypes()
       }
 
-      initial !== true && execute(initial)
+      initial && !initial.reserve && execute(initial)
       options.shared.retries = retries = 0
       initial = null
       return
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"dependencies\": {\r\n    \"bcryptjs\": \"^2.4.3\",\r\n    \"body-parser\": \"^1.20.2\",\r\n    \"cookie-parser\": \"^1.4.6\",\r\n    \"cors\": \"^2.8.5\",\r\n    \"dotenv\": \"^16.4.5\",\r\n    \"express\": \"^4.19.2\",\r\n    \"http-status-codes\": \"^2.3.0\",\r\n    \"jsonwebtoken\": \"^9.0.2\",\r\n    \"pg\": \"^8.11.5\",\r\n    \"postgres\": \"^3.4.4\",\r\n    \"postgresql-client\": \"^2.11.0\",\r\n    \"router\": \"^1.3.8\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"nodemon\": \"^3.1.0\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package.json b/package.json
--- a/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/package.json	(date 1754070072836)
@@ -1,5 +1,6 @@
 {
   "dependencies": {
+    "bcrypt": "^6.0.0",
     "bcryptjs": "^2.4.3",
     "body-parser": "^1.20.2",
     "cookie-parser": "^1.4.6",
@@ -8,12 +9,13 @@
     "express": "^4.19.2",
     "http-status-codes": "^2.3.0",
     "jsonwebtoken": "^9.0.2",
-    "pg": "^8.11.5",
+    "multer": "^1.4.5-lts.1",
+    "pg": "^8.16.3",
     "postgres": "^3.4.4",
     "postgresql-client": "^2.11.0",
     "router": "^1.3.8"
   },
   "devDependencies": {
-    "nodemon": "^3.1.0"
+    "nodemon": "^3.1.10"
   }
 }
Index: node_modules/pg-protocol/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"pg-protocol\",\r\n  \"version\": \"1.6.1\",\r\n  \"description\": \"The postgres client/server binary protocol, implemented in TypeScript\",\r\n  \"main\": \"dist/index.js\",\r\n  \"types\": \"dist/index.d.ts\",\r\n  \"license\": \"MIT\",\r\n  \"devDependencies\": {\r\n    \"@types/chai\": \"^4.2.7\",\r\n    \"@types/mocha\": \"^5.2.7\",\r\n    \"@types/node\": \"^12.12.21\",\r\n    \"chai\": \"^4.2.0\",\r\n    \"chunky\": \"^0.0.0\",\r\n    \"mocha\": \"^7.1.2\",\r\n    \"ts-node\": \"^8.5.4\",\r\n    \"typescript\": \"^4.0.3\"\r\n  },\r\n  \"scripts\": {\r\n    \"test\": \"mocha dist/**/*.test.js\",\r\n    \"build\": \"tsc\",\r\n    \"build:watch\": \"tsc --watch\",\r\n    \"prepublish\": \"yarn build\",\r\n    \"pretest\": \"yarn build\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git://github.com/brianc/node-postgres.git\",\r\n    \"directory\": \"packages/pg-protocol\"\r\n  },\r\n  \"files\": [\r\n    \"/dist/*{js,ts,map}\",\r\n    \"/src\"\r\n  ],\r\n  \"gitHead\": \"b03c071d2d15af259e1e008e9628191c865e58fa\"\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/package.json b/node_modules/pg-protocol/package.json
--- a/node_modules/pg-protocol/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/package.json	(date 1753913035305)
@@ -1,17 +1,26 @@
 {
   "name": "pg-protocol",
-  "version": "1.6.1",
+  "version": "1.10.3",
   "description": "The postgres client/server binary protocol, implemented in TypeScript",
   "main": "dist/index.js",
   "types": "dist/index.d.ts",
+  "exports": {
+    ".": {
+      "import": "./esm/index.js",
+      "require": "./dist/index.js",
+      "default": "./dist/index.js"
+    },
+    "./dist/*": "./dist/*.js",
+    "./dist/*.js": "./dist/*.js"
+  },
   "license": "MIT",
   "devDependencies": {
     "@types/chai": "^4.2.7",
-    "@types/mocha": "^5.2.7",
+    "@types/mocha": "^10.0.7",
     "@types/node": "^12.12.21",
     "chai": "^4.2.0",
     "chunky": "^0.0.0",
-    "mocha": "^7.1.2",
+    "mocha": "^10.5.2",
     "ts-node": "^8.5.4",
     "typescript": "^4.0.3"
   },
@@ -29,7 +38,8 @@
   },
   "files": [
     "/dist/*{js,ts,map}",
-    "/src"
+    "/src",
+    "/esm"
   ],
-  "gitHead": "b03c071d2d15af259e1e008e9628191c865e58fa"
+  "gitHead": "8f8e7315e8f7c1bb01e98fdb41c8c92585510782"
 }
Index: package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"hotel-reservation\",\r\n  \"lockfileVersion\": 3,\r\n  \"requires\": true,\r\n  \"packages\": {\r\n    \"\": {\r\n      \"dependencies\": {\r\n        \"bcryptjs\": \"^2.4.3\",\r\n        \"body-parser\": \"^1.20.2\",\r\n        \"cookie-parser\": \"^1.4.6\",\r\n        \"cors\": \"^2.8.5\",\r\n        \"dotenv\": \"^16.4.5\",\r\n        \"express\": \"^4.19.2\",\r\n        \"http-status-codes\": \"^2.3.0\",\r\n        \"jsonwebtoken\": \"^9.0.2\",\r\n        \"pg\": \"^8.11.5\",\r\n        \"postgres\": \"^3.4.4\",\r\n        \"postgresql-client\": \"^2.11.0\",\r\n        \"router\": \"^1.3.8\"\r\n      },\r\n      \"devDependencies\": {\r\n        \"nodemon\": \"^3.1.0\"\r\n      }\r\n    },\r\n    \"node_modules/abbrev\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==\",\r\n      \"dev\": true\r\n    },\r\n    \"node_modules/accepts\": {\r\n      \"version\": \"1.3.8\",\r\n      \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz\",\r\n      \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\r\n      \"dependencies\": {\r\n        \"mime-types\": \"~2.1.34\",\r\n        \"negotiator\": \"0.6.3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/anymatch\": {\r\n      \"version\": \"3.1.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\r\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"normalize-path\": \"^3.0.0\",\r\n        \"picomatch\": \"^2.0.4\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 8\"\r\n      }\r\n    },\r\n    \"node_modules/array-flatten\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==\"\r\n    },\r\n    \"node_modules/balanced-match\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\r\n      \"dev\": true\r\n    },\r\n    \"node_modules/bcryptjs\": {\r\n      \"version\": \"2.4.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/bcryptjs/-/bcryptjs-2.4.3.tgz\",\r\n      \"integrity\": \"sha512-V/Hy/X9Vt7f3BbPJEi8BdVFMByHi+jNXrYkW3huaybV/kQ0KJg0Y6PkEMbn+zeT+i+SiKZ/HMqJGIIt4LZDqNQ==\"\r\n    },\r\n    \"node_modules/binary-extensions\": {\r\n      \"version\": \"2.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz\",\r\n      \"integrity\": \"sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==\",\r\n      \"dev\": true,\r\n      \"engines\": {\r\n        \"node\": \">=8\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\r\n      }\r\n    },\r\n    \"node_modules/body-parser\": {\r\n      \"version\": \"1.20.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.20.2.tgz\",\r\n      \"integrity\": \"sha512-ml9pReCu3M61kGlqoTm2umSXTlRTuGTx0bfYj+uIUKKYycG5NtSbeetV3faSU6R7ajOPw0g/J1PvK4qNy7s5bA==\",\r\n      \"dependencies\": {\r\n        \"bytes\": \"3.1.2\",\r\n        \"content-type\": \"~1.0.5\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"2.0.0\",\r\n        \"destroy\": \"1.2.0\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"iconv-lite\": \"0.4.24\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"qs\": \"6.11.0\",\r\n        \"raw-body\": \"2.5.2\",\r\n        \"type-is\": \"~1.6.18\",\r\n        \"unpipe\": \"1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\",\r\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\r\n      }\r\n    },\r\n    \"node_modules/brace-expansion\": {\r\n      \"version\": \"1.1.11\",\r\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\r\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"balanced-match\": \"^1.0.0\",\r\n        \"concat-map\": \"0.0.1\"\r\n      }\r\n    },\r\n    \"node_modules/braces\": {\r\n      \"version\": \"3.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.2.tgz\",\r\n      \"integrity\": \"sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"fill-range\": \"^7.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8\"\r\n      }\r\n    },\r\n    \"node_modules/buffer-equal-constant-time\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/buffer-equal-constant-time/-/buffer-equal-constant-time-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA==\"\r\n    },\r\n    \"node_modules/bytes\": {\r\n      \"version\": \"3.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz\",\r\n      \"integrity\": \"sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/call-bind\": {\r\n      \"version\": \"1.0.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.7.tgz\",\r\n      \"integrity\": \"sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==\",\r\n      \"dependencies\": {\r\n        \"es-define-property\": \"^1.0.0\",\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"function-bind\": \"^1.1.2\",\r\n        \"get-intrinsic\": \"^1.2.4\",\r\n        \"set-function-length\": \"^1.2.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/chokidar\": {\r\n      \"version\": \"3.6.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz\",\r\n      \"integrity\": \"sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"anymatch\": \"~3.1.2\",\r\n        \"braces\": \"~3.0.2\",\r\n        \"glob-parent\": \"~5.1.2\",\r\n        \"is-binary-path\": \"~2.1.0\",\r\n        \"is-glob\": \"~4.0.1\",\r\n        \"normalize-path\": \"~3.0.0\",\r\n        \"readdirp\": \"~3.6.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 8.10.0\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://paulmillr.com/funding/\"\r\n      },\r\n      \"optionalDependencies\": {\r\n        \"fsevents\": \"~2.3.2\"\r\n      }\r\n    },\r\n    \"node_modules/concat-map\": {\r\n      \"version\": \"0.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\r\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\r\n      \"dev\": true\r\n    },\r\n    \"node_modules/content-disposition\": {\r\n      \"version\": \"0.5.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz\",\r\n      \"integrity\": \"sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==\",\r\n      \"dependencies\": {\r\n        \"safe-buffer\": \"5.2.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/content-type\": {\r\n      \"version\": \"1.0.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz\",\r\n      \"integrity\": \"sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/cookie\": {\r\n      \"version\": \"0.4.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.4.1.tgz\",\r\n      \"integrity\": \"sha512-ZwrFkGJxUR3EIoXtO+yVE69Eb7KlixbaeAWfBQB9vVsNn/o+Yw69gBWSSDK825hQNdN+wF8zELf3dFNl/kxkUA==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/cookie-parser\": {\r\n      \"version\": \"1.4.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie-parser/-/cookie-parser-1.4.6.tgz\",\r\n      \"integrity\": \"sha512-z3IzaNjdwUC2olLIB5/ITd0/setiaFMLYiZJle7xg5Fe9KWAceil7xszYfHHBtDFYLSgJduS2Ty0P1uJdPDJeA==\",\r\n      \"dependencies\": {\r\n        \"cookie\": \"0.4.1\",\r\n        \"cookie-signature\": \"1.0.6\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8.0\"\r\n      }\r\n    },\r\n    \"node_modules/cookie-signature\": {\r\n      \"version\": \"1.0.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz\",\r\n      \"integrity\": \"sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==\"\r\n    },\r\n    \"node_modules/cors\": {\r\n      \"version\": \"2.8.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/cors/-/cors-2.8.5.tgz\",\r\n      \"integrity\": \"sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==\",\r\n      \"dependencies\": {\r\n        \"object-assign\": \"^4\",\r\n        \"vary\": \"^1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.10\"\r\n      }\r\n    },\r\n    \"node_modules/debug\": {\r\n      \"version\": \"2.6.9\",\r\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\r\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\r\n      \"dependencies\": {\r\n        \"ms\": \"2.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/define-data-property\": {\r\n      \"version\": \"1.1.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz\",\r\n      \"integrity\": \"sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==\",\r\n      \"dependencies\": {\r\n        \"es-define-property\": \"^1.0.0\",\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"gopd\": \"^1.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/depd\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/destroy\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\",\r\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\r\n      }\r\n    },\r\n    \"node_modules/dotenv\": {\r\n      \"version\": \"16.4.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/dotenv/-/dotenv-16.4.5.tgz\",\r\n      \"integrity\": \"sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==\",\r\n      \"engines\": {\r\n        \"node\": \">=12\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://dotenvx.com\"\r\n      }\r\n    },\r\n    \"node_modules/doublylinked\": {\r\n      \"version\": \"2.5.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/doublylinked/-/doublylinked-2.5.4.tgz\",\r\n      \"integrity\": \"sha512-jBCKDnFkEHJRjQvYEl5N9VngRV8ypHgw6a52OK4VN57eV2r2rYvgOx9uABdY78INNoW7S6auULp+KBVm/jfYqw==\",\r\n      \"engines\": {\r\n        \"node\": \">= 10.0\"\r\n      }\r\n    },\r\n    \"node_modules/ecdsa-sig-formatter\": {\r\n      \"version\": \"1.0.11\",\r\n      \"resolved\": \"https://registry.npmjs.org/ecdsa-sig-formatter/-/ecdsa-sig-formatter-1.0.11.tgz\",\r\n      \"integrity\": \"sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==\",\r\n      \"dependencies\": {\r\n        \"safe-buffer\": \"^5.0.1\"\r\n      }\r\n    },\r\n    \"node_modules/ee-first\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==\"\r\n    },\r\n    \"node_modules/encodeurl\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/es-define-property\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz\",\r\n      \"integrity\": \"sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==\",\r\n      \"dependencies\": {\r\n        \"get-intrinsic\": \"^1.2.4\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/es-errors\": {\r\n      \"version\": \"1.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\r\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/escape-html\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==\"\r\n    },\r\n    \"node_modules/etag\": {\r\n      \"version\": \"1.8.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\r\n      \"integrity\": \"sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/express\": {\r\n      \"version\": \"4.19.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/express/-/express-4.19.2.tgz\",\r\n      \"integrity\": \"sha512-5T6nhjsT+EOMzuck8JjBHARTHfMht0POzlA60WV2pMD3gyXw2LZnZ+ueGdNxG+0calOJcWKbpFcuzLZ91YWq9Q==\",\r\n      \"dependencies\": {\r\n        \"accepts\": \"~1.3.8\",\r\n        \"array-flatten\": \"1.1.1\",\r\n        \"body-parser\": \"1.20.2\",\r\n        \"content-disposition\": \"0.5.4\",\r\n        \"content-type\": \"~1.0.4\",\r\n        \"cookie\": \"0.6.0\",\r\n        \"cookie-signature\": \"1.0.6\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"2.0.0\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"etag\": \"~1.8.1\",\r\n        \"finalhandler\": \"1.2.0\",\r\n        \"fresh\": \"0.5.2\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"merge-descriptors\": \"1.0.1\",\r\n        \"methods\": \"~1.1.2\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"parseurl\": \"~1.3.3\",\r\n        \"path-to-regexp\": \"0.1.7\",\r\n        \"proxy-addr\": \"~2.0.7\",\r\n        \"qs\": \"6.11.0\",\r\n        \"range-parser\": \"~1.2.1\",\r\n        \"safe-buffer\": \"5.2.1\",\r\n        \"send\": \"0.18.0\",\r\n        \"serve-static\": \"1.15.0\",\r\n        \"setprototypeof\": \"1.2.0\",\r\n        \"statuses\": \"2.0.1\",\r\n        \"type-is\": \"~1.6.18\",\r\n        \"utils-merge\": \"1.0.1\",\r\n        \"vary\": \"~1.1.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/express/node_modules/cookie\": {\r\n      \"version\": \"0.6.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.6.0.tgz\",\r\n      \"integrity\": \"sha512-U71cyTamuh1CRNCfpGY6to28lxvNwPG4Guz/EVjgf3Jmzv0vlDp1atT9eS5dDjMYHucpHbWns6Lwf3BKz6svdw==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/fill-range\": {\r\n      \"version\": \"7.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz\",\r\n      \"integrity\": \"sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"to-regex-range\": \"^5.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8\"\r\n      }\r\n    },\r\n    \"node_modules/finalhandler\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-5uXcUVftlQMFnWC9qu/svkWv3GTd2PfUhK/3PLkYNAe7FbqJMt3515HaxE6eRL74GdsriiwujiawdaB1BpEISg==\",\r\n      \"dependencies\": {\r\n        \"debug\": \"2.6.9\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"parseurl\": \"~1.3.3\",\r\n        \"statuses\": \"2.0.1\",\r\n        \"unpipe\": \"~1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/forwarded\": {\r\n      \"version\": \"0.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz\",\r\n      \"integrity\": \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/fresh\": {\r\n      \"version\": \"0.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\r\n      \"integrity\": \"sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/fsevents\": {\r\n      \"version\": \"2.3.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz\",\r\n      \"integrity\": \"sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==\",\r\n      \"dev\": true,\r\n      \"hasInstallScript\": true,\r\n      \"optional\": true,\r\n      \"os\": [\r\n        \"darwin\"\r\n      ],\r\n      \"engines\": {\r\n        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/function-bind\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\r\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/get-intrinsic\": {\r\n      \"version\": \"1.2.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz\",\r\n      \"integrity\": \"sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==\",\r\n      \"dependencies\": {\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"function-bind\": \"^1.1.2\",\r\n        \"has-proto\": \"^1.0.1\",\r\n        \"has-symbols\": \"^1.0.3\",\r\n        \"hasown\": \"^2.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/glob-parent\": {\r\n      \"version\": \"5.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\r\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"is-glob\": \"^4.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 6\"\r\n      }\r\n    },\r\n    \"node_modules/gopd\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==\",\r\n      \"dependencies\": {\r\n        \"get-intrinsic\": \"^1.1.3\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/has-flag\": {\r\n      \"version\": \"3.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\r\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\r\n      \"dev\": true,\r\n      \"engines\": {\r\n        \"node\": \">=4\"\r\n      }\r\n    },\r\n    \"node_modules/has-property-descriptors\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==\",\r\n      \"dependencies\": {\r\n        \"es-define-property\": \"^1.0.0\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/has-proto\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/has-symbols\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/hasown\": {\r\n      \"version\": \"2.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\r\n      \"integrity\": \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\",\r\n      \"dependencies\": {\r\n        \"function-bind\": \"^1.1.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/http-errors\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\r\n      \"dependencies\": {\r\n        \"depd\": \"2.0.0\",\r\n        \"inherits\": \"2.0.4\",\r\n        \"setprototypeof\": \"1.2.0\",\r\n        \"statuses\": \"2.0.1\",\r\n        \"toidentifier\": \"1.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/http-status-codes\": {\r\n      \"version\": \"2.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/http-status-codes/-/http-status-codes-2.3.0.tgz\",\r\n      \"integrity\": \"sha512-RJ8XvFvpPM/Dmc5SV+dC4y5PCeOhT3x1Hq0NU3rjGeg5a/CqlhZ7uudknPwZFz4aeAXDcbAyaeP7GAo9lvngtA==\"\r\n    },\r\n    \"node_modules/iconv-lite\": {\r\n      \"version\": \"0.4.24\",\r\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\r\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\r\n      \"dependencies\": {\r\n        \"safer-buffer\": \">= 2.1.2 < 3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/ignore-by-default\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA==\",\r\n      \"dev\": true\r\n    },\r\n    \"node_modules/inherits\": {\r\n      \"version\": \"2.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\r\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\r\n    },\r\n    \"node_modules/ipaddr.js\": {\r\n      \"version\": \"1.9.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz\",\r\n      \"integrity\": \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.10\"\r\n      }\r\n    },\r\n    \"node_modules/is-binary-path\": {\r\n      \"version\": \"2.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\r\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"binary-extensions\": \"^2.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8\"\r\n      }\r\n    },\r\n    \"node_modules/is-extglob\": {\r\n      \"version\": \"2.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\r\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\r\n      \"dev\": true,\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/is-glob\": {\r\n      \"version\": \"4.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\r\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"is-extglob\": \"^2.1.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/is-number\": {\r\n      \"version\": \"7.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\r\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\r\n      \"dev\": true,\r\n      \"engines\": {\r\n        \"node\": \">=0.12.0\"\r\n      }\r\n    },\r\n    \"node_modules/jsonwebtoken\": {\r\n      \"version\": \"9.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-9.0.2.tgz\",\r\n      \"integrity\": \"sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==\",\r\n      \"dependencies\": {\r\n        \"jws\": \"^3.2.2\",\r\n        \"lodash.includes\": \"^4.3.0\",\r\n        \"lodash.isboolean\": \"^3.0.3\",\r\n        \"lodash.isinteger\": \"^4.0.4\",\r\n        \"lodash.isnumber\": \"^3.0.3\",\r\n        \"lodash.isplainobject\": \"^4.0.6\",\r\n        \"lodash.isstring\": \"^4.0.1\",\r\n        \"lodash.once\": \"^4.0.0\",\r\n        \"ms\": \"^2.1.1\",\r\n        \"semver\": \"^7.5.4\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=12\",\r\n        \"npm\": \">=6\"\r\n      }\r\n    },\r\n    \"node_modules/jsonwebtoken/node_modules/ms\": {\r\n      \"version\": \"2.1.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\r\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\"\r\n    },\r\n    \"node_modules/jwa\": {\r\n      \"version\": \"1.4.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/jwa/-/jwa-1.4.1.tgz\",\r\n      \"integrity\": \"sha512-qiLX/xhEEFKUAJ6FiBMbes3w9ATzyk5W7Hvzpa/SLYdxNtng+gcurvrI7TbACjIXlsJyr05/S1oUhZrc63evQA==\",\r\n      \"dependencies\": {\r\n        \"buffer-equal-constant-time\": \"1.0.1\",\r\n        \"ecdsa-sig-formatter\": \"1.0.11\",\r\n        \"safe-buffer\": \"^5.0.1\"\r\n      }\r\n    },\r\n    \"node_modules/jws\": {\r\n      \"version\": \"3.2.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/jws/-/jws-3.2.2.tgz\",\r\n      \"integrity\": \"sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==\",\r\n      \"dependencies\": {\r\n        \"jwa\": \"^1.4.1\",\r\n        \"safe-buffer\": \"^5.0.1\"\r\n      }\r\n    },\r\n    \"node_modules/lightning-pool\": {\r\n      \"version\": \"4.2.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/lightning-pool/-/lightning-pool-4.2.2.tgz\",\r\n      \"integrity\": \"sha512-KW0Df0IbjNLxy5wAsdErTKYtHGwefLRQseHNksEctyaL7gtRwJT0nqLa2uiRdNYDwKSnZtqOjSjUNtfxmfH1qw==\",\r\n      \"dependencies\": {\r\n        \"doublylinked\": \"^2.5.3\",\r\n        \"putil-promisify\": \"^1.10.1\"\r\n      }\r\n    },\r\n    \"node_modules/lodash.includes\": {\r\n      \"version\": \"4.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/lodash.includes/-/lodash.includes-4.3.0.tgz\",\r\n      \"integrity\": \"sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w==\"\r\n    },\r\n    \"node_modules/lodash.isboolean\": {\r\n      \"version\": \"3.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/lodash.isboolean/-/lodash.isboolean-3.0.3.tgz\",\r\n      \"integrity\": \"sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg==\"\r\n    },\r\n    \"node_modules/lodash.isinteger\": {\r\n      \"version\": \"4.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/lodash.isinteger/-/lodash.isinteger-4.0.4.tgz\",\r\n      \"integrity\": \"sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA==\"\r\n    },\r\n    \"node_modules/lodash.isnumber\": {\r\n      \"version\": \"3.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/lodash.isnumber/-/lodash.isnumber-3.0.3.tgz\",\r\n      \"integrity\": \"sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw==\"\r\n    },\r\n    \"node_modules/lodash.isplainobject\": {\r\n      \"version\": \"4.0.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz\",\r\n      \"integrity\": \"sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==\"\r\n    },\r\n    \"node_modules/lodash.isstring\": {\r\n      \"version\": \"4.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz\",\r\n      \"integrity\": \"sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==\"\r\n    },\r\n    \"node_modules/lodash.once\": {\r\n      \"version\": \"4.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz\",\r\n      \"integrity\": \"sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg==\"\r\n    },\r\n    \"node_modules/media-typer\": {\r\n      \"version\": \"0.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz\",\r\n      \"integrity\": \"sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/merge-descriptors\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-cCi6g3/Zr1iqQi6ySbseM1Xvooa98N0w31jzUYrXPX2xqObmFGHJ0tQ5u74H3mVh7wLouTseZyYIq39g8cNp1w==\"\r\n    },\r\n    \"node_modules/methods\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz\",\r\n      \"integrity\": \"sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/mime\": {\r\n      \"version\": \"1.6.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime/-/mime-1.6.0.tgz\",\r\n      \"integrity\": \"sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\",\r\n      \"bin\": {\r\n        \"mime\": \"cli.js\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=4\"\r\n      }\r\n    },\r\n    \"node_modules/mime-db\": {\r\n      \"version\": \"1.52.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\r\n      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/mime-types\": {\r\n      \"version\": \"2.1.35\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\r\n      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\r\n      \"dependencies\": {\r\n        \"mime-db\": \"1.52.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/minimatch\": {\r\n      \"version\": \"3.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\r\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"brace-expansion\": \"^1.1.7\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \"*\"\r\n      }\r\n    },\r\n    \"node_modules/ms\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"\r\n    },\r\n    \"node_modules/negotiator\": {\r\n      \"version\": \"0.6.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\r\n      \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/nodemon\": {\r\n      \"version\": \"3.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/nodemon/-/nodemon-3.1.0.tgz\",\r\n      \"integrity\": \"sha512-xqlktYlDMCepBJd43ZQhjWwMw2obW/JRvkrLxq5RCNcuDDX1DbcPT+qT1IlIIdf+DhnWs90JpTMe+Y5KxOchvA==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"chokidar\": \"^3.5.2\",\r\n        \"debug\": \"^4\",\r\n        \"ignore-by-default\": \"^1.0.1\",\r\n        \"minimatch\": \"^3.1.2\",\r\n        \"pstree.remy\": \"^1.1.8\",\r\n        \"semver\": \"^7.5.3\",\r\n        \"simple-update-notifier\": \"^2.0.0\",\r\n        \"supports-color\": \"^5.5.0\",\r\n        \"touch\": \"^3.1.0\",\r\n        \"undefsafe\": \"^2.0.5\"\r\n      },\r\n      \"bin\": {\r\n        \"nodemon\": \"bin/nodemon.js\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=10\"\r\n      },\r\n      \"funding\": {\r\n        \"type\": \"opencollective\",\r\n        \"url\": \"https://opencollective.com/nodemon\"\r\n      }\r\n    },\r\n    \"node_modules/nodemon/node_modules/debug\": {\r\n      \"version\": \"4.3.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\r\n      \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"ms\": \"2.1.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=6.0\"\r\n      },\r\n      \"peerDependenciesMeta\": {\r\n        \"supports-color\": {\r\n          \"optional\": true\r\n        }\r\n      }\r\n    },\r\n    \"node_modules/nodemon/node_modules/ms\": {\r\n      \"version\": \"2.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\r\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\r\n      \"dev\": true\r\n    },\r\n    \"node_modules/nopt\": {\r\n      \"version\": \"1.0.10\",\r\n      \"resolved\": \"https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz\",\r\n      \"integrity\": \"sha512-NWmpvLSqUrgrAC9HCuxEvb+PSloHpqVu+FqcO4eeF2h5qYRhA7ev6KvelyQAKtegUbC6RypJnlEOhd8vloNKYg==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"abbrev\": \"1\"\r\n      },\r\n      \"bin\": {\r\n        \"nopt\": \"bin/nopt.js\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \"*\"\r\n      }\r\n    },\r\n    \"node_modules/normalize-path\": {\r\n      \"version\": \"3.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\r\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\r\n      \"dev\": true,\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/object-assign\": {\r\n      \"version\": \"4.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\r\n      \"integrity\": \"sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/object-inspect\": {\r\n      \"version\": \"1.13.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.1.tgz\",\r\n      \"integrity\": \"sha512-5qoj1RUiKOMsCCNLV1CBiPYE10sziTsnmNxkAI/rZhiD63CF7IqdFGC/XzjWjpSgLf0LxXX3bDFIh0E18f6UhQ==\",\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/obuf\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/obuf/-/obuf-1.1.2.tgz\",\r\n      \"integrity\": \"sha512-PX1wu0AmAdPqOL1mWhqmlOd8kOIZQwGZw6rh7uby9fTc5lhaOWFLX3I6R1hrF9k3zUY40e6igsLGkDXK92LJNg==\"\r\n    },\r\n    \"node_modules/on-finished\": {\r\n      \"version\": \"2.4.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz\",\r\n      \"integrity\": \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\",\r\n      \"dependencies\": {\r\n        \"ee-first\": \"1.1.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/parseurl\": {\r\n      \"version\": \"1.3.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\r\n      \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/path-to-regexp\": {\r\n      \"version\": \"0.1.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz\",\r\n      \"integrity\": \"sha512-5DFkuoqlv1uYQKxy8omFBeJPQcdoE07Kv2sferDCrAq1ohOU+MSDswDIbnx3YAM60qIOnYa53wBhXW0EbMonrQ==\"\r\n    },\r\n    \"node_modules/pg\": {\r\n      \"version\": \"8.11.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/pg/-/pg-8.11.5.tgz\",\r\n      \"integrity\": \"sha512-jqgNHSKL5cbDjFlHyYsCXmQDrfIX/3RsNwYqpd4N0Kt8niLuNoRNH+aazv6cOd43gPh9Y4DjQCtb+X0MH0Hvnw==\",\r\n      \"dependencies\": {\r\n        \"pg-connection-string\": \"^2.6.4\",\r\n        \"pg-pool\": \"^3.6.2\",\r\n        \"pg-protocol\": \"^1.6.1\",\r\n        \"pg-types\": \"^2.1.0\",\r\n        \"pgpass\": \"1.x\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 8.0.0\"\r\n      },\r\n      \"optionalDependencies\": {\r\n        \"pg-cloudflare\": \"^1.1.1\"\r\n      },\r\n      \"peerDependencies\": {\r\n        \"pg-native\": \">=3.0.1\"\r\n      },\r\n      \"peerDependenciesMeta\": {\r\n        \"pg-native\": {\r\n          \"optional\": true\r\n        }\r\n      }\r\n    },\r\n    \"node_modules/pg-cloudflare\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/pg-cloudflare/-/pg-cloudflare-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-xWPagP/4B6BgFO+EKz3JONXv3YDgvkbVrGw2mTo3D6tVDQRh1e7cqVGvyR3BE+eQgAvx1XhW/iEASj4/jCWl3Q==\",\r\n      \"optional\": true\r\n    },\r\n    \"node_modules/pg-connection-string\": {\r\n      \"version\": \"2.6.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/pg-connection-string/-/pg-connection-string-2.6.4.tgz\",\r\n      \"integrity\": \"sha512-v+Z7W/0EO707aNMaAEfiGnGL9sxxumwLl2fJvCQtMn9Fxsg+lPpPkdcyBSv/KFgpGdYkMfn+EI1Or2EHjpgLCA==\"\r\n    },\r\n    \"node_modules/pg-int8\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/pg-int8/-/pg-int8-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==\",\r\n      \"engines\": {\r\n        \"node\": \">=4.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/pg-pool\": {\r\n      \"version\": \"3.6.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/pg-pool/-/pg-pool-3.6.2.tgz\",\r\n      \"integrity\": \"sha512-Htjbg8BlwXqSBQ9V8Vjtc+vzf/6fVUuak/3/XXKA9oxZprwW3IMDQTGHP+KDmVL7rtd+R1QjbnCFPuTHm3G4hg==\",\r\n      \"peerDependencies\": {\r\n        \"pg\": \">=8.0\"\r\n      }\r\n    },\r\n    \"node_modules/pg-protocol\": {\r\n      \"version\": \"1.6.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/pg-protocol/-/pg-protocol-1.6.1.tgz\",\r\n      \"integrity\": \"sha512-jPIlvgoD63hrEuihvIg+tJhoGjUsLPn6poJY9N5CnlPd91c2T18T/9zBtLxZSb1EhYxBRoZJtzScCaWlYLtktg==\"\r\n    },\r\n    \"node_modules/pg-types\": {\r\n      \"version\": \"2.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/pg-types/-/pg-types-2.2.0.tgz\",\r\n      \"integrity\": \"sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==\",\r\n      \"dependencies\": {\r\n        \"pg-int8\": \"1.0.1\",\r\n        \"postgres-array\": \"~2.0.0\",\r\n        \"postgres-bytea\": \"~1.0.0\",\r\n        \"postgres-date\": \"~1.0.4\",\r\n        \"postgres-interval\": \"^1.1.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=4\"\r\n      }\r\n    },\r\n    \"node_modules/pgpass\": {\r\n      \"version\": \"1.0.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/pgpass/-/pgpass-1.0.5.tgz\",\r\n      \"integrity\": \"sha512-FdW9r/jQZhSeohs1Z3sI1yxFQNFvMcnmfuj4WBMUTxOrAyLMaTcE1aAMBiTlbMNaXvBCQuVi0R7hd8udDSP7ug==\",\r\n      \"dependencies\": {\r\n        \"split2\": \"^4.1.0\"\r\n      }\r\n    },\r\n    \"node_modules/picomatch\": {\r\n      \"version\": \"2.3.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\r\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\r\n      \"dev\": true,\r\n      \"engines\": {\r\n        \"node\": \">=8.6\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\r\n      }\r\n    },\r\n    \"node_modules/postgres\": {\r\n      \"version\": \"3.4.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/postgres/-/postgres-3.4.4.tgz\",\r\n      \"integrity\": \"sha512-IbyN+9KslkqcXa8AO9fxpk97PA4pzewvpi2B3Dwy9u4zpV32QicaEdgmF3eSQUzdRk7ttDHQejNgAEr4XoeH4A==\",\r\n      \"engines\": {\r\n        \"node\": \">=12\"\r\n      },\r\n      \"funding\": {\r\n        \"type\": \"individual\",\r\n        \"url\": \"https://github.com/sponsors/porsager\"\r\n      }\r\n    },\r\n    \"node_modules/postgres-array\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/postgres-array/-/postgres-array-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-VpZrUqU5A69eQyW2c5CA1jtLecCsN2U/bD6VilrFDWq5+5UIEVO7nazS3TEcHf1zuPYO/sqGvUvW62g86RXZuA==\",\r\n      \"engines\": {\r\n        \"node\": \">=4\"\r\n      }\r\n    },\r\n    \"node_modules/postgres-bytea\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-1.0.0.tgz\",\r\n      \"integrity\": \"sha512-xy3pmLuQqRBZBXDULy7KbaitYqLcmxigw14Q5sj8QBVLqEwXfeybIKVWiqAXTlcvdvb0+xkOtDbfQMOf4lST1w==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/postgres-date\": {\r\n      \"version\": \"1.0.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/postgres-date/-/postgres-date-1.0.7.tgz\",\r\n      \"integrity\": \"sha512-suDmjLVQg78nMK2UZ454hAG+OAW+HQPZ6n++TNDUX+L0+uUlLywnoxJKDou51Zm+zTCjrCl0Nq6J9C5hP9vK/Q==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/postgres-interval\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/postgres-interval/-/postgres-interval-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==\",\r\n      \"dependencies\": {\r\n        \"xtend\": \"^4.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/postgresql-client\": {\r\n      \"version\": \"2.11.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/postgresql-client/-/postgresql-client-2.11.0.tgz\",\r\n      \"integrity\": \"sha512-QSPHcWVaiBG+JyASaDojOXvhRmsc2n8j2COdIjUDENFAtFls16Zy240asY2ENzZRQJUMAA8vpR8w4SAdI8jdbw==\",\r\n      \"dependencies\": {\r\n        \"doublylinked\": \"^2.5.4\",\r\n        \"lightning-pool\": \"^4.2.2\",\r\n        \"postgres-bytea\": \"^3.0.0\",\r\n        \"power-tasks\": \"^1.7.3\",\r\n        \"putil-merge\": \"^3.12.1\",\r\n        \"putil-promisify\": \"^1.10.1\",\r\n        \"putil-varhelpers\": \"^1.6.5\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=16.0\"\r\n      }\r\n    },\r\n    \"node_modules/postgresql-client/node_modules/postgres-bytea\": {\r\n      \"version\": \"3.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-3.0.0.tgz\",\r\n      \"integrity\": \"sha512-CNd4jim9RFPkObHSjVHlVrxoVQXz7quwNFpz7RY1okNNme49+sVyiTvTRobiLV548Hx/hb1BG+iE7h9493WzFw==\",\r\n      \"dependencies\": {\r\n        \"obuf\": \"~1.1.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 6\"\r\n      }\r\n    },\r\n    \"node_modules/power-tasks\": {\r\n      \"version\": \"1.7.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/power-tasks/-/power-tasks-1.7.3.tgz\",\r\n      \"integrity\": \"sha512-EnkjLfaX4PxFYHbUWyWzlE4I8SgctaW9jx4qQXrVRoELlqBXrxIMtuhHzRwsHv2qs1tO7efOcZa6/wDCdCjRfA==\",\r\n      \"dependencies\": {\r\n        \"doublylinked\": \"^2.5.4\",\r\n        \"strict-typed-events\": \"^2.3.3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=16.0\"\r\n      }\r\n    },\r\n    \"node_modules/proxy-addr\": {\r\n      \"version\": \"2.0.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz\",\r\n      \"integrity\": \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\",\r\n      \"dependencies\": {\r\n        \"forwarded\": \"0.2.0\",\r\n        \"ipaddr.js\": \"1.9.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.10\"\r\n      }\r\n    },\r\n    \"node_modules/pstree.remy\": {\r\n      \"version\": \"1.1.8\",\r\n      \"resolved\": \"https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz\",\r\n      \"integrity\": \"sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==\",\r\n      \"dev\": true\r\n    },\r\n    \"node_modules/putil-merge\": {\r\n      \"version\": \"3.12.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/putil-merge/-/putil-merge-3.12.1.tgz\",\r\n      \"integrity\": \"sha512-4clPyRkJPrd5zl98AP7I3JamyXbx0ixe2CnfvGwoTyWSr7Kslcv8weoKjfU4BMBifkWIRL54l4OrNe97pYcDwQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 10.0\"\r\n      }\r\n    },\r\n    \"node_modules/putil-promisify\": {\r\n      \"version\": \"1.10.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/putil-promisify/-/putil-promisify-1.10.1.tgz\",\r\n      \"integrity\": \"sha512-1jm0egJNrj5eBDRj15Cg08RNHDV91OVEHeeYjAFRcs663PXxFokndxcJAGbaO6CSErCTp8eTgC8vuOF+fvXIAA==\",\r\n      \"engines\": {\r\n        \"node\": \">= 14.0\"\r\n      }\r\n    },\r\n    \"node_modules/putil-varhelpers\": {\r\n      \"version\": \"1.6.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/putil-varhelpers/-/putil-varhelpers-1.6.5.tgz\",\r\n      \"integrity\": \"sha512-kyu+lE5xkc65ScgaIi6rNONLXeS7jGBxl1I0rzHVsFGAAQ45D/VkuEev+t09PFB943F+CqdWFLczH6ePk5TPAA==\",\r\n      \"engines\": {\r\n        \"node\": \">= 6.0\"\r\n      }\r\n    },\r\n    \"node_modules/qs\": {\r\n      \"version\": \"6.11.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.11.0.tgz\",\r\n      \"integrity\": \"sha512-MvjoMCJwEarSbUYk5O+nmoSzSutSsTwF85zcHPQ9OrlFoZOYIjaqBAJIqIXjptyD5vThxGq52Xu/MaJzRkIk4Q==\",\r\n      \"dependencies\": {\r\n        \"side-channel\": \"^1.0.4\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.6\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/range-parser\": {\r\n      \"version\": \"1.2.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\r\n      \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/raw-body\": {\r\n      \"version\": \"2.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz\",\r\n      \"integrity\": \"sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==\",\r\n      \"dependencies\": {\r\n        \"bytes\": \"3.1.2\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"iconv-lite\": \"0.4.24\",\r\n        \"unpipe\": \"1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/readdirp\": {\r\n      \"version\": \"3.6.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\r\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"picomatch\": \"^2.2.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/router\": {\r\n      \"version\": \"1.3.8\",\r\n      \"resolved\": \"https://registry.npmjs.org/router/-/router-1.3.8.tgz\",\r\n      \"integrity\": \"sha512-461UFH44NtSfIlS83PUg2N7OZo86BC/kB3dY77gJdsODsBhhw7+2uE0tzTINxrY9CahCUVk1VhpWCA5i1yoIEg==\",\r\n      \"dependencies\": {\r\n        \"array-flatten\": \"3.0.0\",\r\n        \"debug\": \"2.6.9\",\r\n        \"methods\": \"~1.1.2\",\r\n        \"parseurl\": \"~1.3.3\",\r\n        \"path-to-regexp\": \"0.1.7\",\r\n        \"setprototypeof\": \"1.2.0\",\r\n        \"utils-merge\": \"1.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/router/node_modules/array-flatten\": {\r\n      \"version\": \"3.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-3.0.0.tgz\",\r\n      \"integrity\": \"sha512-zPMVc3ZYlGLNk4mpK1NzP2wg0ml9t7fUgDsayR5Y5rSzxQilzR9FGu/EH2jQOcKSAeAfWeylyW8juy3OkWRvNA==\"\r\n    },\r\n    \"node_modules/safe-buffer\": {\r\n      \"version\": \"5.2.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\r\n      \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\r\n      \"funding\": [\r\n        {\r\n          \"type\": \"github\",\r\n          \"url\": \"https://github.com/sponsors/feross\"\r\n        },\r\n        {\r\n          \"type\": \"patreon\",\r\n          \"url\": \"https://www.patreon.com/feross\"\r\n        },\r\n        {\r\n          \"type\": \"consulting\",\r\n          \"url\": \"https://feross.org/support\"\r\n        }\r\n      ]\r\n    },\r\n    \"node_modules/safer-buffer\": {\r\n      \"version\": \"2.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\r\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\"\r\n    },\r\n    \"node_modules/semver\": {\r\n      \"version\": \"7.6.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.6.2.tgz\",\r\n      \"integrity\": \"sha512-FNAIBWCx9qcRhoHcgcJ0gvU7SN1lYU2ZXuSfl04bSC5OpvDHFyJCjdNHomPXxjQlCBU67YW64PzY7/VIEH7F2w==\",\r\n      \"bin\": {\r\n        \"semver\": \"bin/semver.js\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=10\"\r\n      }\r\n    },\r\n    \"node_modules/send\": {\r\n      \"version\": \"0.18.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/send/-/send-0.18.0.tgz\",\r\n      \"integrity\": \"sha512-qqWzuOjSFOuqPjFe4NOsMLafToQQwBSOEpS+FwEt3A2V3vKubTquT3vmLTQpFgMXp8AlFWFuP1qKaJZOtPpVXg==\",\r\n      \"dependencies\": {\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"2.0.0\",\r\n        \"destroy\": \"1.2.0\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"etag\": \"~1.8.1\",\r\n        \"fresh\": \"0.5.2\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"mime\": \"1.6.0\",\r\n        \"ms\": \"2.1.3\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"range-parser\": \"~1.2.1\",\r\n        \"statuses\": \"2.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8.0\"\r\n      }\r\n    },\r\n    \"node_modules/send/node_modules/ms\": {\r\n      \"version\": \"2.1.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\r\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\"\r\n    },\r\n    \"node_modules/serve-static\": {\r\n      \"version\": \"1.15.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/serve-static/-/serve-static-1.15.0.tgz\",\r\n      \"integrity\": \"sha512-XGuRDNjXUijsUL0vl6nSD7cwURuzEgglbOaFuZM9g3kwDXOWVTck0jLzjPzGD+TazWbboZYu52/9/XPdUgne9g==\",\r\n      \"dependencies\": {\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"parseurl\": \"~1.3.3\",\r\n        \"send\": \"0.18.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8.0\"\r\n      }\r\n    },\r\n    \"node_modules/set-function-length\": {\r\n      \"version\": \"1.2.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz\",\r\n      \"integrity\": \"sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==\",\r\n      \"dependencies\": {\r\n        \"define-data-property\": \"^1.1.4\",\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"function-bind\": \"^1.1.2\",\r\n        \"get-intrinsic\": \"^1.2.4\",\r\n        \"gopd\": \"^1.0.1\",\r\n        \"has-property-descriptors\": \"^1.0.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/setprototypeof\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\"\r\n    },\r\n    \"node_modules/side-channel\": {\r\n      \"version\": \"1.0.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz\",\r\n      \"integrity\": \"sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==\",\r\n      \"dependencies\": {\r\n        \"call-bind\": \"^1.0.7\",\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"get-intrinsic\": \"^1.2.4\",\r\n        \"object-inspect\": \"^1.13.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/simple-update-notifier\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-a2B9Y0KlNXl9u/vsW6sTIu9vGEpfKu2wRV6l1H3XEas/0gUIzGzBoP/IouTcUQbm9JWZLH3COxyn03TYlFax6w==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"semver\": \"^7.5.3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=10\"\r\n      }\r\n    },\r\n    \"node_modules/split2\": {\r\n      \"version\": \"4.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/split2/-/split2-4.2.0.tgz\",\r\n      \"integrity\": \"sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 10.x\"\r\n      }\r\n    },\r\n    \"node_modules/statuses\": {\r\n      \"version\": \"2.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\r\n      \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/strict-typed-events\": {\r\n      \"version\": \"2.3.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/strict-typed-events/-/strict-typed-events-2.3.3.tgz\",\r\n      \"integrity\": \"sha512-Vc8/N5giCVpO2n5BCskqDD9ns7RkdEq0pFd4yQk1ROULusJDbjORNvbtyEPxxK7Xqn9/NdW8XHLxv/PvUTgFsA==\",\r\n      \"dependencies\": {\r\n        \"putil-promisify\": \"^1.10.1\",\r\n        \"ts-gems\": \"^3.1.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=16.0\"\r\n      }\r\n    },\r\n    \"node_modules/supports-color\": {\r\n      \"version\": \"5.5.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\r\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"has-flag\": \"^3.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=4\"\r\n      }\r\n    },\r\n    \"node_modules/to-regex-range\": {\r\n      \"version\": \"5.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\r\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"is-number\": \"^7.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8.0\"\r\n      }\r\n    },\r\n    \"node_modules/toidentifier\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.6\"\r\n      }\r\n    },\r\n    \"node_modules/touch\": {\r\n      \"version\": \"3.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/touch/-/touch-3.1.0.tgz\",\r\n      \"integrity\": \"sha512-WBx8Uy5TLtOSRtIq+M03/sKDrXCLHxwDcquSP2c43Le03/9serjQBIztjRz6FkJez9D/hleyAXTBGLwwZUw9lA==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"nopt\": \"~1.0.10\"\r\n      },\r\n      \"bin\": {\r\n        \"nodetouch\": \"bin/nodetouch.js\"\r\n      }\r\n    },\r\n    \"node_modules/ts-gems\": {\r\n      \"version\": \"3.4.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/ts-gems/-/ts-gems-3.4.0.tgz\",\r\n      \"integrity\": \"sha512-RM1TN7GRmweAdNXNM89S4tLz+Ur3HslR4ePYND6RBhRzxsiUOnfVFyTey01+9YUs8Vhxb/OsO6rHlu5xJGzBXw==\"\r\n    },\r\n    \"node_modules/type-is\": {\r\n      \"version\": \"1.6.18\",\r\n      \"resolved\": \"https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz\",\r\n      \"integrity\": \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\",\r\n      \"dependencies\": {\r\n        \"media-typer\": \"0.3.0\",\r\n        \"mime-types\": \"~2.1.24\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/undefsafe\": {\r\n      \"version\": \"2.0.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz\",\r\n      \"integrity\": \"sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA==\",\r\n      \"dev\": true\r\n    },\r\n    \"node_modules/unpipe\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",\r\n      \"integrity\": \"sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/utils-merge\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4.0\"\r\n      }\r\n    },\r\n    \"node_modules/vary\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/vary/-/vary-1.1.2.tgz\",\r\n      \"integrity\": \"sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/xtend\": {\r\n      \"version\": \"4.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz\",\r\n      \"integrity\": \"sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.4\"\r\n      }\r\n    }\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/package-lock.json b/package-lock.json
--- a/package-lock.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/package-lock.json	(date 1754071493453)
@@ -5,6 +5,7 @@
   "packages": {
     "": {
       "dependencies": {
+        "bcrypt": "^6.0.0",
         "bcryptjs": "^2.4.3",
         "body-parser": "^1.20.2",
         "cookie-parser": "^1.4.6",
@@ -13,25 +14,33 @@
         "express": "^4.19.2",
         "http-status-codes": "^2.3.0",
         "jsonwebtoken": "^9.0.2",
-        "pg": "^8.11.5",
+        "multer": "^1.4.5-lts.1",
+        "pg": "^8.16.3",
         "postgres": "^3.4.4",
         "postgresql-client": "^2.11.0",
         "router": "^1.3.8"
       },
       "devDependencies": {
-        "nodemon": "^3.1.0"
+        "nodemon": "^3.1.10"
       }
     },
-    "node_modules/abbrev": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",
-      "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==",
-      "dev": true
+    "node_modules/@jsopen/objects": {
+      "version": "1.6.3",
+      "resolved": "https://registry.npmjs.org/@jsopen/objects/-/objects-1.6.3.tgz",
+      "integrity": "sha512-LNtPollREyfKNqE8GwCxjt4nyi7UuWqHxDbmCYwFzTCmAeFguAAyiLarw81kE2szoRCJzHZDkyEsfY5XyzhPTA==",
+      "license": "MIT",
+      "dependencies": {
+        "tslib": "^2.8.1"
+      },
+      "engines": {
+        "node": ">= 16.0"
+      }
     },
     "node_modules/accepts": {
       "version": "1.3.8",
       "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz",
       "integrity": "sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==",
+      "license": "MIT",
       "dependencies": {
         "mime-types": "~2.1.34",
         "negotiator": "0.6.3"
@@ -45,6 +54,7 @@
       "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
       "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
       "dev": true,
+      "license": "ISC",
       "dependencies": {
         "normalize-path": "^3.0.0",
         "picomatch": "^2.0.4"
@@ -53,27 +63,51 @@
         "node": ">= 8"
       }
     },
+    "node_modules/append-field": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/append-field/-/append-field-1.0.0.tgz",
+      "integrity": "sha512-klpgFSWLW1ZEs8svjfb7g4qWY0YS5imI82dTg+QahUvJ8YqAY0P10Uk8tTyh9ZGuYEZEMaeJYCF5BFuX552hsw==",
+      "license": "MIT"
+    },
     "node_modules/array-flatten": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
-      "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg=="
+      "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==",
+      "license": "MIT"
     },
     "node_modules/balanced-match": {
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
       "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
-      "dev": true
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/bcrypt": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/bcrypt/-/bcrypt-6.0.0.tgz",
+      "integrity": "sha512-cU8v/EGSrnH+HnxV2z0J7/blxH8gq7Xh2JFT6Aroax7UohdmiJJlxApMxtKfuI7z68NvvVcmR78k2LbT6efhRg==",
+      "hasInstallScript": true,
+      "license": "MIT",
+      "dependencies": {
+        "node-addon-api": "^8.3.0",
+        "node-gyp-build": "^4.8.4"
+      },
+      "engines": {
+        "node": ">= 18"
+      }
     },
     "node_modules/bcryptjs": {
       "version": "2.4.3",
       "resolved": "https://registry.npmjs.org/bcryptjs/-/bcryptjs-2.4.3.tgz",
-      "integrity": "sha512-V/Hy/X9Vt7f3BbPJEi8BdVFMByHi+jNXrYkW3huaybV/kQ0KJg0Y6PkEMbn+zeT+i+SiKZ/HMqJGIIt4LZDqNQ=="
+      "integrity": "sha512-V/Hy/X9Vt7f3BbPJEi8BdVFMByHi+jNXrYkW3huaybV/kQ0KJg0Y6PkEMbn+zeT+i+SiKZ/HMqJGIIt4LZDqNQ==",
+      "license": "MIT"
     },
     "node_modules/binary-extensions": {
       "version": "2.3.0",
       "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
       "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
       "dev": true,
+      "license": "MIT",
       "engines": {
         "node": ">=8"
       },
@@ -82,9 +116,10 @@
       }
     },
     "node_modules/body-parser": {
-      "version": "1.20.2",
-      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.2.tgz",
-      "integrity": "sha512-ml9pReCu3M61kGlqoTm2umSXTlRTuGTx0bfYj+uIUKKYycG5NtSbeetV3faSU6R7ajOPw0g/J1PvK4qNy7s5bA==",
+      "version": "1.20.3",
+      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz",
+      "integrity": "sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==",
+      "license": "MIT",
       "dependencies": {
         "bytes": "3.1.2",
         "content-type": "~1.0.5",
@@ -94,7 +129,7 @@
         "http-errors": "2.0.0",
         "iconv-lite": "0.4.24",
         "on-finished": "2.4.1",
-        "qs": "6.11.0",
+        "qs": "6.13.0",
         "raw-body": "2.5.2",
         "type-is": "~1.6.18",
         "unpipe": "1.0.0"
@@ -105,22 +140,24 @@
       }
     },
     "node_modules/brace-expansion": {
-      "version": "1.1.11",
-      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
-      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
+      "version": "1.1.12",
+      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
+      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "balanced-match": "^1.0.0",
         "concat-map": "0.0.1"
       }
     },
     "node_modules/braces": {
-      "version": "3.0.2",
-      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
-      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
+      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
-        "fill-range": "^7.0.1"
+        "fill-range": "^7.1.1"
       },
       "engines": {
         "node": ">=8"
@@ -129,26 +166,56 @@
     "node_modules/buffer-equal-constant-time": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/buffer-equal-constant-time/-/buffer-equal-constant-time-1.0.1.tgz",
-      "integrity": "sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA=="
+      "integrity": "sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA==",
+      "license": "BSD-3-Clause"
+    },
+    "node_modules/buffer-from": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
+      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
+      "license": "MIT"
+    },
+    "node_modules/busboy": {
+      "version": "1.6.0",
+      "resolved": "https://registry.npmjs.org/busboy/-/busboy-1.6.0.tgz",
+      "integrity": "sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==",
+      "dependencies": {
+        "streamsearch": "^1.1.0"
+      },
+      "engines": {
+        "node": ">=10.16.0"
+      }
     },
     "node_modules/bytes": {
       "version": "3.1.2",
       "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
       "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.8"
       }
     },
-    "node_modules/call-bind": {
-      "version": "1.0.7",
-      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.7.tgz",
-      "integrity": "sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==",
+    "node_modules/call-bind-apply-helpers": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
+      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
+      "license": "MIT",
       "dependencies": {
-        "es-define-property": "^1.0.0",
         "es-errors": "^1.3.0",
-        "function-bind": "^1.1.2",
-        "get-intrinsic": "^1.2.4",
-        "set-function-length": "^1.2.1"
+        "function-bind": "^1.1.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/call-bound": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz",
+      "integrity": "sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==",
+      "license": "MIT",
+      "dependencies": {
+        "call-bind-apply-helpers": "^1.0.2",
+        "get-intrinsic": "^1.3.0"
       },
       "engines": {
         "node": ">= 0.4"
@@ -162,6 +229,7 @@
       "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
       "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "anymatch": "~3.1.2",
         "braces": "~3.0.2",
@@ -185,12 +253,29 @@
       "version": "0.0.1",
       "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
       "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
-      "dev": true
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/concat-stream": {
+      "version": "1.6.2",
+      "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.2.tgz",
+      "integrity": "sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==",
+      "engines": [
+        "node >= 0.8"
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "buffer-from": "^1.0.0",
+        "inherits": "^2.0.3",
+        "readable-stream": "^2.2.2",
+        "typedarray": "^0.0.6"
+      }
     },
     "node_modules/content-disposition": {
       "version": "0.5.4",
       "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz",
       "integrity": "sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==",
+      "license": "MIT",
       "dependencies": {
         "safe-buffer": "5.2.1"
       },
@@ -202,24 +287,27 @@
       "version": "1.0.5",
       "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz",
       "integrity": "sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
     },
     "node_modules/cookie": {
-      "version": "0.4.1",
-      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.4.1.tgz",
-      "integrity": "sha512-ZwrFkGJxUR3EIoXtO+yVE69Eb7KlixbaeAWfBQB9vVsNn/o+Yw69gBWSSDK825hQNdN+wF8zELf3dFNl/kxkUA==",
+      "version": "0.7.2",
+      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.2.tgz",
+      "integrity": "sha512-yki5XnKuf750l50uGTllt6kKILY4nQ1eNIQatoXEByZ5dWgnKqbnqmTrBE5B4N7lrMJKQ2ytWMiTO2o0v6Ew/w==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
     },
     "node_modules/cookie-parser": {
-      "version": "1.4.6",
-      "resolved": "https://registry.npmjs.org/cookie-parser/-/cookie-parser-1.4.6.tgz",
-      "integrity": "sha512-z3IzaNjdwUC2olLIB5/ITd0/setiaFMLYiZJle7xg5Fe9KWAceil7xszYfHHBtDFYLSgJduS2Ty0P1uJdPDJeA==",
+      "version": "1.4.7",
+      "resolved": "https://registry.npmjs.org/cookie-parser/-/cookie-parser-1.4.7.tgz",
+      "integrity": "sha512-nGUvgXnotP3BsjiLX2ypbQnWoGUPIIfHQNZkkC668ntrzGWEZVW70HDEB1qnNGMicPje6EttlIgzo51YSwNQGw==",
+      "license": "MIT",
       "dependencies": {
-        "cookie": "0.4.1",
+        "cookie": "0.7.2",
         "cookie-signature": "1.0.6"
       },
       "engines": {
@@ -229,12 +317,20 @@
     "node_modules/cookie-signature": {
       "version": "1.0.6",
       "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
-      "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ=="
+      "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==",
+      "license": "MIT"
+    },
+    "node_modules/core-util-is": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz",
+      "integrity": "sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==",
+      "license": "MIT"
     },
     "node_modules/cors": {
       "version": "2.8.5",
       "resolved": "https://registry.npmjs.org/cors/-/cors-2.8.5.tgz",
       "integrity": "sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==",
+      "license": "MIT",
       "dependencies": {
         "object-assign": "^4",
         "vary": "^1"
@@ -247,30 +343,16 @@
       "version": "2.6.9",
       "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
       "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+      "license": "MIT",
       "dependencies": {
         "ms": "2.0.0"
       }
     },
-    "node_modules/define-data-property": {
-      "version": "1.1.4",
-      "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
-      "integrity": "sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==",
-      "dependencies": {
-        "es-define-property": "^1.0.0",
-        "es-errors": "^1.3.0",
-        "gopd": "^1.0.1"
-      },
-      "engines": {
-        "node": ">= 0.4"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/ljharb"
-      }
-    },
     "node_modules/depd": {
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
       "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.8"
       }
@@ -279,15 +361,17 @@
       "version": "1.2.0",
       "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz",
       "integrity": "sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.8",
         "npm": "1.2.8000 || >= 1.4.16"
       }
     },
     "node_modules/dotenv": {
-      "version": "16.4.5",
-      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-16.4.5.tgz",
-      "integrity": "sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==",
+      "version": "16.6.1",
+      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-16.6.1.tgz",
+      "integrity": "sha512-uBq4egWHTcTt33a72vpSG0z3HnPuIl6NqYcTrKEg2azoEyl2hpW0zqlxysq2pK9HlDIHyHyakeYaYnSAwd8bow==",
+      "license": "BSD-2-Clause",
       "engines": {
         "node": ">=12"
       },
@@ -296,17 +380,33 @@
       }
     },
     "node_modules/doublylinked": {
-      "version": "2.5.4",
-      "resolved": "https://registry.npmjs.org/doublylinked/-/doublylinked-2.5.4.tgz",
-      "integrity": "sha512-jBCKDnFkEHJRjQvYEl5N9VngRV8ypHgw6a52OK4VN57eV2r2rYvgOx9uABdY78INNoW7S6auULp+KBVm/jfYqw==",
+      "version": "2.5.6",
+      "resolved": "https://registry.npmjs.org/doublylinked/-/doublylinked-2.5.6.tgz",
+      "integrity": "sha512-oskbNBycNHjQ0Zg/5DMYiqFnSeblM2BSc2Ehu5+PyBay0ESlullPp0YEjlwtG3QtN4Fb7hC9USJqNyTMftl/1A==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 16.0"
+      }
+    },
+    "node_modules/dunder-proto": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
+      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
+      "license": "MIT",
+      "dependencies": {
+        "call-bind-apply-helpers": "^1.0.1",
+        "es-errors": "^1.3.0",
+        "gopd": "^1.2.0"
+      },
       "engines": {
-        "node": ">= 10.0"
+        "node": ">= 0.4"
       }
     },
     "node_modules/ecdsa-sig-formatter": {
       "version": "1.0.11",
       "resolved": "https://registry.npmjs.org/ecdsa-sig-formatter/-/ecdsa-sig-formatter-1.0.11.tgz",
       "integrity": "sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==",
+      "license": "Apache-2.0",
       "dependencies": {
         "safe-buffer": "^5.0.1"
       }
@@ -314,23 +414,23 @@
     "node_modules/ee-first": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
-      "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow=="
+      "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==",
+      "license": "MIT"
     },
     "node_modules/encodeurl": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
-      "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==",
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz",
+      "integrity": "sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.8"
       }
     },
     "node_modules/es-define-property": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz",
-      "integrity": "sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==",
-      "dependencies": {
-        "get-intrinsic": "^1.2.4"
-      },
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
+      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.4"
       }
@@ -339,6 +439,19 @@
       "version": "1.3.0",
       "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
       "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-object-atoms": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
+      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
+      "license": "MIT",
+      "dependencies": {
+        "es-errors": "^1.3.0"
+      },
       "engines": {
         "node": ">= 0.4"
       }
@@ -346,47 +459,50 @@
     "node_modules/escape-html": {
       "version": "1.0.3",
       "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
-      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow=="
+      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==",
+      "license": "MIT"
     },
     "node_modules/etag": {
       "version": "1.8.1",
       "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
       "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
     },
     "node_modules/express": {
-      "version": "4.19.2",
-      "resolved": "https://registry.npmjs.org/express/-/express-4.19.2.tgz",
-      "integrity": "sha512-5T6nhjsT+EOMzuck8JjBHARTHfMht0POzlA60WV2pMD3gyXw2LZnZ+ueGdNxG+0calOJcWKbpFcuzLZ91YWq9Q==",
+      "version": "4.21.2",
+      "resolved": "https://registry.npmjs.org/express/-/express-4.21.2.tgz",
+      "integrity": "sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==",
+      "license": "MIT",
       "dependencies": {
         "accepts": "~1.3.8",
         "array-flatten": "1.1.1",
-        "body-parser": "1.20.2",
+        "body-parser": "1.20.3",
         "content-disposition": "0.5.4",
         "content-type": "~1.0.4",
-        "cookie": "0.6.0",
+        "cookie": "0.7.1",
         "cookie-signature": "1.0.6",
         "debug": "2.6.9",
         "depd": "2.0.0",
-        "encodeurl": "~1.0.2",
+        "encodeurl": "~2.0.0",
         "escape-html": "~1.0.3",
         "etag": "~1.8.1",
-        "finalhandler": "1.2.0",
+        "finalhandler": "1.3.1",
         "fresh": "0.5.2",
         "http-errors": "2.0.0",
-        "merge-descriptors": "1.0.1",
+        "merge-descriptors": "1.0.3",
         "methods": "~1.1.2",
         "on-finished": "2.4.1",
         "parseurl": "~1.3.3",
-        "path-to-regexp": "0.1.7",
+        "path-to-regexp": "0.1.12",
         "proxy-addr": "~2.0.7",
-        "qs": "6.11.0",
+        "qs": "6.13.0",
         "range-parser": "~1.2.1",
         "safe-buffer": "5.2.1",
-        "send": "0.18.0",
-        "serve-static": "1.15.0",
+        "send": "0.19.0",
+        "serve-static": "1.16.2",
         "setprototypeof": "1.2.0",
         "statuses": "2.0.1",
         "type-is": "~1.6.18",
@@ -395,21 +511,27 @@
       },
       "engines": {
         "node": ">= 0.10.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/express"
       }
     },
     "node_modules/express/node_modules/cookie": {
-      "version": "0.6.0",
-      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.6.0.tgz",
-      "integrity": "sha512-U71cyTamuh1CRNCfpGY6to28lxvNwPG4Guz/EVjgf3Jmzv0vlDp1atT9eS5dDjMYHucpHbWns6Lwf3BKz6svdw==",
+      "version": "0.7.1",
+      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz",
+      "integrity": "sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
     },
     "node_modules/fill-range": {
-      "version": "7.0.1",
-      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
-      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
+      "version": "7.1.1",
+      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
+      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "to-regex-range": "^5.0.1"
       },
@@ -418,12 +540,13 @@
       }
     },
     "node_modules/finalhandler": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.2.0.tgz",
-      "integrity": "sha512-5uXcUVftlQMFnWC9qu/svkWv3GTd2PfUhK/3PLkYNAe7FbqJMt3515HaxE6eRL74GdsriiwujiawdaB1BpEISg==",
+      "version": "1.3.1",
+      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz",
+      "integrity": "sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==",
+      "license": "MIT",
       "dependencies": {
         "debug": "2.6.9",
-        "encodeurl": "~1.0.2",
+        "encodeurl": "~2.0.0",
         "escape-html": "~1.0.3",
         "on-finished": "2.4.1",
         "parseurl": "~1.3.3",
@@ -438,6 +561,7 @@
       "version": "0.2.0",
       "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
       "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
@@ -446,6 +570,7 @@
       "version": "0.5.2",
       "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
       "integrity": "sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
@@ -456,6 +581,7 @@
       "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
       "dev": true,
       "hasInstallScript": true,
+      "license": "MIT",
       "optional": true,
       "os": [
         "darwin"
@@ -468,20 +594,27 @@
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
       "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
+      "license": "MIT",
       "funding": {
         "url": "https://github.com/sponsors/ljharb"
       }
     },
     "node_modules/get-intrinsic": {
-      "version": "1.2.4",
-      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz",
-      "integrity": "sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==",
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
+      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
+      "license": "MIT",
       "dependencies": {
+        "call-bind-apply-helpers": "^1.0.2",
+        "es-define-property": "^1.0.1",
         "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.1.1",
         "function-bind": "^1.1.2",
-        "has-proto": "^1.0.1",
-        "has-symbols": "^1.0.3",
-        "hasown": "^2.0.0"
+        "get-proto": "^1.0.1",
+        "gopd": "^1.2.0",
+        "has-symbols": "^1.1.0",
+        "hasown": "^2.0.2",
+        "math-intrinsics": "^1.1.0"
       },
       "engines": {
         "node": ">= 0.4"
@@ -490,11 +623,25 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/get-proto": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
+      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
+      "license": "MIT",
+      "dependencies": {
+        "dunder-proto": "^1.0.1",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
     "node_modules/glob-parent": {
       "version": "5.1.2",
       "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
       "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
       "dev": true,
+      "license": "ISC",
       "dependencies": {
         "is-glob": "^4.0.1"
       },
@@ -503,11 +650,12 @@
       }
     },
     "node_modules/gopd": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz",
-      "integrity": "sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==",
-      "dependencies": {
-        "get-intrinsic": "^1.1.3"
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
+      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
       },
       "funding": {
         "url": "https://github.com/sponsors/ljharb"
@@ -518,36 +666,16 @@
       "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
       "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
       "dev": true,
+      "license": "MIT",
       "engines": {
         "node": ">=4"
       }
     },
-    "node_modules/has-property-descriptors": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz",
-      "integrity": "sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==",
-      "dependencies": {
-        "es-define-property": "^1.0.0"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/ljharb"
-      }
-    },
-    "node_modules/has-proto": {
-      "version": "1.0.3",
-      "resolved": "https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz",
-      "integrity": "sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==",
-      "engines": {
-        "node": ">= 0.4"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/ljharb"
-      }
-    },
     "node_modules/has-symbols": {
-      "version": "1.0.3",
-      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz",
-      "integrity": "sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==",
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
+      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.4"
       },
@@ -559,6 +687,7 @@
       "version": "2.0.2",
       "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
       "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
+      "license": "MIT",
       "dependencies": {
         "function-bind": "^1.1.2"
       },
@@ -570,6 +699,7 @@
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
       "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
+      "license": "MIT",
       "dependencies": {
         "depd": "2.0.0",
         "inherits": "2.0.4",
@@ -584,12 +714,14 @@
     "node_modules/http-status-codes": {
       "version": "2.3.0",
       "resolved": "https://registry.npmjs.org/http-status-codes/-/http-status-codes-2.3.0.tgz",
-      "integrity": "sha512-RJ8XvFvpPM/Dmc5SV+dC4y5PCeOhT3x1Hq0NU3rjGeg5a/CqlhZ7uudknPwZFz4aeAXDcbAyaeP7GAo9lvngtA=="
+      "integrity": "sha512-RJ8XvFvpPM/Dmc5SV+dC4y5PCeOhT3x1Hq0NU3rjGeg5a/CqlhZ7uudknPwZFz4aeAXDcbAyaeP7GAo9lvngtA==",
+      "license": "MIT"
     },
     "node_modules/iconv-lite": {
       "version": "0.4.24",
       "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
       "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
+      "license": "MIT",
       "dependencies": {
         "safer-buffer": ">= 2.1.2 < 3"
       },
@@ -601,17 +733,20 @@
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz",
       "integrity": "sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA==",
-      "dev": true
+      "dev": true,
+      "license": "ISC"
     },
     "node_modules/inherits": {
       "version": "2.0.4",
       "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
-      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
+      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
+      "license": "ISC"
     },
     "node_modules/ipaddr.js": {
       "version": "1.9.1",
       "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
       "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.10"
       }
@@ -621,6 +756,7 @@
       "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
       "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "binary-extensions": "^2.0.0"
       },
@@ -633,6 +769,7 @@
       "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
       "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
       "dev": true,
+      "license": "MIT",
       "engines": {
         "node": ">=0.10.0"
       }
@@ -642,6 +779,7 @@
       "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
       "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "is-extglob": "^2.1.1"
       },
@@ -654,14 +792,22 @@
       "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
       "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
       "dev": true,
+      "license": "MIT",
       "engines": {
         "node": ">=0.12.0"
       }
     },
+    "node_modules/isarray": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
+      "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==",
+      "license": "MIT"
+    },
     "node_modules/jsonwebtoken": {
       "version": "9.0.2",
       "resolved": "https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-9.0.2.tgz",
       "integrity": "sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==",
+      "license": "MIT",
       "dependencies": {
         "jws": "^3.2.2",
         "lodash.includes": "^4.3.0",
@@ -682,14 +828,16 @@
     "node_modules/jsonwebtoken/node_modules/ms": {
       "version": "2.1.3",
       "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
-      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="
+      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
+      "license": "MIT"
     },
     "node_modules/jwa": {
-      "version": "1.4.1",
-      "resolved": "https://registry.npmjs.org/jwa/-/jwa-1.4.1.tgz",
-      "integrity": "sha512-qiLX/xhEEFKUAJ6FiBMbes3w9ATzyk5W7Hvzpa/SLYdxNtng+gcurvrI7TbACjIXlsJyr05/S1oUhZrc63evQA==",
+      "version": "1.4.2",
+      "resolved": "https://registry.npmjs.org/jwa/-/jwa-1.4.2.tgz",
+      "integrity": "sha512-eeH5JO+21J78qMvTIDdBXidBd6nG2kZjg5Ohz/1fpa28Z4CcsWUzJ1ZZyFq/3z3N17aZy+ZuBoHljASbL1WfOw==",
+      "license": "MIT",
       "dependencies": {
-        "buffer-equal-constant-time": "1.0.1",
+        "buffer-equal-constant-time": "^1.0.1",
         "ecdsa-sig-formatter": "1.0.11",
         "safe-buffer": "^5.0.1"
       }
@@ -698,72 +846,97 @@
       "version": "3.2.2",
       "resolved": "https://registry.npmjs.org/jws/-/jws-3.2.2.tgz",
       "integrity": "sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==",
+      "license": "MIT",
       "dependencies": {
         "jwa": "^1.4.1",
         "safe-buffer": "^5.0.1"
       }
     },
     "node_modules/lightning-pool": {
-      "version": "4.2.2",
-      "resolved": "https://registry.npmjs.org/lightning-pool/-/lightning-pool-4.2.2.tgz",
-      "integrity": "sha512-KW0Df0IbjNLxy5wAsdErTKYtHGwefLRQseHNksEctyaL7gtRwJT0nqLa2uiRdNYDwKSnZtqOjSjUNtfxmfH1qw==",
+      "version": "4.11.1",
+      "resolved": "https://registry.npmjs.org/lightning-pool/-/lightning-pool-4.11.1.tgz",
+      "integrity": "sha512-I/+aDkeFvKrdC204UcGbLuVTmGaSBP6F2VtWLuFtHCn0/bzuYKpei8Z+P4+HYE3lmJdGfNHVFjLeYLQaxmpymQ==",
+      "license": "MIT",
       "dependencies": {
-        "doublylinked": "^2.5.3",
-        "putil-promisify": "^1.10.1"
+        "doublylinked": "^2.5.6",
+        "putil-promisify": "^1.10.1",
+        "tslib": "^2.8.1"
       }
     },
     "node_modules/lodash.includes": {
       "version": "4.3.0",
       "resolved": "https://registry.npmjs.org/lodash.includes/-/lodash.includes-4.3.0.tgz",
-      "integrity": "sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w=="
+      "integrity": "sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w==",
+      "license": "MIT"
     },
     "node_modules/lodash.isboolean": {
       "version": "3.0.3",
       "resolved": "https://registry.npmjs.org/lodash.isboolean/-/lodash.isboolean-3.0.3.tgz",
-      "integrity": "sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg=="
+      "integrity": "sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg==",
+      "license": "MIT"
     },
     "node_modules/lodash.isinteger": {
       "version": "4.0.4",
       "resolved": "https://registry.npmjs.org/lodash.isinteger/-/lodash.isinteger-4.0.4.tgz",
-      "integrity": "sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA=="
+      "integrity": "sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA==",
+      "license": "MIT"
     },
     "node_modules/lodash.isnumber": {
       "version": "3.0.3",
       "resolved": "https://registry.npmjs.org/lodash.isnumber/-/lodash.isnumber-3.0.3.tgz",
-      "integrity": "sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw=="
+      "integrity": "sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw==",
+      "license": "MIT"
     },
     "node_modules/lodash.isplainobject": {
       "version": "4.0.6",
       "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",
-      "integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA=="
+      "integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==",
+      "license": "MIT"
     },
     "node_modules/lodash.isstring": {
       "version": "4.0.1",
       "resolved": "https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz",
-      "integrity": "sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw=="
+      "integrity": "sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==",
+      "license": "MIT"
     },
     "node_modules/lodash.once": {
       "version": "4.1.1",
       "resolved": "https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz",
-      "integrity": "sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg=="
+      "integrity": "sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg==",
+      "license": "MIT"
+    },
+    "node_modules/math-intrinsics": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
+      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      }
     },
     "node_modules/media-typer": {
       "version": "0.3.0",
       "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
       "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
     },
     "node_modules/merge-descriptors": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz",
-      "integrity": "sha512-cCi6g3/Zr1iqQi6ySbseM1Xvooa98N0w31jzUYrXPX2xqObmFGHJ0tQ5u74H3mVh7wLouTseZyYIq39g8cNp1w=="
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz",
+      "integrity": "sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==",
+      "license": "MIT",
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
     },
     "node_modules/methods": {
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
       "integrity": "sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
@@ -772,6 +945,7 @@
       "version": "1.6.0",
       "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
       "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
+      "license": "MIT",
       "bin": {
         "mime": "cli.js"
       },
@@ -783,6 +957,7 @@
       "version": "1.52.0",
       "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
       "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
@@ -791,6 +966,7 @@
       "version": "2.1.35",
       "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
       "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
+      "license": "MIT",
       "dependencies": {
         "mime-db": "1.52.0"
       },
@@ -803,6 +979,7 @@
       "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
       "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
       "dev": true,
+      "license": "ISC",
       "dependencies": {
         "brace-expansion": "^1.1.7"
       },
@@ -810,24 +987,87 @@
         "node": "*"
       }
     },
+    "node_modules/minimist": {
+      "version": "1.2.8",
+      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
+      "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
+      "license": "MIT",
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/mkdirp": {
+      "version": "0.5.6",
+      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.6.tgz",
+      "integrity": "sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==",
+      "license": "MIT",
+      "dependencies": {
+        "minimist": "^1.2.6"
+      },
+      "bin": {
+        "mkdirp": "bin/cmd.js"
+      }
+    },
     "node_modules/ms": {
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
-      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A=="
+      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
+      "license": "MIT"
+    },
+    "node_modules/multer": {
+      "version": "1.4.5-lts.2",
+      "resolved": "https://registry.npmjs.org/multer/-/multer-1.4.5-lts.2.tgz",
+      "integrity": "sha512-VzGiVigcG9zUAoCNU+xShztrlr1auZOlurXynNvO9GiWD1/mTBbUljOKY+qMeazBqXgRnjzeEgJI/wyjJUHg9A==",
+      "deprecated": "Multer 1.x is impacted by a number of vulnerabilities, which have been patched in 2.x. You should upgrade to the latest 2.x version.",
+      "license": "MIT",
+      "dependencies": {
+        "append-field": "^1.0.0",
+        "busboy": "^1.0.0",
+        "concat-stream": "^1.5.2",
+        "mkdirp": "^0.5.4",
+        "object-assign": "^4.1.1",
+        "type-is": "^1.6.4",
+        "xtend": "^4.0.0"
+      },
+      "engines": {
+        "node": ">= 6.0.0"
+      }
     },
     "node_modules/negotiator": {
       "version": "0.6.3",
       "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz",
       "integrity": "sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
     },
+    "node_modules/node-addon-api": {
+      "version": "8.5.0",
+      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-8.5.0.tgz",
+      "integrity": "sha512-/bRZty2mXUIFY/xU5HLvveNHlswNJej+RnxBjOMkidWfwZzgTbPG1E3K5TOxRLOR+5hX7bSofy8yf1hZevMS8A==",
+      "license": "MIT",
+      "engines": {
+        "node": "^18 || ^20 || >= 21"
+      }
+    },
+    "node_modules/node-gyp-build": {
+      "version": "4.8.4",
+      "resolved": "https://registry.npmjs.org/node-gyp-build/-/node-gyp-build-4.8.4.tgz",
+      "integrity": "sha512-LA4ZjwlnUblHVgq0oBF3Jl/6h/Nvs5fzBLwdEF4nuxnFdsfajde4WfxtJr3CaiH+F6ewcIB/q4jQ4UzPyid+CQ==",
+      "license": "MIT",
+      "bin": {
+        "node-gyp-build": "bin.js",
+        "node-gyp-build-optional": "optional.js",
+        "node-gyp-build-test": "build-test.js"
+      }
+    },
     "node_modules/nodemon": {
-      "version": "3.1.0",
-      "resolved": "https://registry.npmjs.org/nodemon/-/nodemon-3.1.0.tgz",
-      "integrity": "sha512-xqlktYlDMCepBJd43ZQhjWwMw2obW/JRvkrLxq5RCNcuDDX1DbcPT+qT1IlIIdf+DhnWs90JpTMe+Y5KxOchvA==",
+      "version": "3.1.10",
+      "resolved": "https://registry.npmjs.org/nodemon/-/nodemon-3.1.10.tgz",
+      "integrity": "sha512-WDjw3pJ0/0jMFmyNDp3gvY2YizjLmmOUQo6DEBY+JgdvW/yQ9mEeSw6H5ythl5Ny2ytb7f9C2nIbjSxMNzbJXw==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "chokidar": "^3.5.2",
         "debug": "^4",
@@ -852,12 +1092,13 @@
       }
     },
     "node_modules/nodemon/node_modules/debug": {
-      "version": "4.3.4",
-      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
-      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
+      "version": "4.4.1",
+      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
+      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
-        "ms": "2.1.2"
+        "ms": "^2.1.3"
       },
       "engines": {
         "node": ">=6.0"
@@ -869,31 +1110,18 @@
       }
     },
     "node_modules/nodemon/node_modules/ms": {
-      "version": "2.1.2",
-      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
-      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
-      "dev": true
-    },
-    "node_modules/nopt": {
-      "version": "1.0.10",
-      "resolved": "https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz",
-      "integrity": "sha512-NWmpvLSqUrgrAC9HCuxEvb+PSloHpqVu+FqcO4eeF2h5qYRhA7ev6KvelyQAKtegUbC6RypJnlEOhd8vloNKYg==",
+      "version": "2.1.3",
+      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
+      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
       "dev": true,
-      "dependencies": {
-        "abbrev": "1"
-      },
-      "bin": {
-        "nopt": "bin/nopt.js"
-      },
-      "engines": {
-        "node": "*"
-      }
+      "license": "MIT"
     },
     "node_modules/normalize-path": {
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
       "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
       "dev": true,
+      "license": "MIT",
       "engines": {
         "node": ">=0.10.0"
       }
@@ -902,14 +1130,19 @@
       "version": "4.1.1",
       "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
       "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
+      "license": "MIT",
       "engines": {
         "node": ">=0.10.0"
       }
     },
     "node_modules/object-inspect": {
-      "version": "1.13.1",
-      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.1.tgz",
-      "integrity": "sha512-5qoj1RUiKOMsCCNLV1CBiPYE10sziTsnmNxkAI/rZhiD63CF7IqdFGC/XzjWjpSgLf0LxXX3bDFIh0E18f6UhQ==",
+      "version": "1.13.4",
+      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz",
+      "integrity": "sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
       "funding": {
         "url": "https://github.com/sponsors/ljharb"
       }
@@ -917,12 +1150,14 @@
     "node_modules/obuf": {
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/obuf/-/obuf-1.1.2.tgz",
-      "integrity": "sha512-PX1wu0AmAdPqOL1mWhqmlOd8kOIZQwGZw6rh7uby9fTc5lhaOWFLX3I6R1hrF9k3zUY40e6igsLGkDXK92LJNg=="
+      "integrity": "sha512-PX1wu0AmAdPqOL1mWhqmlOd8kOIZQwGZw6rh7uby9fTc5lhaOWFLX3I6R1hrF9k3zUY40e6igsLGkDXK92LJNg==",
+      "license": "MIT"
     },
     "node_modules/on-finished": {
       "version": "2.4.1",
       "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
       "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
+      "license": "MIT",
       "dependencies": {
         "ee-first": "1.1.1"
       },
@@ -934,31 +1169,34 @@
       "version": "1.3.3",
       "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
       "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.8"
       }
     },
     "node_modules/path-to-regexp": {
-      "version": "0.1.7",
-      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",
-      "integrity": "sha512-5DFkuoqlv1uYQKxy8omFBeJPQcdoE07Kv2sferDCrAq1ohOU+MSDswDIbnx3YAM60qIOnYa53wBhXW0EbMonrQ=="
+      "version": "0.1.12",
+      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz",
+      "integrity": "sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==",
+      "license": "MIT"
     },
     "node_modules/pg": {
-      "version": "8.11.5",
-      "resolved": "https://registry.npmjs.org/pg/-/pg-8.11.5.tgz",
-      "integrity": "sha512-jqgNHSKL5cbDjFlHyYsCXmQDrfIX/3RsNwYqpd4N0Kt8niLuNoRNH+aazv6cOd43gPh9Y4DjQCtb+X0MH0Hvnw==",
+      "version": "8.16.3",
+      "resolved": "https://registry.npmjs.org/pg/-/pg-8.16.3.tgz",
+      "integrity": "sha512-enxc1h0jA/aq5oSDMvqyW3q89ra6XIIDZgCX9vkMrnz5DFTw/Ny3Li2lFQ+pt3L6MCgm/5o2o8HW9hiJji+xvw==",
+      "license": "MIT",
       "dependencies": {
-        "pg-connection-string": "^2.6.4",
-        "pg-pool": "^3.6.2",
-        "pg-protocol": "^1.6.1",
-        "pg-types": "^2.1.0",
-        "pgpass": "1.x"
+        "pg-connection-string": "^2.9.1",
+        "pg-pool": "^3.10.1",
+        "pg-protocol": "^1.10.3",
+        "pg-types": "2.2.0",
+        "pgpass": "1.0.5"
       },
       "engines": {
-        "node": ">= 8.0.0"
+        "node": ">= 16.0.0"
       },
       "optionalDependencies": {
-        "pg-cloudflare": "^1.1.1"
+        "pg-cloudflare": "^1.2.7"
       },
       "peerDependencies": {
         "pg-native": ">=3.0.1"
@@ -970,41 +1208,47 @@
       }
     },
     "node_modules/pg-cloudflare": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/pg-cloudflare/-/pg-cloudflare-1.1.1.tgz",
-      "integrity": "sha512-xWPagP/4B6BgFO+EKz3JONXv3YDgvkbVrGw2mTo3D6tVDQRh1e7cqVGvyR3BE+eQgAvx1XhW/iEASj4/jCWl3Q==",
+      "version": "1.2.7",
+      "resolved": "https://registry.npmjs.org/pg-cloudflare/-/pg-cloudflare-1.2.7.tgz",
+      "integrity": "sha512-YgCtzMH0ptvZJslLM1ffsY4EuGaU0cx4XSdXLRFae8bPP4dS5xL1tNB3k2o/N64cHJpwU7dxKli/nZ2lUa5fLg==",
+      "license": "MIT",
       "optional": true
     },
     "node_modules/pg-connection-string": {
-      "version": "2.6.4",
-      "resolved": "https://registry.npmjs.org/pg-connection-string/-/pg-connection-string-2.6.4.tgz",
-      "integrity": "sha512-v+Z7W/0EO707aNMaAEfiGnGL9sxxumwLl2fJvCQtMn9Fxsg+lPpPkdcyBSv/KFgpGdYkMfn+EI1Or2EHjpgLCA=="
+      "version": "2.9.1",
+      "resolved": "https://registry.npmjs.org/pg-connection-string/-/pg-connection-string-2.9.1.tgz",
+      "integrity": "sha512-nkc6NpDcvPVpZXxrreI/FOtX3XemeLl8E0qFr6F2Lrm/I8WOnaWNhIPK2Z7OHpw7gh5XJThi6j6ppgNoaT1w4w==",
+      "license": "MIT"
     },
     "node_modules/pg-int8": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/pg-int8/-/pg-int8-1.0.1.tgz",
       "integrity": "sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==",
+      "license": "ISC",
       "engines": {
         "node": ">=4.0.0"
       }
     },
     "node_modules/pg-pool": {
-      "version": "3.6.2",
-      "resolved": "https://registry.npmjs.org/pg-pool/-/pg-pool-3.6.2.tgz",
-      "integrity": "sha512-Htjbg8BlwXqSBQ9V8Vjtc+vzf/6fVUuak/3/XXKA9oxZprwW3IMDQTGHP+KDmVL7rtd+R1QjbnCFPuTHm3G4hg==",
+      "version": "3.10.1",
+      "resolved": "https://registry.npmjs.org/pg-pool/-/pg-pool-3.10.1.tgz",
+      "integrity": "sha512-Tu8jMlcX+9d8+QVzKIvM/uJtp07PKr82IUOYEphaWcoBhIYkoHpLXN3qO59nAI11ripznDsEzEv8nUxBVWajGg==",
+      "license": "MIT",
       "peerDependencies": {
         "pg": ">=8.0"
       }
     },
     "node_modules/pg-protocol": {
-      "version": "1.6.1",
-      "resolved": "https://registry.npmjs.org/pg-protocol/-/pg-protocol-1.6.1.tgz",
-      "integrity": "sha512-jPIlvgoD63hrEuihvIg+tJhoGjUsLPn6poJY9N5CnlPd91c2T18T/9zBtLxZSb1EhYxBRoZJtzScCaWlYLtktg=="
+      "version": "1.10.3",
+      "resolved": "https://registry.npmjs.org/pg-protocol/-/pg-protocol-1.10.3.tgz",
+      "integrity": "sha512-6DIBgBQaTKDJyxnXaLiLR8wBpQQcGWuAESkRBX/t6OwA8YsqP+iVSiond2EDy6Y/dsGk8rh/jtax3js5NeV7JQ==",
+      "license": "MIT"
     },
     "node_modules/pg-types": {
       "version": "2.2.0",
       "resolved": "https://registry.npmjs.org/pg-types/-/pg-types-2.2.0.tgz",
       "integrity": "sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==",
+      "license": "MIT",
       "dependencies": {
         "pg-int8": "1.0.1",
         "postgres-array": "~2.0.0",
@@ -1020,6 +1264,7 @@
       "version": "1.0.5",
       "resolved": "https://registry.npmjs.org/pgpass/-/pgpass-1.0.5.tgz",
       "integrity": "sha512-FdW9r/jQZhSeohs1Z3sI1yxFQNFvMcnmfuj4WBMUTxOrAyLMaTcE1aAMBiTlbMNaXvBCQuVi0R7hd8udDSP7ug==",
+      "license": "MIT",
       "dependencies": {
         "split2": "^4.1.0"
       }
@@ -1029,6 +1274,7 @@
       "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
       "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
       "dev": true,
+      "license": "MIT",
       "engines": {
         "node": ">=8.6"
       },
@@ -1036,10 +1282,42 @@
         "url": "https://github.com/sponsors/jonschlinkert"
       }
     },
+    "node_modules/postgrejs": {
+      "version": "2.22.4",
+      "resolved": "https://registry.npmjs.org/postgrejs/-/postgrejs-2.22.4.tgz",
+      "integrity": "sha512-ZtHefKDn7U+0hodDYtApzX/tktZ2O4kK+M5Q0PdUaOziNQoid7O0sWlxGIXzn7/ruHKsGi8DFvm9hTvptVX27w==",
+      "license": "MIT",
+      "dependencies": {
+        "@jsopen/objects": "^1.5.2",
+        "doublylinked": "^2.5.6",
+        "lightning-pool": "^4.10.1",
+        "postgres-bytea": "^3.0.0",
+        "power-tasks": "^1.11.0",
+        "putil-promisify": "^1.10.1",
+        "putil-varhelpers": "^1.6.5",
+        "tslib": "^2.8.1"
+      },
+      "engines": {
+        "node": ">=16.0"
+      }
+    },
+    "node_modules/postgrejs/node_modules/postgres-bytea": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-3.0.0.tgz",
+      "integrity": "sha512-CNd4jim9RFPkObHSjVHlVrxoVQXz7quwNFpz7RY1okNNme49+sVyiTvTRobiLV548Hx/hb1BG+iE7h9493WzFw==",
+      "license": "MIT",
+      "dependencies": {
+        "obuf": "~1.1.2"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
     "node_modules/postgres": {
-      "version": "3.4.4",
-      "resolved": "https://registry.npmjs.org/postgres/-/postgres-3.4.4.tgz",
-      "integrity": "sha512-IbyN+9KslkqcXa8AO9fxpk97PA4pzewvpi2B3Dwy9u4zpV32QicaEdgmF3eSQUzdRk7ttDHQejNgAEr4XoeH4A==",
+      "version": "3.4.7",
+      "resolved": "https://registry.npmjs.org/postgres/-/postgres-3.4.7.tgz",
+      "integrity": "sha512-Jtc2612XINuBjIl/QTWsV5UvE8UHuNblcO3vVADSrKsrc6RqGX6lOW1cEo3CM2v0XG4Nat8nI+YM7/f26VxXLw==",
+      "license": "Unlicense",
       "engines": {
         "node": ">=12"
       },
@@ -1052,6 +1330,7 @@
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/postgres-array/-/postgres-array-2.0.0.tgz",
       "integrity": "sha512-VpZrUqU5A69eQyW2c5CA1jtLecCsN2U/bD6VilrFDWq5+5UIEVO7nazS3TEcHf1zuPYO/sqGvUvW62g86RXZuA==",
+      "license": "MIT",
       "engines": {
         "node": ">=4"
       }
@@ -1060,6 +1339,7 @@
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-1.0.0.tgz",
       "integrity": "sha512-xy3pmLuQqRBZBXDULy7KbaitYqLcmxigw14Q5sj8QBVLqEwXfeybIKVWiqAXTlcvdvb0+xkOtDbfQMOf4lST1w==",
+      "license": "MIT",
       "engines": {
         "node": ">=0.10.0"
       }
@@ -1068,6 +1348,7 @@
       "version": "1.0.7",
       "resolved": "https://registry.npmjs.org/postgres-date/-/postgres-date-1.0.7.tgz",
       "integrity": "sha512-suDmjLVQg78nMK2UZ454hAG+OAW+HQPZ6n++TNDUX+L0+uUlLywnoxJKDou51Zm+zTCjrCl0Nq6J9C5hP9vK/Q==",
+      "license": "MIT",
       "engines": {
         "node": ">=0.10.0"
       }
@@ -1076,6 +1357,7 @@
       "version": "1.2.0",
       "resolved": "https://registry.npmjs.org/postgres-interval/-/postgres-interval-1.2.0.tgz",
       "integrity": "sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==",
+      "license": "MIT",
       "dependencies": {
         "xtend": "^4.0.0"
       },
@@ -1084,49 +1366,43 @@
       }
     },
     "node_modules/postgresql-client": {
-      "version": "2.11.0",
-      "resolved": "https://registry.npmjs.org/postgresql-client/-/postgresql-client-2.11.0.tgz",
-      "integrity": "sha512-QSPHcWVaiBG+JyASaDojOXvhRmsc2n8j2COdIjUDENFAtFls16Zy240asY2ENzZRQJUMAA8vpR8w4SAdI8jdbw==",
+      "version": "2.13.0",
+      "resolved": "https://registry.npmjs.org/postgresql-client/-/postgresql-client-2.13.0.tgz",
+      "integrity": "sha512-GOSQstAJiHeIwXrvARCp0y7PMwfzf+Egg0KOn1MiggykvQFr4OO8FyT0x7Yc3hcPL4iLk47z9KeAbbdVCqTP0g==",
+      "deprecated": "Package name 'postgresql-client' has been changed to 'postgrejs'. Please consider to update dependencies in your package.json",
+      "license": "MIT",
       "dependencies": {
-        "doublylinked": "^2.5.4",
-        "lightning-pool": "^4.2.2",
-        "postgres-bytea": "^3.0.0",
-        "power-tasks": "^1.7.3",
-        "putil-merge": "^3.12.1",
-        "putil-promisify": "^1.10.1",
-        "putil-varhelpers": "^1.6.5"
+        "postgrejs": "^2.15.1"
       },
       "engines": {
         "node": ">=16.0"
       }
     },
-    "node_modules/postgresql-client/node_modules/postgres-bytea": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-3.0.0.tgz",
-      "integrity": "sha512-CNd4jim9RFPkObHSjVHlVrxoVQXz7quwNFpz7RY1okNNme49+sVyiTvTRobiLV548Hx/hb1BG+iE7h9493WzFw==",
-      "dependencies": {
-        "obuf": "~1.1.2"
-      },
-      "engines": {
-        "node": ">= 6"
-      }
-    },
     "node_modules/power-tasks": {
-      "version": "1.7.3",
-      "resolved": "https://registry.npmjs.org/power-tasks/-/power-tasks-1.7.3.tgz",
-      "integrity": "sha512-EnkjLfaX4PxFYHbUWyWzlE4I8SgctaW9jx4qQXrVRoELlqBXrxIMtuhHzRwsHv2qs1tO7efOcZa6/wDCdCjRfA==",
+      "version": "1.11.0",
+      "resolved": "https://registry.npmjs.org/power-tasks/-/power-tasks-1.11.0.tgz",
+      "integrity": "sha512-UAVmqOw4miD+BW4gBrL1KJb24akTUfy1XglIFB7domD7Wyj0eQAyK9F9PnYYiw1pVLoyy3L+HfCYWwN2sMwCzg==",
+      "license": "MIT",
       "dependencies": {
         "doublylinked": "^2.5.4",
-        "strict-typed-events": "^2.3.3"
+        "strict-typed-events": "^2.8.0",
+        "tslib": "^2.6.3"
       },
       "engines": {
         "node": ">=16.0"
       }
     },
+    "node_modules/process-nextick-args": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
+      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==",
+      "license": "MIT"
+    },
     "node_modules/proxy-addr": {
       "version": "2.0.7",
       "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
       "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
+      "license": "MIT",
       "dependencies": {
         "forwarded": "0.2.0",
         "ipaddr.js": "1.9.1"
@@ -1139,20 +1415,14 @@
       "version": "1.1.8",
       "resolved": "https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz",
       "integrity": "sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==",
-      "dev": true
-    },
-    "node_modules/putil-merge": {
-      "version": "3.12.1",
-      "resolved": "https://registry.npmjs.org/putil-merge/-/putil-merge-3.12.1.tgz",
-      "integrity": "sha512-4clPyRkJPrd5zl98AP7I3JamyXbx0ixe2CnfvGwoTyWSr7Kslcv8weoKjfU4BMBifkWIRL54l4OrNe97pYcDwQ==",
-      "engines": {
-        "node": ">= 10.0"
-      }
+      "dev": true,
+      "license": "MIT"
     },
     "node_modules/putil-promisify": {
       "version": "1.10.1",
       "resolved": "https://registry.npmjs.org/putil-promisify/-/putil-promisify-1.10.1.tgz",
       "integrity": "sha512-1jm0egJNrj5eBDRj15Cg08RNHDV91OVEHeeYjAFRcs663PXxFokndxcJAGbaO6CSErCTp8eTgC8vuOF+fvXIAA==",
+      "license": "MIT",
       "engines": {
         "node": ">= 14.0"
       }
@@ -1161,16 +1431,18 @@
       "version": "1.6.5",
       "resolved": "https://registry.npmjs.org/putil-varhelpers/-/putil-varhelpers-1.6.5.tgz",
       "integrity": "sha512-kyu+lE5xkc65ScgaIi6rNONLXeS7jGBxl1I0rzHVsFGAAQ45D/VkuEev+t09PFB943F+CqdWFLczH6ePk5TPAA==",
+      "license": "MIT",
       "engines": {
         "node": ">= 6.0"
       }
     },
     "node_modules/qs": {
-      "version": "6.11.0",
-      "resolved": "https://registry.npmjs.org/qs/-/qs-6.11.0.tgz",
-      "integrity": "sha512-MvjoMCJwEarSbUYk5O+nmoSzSutSsTwF85zcHPQ9OrlFoZOYIjaqBAJIqIXjptyD5vThxGq52Xu/MaJzRkIk4Q==",
+      "version": "6.13.0",
+      "resolved": "https://registry.npmjs.org/qs/-/qs-6.13.0.tgz",
+      "integrity": "sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==",
+      "license": "BSD-3-Clause",
       "dependencies": {
-        "side-channel": "^1.0.4"
+        "side-channel": "^1.0.6"
       },
       "engines": {
         "node": ">=0.6"
@@ -1183,6 +1455,7 @@
       "version": "1.2.1",
       "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
       "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
@@ -1191,6 +1464,7 @@
       "version": "2.5.2",
       "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz",
       "integrity": "sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==",
+      "license": "MIT",
       "dependencies": {
         "bytes": "3.1.2",
         "http-errors": "2.0.0",
@@ -1201,11 +1475,33 @@
         "node": ">= 0.8"
       }
     },
+    "node_modules/readable-stream": {
+      "version": "2.3.8",
+      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz",
+      "integrity": "sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==",
+      "license": "MIT",
+      "dependencies": {
+        "core-util-is": "~1.0.0",
+        "inherits": "~2.0.3",
+        "isarray": "~1.0.0",
+        "process-nextick-args": "~2.0.0",
+        "safe-buffer": "~5.1.1",
+        "string_decoder": "~1.1.1",
+        "util-deprecate": "~1.0.1"
+      }
+    },
+    "node_modules/readable-stream/node_modules/safe-buffer": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
+      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
+      "license": "MIT"
+    },
     "node_modules/readdirp": {
       "version": "3.6.0",
       "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
       "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "picomatch": "^2.2.1"
       },
@@ -1217,6 +1513,7 @@
       "version": "1.3.8",
       "resolved": "https://registry.npmjs.org/router/-/router-1.3.8.tgz",
       "integrity": "sha512-461UFH44NtSfIlS83PUg2N7OZo86BC/kB3dY77gJdsODsBhhw7+2uE0tzTINxrY9CahCUVk1VhpWCA5i1yoIEg==",
+      "license": "MIT",
       "dependencies": {
         "array-flatten": "3.0.0",
         "debug": "2.6.9",
@@ -1233,7 +1530,14 @@
     "node_modules/router/node_modules/array-flatten": {
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-3.0.0.tgz",
-      "integrity": "sha512-zPMVc3ZYlGLNk4mpK1NzP2wg0ml9t7fUgDsayR5Y5rSzxQilzR9FGu/EH2jQOcKSAeAfWeylyW8juy3OkWRvNA=="
+      "integrity": "sha512-zPMVc3ZYlGLNk4mpK1NzP2wg0ml9t7fUgDsayR5Y5rSzxQilzR9FGu/EH2jQOcKSAeAfWeylyW8juy3OkWRvNA==",
+      "license": "MIT"
+    },
+    "node_modules/router/node_modules/path-to-regexp": {
+      "version": "0.1.7",
+      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",
+      "integrity": "sha512-5DFkuoqlv1uYQKxy8omFBeJPQcdoE07Kv2sferDCrAq1ohOU+MSDswDIbnx3YAM60qIOnYa53wBhXW0EbMonrQ==",
+      "license": "MIT"
     },
     "node_modules/safe-buffer": {
       "version": "5.2.1",
@@ -1252,17 +1556,20 @@
           "type": "consulting",
           "url": "https://feross.org/support"
         }
-      ]
+      ],
+      "license": "MIT"
     },
     "node_modules/safer-buffer": {
       "version": "2.1.2",
       "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
-      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="
+      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
+      "license": "MIT"
     },
     "node_modules/semver": {
-      "version": "7.6.2",
-      "resolved": "https://registry.npmjs.org/semver/-/semver-7.6.2.tgz",
-      "integrity": "sha512-FNAIBWCx9qcRhoHcgcJ0gvU7SN1lYU2ZXuSfl04bSC5OpvDHFyJCjdNHomPXxjQlCBU67YW64PzY7/VIEH7F2w==",
+      "version": "7.7.2",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
+      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
+      "license": "ISC",
       "bin": {
         "semver": "bin/semver.js"
       },
@@ -1271,9 +1578,10 @@
       }
     },
     "node_modules/send": {
-      "version": "0.18.0",
-      "resolved": "https://registry.npmjs.org/send/-/send-0.18.0.tgz",
-      "integrity": "sha512-qqWzuOjSFOuqPjFe4NOsMLafToQQwBSOEpS+FwEt3A2V3vKubTquT3vmLTQpFgMXp8AlFWFuP1qKaJZOtPpVXg==",
+      "version": "0.19.0",
+      "resolved": "https://registry.npmjs.org/send/-/send-0.19.0.tgz",
+      "integrity": "sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==",
+      "license": "MIT",
       "dependencies": {
         "debug": "2.6.9",
         "depd": "2.0.0",
@@ -1293,55 +1601,106 @@
         "node": ">= 0.8.0"
       }
     },
+    "node_modules/send/node_modules/encodeurl": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
+      "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
     "node_modules/send/node_modules/ms": {
       "version": "2.1.3",
       "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
-      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="
+      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
+      "license": "MIT"
     },
     "node_modules/serve-static": {
-      "version": "1.15.0",
-      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.15.0.tgz",
-      "integrity": "sha512-XGuRDNjXUijsUL0vl6nSD7cwURuzEgglbOaFuZM9g3kwDXOWVTck0jLzjPzGD+TazWbboZYu52/9/XPdUgne9g==",
+      "version": "1.16.2",
+      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz",
+      "integrity": "sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==",
+      "license": "MIT",
       "dependencies": {
-        "encodeurl": "~1.0.2",
+        "encodeurl": "~2.0.0",
         "escape-html": "~1.0.3",
         "parseurl": "~1.3.3",
-        "send": "0.18.0"
+        "send": "0.19.0"
       },
       "engines": {
         "node": ">= 0.8.0"
       }
     },
-    "node_modules/set-function-length": {
-      "version": "1.2.2",
-      "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",
-      "integrity": "sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==",
+    "node_modules/setprototypeof": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
+      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
+      "license": "ISC"
+    },
+    "node_modules/side-channel": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
+      "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
+      "license": "MIT",
       "dependencies": {
-        "define-data-property": "^1.1.4",
         "es-errors": "^1.3.0",
-        "function-bind": "^1.1.2",
-        "get-intrinsic": "^1.2.4",
-        "gopd": "^1.0.1",
-        "has-property-descriptors": "^1.0.2"
+        "object-inspect": "^1.13.3",
+        "side-channel-list": "^1.0.0",
+        "side-channel-map": "^1.0.1",
+        "side-channel-weakmap": "^1.0.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/side-channel-list": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
+      "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
+      "license": "MIT",
+      "dependencies": {
+        "es-errors": "^1.3.0",
+        "object-inspect": "^1.13.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/side-channel-map": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
+      "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.5",
+        "object-inspect": "^1.13.3"
       },
       "engines": {
         "node": ">= 0.4"
-      }
-    },
-    "node_modules/setprototypeof": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
-      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw=="
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
     },
-    "node_modules/side-channel": {
-      "version": "1.0.6",
-      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz",
-      "integrity": "sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==",
+    "node_modules/side-channel-weakmap": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
+      "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
+      "license": "MIT",
       "dependencies": {
-        "call-bind": "^1.0.7",
+        "call-bound": "^1.0.2",
         "es-errors": "^1.3.0",
-        "get-intrinsic": "^1.2.4",
-        "object-inspect": "^1.13.1"
+        "get-intrinsic": "^1.2.5",
+        "object-inspect": "^1.13.3",
+        "side-channel-map": "^1.0.1"
       },
       "engines": {
         "node": ">= 0.4"
@@ -1355,6 +1714,7 @@
       "resolved": "https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-2.0.0.tgz",
       "integrity": "sha512-a2B9Y0KlNXl9u/vsW6sTIu9vGEpfKu2wRV6l1H3XEas/0gUIzGzBoP/IouTcUQbm9JWZLH3COxyn03TYlFax6w==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "semver": "^7.5.3"
       },
@@ -1366,6 +1726,7 @@
       "version": "4.2.0",
       "resolved": "https://registry.npmjs.org/split2/-/split2-4.2.0.tgz",
       "integrity": "sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==",
+      "license": "ISC",
       "engines": {
         "node": ">= 10.x"
       }
@@ -1374,27 +1735,54 @@
       "version": "2.0.1",
       "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
       "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.8"
       }
     },
+    "node_modules/streamsearch": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/streamsearch/-/streamsearch-1.1.0.tgz",
+      "integrity": "sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==",
+      "engines": {
+        "node": ">=10.0.0"
+      }
+    },
     "node_modules/strict-typed-events": {
-      "version": "2.3.3",
-      "resolved": "https://registry.npmjs.org/strict-typed-events/-/strict-typed-events-2.3.3.tgz",
-      "integrity": "sha512-Vc8/N5giCVpO2n5BCskqDD9ns7RkdEq0pFd4yQk1ROULusJDbjORNvbtyEPxxK7Xqn9/NdW8XHLxv/PvUTgFsA==",
+      "version": "2.8.0",
+      "resolved": "https://registry.npmjs.org/strict-typed-events/-/strict-typed-events-2.8.0.tgz",
+      "integrity": "sha512-mDCPe06HIzzDliG09N9ypPvx2nDgAFl3IDJe8NNCoViDWYh0E98+02WJdZnUSFWiUphaRbUDbDksg/SgiaEBDA==",
+      "license": "MIT",
       "dependencies": {
         "putil-promisify": "^1.10.1",
-        "ts-gems": "^3.1.0"
+        "ts-gems": "^3.5.0",
+        "tslib": "^2.6.3"
       },
       "engines": {
         "node": ">=16.0"
       }
     },
+    "node_modules/string_decoder": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+      "license": "MIT",
+      "dependencies": {
+        "safe-buffer": "~5.1.0"
+      }
+    },
+    "node_modules/string_decoder/node_modules/safe-buffer": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
+      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
+      "license": "MIT"
+    },
     "node_modules/supports-color": {
       "version": "5.5.0",
       "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
       "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "has-flag": "^3.0.0"
       },
@@ -1407,6 +1795,7 @@
       "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
       "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "is-number": "^7.0.0"
       },
@@ -1418,31 +1807,38 @@
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
       "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
+      "license": "MIT",
       "engines": {
         "node": ">=0.6"
       }
     },
     "node_modules/touch": {
-      "version": "3.1.0",
-      "resolved": "https://registry.npmjs.org/touch/-/touch-3.1.0.tgz",
-      "integrity": "sha512-WBx8Uy5TLtOSRtIq+M03/sKDrXCLHxwDcquSP2c43Le03/9serjQBIztjRz6FkJez9D/hleyAXTBGLwwZUw9lA==",
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/touch/-/touch-3.1.1.tgz",
+      "integrity": "sha512-r0eojU4bI8MnHr8c5bNo7lJDdI2qXlWWJk6a9EAFG7vbhTjElYhBVS3/miuE0uOuoLdb8Mc/rVfsmm6eo5o9GA==",
       "dev": true,
-      "dependencies": {
-        "nopt": "~1.0.10"
-      },
+      "license": "ISC",
       "bin": {
         "nodetouch": "bin/nodetouch.js"
       }
     },
     "node_modules/ts-gems": {
-      "version": "3.4.0",
-      "resolved": "https://registry.npmjs.org/ts-gems/-/ts-gems-3.4.0.tgz",
-      "integrity": "sha512-RM1TN7GRmweAdNXNM89S4tLz+Ur3HslR4ePYND6RBhRzxsiUOnfVFyTey01+9YUs8Vhxb/OsO6rHlu5xJGzBXw=="
+      "version": "3.11.3",
+      "resolved": "https://registry.npmjs.org/ts-gems/-/ts-gems-3.11.3.tgz",
+      "integrity": "sha512-zEAkPUvP9L7f6SmzXq3mtKnRr6nbWt2vMdGl2NO0b1stHFFtKcmNxZKLHyv5889gOp3InI4ki2WaZAtz85OJBg==",
+      "license": "MIT"
+    },
+    "node_modules/tslib": {
+      "version": "2.8.1",
+      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
+      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
+      "license": "0BSD"
     },
     "node_modules/type-is": {
       "version": "1.6.18",
       "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
       "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
+      "license": "MIT",
       "dependencies": {
         "media-typer": "0.3.0",
         "mime-types": "~2.1.24"
@@ -1451,24 +1847,39 @@
         "node": ">= 0.6"
       }
     },
+    "node_modules/typedarray": {
+      "version": "0.0.6",
+      "resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",
+      "integrity": "sha512-/aCDEGatGvZ2BIk+HmLf4ifCJFwvKFNb9/JeZPMulfgFracn9QFcAf5GO8B/mweUjSoblS5In0cWhqpfs/5PQA==",
+      "license": "MIT"
+    },
     "node_modules/undefsafe": {
       "version": "2.0.5",
       "resolved": "https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz",
       "integrity": "sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA==",
-      "dev": true
+      "dev": true,
+      "license": "MIT"
     },
     "node_modules/unpipe": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
       "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.8"
       }
     },
+    "node_modules/util-deprecate": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
+      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
+      "license": "MIT"
+    },
     "node_modules/utils-merge": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
       "integrity": "sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.4.0"
       }
@@ -1477,6 +1888,7 @@
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
       "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.8"
       }
@@ -1485,6 +1897,7 @@
       "version": "4.0.2",
       "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
       "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
+      "license": "MIT",
       "engines": {
         "node": ">=0.4"
       }
Index: node_modules/postgres/src/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import os from 'os'\r\nimport fs from 'fs'\r\n\r\nimport {\r\n  mergeUserTypes,\r\n  inferType,\r\n  Parameter,\r\n  Identifier,\r\n  Builder,\r\n  toPascal,\r\n  pascal,\r\n  toCamel,\r\n  camel,\r\n  toKebab,\r\n  kebab,\r\n  fromPascal,\r\n  fromCamel,\r\n  fromKebab\r\n} from './types.js'\r\n\r\nimport Connection from './connection.js'\r\nimport { Query, CLOSE } from './query.js'\r\nimport Queue from './queue.js'\r\nimport { Errors, PostgresError } from './errors.js'\r\nimport Subscribe from './subscribe.js'\r\nimport largeObject from './large.js'\r\n\r\nObject.assign(Postgres, {\r\n  PostgresError,\r\n  toPascal,\r\n  pascal,\r\n  toCamel,\r\n  camel,\r\n  toKebab,\r\n  kebab,\r\n  fromPascal,\r\n  fromCamel,\r\n  fromKebab,\r\n  BigInt: {\r\n    to: 20,\r\n    from: [20],\r\n    parse: x => BigInt(x), // eslint-disable-line\r\n    serialize: x => x.toString()\r\n  }\r\n})\r\n\r\nexport default Postgres\r\n\r\nfunction Postgres(a, b) {\r\n  const options = parseOptions(a, b)\r\n      , subscribe = options.no_subscribe || Subscribe(Postgres, { ...options })\r\n\r\n  let ending = false\r\n\r\n  const queries = Queue()\r\n      , connecting = Queue()\r\n      , reserved = Queue()\r\n      , closed = Queue()\r\n      , ended = Queue()\r\n      , open = Queue()\r\n      , busy = Queue()\r\n      , full = Queue()\r\n      , queues = { connecting, reserved, closed, ended, open, busy, full }\r\n\r\n  const connections = [...Array(options.max)].map(() => Connection(options, queues, { onopen, onend, onclose }))\r\n\r\n  const sql = Sql(handler)\r\n\r\n  Object.assign(sql, {\r\n    get parameters() { return options.parameters },\r\n    largeObject: largeObject.bind(null, sql),\r\n    subscribe,\r\n    CLOSE,\r\n    END: CLOSE,\r\n    PostgresError,\r\n    options,\r\n    reserve,\r\n    listen,\r\n    begin,\r\n    close,\r\n    end\r\n  })\r\n\r\n  return sql\r\n\r\n  function Sql(handler) {\r\n    handler.debug = options.debug\r\n\r\n    Object.entries(options.types).reduce((acc, [name, type]) => {\r\n      acc[name] = (x) => new Parameter(x, type.to)\r\n      return acc\r\n    }, typed)\r\n\r\n    Object.assign(sql, {\r\n      types: typed,\r\n      typed,\r\n      unsafe,\r\n      notify,\r\n      array,\r\n      json,\r\n      file\r\n    })\r\n\r\n    return sql\r\n\r\n    function typed(value, type) {\r\n      return new Parameter(value, type)\r\n    }\r\n\r\n    function sql(strings, ...args) {\r\n      const query = strings && Array.isArray(strings.raw)\r\n        ? new Query(strings, args, handler, cancel)\r\n        : typeof strings === 'string' && !args.length\r\n          ? new Identifier(options.transform.column.to ? options.transform.column.to(strings) : strings)\r\n          : new Builder(strings, args)\r\n      return query\r\n    }\r\n\r\n    function unsafe(string, args = [], options = {}) {\r\n      arguments.length === 2 && !Array.isArray(args) && (options = args, args = [])\r\n      const query = new Query([string], args, handler, cancel, {\r\n        prepare: false,\r\n        ...options,\r\n        simple: 'simple' in options ? options.simple : args.length === 0\r\n      })\r\n      return query\r\n    }\r\n\r\n    function file(path, args = [], options = {}) {\r\n      arguments.length === 2 && !Array.isArray(args) && (options = args, args = [])\r\n      const query = new Query([], args, (query) => {\r\n        fs.readFile(path, 'utf8', (err, string) => {\r\n          if (err)\r\n            return query.reject(err)\r\n\r\n          query.strings = [string]\r\n          handler(query)\r\n        })\r\n      }, cancel, {\r\n        ...options,\r\n        simple: 'simple' in options ? options.simple : args.length === 0\r\n      })\r\n      return query\r\n    }\r\n  }\r\n\r\n  async function listen(name, fn, onlisten) {\r\n    const listener = { fn, onlisten }\r\n\r\n    const sql = listen.sql || (listen.sql = Postgres({\r\n      ...options,\r\n      max: 1,\r\n      idle_timeout: null,\r\n      max_lifetime: null,\r\n      fetch_types: false,\r\n      onclose() {\r\n        Object.entries(listen.channels).forEach(([name, { listeners }]) => {\r\n          delete listen.channels[name]\r\n          Promise.all(listeners.map(l => listen(name, l.fn, l.onlisten).catch(() => { /* noop */ })))\r\n        })\r\n      },\r\n      onnotify(c, x) {\r\n        c in listen.channels && listen.channels[c].listeners.forEach(l => l.fn(x))\r\n      }\r\n    }))\r\n\r\n    const channels = listen.channels || (listen.channels = {})\r\n        , exists = name in channels\r\n\r\n    if (exists) {\r\n      channels[name].listeners.push(listener)\r\n      const result = await channels[name].result\r\n      listener.onlisten && listener.onlisten()\r\n      return { state: result.state, unlisten }\r\n    }\r\n\r\n    channels[name] = { result: sql`listen ${\r\n      sql.unsafe('\"' + name.replace(/\"/g, '\"\"') + '\"')\r\n    }`, listeners: [listener] }\r\n    const result = await channels[name].result\r\n    listener.onlisten && listener.onlisten()\r\n    return { state: result.state, unlisten }\r\n\r\n    async function unlisten() {\r\n      if (name in channels === false)\r\n        return\r\n\r\n      channels[name].listeners = channels[name].listeners.filter(x => x !== listener)\r\n      if (channels[name].listeners.length)\r\n        return\r\n\r\n      delete channels[name]\r\n      return sql`unlisten ${\r\n        sql.unsafe('\"' + name.replace(/\"/g, '\"\"') + '\"')\r\n      }`\r\n    }\r\n  }\r\n\r\n  async function notify(channel, payload) {\r\n    return await sql`select pg_notify(${ channel }, ${ '' + payload })`\r\n  }\r\n\r\n  async function reserve() {\r\n    const queue = Queue()\r\n    const c = open.length\r\n      ? open.shift()\r\n      : await new Promise(r => {\r\n        queries.push({ reserve: r })\r\n        closed.length && connect(closed.shift())\r\n      })\r\n\r\n    move(c, reserved)\r\n    c.reserved = () => queue.length\r\n      ? c.execute(queue.shift())\r\n      : move(c, reserved)\r\n    c.reserved.release = true\r\n\r\n    const sql = Sql(handler)\r\n    sql.release = () => {\r\n      c.reserved = null\r\n      onopen(c)\r\n    }\r\n\r\n    return sql\r\n\r\n    function handler(q) {\r\n      c.queue === full\r\n        ? queue.push(q)\r\n        : c.execute(q) || move(c, full)\r\n    }\r\n  }\r\n\r\n  async function begin(options, fn) {\r\n    !fn && (fn = options, options = '')\r\n    const queries = Queue()\r\n    let savepoints = 0\r\n      , connection\r\n      , prepare = null\r\n\r\n    try {\r\n      await sql.unsafe('begin ' + options.replace(/[^a-z ]/ig, ''), [], { onexecute }).execute()\r\n      return await Promise.race([\r\n        scope(connection, fn),\r\n        new Promise((_, reject) => connection.onclose = reject)\r\n      ])\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n\r\n    async function scope(c, fn, name) {\r\n      const sql = Sql(handler)\r\n      sql.savepoint = savepoint\r\n      sql.prepare = x => prepare = x.replace(/[^a-z0-9$-_. ]/gi)\r\n      let uncaughtError\r\n        , result\r\n\r\n      name && await sql`savepoint ${ sql(name) }`\r\n      try {\r\n        result = await new Promise((resolve, reject) => {\r\n          const x = fn(sql)\r\n          Promise.resolve(Array.isArray(x) ? Promise.all(x) : x).then(resolve, reject)\r\n        })\r\n\r\n        if (uncaughtError)\r\n          throw uncaughtError\r\n      } catch (e) {\r\n        await (name\r\n          ? sql`rollback to ${ sql(name) }`\r\n          : sql`rollback`\r\n        )\r\n        throw e instanceof PostgresError && e.code === '25P02' && uncaughtError || e\r\n      }\r\n\r\n      if (!name) {\r\n        prepare\r\n          ? await sql`prepare transaction '${ sql.unsafe(prepare) }'`\r\n          : await sql`commit`\r\n      }\r\n\r\n      return result\r\n\r\n      function savepoint(name, fn) {\r\n        if (name && Array.isArray(name.raw))\r\n          return savepoint(sql => sql.apply(sql, arguments))\r\n\r\n        arguments.length === 1 && (fn = name, name = null)\r\n        return scope(c, fn, 's' + savepoints++ + (name ? '_' + name : ''))\r\n      }\r\n\r\n      function handler(q) {\r\n        q.catch(e => uncaughtError || (uncaughtError = e))\r\n        c.queue === full\r\n          ? queries.push(q)\r\n          : c.execute(q) || move(c, full)\r\n      }\r\n    }\r\n\r\n    function onexecute(c) {\r\n      connection = c\r\n      move(c, reserved)\r\n      c.reserved = () => queries.length\r\n        ? c.execute(queries.shift())\r\n        : move(c, reserved)\r\n    }\r\n  }\r\n\r\n  function move(c, queue) {\r\n    c.queue.remove(c)\r\n    queue.push(c)\r\n    c.queue = queue\r\n    queue === open\r\n      ? c.idleTimer.start()\r\n      : c.idleTimer.cancel()\r\n    return c\r\n  }\r\n\r\n  function json(x) {\r\n    return new Parameter(x, 3802)\r\n  }\r\n\r\n  function array(x, type) {\r\n    if (!Array.isArray(x))\r\n      return array(Array.from(arguments))\r\n\r\n    return new Parameter(x, type || (x.length ? inferType(x) || 25 : 0), options.shared.typeArrayMap)\r\n  }\r\n\r\n  function handler(query) {\r\n    if (ending)\r\n      return query.reject(Errors.connection('CONNECTION_ENDED', options, options))\r\n\r\n    if (open.length)\r\n      return go(open.shift(), query)\r\n\r\n    if (closed.length)\r\n      return connect(closed.shift(), query)\r\n\r\n    busy.length\r\n      ? go(busy.shift(), query)\r\n      : queries.push(query)\r\n  }\r\n\r\n  function go(c, query) {\r\n    return c.execute(query)\r\n      ? move(c, busy)\r\n      : move(c, full)\r\n  }\r\n\r\n  function cancel(query) {\r\n    return new Promise((resolve, reject) => {\r\n      query.state\r\n        ? query.active\r\n          ? Connection(options).cancel(query.state, resolve, reject)\r\n          : query.cancelled = { resolve, reject }\r\n        : (\r\n          queries.remove(query),\r\n          query.cancelled = true,\r\n          query.reject(Errors.generic('57014', 'canceling statement due to user request')),\r\n          resolve()\r\n        )\r\n    })\r\n  }\r\n\r\n  async function end({ timeout = null } = {}) {\r\n    if (ending)\r\n      return ending\r\n\r\n    await 1\r\n    let timer\r\n    return ending = Promise.race([\r\n      new Promise(r => timeout !== null && (timer = setTimeout(destroy, timeout * 1000, r))),\r\n      Promise.all(connections.map(c => c.end()).concat(\r\n        listen.sql ? listen.sql.end({ timeout: 0 }) : [],\r\n        subscribe.sql ? subscribe.sql.end({ timeout: 0 }) : []\r\n      ))\r\n    ]).then(() => clearTimeout(timer))\r\n  }\r\n\r\n  async function close() {\r\n    await Promise.all(connections.map(c => c.end()))\r\n  }\r\n\r\n  async function destroy(resolve) {\r\n    await Promise.all(connections.map(c => c.terminate()))\r\n    while (queries.length)\r\n      queries.shift().reject(Errors.connection('CONNECTION_DESTROYED', options))\r\n    resolve()\r\n  }\r\n\r\n  function connect(c, query) {\r\n    move(c, connecting)\r\n    c.connect(query)\r\n    return c\r\n  }\r\n\r\n  function onend(c) {\r\n    move(c, ended)\r\n  }\r\n\r\n  function onopen(c) {\r\n    if (queries.length === 0)\r\n      return move(c, open)\r\n\r\n    let max = Math.ceil(queries.length / (connecting.length + 1))\r\n      , ready = true\r\n\r\n    while (ready && queries.length && max-- > 0) {\r\n      const query = queries.shift()\r\n      if (query.reserve)\r\n        return query.reserve(c)\r\n\r\n      ready = c.execute(query)\r\n    }\r\n\r\n    ready\r\n      ? move(c, busy)\r\n      : move(c, full)\r\n  }\r\n\r\n  function onclose(c, e) {\r\n    move(c, closed)\r\n    c.reserved = null\r\n    c.onclose && (c.onclose(e), c.onclose = null)\r\n    options.onclose && options.onclose(c.id)\r\n    queries.length && connect(c, queries.shift())\r\n  }\r\n}\r\n\r\nfunction parseOptions(a, b) {\r\n  if (a && a.shared)\r\n    return a\r\n\r\n  const env = process.env // eslint-disable-line\r\n      , o = (!a || typeof a === 'string' ? b : a) || {}\r\n      , { url, multihost } = parseUrl(a)\r\n      , query = [...url.searchParams].reduce((a, [b, c]) => (a[b] = c, a), {})\r\n      , host = o.hostname || o.host || multihost || url.hostname || env.PGHOST || 'localhost'\r\n      , port = o.port || url.port || env.PGPORT || 5432\r\n      , user = o.user || o.username || url.username || env.PGUSERNAME || env.PGUSER || osUsername()\r\n\r\n  o.no_prepare && (o.prepare = false)\r\n  query.sslmode && (query.ssl = query.sslmode, delete query.sslmode)\r\n  'timeout' in o && (console.log('The timeout option is deprecated, use idle_timeout instead'), o.idle_timeout = o.timeout) // eslint-disable-line\r\n  query.sslrootcert === 'system' && (query.ssl = 'verify-full')\r\n\r\n  const ints = ['idle_timeout', 'connect_timeout', 'max_lifetime', 'max_pipeline', 'backoff', 'keep_alive']\r\n  const defaults = {\r\n    max             : 10,\r\n    ssl             : false,\r\n    idle_timeout    : null,\r\n    connect_timeout : 30,\r\n    max_lifetime    : max_lifetime,\r\n    max_pipeline    : 100,\r\n    backoff         : backoff,\r\n    keep_alive      : 60,\r\n    prepare         : true,\r\n    debug           : false,\r\n    fetch_types     : true,\r\n    publications    : 'alltables',\r\n    target_session_attrs: null\r\n  }\r\n\r\n  return {\r\n    host            : Array.isArray(host) ? host : host.split(',').map(x => x.split(':')[0]),\r\n    port            : Array.isArray(port) ? port : host.split(',').map(x => parseInt(x.split(':')[1] || port)),\r\n    path            : o.path || host.indexOf('/') > -1 && host + '/.s.PGSQL.' + port,\r\n    database        : o.database || o.db || (url.pathname || '').slice(1) || env.PGDATABASE || user,\r\n    user            : user,\r\n    pass            : o.pass || o.password || url.password || env.PGPASSWORD || '',\r\n    ...Object.entries(defaults).reduce(\r\n      (acc, [k, d]) => {\r\n        const value = k in o ? o[k] : k in query\r\n          ? (query[k] === 'disable' || query[k] === 'false' ? false : query[k])\r\n          : env['PG' + k.toUpperCase()] || d\r\n        acc[k] = typeof value === 'string' && ints.includes(k)\r\n          ? +value\r\n          : value\r\n        return acc\r\n      },\r\n      {}\r\n    ),\r\n    connection      : {\r\n      application_name: 'postgres.js',\r\n      ...o.connection,\r\n      ...Object.entries(query).reduce((acc, [k, v]) => (k in defaults || (acc[k] = v), acc), {})\r\n    },\r\n    types           : o.types || {},\r\n    target_session_attrs: tsa(o, url, env),\r\n    onnotice        : o.onnotice,\r\n    onnotify        : o.onnotify,\r\n    onclose         : o.onclose,\r\n    onparameter     : o.onparameter,\r\n    socket          : o.socket,\r\n    transform       : parseTransform(o.transform || { undefined: undefined }),\r\n    parameters      : {},\r\n    shared          : { retries: 0, typeArrayMap: {} },\r\n    ...mergeUserTypes(o.types)\r\n  }\r\n}\r\n\r\nfunction tsa(o, url, env) {\r\n  const x = o.target_session_attrs || url.searchParams.get('target_session_attrs') || env.PGTARGETSESSIONATTRS\r\n  if (!x || ['read-write', 'read-only', 'primary', 'standby', 'prefer-standby'].includes(x))\r\n    return x\r\n\r\n  throw new Error('target_session_attrs ' + x + ' is not supported')\r\n}\r\n\r\nfunction backoff(retries) {\r\n  return (0.5 + Math.random() / 2) * Math.min(3 ** retries / 100, 20)\r\n}\r\n\r\nfunction max_lifetime() {\r\n  return 60 * (30 + Math.random() * 30)\r\n}\r\n\r\nfunction parseTransform(x) {\r\n  return {\r\n    undefined: x.undefined,\r\n    column: {\r\n      from: typeof x.column === 'function' ? x.column : x.column && x.column.from,\r\n      to: x.column && x.column.to\r\n    },\r\n    value: {\r\n      from: typeof x.value === 'function' ? x.value : x.value && x.value.from,\r\n      to: x.value && x.value.to\r\n    },\r\n    row: {\r\n      from: typeof x.row === 'function' ? x.row : x.row && x.row.from,\r\n      to: x.row && x.row.to\r\n    }\r\n  }\r\n}\r\n\r\nfunction parseUrl(url) {\r\n  if (!url || typeof url !== 'string')\r\n    return { url: { searchParams: new Map() } }\r\n\r\n  let host = url\r\n  host = host.slice(host.indexOf('://') + 3).split(/[?/]/)[0]\r\n  host = decodeURIComponent(host.slice(host.indexOf('@') + 1))\r\n\r\n  const urlObj = new URL(url.replace(host, host.split(',')[0]))\r\n\r\n  return {\r\n    url: {\r\n      username: decodeURIComponent(urlObj.username),\r\n      password: decodeURIComponent(urlObj.password),\r\n      host: urlObj.host,\r\n      hostname: urlObj.hostname,\r\n      port: urlObj.port,\r\n      pathname: urlObj.pathname,\r\n      searchParams: urlObj.searchParams\r\n    },\r\n    multihost: host.indexOf(',') > -1 && host\r\n  }\r\n}\r\n\r\nfunction osUsername() {\r\n  try {\r\n    return os.userInfo().username // eslint-disable-line\r\n  } catch (_) {\r\n    return process.env.USERNAME || process.env.USER || process.env.LOGNAME  // eslint-disable-line\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/postgres/src/index.js b/node_modules/postgres/src/index.js
--- a/node_modules/postgres/src/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/postgres/src/index.js	(date 1753913035214)
@@ -204,9 +204,10 @@
     const queue = Queue()
     const c = open.length
       ? open.shift()
-      : await new Promise(r => {
-        queries.push({ reserve: r })
-        closed.length && connect(closed.shift())
+      : await new Promise((resolve, reject) => {
+        const query = { reserve: resolve, reject }
+        queries.push(query)
+        closed.length && connect(closed.shift(), query)
       })
 
     move(c, reserved)
@@ -480,7 +481,7 @@
       {}
     ),
     connection      : {
-      application_name: 'postgres.js',
+      application_name: env.PGAPPNAME || 'postgres.js',
       ...o.connection,
       ...Object.entries(query).reduce((acc, [k, v]) => (k in defaults || (acc[k] = v), acc), {})
     },
Index: README.MD
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/README.MD b/README.MD
--- a/README.MD	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/README.MD	(date 1754356594459)
@@ -1,0 +1,1 @@
+ [X] 
\ No newline at end of file
Index: node_modules/postgres/src/connection.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import net from 'net'\r\nimport tls from 'tls'\r\nimport crypto from 'crypto'\r\nimport Stream from 'stream'\r\nimport { performance } from 'perf_hooks'\r\n\r\nimport { stringify, handleValue, arrayParser, arraySerializer } from './types.js'\r\nimport { Errors } from './errors.js'\r\nimport Result from './result.js'\r\nimport Queue from './queue.js'\r\nimport { Query, CLOSE } from './query.js'\r\nimport b from './bytes.js'\r\n\r\nexport default Connection\r\n\r\nlet uid = 1\r\n\r\nconst Sync = b().S().end()\r\n    , Flush = b().H().end()\r\n    , SSLRequest = b().i32(8).i32(80877103).end(8)\r\n    , ExecuteUnnamed = Buffer.concat([b().E().str(b.N).i32(0).end(), Sync])\r\n    , DescribeUnnamed = b().D().str('S').str(b.N).end()\r\n    , noop = () => { /* noop */ }\r\n\r\nconst retryRoutines = new Set([\r\n  'FetchPreparedStatement',\r\n  'RevalidateCachedQuery',\r\n  'transformAssignedExpr'\r\n])\r\n\r\nconst errorFields = {\r\n  83  : 'severity_local',    // S\r\n  86  : 'severity',          // V\r\n  67  : 'code',              // C\r\n  77  : 'message',           // M\r\n  68  : 'detail',            // D\r\n  72  : 'hint',              // H\r\n  80  : 'position',          // P\r\n  112 : 'internal_position', // p\r\n  113 : 'internal_query',    // q\r\n  87  : 'where',             // W\r\n  115 : 'schema_name',       // s\r\n  116 : 'table_name',        // t\r\n  99  : 'column_name',       // c\r\n  100 : 'data type_name',    // d\r\n  110 : 'constraint_name',   // n\r\n  70  : 'file',              // F\r\n  76  : 'line',              // L\r\n  82  : 'routine'            // R\r\n}\r\n\r\nfunction Connection(options, queues = {}, { onopen = noop, onend = noop, onclose = noop } = {}) {\r\n  const {\r\n    ssl,\r\n    max,\r\n    user,\r\n    host,\r\n    port,\r\n    database,\r\n    parsers,\r\n    transform,\r\n    onnotice,\r\n    onnotify,\r\n    onparameter,\r\n    max_pipeline,\r\n    keep_alive,\r\n    backoff,\r\n    target_session_attrs\r\n  } = options\r\n\r\n  const sent = Queue()\r\n      , id = uid++\r\n      , backend = { pid: null, secret: null }\r\n      , idleTimer = timer(end, options.idle_timeout)\r\n      , lifeTimer = timer(end, options.max_lifetime)\r\n      , connectTimer = timer(connectTimedOut, options.connect_timeout)\r\n\r\n  let socket = null\r\n    , cancelMessage\r\n    , result = new Result()\r\n    , incoming = Buffer.alloc(0)\r\n    , needsTypes = options.fetch_types\r\n    , backendParameters = {}\r\n    , statements = {}\r\n    , statementId = Math.random().toString(36).slice(2)\r\n    , statementCount = 1\r\n    , closedDate = 0\r\n    , remaining = 0\r\n    , hostIndex = 0\r\n    , retries = 0\r\n    , length = 0\r\n    , delay = 0\r\n    , rows = 0\r\n    , serverSignature = null\r\n    , nextWriteTimer = null\r\n    , terminated = false\r\n    , incomings = null\r\n    , results = null\r\n    , initial = null\r\n    , ending = null\r\n    , stream = null\r\n    , chunk = null\r\n    , ended = null\r\n    , nonce = null\r\n    , query = null\r\n    , final = null\r\n\r\n  const connection = {\r\n    queue: queues.closed,\r\n    idleTimer,\r\n    connect(query) {\r\n      initial = query || true\r\n      reconnect()\r\n    },\r\n    terminate,\r\n    execute,\r\n    cancel,\r\n    end,\r\n    count: 0,\r\n    id\r\n  }\r\n\r\n  queues.closed && queues.closed.push(connection)\r\n\r\n  return connection\r\n\r\n  async function createSocket() {\r\n    let x\r\n    try {\r\n      x = options.socket\r\n        ? (await Promise.resolve(options.socket(options)))\r\n        : new net.Socket()\r\n    } catch (e) {\r\n      error(e)\r\n      return\r\n    }\r\n    x.on('error', error)\r\n    x.on('close', closed)\r\n    x.on('drain', drain)\r\n    return x\r\n  }\r\n\r\n  async function cancel({ pid, secret }, resolve, reject) {\r\n    try {\r\n      cancelMessage = b().i32(16).i32(80877102).i32(pid).i32(secret).end(16)\r\n      await connect()\r\n      socket.once('error', reject)\r\n      socket.once('close', resolve)\r\n    } catch (error) {\r\n      reject(error)\r\n    }\r\n  }\r\n\r\n  function execute(q) {\r\n    if (terminated)\r\n      return queryError(q, Errors.connection('CONNECTION_DESTROYED', options))\r\n\r\n    if (q.cancelled)\r\n      return\r\n\r\n    try {\r\n      q.state = backend\r\n      query\r\n        ? sent.push(q)\r\n        : (query = q, query.active = true)\r\n\r\n      build(q)\r\n      return write(toBuffer(q))\r\n        && !q.describeFirst\r\n        && !q.cursorFn\r\n        && sent.length < max_pipeline\r\n        && (!q.options.onexecute || q.options.onexecute(connection))\r\n    } catch (error) {\r\n      sent.length === 0 && write(Sync)\r\n      errored(error)\r\n      return true\r\n    }\r\n  }\r\n\r\n  function toBuffer(q) {\r\n    if (q.parameters.length >= 65534)\r\n      throw Errors.generic('MAX_PARAMETERS_EXCEEDED', 'Max number of parameters (65534) exceeded')\r\n\r\n    return q.options.simple\r\n      ? b().Q().str(q.statement.string + b.N).end()\r\n      : q.describeFirst\r\n        ? Buffer.concat([describe(q), Flush])\r\n        : q.prepare\r\n          ? q.prepared\r\n            ? prepared(q)\r\n            : Buffer.concat([describe(q), prepared(q)])\r\n          : unnamed(q)\r\n  }\r\n\r\n  function describe(q) {\r\n    return Buffer.concat([\r\n      Parse(q.statement.string, q.parameters, q.statement.types, q.statement.name),\r\n      Describe('S', q.statement.name)\r\n    ])\r\n  }\r\n\r\n  function prepared(q) {\r\n    return Buffer.concat([\r\n      Bind(q.parameters, q.statement.types, q.statement.name, q.cursorName),\r\n      q.cursorFn\r\n        ? Execute('', q.cursorRows)\r\n        : ExecuteUnnamed\r\n    ])\r\n  }\r\n\r\n  function unnamed(q) {\r\n    return Buffer.concat([\r\n      Parse(q.statement.string, q.parameters, q.statement.types),\r\n      DescribeUnnamed,\r\n      prepared(q)\r\n    ])\r\n  }\r\n\r\n  function build(q) {\r\n    const parameters = []\r\n        , types = []\r\n\r\n    const string = stringify(q, q.strings[0], q.args[0], parameters, types, options)\r\n\r\n    !q.tagged && q.args.forEach(x => handleValue(x, parameters, types, options))\r\n\r\n    q.prepare = options.prepare && ('prepare' in q.options ? q.options.prepare : true)\r\n    q.string = string\r\n    q.signature = q.prepare && types + string\r\n    q.onlyDescribe && (delete statements[q.signature])\r\n    q.parameters = q.parameters || parameters\r\n    q.prepared = q.prepare && q.signature in statements\r\n    q.describeFirst = q.onlyDescribe || (parameters.length && !q.prepared)\r\n    q.statement = q.prepared\r\n      ? statements[q.signature]\r\n      : { string, types, name: q.prepare ? statementId + statementCount++ : '' }\r\n\r\n    typeof options.debug === 'function' && options.debug(id, string, parameters, types)\r\n  }\r\n\r\n  function write(x, fn) {\r\n    chunk = chunk ? Buffer.concat([chunk, x]) : Buffer.from(x)\r\n    if (fn || chunk.length >= 1024)\r\n      return nextWrite(fn)\r\n    nextWriteTimer === null && (nextWriteTimer = setImmediate(nextWrite))\r\n    return true\r\n  }\r\n\r\n  function nextWrite(fn) {\r\n    const x = socket.write(chunk, fn)\r\n    nextWriteTimer !== null && clearImmediate(nextWriteTimer)\r\n    chunk = nextWriteTimer = null\r\n    return x\r\n  }\r\n\r\n  function connectTimedOut() {\r\n    errored(Errors.connection('CONNECT_TIMEOUT', options, socket))\r\n    socket.destroy()\r\n  }\r\n\r\n  async function secure() {\r\n    write(SSLRequest)\r\n    const canSSL = await new Promise(r => socket.once('data', x => r(x[0] === 83))) // S\r\n\r\n    if (!canSSL && ssl === 'prefer')\r\n      return connected()\r\n\r\n    socket.removeAllListeners()\r\n    socket = tls.connect({\r\n      socket,\r\n      servername: net.isIP(socket.host) ? undefined : socket.host,\r\n      ...(ssl === 'require' || ssl === 'allow' || ssl === 'prefer'\r\n        ? { rejectUnauthorized: false }\r\n        : ssl === 'verify-full'\r\n          ? {}\r\n          : typeof ssl === 'object'\r\n            ? ssl\r\n            : {}\r\n      )\r\n    })\r\n    socket.on('secureConnect', connected)\r\n    socket.on('error', error)\r\n    socket.on('close', closed)\r\n    socket.on('drain', drain)\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function drain() {\r\n    !query && onopen(connection)\r\n  }\r\n\r\n  function data(x) {\r\n    if (incomings) {\r\n      incomings.push(x)\r\n      remaining -= x.length\r\n      if (remaining >= 0)\r\n        return\r\n    }\r\n\r\n    incoming = incomings\r\n      ? Buffer.concat(incomings, length - remaining)\r\n      : incoming.length === 0\r\n        ? x\r\n        : Buffer.concat([incoming, x], incoming.length + x.length)\r\n\r\n    while (incoming.length > 4) {\r\n      length = incoming.readUInt32BE(1)\r\n      if (length >= incoming.length) {\r\n        remaining = length - incoming.length\r\n        incomings = [incoming]\r\n        break\r\n      }\r\n\r\n      try {\r\n        handle(incoming.subarray(0, length + 1))\r\n      } catch (e) {\r\n        query && (query.cursorFn || query.describeFirst) && write(Sync)\r\n        errored(e)\r\n      }\r\n      incoming = incoming.subarray(length + 1)\r\n      remaining = 0\r\n      incomings = null\r\n    }\r\n  }\r\n\r\n  async function connect() {\r\n    terminated = false\r\n    backendParameters = {}\r\n    socket || (socket = await createSocket())\r\n\r\n    if (!socket)\r\n      return\r\n\r\n    connectTimer.start()\r\n\r\n    if (options.socket)\r\n      return ssl ? secure() : connected()\r\n\r\n    socket.on('connect', ssl ? secure : connected)\r\n\r\n    if (options.path)\r\n      return socket.connect(options.path)\r\n\r\n    socket.ssl = ssl\r\n    socket.connect(port[hostIndex], host[hostIndex])\r\n    socket.host = host[hostIndex]\r\n    socket.port = port[hostIndex]\r\n\r\n    hostIndex = (hostIndex + 1) % port.length\r\n  }\r\n\r\n  function reconnect() {\r\n    setTimeout(connect, closedDate ? closedDate + delay - performance.now() : 0)\r\n  }\r\n\r\n  function connected() {\r\n    try {\r\n      statements = {}\r\n      needsTypes = options.fetch_types\r\n      statementId = Math.random().toString(36).slice(2)\r\n      statementCount = 1\r\n      lifeTimer.start()\r\n      socket.on('data', data)\r\n      keep_alive && socket.setKeepAlive && socket.setKeepAlive(true, 1000 * keep_alive)\r\n      const s = StartupMessage()\r\n      write(s)\r\n    } catch (err) {\r\n      error(err)\r\n    }\r\n  }\r\n\r\n  function error(err) {\r\n    if (connection.queue === queues.connecting && options.host[retries + 1])\r\n      return\r\n\r\n    errored(err)\r\n    while (sent.length)\r\n      queryError(sent.shift(), err)\r\n  }\r\n\r\n  function errored(err) {\r\n    stream && (stream.destroy(err), stream = null)\r\n    query && queryError(query, err)\r\n    initial && (queryError(initial, err), initial = null)\r\n  }\r\n\r\n  function queryError(query, err) {\r\n    Object.defineProperties(err, {\r\n      stack: { value: err.stack + query.origin.replace(/.*\\n/, '\\n'), enumerable: options.debug },\r\n      query: { value: query.string, enumerable: options.debug },\r\n      parameters: { value: query.parameters, enumerable: options.debug },\r\n      args: { value: query.args, enumerable: options.debug },\r\n      types: { value: query.statement && query.statement.types, enumerable: options.debug }\r\n    })\r\n    query.reject(err)\r\n  }\r\n\r\n  function end() {\r\n    return ending || (\r\n      !connection.reserved && onend(connection),\r\n      !connection.reserved && !initial && !query && sent.length === 0\r\n        ? (terminate(), new Promise(r => socket && socket.readyState !== 'closed' ? socket.once('close', r) : r()))\r\n        : ending = new Promise(r => ended = r)\r\n    )\r\n  }\r\n\r\n  function terminate() {\r\n    terminated = true\r\n    if (stream || query || initial || sent.length)\r\n      error(Errors.connection('CONNECTION_DESTROYED', options))\r\n\r\n    clearImmediate(nextWriteTimer)\r\n    if (socket) {\r\n      socket.removeListener('data', data)\r\n      socket.removeListener('connect', connected)\r\n      socket.readyState === 'open' && socket.end(b().X().end())\r\n    }\r\n    ended && (ended(), ending = ended = null)\r\n  }\r\n\r\n  async function closed(hadError) {\r\n    incoming = Buffer.alloc(0)\r\n    remaining = 0\r\n    incomings = null\r\n    clearImmediate(nextWriteTimer)\r\n    socket.removeListener('data', data)\r\n    socket.removeListener('connect', connected)\r\n    idleTimer.cancel()\r\n    lifeTimer.cancel()\r\n    connectTimer.cancel()\r\n\r\n    socket.removeAllListeners()\r\n    socket = null\r\n\r\n    if (initial)\r\n      return reconnect()\r\n\r\n    !hadError && (query || sent.length) && error(Errors.connection('CONNECTION_CLOSED', options, socket))\r\n    closedDate = performance.now()\r\n    hadError && options.shared.retries++\r\n    delay = (typeof backoff === 'function' ? backoff(options.shared.retries) : backoff) * 1000\r\n    onclose(connection, Errors.connection('CONNECTION_CLOSED', options, socket))\r\n  }\r\n\r\n  /* Handlers */\r\n  function handle(xs, x = xs[0]) {\r\n    (\r\n      x === 68 ? DataRow :                   // D\r\n      x === 100 ? CopyData :                 // d\r\n      x === 65 ? NotificationResponse :      // A\r\n      x === 83 ? ParameterStatus :           // S\r\n      x === 90 ? ReadyForQuery :             // Z\r\n      x === 67 ? CommandComplete :           // C\r\n      x === 50 ? BindComplete :              // 2\r\n      x === 49 ? ParseComplete :             // 1\r\n      x === 116 ? ParameterDescription :     // t\r\n      x === 84 ? RowDescription :            // T\r\n      x === 82 ? Authentication :            // R\r\n      x === 110 ? NoData :                   // n\r\n      x === 75 ? BackendKeyData :            // K\r\n      x === 69 ? ErrorResponse :             // E\r\n      x === 115 ? PortalSuspended :          // s\r\n      x === 51 ? CloseComplete :             // 3\r\n      x === 71 ? CopyInResponse :            // G\r\n      x === 78 ? NoticeResponse :            // N\r\n      x === 72 ? CopyOutResponse :           // H\r\n      x === 99 ? CopyDone :                  // c\r\n      x === 73 ? EmptyQueryResponse :        // I\r\n      x === 86 ? FunctionCallResponse :      // V\r\n      x === 118 ? NegotiateProtocolVersion : // v\r\n      x === 87 ? CopyBothResponse :          // W\r\n      /* c8 ignore next */\r\n      UnknownMessage\r\n    )(xs)\r\n  }\r\n\r\n  function DataRow(x) {\r\n    let index = 7\r\n    let length\r\n    let column\r\n    let value\r\n\r\n    const row = query.isRaw ? new Array(query.statement.columns.length) : {}\r\n    for (let i = 0; i < query.statement.columns.length; i++) {\r\n      column = query.statement.columns[i]\r\n      length = x.readInt32BE(index)\r\n      index += 4\r\n\r\n      value = length === -1\r\n        ? null\r\n        : query.isRaw === true\r\n          ? x.subarray(index, index += length)\r\n          : column.parser === undefined\r\n            ? x.toString('utf8', index, index += length)\r\n            : column.parser.array === true\r\n              ? column.parser(x.toString('utf8', index + 1, index += length))\r\n              : column.parser(x.toString('utf8', index, index += length))\r\n\r\n      query.isRaw\r\n        ? (row[i] = query.isRaw === true\r\n          ? value\r\n          : transform.value.from ? transform.value.from(value, column) : value)\r\n        : (row[column.name] = transform.value.from ? transform.value.from(value, column) : value)\r\n    }\r\n\r\n    query.forEachFn\r\n      ? query.forEachFn(transform.row.from ? transform.row.from(row) : row, result)\r\n      : (result[rows++] = transform.row.from ? transform.row.from(row) : row)\r\n  }\r\n\r\n  function ParameterStatus(x) {\r\n    const [k, v] = x.toString('utf8', 5, x.length - 1).split(b.N)\r\n    backendParameters[k] = v\r\n    if (options.parameters[k] !== v) {\r\n      options.parameters[k] = v\r\n      onparameter && onparameter(k, v)\r\n    }\r\n  }\r\n\r\n  function ReadyForQuery(x) {\r\n    query && query.options.simple && query.resolve(results || result)\r\n    query = results = null\r\n    result = new Result()\r\n    connectTimer.cancel()\r\n\r\n    if (initial) {\r\n      if (target_session_attrs) {\r\n        if (!backendParameters.in_hot_standby || !backendParameters.default_transaction_read_only)\r\n          return fetchState()\r\n        else if (tryNext(target_session_attrs, backendParameters))\r\n          return terminate()\r\n      }\r\n\r\n      if (needsTypes) {\r\n        initial === true && (initial = null)\r\n        return fetchArrayTypes()\r\n      }\r\n\r\n      initial !== true && execute(initial)\r\n      options.shared.retries = retries = 0\r\n      initial = null\r\n      return\r\n    }\r\n\r\n    while (sent.length && (query = sent.shift()) && (query.active = true, query.cancelled))\r\n      Connection(options).cancel(query.state, query.cancelled.resolve, query.cancelled.reject)\r\n\r\n    if (query)\r\n      return // Consider opening if able and sent.length < 50\r\n\r\n    connection.reserved\r\n      ? !connection.reserved.release && x[5] === 73 // I\r\n        ? ending\r\n          ? terminate()\r\n          : (connection.reserved = null, onopen(connection))\r\n        : connection.reserved()\r\n      : ending\r\n        ? terminate()\r\n        : onopen(connection)\r\n  }\r\n\r\n  function CommandComplete(x) {\r\n    rows = 0\r\n\r\n    for (let i = x.length - 1; i > 0; i--) {\r\n      if (x[i] === 32 && x[i + 1] < 58 && result.count === null)\r\n        result.count = +x.toString('utf8', i + 1, x.length - 1)\r\n      if (x[i - 1] >= 65) {\r\n        result.command = x.toString('utf8', 5, i)\r\n        result.state = backend\r\n        break\r\n      }\r\n    }\r\n\r\n    final && (final(), final = null)\r\n\r\n    if (result.command === 'BEGIN' && max !== 1 && !connection.reserved)\r\n      return errored(Errors.generic('UNSAFE_TRANSACTION', 'Only use sql.begin, sql.reserved or max: 1'))\r\n\r\n    if (query.options.simple)\r\n      return BindComplete()\r\n\r\n    if (query.cursorFn) {\r\n      result.count && query.cursorFn(result)\r\n      write(Sync)\r\n    }\r\n\r\n    query.resolve(result)\r\n  }\r\n\r\n  function ParseComplete() {\r\n    query.parsing = false\r\n  }\r\n\r\n  function BindComplete() {\r\n    !result.statement && (result.statement = query.statement)\r\n    result.columns = query.statement.columns\r\n  }\r\n\r\n  function ParameterDescription(x) {\r\n    const length = x.readUInt16BE(5)\r\n\r\n    for (let i = 0; i < length; ++i)\r\n      !query.statement.types[i] && (query.statement.types[i] = x.readUInt32BE(7 + i * 4))\r\n\r\n    query.prepare && (statements[query.signature] = query.statement)\r\n    query.describeFirst && !query.onlyDescribe && (write(prepared(query)), query.describeFirst = false)\r\n  }\r\n\r\n  function RowDescription(x) {\r\n    if (result.command) {\r\n      results = results || [result]\r\n      results.push(result = new Result())\r\n      result.count = null\r\n      query.statement.columns = null\r\n    }\r\n\r\n    const length = x.readUInt16BE(5)\r\n    let index = 7\r\n    let start\r\n\r\n    query.statement.columns = Array(length)\r\n\r\n    for (let i = 0; i < length; ++i) {\r\n      start = index\r\n      while (x[index++] !== 0);\r\n      const table = x.readUInt32BE(index)\r\n      const number = x.readUInt16BE(index + 4)\r\n      const type = x.readUInt32BE(index + 6)\r\n      query.statement.columns[i] = {\r\n        name: transform.column.from\r\n          ? transform.column.from(x.toString('utf8', start, index - 1))\r\n          : x.toString('utf8', start, index - 1),\r\n        parser: parsers[type],\r\n        table,\r\n        number,\r\n        type\r\n      }\r\n      index += 18\r\n    }\r\n\r\n    result.statement = query.statement\r\n    if (query.onlyDescribe)\r\n      return (query.resolve(query.statement), write(Sync))\r\n  }\r\n\r\n  async function Authentication(x, type = x.readUInt32BE(5)) {\r\n    (\r\n      type === 3 ? AuthenticationCleartextPassword :\r\n      type === 5 ? AuthenticationMD5Password :\r\n      type === 10 ? SASL :\r\n      type === 11 ? SASLContinue :\r\n      type === 12 ? SASLFinal :\r\n      type !== 0 ? UnknownAuth :\r\n      noop\r\n    )(x, type)\r\n  }\r\n\r\n  /* c8 ignore next 5 */\r\n  async function AuthenticationCleartextPassword() {\r\n    const payload = await Pass()\r\n    write(\r\n      b().p().str(payload).z(1).end()\r\n    )\r\n  }\r\n\r\n  async function AuthenticationMD5Password(x) {\r\n    const payload = 'md5' + (\r\n      await md5(\r\n        Buffer.concat([\r\n          Buffer.from(await md5((await Pass()) + user)),\r\n          x.subarray(9)\r\n        ])\r\n      )\r\n    )\r\n    write(\r\n      b().p().str(payload).z(1).end()\r\n    )\r\n  }\r\n\r\n  async function SASL() {\r\n    nonce = (await crypto.randomBytes(18)).toString('base64')\r\n    b().p().str('SCRAM-SHA-256' + b.N)\r\n    const i = b.i\r\n    write(b.inc(4).str('n,,n=*,r=' + nonce).i32(b.i - i - 4, i).end())\r\n  }\r\n\r\n  async function SASLContinue(x) {\r\n    const res = x.toString('utf8', 9).split(',').reduce((acc, x) => (acc[x[0]] = x.slice(2), acc), {})\r\n\r\n    const saltedPassword = await crypto.pbkdf2Sync(\r\n      await Pass(),\r\n      Buffer.from(res.s, 'base64'),\r\n      parseInt(res.i), 32,\r\n      'sha256'\r\n    )\r\n\r\n    const clientKey = await hmac(saltedPassword, 'Client Key')\r\n\r\n    const auth = 'n=*,r=' + nonce + ','\r\n               + 'r=' + res.r + ',s=' + res.s + ',i=' + res.i\r\n               + ',c=biws,r=' + res.r\r\n\r\n    serverSignature = (await hmac(await hmac(saltedPassword, 'Server Key'), auth)).toString('base64')\r\n\r\n    const payload = 'c=biws,r=' + res.r + ',p=' + xor(\r\n      clientKey, Buffer.from(await hmac(await sha256(clientKey), auth))\r\n    ).toString('base64')\r\n\r\n    write(\r\n      b().p().str(payload).end()\r\n    )\r\n  }\r\n\r\n  function SASLFinal(x) {\r\n    if (x.toString('utf8', 9).split(b.N, 1)[0].slice(2) === serverSignature)\r\n      return\r\n    /* c8 ignore next 5 */\r\n    errored(Errors.generic('SASL_SIGNATURE_MISMATCH', 'The server did not return the correct signature'))\r\n    socket.destroy()\r\n  }\r\n\r\n  function Pass() {\r\n    return Promise.resolve(typeof options.pass === 'function'\r\n      ? options.pass()\r\n      : options.pass\r\n    )\r\n  }\r\n\r\n  function NoData() {\r\n    result.statement = query.statement\r\n    result.statement.columns = []\r\n    if (query.onlyDescribe)\r\n      return (query.resolve(query.statement), write(Sync))\r\n  }\r\n\r\n  function BackendKeyData(x) {\r\n    backend.pid = x.readUInt32BE(5)\r\n    backend.secret = x.readUInt32BE(9)\r\n  }\r\n\r\n  async function fetchArrayTypes() {\r\n    needsTypes = false\r\n    const types = await new Query([`\r\n      select b.oid, b.typarray\r\n      from pg_catalog.pg_type a\r\n      left join pg_catalog.pg_type b on b.oid = a.typelem\r\n      where a.typcategory = 'A'\r\n      group by b.oid, b.typarray\r\n      order by b.oid\r\n    `], [], execute)\r\n    types.forEach(({ oid, typarray }) => addArrayType(oid, typarray))\r\n  }\r\n\r\n  function addArrayType(oid, typarray) {\r\n    if (!!options.parsers[typarray] && !!options.serializers[typarray]) return\r\n    const parser = options.parsers[oid]\r\n    options.shared.typeArrayMap[oid] = typarray\r\n    options.parsers[typarray] = (xs) => arrayParser(xs, parser, typarray)\r\n    options.parsers[typarray].array = true\r\n    options.serializers[typarray] = (xs) => arraySerializer(xs, options.serializers[oid], options, typarray)\r\n  }\r\n\r\n  function tryNext(x, xs) {\r\n    return (\r\n      (x === 'read-write' && xs.default_transaction_read_only === 'on') ||\r\n      (x === 'read-only' && xs.default_transaction_read_only === 'off') ||\r\n      (x === 'primary' && xs.in_hot_standby === 'on') ||\r\n      (x === 'standby' && xs.in_hot_standby === 'off') ||\r\n      (x === 'prefer-standby' && xs.in_hot_standby === 'off' && options.host[retries])\r\n    )\r\n  }\r\n\r\n  function fetchState() {\r\n    const query = new Query([`\r\n      show transaction_read_only;\r\n      select pg_catalog.pg_is_in_recovery()\r\n    `], [], execute, null, { simple: true })\r\n    query.resolve = ([[a], [b]]) => {\r\n      backendParameters.default_transaction_read_only = a.transaction_read_only\r\n      backendParameters.in_hot_standby = b.pg_is_in_recovery ? 'on' : 'off'\r\n    }\r\n    query.execute()\r\n  }\r\n\r\n  function ErrorResponse(x) {\r\n    query && (query.cursorFn || query.describeFirst) && write(Sync)\r\n    const error = Errors.postgres(parseError(x))\r\n    query && query.retried\r\n      ? errored(query.retried)\r\n      : query && query.prepared && retryRoutines.has(error.routine)\r\n        ? retry(query, error)\r\n        : errored(error)\r\n  }\r\n\r\n  function retry(q, error) {\r\n    delete statements[q.signature]\r\n    q.retried = error\r\n    execute(q)\r\n  }\r\n\r\n  function NotificationResponse(x) {\r\n    if (!onnotify)\r\n      return\r\n\r\n    let index = 9\r\n    while (x[index++] !== 0);\r\n    onnotify(\r\n      x.toString('utf8', 9, index - 1),\r\n      x.toString('utf8', index, x.length - 1)\r\n    )\r\n  }\r\n\r\n  async function PortalSuspended() {\r\n    try {\r\n      const x = await Promise.resolve(query.cursorFn(result))\r\n      rows = 0\r\n      x === CLOSE\r\n        ? write(Close(query.portal))\r\n        : (result = new Result(), write(Execute('', query.cursorRows)))\r\n    } catch (err) {\r\n      write(Sync)\r\n      query.reject(err)\r\n    }\r\n  }\r\n\r\n  function CloseComplete() {\r\n    result.count && query.cursorFn(result)\r\n    query.resolve(result)\r\n  }\r\n\r\n  function CopyInResponse() {\r\n    stream = new Stream.Writable({\r\n      autoDestroy: true,\r\n      write(chunk, encoding, callback) {\r\n        socket.write(b().d().raw(chunk).end(), callback)\r\n      },\r\n      destroy(error, callback) {\r\n        callback(error)\r\n        socket.write(b().f().str(error + b.N).end())\r\n        stream = null\r\n      },\r\n      final(callback) {\r\n        socket.write(b().c().end())\r\n        final = callback\r\n      }\r\n    })\r\n    query.resolve(stream)\r\n  }\r\n\r\n  function CopyOutResponse() {\r\n    stream = new Stream.Readable({\r\n      read() { socket.resume() }\r\n    })\r\n    query.resolve(stream)\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function CopyBothResponse() {\r\n    stream = new Stream.Duplex({\r\n      autoDestroy: true,\r\n      read() { socket.resume() },\r\n      /* c8 ignore next 11 */\r\n      write(chunk, encoding, callback) {\r\n        socket.write(b().d().raw(chunk).end(), callback)\r\n      },\r\n      destroy(error, callback) {\r\n        callback(error)\r\n        socket.write(b().f().str(error + b.N).end())\r\n        stream = null\r\n      },\r\n      final(callback) {\r\n        socket.write(b().c().end())\r\n        final = callback\r\n      }\r\n    })\r\n    query.resolve(stream)\r\n  }\r\n\r\n  function CopyData(x) {\r\n    stream && (stream.push(x.subarray(5)) || socket.pause())\r\n  }\r\n\r\n  function CopyDone() {\r\n    stream && stream.push(null)\r\n    stream = null\r\n  }\r\n\r\n  function NoticeResponse(x) {\r\n    onnotice\r\n      ? onnotice(parseError(x))\r\n      : console.log(parseError(x)) // eslint-disable-line\r\n\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function EmptyQueryResponse() {\r\n    /* noop */\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function FunctionCallResponse() {\r\n    errored(Errors.notSupported('FunctionCallResponse'))\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function NegotiateProtocolVersion() {\r\n    errored(Errors.notSupported('NegotiateProtocolVersion'))\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function UnknownMessage(x) {\r\n    console.error('Postgres.js : Unknown Message:', x[0]) // eslint-disable-line\r\n  }\r\n\r\n  /* c8 ignore next 3 */\r\n  function UnknownAuth(x, type) {\r\n    console.error('Postgres.js : Unknown Auth:', type) // eslint-disable-line\r\n  }\r\n\r\n  /* Messages */\r\n  function Bind(parameters, types, statement = '', portal = '') {\r\n    let prev\r\n      , type\r\n\r\n    b().B().str(portal + b.N).str(statement + b.N).i16(0).i16(parameters.length)\r\n\r\n    parameters.forEach((x, i) => {\r\n      if (x === null)\r\n        return b.i32(0xFFFFFFFF)\r\n\r\n      type = types[i]\r\n      parameters[i] = x = type in options.serializers\r\n        ? options.serializers[type](x)\r\n        : '' + x\r\n\r\n      prev = b.i\r\n      b.inc(4).str(x).i32(b.i - prev - 4, prev)\r\n    })\r\n\r\n    b.i16(0)\r\n\r\n    return b.end()\r\n  }\r\n\r\n  function Parse(str, parameters, types, name = '') {\r\n    b().P().str(name + b.N).str(str + b.N).i16(parameters.length)\r\n    parameters.forEach((x, i) => b.i32(types[i] || 0))\r\n    return b.end()\r\n  }\r\n\r\n  function Describe(x, name = '') {\r\n    return b().D().str(x).str(name + b.N).end()\r\n  }\r\n\r\n  function Execute(portal = '', rows = 0) {\r\n    return Buffer.concat([\r\n      b().E().str(portal + b.N).i32(rows).end(),\r\n      Flush\r\n    ])\r\n  }\r\n\r\n  function Close(portal = '') {\r\n    return Buffer.concat([\r\n      b().C().str('P').str(portal + b.N).end(),\r\n      b().S().end()\r\n    ])\r\n  }\r\n\r\n  function StartupMessage() {\r\n    return cancelMessage || b().inc(4).i16(3).z(2).str(\r\n      Object.entries(Object.assign({\r\n        user,\r\n        database,\r\n        client_encoding: 'UTF8'\r\n      },\r\n        options.connection\r\n      )).filter(([, v]) => v).map(([k, v]) => k + b.N + v).join(b.N)\r\n    ).z(2).end(0)\r\n  }\r\n\r\n}\r\n\r\nfunction parseError(x) {\r\n  const error = {}\r\n  let start = 5\r\n  for (let i = 5; i < x.length - 1; i++) {\r\n    if (x[i] === 0) {\r\n      error[errorFields[x[start]]] = x.toString('utf8', start + 1, i)\r\n      start = i + 1\r\n    }\r\n  }\r\n  return error\r\n}\r\n\r\nfunction md5(x) {\r\n  return crypto.createHash('md5').update(x).digest('hex')\r\n}\r\n\r\nfunction hmac(key, x) {\r\n  return crypto.createHmac('sha256', key).update(x).digest()\r\n}\r\n\r\nfunction sha256(x) {\r\n  return crypto.createHash('sha256').update(x).digest()\r\n}\r\n\r\nfunction xor(a, b) {\r\n  const length = Math.max(a.length, b.length)\r\n  const buffer = Buffer.allocUnsafe(length)\r\n  for (let i = 0; i < length; i++)\r\n    buffer[i] = a[i] ^ b[i]\r\n  return buffer\r\n}\r\n\r\nfunction timer(fn, seconds) {\r\n  seconds = typeof seconds === 'function' ? seconds() : seconds\r\n  if (!seconds)\r\n    return { cancel: noop, start: noop }\r\n\r\n  let timer\r\n  return {\r\n    cancel() {\r\n      timer && (clearTimeout(timer), timer = null)\r\n    },\r\n    start() {\r\n      timer && clearTimeout(timer)\r\n      timer = setTimeout(done, seconds * 1000, arguments)\r\n    }\r\n  }\r\n\r\n  function done(args) {\r\n    fn.apply(null, args)\r\n    timer = null\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/postgres/src/connection.js b/node_modules/postgres/src/connection.js
--- a/node_modules/postgres/src/connection.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/postgres/src/connection.js	(date 1753913035208)
@@ -109,7 +109,7 @@
     queue: queues.closed,
     idleTimer,
     connect(query) {
-      initial = query || true
+      initial = query
       reconnect()
     },
     terminate,
@@ -293,7 +293,7 @@
     if (incomings) {
       incomings.push(x)
       remaining -= x.length
-      if (remaining >= 0)
+      if (remaining > 0)
         return
     }
 
@@ -385,7 +385,13 @@
   }
 
   function queryError(query, err) {
-    Object.defineProperties(err, {
+    if (query.reserve)
+      return query.reject(err)
+
+    if (!err || typeof err !== 'object')
+      err = new Error(err)
+
+    'query' in err || 'parameters' in err || Object.defineProperties(err, {
       stack: { value: err.stack + query.origin.replace(/.*\n/, '\n'), enumerable: options.debug },
       query: { value: query.string, enumerable: options.debug },
       parameters: { value: query.parameters, enumerable: options.debug },
@@ -532,11 +538,11 @@
       }
 
       if (needsTypes) {
-        initial === true && (initial = null)
+        initial.reserve && (initial = null)
         return fetchArrayTypes()
       }
 
-      initial !== true && execute(initial)
+      initial && !initial.reserve && execute(initial)
       options.shared.retries = retries = 0
       initial = null
       return
Index: node_modules/pg-protocol/src/buffer-reader.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const emptyBuffer = Buffer.allocUnsafe(0)\r\n\r\nexport class BufferReader {\r\n  private buffer: Buffer = emptyBuffer\r\n\r\n  // TODO(bmc): support non-utf8 encoding?\r\n  private encoding: string = 'utf-8'\r\n\r\n  constructor(private offset: number = 0) {}\r\n\r\n  public setBuffer(offset: number, buffer: Buffer): void {\r\n    this.offset = offset\r\n    this.buffer = buffer\r\n  }\r\n\r\n  public int16(): number {\r\n    const result = this.buffer.readInt16BE(this.offset)\r\n    this.offset += 2\r\n    return result\r\n  }\r\n\r\n  public byte(): number {\r\n    const result = this.buffer[this.offset]\r\n    this.offset++\r\n    return result\r\n  }\r\n\r\n  public int32(): number {\r\n    const result = this.buffer.readInt32BE(this.offset)\r\n    this.offset += 4\r\n    return result\r\n  }\r\n\r\n  public string(length: number): string {\r\n    const result = this.buffer.toString(this.encoding, this.offset, this.offset + length)\r\n    this.offset += length\r\n    return result\r\n  }\r\n\r\n  public cstring(): string {\r\n    const start = this.offset\r\n    let end = start\r\n    while (this.buffer[end++] !== 0) {}\r\n    this.offset = end\r\n    return this.buffer.toString(this.encoding, start, end - 1)\r\n  }\r\n\r\n  public bytes(length: number): Buffer {\r\n    const result = this.buffer.slice(this.offset, this.offset + length)\r\n    this.offset += length\r\n    return result\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/src/buffer-reader.ts b/node_modules/pg-protocol/src/buffer-reader.ts
--- a/node_modules/pg-protocol/src/buffer-reader.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/src/buffer-reader.ts	(date 1753913035323)
@@ -31,6 +31,12 @@
     return result
   }
 
+  public uint32(): number {
+    const result = this.buffer.readUInt32BE(this.offset)
+    this.offset += 4
+    return result
+  }
+
   public string(length: number): string {
     const result = this.buffer.toString(this.encoding, this.offset, this.offset + length)
     this.offset += length
@@ -40,6 +46,7 @@
   public cstring(): string {
     const start = this.offset
     let end = start
+    // eslint-disable-next-line no-empty
     while (this.buffer[end++] !== 0) {}
     this.offset = end
     return this.buffer.toString(this.encoding, start, end - 1)
Index: node_modules/pg-protocol/src/parser.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { TransformOptions } from 'stream'\r\nimport {\r\n  Mode,\r\n  bindComplete,\r\n  parseComplete,\r\n  closeComplete,\r\n  noData,\r\n  portalSuspended,\r\n  copyDone,\r\n  replicationStart,\r\n  emptyQuery,\r\n  ReadyForQueryMessage,\r\n  CommandCompleteMessage,\r\n  CopyDataMessage,\r\n  CopyResponse,\r\n  NotificationResponseMessage,\r\n  RowDescriptionMessage,\r\n  ParameterDescriptionMessage,\r\n  Field,\r\n  DataRowMessage,\r\n  ParameterStatusMessage,\r\n  BackendKeyDataMessage,\r\n  DatabaseError,\r\n  BackendMessage,\r\n  MessageName,\r\n  AuthenticationMD5Password,\r\n  NoticeMessage,\r\n} from './messages'\r\nimport { BufferReader } from './buffer-reader'\r\nimport assert from 'assert'\r\n\r\n// every message is prefixed with a single bye\r\nconst CODE_LENGTH = 1\r\n// every message has an int32 length which includes itself but does\r\n// NOT include the code in the length\r\nconst LEN_LENGTH = 4\r\n\r\nconst HEADER_LENGTH = CODE_LENGTH + LEN_LENGTH\r\n\r\nexport type Packet = {\r\n  code: number\r\n  packet: Buffer\r\n}\r\n\r\nconst emptyBuffer = Buffer.allocUnsafe(0)\r\n\r\ntype StreamOptions = TransformOptions & {\r\n  mode: Mode\r\n}\r\n\r\nconst enum MessageCodes {\r\n  DataRow = 0x44, // D\r\n  ParseComplete = 0x31, // 1\r\n  BindComplete = 0x32, // 2\r\n  CloseComplete = 0x33, // 3\r\n  CommandComplete = 0x43, // C\r\n  ReadyForQuery = 0x5a, // Z\r\n  NoData = 0x6e, // n\r\n  NotificationResponse = 0x41, // A\r\n  AuthenticationResponse = 0x52, // R\r\n  ParameterStatus = 0x53, // S\r\n  BackendKeyData = 0x4b, // K\r\n  ErrorMessage = 0x45, // E\r\n  NoticeMessage = 0x4e, // N\r\n  RowDescriptionMessage = 0x54, // T\r\n  ParameterDescriptionMessage = 0x74, // t\r\n  PortalSuspended = 0x73, // s\r\n  ReplicationStart = 0x57, // W\r\n  EmptyQuery = 0x49, // I\r\n  CopyIn = 0x47, // G\r\n  CopyOut = 0x48, // H\r\n  CopyDone = 0x63, // c\r\n  CopyData = 0x64, // d\r\n}\r\n\r\nexport type MessageCallback = (msg: BackendMessage) => void\r\n\r\nexport class Parser {\r\n  private buffer: Buffer = emptyBuffer\r\n  private bufferLength: number = 0\r\n  private bufferOffset: number = 0\r\n  private reader = new BufferReader()\r\n  private mode: Mode\r\n\r\n  constructor(opts?: StreamOptions) {\r\n    if (opts?.mode === 'binary') {\r\n      throw new Error('Binary mode not supported yet')\r\n    }\r\n    this.mode = opts?.mode || 'text'\r\n  }\r\n\r\n  public parse(buffer: Buffer, callback: MessageCallback) {\r\n    this.mergeBuffer(buffer)\r\n    const bufferFullLength = this.bufferOffset + this.bufferLength\r\n    let offset = this.bufferOffset\r\n    while (offset + HEADER_LENGTH <= bufferFullLength) {\r\n      // code is 1 byte long - it identifies the message type\r\n      const code = this.buffer[offset]\r\n      // length is 1 Uint32BE - it is the length of the message EXCLUDING the code\r\n      const length = this.buffer.readUInt32BE(offset + CODE_LENGTH)\r\n      const fullMessageLength = CODE_LENGTH + length\r\n      if (fullMessageLength + offset <= bufferFullLength) {\r\n        const message = this.handlePacket(offset + HEADER_LENGTH, code, length, this.buffer)\r\n        callback(message)\r\n        offset += fullMessageLength\r\n      } else {\r\n        break\r\n      }\r\n    }\r\n    if (offset === bufferFullLength) {\r\n      // No more use for the buffer\r\n      this.buffer = emptyBuffer\r\n      this.bufferLength = 0\r\n      this.bufferOffset = 0\r\n    } else {\r\n      // Adjust the cursors of remainingBuffer\r\n      this.bufferLength = bufferFullLength - offset\r\n      this.bufferOffset = offset\r\n    }\r\n  }\r\n\r\n  private mergeBuffer(buffer: Buffer): void {\r\n    if (this.bufferLength > 0) {\r\n      const newLength = this.bufferLength + buffer.byteLength\r\n      const newFullLength = newLength + this.bufferOffset\r\n      if (newFullLength > this.buffer.byteLength) {\r\n        // We can't concat the new buffer with the remaining one\r\n        let newBuffer: Buffer\r\n        if (newLength <= this.buffer.byteLength && this.bufferOffset >= this.bufferLength) {\r\n          // We can move the relevant part to the beginning of the buffer instead of allocating a new buffer\r\n          newBuffer = this.buffer\r\n        } else {\r\n          // Allocate a new larger buffer\r\n          let newBufferLength = this.buffer.byteLength * 2\r\n          while (newLength >= newBufferLength) {\r\n            newBufferLength *= 2\r\n          }\r\n          newBuffer = Buffer.allocUnsafe(newBufferLength)\r\n        }\r\n        // Move the remaining buffer to the new one\r\n        this.buffer.copy(newBuffer, 0, this.bufferOffset, this.bufferOffset + this.bufferLength)\r\n        this.buffer = newBuffer\r\n        this.bufferOffset = 0\r\n      }\r\n      // Concat the new buffer with the remaining one\r\n      buffer.copy(this.buffer, this.bufferOffset + this.bufferLength)\r\n      this.bufferLength = newLength\r\n    } else {\r\n      this.buffer = buffer\r\n      this.bufferOffset = 0\r\n      this.bufferLength = buffer.byteLength\r\n    }\r\n  }\r\n\r\n  private handlePacket(offset: number, code: number, length: number, bytes: Buffer): BackendMessage {\r\n    switch (code) {\r\n      case MessageCodes.BindComplete:\r\n        return bindComplete\r\n      case MessageCodes.ParseComplete:\r\n        return parseComplete\r\n      case MessageCodes.CloseComplete:\r\n        return closeComplete\r\n      case MessageCodes.NoData:\r\n        return noData\r\n      case MessageCodes.PortalSuspended:\r\n        return portalSuspended\r\n      case MessageCodes.CopyDone:\r\n        return copyDone\r\n      case MessageCodes.ReplicationStart:\r\n        return replicationStart\r\n      case MessageCodes.EmptyQuery:\r\n        return emptyQuery\r\n      case MessageCodes.DataRow:\r\n        return this.parseDataRowMessage(offset, length, bytes)\r\n      case MessageCodes.CommandComplete:\r\n        return this.parseCommandCompleteMessage(offset, length, bytes)\r\n      case MessageCodes.ReadyForQuery:\r\n        return this.parseReadyForQueryMessage(offset, length, bytes)\r\n      case MessageCodes.NotificationResponse:\r\n        return this.parseNotificationMessage(offset, length, bytes)\r\n      case MessageCodes.AuthenticationResponse:\r\n        return this.parseAuthenticationResponse(offset, length, bytes)\r\n      case MessageCodes.ParameterStatus:\r\n        return this.parseParameterStatusMessage(offset, length, bytes)\r\n      case MessageCodes.BackendKeyData:\r\n        return this.parseBackendKeyData(offset, length, bytes)\r\n      case MessageCodes.ErrorMessage:\r\n        return this.parseErrorMessage(offset, length, bytes, 'error')\r\n      case MessageCodes.NoticeMessage:\r\n        return this.parseErrorMessage(offset, length, bytes, 'notice')\r\n      case MessageCodes.RowDescriptionMessage:\r\n        return this.parseRowDescriptionMessage(offset, length, bytes)\r\n      case MessageCodes.ParameterDescriptionMessage:\r\n        return this.parseParameterDescriptionMessage(offset, length, bytes)\r\n      case MessageCodes.CopyIn:\r\n        return this.parseCopyInMessage(offset, length, bytes)\r\n      case MessageCodes.CopyOut:\r\n        return this.parseCopyOutMessage(offset, length, bytes)\r\n      case MessageCodes.CopyData:\r\n        return this.parseCopyData(offset, length, bytes)\r\n      default:\r\n        return new DatabaseError('received invalid response: ' + code.toString(16), length, 'error')\r\n    }\r\n  }\r\n\r\n  private parseReadyForQueryMessage(offset: number, length: number, bytes: Buffer) {\r\n    this.reader.setBuffer(offset, bytes)\r\n    const status = this.reader.string(1)\r\n    return new ReadyForQueryMessage(length, status)\r\n  }\r\n\r\n  private parseCommandCompleteMessage(offset: number, length: number, bytes: Buffer) {\r\n    this.reader.setBuffer(offset, bytes)\r\n    const text = this.reader.cstring()\r\n    return new CommandCompleteMessage(length, text)\r\n  }\r\n\r\n  private parseCopyData(offset: number, length: number, bytes: Buffer) {\r\n    const chunk = bytes.slice(offset, offset + (length - 4))\r\n    return new CopyDataMessage(length, chunk)\r\n  }\r\n\r\n  private parseCopyInMessage(offset: number, length: number, bytes: Buffer) {\r\n    return this.parseCopyMessage(offset, length, bytes, 'copyInResponse')\r\n  }\r\n\r\n  private parseCopyOutMessage(offset: number, length: number, bytes: Buffer) {\r\n    return this.parseCopyMessage(offset, length, bytes, 'copyOutResponse')\r\n  }\r\n\r\n  private parseCopyMessage(offset: number, length: number, bytes: Buffer, messageName: MessageName) {\r\n    this.reader.setBuffer(offset, bytes)\r\n    const isBinary = this.reader.byte() !== 0\r\n    const columnCount = this.reader.int16()\r\n    const message = new CopyResponse(length, messageName, isBinary, columnCount)\r\n    for (let i = 0; i < columnCount; i++) {\r\n      message.columnTypes[i] = this.reader.int16()\r\n    }\r\n    return message\r\n  }\r\n\r\n  private parseNotificationMessage(offset: number, length: number, bytes: Buffer) {\r\n    this.reader.setBuffer(offset, bytes)\r\n    const processId = this.reader.int32()\r\n    const channel = this.reader.cstring()\r\n    const payload = this.reader.cstring()\r\n    return new NotificationResponseMessage(length, processId, channel, payload)\r\n  }\r\n\r\n  private parseRowDescriptionMessage(offset: number, length: number, bytes: Buffer) {\r\n    this.reader.setBuffer(offset, bytes)\r\n    const fieldCount = this.reader.int16()\r\n    const message = new RowDescriptionMessage(length, fieldCount)\r\n    for (let i = 0; i < fieldCount; i++) {\r\n      message.fields[i] = this.parseField()\r\n    }\r\n    return message\r\n  }\r\n\r\n  private parseField(): Field {\r\n    const name = this.reader.cstring()\r\n    const tableID = this.reader.int32()\r\n    const columnID = this.reader.int16()\r\n    const dataTypeID = this.reader.int32()\r\n    const dataTypeSize = this.reader.int16()\r\n    const dataTypeModifier = this.reader.int32()\r\n    const mode = this.reader.int16() === 0 ? 'text' : 'binary'\r\n    return new Field(name, tableID, columnID, dataTypeID, dataTypeSize, dataTypeModifier, mode)\r\n  }\r\n\r\n  private parseParameterDescriptionMessage(offset: number, length: number, bytes: Buffer) {\r\n    this.reader.setBuffer(offset, bytes)\r\n    const parameterCount = this.reader.int16()\r\n    const message = new ParameterDescriptionMessage(length, parameterCount)\r\n    for (let i = 0; i < parameterCount; i++) {\r\n      message.dataTypeIDs[i] = this.reader.int32()\r\n    }\r\n    return message\r\n  }\r\n\r\n  private parseDataRowMessage(offset: number, length: number, bytes: Buffer) {\r\n    this.reader.setBuffer(offset, bytes)\r\n    const fieldCount = this.reader.int16()\r\n    const fields: any[] = new Array(fieldCount)\r\n    for (let i = 0; i < fieldCount; i++) {\r\n      const len = this.reader.int32()\r\n      // a -1 for length means the value of the field is null\r\n      fields[i] = len === -1 ? null : this.reader.string(len)\r\n    }\r\n    return new DataRowMessage(length, fields)\r\n  }\r\n\r\n  private parseParameterStatusMessage(offset: number, length: number, bytes: Buffer) {\r\n    this.reader.setBuffer(offset, bytes)\r\n    const name = this.reader.cstring()\r\n    const value = this.reader.cstring()\r\n    return new ParameterStatusMessage(length, name, value)\r\n  }\r\n\r\n  private parseBackendKeyData(offset: number, length: number, bytes: Buffer) {\r\n    this.reader.setBuffer(offset, bytes)\r\n    const processID = this.reader.int32()\r\n    const secretKey = this.reader.int32()\r\n    return new BackendKeyDataMessage(length, processID, secretKey)\r\n  }\r\n\r\n  public parseAuthenticationResponse(offset: number, length: number, bytes: Buffer) {\r\n    this.reader.setBuffer(offset, bytes)\r\n    const code = this.reader.int32()\r\n    // TODO(bmc): maybe better types here\r\n    const message: BackendMessage & any = {\r\n      name: 'authenticationOk',\r\n      length,\r\n    }\r\n\r\n    switch (code) {\r\n      case 0: // AuthenticationOk\r\n        break\r\n      case 3: // AuthenticationCleartextPassword\r\n        if (message.length === 8) {\r\n          message.name = 'authenticationCleartextPassword'\r\n        }\r\n        break\r\n      case 5: // AuthenticationMD5Password\r\n        if (message.length === 12) {\r\n          message.name = 'authenticationMD5Password'\r\n          const salt = this.reader.bytes(4)\r\n          return new AuthenticationMD5Password(length, salt)\r\n        }\r\n        break\r\n      case 10: // AuthenticationSASL\r\n        message.name = 'authenticationSASL'\r\n        message.mechanisms = []\r\n        let mechanism: string\r\n        do {\r\n          mechanism = this.reader.cstring()\r\n\r\n          if (mechanism) {\r\n            message.mechanisms.push(mechanism)\r\n          }\r\n        } while (mechanism)\r\n        break\r\n      case 11: // AuthenticationSASLContinue\r\n        message.name = 'authenticationSASLContinue'\r\n        message.data = this.reader.string(length - 8)\r\n        break\r\n      case 12: // AuthenticationSASLFinal\r\n        message.name = 'authenticationSASLFinal'\r\n        message.data = this.reader.string(length - 8)\r\n        break\r\n      default:\r\n        throw new Error('Unknown authenticationOk message type ' + code)\r\n    }\r\n    return message\r\n  }\r\n\r\n  private parseErrorMessage(offset: number, length: number, bytes: Buffer, name: MessageName) {\r\n    this.reader.setBuffer(offset, bytes)\r\n    const fields: Record<string, string> = {}\r\n    let fieldType = this.reader.string(1)\r\n    while (fieldType !== '\\0') {\r\n      fields[fieldType] = this.reader.cstring()\r\n      fieldType = this.reader.string(1)\r\n    }\r\n\r\n    const messageValue = fields.M\r\n\r\n    const message =\r\n      name === 'notice' ? new NoticeMessage(length, messageValue) : new DatabaseError(messageValue, length, name)\r\n\r\n    message.severity = fields.S\r\n    message.code = fields.C\r\n    message.detail = fields.D\r\n    message.hint = fields.H\r\n    message.position = fields.P\r\n    message.internalPosition = fields.p\r\n    message.internalQuery = fields.q\r\n    message.where = fields.W\r\n    message.schema = fields.s\r\n    message.table = fields.t\r\n    message.column = fields.c\r\n    message.dataType = fields.d\r\n    message.constraint = fields.n\r\n    message.file = fields.F\r\n    message.line = fields.L\r\n    message.routine = fields.R\r\n    return message\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/src/parser.ts b/node_modules/pg-protocol/src/parser.ts
--- a/node_modules/pg-protocol/src/parser.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/src/parser.ts	(date 1753913035337)
@@ -27,7 +27,6 @@
   NoticeMessage,
 } from './messages'
 import { BufferReader } from './buffer-reader'
-import assert from 'assert'
 
 // every message is prefixed with a single bye
 const CODE_LENGTH = 1
@@ -259,9 +258,9 @@
 
   private parseField(): Field {
     const name = this.reader.cstring()
-    const tableID = this.reader.int32()
+    const tableID = this.reader.uint32()
     const columnID = this.reader.int16()
-    const dataTypeID = this.reader.int32()
+    const dataTypeID = this.reader.uint32()
     const dataTypeSize = this.reader.int16()
     const dataTypeModifier = this.reader.int32()
     const mode = this.reader.int16() === 0 ? 'text' : 'binary'
@@ -329,16 +328,17 @@
         }
         break
       case 10: // AuthenticationSASL
-        message.name = 'authenticationSASL'
-        message.mechanisms = []
-        let mechanism: string
-        do {
-          mechanism = this.reader.cstring()
-
-          if (mechanism) {
-            message.mechanisms.push(mechanism)
-          }
-        } while (mechanism)
+        {
+          message.name = 'authenticationSASL'
+          message.mechanisms = []
+          let mechanism: string
+          do {
+            mechanism = this.reader.cstring()
+            if (mechanism) {
+              message.mechanisms.push(mechanism)
+            }
+          } while (mechanism)
+        }
         break
       case 11: // AuthenticationSASLContinue
         message.name = 'authenticationSASLContinue'
Index: node_modules/pg-protocol/src/serializer.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Writer } from './buffer-writer'\r\n\r\nconst enum code {\r\n  startup = 0x70,\r\n  query = 0x51,\r\n  parse = 0x50,\r\n  bind = 0x42,\r\n  execute = 0x45,\r\n  flush = 0x48,\r\n  sync = 0x53,\r\n  end = 0x58,\r\n  close = 0x43,\r\n  describe = 0x44,\r\n  copyFromChunk = 0x64,\r\n  copyDone = 0x63,\r\n  copyFail = 0x66,\r\n}\r\n\r\nconst writer = new Writer()\r\n\r\nconst startup = (opts: Record<string, string>): Buffer => {\r\n  // protocol version\r\n  writer.addInt16(3).addInt16(0)\r\n  for (const key of Object.keys(opts)) {\r\n    writer.addCString(key).addCString(opts[key])\r\n  }\r\n\r\n  writer.addCString('client_encoding').addCString('UTF8')\r\n\r\n  var bodyBuffer = writer.addCString('').flush()\r\n  // this message is sent without a code\r\n\r\n  var length = bodyBuffer.length + 4\r\n\r\n  return new Writer().addInt32(length).add(bodyBuffer).flush()\r\n}\r\n\r\nconst requestSsl = (): Buffer => {\r\n  const response = Buffer.allocUnsafe(8)\r\n  response.writeInt32BE(8, 0)\r\n  response.writeInt32BE(80877103, 4)\r\n  return response\r\n}\r\n\r\nconst password = (password: string): Buffer => {\r\n  return writer.addCString(password).flush(code.startup)\r\n}\r\n\r\nconst sendSASLInitialResponseMessage = function (mechanism: string, initialResponse: string): Buffer {\r\n  // 0x70 = 'p'\r\n  writer.addCString(mechanism).addInt32(Buffer.byteLength(initialResponse)).addString(initialResponse)\r\n\r\n  return writer.flush(code.startup)\r\n}\r\n\r\nconst sendSCRAMClientFinalMessage = function (additionalData: string): Buffer {\r\n  return writer.addString(additionalData).flush(code.startup)\r\n}\r\n\r\nconst query = (text: string): Buffer => {\r\n  return writer.addCString(text).flush(code.query)\r\n}\r\n\r\ntype ParseOpts = {\r\n  name?: string\r\n  types?: number[]\r\n  text: string\r\n}\r\n\r\nconst emptyArray: any[] = []\r\n\r\nconst parse = (query: ParseOpts): Buffer => {\r\n  // expect something like this:\r\n  // { name: 'queryName',\r\n  //   text: 'select * from blah',\r\n  //   types: ['int8', 'bool'] }\r\n\r\n  // normalize missing query names to allow for null\r\n  const name = query.name || ''\r\n  if (name.length > 63) {\r\n    /* eslint-disable no-console */\r\n    console.error('Warning! Postgres only supports 63 characters for query names.')\r\n    console.error('You supplied %s (%s)', name, name.length)\r\n    console.error('This can cause conflicts and silent errors executing queries')\r\n    /* eslint-enable no-console */\r\n  }\r\n\r\n  const types = query.types || emptyArray\r\n\r\n  var len = types.length\r\n\r\n  var buffer = writer\r\n    .addCString(name) // name of query\r\n    .addCString(query.text) // actual query text\r\n    .addInt16(len)\r\n\r\n  for (var i = 0; i < len; i++) {\r\n    buffer.addInt32(types[i])\r\n  }\r\n\r\n  return writer.flush(code.parse)\r\n}\r\n\r\ntype ValueMapper = (param: any, index: number) => any\r\n\r\ntype BindOpts = {\r\n  portal?: string\r\n  binary?: boolean\r\n  statement?: string\r\n  values?: any[]\r\n  // optional map from JS value to postgres value per parameter\r\n  valueMapper?: ValueMapper\r\n}\r\n\r\nconst paramWriter = new Writer()\r\n\r\n// make this a const enum so typescript will inline the value\r\nconst enum ParamType {\r\n  STRING = 0,\r\n  BINARY = 1,\r\n}\r\n\r\nconst writeValues = function (values: any[], valueMapper?: ValueMapper): void {\r\n  for (let i = 0; i < values.length; i++) {\r\n    const mappedVal = valueMapper ? valueMapper(values[i], i) : values[i]\r\n    if (mappedVal == null) {\r\n      // add the param type (string) to the writer\r\n      writer.addInt16(ParamType.STRING)\r\n      // write -1 to the param writer to indicate null\r\n      paramWriter.addInt32(-1)\r\n    } else if (mappedVal instanceof Buffer) {\r\n      // add the param type (binary) to the writer\r\n      writer.addInt16(ParamType.BINARY)\r\n      // add the buffer to the param writer\r\n      paramWriter.addInt32(mappedVal.length)\r\n      paramWriter.add(mappedVal)\r\n    } else {\r\n      // add the param type (string) to the writer\r\n      writer.addInt16(ParamType.STRING)\r\n      paramWriter.addInt32(Buffer.byteLength(mappedVal))\r\n      paramWriter.addString(mappedVal)\r\n    }\r\n  }\r\n}\r\n\r\nconst bind = (config: BindOpts = {}): Buffer => {\r\n  // normalize config\r\n  const portal = config.portal || ''\r\n  const statement = config.statement || ''\r\n  const binary = config.binary || false\r\n  const values = config.values || emptyArray\r\n  const len = values.length\r\n\r\n  writer.addCString(portal).addCString(statement)\r\n  writer.addInt16(len)\r\n\r\n  writeValues(values, config.valueMapper)\r\n\r\n  writer.addInt16(len)\r\n  writer.add(paramWriter.flush())\r\n\r\n  // format code\r\n  writer.addInt16(binary ? ParamType.BINARY : ParamType.STRING)\r\n  return writer.flush(code.bind)\r\n}\r\n\r\ntype ExecOpts = {\r\n  portal?: string\r\n  rows?: number\r\n}\r\n\r\nconst emptyExecute = Buffer.from([code.execute, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00])\r\n\r\nconst execute = (config?: ExecOpts): Buffer => {\r\n  // this is the happy path for most queries\r\n  if (!config || (!config.portal && !config.rows)) {\r\n    return emptyExecute\r\n  }\r\n\r\n  const portal = config.portal || ''\r\n  const rows = config.rows || 0\r\n\r\n  const portalLength = Buffer.byteLength(portal)\r\n  const len = 4 + portalLength + 1 + 4\r\n  // one extra bit for code\r\n  const buff = Buffer.allocUnsafe(1 + len)\r\n  buff[0] = code.execute\r\n  buff.writeInt32BE(len, 1)\r\n  buff.write(portal, 5, 'utf-8')\r\n  buff[portalLength + 5] = 0 // null terminate portal cString\r\n  buff.writeUInt32BE(rows, buff.length - 4)\r\n  return buff\r\n}\r\n\r\nconst cancel = (processID: number, secretKey: number): Buffer => {\r\n  const buffer = Buffer.allocUnsafe(16)\r\n  buffer.writeInt32BE(16, 0)\r\n  buffer.writeInt16BE(1234, 4)\r\n  buffer.writeInt16BE(5678, 6)\r\n  buffer.writeInt32BE(processID, 8)\r\n  buffer.writeInt32BE(secretKey, 12)\r\n  return buffer\r\n}\r\n\r\ntype PortalOpts = {\r\n  type: 'S' | 'P'\r\n  name?: string\r\n}\r\n\r\nconst cstringMessage = (code: code, string: string): Buffer => {\r\n  const stringLen = Buffer.byteLength(string)\r\n  const len = 4 + stringLen + 1\r\n  // one extra bit for code\r\n  const buffer = Buffer.allocUnsafe(1 + len)\r\n  buffer[0] = code\r\n  buffer.writeInt32BE(len, 1)\r\n  buffer.write(string, 5, 'utf-8')\r\n  buffer[len] = 0 // null terminate cString\r\n  return buffer\r\n}\r\n\r\nconst emptyDescribePortal = writer.addCString('P').flush(code.describe)\r\nconst emptyDescribeStatement = writer.addCString('S').flush(code.describe)\r\n\r\nconst describe = (msg: PortalOpts): Buffer => {\r\n  return msg.name\r\n    ? cstringMessage(code.describe, `${msg.type}${msg.name || ''}`)\r\n    : msg.type === 'P'\r\n    ? emptyDescribePortal\r\n    : emptyDescribeStatement\r\n}\r\n\r\nconst close = (msg: PortalOpts): Buffer => {\r\n  const text = `${msg.type}${msg.name || ''}`\r\n  return cstringMessage(code.close, text)\r\n}\r\n\r\nconst copyData = (chunk: Buffer): Buffer => {\r\n  return writer.add(chunk).flush(code.copyFromChunk)\r\n}\r\n\r\nconst copyFail = (message: string): Buffer => {\r\n  return cstringMessage(code.copyFail, message)\r\n}\r\n\r\nconst codeOnlyBuffer = (code: code): Buffer => Buffer.from([code, 0x00, 0x00, 0x00, 0x04])\r\n\r\nconst flushBuffer = codeOnlyBuffer(code.flush)\r\nconst syncBuffer = codeOnlyBuffer(code.sync)\r\nconst endBuffer = codeOnlyBuffer(code.end)\r\nconst copyDoneBuffer = codeOnlyBuffer(code.copyDone)\r\n\r\nconst serialize = {\r\n  startup,\r\n  password,\r\n  requestSsl,\r\n  sendSASLInitialResponseMessage,\r\n  sendSCRAMClientFinalMessage,\r\n  query,\r\n  parse,\r\n  bind,\r\n  execute,\r\n  describe,\r\n  close,\r\n  flush: () => flushBuffer,\r\n  sync: () => syncBuffer,\r\n  end: () => endBuffer,\r\n  copyData,\r\n  copyDone: () => copyDoneBuffer,\r\n  copyFail,\r\n  cancel,\r\n}\r\n\r\nexport { serialize }\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/src/serializer.ts b/node_modules/pg-protocol/src/serializer.ts
--- a/node_modules/pg-protocol/src/serializer.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/src/serializer.ts	(date 1753913035339)
@@ -27,10 +27,10 @@
 
   writer.addCString('client_encoding').addCString('UTF8')
 
-  var bodyBuffer = writer.addCString('').flush()
+  const bodyBuffer = writer.addCString('').flush()
   // this message is sent without a code
 
-  var length = bodyBuffer.length + 4
+  const length = bodyBuffer.length + 4
 
   return new Writer().addInt32(length).add(bodyBuffer).flush()
 }
@@ -78,23 +78,21 @@
   // normalize missing query names to allow for null
   const name = query.name || ''
   if (name.length > 63) {
-    /* eslint-disable no-console */
     console.error('Warning! Postgres only supports 63 characters for query names.')
     console.error('You supplied %s (%s)', name, name.length)
     console.error('This can cause conflicts and silent errors executing queries')
-    /* eslint-enable no-console */
   }
 
   const types = query.types || emptyArray
 
-  var len = types.length
+  const len = types.length
 
-  var buffer = writer
+  const buffer = writer
     .addCString(name) // name of query
     .addCString(query.text) // actual query text
     .addInt16(len)
 
-  for (var i = 0; i < len; i++) {
+  for (let i = 0; i < len; i++) {
     buffer.addInt32(types[i])
   }
 
@@ -159,6 +157,8 @@
   writer.addInt16(len)
   writer.add(paramWriter.flush())
 
+  // all results use the same format code
+  writer.addInt16(1)
   // format code
   writer.addInt16(binary ? ParamType.BINARY : ParamType.STRING)
   return writer.flush(code.bind)
Index: node_modules/postgres/types/index.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Readable, Writable } from 'node:stream'\r\n\r\n/**\r\n * Establish a connection to a PostgreSQL server.\r\n * @param options Connection options - default to the same as psql\r\n * @returns An utility function to make queries to the server\r\n */\r\ndeclare function postgres<T extends Record<string, postgres.PostgresType> = {}>(options?: postgres.Options<T> | undefined): postgres.Sql<Record<string, postgres.PostgresType> extends T ? {} : { [type in keyof T]: T[type] extends {\r\n  serialize: (value: infer R) => any,\r\n  parse: (raw: any) => infer R\r\n} ? R : never }>\r\n/**\r\n * Establish a connection to a PostgreSQL server.\r\n * @param url Connection string used for authentication\r\n * @param options Connection options - default to the same as psql\r\n * @returns An utility function to make queries to the server\r\n */\r\ndeclare function postgres<T extends Record<string, postgres.PostgresType> = {}>(url: string, options?: postgres.Options<T> | undefined): postgres.Sql<Record<string, postgres.PostgresType> extends T ? {} : { [type in keyof T]: T[type] extends {\r\n  serialize: (value: infer R) => any,\r\n  parse: (raw: any) => infer R\r\n} ? R : never }>\r\n\r\n/**\r\n * Connection options of Postgres.\r\n */\r\ninterface BaseOptions<T extends Record<string, postgres.PostgresType>> {\r\n  /** Postgres ip address[s] or domain name[s] */\r\n  host: string | string[] | undefined;\r\n  /** Postgres server[s] port[s] */\r\n  port: number | number[] | undefined;\r\n  /** unix socket path (usually '/tmp') */\r\n  path: string | undefined;\r\n  /**\r\n   * Name of database to connect to\r\n   * @default process.env['PGDATABASE'] || options.user\r\n   */\r\n  database: string;\r\n  /**\r\n   * Username of database user\r\n   * @default process.env['PGUSERNAME'] || process.env['PGUSER'] || require('os').userInfo().username\r\n   */\r\n  user: string;\r\n  /**\r\n   * How to deal with ssl (can be a tls.connect option object)\r\n   * @default false\r\n  */\r\n  ssl: 'require' | 'allow' | 'prefer' | 'verify-full' | boolean | object;\r\n  /**\r\n   * Max number of connections\r\n   * @default 10\r\n   */\r\n  max: number;\r\n  /**\r\n   * Idle connection timeout in seconds\r\n   * @default process.env['PGIDLE_TIMEOUT']\r\n   */\r\n  idle_timeout: number | undefined;\r\n  /**\r\n   * Connect timeout in seconds\r\n   * @default process.env['PGCONNECT_TIMEOUT']\r\n   */\r\n  connect_timeout: number;\r\n  /** Array of custom types; see more in the README */\r\n  types: T;\r\n  /**\r\n   * Enables prepare mode.\r\n   * @default true\r\n   */\r\n  prepare: boolean;\r\n  /**\r\n   * Called when a notice is received\r\n   * @default console.log\r\n   */\r\n  onnotice: (notice: postgres.Notice) => void;\r\n  /** (key; value) when a server param change */\r\n  onparameter: (key: string, value: any) => void;\r\n  /** Is called with (connection; query; parameters) */\r\n  debug: boolean | ((connection: number, query: string, parameters: any[], paramTypes: any[]) => void);\r\n  /** Transform hooks */\r\n  transform: {\r\n    /** Transforms outcoming undefined values */\r\n    undefined?: any\r\n\r\n    /** Transforms incoming and outgoing column names */\r\n    column?: ((column: string) => string) | {\r\n      /** Transform function for column names in result rows */\r\n      from?: ((column: string) => string) | undefined;\r\n      /** Transform function for column names in interpolated values passed to tagged template literal */\r\n      to?: ((column: string) => string) | undefined;\r\n    } | undefined;\r\n    /** Transforms incoming and outgoing row values */\r\n    value?: ((value: any) => any) | {\r\n      /** Transform function for values in result rows */\r\n      from?: ((value: unknown, column: postgres.Column<string>) => any) | undefined;\r\n      // to?: ((value: unknown) => any) | undefined; // unused\r\n    } | undefined;\r\n    /** Transforms entire rows */\r\n    row?: ((row: postgres.Row) => any) | {\r\n      /** Transform function for entire result rows */\r\n      from?: ((row: postgres.Row) => any) | undefined;\r\n      // to?: ((row: postgres.Row) => any) | undefined; // unused\r\n    } | undefined;\r\n  };\r\n  /** Connection parameters */\r\n  connection: Partial<postgres.ConnectionParameters>;\r\n  /**\r\n   * Use 'read-write' with multiple hosts to ensure only connecting to primary\r\n   * @default process.env['PGTARGETSESSIONATTRS']\r\n   */\r\n  target_session_attrs: undefined | 'read-write' | 'read-only' | 'primary' | 'standby' | 'prefer-standby';\r\n  /**\r\n   * Automatically fetches types on connect\r\n   * @default true\r\n   */\r\n  fetch_types: boolean;\r\n  /**\r\n   * Publications to subscribe to (only relevant when calling `sql.subscribe()`)\r\n   * @default 'alltables'\r\n   */\r\n  publications: string\r\n  onclose: (connId: number) => void;\r\n  backoff: boolean | ((attemptNum: number) => number);\r\n  max_lifetime: number | null;\r\n  keep_alive: number | null;\r\n}\r\n\r\n\r\ndeclare const PRIVATE: unique symbol;\r\n\r\ndeclare class NotAPromise {\r\n  private [PRIVATE]: never; // prevent user-side interface implementation\r\n\r\n  /**\r\n   * @deprecated This object isn't an SQL query, and therefore not a Promise; use the tagged template string syntax instead: ```await sql\\`...\\`;```\r\n   * @throws NOT_TAGGED_CALL\r\n   */\r\n  private then(): never;\r\n  /**\r\n   * @deprecated This object isn't an SQL query, and therefore not a Promise; use the tagged template string syntax instead: ```await sql\\`...\\`;```\r\n   * @throws NOT_TAGGED_CALL\r\n   */\r\n  private catch(): never;\r\n  /**\r\n   * @deprecated This object isn't an SQL query, and therefore not a Promise; use the tagged template string syntax instead: ```await sql\\`...\\`;```\r\n   * @throws NOT_TAGGED_CALL\r\n   */\r\n  private finally(): never;\r\n}\r\n\r\ntype UnwrapPromiseArray<T> = T extends any[] ? {\r\n  [k in keyof T]: T[k] extends Promise<infer R> ? R : T[k]\r\n} : T;\r\n\r\ntype Keys = string\r\n\r\ntype SerializableObject<T, K extends readonly any[], TT> =\r\n  number extends K['length'] ? {} :\r\n  Partial<(Record<Keys & (keyof T) & (K['length'] extends 0 ? string : K[number]), postgres.ParameterOrJSON<TT> | undefined> & Record<string, any>)>\r\n\r\ntype First<T, K extends readonly any[], TT> =\r\n  // Tagged template string call\r\n  T extends TemplateStringsArray ? TemplateStringsArray :\r\n  // Identifiers helper\r\n  T extends string ? string :\r\n  // Dynamic values helper (depth 2)\r\n  T extends readonly any[][] ? readonly postgres.EscapableArray[] :\r\n  // Insert/update helper (depth 2)\r\n  T extends readonly (object & infer R)[] ? (R extends postgres.SerializableParameter<TT> ? readonly postgres.SerializableParameter<TT>[] : readonly SerializableObject<R, K, TT>[]) :\r\n  // Dynamic values/ANY helper (depth 1)\r\n  T extends readonly any[] ? (readonly postgres.SerializableParameter<TT>[]) :\r\n  // Insert/update helper (depth 1)\r\n  T extends object ? SerializableObject<T, K, TT> :\r\n  // Unexpected type\r\n  never\r\n\r\ntype Rest<T> =\r\n  T extends TemplateStringsArray ? never : // force fallback to the tagged template function overload\r\n  T extends string ? readonly string[] :\r\n  T extends readonly any[][] ? readonly [] :\r\n  T extends readonly (object & infer R)[] ? (\r\n    readonly (Keys & keyof R)[]   // sql(data, \"prop\", \"prop2\") syntax\r\n    |\r\n    [readonly (Keys & keyof R)[]] // sql(data, [\"prop\", \"prop2\"]) syntax\r\n  ) :\r\n  T extends readonly any[] ? readonly [] :\r\n  T extends object ? (\r\n    readonly (Keys & keyof T)[]   // sql(data, \"prop\", \"prop2\") syntax\r\n    |\r\n    [readonly (Keys & keyof T)[]] // sql(data, [\"prop\", \"prop2\"]) syntax\r\n  ) :\r\n  any\r\n\r\ntype Return<T, K extends readonly any[]> =\r\n  [T] extends [TemplateStringsArray] ?\r\n  [unknown] extends [T] ? postgres.Helper<T, K> : // ensure no `PendingQuery` with `any` types\r\n  [TemplateStringsArray] extends [T] ? postgres.PendingQuery<postgres.Row[]> :\r\n  postgres.Helper<T, K> :\r\n  postgres.Helper<T, K>\r\n\r\ndeclare namespace postgres {\r\n  class PostgresError extends Error {\r\n    name: 'PostgresError';\r\n    severity_local: string;\r\n    severity: string;\r\n    code: string;\r\n    position: string;\r\n    file: string;\r\n    line: string;\r\n    routine: string;\r\n\r\n    detail?: string | undefined;\r\n    hint?: string | undefined;\r\n    internal_position?: string | undefined;\r\n    internal_query?: string | undefined;\r\n    where?: string | undefined;\r\n    schema_name?: string | undefined;\r\n    table_name?: string | undefined;\r\n    column_name?: string | undefined;\r\n    data?: string | undefined;\r\n    type_name?: string | undefined;\r\n    constraint_name?: string | undefined;\r\n\r\n    /** Only set when debug is enabled */\r\n    query: string;\r\n    /** Only set when debug is enabled */\r\n    parameters: any[];\r\n  }\r\n\r\n  /**\r\n   * Convert a snake_case string to PascalCase.\r\n   * @param str The string from snake_case to convert\r\n   * @returns The new string in PascalCase\r\n   */\r\n  function toPascal(str: string): string;\r\n  namespace toPascal {\r\n    namespace column { function from(str: string): string; }\r\n    namespace value { function from(str: unknown, column: Column<string>): string }\r\n  }\r\n  /**\r\n   * Convert a PascalCase string to snake_case.\r\n   * @param str The string from snake_case to convert\r\n   * @returns The new string in snake_case\r\n   */\r\n  function fromPascal(str: string): string;\r\n  namespace fromPascal {\r\n    namespace column { function to(str: string): string }\r\n  }\r\n  /**\r\n   * Convert snake_case to and from PascalCase.\r\n   */\r\n   namespace pascal {\r\n    namespace column {\r\n      function from(str: string): string;\r\n      function to(str: string): string;\r\n    }\r\n    namespace value { function from(str: unknown, column: Column<string>): string }\r\n  }\r\n  /**\r\n   * Convert a snake_case string to camelCase.\r\n   * @param str The string from snake_case to convert\r\n   * @returns The new string in camelCase\r\n   */\r\n  function toCamel(str: string): string;\r\n  namespace toCamel {\r\n    namespace column { function from(str: string): string; }\r\n    namespace value { function from(str: unknown, column: Column<string>): string }\r\n  }\r\n  /**\r\n   * Convert a camelCase string to snake_case.\r\n   * @param str The string from snake_case to convert\r\n   * @returns The new string in snake_case\r\n   */\r\n  function fromCamel(str: string): string;\r\n  namespace fromCamel {\r\n    namespace column { function to(str: string): string }\r\n  }\r\n  /**\r\n   * Convert snake_case to and from camelCase.\r\n   */\r\n  namespace camel {\r\n    namespace column {\r\n      function from(str: string): string;\r\n      function to(str: string): string;\r\n    }\r\n    namespace value { function from(str: unknown, column: Column<string>): string }\r\n  }\r\n  /**\r\n   * Convert a snake_case string to kebab-case.\r\n   * @param str The string from snake_case to convert\r\n   * @returns The new string in kebab-case\r\n   */\r\n  function toKebab(str: string): string;\r\n  namespace toKebab {\r\n    namespace column { function from(str: string): string; }\r\n    namespace value { function from(str: unknown, column: Column<string>): string }\r\n  }\r\n  /**\r\n   * Convert a kebab-case string to snake_case.\r\n   * @param str The string from snake_case to convert\r\n   * @returns The new string in snake_case\r\n   */\r\n  function fromKebab(str: string): string;\r\n  namespace fromKebab {\r\n    namespace column { function to(str: string): string }\r\n  }\r\n  /**\r\n   * Convert snake_case to and from kebab-case.\r\n   */\r\n  namespace kebab {\r\n    namespace column {\r\n      function from(str: string): string;\r\n      function to(str: string): string;\r\n    }\r\n    namespace value { function from(str: unknown, column: Column<string>): string }\r\n  }\r\n\r\n  const BigInt: PostgresType<bigint>;\r\n\r\n  interface PostgresType<T = any> {\r\n    to: number;\r\n    from: number[];\r\n    serialize: (value: T) => unknown;\r\n    parse: (raw: any) => T;\r\n  }\r\n\r\n  interface ConnectionParameters {\r\n    /**\r\n     * Default application_name\r\n     * @default 'postgres.js'\r\n     */\r\n    application_name: string;\r\n    default_transaction_isolation: 'read uncommitted' | 'read committed' | 'repeatable read' | 'serializable',\r\n    default_transaction_read_only: boolean,\r\n    default_transaction_deferrable: boolean,\r\n    statement_timeout: number,\r\n    lock_timeout: number,\r\n    idle_in_transaction_session_timeout: number,\r\n    idle_session_timeout: number,\r\n    DateStyle: string,\r\n    IntervalStyle: string,\r\n    TimeZone: string,\r\n    /** Other connection parameters */\r\n    [name: string]: string | number | boolean;\r\n  }\r\n\r\n  interface Options<T extends Record<string, postgres.PostgresType>> extends Partial<BaseOptions<T>> {\r\n    /** @inheritdoc */\r\n    host?: string | undefined;\r\n    /** @inheritdoc */\r\n    port?: number | undefined;\r\n    /** @inheritdoc */\r\n    path?: string | undefined;\r\n    /** Password of database user (an alias for `password`) */\r\n    pass?: Options<T>['password'] | undefined;\r\n    /**\r\n     * Password of database user\r\n     * @default process.env['PGPASSWORD']\r\n     */\r\n    password?: string | (() => string | Promise<string>) | undefined;\r\n    /** Name of database to connect to (an alias for `database`) */\r\n    db?: Options<T>['database'] | undefined;\r\n    /** Username of database user (an alias for `user`) */\r\n    username?: Options<T>['user'] | undefined;\r\n    /** Postgres ip address or domain name (an alias for `host`) */\r\n    hostname?: Options<T>['host'] | undefined;\r\n    /**\r\n     * Disable prepared mode\r\n     * @deprecated use \"prepare\" option instead\r\n     */\r\n    no_prepare?: boolean | undefined;\r\n    /**\r\n     * Idle connection timeout in seconds\r\n     * @deprecated use \"idle_timeout\" option instead\r\n     */\r\n    timeout?: Options<T>['idle_timeout'] | undefined;\r\n  }\r\n\r\n  interface ParsedOptions<T extends Record<string, unknown> = {}> extends BaseOptions<{ [name in keyof T]: PostgresType<T[name]> }> {\r\n    /** @inheritdoc */\r\n    host: string[];\r\n    /** @inheritdoc */\r\n    port: number[];\r\n    /** @inheritdoc */\r\n    pass: null;\r\n    /** @inheritdoc */\r\n    transform: Transform;\r\n    serializers: Record<number, (value: any) => unknown>;\r\n    parsers: Record<number, (value: any) => unknown>;\r\n  }\r\n\r\n  interface Transform {\r\n    /** Transforms outcoming undefined values */\r\n    undefined: any\r\n\r\n    column: {\r\n      /** Transform function for column names in result rows */\r\n      from: ((column: string) => string) | undefined;\r\n      /** Transform function for column names in interpolated values passed to tagged template literal */\r\n      to: ((column: string) => string) | undefined;\r\n    };\r\n    value: {\r\n      /** Transform function for values in result rows */\r\n      from: ((value: any, column?: Column<string>) => any) | undefined;\r\n      /** Transform function for interpolated values passed to tagged template literal */\r\n      to: undefined; // (value: any) => any\r\n    };\r\n    row: {\r\n      /** Transform function for entire result rows */\r\n      from: ((row: postgres.Row) => any) | undefined;\r\n      to: undefined; // (row: postgres.Row) => any\r\n    };\r\n  }\r\n\r\n  interface Notice {\r\n    [field: string]: string;\r\n  }\r\n\r\n  interface Parameter<T = SerializableParameter> extends NotAPromise {\r\n    /**\r\n     * PostgreSQL OID of the type\r\n     */\r\n    type: number;\r\n    /**\r\n     * Serialized value\r\n     */\r\n    value: string | null;\r\n    /**\r\n     * Raw value to serialize\r\n     */\r\n    raw: T | null;\r\n  }\r\n\r\n  interface ArrayParameter<T extends readonly any[] = readonly any[]> extends Parameter<T | T[]> {\r\n    array: true;\r\n  }\r\n\r\n  interface ConnectionError extends globalThis.Error {\r\n    code:\r\n    | 'CONNECTION_DESTROYED'\r\n    | 'CONNECT_TIMEOUT'\r\n    | 'CONNECTION_CLOSED'\r\n    | 'CONNECTION_ENDED';\r\n    errno: this['code'];\r\n    address: string;\r\n    port?: number | undefined;\r\n  }\r\n\r\n  interface NotSupportedError extends globalThis.Error {\r\n    code: 'MESSAGE_NOT_SUPPORTED';\r\n    name: string;\r\n  }\r\n\r\n  interface GenericError extends globalThis.Error {\r\n    code:\r\n    | '57014' // canceling statement due to user request\r\n    | 'NOT_TAGGED_CALL'\r\n    | 'UNDEFINED_VALUE'\r\n    | 'MAX_PARAMETERS_EXCEEDED'\r\n    | 'SASL_SIGNATURE_MISMATCH';\r\n    message: string;\r\n  }\r\n\r\n  interface AuthNotImplementedError extends globalThis.Error {\r\n    code: 'AUTH_TYPE_NOT_IMPLEMENTED';\r\n    type: number | string;\r\n    message: string;\r\n  }\r\n\r\n  type Error = never\r\n    | PostgresError\r\n    | ConnectionError\r\n    | NotSupportedError\r\n    | GenericError\r\n    | AuthNotImplementedError;\r\n\r\n  interface ColumnInfo {\r\n    key: number;\r\n    name: string;\r\n    type: number;\r\n    parser?(raw: string): unknown;\r\n    atttypmod: number;\r\n  }\r\n\r\n  interface RelationInfo {\r\n    schema: string;\r\n    table: string;\r\n    columns: ColumnInfo[];\r\n    keys: ColumnInfo[];\r\n  }\r\n\r\n  type ReplicationEvent =\r\n    | { command: 'insert', relation: RelationInfo }\r\n    | { command: 'delete', relation: RelationInfo, key: boolean }\r\n    | { command: 'update', relation: RelationInfo, key: boolean, old: Row | null };\r\n\r\n  interface SubscriptionHandle {\r\n    unsubscribe(): void;\r\n  }\r\n\r\n  interface LargeObject {\r\n    writable(options?: {\r\n      highWaterMark?: number | undefined,\r\n      start?: number | undefined\r\n    } | undefined): Promise<Writable>;\r\n    readable(options?: {\r\n      highWaterMark?: number | undefined,\r\n      start?: number | undefined,\r\n      end?: number | undefined\r\n    } | undefined): Promise<Readable>;\r\n\r\n    close(): Promise<void>;\r\n    tell(): Promise<void>;\r\n    read(size: number): Promise<void>;\r\n    write(buffer: Uint8Array): Promise<[{ data: Uint8Array }]>;\r\n    truncate(size: number): Promise<void>;\r\n    seek(offset: number, whence?: number | undefined): Promise<void>;\r\n    size(): Promise<[{ position: bigint, size: bigint }]>;\r\n  }\r\n\r\n  type EscapableArray = (string | number)[]\r\n\r\n  type Serializable = never\r\n    | null\r\n    | boolean\r\n    | number\r\n    | string\r\n    | Date\r\n    | Uint8Array;\r\n\r\n  type SerializableParameter<T = never> = never\r\n    | T\r\n    | Serializable\r\n    | Helper<any>\r\n    | Parameter<any>\r\n    | ArrayParameter\r\n    | readonly SerializableParameter<T>[];\r\n\r\n  type JSONValue = // using a dedicated type to detect symbols, bigints, and other non serializable types\r\n    | null\r\n    | string\r\n    | number\r\n    | boolean\r\n    | Date // serialized as `string`\r\n    | readonly JSONValue[]\r\n    | { toJSON(): any } // `toJSON` called by `JSON.stringify`; not typing the return type, types definition is strict enough anyway\r\n    | {\r\n      readonly [prop: string | number]:\r\n      | undefined\r\n      | JSONValue\r\n      | ((...args: any) => any) // serialized as `undefined`\r\n    };\r\n\r\n  interface Row {\r\n    [column: string]: any;\r\n  }\r\n\r\n  type MaybeRow = Row | undefined;\r\n\r\n  interface Column<T extends string> {\r\n    name: T;\r\n    type: number;\r\n    table: number;\r\n    number: number;\r\n    parser?: ((raw: string) => unknown) | undefined;\r\n  }\r\n\r\n  type ColumnList<T> = (T extends string ? Column<T> : never)[];\r\n\r\n  interface State {\r\n    status: string;\r\n    pid: number;\r\n    secret: number;\r\n  }\r\n\r\n  interface Statement {\r\n    /** statement unique name */\r\n    name: string;\r\n    /** sql query */\r\n    string: string;\r\n    /** parameters types */\r\n    types: number[];\r\n    columns: ColumnList<string>;\r\n  }\r\n\r\n  interface ResultMeta<T extends number | null> {\r\n    count: T; // For tuples\r\n    command: string;\r\n    statement: Statement;\r\n    state: State;\r\n  }\r\n\r\n  interface ResultQueryMeta<T extends number | null, U> extends ResultMeta<T> {\r\n    columns: ColumnList<U>;\r\n  }\r\n\r\n  type ExecutionResult<T> = [] & ResultQueryMeta<number, keyof NonNullable<T>>;\r\n  type ValuesRowList<T extends readonly any[]> = T[number][keyof T[number]][][] & ResultQueryMeta<T['length'], keyof T[number]>;\r\n  type RawRowList<T extends readonly any[]> = Buffer[][] & Iterable<Buffer[][]> & ResultQueryMeta<T['length'], keyof T[number]>;\r\n  type RowList<T extends readonly any[]> = T & Iterable<NonNullable<T[number]>> & ResultQueryMeta<T['length'], keyof T[number]>;\r\n\r\n  interface PendingQueryModifiers<TRow extends readonly any[]> {\r\n    simple(): this;\r\n    readable(): Promise<Readable>;\r\n    writable(): Promise<Writable>;\r\n\r\n    execute(): this;\r\n    cancel(): void;\r\n\r\n    /**\r\n     * @deprecated `.stream` has been renamed to `.forEach`\r\n     * @throws\r\n     */\r\n    stream(cb: (row: NonNullable<TRow[number]>, result: ExecutionResult<TRow[number]>) => void): never;\r\n    forEach(cb: (row: NonNullable<TRow[number]>, result: ExecutionResult<TRow[number]>) => void): Promise<ExecutionResult<TRow[number]>>;\r\n\r\n    cursor(rows?: number | undefined): AsyncIterable<NonNullable<TRow[number]>[]>;\r\n    cursor(cb: (row: [NonNullable<TRow[number]>]) => void): Promise<ExecutionResult<TRow[number]>>;\r\n    cursor(rows: number, cb: (rows: NonNullable<TRow[number]>[]) => void): Promise<ExecutionResult<TRow[number]>>;\r\n  }\r\n\r\n  interface PendingDescribeQuery extends Promise<Statement> {\r\n  }\r\n\r\n  interface PendingValuesQuery<TRow extends readonly MaybeRow[]> extends Promise<ValuesRowList<TRow>>, PendingQueryModifiers<TRow[number][keyof TRow[number]][][]> {\r\n    describe(): PendingDescribeQuery;\r\n  }\r\n\r\n  interface PendingRawQuery<TRow extends readonly MaybeRow[]> extends Promise<RawRowList<TRow>>, PendingQueryModifiers<Buffer[][]> {\r\n  }\r\n\r\n  interface PendingQuery<TRow extends readonly MaybeRow[]> extends Promise<RowList<TRow>>, PendingQueryModifiers<TRow> {\r\n    describe(): PendingDescribeQuery;\r\n    values(): PendingValuesQuery<TRow>;\r\n    raw(): PendingRawQuery<TRow>;\r\n  }\r\n\r\n  interface PendingRequest extends Promise<[] & ResultMeta<null>> { }\r\n\r\n  interface ListenRequest extends Promise<ListenMeta> { }\r\n  interface ListenMeta extends ResultMeta<null> {\r\n    unlisten(): Promise<void>\r\n  }\r\n\r\n  interface Helper<T, U extends readonly any[] = T[]> extends NotAPromise {\r\n    first: T;\r\n    rest: U;\r\n  }\r\n\r\n  type Fragment = PendingQuery<any>\r\n\r\n  type ParameterOrJSON<T> =\r\n  | SerializableParameter<T>\r\n  | JSONValue\r\n\r\n  type ParameterOrFragment<T> =\r\n  | SerializableParameter<T>\r\n  | Fragment\r\n  | Fragment[]\r\n\r\n  interface Sql<TTypes extends Record<string, unknown> = {}> {\r\n    /**\r\n     * Query helper\r\n     * @param first Define how the helper behave\r\n     * @param rest Other optional arguments, depending on the helper type\r\n     * @returns An helper object usable as tagged template parameter in sql queries\r\n     */\r\n    <T, K extends Rest<T>>(first: T & First<T, K, TTypes[keyof TTypes]>, ...rest: K): Return<T, K>;\r\n\r\n    /**\r\n     * Execute the SQL query passed as a template string. Can only be used as template string tag.\r\n     * @param template The template generated from the template string\r\n     * @param parameters Interpoled values of the template string\r\n     * @returns A promise resolving to the result of your query\r\n     */\r\n    <T extends readonly (object | undefined)[] = Row[]>(template: TemplateStringsArray, ...parameters: readonly (ParameterOrFragment<TTypes[keyof TTypes]>)[]): PendingQuery<T>;\r\n\r\n    CLOSE: {};\r\n    END: this['CLOSE'];\r\n    PostgresError: typeof PostgresError;\r\n\r\n    options: ParsedOptions<TTypes>;\r\n    parameters: ConnectionParameters;\r\n    types: this['typed'];\r\n    typed: (<T>(value: T, oid: number) => Parameter<T>) & {\r\n      [name in keyof TTypes]: (value: TTypes[name]) => postgres.Parameter<TTypes[name]>\r\n    };\r\n\r\n    unsafe<T extends any[] = (Row & Iterable<Row>)[]>(query: string, parameters?: (ParameterOrJSON<TTypes[keyof TTypes]>)[] | undefined, queryOptions?: UnsafeQueryOptions | undefined): PendingQuery<T>;\r\n    end(options?: { timeout?: number | undefined } | undefined): Promise<void>;\r\n\r\n    listen(channel: string, onnotify: (value: string) => void, onlisten?: (() => void) | undefined): ListenRequest;\r\n    notify(channel: string, payload: string): PendingRequest;\r\n\r\n    subscribe(event: string, cb: (row: Row | null, info: ReplicationEvent) => void, onsubscribe?: (() => void), onerror?: (() => any)): Promise<SubscriptionHandle>;\r\n\r\n    largeObject(oid?: number | undefined, /** @default 0x00020000 | 0x00040000 */ mode?: number | undefined): Promise<LargeObject>;\r\n\r\n    begin<T>(cb: (sql: TransactionSql<TTypes>) => T | Promise<T>): Promise<UnwrapPromiseArray<T>>;\r\n    begin<T>(options: string, cb: (sql: TransactionSql<TTypes>) => T | Promise<T>): Promise<UnwrapPromiseArray<T>>;\r\n\r\n    array<T extends SerializableParameter<TTypes[keyof TTypes]>[] = SerializableParameter<TTypes[keyof TTypes]>[]>(value: T, type?: number | undefined): ArrayParameter<T>;\r\n    file<T extends readonly any[] = Row[]>(path: string | Buffer | URL | number, options?: { cache?: boolean | undefined } | undefined): PendingQuery<T>;\r\n    file<T extends readonly any[] = Row[]>(path: string | Buffer | URL | number, args: (ParameterOrJSON<TTypes[keyof TTypes]>)[], options?: { cache?: boolean | undefined } | undefined): PendingQuery<T>;\r\n    json(value: JSONValue): Parameter;\r\n\r\n    reserve(): Promise<ReservedSql<TTypes>>\r\n  }\r\n\r\n  interface UnsafeQueryOptions {\r\n    /**\r\n     * When executes query as prepared statement.\r\n     * @default false\r\n     */\r\n    prepare?: boolean | undefined;\r\n  }\r\n\r\n  interface TransactionSql<TTypes extends Record<string, unknown> = {}> extends Sql<TTypes> {\r\n    savepoint<T>(cb: (sql: TransactionSql<TTypes>) => T | Promise<T>): Promise<UnwrapPromiseArray<T>>;\r\n    savepoint<T>(name: string, cb: (sql: TransactionSql<TTypes>) => T | Promise<T>): Promise<UnwrapPromiseArray<T>>;\r\n\r\n    prepare<T>(name: string): Promise<UnwrapPromiseArray<T>>;\r\n  }\r\n\r\n  interface ReservedSql<TTypes extends Record<string, unknown> = {}> extends Sql<TTypes> {\r\n    release(): void;\r\n  }\r\n}\r\n\r\nexport = postgres;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/postgres/types/index.d.ts b/node_modules/postgres/types/index.d.ts
--- a/node_modules/postgres/types/index.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/postgres/types/index.d.ts	(date 1753913035238)
@@ -456,7 +456,8 @@
     | 'NOT_TAGGED_CALL'
     | 'UNDEFINED_VALUE'
     | 'MAX_PARAMETERS_EXCEEDED'
-    | 'SASL_SIGNATURE_MISMATCH';
+    | 'SASL_SIGNATURE_MISMATCH'
+    | 'UNSAFE_TRANSACTION';
     message: string;
   }
 
Index: node_modules/pg-protocol/src/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { BackendMessage, DatabaseError } from './messages'\r\nimport { serialize } from './serializer'\r\nimport { Parser, MessageCallback } from './parser'\r\n\r\nexport function parse(stream: NodeJS.ReadableStream, callback: MessageCallback): Promise<void> {\r\n  const parser = new Parser()\r\n  stream.on('data', (buffer: Buffer) => parser.parse(buffer, callback))\r\n  return new Promise((resolve) => stream.on('end', () => resolve()))\r\n}\r\n\r\nexport { serialize, DatabaseError }\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/src/index.ts b/node_modules/pg-protocol/src/index.ts
--- a/node_modules/pg-protocol/src/index.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/src/index.ts	(date 1753913035330)
@@ -1,4 +1,4 @@
-import { BackendMessage, DatabaseError } from './messages'
+import { DatabaseError } from './messages'
 import { serialize } from './serializer'
 import { Parser, MessageCallback } from './parser'
 
Index: node_modules/pg-protocol/src/b.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// file for microbenchmarking\r\n\r\nimport { Writer } from './buffer-writer'\r\nimport { serialize } from './index'\r\nimport { BufferReader } from './buffer-reader'\r\n\r\nconst LOOPS = 1000\r\nlet count = 0\r\nlet start = Date.now()\r\nconst writer = new Writer()\r\n\r\nconst reader = new BufferReader()\r\nconst buffer = Buffer.from([33, 33, 33, 33, 33, 33, 33, 0])\r\n\r\nconst run = () => {\r\n  if (count > LOOPS) {\r\n    console.log(Date.now() - start)\r\n    return\r\n  }\r\n  count++\r\n  for (let i = 0; i < LOOPS; i++) {\r\n    reader.setBuffer(0, buffer)\r\n    reader.cstring()\r\n  }\r\n  setImmediate(run)\r\n}\r\n\r\nrun()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/src/b.ts b/node_modules/pg-protocol/src/b.ts
--- a/node_modules/pg-protocol/src/b.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/src/b.ts	(date 1753913035321)
@@ -1,20 +1,17 @@
 // file for microbenchmarking
 
-import { Writer } from './buffer-writer'
-import { serialize } from './index'
 import { BufferReader } from './buffer-reader'
 
 const LOOPS = 1000
 let count = 0
-let start = Date.now()
-const writer = new Writer()
+const start = performance.now()
 
 const reader = new BufferReader()
 const buffer = Buffer.from([33, 33, 33, 33, 33, 33, 33, 0])
 
 const run = () => {
   if (count > LOOPS) {
-    console.log(Date.now() - start)
+    console.log(performance.now() - start)
     return
   }
   count++
Index: TODO.MD
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>### INSTALL DEPENDENCIES\r\n\r\n```\r\nnpm install\r\n```\r\n\r\n### RUN SERVER\r\n\r\n```\r\nnpm start\r\n```\r\n\r\n###\r\n\r\n## create db models\r\n\r\n- create user table\r\n- create Rooms table\r\n- create Reservation table\r\n- create Payment table\r\n\r\n## add all controllers for models\r\n\r\n- user\r\n- reservation\r\n- rooms\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TODO.MD b/TODO.MD
--- a/TODO.MD	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/TODO.MD	(date 1754357956547)
@@ -21,6 +21,8 @@
 
 ## add all controllers for models
 
+####  TODO: ADD MOVE DATABASE CONNECTION DETAILS TO .ENV FILE
+
 - user
 - reservation
 - rooms
Index: node_modules/pg-protocol/src/outbound-serializer.test.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import assert from 'assert'\r\nimport { serialize } from './serializer'\r\nimport BufferList from './testing/buffer-list'\r\n\r\ndescribe('serializer', () => {\r\n  it('builds startup message', function () {\r\n    const actual = serialize.startup({\r\n      user: 'brian',\r\n      database: 'bang',\r\n    })\r\n    assert.deepEqual(\r\n      actual,\r\n      new BufferList()\r\n        .addInt16(3)\r\n        .addInt16(0)\r\n        .addCString('user')\r\n        .addCString('brian')\r\n        .addCString('database')\r\n        .addCString('bang')\r\n        .addCString('client_encoding')\r\n        .addCString('UTF8')\r\n        .addCString('')\r\n        .join(true)\r\n    )\r\n  })\r\n\r\n  it('builds password message', function () {\r\n    const actual = serialize.password('!')\r\n    assert.deepEqual(actual, new BufferList().addCString('!').join(true, 'p'))\r\n  })\r\n\r\n  it('builds request ssl message', function () {\r\n    const actual = serialize.requestSsl()\r\n    const expected = new BufferList().addInt32(80877103).join(true)\r\n    assert.deepEqual(actual, expected)\r\n  })\r\n\r\n  it('builds SASLInitialResponseMessage message', function () {\r\n    const actual = serialize.sendSASLInitialResponseMessage('mech', 'data')\r\n    assert.deepEqual(actual, new BufferList().addCString('mech').addInt32(4).addString('data').join(true, 'p'))\r\n  })\r\n\r\n  it('builds SCRAMClientFinalMessage message', function () {\r\n    const actual = serialize.sendSCRAMClientFinalMessage('data')\r\n    assert.deepEqual(actual, new BufferList().addString('data').join(true, 'p'))\r\n  })\r\n\r\n  it('builds query message', function () {\r\n    var txt = 'select * from boom'\r\n    const actual = serialize.query(txt)\r\n    assert.deepEqual(actual, new BufferList().addCString(txt).join(true, 'Q'))\r\n  })\r\n\r\n  describe('parse message', () => {\r\n    it('builds parse message', function () {\r\n      const actual = serialize.parse({ text: '!' })\r\n      var expected = new BufferList().addCString('').addCString('!').addInt16(0).join(true, 'P')\r\n      assert.deepEqual(actual, expected)\r\n    })\r\n\r\n    it('builds parse message with named query', function () {\r\n      const actual = serialize.parse({\r\n        name: 'boom',\r\n        text: 'select * from boom',\r\n        types: [],\r\n      })\r\n      var expected = new BufferList().addCString('boom').addCString('select * from boom').addInt16(0).join(true, 'P')\r\n      assert.deepEqual(actual, expected)\r\n    })\r\n\r\n    it('with multiple parameters', function () {\r\n      const actual = serialize.parse({\r\n        name: 'force',\r\n        text: 'select * from bang where name = $1',\r\n        types: [1, 2, 3, 4],\r\n      })\r\n      var expected = new BufferList()\r\n        .addCString('force')\r\n        .addCString('select * from bang where name = $1')\r\n        .addInt16(4)\r\n        .addInt32(1)\r\n        .addInt32(2)\r\n        .addInt32(3)\r\n        .addInt32(4)\r\n        .join(true, 'P')\r\n      assert.deepEqual(actual, expected)\r\n    })\r\n  })\r\n\r\n  describe('bind messages', function () {\r\n    it('with no values', function () {\r\n      const actual = serialize.bind()\r\n\r\n      var expectedBuffer = new BufferList()\r\n        .addCString('')\r\n        .addCString('')\r\n        .addInt16(0)\r\n        .addInt16(0)\r\n        .addInt16(0)\r\n        .join(true, 'B')\r\n      assert.deepEqual(actual, expectedBuffer)\r\n    })\r\n\r\n    it('with named statement, portal, and values', function () {\r\n      const actual = serialize.bind({\r\n        portal: 'bang',\r\n        statement: 'woo',\r\n        values: ['1', 'hi', null, 'zing'],\r\n      })\r\n      var expectedBuffer = new BufferList()\r\n        .addCString('bang') // portal name\r\n        .addCString('woo') // statement name\r\n        .addInt16(4)\r\n        .addInt16(0)\r\n        .addInt16(0)\r\n        .addInt16(0)\r\n        .addInt16(0)\r\n        .addInt16(4)\r\n        .addInt32(1)\r\n        .add(Buffer.from('1'))\r\n        .addInt32(2)\r\n        .add(Buffer.from('hi'))\r\n        .addInt32(-1)\r\n        .addInt32(4)\r\n        .add(Buffer.from('zing'))\r\n        .addInt16(0)\r\n        .join(true, 'B')\r\n      assert.deepEqual(actual, expectedBuffer)\r\n    })\r\n  })\r\n\r\n  it('with custom valueMapper', function () {\r\n    const actual = serialize.bind({\r\n      portal: 'bang',\r\n      statement: 'woo',\r\n      values: ['1', 'hi', null, 'zing'],\r\n      valueMapper: () => null,\r\n    })\r\n    var expectedBuffer = new BufferList()\r\n      .addCString('bang') // portal name\r\n      .addCString('woo') // statement name\r\n      .addInt16(4)\r\n      .addInt16(0)\r\n      .addInt16(0)\r\n      .addInt16(0)\r\n      .addInt16(0)\r\n      .addInt16(4)\r\n      .addInt32(-1)\r\n      .addInt32(-1)\r\n      .addInt32(-1)\r\n      .addInt32(-1)\r\n      .addInt16(0)\r\n      .join(true, 'B')\r\n    assert.deepEqual(actual, expectedBuffer)\r\n  })\r\n\r\n  it('with named statement, portal, and buffer value', function () {\r\n    const actual = serialize.bind({\r\n      portal: 'bang',\r\n      statement: 'woo',\r\n      values: ['1', 'hi', null, Buffer.from('zing', 'utf8')],\r\n    })\r\n    var expectedBuffer = new BufferList()\r\n      .addCString('bang') // portal name\r\n      .addCString('woo') // statement name\r\n      .addInt16(4) // value count\r\n      .addInt16(0) // string\r\n      .addInt16(0) // string\r\n      .addInt16(0) // string\r\n      .addInt16(1) // binary\r\n      .addInt16(4)\r\n      .addInt32(1)\r\n      .add(Buffer.from('1'))\r\n      .addInt32(2)\r\n      .add(Buffer.from('hi'))\r\n      .addInt32(-1)\r\n      .addInt32(4)\r\n      .add(Buffer.from('zing', 'utf-8'))\r\n      .addInt16(0)\r\n      .join(true, 'B')\r\n    assert.deepEqual(actual, expectedBuffer)\r\n  })\r\n\r\n  describe('builds execute message', function () {\r\n    it('for unamed portal with no row limit', function () {\r\n      const actual = serialize.execute()\r\n      var expectedBuffer = new BufferList().addCString('').addInt32(0).join(true, 'E')\r\n      assert.deepEqual(actual, expectedBuffer)\r\n    })\r\n\r\n    it('for named portal with row limit', function () {\r\n      const actual = serialize.execute({\r\n        portal: 'my favorite portal',\r\n        rows: 100,\r\n      })\r\n      var expectedBuffer = new BufferList().addCString('my favorite portal').addInt32(100).join(true, 'E')\r\n      assert.deepEqual(actual, expectedBuffer)\r\n    })\r\n  })\r\n\r\n  it('builds flush command', function () {\r\n    const actual = serialize.flush()\r\n    var expected = new BufferList().join(true, 'H')\r\n    assert.deepEqual(actual, expected)\r\n  })\r\n\r\n  it('builds sync command', function () {\r\n    const actual = serialize.sync()\r\n    var expected = new BufferList().join(true, 'S')\r\n    assert.deepEqual(actual, expected)\r\n  })\r\n\r\n  it('builds end command', function () {\r\n    const actual = serialize.end()\r\n    var expected = Buffer.from([0x58, 0, 0, 0, 4])\r\n    assert.deepEqual(actual, expected)\r\n  })\r\n\r\n  describe('builds describe command', function () {\r\n    it('describe statement', function () {\r\n      const actual = serialize.describe({ type: 'S', name: 'bang' })\r\n      var expected = new BufferList().addChar('S').addCString('bang').join(true, 'D')\r\n      assert.deepEqual(actual, expected)\r\n    })\r\n\r\n    it('describe unnamed portal', function () {\r\n      const actual = serialize.describe({ type: 'P' })\r\n      var expected = new BufferList().addChar('P').addCString('').join(true, 'D')\r\n      assert.deepEqual(actual, expected)\r\n    })\r\n  })\r\n\r\n  describe('builds close command', function () {\r\n    it('describe statement', function () {\r\n      const actual = serialize.close({ type: 'S', name: 'bang' })\r\n      var expected = new BufferList().addChar('S').addCString('bang').join(true, 'C')\r\n      assert.deepEqual(actual, expected)\r\n    })\r\n\r\n    it('describe unnamed portal', function () {\r\n      const actual = serialize.close({ type: 'P' })\r\n      var expected = new BufferList().addChar('P').addCString('').join(true, 'C')\r\n      assert.deepEqual(actual, expected)\r\n    })\r\n  })\r\n\r\n  describe('copy messages', function () {\r\n    it('builds copyFromChunk', () => {\r\n      const actual = serialize.copyData(Buffer.from([1, 2, 3]))\r\n      const expected = new BufferList().add(Buffer.from([1, 2, 3])).join(true, 'd')\r\n      assert.deepEqual(actual, expected)\r\n    })\r\n\r\n    it('builds copy fail', () => {\r\n      const actual = serialize.copyFail('err!')\r\n      const expected = new BufferList().addCString('err!').join(true, 'f')\r\n      assert.deepEqual(actual, expected)\r\n    })\r\n\r\n    it('builds copy done', () => {\r\n      const actual = serialize.copyDone()\r\n      const expected = new BufferList().join(true, 'c')\r\n      assert.deepEqual(actual, expected)\r\n    })\r\n  })\r\n\r\n  it('builds cancel message', () => {\r\n    const actual = serialize.cancel(3, 4)\r\n    const expected = new BufferList().addInt16(1234).addInt16(5678).addInt32(3).addInt32(4).join(true)\r\n    assert.deepEqual(actual, expected)\r\n  })\r\n})\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/src/outbound-serializer.test.ts b/node_modules/pg-protocol/src/outbound-serializer.test.ts
--- a/node_modules/pg-protocol/src/outbound-serializer.test.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/src/outbound-serializer.test.ts	(date 1753913035334)
@@ -46,7 +46,7 @@
   })
 
   it('builds query message', function () {
-    var txt = 'select * from boom'
+    const txt = 'select * from boom'
     const actual = serialize.query(txt)
     assert.deepEqual(actual, new BufferList().addCString(txt).join(true, 'Q'))
   })
@@ -54,7 +54,7 @@
   describe('parse message', () => {
     it('builds parse message', function () {
       const actual = serialize.parse({ text: '!' })
-      var expected = new BufferList().addCString('').addCString('!').addInt16(0).join(true, 'P')
+      const expected = new BufferList().addCString('').addCString('!').addInt16(0).join(true, 'P')
       assert.deepEqual(actual, expected)
     })
 
@@ -64,7 +64,7 @@
         text: 'select * from boom',
         types: [],
       })
-      var expected = new BufferList().addCString('boom').addCString('select * from boom').addInt16(0).join(true, 'P')
+      const expected = new BufferList().addCString('boom').addCString('select * from boom').addInt16(0).join(true, 'P')
       assert.deepEqual(actual, expected)
     })
 
@@ -74,7 +74,7 @@
         text: 'select * from bang where name = $1',
         types: [1, 2, 3, 4],
       })
-      var expected = new BufferList()
+      const expected = new BufferList()
         .addCString('force')
         .addCString('select * from bang where name = $1')
         .addInt16(4)
@@ -91,11 +91,12 @@
     it('with no values', function () {
       const actual = serialize.bind()
 
-      var expectedBuffer = new BufferList()
+      const expectedBuffer = new BufferList()
         .addCString('')
         .addCString('')
         .addInt16(0)
         .addInt16(0)
+        .addInt16(1)
         .addInt16(0)
         .join(true, 'B')
       assert.deepEqual(actual, expectedBuffer)
@@ -107,7 +108,7 @@
         statement: 'woo',
         values: ['1', 'hi', null, 'zing'],
       })
-      var expectedBuffer = new BufferList()
+      const expectedBuffer = new BufferList()
         .addCString('bang') // portal name
         .addCString('woo') // statement name
         .addInt16(4)
@@ -123,6 +124,7 @@
         .addInt32(-1)
         .addInt32(4)
         .add(Buffer.from('zing'))
+        .addInt16(1)
         .addInt16(0)
         .join(true, 'B')
       assert.deepEqual(actual, expectedBuffer)
@@ -136,7 +138,7 @@
       values: ['1', 'hi', null, 'zing'],
       valueMapper: () => null,
     })
-    var expectedBuffer = new BufferList()
+    const expectedBuffer = new BufferList()
       .addCString('bang') // portal name
       .addCString('woo') // statement name
       .addInt16(4)
@@ -149,6 +151,7 @@
       .addInt32(-1)
       .addInt32(-1)
       .addInt32(-1)
+      .addInt16(1)
       .addInt16(0)
       .join(true, 'B')
     assert.deepEqual(actual, expectedBuffer)
@@ -160,7 +163,7 @@
       statement: 'woo',
       values: ['1', 'hi', null, Buffer.from('zing', 'utf8')],
     })
-    var expectedBuffer = new BufferList()
+    const expectedBuffer = new BufferList()
       .addCString('bang') // portal name
       .addCString('woo') // statement name
       .addInt16(4) // value count
@@ -176,6 +179,7 @@
       .addInt32(-1)
       .addInt32(4)
       .add(Buffer.from('zing', 'utf-8'))
+      .addInt16(1)
       .addInt16(0)
       .join(true, 'B')
     assert.deepEqual(actual, expectedBuffer)
@@ -184,7 +188,7 @@
   describe('builds execute message', function () {
     it('for unamed portal with no row limit', function () {
       const actual = serialize.execute()
-      var expectedBuffer = new BufferList().addCString('').addInt32(0).join(true, 'E')
+      const expectedBuffer = new BufferList().addCString('').addInt32(0).join(true, 'E')
       assert.deepEqual(actual, expectedBuffer)
     })
 
@@ -193,39 +197,39 @@
         portal: 'my favorite portal',
         rows: 100,
       })
-      var expectedBuffer = new BufferList().addCString('my favorite portal').addInt32(100).join(true, 'E')
+      const expectedBuffer = new BufferList().addCString('my favorite portal').addInt32(100).join(true, 'E')
       assert.deepEqual(actual, expectedBuffer)
     })
   })
 
   it('builds flush command', function () {
     const actual = serialize.flush()
-    var expected = new BufferList().join(true, 'H')
+    const expected = new BufferList().join(true, 'H')
     assert.deepEqual(actual, expected)
   })
 
   it('builds sync command', function () {
     const actual = serialize.sync()
-    var expected = new BufferList().join(true, 'S')
+    const expected = new BufferList().join(true, 'S')
     assert.deepEqual(actual, expected)
   })
 
   it('builds end command', function () {
     const actual = serialize.end()
-    var expected = Buffer.from([0x58, 0, 0, 0, 4])
+    const expected = Buffer.from([0x58, 0, 0, 0, 4])
     assert.deepEqual(actual, expected)
   })
 
   describe('builds describe command', function () {
     it('describe statement', function () {
       const actual = serialize.describe({ type: 'S', name: 'bang' })
-      var expected = new BufferList().addChar('S').addCString('bang').join(true, 'D')
+      const expected = new BufferList().addChar('S').addCString('bang').join(true, 'D')
       assert.deepEqual(actual, expected)
     })
 
     it('describe unnamed portal', function () {
       const actual = serialize.describe({ type: 'P' })
-      var expected = new BufferList().addChar('P').addCString('').join(true, 'D')
+      const expected = new BufferList().addChar('P').addCString('').join(true, 'D')
       assert.deepEqual(actual, expected)
     })
   })
@@ -233,13 +237,13 @@
   describe('builds close command', function () {
     it('describe statement', function () {
       const actual = serialize.close({ type: 'S', name: 'bang' })
-      var expected = new BufferList().addChar('S').addCString('bang').join(true, 'C')
+      const expected = new BufferList().addChar('S').addCString('bang').join(true, 'C')
       assert.deepEqual(actual, expected)
     })
 
     it('describe unnamed portal', function () {
       const actual = serialize.close({ type: 'P' })
-      var expected = new BufferList().addChar('P').addCString('').join(true, 'C')
+      const expected = new BufferList().addChar('P').addCString('').join(true, 'C')
       assert.deepEqual(actual, expected)
     })
   })
Index: node_modules/pg-protocol/src/buffer-writer.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//binary data writer tuned for encoding binary specific to the postgres binary protocol\r\n\r\nexport class Writer {\r\n  private buffer: Buffer\r\n  private offset: number = 5\r\n  private headerPosition: number = 0\r\n  constructor(private size = 256) {\r\n    this.buffer = Buffer.allocUnsafe(size)\r\n  }\r\n\r\n  private ensure(size: number): void {\r\n    var remaining = this.buffer.length - this.offset\r\n    if (remaining < size) {\r\n      var oldBuffer = this.buffer\r\n      // exponential growth factor of around ~ 1.5\r\n      // https://stackoverflow.com/questions/2269063/buffer-growth-strategy\r\n      var newSize = oldBuffer.length + (oldBuffer.length >> 1) + size\r\n      this.buffer = Buffer.allocUnsafe(newSize)\r\n      oldBuffer.copy(this.buffer)\r\n    }\r\n  }\r\n\r\n  public addInt32(num: number): Writer {\r\n    this.ensure(4)\r\n    this.buffer[this.offset++] = (num >>> 24) & 0xff\r\n    this.buffer[this.offset++] = (num >>> 16) & 0xff\r\n    this.buffer[this.offset++] = (num >>> 8) & 0xff\r\n    this.buffer[this.offset++] = (num >>> 0) & 0xff\r\n    return this\r\n  }\r\n\r\n  public addInt16(num: number): Writer {\r\n    this.ensure(2)\r\n    this.buffer[this.offset++] = (num >>> 8) & 0xff\r\n    this.buffer[this.offset++] = (num >>> 0) & 0xff\r\n    return this\r\n  }\r\n\r\n  public addCString(string: string): Writer {\r\n    if (!string) {\r\n      this.ensure(1)\r\n    } else {\r\n      var len = Buffer.byteLength(string)\r\n      this.ensure(len + 1) // +1 for null terminator\r\n      this.buffer.write(string, this.offset, 'utf-8')\r\n      this.offset += len\r\n    }\r\n\r\n    this.buffer[this.offset++] = 0 // null terminator\r\n    return this\r\n  }\r\n\r\n  public addString(string: string = ''): Writer {\r\n    var len = Buffer.byteLength(string)\r\n    this.ensure(len)\r\n    this.buffer.write(string, this.offset)\r\n    this.offset += len\r\n    return this\r\n  }\r\n\r\n  public add(otherBuffer: Buffer): Writer {\r\n    this.ensure(otherBuffer.length)\r\n    otherBuffer.copy(this.buffer, this.offset)\r\n    this.offset += otherBuffer.length\r\n    return this\r\n  }\r\n\r\n  private join(code?: number): Buffer {\r\n    if (code) {\r\n      this.buffer[this.headerPosition] = code\r\n      //length is everything in this packet minus the code\r\n      const length = this.offset - (this.headerPosition + 1)\r\n      this.buffer.writeInt32BE(length, this.headerPosition + 1)\r\n    }\r\n    return this.buffer.slice(code ? 0 : 5, this.offset)\r\n  }\r\n\r\n  public flush(code?: number): Buffer {\r\n    var result = this.join(code)\r\n    this.offset = 5\r\n    this.headerPosition = 0\r\n    this.buffer = Buffer.allocUnsafe(this.size)\r\n    return result\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/src/buffer-writer.ts b/node_modules/pg-protocol/src/buffer-writer.ts
--- a/node_modules/pg-protocol/src/buffer-writer.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/src/buffer-writer.ts	(date 1753913035325)
@@ -9,12 +9,12 @@
   }
 
   private ensure(size: number): void {
-    var remaining = this.buffer.length - this.offset
+    const remaining = this.buffer.length - this.offset
     if (remaining < size) {
-      var oldBuffer = this.buffer
+      const oldBuffer = this.buffer
       // exponential growth factor of around ~ 1.5
       // https://stackoverflow.com/questions/2269063/buffer-growth-strategy
-      var newSize = oldBuffer.length + (oldBuffer.length >> 1) + size
+      const newSize = oldBuffer.length + (oldBuffer.length >> 1) + size
       this.buffer = Buffer.allocUnsafe(newSize)
       oldBuffer.copy(this.buffer)
     }
@@ -40,7 +40,7 @@
     if (!string) {
       this.ensure(1)
     } else {
-      var len = Buffer.byteLength(string)
+      const len = Buffer.byteLength(string)
       this.ensure(len + 1) // +1 for null terminator
       this.buffer.write(string, this.offset, 'utf-8')
       this.offset += len
@@ -51,7 +51,7 @@
   }
 
   public addString(string: string = ''): Writer {
-    var len = Buffer.byteLength(string)
+    const len = Buffer.byteLength(string)
     this.ensure(len)
     this.buffer.write(string, this.offset)
     this.offset += len
@@ -76,7 +76,7 @@
   }
 
   public flush(code?: number): Buffer {
-    var result = this.join(code)
+    const result = this.join(code)
     this.offset = 5
     this.headerPosition = 0
     this.buffer = Buffer.allocUnsafe(this.size)
Index: node_modules/pg-protocol/src/inbound-parser.test.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import buffers from './testing/test-buffers'\r\nimport BufferList from './testing/buffer-list'\r\nimport { parse } from '.'\r\nimport assert from 'assert'\r\nimport { PassThrough } from 'stream'\r\nimport { BackendMessage } from './messages'\r\n\r\nvar authOkBuffer = buffers.authenticationOk()\r\nvar paramStatusBuffer = buffers.parameterStatus('client_encoding', 'UTF8')\r\nvar readyForQueryBuffer = buffers.readyForQuery()\r\nvar backendKeyDataBuffer = buffers.backendKeyData(1, 2)\r\nvar commandCompleteBuffer = buffers.commandComplete('SELECT 3')\r\nvar parseCompleteBuffer = buffers.parseComplete()\r\nvar bindCompleteBuffer = buffers.bindComplete()\r\nvar portalSuspendedBuffer = buffers.portalSuspended()\r\n\r\nvar addRow = function (bufferList: BufferList, name: string, offset: number) {\r\n  return bufferList\r\n    .addCString(name) // field name\r\n    .addInt32(offset++) // table id\r\n    .addInt16(offset++) // attribute of column number\r\n    .addInt32(offset++) // objectId of field's data type\r\n    .addInt16(offset++) // datatype size\r\n    .addInt32(offset++) // type modifier\r\n    .addInt16(0) // format code, 0 => text\r\n}\r\n\r\nvar row1 = {\r\n  name: 'id',\r\n  tableID: 1,\r\n  attributeNumber: 2,\r\n  dataTypeID: 3,\r\n  dataTypeSize: 4,\r\n  typeModifier: 5,\r\n  formatCode: 0,\r\n}\r\nvar oneRowDescBuff = buffers.rowDescription([row1])\r\nrow1.name = 'bang'\r\n\r\nvar twoRowBuf = buffers.rowDescription([\r\n  row1,\r\n  {\r\n    name: 'whoah',\r\n    tableID: 10,\r\n    attributeNumber: 11,\r\n    dataTypeID: 12,\r\n    dataTypeSize: 13,\r\n    typeModifier: 14,\r\n    formatCode: 0,\r\n  },\r\n])\r\n\r\nvar emptyRowFieldBuf = new BufferList().addInt16(0).join(true, 'D')\r\n\r\nvar emptyRowFieldBuf = buffers.dataRow([])\r\n\r\nvar oneFieldBuf = new BufferList()\r\n  .addInt16(1) // number of fields\r\n  .addInt32(5) // length of bytes of fields\r\n  .addCString('test')\r\n  .join(true, 'D')\r\n\r\nvar oneFieldBuf = buffers.dataRow(['test'])\r\n\r\nvar expectedAuthenticationOkayMessage = {\r\n  name: 'authenticationOk',\r\n  length: 8,\r\n}\r\n\r\nvar expectedParameterStatusMessage = {\r\n  name: 'parameterStatus',\r\n  parameterName: 'client_encoding',\r\n  parameterValue: 'UTF8',\r\n  length: 25,\r\n}\r\n\r\nvar expectedBackendKeyDataMessage = {\r\n  name: 'backendKeyData',\r\n  processID: 1,\r\n  secretKey: 2,\r\n}\r\n\r\nvar expectedReadyForQueryMessage = {\r\n  name: 'readyForQuery',\r\n  length: 5,\r\n  status: 'I',\r\n}\r\n\r\nvar expectedCommandCompleteMessage = {\r\n  name: 'commandComplete',\r\n  length: 13,\r\n  text: 'SELECT 3',\r\n}\r\nvar emptyRowDescriptionBuffer = new BufferList()\r\n  .addInt16(0) // number of fields\r\n  .join(true, 'T')\r\n\r\nvar expectedEmptyRowDescriptionMessage = {\r\n  name: 'rowDescription',\r\n  length: 6,\r\n  fieldCount: 0,\r\n  fields: [],\r\n}\r\nvar expectedOneRowMessage = {\r\n  name: 'rowDescription',\r\n  length: 27,\r\n  fieldCount: 1,\r\n  fields: [\r\n    {\r\n      name: 'id',\r\n      tableID: 1,\r\n      columnID: 2,\r\n      dataTypeID: 3,\r\n      dataTypeSize: 4,\r\n      dataTypeModifier: 5,\r\n      format: 'text',\r\n    },\r\n  ],\r\n}\r\n\r\nvar expectedTwoRowMessage = {\r\n  name: 'rowDescription',\r\n  length: 53,\r\n  fieldCount: 2,\r\n  fields: [\r\n    {\r\n      name: 'bang',\r\n      tableID: 1,\r\n      columnID: 2,\r\n      dataTypeID: 3,\r\n      dataTypeSize: 4,\r\n      dataTypeModifier: 5,\r\n      format: 'text',\r\n    },\r\n    {\r\n      name: 'whoah',\r\n      tableID: 10,\r\n      columnID: 11,\r\n      dataTypeID: 12,\r\n      dataTypeSize: 13,\r\n      dataTypeModifier: 14,\r\n      format: 'text',\r\n    },\r\n  ],\r\n}\r\n\r\nvar emptyParameterDescriptionBuffer = new BufferList()\r\n  .addInt16(0) // number of parameters\r\n  .join(true, 't')\r\n\r\nvar oneParameterDescBuf = buffers.parameterDescription([1111])\r\n\r\nvar twoParameterDescBuf = buffers.parameterDescription([2222, 3333])\r\n\r\nvar expectedEmptyParameterDescriptionMessage = {\r\n  name: 'parameterDescription',\r\n  length: 6,\r\n  parameterCount: 0,\r\n  dataTypeIDs: [],\r\n}\r\n\r\nvar expectedOneParameterMessage = {\r\n  name: 'parameterDescription',\r\n  length: 10,\r\n  parameterCount: 1,\r\n  dataTypeIDs: [1111],\r\n}\r\n\r\nvar expectedTwoParameterMessage = {\r\n  name: 'parameterDescription',\r\n  length: 14,\r\n  parameterCount: 2,\r\n  dataTypeIDs: [2222, 3333],\r\n}\r\n\r\nvar testForMessage = function (buffer: Buffer, expectedMessage: any) {\r\n  it('recieves and parses ' + expectedMessage.name, async () => {\r\n    const messages = await parseBuffers([buffer])\r\n    const [lastMessage] = messages\r\n\r\n    for (const key in expectedMessage) {\r\n      assert.deepEqual((lastMessage as any)[key], expectedMessage[key])\r\n    }\r\n  })\r\n}\r\n\r\nvar plainPasswordBuffer = buffers.authenticationCleartextPassword()\r\nvar md5PasswordBuffer = buffers.authenticationMD5Password()\r\nvar SASLBuffer = buffers.authenticationSASL()\r\nvar SASLContinueBuffer = buffers.authenticationSASLContinue()\r\nvar SASLFinalBuffer = buffers.authenticationSASLFinal()\r\n\r\nvar expectedPlainPasswordMessage = {\r\n  name: 'authenticationCleartextPassword',\r\n}\r\n\r\nvar expectedMD5PasswordMessage = {\r\n  name: 'authenticationMD5Password',\r\n  salt: Buffer.from([1, 2, 3, 4]),\r\n}\r\n\r\nvar expectedSASLMessage = {\r\n  name: 'authenticationSASL',\r\n  mechanisms: ['SCRAM-SHA-256'],\r\n}\r\n\r\nvar expectedSASLContinueMessage = {\r\n  name: 'authenticationSASLContinue',\r\n  data: 'data',\r\n}\r\n\r\nvar expectedSASLFinalMessage = {\r\n  name: 'authenticationSASLFinal',\r\n  data: 'data',\r\n}\r\n\r\nvar notificationResponseBuffer = buffers.notification(4, 'hi', 'boom')\r\nvar expectedNotificationResponseMessage = {\r\n  name: 'notification',\r\n  processId: 4,\r\n  channel: 'hi',\r\n  payload: 'boom',\r\n}\r\n\r\nconst parseBuffers = async (buffers: Buffer[]): Promise<BackendMessage[]> => {\r\n  const stream = new PassThrough()\r\n  for (const buffer of buffers) {\r\n    stream.write(buffer)\r\n  }\r\n  stream.end()\r\n  const msgs: BackendMessage[] = []\r\n  await parse(stream, (msg) => msgs.push(msg))\r\n  return msgs\r\n}\r\n\r\ndescribe('PgPacketStream', function () {\r\n  testForMessage(authOkBuffer, expectedAuthenticationOkayMessage)\r\n  testForMessage(plainPasswordBuffer, expectedPlainPasswordMessage)\r\n  testForMessage(md5PasswordBuffer, expectedMD5PasswordMessage)\r\n  testForMessage(SASLBuffer, expectedSASLMessage)\r\n  testForMessage(SASLContinueBuffer, expectedSASLContinueMessage)\r\n\r\n  // this exercises a found bug in the parser:\r\n  // https://github.com/brianc/node-postgres/pull/2210#issuecomment-627626084\r\n  // and adds a test which is deterministic, rather than relying on network packet chunking\r\n  const extendedSASLContinueBuffer = Buffer.concat([SASLContinueBuffer, Buffer.from([1, 2, 3, 4])])\r\n  testForMessage(extendedSASLContinueBuffer, expectedSASLContinueMessage)\r\n\r\n  testForMessage(SASLFinalBuffer, expectedSASLFinalMessage)\r\n\r\n  // this exercises a found bug in the parser:\r\n  // https://github.com/brianc/node-postgres/pull/2210#issuecomment-627626084\r\n  // and adds a test which is deterministic, rather than relying on network packet chunking\r\n  const extendedSASLFinalBuffer = Buffer.concat([SASLFinalBuffer, Buffer.from([1, 2, 4, 5])])\r\n  testForMessage(extendedSASLFinalBuffer, expectedSASLFinalMessage)\r\n\r\n  testForMessage(paramStatusBuffer, expectedParameterStatusMessage)\r\n  testForMessage(backendKeyDataBuffer, expectedBackendKeyDataMessage)\r\n  testForMessage(readyForQueryBuffer, expectedReadyForQueryMessage)\r\n  testForMessage(commandCompleteBuffer, expectedCommandCompleteMessage)\r\n  testForMessage(notificationResponseBuffer, expectedNotificationResponseMessage)\r\n  testForMessage(buffers.emptyQuery(), {\r\n    name: 'emptyQuery',\r\n    length: 4,\r\n  })\r\n\r\n  testForMessage(Buffer.from([0x6e, 0, 0, 0, 4]), {\r\n    name: 'noData',\r\n  })\r\n\r\n  describe('rowDescription messages', function () {\r\n    testForMessage(emptyRowDescriptionBuffer, expectedEmptyRowDescriptionMessage)\r\n    testForMessage(oneRowDescBuff, expectedOneRowMessage)\r\n    testForMessage(twoRowBuf, expectedTwoRowMessage)\r\n  })\r\n\r\n  describe('parameterDescription messages', function () {\r\n    testForMessage(emptyParameterDescriptionBuffer, expectedEmptyParameterDescriptionMessage)\r\n    testForMessage(oneParameterDescBuf, expectedOneParameterMessage)\r\n    testForMessage(twoParameterDescBuf, expectedTwoParameterMessage)\r\n  })\r\n\r\n  describe('parsing rows', function () {\r\n    describe('parsing empty row', function () {\r\n      testForMessage(emptyRowFieldBuf, {\r\n        name: 'dataRow',\r\n        fieldCount: 0,\r\n      })\r\n    })\r\n\r\n    describe('parsing data row with fields', function () {\r\n      testForMessage(oneFieldBuf, {\r\n        name: 'dataRow',\r\n        fieldCount: 1,\r\n        fields: ['test'],\r\n      })\r\n    })\r\n  })\r\n\r\n  describe('notice message', function () {\r\n    // this uses the same logic as error message\r\n    var buff = buffers.notice([{ type: 'C', value: 'code' }])\r\n    testForMessage(buff, {\r\n      name: 'notice',\r\n      code: 'code',\r\n    })\r\n  })\r\n\r\n  testForMessage(buffers.error([]), {\r\n    name: 'error',\r\n  })\r\n\r\n  describe('with all the fields', function () {\r\n    var buffer = buffers.error([\r\n      {\r\n        type: 'S',\r\n        value: 'ERROR',\r\n      },\r\n      {\r\n        type: 'C',\r\n        value: 'code',\r\n      },\r\n      {\r\n        type: 'M',\r\n        value: 'message',\r\n      },\r\n      {\r\n        type: 'D',\r\n        value: 'details',\r\n      },\r\n      {\r\n        type: 'H',\r\n        value: 'hint',\r\n      },\r\n      {\r\n        type: 'P',\r\n        value: '100',\r\n      },\r\n      {\r\n        type: 'p',\r\n        value: '101',\r\n      },\r\n      {\r\n        type: 'q',\r\n        value: 'query',\r\n      },\r\n      {\r\n        type: 'W',\r\n        value: 'where',\r\n      },\r\n      {\r\n        type: 'F',\r\n        value: 'file',\r\n      },\r\n      {\r\n        type: 'L',\r\n        value: 'line',\r\n      },\r\n      {\r\n        type: 'R',\r\n        value: 'routine',\r\n      },\r\n      {\r\n        type: 'Z', // ignored\r\n        value: 'alsdkf',\r\n      },\r\n    ])\r\n\r\n    testForMessage(buffer, {\r\n      name: 'error',\r\n      severity: 'ERROR',\r\n      code: 'code',\r\n      message: 'message',\r\n      detail: 'details',\r\n      hint: 'hint',\r\n      position: '100',\r\n      internalPosition: '101',\r\n      internalQuery: 'query',\r\n      where: 'where',\r\n      file: 'file',\r\n      line: 'line',\r\n      routine: 'routine',\r\n    })\r\n  })\r\n\r\n  testForMessage(parseCompleteBuffer, {\r\n    name: 'parseComplete',\r\n  })\r\n\r\n  testForMessage(bindCompleteBuffer, {\r\n    name: 'bindComplete',\r\n  })\r\n\r\n  testForMessage(bindCompleteBuffer, {\r\n    name: 'bindComplete',\r\n  })\r\n\r\n  testForMessage(buffers.closeComplete(), {\r\n    name: 'closeComplete',\r\n  })\r\n\r\n  describe('parses portal suspended message', function () {\r\n    testForMessage(portalSuspendedBuffer, {\r\n      name: 'portalSuspended',\r\n    })\r\n  })\r\n\r\n  describe('parses replication start message', function () {\r\n    testForMessage(Buffer.from([0x57, 0x00, 0x00, 0x00, 0x04]), {\r\n      name: 'replicationStart',\r\n      length: 4,\r\n    })\r\n  })\r\n\r\n  describe('copy', () => {\r\n    testForMessage(buffers.copyIn(0), {\r\n      name: 'copyInResponse',\r\n      length: 7,\r\n      binary: false,\r\n      columnTypes: [],\r\n    })\r\n\r\n    testForMessage(buffers.copyIn(2), {\r\n      name: 'copyInResponse',\r\n      length: 11,\r\n      binary: false,\r\n      columnTypes: [0, 1],\r\n    })\r\n\r\n    testForMessage(buffers.copyOut(0), {\r\n      name: 'copyOutResponse',\r\n      length: 7,\r\n      binary: false,\r\n      columnTypes: [],\r\n    })\r\n\r\n    testForMessage(buffers.copyOut(3), {\r\n      name: 'copyOutResponse',\r\n      length: 13,\r\n      binary: false,\r\n      columnTypes: [0, 1, 2],\r\n    })\r\n\r\n    testForMessage(buffers.copyDone(), {\r\n      name: 'copyDone',\r\n      length: 4,\r\n    })\r\n\r\n    testForMessage(buffers.copyData(Buffer.from([5, 6, 7])), {\r\n      name: 'copyData',\r\n      length: 7,\r\n      chunk: Buffer.from([5, 6, 7]),\r\n    })\r\n  })\r\n\r\n  // since the data message on a stream can randomly divide the incomming\r\n  // tcp packets anywhere, we need to make sure we can parse every single\r\n  // split on a tcp message\r\n  describe('split buffer, single message parsing', function () {\r\n    var fullBuffer = buffers.dataRow([null, 'bang', 'zug zug', null, '!'])\r\n\r\n    it('parses when full buffer comes in', async function () {\r\n      const messages = await parseBuffers([fullBuffer])\r\n      const message = messages[0] as any\r\n      assert.equal(message.fields.length, 5)\r\n      assert.equal(message.fields[0], null)\r\n      assert.equal(message.fields[1], 'bang')\r\n      assert.equal(message.fields[2], 'zug zug')\r\n      assert.equal(message.fields[3], null)\r\n      assert.equal(message.fields[4], '!')\r\n    })\r\n\r\n    var testMessageRecievedAfterSpiltAt = async function (split: number) {\r\n      var firstBuffer = Buffer.alloc(fullBuffer.length - split)\r\n      var secondBuffer = Buffer.alloc(fullBuffer.length - firstBuffer.length)\r\n      fullBuffer.copy(firstBuffer, 0, 0)\r\n      fullBuffer.copy(secondBuffer, 0, firstBuffer.length)\r\n      const messages = await parseBuffers([fullBuffer])\r\n      const message = messages[0] as any\r\n      assert.equal(message.fields.length, 5)\r\n      assert.equal(message.fields[0], null)\r\n      assert.equal(message.fields[1], 'bang')\r\n      assert.equal(message.fields[2], 'zug zug')\r\n      assert.equal(message.fields[3], null)\r\n      assert.equal(message.fields[4], '!')\r\n    }\r\n\r\n    it('parses when split in the middle', function () {\r\n      testMessageRecievedAfterSpiltAt(6)\r\n    })\r\n\r\n    it('parses when split at end', function () {\r\n      testMessageRecievedAfterSpiltAt(2)\r\n    })\r\n\r\n    it('parses when split at beginning', function () {\r\n      testMessageRecievedAfterSpiltAt(fullBuffer.length - 2)\r\n      testMessageRecievedAfterSpiltAt(fullBuffer.length - 1)\r\n      testMessageRecievedAfterSpiltAt(fullBuffer.length - 5)\r\n    })\r\n  })\r\n\r\n  describe('split buffer, multiple message parsing', function () {\r\n    var dataRowBuffer = buffers.dataRow(['!'])\r\n    var readyForQueryBuffer = buffers.readyForQuery()\r\n    var fullBuffer = Buffer.alloc(dataRowBuffer.length + readyForQueryBuffer.length)\r\n    dataRowBuffer.copy(fullBuffer, 0, 0)\r\n    readyForQueryBuffer.copy(fullBuffer, dataRowBuffer.length, 0)\r\n\r\n    var verifyMessages = function (messages: any[]) {\r\n      assert.strictEqual(messages.length, 2)\r\n      assert.deepEqual(messages[0], {\r\n        name: 'dataRow',\r\n        fieldCount: 1,\r\n        length: 11,\r\n        fields: ['!'],\r\n      })\r\n      assert.equal(messages[0].fields[0], '!')\r\n      assert.deepEqual(messages[1], {\r\n        name: 'readyForQuery',\r\n        length: 5,\r\n        status: 'I',\r\n      })\r\n    }\r\n    // sanity check\r\n    it('recieves both messages when packet is not split', async function () {\r\n      const messages = await parseBuffers([fullBuffer])\r\n      verifyMessages(messages)\r\n    })\r\n\r\n    var splitAndVerifyTwoMessages = async function (split: number) {\r\n      var firstBuffer = Buffer.alloc(fullBuffer.length - split)\r\n      var secondBuffer = Buffer.alloc(fullBuffer.length - firstBuffer.length)\r\n      fullBuffer.copy(firstBuffer, 0, 0)\r\n      fullBuffer.copy(secondBuffer, 0, firstBuffer.length)\r\n      const messages = await parseBuffers([firstBuffer, secondBuffer])\r\n      verifyMessages(messages)\r\n    }\r\n\r\n    describe('recieves both messages when packet is split', function () {\r\n      it('in the middle', function () {\r\n        return splitAndVerifyTwoMessages(11)\r\n      })\r\n      it('at the front', function () {\r\n        return Promise.all([\r\n          splitAndVerifyTwoMessages(fullBuffer.length - 1),\r\n          splitAndVerifyTwoMessages(fullBuffer.length - 4),\r\n          splitAndVerifyTwoMessages(fullBuffer.length - 6),\r\n        ])\r\n      })\r\n\r\n      it('at the end', function () {\r\n        return Promise.all([splitAndVerifyTwoMessages(8), splitAndVerifyTwoMessages(1)])\r\n      })\r\n    })\r\n  })\r\n})\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/src/inbound-parser.test.ts b/node_modules/pg-protocol/src/inbound-parser.test.ts
--- a/node_modules/pg-protocol/src/inbound-parser.test.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/src/inbound-parser.test.ts	(date 1753913035328)
@@ -5,27 +5,16 @@
 import { PassThrough } from 'stream'
 import { BackendMessage } from './messages'
 
-var authOkBuffer = buffers.authenticationOk()
-var paramStatusBuffer = buffers.parameterStatus('client_encoding', 'UTF8')
-var readyForQueryBuffer = buffers.readyForQuery()
-var backendKeyDataBuffer = buffers.backendKeyData(1, 2)
-var commandCompleteBuffer = buffers.commandComplete('SELECT 3')
-var parseCompleteBuffer = buffers.parseComplete()
-var bindCompleteBuffer = buffers.bindComplete()
-var portalSuspendedBuffer = buffers.portalSuspended()
+const authOkBuffer = buffers.authenticationOk()
+const paramStatusBuffer = buffers.parameterStatus('client_encoding', 'UTF8')
+const readyForQueryBuffer = buffers.readyForQuery()
+const backendKeyDataBuffer = buffers.backendKeyData(1, 2)
+const commandCompleteBuffer = buffers.commandComplete('SELECT 3')
+const parseCompleteBuffer = buffers.parseComplete()
+const bindCompleteBuffer = buffers.bindComplete()
+const portalSuspendedBuffer = buffers.portalSuspended()
 
-var addRow = function (bufferList: BufferList, name: string, offset: number) {
-  return bufferList
-    .addCString(name) // field name
-    .addInt32(offset++) // table id
-    .addInt16(offset++) // attribute of column number
-    .addInt32(offset++) // objectId of field's data type
-    .addInt16(offset++) // datatype size
-    .addInt32(offset++) // type modifier
-    .addInt16(0) // format code, 0 => text
-}
-
-var row1 = {
+const row1 = {
   name: 'id',
   tableID: 1,
   attributeNumber: 2,
@@ -34,10 +23,10 @@
   typeModifier: 5,
   formatCode: 0,
 }
-var oneRowDescBuff = buffers.rowDescription([row1])
+const oneRowDescBuff = buffers.rowDescription([row1])
 row1.name = 'bang'
 
-var twoRowBuf = buffers.rowDescription([
+const twoRowBuf = buffers.rowDescription([
   row1,
   {
     name: 'whoah',
@@ -50,58 +39,61 @@
   },
 ])
 
-var emptyRowFieldBuf = new BufferList().addInt16(0).join(true, 'D')
+const rowWithBigOids = {
+  name: 'bigoid',
+  tableID: 3000000001,
+  attributeNumber: 2,
+  dataTypeID: 3000000003,
+  dataTypeSize: 4,
+  typeModifier: 5,
+  formatCode: 0,
+}
+const bigOidDescBuff = buffers.rowDescription([rowWithBigOids])
 
-var emptyRowFieldBuf = buffers.dataRow([])
+const emptyRowFieldBuf = buffers.dataRow([])
 
-var oneFieldBuf = new BufferList()
-  .addInt16(1) // number of fields
-  .addInt32(5) // length of bytes of fields
-  .addCString('test')
-  .join(true, 'D')
+const oneFieldBuf = buffers.dataRow(['test'])
 
-var oneFieldBuf = buffers.dataRow(['test'])
-
-var expectedAuthenticationOkayMessage = {
+const expectedAuthenticationOkayMessage = {
   name: 'authenticationOk',
   length: 8,
 }
 
-var expectedParameterStatusMessage = {
+const expectedParameterStatusMessage = {
   name: 'parameterStatus',
   parameterName: 'client_encoding',
   parameterValue: 'UTF8',
   length: 25,
 }
 
-var expectedBackendKeyDataMessage = {
+const expectedBackendKeyDataMessage = {
   name: 'backendKeyData',
   processID: 1,
   secretKey: 2,
 }
 
-var expectedReadyForQueryMessage = {
+const expectedReadyForQueryMessage = {
   name: 'readyForQuery',
   length: 5,
   status: 'I',
 }
 
-var expectedCommandCompleteMessage = {
+const expectedCommandCompleteMessage = {
   name: 'commandComplete',
   length: 13,
   text: 'SELECT 3',
 }
-var emptyRowDescriptionBuffer = new BufferList()
+const emptyRowDescriptionBuffer = new BufferList()
   .addInt16(0) // number of fields
   .join(true, 'T')
 
-var expectedEmptyRowDescriptionMessage = {
+const expectedEmptyRowDescriptionMessage = {
   name: 'rowDescription',
   length: 6,
   fieldCount: 0,
   fields: [],
 }
-var expectedOneRowMessage = {
+const expectedOneRowMessage = {
   name: 'rowDescription',
   length: 27,
   fieldCount: 1,
@@ -118,7 +110,7 @@
   ],
 }
 
-var expectedTwoRowMessage = {
+const expectedTwoRowMessage = {
   name: 'rowDescription',
   length: 53,
   fieldCount: 2,
@@ -143,38 +135,54 @@
     },
   ],
 }
+const expectedBigOidMessage = {
+  name: 'rowDescription',
+  length: 31,
+  fieldCount: 1,
+  fields: [
+    {
+      name: 'bigoid',
+      tableID: 3000000001,
+      columnID: 2,
+      dataTypeID: 3000000003,
+      dataTypeSize: 4,
+      dataTypeModifier: 5,
+      format: 'text',
+    },
+  ],
+}
 
-var emptyParameterDescriptionBuffer = new BufferList()
+const emptyParameterDescriptionBuffer = new BufferList()
   .addInt16(0) // number of parameters
   .join(true, 't')
 
-var oneParameterDescBuf = buffers.parameterDescription([1111])
+const oneParameterDescBuf = buffers.parameterDescription([1111])
 
-var twoParameterDescBuf = buffers.parameterDescription([2222, 3333])
+const twoParameterDescBuf = buffers.parameterDescription([2222, 3333])
 
-var expectedEmptyParameterDescriptionMessage = {
+const expectedEmptyParameterDescriptionMessage = {
   name: 'parameterDescription',
   length: 6,
   parameterCount: 0,
   dataTypeIDs: [],
 }
 
-var expectedOneParameterMessage = {
+const expectedOneParameterMessage = {
   name: 'parameterDescription',
   length: 10,
   parameterCount: 1,
   dataTypeIDs: [1111],
 }
 
-var expectedTwoParameterMessage = {
+const expectedTwoParameterMessage = {
   name: 'parameterDescription',
   length: 14,
   parameterCount: 2,
   dataTypeIDs: [2222, 3333],
 }
 
-var testForMessage = function (buffer: Buffer, expectedMessage: any) {
-  it('recieves and parses ' + expectedMessage.name, async () => {
+const testForMessage = function (buffer: Buffer, expectedMessage: any) {
+  it('receives and parses ' + expectedMessage.name, async () => {
     const messages = await parseBuffers([buffer])
     const [lastMessage] = messages
 
@@ -184,38 +192,38 @@
   })
 }
 
-var plainPasswordBuffer = buffers.authenticationCleartextPassword()
-var md5PasswordBuffer = buffers.authenticationMD5Password()
-var SASLBuffer = buffers.authenticationSASL()
-var SASLContinueBuffer = buffers.authenticationSASLContinue()
-var SASLFinalBuffer = buffers.authenticationSASLFinal()
+const plainPasswordBuffer = buffers.authenticationCleartextPassword()
+const md5PasswordBuffer = buffers.authenticationMD5Password()
+const SASLBuffer = buffers.authenticationSASL()
+const SASLContinueBuffer = buffers.authenticationSASLContinue()
+const SASLFinalBuffer = buffers.authenticationSASLFinal()
 
-var expectedPlainPasswordMessage = {
+const expectedPlainPasswordMessage = {
   name: 'authenticationCleartextPassword',
 }
 
-var expectedMD5PasswordMessage = {
+const expectedMD5PasswordMessage = {
   name: 'authenticationMD5Password',
   salt: Buffer.from([1, 2, 3, 4]),
 }
 
-var expectedSASLMessage = {
+const expectedSASLMessage = {
   name: 'authenticationSASL',
   mechanisms: ['SCRAM-SHA-256'],
 }
 
-var expectedSASLContinueMessage = {
+const expectedSASLContinueMessage = {
   name: 'authenticationSASLContinue',
   data: 'data',
 }
 
-var expectedSASLFinalMessage = {
+const expectedSASLFinalMessage = {
   name: 'authenticationSASLFinal',
   data: 'data',
 }
 
-var notificationResponseBuffer = buffers.notification(4, 'hi', 'boom')
-var expectedNotificationResponseMessage = {
+const notificationResponseBuffer = buffers.notification(4, 'hi', 'boom')
+const expectedNotificationResponseMessage = {
   name: 'notification',
   processId: 4,
   channel: 'hi',
@@ -272,6 +280,7 @@
     testForMessage(emptyRowDescriptionBuffer, expectedEmptyRowDescriptionMessage)
     testForMessage(oneRowDescBuff, expectedOneRowMessage)
     testForMessage(twoRowBuf, expectedTwoRowMessage)
+    testForMessage(bigOidDescBuff, expectedBigOidMessage)
   })
 
   describe('parameterDescription messages', function () {
@@ -299,7 +308,7 @@
 
   describe('notice message', function () {
     // this uses the same logic as error message
-    var buff = buffers.notice([{ type: 'C', value: 'code' }])
+    const buff = buffers.notice([{ type: 'C', value: 'code' }])
     testForMessage(buff, {
       name: 'notice',
       code: 'code',
@@ -311,7 +320,7 @@
   })
 
   describe('with all the fields', function () {
-    var buffer = buffers.error([
+    const buffer = buffers.error([
       {
         type: 'S',
         value: 'ERROR',
@@ -457,7 +466,7 @@
   // tcp packets anywhere, we need to make sure we can parse every single
   // split on a tcp message
   describe('split buffer, single message parsing', function () {
-    var fullBuffer = buffers.dataRow([null, 'bang', 'zug zug', null, '!'])
+    const fullBuffer = buffers.dataRow([null, 'bang', 'zug zug', null, '!'])
 
     it('parses when full buffer comes in', async function () {
       const messages = await parseBuffers([fullBuffer])
@@ -470,12 +479,12 @@
       assert.equal(message.fields[4], '!')
     })
 
-    var testMessageRecievedAfterSpiltAt = async function (split: number) {
-      var firstBuffer = Buffer.alloc(fullBuffer.length - split)
-      var secondBuffer = Buffer.alloc(fullBuffer.length - firstBuffer.length)
+    const testMessageReceivedAfterSplitAt = async function (split: number) {
+      const firstBuffer = Buffer.alloc(fullBuffer.length - split)
+      const secondBuffer = Buffer.alloc(fullBuffer.length - firstBuffer.length)
       fullBuffer.copy(firstBuffer, 0, 0)
       fullBuffer.copy(secondBuffer, 0, firstBuffer.length)
-      const messages = await parseBuffers([fullBuffer])
+      const messages = await parseBuffers([firstBuffer, secondBuffer])
       const message = messages[0] as any
       assert.equal(message.fields.length, 5)
       assert.equal(message.fields[0], null)
@@ -486,28 +495,30 @@
     }
 
     it('parses when split in the middle', function () {
-      testMessageRecievedAfterSpiltAt(6)
+      return testMessageReceivedAfterSplitAt(6)
     })
 
     it('parses when split at end', function () {
-      testMessageRecievedAfterSpiltAt(2)
+      return testMessageReceivedAfterSplitAt(2)
     })
 
     it('parses when split at beginning', function () {
-      testMessageRecievedAfterSpiltAt(fullBuffer.length - 2)
-      testMessageRecievedAfterSpiltAt(fullBuffer.length - 1)
-      testMessageRecievedAfterSpiltAt(fullBuffer.length - 5)
+      return Promise.all([
+        testMessageReceivedAfterSplitAt(fullBuffer.length - 2),
+        testMessageReceivedAfterSplitAt(fullBuffer.length - 1),
+        testMessageReceivedAfterSplitAt(fullBuffer.length - 5),
+      ])
     })
   })
 
   describe('split buffer, multiple message parsing', function () {
-    var dataRowBuffer = buffers.dataRow(['!'])
-    var readyForQueryBuffer = buffers.readyForQuery()
-    var fullBuffer = Buffer.alloc(dataRowBuffer.length + readyForQueryBuffer.length)
+    const dataRowBuffer = buffers.dataRow(['!'])
+    const readyForQueryBuffer = buffers.readyForQuery()
+    const fullBuffer = Buffer.alloc(dataRowBuffer.length + readyForQueryBuffer.length)
     dataRowBuffer.copy(fullBuffer, 0, 0)
     readyForQueryBuffer.copy(fullBuffer, dataRowBuffer.length, 0)
 
-    var verifyMessages = function (messages: any[]) {
+    const verifyMessages = function (messages: any[]) {
       assert.strictEqual(messages.length, 2)
       assert.deepEqual(messages[0], {
         name: 'dataRow',
@@ -523,21 +534,21 @@
       })
     }
     // sanity check
-    it('recieves both messages when packet is not split', async function () {
+    it('receives both messages when packet is not split', async function () {
       const messages = await parseBuffers([fullBuffer])
       verifyMessages(messages)
     })
 
-    var splitAndVerifyTwoMessages = async function (split: number) {
-      var firstBuffer = Buffer.alloc(fullBuffer.length - split)
-      var secondBuffer = Buffer.alloc(fullBuffer.length - firstBuffer.length)
+    const splitAndVerifyTwoMessages = async function (split: number) {
+      const firstBuffer = Buffer.alloc(fullBuffer.length - split)
+      const secondBuffer = Buffer.alloc(fullBuffer.length - firstBuffer.length)
       fullBuffer.copy(firstBuffer, 0, 0)
       fullBuffer.copy(secondBuffer, 0, firstBuffer.length)
       const messages = await parseBuffers([firstBuffer, secondBuffer])
       verifyMessages(messages)
     }
 
-    describe('recieves both messages when packet is split', function () {
+    describe('receives both messages when packet is split', function () {
       it('in the middle', function () {
         return splitAndVerifyTwoMessages(11)
       })
Index: node_modules/pg-protocol/src/testing/buffer-list.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export default class BufferList {\r\n  constructor(public buffers: Buffer[] = []) {}\r\n\r\n  public add(buffer: Buffer, front?: boolean) {\r\n    this.buffers[front ? 'unshift' : 'push'](buffer)\r\n    return this\r\n  }\r\n\r\n  public addInt16(val: number, front?: boolean) {\r\n    return this.add(Buffer.from([val >>> 8, val >>> 0]), front)\r\n  }\r\n\r\n  public getByteLength(initial?: number) {\r\n    return this.buffers.reduce(function (previous, current) {\r\n      return previous + current.length\r\n    }, initial || 0)\r\n  }\r\n\r\n  public addInt32(val: number, first?: boolean) {\r\n    return this.add(\r\n      Buffer.from([(val >>> 24) & 0xff, (val >>> 16) & 0xff, (val >>> 8) & 0xff, (val >>> 0) & 0xff]),\r\n      first\r\n    )\r\n  }\r\n\r\n  public addCString(val: string, front?: boolean) {\r\n    var len = Buffer.byteLength(val)\r\n    var buffer = Buffer.alloc(len + 1)\r\n    buffer.write(val)\r\n    buffer[len] = 0\r\n    return this.add(buffer, front)\r\n  }\r\n\r\n  public addString(val: string, front?: boolean) {\r\n    var len = Buffer.byteLength(val)\r\n    var buffer = Buffer.alloc(len)\r\n    buffer.write(val)\r\n    return this.add(buffer, front)\r\n  }\r\n\r\n  public addChar(char: string, first?: boolean) {\r\n    return this.add(Buffer.from(char, 'utf8'), first)\r\n  }\r\n\r\n  public addByte(byte: number) {\r\n    return this.add(Buffer.from([byte]))\r\n  }\r\n\r\n  public join(appendLength?: boolean, char?: string): Buffer {\r\n    var length = this.getByteLength()\r\n    if (appendLength) {\r\n      this.addInt32(length + 4, true)\r\n      return this.join(false, char)\r\n    }\r\n    if (char) {\r\n      this.addChar(char, true)\r\n      length++\r\n    }\r\n    var result = Buffer.alloc(length)\r\n    var index = 0\r\n    this.buffers.forEach(function (buffer) {\r\n      buffer.copy(result, index, 0)\r\n      index += buffer.length\r\n    })\r\n    return result\r\n  }\r\n\r\n  public static concat(): Buffer {\r\n    var total = new BufferList()\r\n    for (var i = 0; i < arguments.length; i++) {\r\n      total.add(arguments[i])\r\n    }\r\n    return total.join()\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/src/testing/buffer-list.ts b/node_modules/pg-protocol/src/testing/buffer-list.ts
--- a/node_modules/pg-protocol/src/testing/buffer-list.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/src/testing/buffer-list.ts	(date 1753913035322)
@@ -10,10 +10,10 @@
     return this.add(Buffer.from([val >>> 8, val >>> 0]), front)
   }
 
-  public getByteLength(initial?: number) {
+  public getByteLength() {
     return this.buffers.reduce(function (previous, current) {
       return previous + current.length
-    }, initial || 0)
+    }, 0)
   }
 
   public addInt32(val: number, first?: boolean) {
@@ -24,16 +24,16 @@
   }
 
   public addCString(val: string, front?: boolean) {
-    var len = Buffer.byteLength(val)
-    var buffer = Buffer.alloc(len + 1)
+    const len = Buffer.byteLength(val)
+    const buffer = Buffer.alloc(len + 1)
     buffer.write(val)
     buffer[len] = 0
     return this.add(buffer, front)
   }
 
   public addString(val: string, front?: boolean) {
-    var len = Buffer.byteLength(val)
-    var buffer = Buffer.alloc(len)
+    const len = Buffer.byteLength(val)
+    const buffer = Buffer.alloc(len)
     buffer.write(val)
     return this.add(buffer, front)
   }
@@ -47,7 +47,7 @@
   }
 
   public join(appendLength?: boolean, char?: string): Buffer {
-    var length = this.getByteLength()
+    let length = this.getByteLength()
     if (appendLength) {
       this.addInt32(length + 4, true)
       return this.join(false, char)
@@ -56,20 +56,12 @@
       this.addChar(char, true)
       length++
     }
-    var result = Buffer.alloc(length)
-    var index = 0
+    const result = Buffer.alloc(length)
+    let index = 0
     this.buffers.forEach(function (buffer) {
       buffer.copy(result, index, 0)
       index += buffer.length
     })
     return result
   }
-
-  public static concat(): Buffer {
-    var total = new BufferList()
-    for (var i = 0; i < arguments.length; i++) {
-      total.add(arguments[i])
-    }
-    return total.join()
-  }
 }
Index: node_modules/pg-protocol/src/testing/test-buffers.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// https://www.postgresql.org/docs/current/protocol-message-formats.html\r\nimport BufferList from './buffer-list'\r\n\r\nconst buffers = {\r\n  readyForQuery: function () {\r\n    return new BufferList().add(Buffer.from('I')).join(true, 'Z')\r\n  },\r\n\r\n  authenticationOk: function () {\r\n    return new BufferList().addInt32(0).join(true, 'R')\r\n  },\r\n\r\n  authenticationCleartextPassword: function () {\r\n    return new BufferList().addInt32(3).join(true, 'R')\r\n  },\r\n\r\n  authenticationMD5Password: function () {\r\n    return new BufferList()\r\n      .addInt32(5)\r\n      .add(Buffer.from([1, 2, 3, 4]))\r\n      .join(true, 'R')\r\n  },\r\n\r\n  authenticationSASL: function () {\r\n    return new BufferList().addInt32(10).addCString('SCRAM-SHA-256').addCString('').join(true, 'R')\r\n  },\r\n\r\n  authenticationSASLContinue: function () {\r\n    return new BufferList().addInt32(11).addString('data').join(true, 'R')\r\n  },\r\n\r\n  authenticationSASLFinal: function () {\r\n    return new BufferList().addInt32(12).addString('data').join(true, 'R')\r\n  },\r\n\r\n  parameterStatus: function (name: string, value: string) {\r\n    return new BufferList().addCString(name).addCString(value).join(true, 'S')\r\n  },\r\n\r\n  backendKeyData: function (processID: number, secretKey: number) {\r\n    return new BufferList().addInt32(processID).addInt32(secretKey).join(true, 'K')\r\n  },\r\n\r\n  commandComplete: function (string: string) {\r\n    return new BufferList().addCString(string).join(true, 'C')\r\n  },\r\n\r\n  rowDescription: function (fields: any[]) {\r\n    fields = fields || []\r\n    var buf = new BufferList()\r\n    buf.addInt16(fields.length)\r\n    fields.forEach(function (field) {\r\n      buf\r\n        .addCString(field.name)\r\n        .addInt32(field.tableID || 0)\r\n        .addInt16(field.attributeNumber || 0)\r\n        .addInt32(field.dataTypeID || 0)\r\n        .addInt16(field.dataTypeSize || 0)\r\n        .addInt32(field.typeModifier || 0)\r\n        .addInt16(field.formatCode || 0)\r\n    })\r\n    return buf.join(true, 'T')\r\n  },\r\n\r\n  parameterDescription: function (dataTypeIDs: number[]) {\r\n    dataTypeIDs = dataTypeIDs || []\r\n    var buf = new BufferList()\r\n    buf.addInt16(dataTypeIDs.length)\r\n    dataTypeIDs.forEach(function (dataTypeID) {\r\n      buf.addInt32(dataTypeID)\r\n    })\r\n    return buf.join(true, 't')\r\n  },\r\n\r\n  dataRow: function (columns: any[]) {\r\n    columns = columns || []\r\n    var buf = new BufferList()\r\n    buf.addInt16(columns.length)\r\n    columns.forEach(function (col) {\r\n      if (col == null) {\r\n        buf.addInt32(-1)\r\n      } else {\r\n        var strBuf = Buffer.from(col, 'utf8')\r\n        buf.addInt32(strBuf.length)\r\n        buf.add(strBuf)\r\n      }\r\n    })\r\n    return buf.join(true, 'D')\r\n  },\r\n\r\n  error: function (fields: any) {\r\n    return buffers.errorOrNotice(fields).join(true, 'E')\r\n  },\r\n\r\n  notice: function (fields: any) {\r\n    return buffers.errorOrNotice(fields).join(true, 'N')\r\n  },\r\n\r\n  errorOrNotice: function (fields: any) {\r\n    fields = fields || []\r\n    var buf = new BufferList()\r\n    fields.forEach(function (field: any) {\r\n      buf.addChar(field.type)\r\n      buf.addCString(field.value)\r\n    })\r\n    return buf.add(Buffer.from([0])) // terminator\r\n  },\r\n\r\n  parseComplete: function () {\r\n    return new BufferList().join(true, '1')\r\n  },\r\n\r\n  bindComplete: function () {\r\n    return new BufferList().join(true, '2')\r\n  },\r\n\r\n  notification: function (id: number, channel: string, payload: string) {\r\n    return new BufferList().addInt32(id).addCString(channel).addCString(payload).join(true, 'A')\r\n  },\r\n\r\n  emptyQuery: function () {\r\n    return new BufferList().join(true, 'I')\r\n  },\r\n\r\n  portalSuspended: function () {\r\n    return new BufferList().join(true, 's')\r\n  },\r\n\r\n  closeComplete: function () {\r\n    return new BufferList().join(true, '3')\r\n  },\r\n\r\n  copyIn: function (cols: number) {\r\n    const list = new BufferList()\r\n      // text mode\r\n      .addByte(0)\r\n      // column count\r\n      .addInt16(cols)\r\n    for (let i = 0; i < cols; i++) {\r\n      list.addInt16(i)\r\n    }\r\n    return list.join(true, 'G')\r\n  },\r\n\r\n  copyOut: function (cols: number) {\r\n    const list = new BufferList()\r\n      // text mode\r\n      .addByte(0)\r\n      // column count\r\n      .addInt16(cols)\r\n    for (let i = 0; i < cols; i++) {\r\n      list.addInt16(i)\r\n    }\r\n    return list.join(true, 'H')\r\n  },\r\n\r\n  copyData: function (bytes: Buffer) {\r\n    return new BufferList().add(bytes).join(true, 'd')\r\n  },\r\n\r\n  copyDone: function () {\r\n    return new BufferList().join(true, 'c')\r\n  },\r\n}\r\n\r\nexport default buffers\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/src/testing/test-buffers.ts b/node_modules/pg-protocol/src/testing/test-buffers.ts
--- a/node_modules/pg-protocol/src/testing/test-buffers.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/src/testing/test-buffers.ts	(date 1753913035341)
@@ -47,7 +47,7 @@
 
   rowDescription: function (fields: any[]) {
     fields = fields || []
-    var buf = new BufferList()
+    const buf = new BufferList()
     buf.addInt16(fields.length)
     fields.forEach(function (field) {
       buf
@@ -64,7 +64,7 @@
 
   parameterDescription: function (dataTypeIDs: number[]) {
     dataTypeIDs = dataTypeIDs || []
-    var buf = new BufferList()
+    const buf = new BufferList()
     buf.addInt16(dataTypeIDs.length)
     dataTypeIDs.forEach(function (dataTypeID) {
       buf.addInt32(dataTypeID)
@@ -74,13 +74,13 @@
 
   dataRow: function (columns: any[]) {
     columns = columns || []
-    var buf = new BufferList()
+    const buf = new BufferList()
     buf.addInt16(columns.length)
     columns.forEach(function (col) {
       if (col == null) {
         buf.addInt32(-1)
       } else {
-        var strBuf = Buffer.from(col, 'utf8')
+        const strBuf = Buffer.from(col, 'utf8')
         buf.addInt32(strBuf.length)
         buf.add(strBuf)
       }
@@ -98,7 +98,7 @@
 
   errorOrNotice: function (fields: any) {
     fields = fields || []
-    var buf = new BufferList()
+    const buf = new BufferList()
     fields.forEach(function (field: any) {
       buf.addChar(field.type)
       buf.addCString(field.value)
Index: node_modules/pg-protocol/dist/serializer.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"version\":3,\"file\":\"serializer.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/serializer.ts\"],\"names\":[],\"mappings\":\";;;AAAA,mDAAwC;AAkBxC,MAAM,MAAM,GAAG,IAAI,sBAAM,EAAE,CAAA;AAE3B,MAAM,OAAO,GAAG,CAAC,IAA4B,EAAU,EAAE;IACvD,mBAAmB;IACnB,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;IAC9B,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;QACnC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;KAC7C;IAED,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;IAEvD,IAAI,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAA;IAC9C,sCAAsC;IAEtC,IAAI,MAAM,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAA;IAElC,OAAO,IAAI,sBAAM,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAA;AAC9D,CAAC,CAAA;AAED,MAAM,UAAU,GAAG,GAAW,EAAE;IAC9B,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;IACtC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IAC3B,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;IAClC,OAAO,QAAQ,CAAA;AACjB,CAAC,CAAA;AAED,MAAM,QAAQ,GAAG,CAAC,QAAgB,EAAU,EAAE;IAC5C,OAAO,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,KAAK,wBAAc,CAAA;AACxD,CAAC,CAAA;AAED,MAAM,8BAA8B,GAAG,UAAU,SAAiB,EAAE,eAAuB;IACzF,aAAa;IACb,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,eAAe,CAAC,CAAA;IAEpG,OAAO,MAAM,CAAC,KAAK,wBAAc,CAAA;AACnC,CAAC,CAAA;AAED,MAAM,2BAA2B,GAAG,UAAU,cAAsB;IAClE,OAAO,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,KAAK,wBAAc,CAAA;AAC7D,CAAC,CAAA;AAED,MAAM,KAAK,GAAG,CAAC,IAAY,EAAU,EAAE;IACrC,OAAO,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,KAAK,qBAAY,CAAA;AAClD,CAAC,CAAA;AAQD,MAAM,UAAU,GAAU,EAAE,CAAA;AAE5B,MAAM,KAAK,GAAG,CAAC,KAAgB,EAAU,EAAE;IACzC,8BAA8B;IAC9B,uBAAuB;IACvB,gCAAgC;IAChC,8BAA8B;IAE9B,kDAAkD;IAClD,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,CAAA;IAC7B,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE;QACpB,+BAA+B;QAC/B,OAAO,CAAC,KAAK,CAAC,gEAAgE,CAAC,CAAA;QAC/E,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QACxD,OAAO,CAAC,KAAK,CAAC,8DAA8D,CAAC,CAAA;QAC7E,8BAA8B;KAC/B;IAED,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,UAAU,CAAA;IAEvC,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAA;IAEtB,IAAI,MAAM,GAAG,MAAM;SAChB,UAAU,CAAC,IAAI,CAAC,CAAC,gBAAgB;SACjC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,oBAAoB;SAC3C,QAAQ,CAAC,GAAG,CAAC,CAAA;IAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC5B,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;KAC1B;IAED,OAAO,MAAM,CAAC,KAAK,qBAAY,CAAA;AACjC,CAAC,CAAA;AAaD,MAAM,WAAW,GAAG,IAAI,sBAAM,EAAE,CAAA;AAQhC,MAAM,WAAW,GAAG,UAAU,MAAa,EAAE,WAAyB;IACpE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,MAAM,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACrE,IAAI,SAAS,IAAI,IAAI,EAAE;YACrB,4CAA4C;YAC5C,MAAM,CAAC,QAAQ,0BAAkB,CAAA;YACjC,gDAAgD;YAChD,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;SACzB;aAAM,IAAI,SAAS,YAAY,MAAM,EAAE;YACtC,4CAA4C;YAC5C,MAAM,CAAC,QAAQ,0BAAkB,CAAA;YACjC,qCAAqC;YACrC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;YACtC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;SAC3B;aAAM;YACL,4CAA4C;YAC5C,MAAM,CAAC,QAAQ,0BAAkB,CAAA;YACjC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAA;YAClD,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;SACjC;KACF;AACH,CAAC,CAAA;AAED,MAAM,IAAI,GAAG,CAAC,SAAmB,EAAE,EAAU,EAAE;IAC7C,mBAAmB;IACnB,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,EAAE,CAAA;IAClC,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,EAAE,CAAA;IACxC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,KAAK,CAAA;IACrC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,UAAU,CAAA;IAC1C,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAA;IAEzB,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAA;IAC/C,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;IAEpB,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,WAAW,CAAC,CAAA;IAEvC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;IACpB,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAA;IAE/B,cAAc;IACd,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,0BAAkB,CAAC,yBAAiB,CAAC,CAAA;IAC7D,OAAO,MAAM,CAAC,KAAK,oBAAW,CAAA;AAChC,CAAC,CAAA;AAOD,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,wBAAe,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA;AAEtG,MAAM,OAAO,GAAG,CAAC,MAAiB,EAAU,EAAE;IAC5C,0CAA0C;IAC1C,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;QAC/C,OAAO,YAAY,CAAA;KACpB;IAED,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,EAAE,CAAA;IAClC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,CAAC,CAAA;IAE7B,MAAM,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;IAC9C,MAAM,GAAG,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC,GAAG,CAAC,CAAA;IACpC,yBAAyB;IACzB,MAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,GAAG,CAAC,CAAA;IACxC,IAAI,CAAC,CAAC,CAAC,wBAAe,CAAA;IACtB,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;IACzB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC,CAAA;IAC9B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA,CAAC,gCAAgC;IAC3D,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACzC,OAAO,IAAI,CAAA;AACb,CAAC,CAAA;AAED,MAAM,MAAM,GAAG,CAAC,SAAiB,EAAE,SAAiB,EAAU,EAAE;IAC9D,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAA;IACrC,MAAM,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;IAC1B,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;IAC5B,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;IAC5B,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,CAAC,CAAA;IACjC,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC,CAAA;IAClC,OAAO,MAAM,CAAA;AACf,CAAC,CAAA;AAOD,MAAM,cAAc,GAAG,CAAC,IAAU,EAAE,MAAc,EAAU,EAAE;IAC5D,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;IAC3C,MAAM,GAAG,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,CAAA;IAC7B,yBAAyB;IACzB,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,GAAG,CAAC,CAAA;IAC1C,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA;IAChB,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;IAC3B,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC,CAAA;IAChC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA,CAAC,yBAAyB;IACzC,OAAO,MAAM,CAAA;AACf,CAAC,CAAA;AAED,MAAM,mBAAmB,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,wBAAe,CAAA;AACvE,MAAM,sBAAsB,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,wBAAe,CAAA;AAE1E,MAAM,QAAQ,GAAG,CAAC,GAAe,EAAU,EAAE;IAC3C,OAAO,GAAG,CAAC,IAAI;QACb,CAAC,CAAC,cAAc,yBAAgB,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC;QAC/D,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG;YAClB,CAAC,CAAC,mBAAmB;YACrB,CAAC,CAAC,sBAAsB,CAAA;AAC5B,CAAC,CAAA;AAED,MAAM,KAAK,GAAG,CAAC,GAAe,EAAU,EAAE;IACxC,MAAM,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,EAAE,CAAA;IAC3C,OAAO,cAAc,sBAAa,IAAI,CAAC,CAAA;AACzC,CAAC,CAAA;AAED,MAAM,QAAQ,GAAG,CAAC,KAAa,EAAU,EAAE;IACzC,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,8BAAoB,CAAA;AACpD,CAAC,CAAA;AAED,MAAM,QAAQ,GAAG,CAAC,OAAe,EAAU,EAAE;IAC3C,OAAO,cAAc,0BAAgB,OAAO,CAAC,CAAA;AAC/C,CAAC,CAAA;AAED,MAAM,cAAc,GAAG,CAAC,IAAU,EAAU,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA;AAE1F,MAAM,WAAW,GAAG,cAAc,qBAAY,CAAA;AAC9C,MAAM,UAAU,GAAG,cAAc,oBAAW,CAAA;AAC5C,MAAM,SAAS,GAAG,cAAc,mBAAU,CAAA;AAC1C,MAAM,cAAc,GAAG,cAAc,wBAAe,CAAA;AAEpD,MAAM,SAAS,GAAG;IAChB,OAAO;IACP,QAAQ;IACR,UAAU;IACV,8BAA8B;IAC9B,2BAA2B;IAC3B,KAAK;IACL,KAAK;IACL,IAAI;IACJ,OAAO;IACP,QAAQ;IACR,KAAK;IACL,KAAK,EAAE,GAAG,EAAE,CAAC,WAAW;IACxB,IAAI,EAAE,GAAG,EAAE,CAAC,UAAU;IACtB,GAAG,EAAE,GAAG,EAAE,CAAC,SAAS;IACpB,QAAQ;IACR,QAAQ,EAAE,GAAG,EAAE,CAAC,cAAc;IAC9B,QAAQ;IACR,MAAM;CACP,CAAA;AAEQ,8BAAS\"}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/dist/serializer.js.map b/node_modules/pg-protocol/dist/serializer.js.map
--- a/node_modules/pg-protocol/dist/serializer.js.map	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/dist/serializer.js.map	(date 1753913035318)
@@ -1,1 +1,1 @@
-{"version":3,"file":"serializer.js","sourceRoot":"","sources":["../src/serializer.ts"],"names":[],"mappings":";;;AAAA,mDAAwC;AAkBxC,MAAM,MAAM,GAAG,IAAI,sBAAM,EAAE,CAAA;AAE3B,MAAM,OAAO,GAAG,CAAC,IAA4B,EAAU,EAAE;IACvD,mBAAmB;IACnB,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;IAC9B,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;QACnC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;KAC7C;IAED,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;IAEvD,IAAI,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAA;IAC9C,sCAAsC;IAEtC,IAAI,MAAM,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAA;IAElC,OAAO,IAAI,sBAAM,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAA;AAC9D,CAAC,CAAA;AAED,MAAM,UAAU,GAAG,GAAW,EAAE;IAC9B,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;IACtC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IAC3B,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;IAClC,OAAO,QAAQ,CAAA;AACjB,CAAC,CAAA;AAED,MAAM,QAAQ,GAAG,CAAC,QAAgB,EAAU,EAAE;IAC5C,OAAO,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,KAAK,wBAAc,CAAA;AACxD,CAAC,CAAA;AAED,MAAM,8BAA8B,GAAG,UAAU,SAAiB,EAAE,eAAuB;IACzF,aAAa;IACb,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,eAAe,CAAC,CAAA;IAEpG,OAAO,MAAM,CAAC,KAAK,wBAAc,CAAA;AACnC,CAAC,CAAA;AAED,MAAM,2BAA2B,GAAG,UAAU,cAAsB;IAClE,OAAO,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,KAAK,wBAAc,CAAA;AAC7D,CAAC,CAAA;AAED,MAAM,KAAK,GAAG,CAAC,IAAY,EAAU,EAAE;IACrC,OAAO,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,KAAK,qBAAY,CAAA;AAClD,CAAC,CAAA;AAQD,MAAM,UAAU,GAAU,EAAE,CAAA;AAE5B,MAAM,KAAK,GAAG,CAAC,KAAgB,EAAU,EAAE;IACzC,8BAA8B;IAC9B,uBAAuB;IACvB,gCAAgC;IAChC,8BAA8B;IAE9B,kDAAkD;IAClD,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,CAAA;IAC7B,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE;QACpB,+BAA+B;QAC/B,OAAO,CAAC,KAAK,CAAC,gEAAgE,CAAC,CAAA;QAC/E,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QACxD,OAAO,CAAC,KAAK,CAAC,8DAA8D,CAAC,CAAA;QAC7E,8BAA8B;KAC/B;IAED,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,UAAU,CAAA;IAEvC,IAAI,GAAG,GAAG,KAAK,CAAC,MAAM,CAAA;IAEtB,IAAI,MAAM,GAAG,MAAM;SAChB,UAAU,CAAC,IAAI,CAAC,CAAC,gBAAgB;SACjC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,oBAAoB;SAC3C,QAAQ,CAAC,GAAG,CAAC,CAAA;IAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC5B,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;KAC1B;IAED,OAAO,MAAM,CAAC,KAAK,qBAAY,CAAA;AACjC,CAAC,CAAA;AAaD,MAAM,WAAW,GAAG,IAAI,sBAAM,EAAE,CAAA;AAQhC,MAAM,WAAW,GAAG,UAAU,MAAa,EAAE,WAAyB;IACpE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,MAAM,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACrE,IAAI,SAAS,IAAI,IAAI,EAAE;YACrB,4CAA4C;YAC5C,MAAM,CAAC,QAAQ,0BAAkB,CAAA;YACjC,gDAAgD;YAChD,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;SACzB;aAAM,IAAI,SAAS,YAAY,MAAM,EAAE;YACtC,4CAA4C;YAC5C,MAAM,CAAC,QAAQ,0BAAkB,CAAA;YACjC,qCAAqC;YACrC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;YACtC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;SAC3B;aAAM;YACL,4CAA4C;YAC5C,MAAM,CAAC,QAAQ,0BAAkB,CAAA;YACjC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAA;YAClD,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;SACjC;KACF;AACH,CAAC,CAAA;AAED,MAAM,IAAI,GAAG,CAAC,SAAmB,EAAE,EAAU,EAAE;IAC7C,mBAAmB;IACnB,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,EAAE,CAAA;IAClC,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,EAAE,CAAA;IACxC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,KAAK,CAAA;IACrC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,UAAU,CAAA;IAC1C,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAA;IAEzB,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAA;IAC/C,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;IAEpB,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,WAAW,CAAC,CAAA;IAEvC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;IACpB,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAA;IAE/B,cAAc;IACd,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,0BAAkB,CAAC,yBAAiB,CAAC,CAAA;IAC7D,OAAO,MAAM,CAAC,KAAK,oBAAW,CAAA;AAChC,CAAC,CAAA;AAOD,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,wBAAe,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA;AAEtG,MAAM,OAAO,GAAG,CAAC,MAAiB,EAAU,EAAE;IAC5C,0CAA0C;IAC1C,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;QAC/C,OAAO,YAAY,CAAA;KACpB;IAED,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,EAAE,CAAA;IAClC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,CAAC,CAAA;IAE7B,MAAM,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;IAC9C,MAAM,GAAG,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC,GAAG,CAAC,CAAA;IACpC,yBAAyB;IACzB,MAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,GAAG,CAAC,CAAA;IACxC,IAAI,CAAC,CAAC,CAAC,wBAAe,CAAA;IACtB,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;IACzB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC,CAAA;IAC9B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA,CAAC,gCAAgC;IAC3D,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACzC,OAAO,IAAI,CAAA;AACb,CAAC,CAAA;AAED,MAAM,MAAM,GAAG,CAAC,SAAiB,EAAE,SAAiB,EAAU,EAAE;IAC9D,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAA;IACrC,MAAM,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;IAC1B,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;IAC5B,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;IAC5B,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,CAAC,CAAA;IACjC,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC,CAAA;IAClC,OAAO,MAAM,CAAA;AACf,CAAC,CAAA;AAOD,MAAM,cAAc,GAAG,CAAC,IAAU,EAAE,MAAc,EAAU,EAAE;IAC5D,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;IAC3C,MAAM,GAAG,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,CAAA;IAC7B,yBAAyB;IACzB,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,GAAG,CAAC,CAAA;IAC1C,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA;IAChB,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;IAC3B,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC,CAAA;IAChC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA,CAAC,yBAAyB;IACzC,OAAO,MAAM,CAAA;AACf,CAAC,CAAA;AAED,MAAM,mBAAmB,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,wBAAe,CAAA;AACvE,MAAM,sBAAsB,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,wBAAe,CAAA;AAE1E,MAAM,QAAQ,GAAG,CAAC,GAAe,EAAU,EAAE;IAC3C,OAAO,GAAG,CAAC,IAAI;QACb,CAAC,CAAC,cAAc,yBAAgB,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC;QAC/D,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG;YAClB,CAAC,CAAC,mBAAmB;YACrB,CAAC,CAAC,sBAAsB,CAAA;AAC5B,CAAC,CAAA;AAED,MAAM,KAAK,GAAG,CAAC,GAAe,EAAU,EAAE;IACxC,MAAM,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,EAAE,CAAA;IAC3C,OAAO,cAAc,sBAAa,IAAI,CAAC,CAAA;AACzC,CAAC,CAAA;AAED,MAAM,QAAQ,GAAG,CAAC,KAAa,EAAU,EAAE;IACzC,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,8BAAoB,CAAA;AACpD,CAAC,CAAA;AAED,MAAM,QAAQ,GAAG,CAAC,OAAe,EAAU,EAAE;IAC3C,OAAO,cAAc,0BAAgB,OAAO,CAAC,CAAA;AAC/C,CAAC,CAAA;AAED,MAAM,cAAc,GAAG,CAAC,IAAU,EAAU,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA;AAE1F,MAAM,WAAW,GAAG,cAAc,qBAAY,CAAA;AAC9C,MAAM,UAAU,GAAG,cAAc,oBAAW,CAAA;AAC5C,MAAM,SAAS,GAAG,cAAc,mBAAU,CAAA;AAC1C,MAAM,cAAc,GAAG,cAAc,wBAAe,CAAA;AAEpD,MAAM,SAAS,GAAG;IAChB,OAAO;IACP,QAAQ;IACR,UAAU;IACV,8BAA8B;IAC9B,2BAA2B;IAC3B,KAAK;IACL,KAAK;IACL,IAAI;IACJ,OAAO;IACP,QAAQ;IACR,KAAK;IACL,KAAK,EAAE,GAAG,EAAE,CAAC,WAAW;IACxB,IAAI,EAAE,GAAG,EAAE,CAAC,UAAU;IACtB,GAAG,EAAE,GAAG,EAAE,CAAC,SAAS;IACpB,QAAQ;IACR,QAAQ,EAAE,GAAG,EAAE,CAAC,cAAc;IAC9B,QAAQ;IACR,MAAM;CACP,CAAA;AAEQ,8BAAS"}
\ No newline at end of file
+{"version":3,"file":"serializer.js","sourceRoot":"","sources":["../src/serializer.ts"],"names":[],"mappings":";;;AAAA,mDAAwC;AAkBxC,MAAM,MAAM,GAAG,IAAI,sBAAM,EAAE,CAAA;AAE3B,MAAM,OAAO,GAAG,CAAC,IAA4B,EAAU,EAAE;IACvD,mBAAmB;IACnB,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;IAC9B,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;QACnC,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;KAC7C;IAED,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;IAEvD,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,KAAK,EAAE,CAAA;IAChD,sCAAsC;IAEtC,MAAM,MAAM,GAAG,UAAU,CAAC,MAAM,GAAG,CAAC,CAAA;IAEpC,OAAO,IAAI,sBAAM,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAA;AAC9D,CAAC,CAAA;AAED,MAAM,UAAU,GAAG,GAAW,EAAE;IAC9B,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;IACtC,QAAQ,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;IAC3B,QAAQ,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAA;IAClC,OAAO,QAAQ,CAAA;AACjB,CAAC,CAAA;AAED,MAAM,QAAQ,GAAG,CAAC,QAAgB,EAAU,EAAE;IAC5C,OAAO,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,KAAK,wBAAc,CAAA;AACxD,CAAC,CAAA;AAED,MAAM,8BAA8B,GAAG,UAAU,SAAiB,EAAE,eAAuB;IACzF,aAAa;IACb,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,eAAe,CAAC,CAAA;IAEpG,OAAO,MAAM,CAAC,KAAK,wBAAc,CAAA;AACnC,CAAC,CAAA;AAED,MAAM,2BAA2B,GAAG,UAAU,cAAsB;IAClE,OAAO,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,KAAK,wBAAc,CAAA;AAC7D,CAAC,CAAA;AAED,MAAM,KAAK,GAAG,CAAC,IAAY,EAAU,EAAE;IACrC,OAAO,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,KAAK,qBAAY,CAAA;AAClD,CAAC,CAAA;AAQD,MAAM,UAAU,GAAU,EAAE,CAAA;AAE5B,MAAM,KAAK,GAAG,CAAC,KAAgB,EAAU,EAAE;IACzC,8BAA8B;IAC9B,uBAAuB;IACvB,gCAAgC;IAChC,8BAA8B;IAE9B,kDAAkD;IAClD,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,EAAE,CAAA;IAC7B,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,EAAE;QACpB,OAAO,CAAC,KAAK,CAAC,gEAAgE,CAAC,CAAA;QAC/E,OAAO,CAAC,KAAK,CAAC,sBAAsB,EAAE,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QACxD,OAAO,CAAC,KAAK,CAAC,8DAA8D,CAAC,CAAA;KAC9E;IAED,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,UAAU,CAAA;IAEvC,MAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAA;IAExB,MAAM,MAAM,GAAG,MAAM;SAClB,UAAU,CAAC,IAAI,CAAC,CAAC,gBAAgB;SACjC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,oBAAoB;SAC3C,QAAQ,CAAC,GAAG,CAAC,CAAA;IAEhB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;QAC5B,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAA;KAC1B;IAED,OAAO,MAAM,CAAC,KAAK,qBAAY,CAAA;AACjC,CAAC,CAAA;AAaD,MAAM,WAAW,GAAG,IAAI,sBAAM,EAAE,CAAA;AAQhC,MAAM,WAAW,GAAG,UAAU,MAAa,EAAE,WAAyB;IACpE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QACtC,MAAM,SAAS,GAAG,WAAW,CAAC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACrE,IAAI,SAAS,IAAI,IAAI,EAAE;YACrB,4CAA4C;YAC5C,MAAM,CAAC,QAAQ,0BAAkB,CAAA;YACjC,gDAAgD;YAChD,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;SACzB;aAAM,IAAI,SAAS,YAAY,MAAM,EAAE;YACtC,4CAA4C;YAC5C,MAAM,CAAC,QAAQ,0BAAkB,CAAA;YACjC,qCAAqC;YACrC,WAAW,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAA;YACtC,WAAW,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;SAC3B;aAAM;YACL,4CAA4C;YAC5C,MAAM,CAAC,QAAQ,0BAAkB,CAAA;YACjC,WAAW,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAA;YAClD,WAAW,CAAC,SAAS,CAAC,SAAS,CAAC,CAAA;SACjC;KACF;AACH,CAAC,CAAA;AAED,MAAM,IAAI,GAAG,CAAC,SAAmB,EAAE,EAAU,EAAE;IAC7C,mBAAmB;IACnB,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,EAAE,CAAA;IAClC,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,IAAI,EAAE,CAAA;IACxC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,KAAK,CAAA;IACrC,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,UAAU,CAAA;IAC1C,MAAM,GAAG,GAAG,MAAM,CAAC,MAAM,CAAA;IAEzB,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAA;IAC/C,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;IAEpB,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,WAAW,CAAC,CAAA;IAEvC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;IACpB,MAAM,CAAC,GAAG,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC,CAAA;IAE/B,uCAAuC;IACvC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;IAClB,cAAc;IACd,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,0BAAkB,CAAC,yBAAiB,CAAC,CAAA;IAC7D,OAAO,MAAM,CAAC,KAAK,oBAAW,CAAA;AAChC,CAAC,CAAA;AAOD,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,wBAAe,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA;AAEtG,MAAM,OAAO,GAAG,CAAC,MAAiB,EAAU,EAAE;IAC5C,0CAA0C;IAC1C,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;QAC/C,OAAO,YAAY,CAAA;KACpB;IAED,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,IAAI,EAAE,CAAA;IAClC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,IAAI,CAAC,CAAA;IAE7B,MAAM,YAAY,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;IAC9C,MAAM,GAAG,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC,GAAG,CAAC,CAAA;IACpC,yBAAyB;IACzB,MAAM,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,GAAG,CAAC,CAAA;IACxC,IAAI,CAAC,CAAC,CAAC,wBAAe,CAAA;IACtB,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;IACzB,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC,CAAA;IAC9B,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,GAAG,CAAC,CAAA,CAAC,gCAAgC;IAC3D,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;IACzC,OAAO,IAAI,CAAA;AACb,CAAC,CAAA;AAED,MAAM,MAAM,GAAG,CAAC,SAAiB,EAAE,SAAiB,EAAU,EAAE;IAC9D,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAA;IACrC,MAAM,CAAC,YAAY,CAAC,EAAE,EAAE,CAAC,CAAC,CAAA;IAC1B,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;IAC5B,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,CAAC,CAAA;IAC5B,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,CAAC,CAAA;IACjC,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,EAAE,CAAC,CAAA;IAClC,OAAO,MAAM,CAAA;AACf,CAAC,CAAA;AAOD,MAAM,cAAc,GAAG,CAAC,IAAU,EAAE,MAAc,EAAU,EAAE;IAC5D,MAAM,SAAS,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;IAC3C,MAAM,GAAG,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,CAAA;IAC7B,yBAAyB;IACzB,MAAM,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,GAAG,GAAG,CAAC,CAAA;IAC1C,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAA;IAChB,MAAM,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC,CAAA;IAC3B,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,OAAO,CAAC,CAAA;IAChC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAA,CAAC,yBAAyB;IACzC,OAAO,MAAM,CAAA;AACf,CAAC,CAAA;AAED,MAAM,mBAAmB,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,wBAAe,CAAA;AACvE,MAAM,sBAAsB,GAAG,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,KAAK,wBAAe,CAAA;AAE1E,MAAM,QAAQ,GAAG,CAAC,GAAe,EAAU,EAAE;IAC3C,OAAO,GAAG,CAAC,IAAI;QACb,CAAC,CAAC,cAAc,yBAAgB,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,EAAE,CAAC;QAC/D,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG;YAClB,CAAC,CAAC,mBAAmB;YACrB,CAAC,CAAC,sBAAsB,CAAA;AAC5B,CAAC,CAAA;AAED,MAAM,KAAK,GAAG,CAAC,GAAe,EAAU,EAAE;IACxC,MAAM,IAAI,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,IAAI,EAAE,EAAE,CAAA;IAC3C,OAAO,cAAc,sBAAa,IAAI,CAAC,CAAA;AACzC,CAAC,CAAA;AAED,MAAM,QAAQ,GAAG,CAAC,KAAa,EAAU,EAAE;IACzC,OAAO,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,KAAK,8BAAoB,CAAA;AACpD,CAAC,CAAA;AAED,MAAM,QAAQ,GAAG,CAAC,OAAe,EAAU,EAAE;IAC3C,OAAO,cAAc,0BAAgB,OAAO,CAAC,CAAA;AAC/C,CAAC,CAAA;AAED,MAAM,cAAc,GAAG,CAAC,IAAU,EAAU,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA;AAE1F,MAAM,WAAW,GAAG,cAAc,qBAAY,CAAA;AAC9C,MAAM,UAAU,GAAG,cAAc,oBAAW,CAAA;AAC5C,MAAM,SAAS,GAAG,cAAc,mBAAU,CAAA;AAC1C,MAAM,cAAc,GAAG,cAAc,wBAAe,CAAA;AAEpD,MAAM,SAAS,GAAG;IAChB,OAAO;IACP,QAAQ;IACR,UAAU;IACV,8BAA8B;IAC9B,2BAA2B;IAC3B,KAAK;IACL,KAAK;IACL,IAAI;IACJ,OAAO;IACP,QAAQ;IACR,KAAK;IACL,KAAK,EAAE,GAAG,EAAE,CAAC,WAAW;IACxB,IAAI,EAAE,GAAG,EAAE,CAAC,UAAU;IACtB,GAAG,EAAE,GAAG,EAAE,CAAC,SAAS;IACpB,QAAQ;IACR,QAAQ,EAAE,GAAG,EAAE,CAAC,cAAc;IAC9B,QAAQ;IACR,MAAM;CACP,CAAA;AAEQ,8BAAS"}
\ No newline at end of file
Index: node_modules/pg-protocol/dist/outbound-serializer.test.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst assert_1 = __importDefault(require(\"assert\"));\r\nconst serializer_1 = require(\"./serializer\");\r\nconst buffer_list_1 = __importDefault(require(\"./testing/buffer-list\"));\r\ndescribe('serializer', () => {\r\n    it('builds startup message', function () {\r\n        const actual = serializer_1.serialize.startup({\r\n            user: 'brian',\r\n            database: 'bang',\r\n        });\r\n        assert_1.default.deepEqual(actual, new buffer_list_1.default()\r\n            .addInt16(3)\r\n            .addInt16(0)\r\n            .addCString('user')\r\n            .addCString('brian')\r\n            .addCString('database')\r\n            .addCString('bang')\r\n            .addCString('client_encoding')\r\n            .addCString('UTF8')\r\n            .addCString('')\r\n            .join(true));\r\n    });\r\n    it('builds password message', function () {\r\n        const actual = serializer_1.serialize.password('!');\r\n        assert_1.default.deepEqual(actual, new buffer_list_1.default().addCString('!').join(true, 'p'));\r\n    });\r\n    it('builds request ssl message', function () {\r\n        const actual = serializer_1.serialize.requestSsl();\r\n        const expected = new buffer_list_1.default().addInt32(80877103).join(true);\r\n        assert_1.default.deepEqual(actual, expected);\r\n    });\r\n    it('builds SASLInitialResponseMessage message', function () {\r\n        const actual = serializer_1.serialize.sendSASLInitialResponseMessage('mech', 'data');\r\n        assert_1.default.deepEqual(actual, new buffer_list_1.default().addCString('mech').addInt32(4).addString('data').join(true, 'p'));\r\n    });\r\n    it('builds SCRAMClientFinalMessage message', function () {\r\n        const actual = serializer_1.serialize.sendSCRAMClientFinalMessage('data');\r\n        assert_1.default.deepEqual(actual, new buffer_list_1.default().addString('data').join(true, 'p'));\r\n    });\r\n    it('builds query message', function () {\r\n        var txt = 'select * from boom';\r\n        const actual = serializer_1.serialize.query(txt);\r\n        assert_1.default.deepEqual(actual, new buffer_list_1.default().addCString(txt).join(true, 'Q'));\r\n    });\r\n    describe('parse message', () => {\r\n        it('builds parse message', function () {\r\n            const actual = serializer_1.serialize.parse({ text: '!' });\r\n            var expected = new buffer_list_1.default().addCString('').addCString('!').addInt16(0).join(true, 'P');\r\n            assert_1.default.deepEqual(actual, expected);\r\n        });\r\n        it('builds parse message with named query', function () {\r\n            const actual = serializer_1.serialize.parse({\r\n                name: 'boom',\r\n                text: 'select * from boom',\r\n                types: [],\r\n            });\r\n            var expected = new buffer_list_1.default().addCString('boom').addCString('select * from boom').addInt16(0).join(true, 'P');\r\n            assert_1.default.deepEqual(actual, expected);\r\n        });\r\n        it('with multiple parameters', function () {\r\n            const actual = serializer_1.serialize.parse({\r\n                name: 'force',\r\n                text: 'select * from bang where name = $1',\r\n                types: [1, 2, 3, 4],\r\n            });\r\n            var expected = new buffer_list_1.default()\r\n                .addCString('force')\r\n                .addCString('select * from bang where name = $1')\r\n                .addInt16(4)\r\n                .addInt32(1)\r\n                .addInt32(2)\r\n                .addInt32(3)\r\n                .addInt32(4)\r\n                .join(true, 'P');\r\n            assert_1.default.deepEqual(actual, expected);\r\n        });\r\n    });\r\n    describe('bind messages', function () {\r\n        it('with no values', function () {\r\n            const actual = serializer_1.serialize.bind();\r\n            var expectedBuffer = new buffer_list_1.default()\r\n                .addCString('')\r\n                .addCString('')\r\n                .addInt16(0)\r\n                .addInt16(0)\r\n                .addInt16(0)\r\n                .join(true, 'B');\r\n            assert_1.default.deepEqual(actual, expectedBuffer);\r\n        });\r\n        it('with named statement, portal, and values', function () {\r\n            const actual = serializer_1.serialize.bind({\r\n                portal: 'bang',\r\n                statement: 'woo',\r\n                values: ['1', 'hi', null, 'zing'],\r\n            });\r\n            var expectedBuffer = new buffer_list_1.default()\r\n                .addCString('bang') // portal name\r\n                .addCString('woo') // statement name\r\n                .addInt16(4)\r\n                .addInt16(0)\r\n                .addInt16(0)\r\n                .addInt16(0)\r\n                .addInt16(0)\r\n                .addInt16(4)\r\n                .addInt32(1)\r\n                .add(Buffer.from('1'))\r\n                .addInt32(2)\r\n                .add(Buffer.from('hi'))\r\n                .addInt32(-1)\r\n                .addInt32(4)\r\n                .add(Buffer.from('zing'))\r\n                .addInt16(0)\r\n                .join(true, 'B');\r\n            assert_1.default.deepEqual(actual, expectedBuffer);\r\n        });\r\n    });\r\n    it('with custom valueMapper', function () {\r\n        const actual = serializer_1.serialize.bind({\r\n            portal: 'bang',\r\n            statement: 'woo',\r\n            values: ['1', 'hi', null, 'zing'],\r\n            valueMapper: () => null,\r\n        });\r\n        var expectedBuffer = new buffer_list_1.default()\r\n            .addCString('bang') // portal name\r\n            .addCString('woo') // statement name\r\n            .addInt16(4)\r\n            .addInt16(0)\r\n            .addInt16(0)\r\n            .addInt16(0)\r\n            .addInt16(0)\r\n            .addInt16(4)\r\n            .addInt32(-1)\r\n            .addInt32(-1)\r\n            .addInt32(-1)\r\n            .addInt32(-1)\r\n            .addInt16(0)\r\n            .join(true, 'B');\r\n        assert_1.default.deepEqual(actual, expectedBuffer);\r\n    });\r\n    it('with named statement, portal, and buffer value', function () {\r\n        const actual = serializer_1.serialize.bind({\r\n            portal: 'bang',\r\n            statement: 'woo',\r\n            values: ['1', 'hi', null, Buffer.from('zing', 'utf8')],\r\n        });\r\n        var expectedBuffer = new buffer_list_1.default()\r\n            .addCString('bang') // portal name\r\n            .addCString('woo') // statement name\r\n            .addInt16(4) // value count\r\n            .addInt16(0) // string\r\n            .addInt16(0) // string\r\n            .addInt16(0) // string\r\n            .addInt16(1) // binary\r\n            .addInt16(4)\r\n            .addInt32(1)\r\n            .add(Buffer.from('1'))\r\n            .addInt32(2)\r\n            .add(Buffer.from('hi'))\r\n            .addInt32(-1)\r\n            .addInt32(4)\r\n            .add(Buffer.from('zing', 'utf-8'))\r\n            .addInt16(0)\r\n            .join(true, 'B');\r\n        assert_1.default.deepEqual(actual, expectedBuffer);\r\n    });\r\n    describe('builds execute message', function () {\r\n        it('for unamed portal with no row limit', function () {\r\n            const actual = serializer_1.serialize.execute();\r\n            var expectedBuffer = new buffer_list_1.default().addCString('').addInt32(0).join(true, 'E');\r\n            assert_1.default.deepEqual(actual, expectedBuffer);\r\n        });\r\n        it('for named portal with row limit', function () {\r\n            const actual = serializer_1.serialize.execute({\r\n                portal: 'my favorite portal',\r\n                rows: 100,\r\n            });\r\n            var expectedBuffer = new buffer_list_1.default().addCString('my favorite portal').addInt32(100).join(true, 'E');\r\n            assert_1.default.deepEqual(actual, expectedBuffer);\r\n        });\r\n    });\r\n    it('builds flush command', function () {\r\n        const actual = serializer_1.serialize.flush();\r\n        var expected = new buffer_list_1.default().join(true, 'H');\r\n        assert_1.default.deepEqual(actual, expected);\r\n    });\r\n    it('builds sync command', function () {\r\n        const actual = serializer_1.serialize.sync();\r\n        var expected = new buffer_list_1.default().join(true, 'S');\r\n        assert_1.default.deepEqual(actual, expected);\r\n    });\r\n    it('builds end command', function () {\r\n        const actual = serializer_1.serialize.end();\r\n        var expected = Buffer.from([0x58, 0, 0, 0, 4]);\r\n        assert_1.default.deepEqual(actual, expected);\r\n    });\r\n    describe('builds describe command', function () {\r\n        it('describe statement', function () {\r\n            const actual = serializer_1.serialize.describe({ type: 'S', name: 'bang' });\r\n            var expected = new buffer_list_1.default().addChar('S').addCString('bang').join(true, 'D');\r\n            assert_1.default.deepEqual(actual, expected);\r\n        });\r\n        it('describe unnamed portal', function () {\r\n            const actual = serializer_1.serialize.describe({ type: 'P' });\r\n            var expected = new buffer_list_1.default().addChar('P').addCString('').join(true, 'D');\r\n            assert_1.default.deepEqual(actual, expected);\r\n        });\r\n    });\r\n    describe('builds close command', function () {\r\n        it('describe statement', function () {\r\n            const actual = serializer_1.serialize.close({ type: 'S', name: 'bang' });\r\n            var expected = new buffer_list_1.default().addChar('S').addCString('bang').join(true, 'C');\r\n            assert_1.default.deepEqual(actual, expected);\r\n        });\r\n        it('describe unnamed portal', function () {\r\n            const actual = serializer_1.serialize.close({ type: 'P' });\r\n            var expected = new buffer_list_1.default().addChar('P').addCString('').join(true, 'C');\r\n            assert_1.default.deepEqual(actual, expected);\r\n        });\r\n    });\r\n    describe('copy messages', function () {\r\n        it('builds copyFromChunk', () => {\r\n            const actual = serializer_1.serialize.copyData(Buffer.from([1, 2, 3]));\r\n            const expected = new buffer_list_1.default().add(Buffer.from([1, 2, 3])).join(true, 'd');\r\n            assert_1.default.deepEqual(actual, expected);\r\n        });\r\n        it('builds copy fail', () => {\r\n            const actual = serializer_1.serialize.copyFail('err!');\r\n            const expected = new buffer_list_1.default().addCString('err!').join(true, 'f');\r\n            assert_1.default.deepEqual(actual, expected);\r\n        });\r\n        it('builds copy done', () => {\r\n            const actual = serializer_1.serialize.copyDone();\r\n            const expected = new buffer_list_1.default().join(true, 'c');\r\n            assert_1.default.deepEqual(actual, expected);\r\n        });\r\n    });\r\n    it('builds cancel message', () => {\r\n        const actual = serializer_1.serialize.cancel(3, 4);\r\n        const expected = new buffer_list_1.default().addInt16(1234).addInt16(5678).addInt32(3).addInt32(4).join(true);\r\n        assert_1.default.deepEqual(actual, expected);\r\n    });\r\n});\r\n//# sourceMappingURL=outbound-serializer.test.js.map
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/dist/outbound-serializer.test.js b/node_modules/pg-protocol/dist/outbound-serializer.test.js
--- a/node_modules/pg-protocol/dist/outbound-serializer.test.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/dist/outbound-serializer.test.js	(date 1753913035300)
@@ -42,14 +42,14 @@
         assert_1.default.deepEqual(actual, new buffer_list_1.default().addString('data').join(true, 'p'));
     });
     it('builds query message', function () {
-        var txt = 'select * from boom';
+        const txt = 'select * from boom';
         const actual = serializer_1.serialize.query(txt);
         assert_1.default.deepEqual(actual, new buffer_list_1.default().addCString(txt).join(true, 'Q'));
     });
     describe('parse message', () => {
         it('builds parse message', function () {
             const actual = serializer_1.serialize.parse({ text: '!' });
-            var expected = new buffer_list_1.default().addCString('').addCString('!').addInt16(0).join(true, 'P');
+            const expected = new buffer_list_1.default().addCString('').addCString('!').addInt16(0).join(true, 'P');
             assert_1.default.deepEqual(actual, expected);
         });
         it('builds parse message with named query', function () {
@@ -58,7 +58,7 @@
                 text: 'select * from boom',
                 types: [],
             });
-            var expected = new buffer_list_1.default().addCString('boom').addCString('select * from boom').addInt16(0).join(true, 'P');
+            const expected = new buffer_list_1.default().addCString('boom').addCString('select * from boom').addInt16(0).join(true, 'P');
             assert_1.default.deepEqual(actual, expected);
         });
         it('with multiple parameters', function () {
@@ -67,7 +67,7 @@
                 text: 'select * from bang where name = $1',
                 types: [1, 2, 3, 4],
             });
-            var expected = new buffer_list_1.default()
+            const expected = new buffer_list_1.default()
                 .addCString('force')
                 .addCString('select * from bang where name = $1')
                 .addInt16(4)
@@ -82,11 +82,12 @@
     describe('bind messages', function () {
         it('with no values', function () {
             const actual = serializer_1.serialize.bind();
-            var expectedBuffer = new buffer_list_1.default()
+            const expectedBuffer = new buffer_list_1.default()
                 .addCString('')
                 .addCString('')
                 .addInt16(0)
                 .addInt16(0)
+                .addInt16(1)
                 .addInt16(0)
                 .join(true, 'B');
             assert_1.default.deepEqual(actual, expectedBuffer);
@@ -97,7 +98,7 @@
                 statement: 'woo',
                 values: ['1', 'hi', null, 'zing'],
             });
-            var expectedBuffer = new buffer_list_1.default()
+            const expectedBuffer = new buffer_list_1.default()
                 .addCString('bang') // portal name
                 .addCString('woo') // statement name
                 .addInt16(4)
@@ -113,6 +114,7 @@
                 .addInt32(-1)
                 .addInt32(4)
                 .add(Buffer.from('zing'))
+                .addInt16(1)
                 .addInt16(0)
                 .join(true, 'B');
             assert_1.default.deepEqual(actual, expectedBuffer);
@@ -125,7 +127,7 @@
             values: ['1', 'hi', null, 'zing'],
             valueMapper: () => null,
         });
-        var expectedBuffer = new buffer_list_1.default()
+        const expectedBuffer = new buffer_list_1.default()
             .addCString('bang') // portal name
             .addCString('woo') // statement name
             .addInt16(4)
@@ -138,6 +140,7 @@
             .addInt32(-1)
             .addInt32(-1)
             .addInt32(-1)
+            .addInt16(1)
             .addInt16(0)
             .join(true, 'B');
         assert_1.default.deepEqual(actual, expectedBuffer);
@@ -148,7 +151,7 @@
             statement: 'woo',
             values: ['1', 'hi', null, Buffer.from('zing', 'utf8')],
         });
-        var expectedBuffer = new buffer_list_1.default()
+        const expectedBuffer = new buffer_list_1.default()
             .addCString('bang') // portal name
             .addCString('woo') // statement name
             .addInt16(4) // value count
@@ -164,6 +167,7 @@
             .addInt32(-1)
             .addInt32(4)
             .add(Buffer.from('zing', 'utf-8'))
+            .addInt16(1)
             .addInt16(0)
             .join(true, 'B');
         assert_1.default.deepEqual(actual, expectedBuffer);
@@ -171,7 +175,7 @@
     describe('builds execute message', function () {
         it('for unamed portal with no row limit', function () {
             const actual = serializer_1.serialize.execute();
-            var expectedBuffer = new buffer_list_1.default().addCString('').addInt32(0).join(true, 'E');
+            const expectedBuffer = new buffer_list_1.default().addCString('').addInt32(0).join(true, 'E');
             assert_1.default.deepEqual(actual, expectedBuffer);
         });
         it('for named portal with row limit', function () {
@@ -179,46 +183,46 @@
                 portal: 'my favorite portal',
                 rows: 100,
             });
-            var expectedBuffer = new buffer_list_1.default().addCString('my favorite portal').addInt32(100).join(true, 'E');
+            const expectedBuffer = new buffer_list_1.default().addCString('my favorite portal').addInt32(100).join(true, 'E');
             assert_1.default.deepEqual(actual, expectedBuffer);
         });
     });
     it('builds flush command', function () {
         const actual = serializer_1.serialize.flush();
-        var expected = new buffer_list_1.default().join(true, 'H');
+        const expected = new buffer_list_1.default().join(true, 'H');
         assert_1.default.deepEqual(actual, expected);
     });
     it('builds sync command', function () {
         const actual = serializer_1.serialize.sync();
-        var expected = new buffer_list_1.default().join(true, 'S');
+        const expected = new buffer_list_1.default().join(true, 'S');
         assert_1.default.deepEqual(actual, expected);
     });
     it('builds end command', function () {
         const actual = serializer_1.serialize.end();
-        var expected = Buffer.from([0x58, 0, 0, 0, 4]);
+        const expected = Buffer.from([0x58, 0, 0, 0, 4]);
         assert_1.default.deepEqual(actual, expected);
     });
     describe('builds describe command', function () {
         it('describe statement', function () {
             const actual = serializer_1.serialize.describe({ type: 'S', name: 'bang' });
-            var expected = new buffer_list_1.default().addChar('S').addCString('bang').join(true, 'D');
+            const expected = new buffer_list_1.default().addChar('S').addCString('bang').join(true, 'D');
             assert_1.default.deepEqual(actual, expected);
         });
         it('describe unnamed portal', function () {
             const actual = serializer_1.serialize.describe({ type: 'P' });
-            var expected = new buffer_list_1.default().addChar('P').addCString('').join(true, 'D');
+            const expected = new buffer_list_1.default().addChar('P').addCString('').join(true, 'D');
             assert_1.default.deepEqual(actual, expected);
         });
     });
     describe('builds close command', function () {
         it('describe statement', function () {
             const actual = serializer_1.serialize.close({ type: 'S', name: 'bang' });
-            var expected = new buffer_list_1.default().addChar('S').addCString('bang').join(true, 'C');
+            const expected = new buffer_list_1.default().addChar('S').addCString('bang').join(true, 'C');
             assert_1.default.deepEqual(actual, expected);
         });
         it('describe unnamed portal', function () {
             const actual = serializer_1.serialize.close({ type: 'P' });
-            var expected = new buffer_list_1.default().addChar('P').addCString('').join(true, 'C');
+            const expected = new buffer_list_1.default().addChar('P').addCString('').join(true, 'C');
             assert_1.default.deepEqual(actual, expected);
         });
     });
Index: node_modules/braces/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"braces\",\r\n  \"description\": \"Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.\",\r\n  \"version\": \"3.0.2\",\r\n  \"homepage\": \"https://github.com/micromatch/braces\",\r\n  \"author\": \"Jon Schlinkert (https://github.com/jonschlinkert)\",\r\n  \"contributors\": [\r\n    \"Brian Woodward (https://twitter.com/doowb)\",\r\n    \"Elan Shanker (https://github.com/es128)\",\r\n    \"Eugene Sharygin (https://github.com/eush77)\",\r\n    \"hemanth.hm (http://h3manth.com)\",\r\n    \"Jon Schlinkert (http://twitter.com/jonschlinkert)\"\r\n  ],\r\n  \"repository\": \"micromatch/braces\",\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/micromatch/braces/issues\"\r\n  },\r\n  \"license\": \"MIT\",\r\n  \"files\": [\r\n    \"index.js\",\r\n    \"lib\"\r\n  ],\r\n  \"main\": \"index.js\",\r\n  \"engines\": {\r\n    \"node\": \">=8\"\r\n  },\r\n  \"scripts\": {\r\n    \"test\": \"mocha\",\r\n    \"benchmark\": \"node benchmark\"\r\n  },\r\n  \"dependencies\": {\r\n    \"fill-range\": \"^7.0.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"ansi-colors\": \"^3.2.4\",\r\n    \"bash-path\": \"^2.0.1\",\r\n    \"gulp-format-md\": \"^2.0.0\",\r\n    \"mocha\": \"^6.1.1\"\r\n  },\r\n  \"keywords\": [\r\n    \"alpha\",\r\n    \"alphabetical\",\r\n    \"bash\",\r\n    \"brace\",\r\n    \"braces\",\r\n    \"expand\",\r\n    \"expansion\",\r\n    \"filepath\",\r\n    \"fill\",\r\n    \"fs\",\r\n    \"glob\",\r\n    \"globbing\",\r\n    \"letter\",\r\n    \"match\",\r\n    \"matches\",\r\n    \"matching\",\r\n    \"number\",\r\n    \"numerical\",\r\n    \"path\",\r\n    \"range\",\r\n    \"ranges\",\r\n    \"sh\"\r\n  ],\r\n  \"verb\": {\r\n    \"toc\": false,\r\n    \"layout\": \"default\",\r\n    \"tasks\": [\r\n      \"readme\"\r\n    ],\r\n    \"lint\": {\r\n      \"reflinks\": true\r\n    },\r\n    \"plugins\": [\r\n      \"gulp-format-md\"\r\n    ]\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/braces/package.json b/node_modules/braces/package.json
--- a/node_modules/braces/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/braces/package.json	(date 1753913035852)
@@ -1,7 +1,7 @@
 {
   "name": "braces",
   "description": "Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.",
-  "version": "3.0.2",
+  "version": "3.0.3",
   "homepage": "https://github.com/micromatch/braces",
   "author": "Jon Schlinkert (https://github.com/jonschlinkert)",
   "contributors": [
@@ -29,7 +29,7 @@
     "benchmark": "node benchmark"
   },
   "dependencies": {
-    "fill-range": "^7.0.1"
+    "fill-range": "^7.1.1"
   },
   "devDependencies": {
     "ansi-colors": "^3.2.4",
Index: node_modules/braces/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># braces [![Donate](https://img.shields.io/badge/Donate-PayPal-green.svg)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=W8YFZ425KND68) [![NPM version](https://img.shields.io/npm/v/braces.svg?style=flat)](https://www.npmjs.com/package/braces) [![NPM monthly downloads](https://img.shields.io/npm/dm/braces.svg?style=flat)](https://npmjs.org/package/braces) [![NPM total downloads](https://img.shields.io/npm/dt/braces.svg?style=flat)](https://npmjs.org/package/braces) [![Linux Build Status](https://img.shields.io/travis/micromatch/braces.svg?style=flat&label=Travis)](https://travis-ci.org/micromatch/braces)\r\n\r\n> Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed.\r\n\r\nPlease consider following this project's author, [Jon Schlinkert](https://github.com/jonschlinkert), and consider starring the project to show your :heart: and support.\r\n\r\n## Install\r\n\r\nInstall with [npm](https://www.npmjs.com/):\r\n\r\n```sh\r\n$ npm install --save braces\r\n```\r\n\r\n## v3.0.0 Released!!\r\n\r\nSee the [changelog](CHANGELOG.md) for details.\r\n\r\n## Why use braces?\r\n\r\nBrace patterns make globs more powerful by adding the ability to match specific ranges and sequences of characters.\r\n\r\n* **Accurate** - complete support for the [Bash 4.3 Brace Expansion](www.gnu.org/software/bash/) specification (passes all of the Bash braces tests)\r\n* **[fast and performant](#benchmarks)** - Starts fast, runs fast and [scales well](#performance) as patterns increase in complexity.\r\n* **Organized code base** - The parser and compiler are easy to maintain and update when edge cases crop up.\r\n* **Well-tested** - Thousands of test assertions, and passes all of the Bash, minimatch, and [brace-expansion](https://github.com/juliangruber/brace-expansion) unit tests (as of the date this was written).\r\n* **Safer** - You shouldn't have to worry about users defining aggressive or malicious brace patterns that can break your application. Braces takes measures to prevent malicious regex that can be used for DDoS attacks (see [catastrophic backtracking](https://www.regular-expressions.info/catastrophic.html)).\r\n* [Supports lists](#lists) - (aka \"sets\") `a/{b,c}/d` => `['a/b/d', 'a/c/d']`\r\n* [Supports sequences](#sequences) - (aka \"ranges\") `{01..03}` => `['01', '02', '03']`\r\n* [Supports steps](#steps) - (aka \"increments\") `{2..10..2}` => `['2', '4', '6', '8', '10']`\r\n* [Supports escaping](#escaping) - To prevent evaluation of special characters.\r\n\r\n## Usage\r\n\r\nThe main export is a function that takes one or more brace `patterns` and `options`.\r\n\r\n```js\r\nconst braces = require('braces');\r\n// braces(patterns[, options]);\r\n\r\nconsole.log(braces(['{01..05}', '{a..e}']));\r\n//=> ['(0[1-5])', '([a-e])']\r\n\r\nconsole.log(braces(['{01..05}', '{a..e}'], { expand: true }));\r\n//=> ['01', '02', '03', '04', '05', 'a', 'b', 'c', 'd', 'e']\r\n```\r\n\r\n### Brace Expansion vs. Compilation\r\n\r\nBy default, brace patterns are compiled into strings that are optimized for creating regular expressions and matching.\r\n\r\n**Compiled**\r\n\r\n```js\r\nconsole.log(braces('a/{x,y,z}/b')); \r\n//=> ['a/(x|y|z)/b']\r\nconsole.log(braces(['a/{01..20}/b', 'a/{1..5}/b'])); \r\n//=> [ 'a/(0[1-9]|1[0-9]|20)/b', 'a/([1-5])/b' ]\r\n```\r\n\r\n**Expanded**\r\n\r\nEnable brace expansion by setting the `expand` option to true, or by using [braces.expand()](#expand) (returns an array similar to what you'd expect from Bash, or `echo {1..5}`, or [minimatch](https://github.com/isaacs/minimatch)):\r\n\r\n```js\r\nconsole.log(braces('a/{x,y,z}/b', { expand: true }));\r\n//=> ['a/x/b', 'a/y/b', 'a/z/b']\r\n\r\nconsole.log(braces.expand('{01..10}'));\r\n//=> ['01','02','03','04','05','06','07','08','09','10']\r\n```\r\n\r\n### Lists\r\n\r\nExpand lists (like Bash \"sets\"):\r\n\r\n```js\r\nconsole.log(braces('a/{foo,bar,baz}/*.js'));\r\n//=> ['a/(foo|bar|baz)/*.js']\r\n\r\nconsole.log(braces.expand('a/{foo,bar,baz}/*.js'));\r\n//=> ['a/foo/*.js', 'a/bar/*.js', 'a/baz/*.js']\r\n```\r\n\r\n### Sequences\r\n\r\nExpand ranges of characters (like Bash \"sequences\"):\r\n\r\n```js\r\nconsole.log(braces.expand('{1..3}'));                // ['1', '2', '3']\r\nconsole.log(braces.expand('a/{1..3}/b'));            // ['a/1/b', 'a/2/b', 'a/3/b']\r\nconsole.log(braces('{a..c}', { expand: true }));     // ['a', 'b', 'c']\r\nconsole.log(braces('foo/{a..c}', { expand: true })); // ['foo/a', 'foo/b', 'foo/c']\r\n\r\n// supports zero-padded ranges\r\nconsole.log(braces('a/{01..03}/b'));   //=> ['a/(0[1-3])/b']\r\nconsole.log(braces('a/{001..300}/b')); //=> ['a/(0{2}[1-9]|0[1-9][0-9]|[12][0-9]{2}|300)/b']\r\n```\r\n\r\nSee [fill-range](https://github.com/jonschlinkert/fill-range) for all available range-expansion options.\r\n\r\n### Steppped ranges\r\n\r\nSteps, or increments, may be used with ranges:\r\n\r\n```js\r\nconsole.log(braces.expand('{2..10..2}'));\r\n//=> ['2', '4', '6', '8', '10']\r\n\r\nconsole.log(braces('{2..10..2}'));\r\n//=> ['(2|4|6|8|10)']\r\n```\r\n\r\nWhen the [.optimize](#optimize) method is used, or [options.optimize](#optionsoptimize) is set to true, sequences are passed to [to-regex-range](https://github.com/jonschlinkert/to-regex-range) for expansion.\r\n\r\n### Nesting\r\n\r\nBrace patterns may be nested. The results of each expanded string are not sorted, and left to right order is preserved.\r\n\r\n**\"Expanded\" braces**\r\n\r\n```js\r\nconsole.log(braces.expand('a{b,c,/{x,y}}/e'));\r\n//=> ['ab/e', 'ac/e', 'a/x/e', 'a/y/e']\r\n\r\nconsole.log(braces.expand('a/{x,{1..5},y}/c'));\r\n//=> ['a/x/c', 'a/1/c', 'a/2/c', 'a/3/c', 'a/4/c', 'a/5/c', 'a/y/c']\r\n```\r\n\r\n**\"Optimized\" braces**\r\n\r\n```js\r\nconsole.log(braces('a{b,c,/{x,y}}/e'));\r\n//=> ['a(b|c|/(x|y))/e']\r\n\r\nconsole.log(braces('a/{x,{1..5},y}/c'));\r\n//=> ['a/(x|([1-5])|y)/c']\r\n```\r\n\r\n### Escaping\r\n\r\n**Escaping braces**\r\n\r\nA brace pattern will not be expanded or evaluted if _either the opening or closing brace is escaped_:\r\n\r\n```js\r\nconsole.log(braces.expand('a\\\\{d,c,b}e'));\r\n//=> ['a{d,c,b}e']\r\n\r\nconsole.log(braces.expand('a{d,c,b\\\\}e'));\r\n//=> ['a{d,c,b}e']\r\n```\r\n\r\n**Escaping commas**\r\n\r\nCommas inside braces may also be escaped:\r\n\r\n```js\r\nconsole.log(braces.expand('a{b\\\\,c}d'));\r\n//=> ['a{b,c}d']\r\n\r\nconsole.log(braces.expand('a{d\\\\,c,b}e'));\r\n//=> ['ad,ce', 'abe']\r\n```\r\n\r\n**Single items**\r\n\r\nFollowing bash conventions, a brace pattern is also not expanded when it contains a single character:\r\n\r\n```js\r\nconsole.log(braces.expand('a{b}c'));\r\n//=> ['a{b}c']\r\n```\r\n\r\n## Options\r\n\r\n### options.maxLength\r\n\r\n**Type**: `Number`\r\n\r\n**Default**: `65,536`\r\n\r\n**Description**: Limit the length of the input string. Useful when the input string is generated or your application allows users to pass a string, et cetera.\r\n\r\n```js\r\nconsole.log(braces('a/{b,c}/d', { maxLength: 3 }));  //=> throws an error\r\n```\r\n\r\n### options.expand\r\n\r\n**Type**: `Boolean`\r\n\r\n**Default**: `undefined`\r\n\r\n**Description**: Generate an \"expanded\" brace pattern (alternatively you can use the `braces.expand()` method, which does the same thing).\r\n\r\n```js\r\nconsole.log(braces('a/{b,c}/d', { expand: true }));\r\n//=> [ 'a/b/d', 'a/c/d' ]\r\n```\r\n\r\n### options.nodupes\r\n\r\n**Type**: `Boolean`\r\n\r\n**Default**: `undefined`\r\n\r\n**Description**: Remove duplicates from the returned array.\r\n\r\n### options.rangeLimit\r\n\r\n**Type**: `Number`\r\n\r\n**Default**: `1000`\r\n\r\n**Description**: To prevent malicious patterns from being passed by users, an error is thrown when `braces.expand()` is used or `options.expand` is true and the generated range will exceed the `rangeLimit`.\r\n\r\nYou can customize `options.rangeLimit` or set it to `Inifinity` to disable this altogether.\r\n\r\n**Examples**\r\n\r\n```js\r\n// pattern exceeds the \"rangeLimit\", so it's optimized automatically\r\nconsole.log(braces.expand('{1..1000}'));\r\n//=> ['([1-9]|[1-9][0-9]{1,2}|1000)']\r\n\r\n// pattern does not exceed \"rangeLimit\", so it's NOT optimized\r\nconsole.log(braces.expand('{1..100}'));\r\n//=> ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '100']\r\n```\r\n\r\n### options.transform\r\n\r\n**Type**: `Function`\r\n\r\n**Default**: `undefined`\r\n\r\n**Description**: Customize range expansion.\r\n\r\n**Example: Transforming non-numeric values**\r\n\r\n```js\r\nconst alpha = braces.expand('x/{a..e}/y', {\r\n  transform(value, index) {\r\n    // When non-numeric values are passed, \"value\" is a character code.\r\n    return 'foo/' + String.fromCharCode(value) + '-' + index;\r\n  }\r\n});\r\nconsole.log(alpha);\r\n//=> [ 'x/foo/a-0/y', 'x/foo/b-1/y', 'x/foo/c-2/y', 'x/foo/d-3/y', 'x/foo/e-4/y' ]\r\n```\r\n\r\n**Example: Transforming numeric values**\r\n\r\n```js\r\nconst numeric = braces.expand('{1..5}', {\r\n  transform(value) {\r\n    // when numeric values are passed, \"value\" is a number\r\n    return 'foo/' + value * 2;\r\n  }\r\n});\r\nconsole.log(numeric); \r\n//=> [ 'foo/2', 'foo/4', 'foo/6', 'foo/8', 'foo/10' ]\r\n```\r\n\r\n### options.quantifiers\r\n\r\n**Type**: `Boolean`\r\n\r\n**Default**: `undefined`\r\n\r\n**Description**: In regular expressions, quanitifiers can be used to specify how many times a token can be repeated. For example, `a{1,3}` will match the letter `a` one to three times.\r\n\r\nUnfortunately, regex quantifiers happen to share the same syntax as [Bash lists](#lists)\r\n\r\nThe `quantifiers` option tells braces to detect when [regex quantifiers](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp#quantifiers) are defined in the given pattern, and not to try to expand them as lists.\r\n\r\n**Examples**\r\n\r\n```js\r\nconst braces = require('braces');\r\nconsole.log(braces('a/b{1,3}/{x,y,z}'));\r\n//=> [ 'a/b(1|3)/(x|y|z)' ]\r\nconsole.log(braces('a/b{1,3}/{x,y,z}', {quantifiers: true}));\r\n//=> [ 'a/b{1,3}/(x|y|z)' ]\r\nconsole.log(braces('a/b{1,3}/{x,y,z}', {quantifiers: true, expand: true}));\r\n//=> [ 'a/b{1,3}/x', 'a/b{1,3}/y', 'a/b{1,3}/z' ]\r\n```\r\n\r\n### options.unescape\r\n\r\n**Type**: `Boolean`\r\n\r\n**Default**: `undefined`\r\n\r\n**Description**: Strip backslashes that were used for escaping from the result.\r\n\r\n## What is \"brace expansion\"?\r\n\r\nBrace expansion is a type of parameter expansion that was made popular by unix shells for generating lists of strings, as well as regex-like matching when used alongside wildcards (globs).\r\n\r\nIn addition to \"expansion\", braces are also used for matching. In other words:\r\n\r\n* [brace expansion](#brace-expansion) is for generating new lists\r\n* [brace matching](#brace-matching) is for filtering existing lists\r\n\r\n<details>\r\n<summary><strong>More about brace expansion</strong> (click to expand)</summary>\r\n\r\nThere are two main types of brace expansion:\r\n\r\n1. **lists**: which are defined using comma-separated values inside curly braces: `{a,b,c}`\r\n2. **sequences**: which are defined using a starting value and an ending value, separated by two dots: `a{1..3}b`. Optionally, a third argument may be passed to define a \"step\" or increment to use: `a{1..100..10}b`. These are also sometimes referred to as \"ranges\".\r\n\r\nHere are some example brace patterns to illustrate how they work:\r\n\r\n**Sets**\r\n\r\n```\r\n{a,b,c}       => a b c\r\n{a,b,c}{1,2}  => a1 a2 b1 b2 c1 c2\r\n```\r\n\r\n**Sequences**\r\n\r\n```\r\n{1..9}        => 1 2 3 4 5 6 7 8 9\r\n{4..-4}       => 4 3 2 1 0 -1 -2 -3 -4\r\n{1..20..3}    => 1 4 7 10 13 16 19\r\n{a..j}        => a b c d e f g h i j\r\n{j..a}        => j i h g f e d c b a\r\n{a..z..3}     => a d g j m p s v y\r\n```\r\n\r\n**Combination**\r\n\r\nSets and sequences can be mixed together or used along with any other strings.\r\n\r\n```\r\n{a,b,c}{1..3}   => a1 a2 a3 b1 b2 b3 c1 c2 c3\r\nfoo/{a,b,c}/bar => foo/a/bar foo/b/bar foo/c/bar\r\n```\r\n\r\nThe fact that braces can be \"expanded\" from relatively simple patterns makes them ideal for quickly generating test fixtures, file paths, and similar use cases.\r\n\r\n## Brace matching\r\n\r\nIn addition to _expansion_, brace patterns are also useful for performing regular-expression-like matching.\r\n\r\nFor example, the pattern `foo/{1..3}/bar` would match any of following strings:\r\n\r\n```\r\nfoo/1/bar\r\nfoo/2/bar\r\nfoo/3/bar\r\n```\r\n\r\nBut not:\r\n\r\n```\r\nbaz/1/qux\r\nbaz/2/qux\r\nbaz/3/qux\r\n```\r\n\r\nBraces can also be combined with [glob patterns](https://github.com/jonschlinkert/micromatch) to perform more advanced wildcard matching. For example, the pattern `*/{1..3}/*` would match any of following strings:\r\n\r\n```\r\nfoo/1/bar\r\nfoo/2/bar\r\nfoo/3/bar\r\nbaz/1/qux\r\nbaz/2/qux\r\nbaz/3/qux\r\n```\r\n\r\n## Brace matching pitfalls\r\n\r\nAlthough brace patterns offer a user-friendly way of matching ranges or sets of strings, there are also some major disadvantages and potential risks you should be aware of.\r\n\r\n### tldr\r\n\r\n**\"brace bombs\"**\r\n\r\n* brace expansion can eat up a huge amount of processing resources\r\n* as brace patterns increase _linearly in size_, the system resources required to expand the pattern increase exponentially\r\n* users can accidentally (or intentially) exhaust your system's resources resulting in the equivalent of a DoS attack (bonus: no programming knowledge is required!)\r\n\r\nFor a more detailed explanation with examples, see the [geometric complexity](#geometric-complexity) section.\r\n\r\n### The solution\r\n\r\nJump to the [performance section](#performance) to see how Braces solves this problem in comparison to other libraries.\r\n\r\n### Geometric complexity\r\n\r\nAt minimum, brace patterns with sets limited to two elements have quadradic or `O(n^2)` complexity. But the complexity of the algorithm increases exponentially as the number of sets, _and elements per set_, increases, which is `O(n^c)`.\r\n\r\nFor example, the following sets demonstrate quadratic (`O(n^2)`) complexity:\r\n\r\n```\r\n{1,2}{3,4}      => (2X2)    => 13 14 23 24\r\n{1,2}{3,4}{5,6} => (2X2X2)  => 135 136 145 146 235 236 245 246\r\n```\r\n\r\nBut add an element to a set, and we get a n-fold Cartesian product with `O(n^c)` complexity:\r\n\r\n```\r\n{1,2,3}{4,5,6}{7,8,9} => (3X3X3) => 147 148 149 157 158 159 167 168 169 247 248 \r\n                                    249 257 258 259 267 268 269 347 348 349 357 \r\n                                    358 359 367 368 369\r\n```\r\n\r\nNow, imagine how this complexity grows given that each element is a n-tuple:\r\n\r\n```\r\n{1..100}{1..100}         => (100X100)     => 10,000 elements (38.4 kB)\r\n{1..100}{1..100}{1..100} => (100X100X100) => 1,000,000 elements (5.76 MB)\r\n```\r\n\r\nAlthough these examples are clearly contrived, they demonstrate how brace patterns can quickly grow out of control.\r\n\r\n**More information**\r\n\r\nInterested in learning more about brace expansion?\r\n\r\n* [linuxjournal/bash-brace-expansion](http://www.linuxjournal.com/content/bash-brace-expansion)\r\n* [rosettacode/Brace_expansion](https://rosettacode.org/wiki/Brace_expansion)\r\n* [cartesian product](https://en.wikipedia.org/wiki/Cartesian_product)\r\n\r\n</details>\r\n\r\n## Performance\r\n\r\nBraces is not only screaming fast, it's also more accurate the other brace expansion libraries.\r\n\r\n### Better algorithms\r\n\r\nFortunately there is a solution to the [\"brace bomb\" problem](#brace-matching-pitfalls): _don't expand brace patterns into an array when they're used for matching_.\r\n\r\nInstead, convert the pattern into an optimized regular expression. This is easier said than done, and braces is the only library that does this currently.\r\n\r\n**The proof is in the numbers**\r\n\r\nMinimatch gets exponentially slower as patterns increase in complexity, braces does not. The following results were generated using `braces()` and `minimatch.braceExpand()`, respectively.\r\n\r\n| **Pattern**                 | **braces**         | **[minimatch][]**            |\r\n| ---                         | ---                | ---                          |\r\n| `{1..9007199254740991}`[^1] | `298 B` (5ms 459μs)|  N/A (freezes)               |\r\n| `{1..1000000000000000}`     | `41 B` (1ms 15μs)  |  N/A (freezes)               |\r\n| `{1..100000000000000}`      | `40 B` (890μs)     |  N/A (freezes)               |\r\n| `{1..10000000000000}`       | `39 B` (2ms 49μs)  |  N/A (freezes)               |\r\n| `{1..1000000000000}`        | `38 B` (608μs)     |  N/A (freezes)               |\r\n| `{1..100000000000}`         | `37 B` (397μs)     |  N/A (freezes)               |\r\n| `{1..10000000000}`          | `35 B` (983μs)     |  N/A (freezes)               |\r\n| `{1..1000000000}`           | `34 B` (798μs)     |  N/A (freezes)               |\r\n| `{1..100000000}`            | `33 B` (733μs)     |  N/A (freezes)               |\r\n| `{1..10000000}`             | `32 B` (5ms 632μs) | `78.89 MB` (16s 388ms 569μs) |\r\n| `{1..1000000}`              | `31 B` (1ms 381μs) | `6.89 MB` (1s 496ms 887μs)   |\r\n| `{1..100000}`               | `30 B` (950μs)     | `588.89 kB` (146ms 921μs)    |\r\n| `{1..10000}`                | `29 B` (1ms 114μs) | `48.89 kB` (14ms 187μs)      |\r\n| `{1..1000}`                 | `28 B` (760μs)     | `3.89 kB` (1ms 453μs)        |\r\n| `{1..100}`                  | `22 B` (345μs)     | `291 B` (196μs)              |\r\n| `{1..10}`                   | `10 B` (533μs)     | `20 B` (37μs)                |\r\n| `{1..3}`                    | `7 B` (190μs)      | `5 B` (27μs)                 |\r\n\r\n### Faster algorithms\r\n\r\nWhen you need expansion, braces is still much faster.\r\n\r\n_(the following results were generated using `braces.expand()` and `minimatch.braceExpand()`, respectively)_\r\n\r\n| **Pattern**     | **braces**                  | **[minimatch][]**            |\r\n| ---             | ---                         | ---                          |\r\n| `{1..10000000}` | `78.89 MB` (2s 698ms 642μs) | `78.89 MB` (18s 601ms 974μs) |\r\n| `{1..1000000}`  | `6.89 MB` (458ms 576μs)     | `6.89 MB` (1s 491ms 621μs)   |\r\n| `{1..100000}`   | `588.89 kB` (20ms 728μs)    | `588.89 kB` (156ms 919μs)    |\r\n| `{1..10000}`    | `48.89 kB` (2ms 202μs)      | `48.89 kB` (13ms 641μs)      |\r\n| `{1..1000}`     | `3.89 kB` (1ms 796μs)       | `3.89 kB` (1ms 958μs)        |\r\n| `{1..100}`      | `291 B` (424μs)             | `291 B` (211μs)              |\r\n| `{1..10}`       | `20 B` (487μs)              | `20 B` (72μs)                |\r\n| `{1..3}`        | `5 B` (166μs)               | `5 B` (27μs)                 |\r\n\r\nIf you'd like to run these comparisons yourself, see [test/support/generate.js](test/support/generate.js).\r\n\r\n## Benchmarks\r\n\r\n### Running benchmarks\r\n\r\nInstall dev dependencies:\r\n\r\n```bash\r\nnpm i -d && npm benchmark\r\n```\r\n\r\n### Latest results\r\n\r\nBraces is more accurate, without sacrificing performance.\r\n\r\n```bash\r\n# range (expanded)\r\n  braces x 29,040 ops/sec ±3.69% (91 runs sampled))\r\n  minimatch x 4,735 ops/sec ±1.28% (90 runs sampled)\r\n\r\n# range (optimized for regex)\r\n  braces x 382,878 ops/sec ±0.56% (94 runs sampled)\r\n  minimatch x 1,040 ops/sec ±0.44% (93 runs sampled)\r\n\r\n# nested ranges (expanded)\r\n  braces x 19,744 ops/sec ±2.27% (92 runs sampled))\r\n  minimatch x 4,579 ops/sec ±0.50% (93 runs sampled)\r\n\r\n# nested ranges (optimized for regex)\r\n  braces x 246,019 ops/sec ±2.02% (93 runs sampled)\r\n  minimatch x 1,028 ops/sec ±0.39% (94 runs sampled)\r\n\r\n# set (expanded) \r\n  braces x 138,641 ops/sec ±0.53% (95 runs sampled)\r\n  minimatch x 219,582 ops/sec ±0.98% (94 runs sampled)\r\n\r\n# set (optimized for regex)\r\n  braces x 388,408 ops/sec ±0.41% (95 runs sampled)\r\n  minimatch x 44,724 ops/sec ±0.91% (89 runs sampled)\r\n\r\n# nested sets (expanded)\r\n  braces x 84,966 ops/sec ±0.48% (94 runs sampled)\r\n  minimatch x 140,720 ops/sec ±0.37% (95 runs sampled)\r\n\r\n# nested sets (optimized for regex)\r\n  braces x 263,340 ops/sec ±2.06% (92 runs sampled)\r\n  minimatch x 28,714 ops/sec ±0.40% (90 runs sampled)\r\n```\r\n\r\n## About\r\n\r\n<details>\r\n<summary><strong>Contributing</strong></summary>\r\n\r\nPull requests and stars are always welcome. For bugs and feature requests, [please create an issue](../../issues/new).\r\n\r\n</details>\r\n\r\n<details>\r\n<summary><strong>Running Tests</strong></summary>\r\n\r\nRunning and reviewing unit tests is a great way to get familiarized with a library and its API. You can install dependencies and run tests with the following command:\r\n\r\n```sh\r\n$ npm install && npm test\r\n```\r\n\r\n</details>\r\n\r\n<details>\r\n<summary><strong>Building docs</strong></summary>\r\n\r\n_(This project's readme.md is generated by [verb](https://github.com/verbose/verb-generate-readme), please don't edit the readme directly. Any changes to the readme must be made in the [.verb.md](.verb.md) readme template.)_\r\n\r\nTo generate the readme, run the following command:\r\n\r\n```sh\r\n$ npm install -g verbose/verb#dev verb-generate-readme && verb\r\n```\r\n\r\n</details>\r\n\r\n### Contributors\r\n\r\n| **Commits** | **Contributor** |  \r\n| --- | --- |  \r\n| 197 | [jonschlinkert](https://github.com/jonschlinkert) |  \r\n| 4   | [doowb](https://github.com/doowb) |  \r\n| 1   | [es128](https://github.com/es128) |  \r\n| 1   | [eush77](https://github.com/eush77) |  \r\n| 1   | [hemanth](https://github.com/hemanth) |  \r\n| 1   | [wtgtybhertgeghgtwtg](https://github.com/wtgtybhertgeghgtwtg) |  \r\n\r\n### Author\r\n\r\n**Jon Schlinkert**\r\n\r\n* [GitHub Profile](https://github.com/jonschlinkert)\r\n* [Twitter Profile](https://twitter.com/jonschlinkert)\r\n* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)\r\n\r\n### License\r\n\r\nCopyright © 2019, [Jon Schlinkert](https://github.com/jonschlinkert).\r\nReleased under the [MIT License](LICENSE).\r\n\r\n***\r\n\r\n_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on April 08, 2019._
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/braces/README.md b/node_modules/braces/README.md
--- a/node_modules/braces/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/braces/README.md	(date 1753913035854)
@@ -20,15 +20,15 @@
 
 Brace patterns make globs more powerful by adding the ability to match specific ranges and sequences of characters.
 
-* **Accurate** - complete support for the [Bash 4.3 Brace Expansion](www.gnu.org/software/bash/) specification (passes all of the Bash braces tests)
-* **[fast and performant](#benchmarks)** - Starts fast, runs fast and [scales well](#performance) as patterns increase in complexity.
-* **Organized code base** - The parser and compiler are easy to maintain and update when edge cases crop up.
-* **Well-tested** - Thousands of test assertions, and passes all of the Bash, minimatch, and [brace-expansion](https://github.com/juliangruber/brace-expansion) unit tests (as of the date this was written).
-* **Safer** - You shouldn't have to worry about users defining aggressive or malicious brace patterns that can break your application. Braces takes measures to prevent malicious regex that can be used for DDoS attacks (see [catastrophic backtracking](https://www.regular-expressions.info/catastrophic.html)).
-* [Supports lists](#lists) - (aka "sets") `a/{b,c}/d` => `['a/b/d', 'a/c/d']`
-* [Supports sequences](#sequences) - (aka "ranges") `{01..03}` => `['01', '02', '03']`
-* [Supports steps](#steps) - (aka "increments") `{2..10..2}` => `['2', '4', '6', '8', '10']`
-* [Supports escaping](#escaping) - To prevent evaluation of special characters.
+- **Accurate** - complete support for the [Bash 4.3 Brace Expansion](www.gnu.org/software/bash/) specification (passes all of the Bash braces tests)
+- **[fast and performant](#benchmarks)** - Starts fast, runs fast and [scales well](#performance) as patterns increase in complexity.
+- **Organized code base** - The parser and compiler are easy to maintain and update when edge cases crop up.
+- **Well-tested** - Thousands of test assertions, and passes all of the Bash, minimatch, and [brace-expansion](https://github.com/juliangruber/brace-expansion) unit tests (as of the date this was written).
+- **Safer** - You shouldn't have to worry about users defining aggressive or malicious brace patterns that can break your application. Braces takes measures to prevent malicious regex that can be used for DDoS attacks (see [catastrophic backtracking](https://www.regular-expressions.info/catastrophic.html)).
+- [Supports lists](#lists) - (aka "sets") `a/{b,c}/d` => `['a/b/d', 'a/c/d']`
+- [Supports sequences](#sequences) - (aka "ranges") `{01..03}` => `['01', '02', '03']`
+- [Supports steps](#steps) - (aka "increments") `{2..10..2}` => `['2', '4', '6', '8', '10']`
+- [Supports escaping](#escaping) - To prevent evaluation of special characters.
 
 ## Usage
 
@@ -52,9 +52,9 @@
 **Compiled**
 
 ```js
-console.log(braces('a/{x,y,z}/b')); 
+console.log(braces('a/{x,y,z}/b'));
 //=> ['a/(x|y|z)/b']
-console.log(braces(['a/{01..20}/b', 'a/{1..5}/b'])); 
+console.log(braces(['a/{01..20}/b', 'a/{1..5}/b']));
 //=> [ 'a/(0[1-9]|1[0-9]|20)/b', 'a/([1-5])/b' ]
 ```
 
@@ -87,13 +87,13 @@
 Expand ranges of characters (like Bash "sequences"):
 
 ```js
-console.log(braces.expand('{1..3}'));                // ['1', '2', '3']
-console.log(braces.expand('a/{1..3}/b'));            // ['a/1/b', 'a/2/b', 'a/3/b']
-console.log(braces('{a..c}', { expand: true }));     // ['a', 'b', 'c']
+console.log(braces.expand('{1..3}')); // ['1', '2', '3']
+console.log(braces.expand('a/{1..3}/b')); // ['a/1/b', 'a/2/b', 'a/3/b']
+console.log(braces('{a..c}', { expand: true })); // ['a', 'b', 'c']
 console.log(braces('foo/{a..c}', { expand: true })); // ['foo/a', 'foo/b', 'foo/c']
 
 // supports zero-padded ranges
-console.log(braces('a/{01..03}/b'));   //=> ['a/(0[1-3])/b']
+console.log(braces('a/{01..03}/b')); //=> ['a/(0[1-3])/b']
 console.log(braces('a/{001..300}/b')); //=> ['a/(0{2}[1-9]|0[1-9][0-9]|[12][0-9]{2}|300)/b']
 ```
 
@@ -178,12 +178,12 @@
 
 **Type**: `Number`
 
-**Default**: `65,536`
+**Default**: `10,000`
 
 **Description**: Limit the length of the input string. Useful when the input string is generated or your application allows users to pass a string, et cetera.
 
 ```js
-console.log(braces('a/{b,c}/d', { maxLength: 3 }));  //=> throws an error
+console.log(braces('a/{b,c}/d', { maxLength: 3 })); //=> throws an error
 ```
 
 ### options.expand
@@ -244,7 +244,7 @@
   transform(value, index) {
     // When non-numeric values are passed, "value" is a character code.
     return 'foo/' + String.fromCharCode(value) + '-' + index;
-  }
+  },
 });
 console.log(alpha);
 //=> [ 'x/foo/a-0/y', 'x/foo/b-1/y', 'x/foo/c-2/y', 'x/foo/d-3/y', 'x/foo/e-4/y' ]
@@ -257,9 +257,9 @@
   transform(value) {
     // when numeric values are passed, "value" is a number
     return 'foo/' + value * 2;
-  }
+  },
 });
-console.log(numeric); 
+console.log(numeric);
 //=> [ 'foo/2', 'foo/4', 'foo/6', 'foo/8', 'foo/10' ]
 ```
 
@@ -281,19 +281,19 @@
 const braces = require('braces');
 console.log(braces('a/b{1,3}/{x,y,z}'));
 //=> [ 'a/b(1|3)/(x|y|z)' ]
-console.log(braces('a/b{1,3}/{x,y,z}', {quantifiers: true}));
+console.log(braces('a/b{1,3}/{x,y,z}', { quantifiers: true }));
 //=> [ 'a/b{1,3}/(x|y|z)' ]
-console.log(braces('a/b{1,3}/{x,y,z}', {quantifiers: true, expand: true}));
+console.log(braces('a/b{1,3}/{x,y,z}', { quantifiers: true, expand: true }));
 //=> [ 'a/b{1,3}/x', 'a/b{1,3}/y', 'a/b{1,3}/z' ]
 ```
 
-### options.unescape
+### options.keepEscaping
 
 **Type**: `Boolean`
 
 **Default**: `undefined`
 
-**Description**: Strip backslashes that were used for escaping from the result.
+**Description**: Do not strip backslashes that were used for escaping from the result.
 
 ## What is "brace expansion"?
 
@@ -301,8 +301,8 @@
 
 In addition to "expansion", braces are also used for matching. In other words:
 
-* [brace expansion](#brace-expansion) is for generating new lists
-* [brace matching](#brace-matching) is for filtering existing lists
+- [brace expansion](#brace-expansion) is for generating new lists
+- [brace matching](#brace-matching) is for filtering existing lists
 
 <details>
 <summary><strong>More about brace expansion</strong> (click to expand)</summary>
@@ -382,9 +382,9 @@
 
 **"brace bombs"**
 
-* brace expansion can eat up a huge amount of processing resources
-* as brace patterns increase _linearly in size_, the system resources required to expand the pattern increase exponentially
-* users can accidentally (or intentially) exhaust your system's resources resulting in the equivalent of a DoS attack (bonus: no programming knowledge is required!)
+- brace expansion can eat up a huge amount of processing resources
+- as brace patterns increase _linearly in size_, the system resources required to expand the pattern increase exponentially
+- users can accidentally (or intentially) exhaust your system's resources resulting in the equivalent of a DoS attack (bonus: no programming knowledge is required!)
 
 For a more detailed explanation with examples, see the [geometric complexity](#geometric-complexity) section.
 
@@ -406,8 +406,8 @@
 But add an element to a set, and we get a n-fold Cartesian product with `O(n^c)` complexity:
 
 ```
-{1,2,3}{4,5,6}{7,8,9} => (3X3X3) => 147 148 149 157 158 159 167 168 169 247 248 
-                                    249 257 258 259 267 268 269 347 348 349 357 
+{1,2,3}{4,5,6}{7,8,9} => (3X3X3) => 147 148 149 157 158 159 167 168 169 247 248
+                                    249 257 258 259 267 268 269 347 348 349 357
                                     358 359 367 368 369
 ```
 
@@ -424,9 +424,9 @@
 
 Interested in learning more about brace expansion?
 
-* [linuxjournal/bash-brace-expansion](http://www.linuxjournal.com/content/bash-brace-expansion)
-* [rosettacode/Brace_expansion](https://rosettacode.org/wiki/Brace_expansion)
-* [cartesian product](https://en.wikipedia.org/wiki/Cartesian_product)
+- [linuxjournal/bash-brace-expansion](http://www.linuxjournal.com/content/bash-brace-expansion)
+- [rosettacode/Brace_expansion](https://rosettacode.org/wiki/Brace_expansion)
+- [cartesian product](https://en.wikipedia.org/wiki/Cartesian_product)
 
 </details>
 
@@ -444,25 +444,25 @@
 
 Minimatch gets exponentially slower as patterns increase in complexity, braces does not. The following results were generated using `braces()` and `minimatch.braceExpand()`, respectively.
 
-| **Pattern**                 | **braces**         | **[minimatch][]**            |
-| ---                         | ---                | ---                          |
-| `{1..9007199254740991}`[^1] | `298 B` (5ms 459μs)|  N/A (freezes)               |
-| `{1..1000000000000000}`     | `41 B` (1ms 15μs)  |  N/A (freezes)               |
-| `{1..100000000000000}`      | `40 B` (890μs)     |  N/A (freezes)               |
-| `{1..10000000000000}`       | `39 B` (2ms 49μs)  |  N/A (freezes)               |
-| `{1..1000000000000}`        | `38 B` (608μs)     |  N/A (freezes)               |
-| `{1..100000000000}`         | `37 B` (397μs)     |  N/A (freezes)               |
-| `{1..10000000000}`          | `35 B` (983μs)     |  N/A (freezes)               |
-| `{1..1000000000}`           | `34 B` (798μs)     |  N/A (freezes)               |
-| `{1..100000000}`            | `33 B` (733μs)     |  N/A (freezes)               |
-| `{1..10000000}`             | `32 B` (5ms 632μs) | `78.89 MB` (16s 388ms 569μs) |
-| `{1..1000000}`              | `31 B` (1ms 381μs) | `6.89 MB` (1s 496ms 887μs)   |
-| `{1..100000}`               | `30 B` (950μs)     | `588.89 kB` (146ms 921μs)    |
-| `{1..10000}`                | `29 B` (1ms 114μs) | `48.89 kB` (14ms 187μs)      |
-| `{1..1000}`                 | `28 B` (760μs)     | `3.89 kB` (1ms 453μs)        |
-| `{1..100}`                  | `22 B` (345μs)     | `291 B` (196μs)              |
-| `{1..10}`                   | `10 B` (533μs)     | `20 B` (37μs)                |
-| `{1..3}`                    | `7 B` (190μs)      | `5 B` (27μs)                 |
+| **Pattern**                 | **braces**          | **[minimatch][]**            |
+| --------------------------- | ------------------- | ---------------------------- |
+| `{1..9007199254740991}`[^1] | `298 B` (5ms 459μs) | N/A (freezes)                |
+| `{1..1000000000000000}`     | `41 B` (1ms 15μs)   | N/A (freezes)                |
+| `{1..100000000000000}`      | `40 B` (890μs)      | N/A (freezes)                |
+| `{1..10000000000000}`       | `39 B` (2ms 49μs)   | N/A (freezes)                |
+| `{1..1000000000000}`        | `38 B` (608μs)      | N/A (freezes)                |
+| `{1..100000000000}`         | `37 B` (397μs)      | N/A (freezes)                |
+| `{1..10000000000}`          | `35 B` (983μs)      | N/A (freezes)                |
+| `{1..1000000000}`           | `34 B` (798μs)      | N/A (freezes)                |
+| `{1..100000000}`            | `33 B` (733μs)      | N/A (freezes)                |
+| `{1..10000000}`             | `32 B` (5ms 632μs)  | `78.89 MB` (16s 388ms 569μs) |
+| `{1..1000000}`              | `31 B` (1ms 381μs)  | `6.89 MB` (1s 496ms 887μs)   |
+| `{1..100000}`               | `30 B` (950μs)      | `588.89 kB` (146ms 921μs)    |
+| `{1..10000}`                | `29 B` (1ms 114μs)  | `48.89 kB` (14ms 187μs)      |
+| `{1..1000}`                 | `28 B` (760μs)      | `3.89 kB` (1ms 453μs)        |
+| `{1..100}`                  | `22 B` (345μs)      | `291 B` (196μs)              |
+| `{1..10}`                   | `10 B` (533μs)      | `20 B` (37μs)                |
+| `{1..3}`                    | `7 B` (190μs)       | `5 B` (27μs)                 |
 
 ### Faster algorithms
 
@@ -471,7 +471,7 @@
 _(the following results were generated using `braces.expand()` and `minimatch.braceExpand()`, respectively)_
 
 | **Pattern**     | **braces**                  | **[minimatch][]**            |
-| ---             | ---                         | ---                          |
+| --------------- | --------------------------- | ---------------------------- |
 | `{1..10000000}` | `78.89 MB` (2s 698ms 642μs) | `78.89 MB` (18s 601ms 974μs) |
 | `{1..1000000}`  | `6.89 MB` (458ms 576μs)     | `6.89 MB` (1s 491ms 621μs)   |
 | `{1..100000}`   | `588.89 kB` (20ms 728μs)    | `588.89 kB` (156ms 919μs)    |
@@ -498,37 +498,30 @@
 Braces is more accurate, without sacrificing performance.
 
 ```bash
-# range (expanded)
-  braces x 29,040 ops/sec ±3.69% (91 runs sampled))
-  minimatch x 4,735 ops/sec ±1.28% (90 runs sampled)
-
-# range (optimized for regex)
-  braces x 382,878 ops/sec ±0.56% (94 runs sampled)
-  minimatch x 1,040 ops/sec ±0.44% (93 runs sampled)
-
-# nested ranges (expanded)
-  braces x 19,744 ops/sec ±2.27% (92 runs sampled))
-  minimatch x 4,579 ops/sec ±0.50% (93 runs sampled)
-
-# nested ranges (optimized for regex)
-  braces x 246,019 ops/sec ±2.02% (93 runs sampled)
-  minimatch x 1,028 ops/sec ±0.39% (94 runs sampled)
-
-# set (expanded) 
-  braces x 138,641 ops/sec ±0.53% (95 runs sampled)
-  minimatch x 219,582 ops/sec ±0.98% (94 runs sampled)
-
-# set (optimized for regex)
-  braces x 388,408 ops/sec ±0.41% (95 runs sampled)
-  minimatch x 44,724 ops/sec ±0.91% (89 runs sampled)
-
-# nested sets (expanded)
-  braces x 84,966 ops/sec ±0.48% (94 runs sampled)
-  minimatch x 140,720 ops/sec ±0.37% (95 runs sampled)
-
-# nested sets (optimized for regex)
-  braces x 263,340 ops/sec ±2.06% (92 runs sampled)
-  minimatch x 28,714 ops/sec ±0.40% (90 runs sampled)
+● expand - range (expanded)
+     braces x 53,167 ops/sec ±0.12% (102 runs sampled)
+  minimatch x 11,378 ops/sec ±0.10% (102 runs sampled)
+● expand - range (optimized for regex)
+     braces x 373,442 ops/sec ±0.04% (100 runs sampled)
+  minimatch x 3,262 ops/sec ±0.18% (100 runs sampled)
+● expand - nested ranges (expanded)
+     braces x 33,921 ops/sec ±0.09% (99 runs sampled)
+  minimatch x 10,855 ops/sec ±0.28% (100 runs sampled)
+● expand - nested ranges (optimized for regex)
+     braces x 287,479 ops/sec ±0.52% (98 runs sampled)
+  minimatch x 3,219 ops/sec ±0.28% (101 runs sampled)
+● expand - set (expanded)
+     braces x 238,243 ops/sec ±0.19% (97 runs sampled)
+  minimatch x 538,268 ops/sec ±0.31% (96 runs sampled)
+● expand - set (optimized for regex)
+     braces x 321,844 ops/sec ±0.10% (97 runs sampled)
+  minimatch x 140,600 ops/sec ±0.15% (100 runs sampled)
+● expand - nested sets (expanded)
+     braces x 165,371 ops/sec ±0.42% (96 runs sampled)
+  minimatch x 337,720 ops/sec ±0.28% (100 runs sampled)
+● expand - nested sets (optimized for regex)
+     braces x 242,948 ops/sec ±0.12% (99 runs sampled)
+  minimatch x 87,403 ops/sec ±0.79% (96 runs sampled)
 ```
 
 ## About
@@ -566,28 +559,28 @@
 
 ### Contributors
 
-| **Commits** | **Contributor** |  
-| --- | --- |  
-| 197 | [jonschlinkert](https://github.com/jonschlinkert) |  
-| 4   | [doowb](https://github.com/doowb) |  
-| 1   | [es128](https://github.com/es128) |  
-| 1   | [eush77](https://github.com/eush77) |  
-| 1   | [hemanth](https://github.com/hemanth) |  
-| 1   | [wtgtybhertgeghgtwtg](https://github.com/wtgtybhertgeghgtwtg) |  
+| **Commits** | **Contributor**                                               |
+| ----------- | ------------------------------------------------------------- |
+| 197         | [jonschlinkert](https://github.com/jonschlinkert)             |
+| 4           | [doowb](https://github.com/doowb)                             |
+| 1           | [es128](https://github.com/es128)                             |
+| 1           | [eush77](https://github.com/eush77)                           |
+| 1           | [hemanth](https://github.com/hemanth)                         |
+| 1           | [wtgtybhertgeghgtwtg](https://github.com/wtgtybhertgeghgtwtg) |
 
 ### Author
 
 **Jon Schlinkert**
 
-* [GitHub Profile](https://github.com/jonschlinkert)
-* [Twitter Profile](https://twitter.com/jonschlinkert)
-* [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)
+- [GitHub Profile](https://github.com/jonschlinkert)
+- [Twitter Profile](https://twitter.com/jonschlinkert)
+- [LinkedIn Profile](https://linkedin.com/in/jonschlinkert)
 
 ### License
 
 Copyright © 2019, [Jon Schlinkert](https://github.com/jonschlinkert).
 Released under the [MIT License](LICENSE).
 
-***
+---
 
-_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on April 08, 2019._
\ No newline at end of file
+_This file was generated by [verb-generate-readme](https://github.com/verbose/verb-generate-readme), v0.8.0, on April 08, 2019._
Index: node_modules/pg-protocol/dist/index.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/index.ts\"],\"names\":[],\"mappings\":\";;;AAAA,yCAA0D;AAUtC,8FAVK,wBAAa,OAUL;AATjC,6CAAwC;AAS/B,0FATA,sBAAS,OASA;AARlB,qCAAkD;AAElD,SAAgB,KAAK,CAAC,MAA6B,EAAE,QAAyB;IAC5E,MAAM,MAAM,GAAG,IAAI,eAAM,EAAE,CAAA;IAC3B,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,MAAc,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAA;IACrE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAA;AACpE,CAAC;AAJD,sBAIC\"}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/dist/index.js.map b/node_modules/pg-protocol/dist/index.js.map
--- a/node_modules/pg-protocol/dist/index.js.map	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/dist/index.js.map	(date 1753913035314)
@@ -1,1 +1,1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;AAAA,yCAA0D;AAUtC,8FAVK,wBAAa,OAUL;AATjC,6CAAwC;AAS/B,0FATA,sBAAS,OASA;AARlB,qCAAkD;AAElD,SAAgB,KAAK,CAAC,MAA6B,EAAE,QAAyB;IAC5E,MAAM,MAAM,GAAG,IAAI,eAAM,EAAE,CAAA;IAC3B,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,MAAc,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAA;IACrE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAA;AACpE,CAAC;AAJD,sBAIC"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;AAAA,yCAA0C;AAUtB,8FAVX,wBAAa,OAUW;AATjC,6CAAwC;AAS/B,0FATA,sBAAS,OASA;AARlB,qCAAkD;AAElD,SAAgB,KAAK,CAAC,MAA6B,EAAE,QAAyB;IAC5E,MAAM,MAAM,GAAG,IAAI,eAAM,EAAE,CAAA;IAC3B,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,MAAc,EAAE,EAAE,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,CAAA;IACrE,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC,CAAA;AACpE,CAAC;AAJD,sBAIC"}
\ No newline at end of file
Index: node_modules/braces/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nconst stringify = require('./lib/stringify');\r\nconst compile = require('./lib/compile');\r\nconst expand = require('./lib/expand');\r\nconst parse = require('./lib/parse');\r\n\r\n/**\r\n * Expand the given pattern or create a regex-compatible string.\r\n *\r\n * ```js\r\n * const braces = require('braces');\r\n * console.log(braces('{a,b,c}', { compile: true })); //=> ['(a|b|c)']\r\n * console.log(braces('{a,b,c}')); //=> ['a', 'b', 'c']\r\n * ```\r\n * @param {String} `str`\r\n * @param {Object} `options`\r\n * @return {String}\r\n * @api public\r\n */\r\n\r\nconst braces = (input, options = {}) => {\r\n  let output = [];\r\n\r\n  if (Array.isArray(input)) {\r\n    for (let pattern of input) {\r\n      let result = braces.create(pattern, options);\r\n      if (Array.isArray(result)) {\r\n        output.push(...result);\r\n      } else {\r\n        output.push(result);\r\n      }\r\n    }\r\n  } else {\r\n    output = [].concat(braces.create(input, options));\r\n  }\r\n\r\n  if (options && options.expand === true && options.nodupes === true) {\r\n    output = [...new Set(output)];\r\n  }\r\n  return output;\r\n};\r\n\r\n/**\r\n * Parse the given `str` with the given `options`.\r\n *\r\n * ```js\r\n * // braces.parse(pattern, [, options]);\r\n * const ast = braces.parse('a/{b,c}/d');\r\n * console.log(ast);\r\n * ```\r\n * @param {String} pattern Brace pattern to parse\r\n * @param {Object} options\r\n * @return {Object} Returns an AST\r\n * @api public\r\n */\r\n\r\nbraces.parse = (input, options = {}) => parse(input, options);\r\n\r\n/**\r\n * Creates a braces string from an AST, or an AST node.\r\n *\r\n * ```js\r\n * const braces = require('braces');\r\n * let ast = braces.parse('foo/{a,b}/bar');\r\n * console.log(stringify(ast.nodes[2])); //=> '{a,b}'\r\n * ```\r\n * @param {String} `input` Brace pattern or AST.\r\n * @param {Object} `options`\r\n * @return {Array} Returns an array of expanded values.\r\n * @api public\r\n */\r\n\r\nbraces.stringify = (input, options = {}) => {\r\n  if (typeof input === 'string') {\r\n    return stringify(braces.parse(input, options), options);\r\n  }\r\n  return stringify(input, options);\r\n};\r\n\r\n/**\r\n * Compiles a brace pattern into a regex-compatible, optimized string.\r\n * This method is called by the main [braces](#braces) function by default.\r\n *\r\n * ```js\r\n * const braces = require('braces');\r\n * console.log(braces.compile('a/{b,c}/d'));\r\n * //=> ['a/(b|c)/d']\r\n * ```\r\n * @param {String} `input` Brace pattern or AST.\r\n * @param {Object} `options`\r\n * @return {Array} Returns an array of expanded values.\r\n * @api public\r\n */\r\n\r\nbraces.compile = (input, options = {}) => {\r\n  if (typeof input === 'string') {\r\n    input = braces.parse(input, options);\r\n  }\r\n  return compile(input, options);\r\n};\r\n\r\n/**\r\n * Expands a brace pattern into an array. This method is called by the\r\n * main [braces](#braces) function when `options.expand` is true. Before\r\n * using this method it's recommended that you read the [performance notes](#performance))\r\n * and advantages of using [.compile](#compile) instead.\r\n *\r\n * ```js\r\n * const braces = require('braces');\r\n * console.log(braces.expand('a/{b,c}/d'));\r\n * //=> ['a/b/d', 'a/c/d'];\r\n * ```\r\n * @param {String} `pattern` Brace pattern\r\n * @param {Object} `options`\r\n * @return {Array} Returns an array of expanded values.\r\n * @api public\r\n */\r\n\r\nbraces.expand = (input, options = {}) => {\r\n  if (typeof input === 'string') {\r\n    input = braces.parse(input, options);\r\n  }\r\n\r\n  let result = expand(input, options);\r\n\r\n  // filter out empty strings if specified\r\n  if (options.noempty === true) {\r\n    result = result.filter(Boolean);\r\n  }\r\n\r\n  // filter out duplicates if specified\r\n  if (options.nodupes === true) {\r\n    result = [...new Set(result)];\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n/**\r\n * Processes a brace pattern and returns either an expanded array\r\n * (if `options.expand` is true), a highly optimized regex-compatible string.\r\n * This method is called by the main [braces](#braces) function.\r\n *\r\n * ```js\r\n * const braces = require('braces');\r\n * console.log(braces.create('user-{200..300}/project-{a,b,c}-{1..10}'))\r\n * //=> 'user-(20[0-9]|2[1-9][0-9]|300)/project-(a|b|c)-([1-9]|10)'\r\n * ```\r\n * @param {String} `pattern` Brace pattern\r\n * @param {Object} `options`\r\n * @return {Array} Returns an array of expanded values.\r\n * @api public\r\n */\r\n\r\nbraces.create = (input, options = {}) => {\r\n  if (input === '' || input.length < 3) {\r\n    return [input];\r\n  }\r\n\r\n return options.expand !== true\r\n    ? braces.compile(input, options)\r\n    : braces.expand(input, options);\r\n};\r\n\r\n/**\r\n * Expose \"braces\"\r\n */\r\n\r\nmodule.exports = braces;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/braces/index.js b/node_modules/braces/index.js
--- a/node_modules/braces/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/braces/index.js	(date 1753913035846)
@@ -23,8 +23,8 @@
   let output = [];
 
   if (Array.isArray(input)) {
-    for (let pattern of input) {
-      let result = braces.create(pattern, options);
+    for (const pattern of input) {
+      const result = braces.create(pattern, options);
       if (Array.isArray(result)) {
         output.push(...result);
       } else {
@@ -158,7 +158,7 @@
     return [input];
   }
 
- return options.expand !== true
+  return options.expand !== true
     ? braces.compile(input, options)
     : braces.expand(input, options);
 };
Index: node_modules/pg-protocol/dist/parser.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"version\":3,\"file\":\"parser.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/parser.ts\"],\"names\":[],\"mappings\":\";;;AACA,yCA0BmB;AACnB,mDAA8C;AAG9C,8CAA8C;AAC9C,MAAM,WAAW,GAAG,CAAC,CAAA;AACrB,mEAAmE;AACnE,qCAAqC;AACrC,MAAM,UAAU,GAAG,CAAC,CAAA;AAEpB,MAAM,aAAa,GAAG,WAAW,GAAG,UAAU,CAAA;AAO9C,MAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;AAiCzC,MAAa,MAAM;IAOjB,YAAY,IAAoB;QANxB,WAAM,GAAW,WAAW,CAAA;QAC5B,iBAAY,GAAW,CAAC,CAAA;QACxB,iBAAY,GAAW,CAAC,CAAA;QACxB,WAAM,GAAG,IAAI,4BAAY,EAAE,CAAA;QAIjC,IAAI,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,MAAK,QAAQ,EAAE;YAC3B,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAA;SACjD;QACD,IAAI,CAAC,IAAI,GAAG,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,KAAI,MAAM,CAAA;IAClC,CAAC;IAEM,KAAK,CAAC,MAAc,EAAE,QAAyB;QACpD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;QACxB,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAA;QAC9D,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAA;QAC9B,OAAO,MAAM,GAAG,aAAa,IAAI,gBAAgB,EAAE;YACjD,uDAAuD;YACvD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;YAChC,4EAA4E;YAC5E,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,WAAW,CAAC,CAAA;YAC7D,MAAM,iBAAiB,GAAG,WAAW,GAAG,MAAM,CAAA;YAC9C,IAAI,iBAAiB,GAAG,MAAM,IAAI,gBAAgB,EAAE;gBAClD,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,aAAa,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;gBACpF,QAAQ,CAAC,OAAO,CAAC,CAAA;gBACjB,MAAM,IAAI,iBAAiB,CAAA;aAC5B;iBAAM;gBACL,MAAK;aACN;SACF;QACD,IAAI,MAAM,KAAK,gBAAgB,EAAE;YAC/B,6BAA6B;YAC7B,IAAI,CAAC,MAAM,GAAG,WAAW,CAAA;YACzB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAA;YACrB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAA;SACtB;aAAM;YACL,wCAAwC;YACxC,IAAI,CAAC,YAAY,GAAG,gBAAgB,GAAG,MAAM,CAAA;YAC7C,IAAI,CAAC,YAAY,GAAG,MAAM,CAAA;SAC3B;IACH,CAAC;IAEO,WAAW,CAAC,MAAc;QAChC,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;YACzB,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,UAAU,CAAA;YACvD,MAAM,aAAa,GAAG,SAAS,GAAG,IAAI,CAAC,YAAY,CAAA;YACnD,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;gBAC1C,wDAAwD;gBACxD,IAAI,SAAiB,CAAA;gBACrB,IAAI,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,EAAE;oBACjF,kGAAkG;oBAClG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAA;iBACxB;qBAAM;oBACL,+BAA+B;oBAC/B,IAAI,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAA;oBAChD,OAAO,SAAS,IAAI,eAAe,EAAE;wBACnC,eAAe,IAAI,CAAC,CAAA;qBACrB;oBACD,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,CAAA;iBAChD;gBACD,2CAA2C;gBAC3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,CAAA;gBACxF,IAAI,CAAC,MAAM,GAAG,SAAS,CAAA;gBACvB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAA;aACtB;YACD,+CAA+C;YAC/C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,CAAA;YAC/D,IAAI,CAAC,YAAY,GAAG,SAAS,CAAA;SAC9B;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;YACpB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAA;YACrB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,UAAU,CAAA;SACtC;IACH,CAAC;IAEO,YAAY,CAAC,MAAc,EAAE,IAAY,EAAE,MAAc,EAAE,KAAa;QAC9E,QAAQ,IAAI,EAAE;YACZ;gBACE,OAAO,uBAAY,CAAA;YACrB;gBACE,OAAO,wBAAa,CAAA;YACtB;gBACE,OAAO,wBAAa,CAAA;YACtB;gBACE,OAAO,iBAAM,CAAA;YACf;gBACE,OAAO,0BAAe,CAAA;YACxB;gBACE,OAAO,mBAAQ,CAAA;YACjB;gBACE,OAAO,2BAAgB,CAAA;YACzB;gBACE,OAAO,qBAAU,CAAA;YACnB;gBACE,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YACxD;gBACE,OAAO,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAChE;gBACE,OAAO,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAC9D;gBACE,OAAO,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAC7D;gBACE,OAAO,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAChE;gBACE,OAAO,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAChE;gBACE,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YACxD;gBACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;YAC/D;gBACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAA;YAChE;gBACE,OAAO,IAAI,CAAC,0BAA0B,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAC/D;gBACE,OAAO,IAAI,CAAC,gCAAgC,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YACrE;gBACE,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YACvD;gBACE,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YACxD;gBACE,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAClD;gBACE,OAAO,IAAI,wBAAa,CAAC,6BAA6B,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;SAC/F;IACH,CAAC;IAEO,yBAAyB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QAC7E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACpC,OAAO,IAAI,+BAAoB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IACjD,CAAC;IAEO,2BAA2B,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QAC/E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QAClC,OAAO,IAAI,iCAAsB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;IACjD,CAAC;IAEO,aAAa,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QACjE,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAA;QACxD,OAAO,IAAI,0BAAe,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC3C,CAAC;IAEO,kBAAkB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QACtE,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,CAAC,CAAA;IACvE,CAAC;IAEO,mBAAmB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QACvE,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,iBAAiB,CAAC,CAAA;IACxE,CAAC;IAEO,gBAAgB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa,EAAE,WAAwB;QAC9F,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;QACzC,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACvC,MAAM,OAAO,GAAG,IAAI,uBAAY,CAAC,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAA;QAC5E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YACpC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;SAC7C;QACD,OAAO,OAAO,CAAA;IAChB,CAAC;IAEO,wBAAwB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QAC5E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QACrC,OAAO,IAAI,sCAA2B,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,CAAA;IAC7E,CAAC;IAEO,0BAA0B,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QAC9E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACtC,MAAM,OAAO,GAAG,IAAI,gCAAqB,CAAC,MAAM,EAAE,UAAU,CAAC,CAAA;QAC7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;YACnC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAA;SACtC;QACD,OAAO,OAAO,CAAA;IAChB,CAAC;IAEO,UAAU;QAChB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QAClC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACnC,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACpC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACtC,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACxC,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QAC5C,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAA;QAC1D,OAAO,IAAI,gBAAK,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,gBAAgB,EAAE,IAAI,CAAC,CAAA;IAC7F,CAAC;IAEO,gCAAgC,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QACpF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QAC1C,MAAM,OAAO,GAAG,IAAI,sCAA2B,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;QACvE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;YACvC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;SAC7C;QACD,OAAO,OAAO,CAAA;IAChB,CAAC;IAEO,mBAAmB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QACvE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACtC,MAAM,MAAM,GAAU,IAAI,KAAK,CAAC,UAAU,CAAC,CAAA;QAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;YACnC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;YAC/B,uDAAuD;YACvD,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;SACxD;QACD,OAAO,IAAI,yBAAc,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IAC3C,CAAC;IAEO,2BAA2B,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QAC/E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QAClC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QACnC,OAAO,IAAI,iCAAsB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;IACxD,CAAC;IAEO,mBAAmB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QACvE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACrC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACrC,OAAO,IAAI,gCAAqB,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAA;IAChE,CAAC;IAEM,2BAA2B,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QAC9E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QAChC,qCAAqC;QACrC,MAAM,OAAO,GAAyB;YACpC,IAAI,EAAE,kBAAkB;YACxB,MAAM;SACP,CAAA;QAED,QAAQ,IAAI,EAAE;YACZ,KAAK,CAAC,EAAE,mBAAmB;gBACzB,MAAK;YACP,KAAK,CAAC,EAAE,kCAAkC;gBACxC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;oBACxB,OAAO,CAAC,IAAI,GAAG,iCAAiC,CAAA;iBACjD;gBACD,MAAK;YACP,KAAK,CAAC,EAAE,4BAA4B;gBAClC,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;oBACzB,OAAO,CAAC,IAAI,GAAG,2BAA2B,CAAA;oBAC1C,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;oBACjC,OAAO,IAAI,oCAAyB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;iBACnD;gBACD,MAAK;YACP,KAAK,EAAE,EAAE,qBAAqB;gBAC5B,OAAO,CAAC,IAAI,GAAG,oBAAoB,CAAA;gBACnC,OAAO,CAAC,UAAU,GAAG,EAAE,CAAA;gBACvB,IAAI,SAAiB,CAAA;gBACrB,GAAG;oBACD,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;oBAEjC,IAAI,SAAS,EAAE;wBACb,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;qBACnC;iBACF,QAAQ,SAAS,EAAC;gBACnB,MAAK;YACP,KAAK,EAAE,EAAE,6BAA6B;gBACpC,OAAO,CAAC,IAAI,GAAG,4BAA4B,CAAA;gBAC3C,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;gBAC7C,MAAK;YACP,KAAK,EAAE,EAAE,0BAA0B;gBACjC,OAAO,CAAC,IAAI,GAAG,yBAAyB,CAAA;gBACxC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;gBAC7C,MAAK;YACP;gBACE,MAAM,IAAI,KAAK,CAAC,wCAAwC,GAAG,IAAI,CAAC,CAAA;SACnE;QACD,OAAO,OAAO,CAAA;IAChB,CAAC;IAEO,iBAAiB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa,EAAE,IAAiB;QACxF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,MAAM,GAA2B,EAAE,CAAA;QACzC,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACrC,OAAO,SAAS,KAAK,IAAI,EAAE;YACzB,MAAM,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;YACzC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;SAClC;QAED,MAAM,YAAY,GAAG,MAAM,CAAC,CAAC,CAAA;QAE7B,MAAM,OAAO,GACX,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,wBAAa,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,wBAAa,CAAC,YAAY,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;QAE7G,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAA;QAC3B,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAA;QACvB,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAA;QACzB,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAA;QACvB,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAA;QAC3B,OAAO,CAAC,gBAAgB,GAAG,MAAM,CAAC,CAAC,CAAA;QACnC,OAAO,CAAC,aAAa,GAAG,MAAM,CAAC,CAAC,CAAA;QAChC,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAA;QACxB,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAA;QACzB,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAA;QACxB,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAA;QACzB,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAA;QAC3B,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC,CAAA;QAC7B,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAA;QACvB,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAA;QACvB,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAA;QAC1B,OAAO,OAAO,CAAA;IAChB,CAAC;CACF;AAvTD,wBAuTC\"}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/dist/parser.js.map b/node_modules/pg-protocol/dist/parser.js.map
--- a/node_modules/pg-protocol/dist/parser.js.map	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/dist/parser.js.map	(date 1753913035317)
@@ -1,1 +1,1 @@
-{"version":3,"file":"parser.js","sourceRoot":"","sources":["../src/parser.ts"],"names":[],"mappings":";;;AACA,yCA0BmB;AACnB,mDAA8C;AAG9C,8CAA8C;AAC9C,MAAM,WAAW,GAAG,CAAC,CAAA;AACrB,mEAAmE;AACnE,qCAAqC;AACrC,MAAM,UAAU,GAAG,CAAC,CAAA;AAEpB,MAAM,aAAa,GAAG,WAAW,GAAG,UAAU,CAAA;AAO9C,MAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;AAiCzC,MAAa,MAAM;IAOjB,YAAY,IAAoB;QANxB,WAAM,GAAW,WAAW,CAAA;QAC5B,iBAAY,GAAW,CAAC,CAAA;QACxB,iBAAY,GAAW,CAAC,CAAA;QACxB,WAAM,GAAG,IAAI,4BAAY,EAAE,CAAA;QAIjC,IAAI,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,MAAK,QAAQ,EAAE;YAC3B,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAA;SACjD;QACD,IAAI,CAAC,IAAI,GAAG,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,KAAI,MAAM,CAAA;IAClC,CAAC;IAEM,KAAK,CAAC,MAAc,EAAE,QAAyB;QACpD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;QACxB,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAA;QAC9D,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAA;QAC9B,OAAO,MAAM,GAAG,aAAa,IAAI,gBAAgB,EAAE;YACjD,uDAAuD;YACvD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;YAChC,4EAA4E;YAC5E,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,WAAW,CAAC,CAAA;YAC7D,MAAM,iBAAiB,GAAG,WAAW,GAAG,MAAM,CAAA;YAC9C,IAAI,iBAAiB,GAAG,MAAM,IAAI,gBAAgB,EAAE;gBAClD,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,aAAa,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;gBACpF,QAAQ,CAAC,OAAO,CAAC,CAAA;gBACjB,MAAM,IAAI,iBAAiB,CAAA;aAC5B;iBAAM;gBACL,MAAK;aACN;SACF;QACD,IAAI,MAAM,KAAK,gBAAgB,EAAE;YAC/B,6BAA6B;YAC7B,IAAI,CAAC,MAAM,GAAG,WAAW,CAAA;YACzB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAA;YACrB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAA;SACtB;aAAM;YACL,wCAAwC;YACxC,IAAI,CAAC,YAAY,GAAG,gBAAgB,GAAG,MAAM,CAAA;YAC7C,IAAI,CAAC,YAAY,GAAG,MAAM,CAAA;SAC3B;IACH,CAAC;IAEO,WAAW,CAAC,MAAc;QAChC,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;YACzB,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,UAAU,CAAA;YACvD,MAAM,aAAa,GAAG,SAAS,GAAG,IAAI,CAAC,YAAY,CAAA;YACnD,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;gBAC1C,wDAAwD;gBACxD,IAAI,SAAiB,CAAA;gBACrB,IAAI,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,EAAE;oBACjF,kGAAkG;oBAClG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAA;iBACxB;qBAAM;oBACL,+BAA+B;oBAC/B,IAAI,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAA;oBAChD,OAAO,SAAS,IAAI,eAAe,EAAE;wBACnC,eAAe,IAAI,CAAC,CAAA;qBACrB;oBACD,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,CAAA;iBAChD;gBACD,2CAA2C;gBAC3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,CAAA;gBACxF,IAAI,CAAC,MAAM,GAAG,SAAS,CAAA;gBACvB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAA;aACtB;YACD,+CAA+C;YAC/C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,CAAA;YAC/D,IAAI,CAAC,YAAY,GAAG,SAAS,CAAA;SAC9B;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;YACpB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAA;YACrB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,UAAU,CAAA;SACtC;IACH,CAAC;IAEO,YAAY,CAAC,MAAc,EAAE,IAAY,EAAE,MAAc,EAAE,KAAa;QAC9E,QAAQ,IAAI,EAAE;YACZ;gBACE,OAAO,uBAAY,CAAA;YACrB;gBACE,OAAO,wBAAa,CAAA;YACtB;gBACE,OAAO,wBAAa,CAAA;YACtB;gBACE,OAAO,iBAAM,CAAA;YACf;gBACE,OAAO,0BAAe,CAAA;YACxB;gBACE,OAAO,mBAAQ,CAAA;YACjB;gBACE,OAAO,2BAAgB,CAAA;YACzB;gBACE,OAAO,qBAAU,CAAA;YACnB;gBACE,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YACxD;gBACE,OAAO,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAChE;gBACE,OAAO,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAC9D;gBACE,OAAO,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAC7D;gBACE,OAAO,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAChE;gBACE,OAAO,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAChE;gBACE,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YACxD;gBACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;YAC/D;gBACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAA;YAChE;gBACE,OAAO,IAAI,CAAC,0BAA0B,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAC/D;gBACE,OAAO,IAAI,CAAC,gCAAgC,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YACrE;gBACE,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YACvD;gBACE,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YACxD;gBACE,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAClD;gBACE,OAAO,IAAI,wBAAa,CAAC,6BAA6B,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;SAC/F;IACH,CAAC;IAEO,yBAAyB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QAC7E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACpC,OAAO,IAAI,+BAAoB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IACjD,CAAC;IAEO,2BAA2B,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QAC/E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QAClC,OAAO,IAAI,iCAAsB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;IACjD,CAAC;IAEO,aAAa,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QACjE,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAA;QACxD,OAAO,IAAI,0BAAe,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC3C,CAAC;IAEO,kBAAkB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QACtE,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,CAAC,CAAA;IACvE,CAAC;IAEO,mBAAmB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QACvE,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,iBAAiB,CAAC,CAAA;IACxE,CAAC;IAEO,gBAAgB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa,EAAE,WAAwB;QAC9F,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;QACzC,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACvC,MAAM,OAAO,GAAG,IAAI,uBAAY,CAAC,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAA;QAC5E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YACpC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;SAC7C;QACD,OAAO,OAAO,CAAA;IAChB,CAAC;IAEO,wBAAwB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QAC5E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QACrC,OAAO,IAAI,sCAA2B,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,CAAA;IAC7E,CAAC;IAEO,0BAA0B,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QAC9E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACtC,MAAM,OAAO,GAAG,IAAI,gCAAqB,CAAC,MAAM,EAAE,UAAU,CAAC,CAAA;QAC7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;YACnC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAA;SACtC;QACD,OAAO,OAAO,CAAA;IAChB,CAAC;IAEO,UAAU;QAChB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QAClC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACnC,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACpC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACtC,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACxC,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QAC5C,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAA;QAC1D,OAAO,IAAI,gBAAK,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,gBAAgB,EAAE,IAAI,CAAC,CAAA;IAC7F,CAAC;IAEO,gCAAgC,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QACpF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QAC1C,MAAM,OAAO,GAAG,IAAI,sCAA2B,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;QACvE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;YACvC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;SAC7C;QACD,OAAO,OAAO,CAAA;IAChB,CAAC;IAEO,mBAAmB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QACvE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACtC,MAAM,MAAM,GAAU,IAAI,KAAK,CAAC,UAAU,CAAC,CAAA;QAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;YACnC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;YAC/B,uDAAuD;YACvD,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;SACxD;QACD,OAAO,IAAI,yBAAc,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IAC3C,CAAC;IAEO,2BAA2B,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QAC/E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QAClC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QACnC,OAAO,IAAI,iCAAsB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;IACxD,CAAC;IAEO,mBAAmB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QACvE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACrC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACrC,OAAO,IAAI,gCAAqB,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAA;IAChE,CAAC;IAEM,2BAA2B,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QAC9E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QAChC,qCAAqC;QACrC,MAAM,OAAO,GAAyB;YACpC,IAAI,EAAE,kBAAkB;YACxB,MAAM;SACP,CAAA;QAED,QAAQ,IAAI,EAAE;YACZ,KAAK,CAAC,EAAE,mBAAmB;gBACzB,MAAK;YACP,KAAK,CAAC,EAAE,kCAAkC;gBACxC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;oBACxB,OAAO,CAAC,IAAI,GAAG,iCAAiC,CAAA;iBACjD;gBACD,MAAK;YACP,KAAK,CAAC,EAAE,4BAA4B;gBAClC,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;oBACzB,OAAO,CAAC,IAAI,GAAG,2BAA2B,CAAA;oBAC1C,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;oBACjC,OAAO,IAAI,oCAAyB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;iBACnD;gBACD,MAAK;YACP,KAAK,EAAE,EAAE,qBAAqB;gBAC5B,OAAO,CAAC,IAAI,GAAG,oBAAoB,CAAA;gBACnC,OAAO,CAAC,UAAU,GAAG,EAAE,CAAA;gBACvB,IAAI,SAAiB,CAAA;gBACrB,GAAG;oBACD,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;oBAEjC,IAAI,SAAS,EAAE;wBACb,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;qBACnC;iBACF,QAAQ,SAAS,EAAC;gBACnB,MAAK;YACP,KAAK,EAAE,EAAE,6BAA6B;gBACpC,OAAO,CAAC,IAAI,GAAG,4BAA4B,CAAA;gBAC3C,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;gBAC7C,MAAK;YACP,KAAK,EAAE,EAAE,0BAA0B;gBACjC,OAAO,CAAC,IAAI,GAAG,yBAAyB,CAAA;gBACxC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;gBAC7C,MAAK;YACP;gBACE,MAAM,IAAI,KAAK,CAAC,wCAAwC,GAAG,IAAI,CAAC,CAAA;SACnE;QACD,OAAO,OAAO,CAAA;IAChB,CAAC;IAEO,iBAAiB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa,EAAE,IAAiB;QACxF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,MAAM,GAA2B,EAAE,CAAA;QACzC,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACrC,OAAO,SAAS,KAAK,IAAI,EAAE;YACzB,MAAM,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;YACzC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;SAClC;QAED,MAAM,YAAY,GAAG,MAAM,CAAC,CAAC,CAAA;QAE7B,MAAM,OAAO,GACX,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,wBAAa,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,wBAAa,CAAC,YAAY,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;QAE7G,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAA;QAC3B,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAA;QACvB,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAA;QACzB,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAA;QACvB,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAA;QAC3B,OAAO,CAAC,gBAAgB,GAAG,MAAM,CAAC,CAAC,CAAA;QACnC,OAAO,CAAC,aAAa,GAAG,MAAM,CAAC,CAAC,CAAA;QAChC,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAA;QACxB,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAA;QACzB,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAA;QACxB,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAA;QACzB,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAA;QAC3B,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC,CAAA;QAC7B,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAA;QACvB,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAA;QACvB,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAA;QAC1B,OAAO,OAAO,CAAA;IAChB,CAAC;CACF;AAvTD,wBAuTC"}
\ No newline at end of file
+{"version":3,"file":"parser.js","sourceRoot":"","sources":["../src/parser.ts"],"names":[],"mappings":";;;AACA,yCA0BmB;AACnB,mDAA8C;AAE9C,8CAA8C;AAC9C,MAAM,WAAW,GAAG,CAAC,CAAA;AACrB,mEAAmE;AACnE,qCAAqC;AACrC,MAAM,UAAU,GAAG,CAAC,CAAA;AAEpB,MAAM,aAAa,GAAG,WAAW,GAAG,UAAU,CAAA;AAO9C,MAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;AAiCzC,MAAa,MAAM;IAOjB,YAAY,IAAoB;QANxB,WAAM,GAAW,WAAW,CAAA;QAC5B,iBAAY,GAAW,CAAC,CAAA;QACxB,iBAAY,GAAW,CAAC,CAAA;QACxB,WAAM,GAAG,IAAI,4BAAY,EAAE,CAAA;QAIjC,IAAI,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,MAAK,QAAQ,EAAE;YAC3B,MAAM,IAAI,KAAK,CAAC,+BAA+B,CAAC,CAAA;SACjD;QACD,IAAI,CAAC,IAAI,GAAG,CAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,IAAI,KAAI,MAAM,CAAA;IAClC,CAAC;IAEM,KAAK,CAAC,MAAc,EAAE,QAAyB;QACpD,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;QACxB,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAA;QAC9D,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,CAAA;QAC9B,OAAO,MAAM,GAAG,aAAa,IAAI,gBAAgB,EAAE;YACjD,uDAAuD;YACvD,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAA;YAChC,4EAA4E;YAC5E,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,GAAG,WAAW,CAAC,CAAA;YAC7D,MAAM,iBAAiB,GAAG,WAAW,GAAG,MAAM,CAAA;YAC9C,IAAI,iBAAiB,GAAG,MAAM,IAAI,gBAAgB,EAAE;gBAClD,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,aAAa,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;gBACpF,QAAQ,CAAC,OAAO,CAAC,CAAA;gBACjB,MAAM,IAAI,iBAAiB,CAAA;aAC5B;iBAAM;gBACL,MAAK;aACN;SACF;QACD,IAAI,MAAM,KAAK,gBAAgB,EAAE;YAC/B,6BAA6B;YAC7B,IAAI,CAAC,MAAM,GAAG,WAAW,CAAA;YACzB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAA;YACrB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAA;SACtB;aAAM;YACL,wCAAwC;YACxC,IAAI,CAAC,YAAY,GAAG,gBAAgB,GAAG,MAAM,CAAA;YAC7C,IAAI,CAAC,YAAY,GAAG,MAAM,CAAA;SAC3B;IACH,CAAC;IAEO,WAAW,CAAC,MAAc;QAChC,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,EAAE;YACzB,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,UAAU,CAAA;YACvD,MAAM,aAAa,GAAG,SAAS,GAAG,IAAI,CAAC,YAAY,CAAA;YACnD,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;gBAC1C,wDAAwD;gBACxD,IAAI,SAAiB,CAAA;gBACrB,IAAI,SAAS,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,EAAE;oBACjF,kGAAkG;oBAClG,SAAS,GAAG,IAAI,CAAC,MAAM,CAAA;iBACxB;qBAAM;oBACL,+BAA+B;oBAC/B,IAAI,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,CAAC,CAAA;oBAChD,OAAO,SAAS,IAAI,eAAe,EAAE;wBACnC,eAAe,IAAI,CAAC,CAAA;qBACrB;oBACD,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC,CAAA;iBAChD;gBACD,2CAA2C;gBAC3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,CAAA;gBACxF,IAAI,CAAC,MAAM,GAAG,SAAS,CAAA;gBACvB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAA;aACtB;YACD,+CAA+C;YAC/C,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,CAAA;YAC/D,IAAI,CAAC,YAAY,GAAG,SAAS,CAAA;SAC9B;aAAM;YACL,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;YACpB,IAAI,CAAC,YAAY,GAAG,CAAC,CAAA;YACrB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,UAAU,CAAA;SACtC;IACH,CAAC;IAEO,YAAY,CAAC,MAAc,EAAE,IAAY,EAAE,MAAc,EAAE,KAAa;QAC9E,QAAQ,IAAI,EAAE;YACZ;gBACE,OAAO,uBAAY,CAAA;YACrB;gBACE,OAAO,wBAAa,CAAA;YACtB;gBACE,OAAO,wBAAa,CAAA;YACtB;gBACE,OAAO,iBAAM,CAAA;YACf;gBACE,OAAO,0BAAe,CAAA;YACxB;gBACE,OAAO,mBAAQ,CAAA;YACjB;gBACE,OAAO,2BAAgB,CAAA;YACzB;gBACE,OAAO,qBAAU,CAAA;YACnB;gBACE,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YACxD;gBACE,OAAO,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAChE;gBACE,OAAO,IAAI,CAAC,yBAAyB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAC9D;gBACE,OAAO,IAAI,CAAC,wBAAwB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAC7D;gBACE,OAAO,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAChE;gBACE,OAAO,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAChE;gBACE,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YACxD;gBACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,CAAA;YAC/D;gBACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAA;YAChE;gBACE,OAAO,IAAI,CAAC,0BAA0B,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAC/D;gBACE,OAAO,IAAI,CAAC,gCAAgC,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YACrE;gBACE,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YACvD;gBACE,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YACxD;gBACE,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,CAAC,CAAA;YAClD;gBACE,OAAO,IAAI,wBAAa,CAAC,6BAA6B,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,CAAA;SAC/F;IACH,CAAC;IAEO,yBAAyB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QAC7E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACpC,OAAO,IAAI,+BAAoB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IACjD,CAAC;IAEO,2BAA2B,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QAC/E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QAClC,OAAO,IAAI,iCAAsB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;IACjD,CAAC;IAEO,aAAa,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QACjE,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAA;QACxD,OAAO,IAAI,0BAAe,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;IAC3C,CAAC;IAEO,kBAAkB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QACtE,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,gBAAgB,CAAC,CAAA;IACvE,CAAC;IAEO,mBAAmB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QACvE,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,iBAAiB,CAAC,CAAA;IACxE,CAAC;IAEO,gBAAgB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa,EAAE,WAAwB;QAC9F,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,KAAK,CAAC,CAAA;QACzC,MAAM,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACvC,MAAM,OAAO,GAAG,IAAI,uBAAY,CAAC,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,WAAW,CAAC,CAAA;QAC5E,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,EAAE,EAAE;YACpC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;SAC7C;QACD,OAAO,OAAO,CAAA;IAChB,CAAC;IAEO,wBAAwB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QAC5E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QACrC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QACrC,OAAO,IAAI,sCAA2B,CAAC,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,CAAC,CAAA;IAC7E,CAAC;IAEO,0BAA0B,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QAC9E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACtC,MAAM,OAAO,GAAG,IAAI,gCAAqB,CAAC,MAAM,EAAE,UAAU,CAAC,CAAA;QAC7D,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;YACnC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,UAAU,EAAE,CAAA;SACtC;QACD,OAAO,OAAO,CAAA;IAChB,CAAC;IAEO,UAAU;QAChB,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QAClC,MAAM,OAAO,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAA;QACpC,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACpC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAA;QACvC,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACxC,MAAM,gBAAgB,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QAC5C,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAA;QAC1D,OAAO,IAAI,gBAAK,CAAC,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAE,UAAU,EAAE,YAAY,EAAE,gBAAgB,EAAE,IAAI,CAAC,CAAA;IAC7F,CAAC;IAEO,gCAAgC,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QACpF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QAC1C,MAAM,OAAO,GAAG,IAAI,sCAA2B,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;QACvE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,EAAE,CAAC,EAAE,EAAE;YACvC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;SAC7C;QACD,OAAO,OAAO,CAAA;IAChB,CAAC;IAEO,mBAAmB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QACvE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACtC,MAAM,MAAM,GAAU,IAAI,KAAK,CAAC,UAAU,CAAC,CAAA;QAC3C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,EAAE,CAAC,EAAE,EAAE;YACnC,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;YAC/B,uDAAuD;YACvD,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;SACxD;QACD,OAAO,IAAI,yBAAc,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;IAC3C,CAAC;IAEO,2BAA2B,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QAC/E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QAClC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;QACnC,OAAO,IAAI,iCAAsB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;IACxD,CAAC;IAEO,mBAAmB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QACvE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACrC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QACrC,OAAO,IAAI,gCAAqB,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAA;IAChE,CAAC;IAEM,2BAA2B,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa;QAC9E,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAA;QAChC,qCAAqC;QACrC,MAAM,OAAO,GAAyB;YACpC,IAAI,EAAE,kBAAkB;YACxB,MAAM;SACP,CAAA;QAED,QAAQ,IAAI,EAAE;YACZ,KAAK,CAAC,EAAE,mBAAmB;gBACzB,MAAK;YACP,KAAK,CAAC,EAAE,kCAAkC;gBACxC,IAAI,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;oBACxB,OAAO,CAAC,IAAI,GAAG,iCAAiC,CAAA;iBACjD;gBACD,MAAK;YACP,KAAK,CAAC,EAAE,4BAA4B;gBAClC,IAAI,OAAO,CAAC,MAAM,KAAK,EAAE,EAAE;oBACzB,OAAO,CAAC,IAAI,GAAG,2BAA2B,CAAA;oBAC1C,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA;oBACjC,OAAO,IAAI,oCAAyB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;iBACnD;gBACD,MAAK;YACP,KAAK,EAAE,EAAE,qBAAqB;gBAC5B;oBACE,OAAO,CAAC,IAAI,GAAG,oBAAoB,CAAA;oBACnC,OAAO,CAAC,UAAU,GAAG,EAAE,CAAA;oBACvB,IAAI,SAAiB,CAAA;oBACrB,GAAG;wBACD,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;wBACjC,IAAI,SAAS,EAAE;4BACb,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;yBACnC;qBACF,QAAQ,SAAS,EAAC;iBACpB;gBACD,MAAK;YACP,KAAK,EAAE,EAAE,6BAA6B;gBACpC,OAAO,CAAC,IAAI,GAAG,4BAA4B,CAAA;gBAC3C,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;gBAC7C,MAAK;YACP,KAAK,EAAE,EAAE,0BAA0B;gBACjC,OAAO,CAAC,IAAI,GAAG,yBAAyB,CAAA;gBACxC,OAAO,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;gBAC7C,MAAK;YACP;gBACE,MAAM,IAAI,KAAK,CAAC,wCAAwC,GAAG,IAAI,CAAC,CAAA;SACnE;QACD,OAAO,OAAO,CAAA;IAChB,CAAC;IAEO,iBAAiB,CAAC,MAAc,EAAE,MAAc,EAAE,KAAa,EAAE,IAAiB;QACxF,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QACpC,MAAM,MAAM,GAA2B,EAAE,CAAA;QACzC,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACrC,OAAO,SAAS,KAAK,IAAI,EAAE;YACzB,MAAM,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAA;YACzC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;SAClC;QAED,MAAM,YAAY,GAAG,MAAM,CAAC,CAAC,CAAA;QAE7B,MAAM,OAAO,GACX,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,wBAAa,CAAC,MAAM,EAAE,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,wBAAa,CAAC,YAAY,EAAE,MAAM,EAAE,IAAI,CAAC,CAAA;QAE7G,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAA;QAC3B,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAA;QACvB,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAA;QACzB,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAA;QACvB,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAA;QAC3B,OAAO,CAAC,gBAAgB,GAAG,MAAM,CAAC,CAAC,CAAA;QACnC,OAAO,CAAC,aAAa,GAAG,MAAM,CAAC,CAAC,CAAA;QAChC,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAA;QACxB,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAA;QACzB,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,CAAC,CAAA;QACxB,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC,CAAA;QACzB,OAAO,CAAC,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAA;QAC3B,OAAO,CAAC,UAAU,GAAG,MAAM,CAAC,CAAC,CAAA;QAC7B,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAA;QACvB,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,CAAC,CAAA;QACvB,OAAO,CAAC,OAAO,GAAG,MAAM,CAAC,CAAC,CAAA;QAC1B,OAAO,OAAO,CAAA;IAChB,CAAC;CACF;AAxTD,wBAwTC"}
\ No newline at end of file
Index: node_modules/braces/LICENSE
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>The MIT License (MIT)\r\n\r\nCopyright (c) 2014-2018, Jon Schlinkert.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/braces/LICENSE b/node_modules/braces/LICENSE
--- a/node_modules/braces/LICENSE	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/braces/LICENSE	(date 1753913035831)
@@ -1,6 +1,6 @@
 The MIT License (MIT)
 
-Copyright (c) 2014-2018, Jon Schlinkert.
+Copyright (c) 2014-present, Jon Schlinkert.
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
Index: node_modules/pg-protocol/dist/outbound-serializer.test.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"version\":3,\"file\":\"outbound-serializer.test.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/outbound-serializer.test.ts\"],\"names\":[],\"mappings\":\";;;;;AAAA,oDAA2B;AAC3B,6CAAwC;AACxC,wEAA8C;AAE9C,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,wBAAwB,EAAE;QAC3B,MAAM,MAAM,GAAG,sBAAS,CAAC,OAAO,CAAC;YAC/B,IAAI,EAAE,OAAO;YACb,QAAQ,EAAE,MAAM;SACjB,CAAC,CAAA;QACF,gBAAM,CAAC,SAAS,CACd,MAAM,EACN,IAAI,qBAAU,EAAE;aACb,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,UAAU,CAAC,MAAM,CAAC;aAClB,UAAU,CAAC,OAAO,CAAC;aACnB,UAAU,CAAC,UAAU,CAAC;aACtB,UAAU,CAAC,MAAM,CAAC;aAClB,UAAU,CAAC,iBAAiB,CAAC;aAC7B,UAAU,CAAC,MAAM,CAAC;aAClB,UAAU,CAAC,EAAE,CAAC;aACd,IAAI,CAAC,IAAI,CAAC,CACd,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,yBAAyB,EAAE;QAC5B,MAAM,MAAM,GAAG,sBAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;QACtC,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;IAC5E,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,4BAA4B,EAAE;QAC/B,MAAM,MAAM,GAAG,sBAAS,CAAC,UAAU,EAAE,CAAA;QACrC,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC/D,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IACpC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,2CAA2C,EAAE;QAC9C,MAAM,MAAM,GAAG,sBAAS,CAAC,8BAA8B,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;QACvE,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;IAC7G,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,wCAAwC,EAAE;QAC3C,MAAM,MAAM,GAAG,sBAAS,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAA;QAC5D,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,qBAAU,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;IAC9E,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,sBAAsB,EAAE;QACzB,IAAI,GAAG,GAAG,oBAAoB,CAAA;QAC9B,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QACnC,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;IAC5E,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,EAAE,CAAC,sBAAsB,EAAE;YACzB,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAA;YAC7C,IAAI,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAC1F,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,uCAAuC,EAAE;YAC1C,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,CAAC;gBAC7B,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,oBAAoB;gBAC1B,KAAK,EAAE,EAAE;aACV,CAAC,CAAA;YACF,IAAI,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAC/G,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,0BAA0B,EAAE;YAC7B,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,CAAC;gBAC7B,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,oCAAoC;gBAC1C,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aACpB,CAAC,CAAA;YACF,IAAI,QAAQ,GAAG,IAAI,qBAAU,EAAE;iBAC5B,UAAU,CAAC,OAAO,CAAC;iBACnB,UAAU,CAAC,oCAAoC,CAAC;iBAChD,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAClB,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,eAAe,EAAE;QACxB,EAAE,CAAC,gBAAgB,EAAE;YACnB,MAAM,MAAM,GAAG,sBAAS,CAAC,IAAI,EAAE,CAAA;YAE/B,IAAI,cAAc,GAAG,IAAI,qBAAU,EAAE;iBAClC,UAAU,CAAC,EAAE,CAAC;iBACd,UAAU,CAAC,EAAE,CAAC;iBACd,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAClB,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;QAC1C,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,0CAA0C,EAAE;YAC7C,MAAM,MAAM,GAAG,sBAAS,CAAC,IAAI,CAAC;gBAC5B,MAAM,EAAE,MAAM;gBACd,SAAS,EAAE,KAAK;gBAChB,MAAM,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC;aAClC,CAAC,CAAA;YACF,IAAI,cAAc,GAAG,IAAI,qBAAU,EAAE;iBAClC,UAAU,CAAC,MAAM,CAAC,CAAC,cAAc;iBACjC,UAAU,CAAC,KAAK,CAAC,CAAC,iBAAiB;iBACnC,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACrB,QAAQ,CAAC,CAAC,CAAC;iBACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACtB,QAAQ,CAAC,CAAC,CAAC,CAAC;iBACZ,QAAQ,CAAC,CAAC,CAAC;iBACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACxB,QAAQ,CAAC,CAAC,CAAC;iBACX,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAClB,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;QAC1C,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,yBAAyB,EAAE;QAC5B,MAAM,MAAM,GAAG,sBAAS,CAAC,IAAI,CAAC;YAC5B,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC;YACjC,WAAW,EAAE,GAAG,EAAE,CAAC,IAAI;SACxB,CAAC,CAAA;QACF,IAAI,cAAc,GAAG,IAAI,qBAAU,EAAE;aAClC,UAAU,CAAC,MAAM,CAAC,CAAC,cAAc;aACjC,UAAU,CAAC,KAAK,CAAC,CAAC,iBAAiB;aACnC,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC,CAAC;aACZ,QAAQ,CAAC,CAAC,CAAC,CAAC;aACZ,QAAQ,CAAC,CAAC,CAAC,CAAC;aACZ,QAAQ,CAAC,CAAC,CAAC,CAAC;aACZ,QAAQ,CAAC,CAAC,CAAC;aACX,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;QAClB,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;IAC1C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,gDAAgD,EAAE;QACnD,MAAM,MAAM,GAAG,sBAAS,CAAC,IAAI,CAAC;YAC5B,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;SACvD,CAAC,CAAA;QACF,IAAI,cAAc,GAAG,IAAI,qBAAU,EAAE;aAClC,UAAU,CAAC,MAAM,CAAC,CAAC,cAAc;aACjC,UAAU,CAAC,KAAK,CAAC,CAAC,iBAAiB;aACnC,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc;aAC1B,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;aACrB,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;aACrB,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;aACrB,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;aACrB,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACrB,QAAQ,CAAC,CAAC,CAAC;aACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACtB,QAAQ,CAAC,CAAC,CAAC,CAAC;aACZ,QAAQ,CAAC,CAAC,CAAC;aACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;aACjC,QAAQ,CAAC,CAAC,CAAC;aACX,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;QAClB,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;IAC1C,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,wBAAwB,EAAE;QACjC,EAAE,CAAC,qCAAqC,EAAE;YACxC,MAAM,MAAM,GAAG,sBAAS,CAAC,OAAO,EAAE,CAAA;YAClC,IAAI,cAAc,GAAG,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAChF,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;QAC1C,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,iCAAiC,EAAE;YACpC,MAAM,MAAM,GAAG,sBAAS,CAAC,OAAO,CAAC;gBAC/B,MAAM,EAAE,oBAAoB;gBAC5B,IAAI,EAAE,GAAG;aACV,CAAC,CAAA;YACF,IAAI,cAAc,GAAG,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YACpG,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;QAC1C,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,sBAAsB,EAAE;QACzB,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,EAAE,CAAA;QAChC,IAAI,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;QAC/C,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IACpC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,qBAAqB,EAAE;QACxB,MAAM,MAAM,GAAG,sBAAS,CAAC,IAAI,EAAE,CAAA;QAC/B,IAAI,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;QAC/C,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IACpC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,oBAAoB,EAAE;QACvB,MAAM,MAAM,GAAG,sBAAS,CAAC,GAAG,EAAE,CAAA;QAC9B,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QAC9C,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IACpC,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,yBAAyB,EAAE;QAClC,EAAE,CAAC,oBAAoB,EAAE;YACvB,MAAM,MAAM,GAAG,sBAAS,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;YAC9D,IAAI,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAC/E,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,yBAAyB,EAAE;YAC5B,MAAM,MAAM,GAAG,sBAAS,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAA;YAChD,IAAI,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAC3E,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,sBAAsB,EAAE;QAC/B,EAAE,CAAC,oBAAoB,EAAE;YACvB,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;YAC3D,IAAI,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAC/E,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,yBAAyB,EAAE;YAC5B,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAA;YAC7C,IAAI,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAC3E,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,eAAe,EAAE;QACxB,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;YAC9B,MAAM,MAAM,GAAG,sBAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;YACzD,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAC7E,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,kBAAkB,EAAE,GAAG,EAAE;YAC1B,MAAM,MAAM,GAAG,sBAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;YACzC,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YACpE,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,kBAAkB,EAAE,GAAG,EAAE;YAC1B,MAAM,MAAM,GAAG,sBAAS,CAAC,QAAQ,EAAE,CAAA;YACnC,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YACjD,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE;QAC/B,MAAM,MAAM,GAAG,sBAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QACrC,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAClG,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IACpC,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA\"}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/dist/outbound-serializer.test.js.map b/node_modules/pg-protocol/dist/outbound-serializer.test.js.map
--- a/node_modules/pg-protocol/dist/outbound-serializer.test.js.map	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/dist/outbound-serializer.test.js.map	(date 1753913035316)
@@ -1,1 +1,1 @@
-{"version":3,"file":"outbound-serializer.test.js","sourceRoot":"","sources":["../src/outbound-serializer.test.ts"],"names":[],"mappings":";;;;;AAAA,oDAA2B;AAC3B,6CAAwC;AACxC,wEAA8C;AAE9C,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,wBAAwB,EAAE;QAC3B,MAAM,MAAM,GAAG,sBAAS,CAAC,OAAO,CAAC;YAC/B,IAAI,EAAE,OAAO;YACb,QAAQ,EAAE,MAAM;SACjB,CAAC,CAAA;QACF,gBAAM,CAAC,SAAS,CACd,MAAM,EACN,IAAI,qBAAU,EAAE;aACb,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,UAAU,CAAC,MAAM,CAAC;aAClB,UAAU,CAAC,OAAO,CAAC;aACnB,UAAU,CAAC,UAAU,CAAC;aACtB,UAAU,CAAC,MAAM,CAAC;aAClB,UAAU,CAAC,iBAAiB,CAAC;aAC7B,UAAU,CAAC,MAAM,CAAC;aAClB,UAAU,CAAC,EAAE,CAAC;aACd,IAAI,CAAC,IAAI,CAAC,CACd,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,yBAAyB,EAAE;QAC5B,MAAM,MAAM,GAAG,sBAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;QACtC,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;IAC5E,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,4BAA4B,EAAE;QAC/B,MAAM,MAAM,GAAG,sBAAS,CAAC,UAAU,EAAE,CAAA;QACrC,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC/D,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IACpC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,2CAA2C,EAAE;QAC9C,MAAM,MAAM,GAAG,sBAAS,CAAC,8BAA8B,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;QACvE,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;IAC7G,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,wCAAwC,EAAE;QAC3C,MAAM,MAAM,GAAG,sBAAS,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAA;QAC5D,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,qBAAU,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;IAC9E,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,sBAAsB,EAAE;QACzB,IAAI,GAAG,GAAG,oBAAoB,CAAA;QAC9B,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QACnC,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;IAC5E,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,EAAE,CAAC,sBAAsB,EAAE;YACzB,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAA;YAC7C,IAAI,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAC1F,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,uCAAuC,EAAE;YAC1C,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,CAAC;gBAC7B,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,oBAAoB;gBAC1B,KAAK,EAAE,EAAE;aACV,CAAC,CAAA;YACF,IAAI,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAC/G,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,0BAA0B,EAAE;YAC7B,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,CAAC;gBAC7B,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,oCAAoC;gBAC1C,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aACpB,CAAC,CAAA;YACF,IAAI,QAAQ,GAAG,IAAI,qBAAU,EAAE;iBAC5B,UAAU,CAAC,OAAO,CAAC;iBACnB,UAAU,CAAC,oCAAoC,CAAC;iBAChD,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAClB,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,eAAe,EAAE;QACxB,EAAE,CAAC,gBAAgB,EAAE;YACnB,MAAM,MAAM,GAAG,sBAAS,CAAC,IAAI,EAAE,CAAA;YAE/B,IAAI,cAAc,GAAG,IAAI,qBAAU,EAAE;iBAClC,UAAU,CAAC,EAAE,CAAC;iBACd,UAAU,CAAC,EAAE,CAAC;iBACd,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAClB,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;QAC1C,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,0CAA0C,EAAE;YAC7C,MAAM,MAAM,GAAG,sBAAS,CAAC,IAAI,CAAC;gBAC5B,MAAM,EAAE,MAAM;gBACd,SAAS,EAAE,KAAK;gBAChB,MAAM,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC;aAClC,CAAC,CAAA;YACF,IAAI,cAAc,GAAG,IAAI,qBAAU,EAAE;iBAClC,UAAU,CAAC,MAAM,CAAC,CAAC,cAAc;iBACjC,UAAU,CAAC,KAAK,CAAC,CAAC,iBAAiB;iBACnC,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACrB,QAAQ,CAAC,CAAC,CAAC;iBACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACtB,QAAQ,CAAC,CAAC,CAAC,CAAC;iBACZ,QAAQ,CAAC,CAAC,CAAC;iBACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACxB,QAAQ,CAAC,CAAC,CAAC;iBACX,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAClB,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;QAC1C,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,yBAAyB,EAAE;QAC5B,MAAM,MAAM,GAAG,sBAAS,CAAC,IAAI,CAAC;YAC5B,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC;YACjC,WAAW,EAAE,GAAG,EAAE,CAAC,IAAI;SACxB,CAAC,CAAA;QACF,IAAI,cAAc,GAAG,IAAI,qBAAU,EAAE;aAClC,UAAU,CAAC,MAAM,CAAC,CAAC,cAAc;aACjC,UAAU,CAAC,KAAK,CAAC,CAAC,iBAAiB;aACnC,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC,CAAC;aACZ,QAAQ,CAAC,CAAC,CAAC,CAAC;aACZ,QAAQ,CAAC,CAAC,CAAC,CAAC;aACZ,QAAQ,CAAC,CAAC,CAAC,CAAC;aACZ,QAAQ,CAAC,CAAC,CAAC;aACX,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;QAClB,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;IAC1C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,gDAAgD,EAAE;QACnD,MAAM,MAAM,GAAG,sBAAS,CAAC,IAAI,CAAC;YAC5B,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;SACvD,CAAC,CAAA;QACF,IAAI,cAAc,GAAG,IAAI,qBAAU,EAAE;aAClC,UAAU,CAAC,MAAM,CAAC,CAAC,cAAc;aACjC,UAAU,CAAC,KAAK,CAAC,CAAC,iBAAiB;aACnC,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc;aAC1B,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;aACrB,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;aACrB,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;aACrB,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;aACrB,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACrB,QAAQ,CAAC,CAAC,CAAC;aACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACtB,QAAQ,CAAC,CAAC,CAAC,CAAC;aACZ,QAAQ,CAAC,CAAC,CAAC;aACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;aACjC,QAAQ,CAAC,CAAC,CAAC;aACX,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;QAClB,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;IAC1C,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,wBAAwB,EAAE;QACjC,EAAE,CAAC,qCAAqC,EAAE;YACxC,MAAM,MAAM,GAAG,sBAAS,CAAC,OAAO,EAAE,CAAA;YAClC,IAAI,cAAc,GAAG,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAChF,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;QAC1C,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,iCAAiC,EAAE;YACpC,MAAM,MAAM,GAAG,sBAAS,CAAC,OAAO,CAAC;gBAC/B,MAAM,EAAE,oBAAoB;gBAC5B,IAAI,EAAE,GAAG;aACV,CAAC,CAAA;YACF,IAAI,cAAc,GAAG,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YACpG,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;QAC1C,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,sBAAsB,EAAE;QACzB,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,EAAE,CAAA;QAChC,IAAI,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;QAC/C,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IACpC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,qBAAqB,EAAE;QACxB,MAAM,MAAM,GAAG,sBAAS,CAAC,IAAI,EAAE,CAAA;QAC/B,IAAI,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;QAC/C,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IACpC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,oBAAoB,EAAE;QACvB,MAAM,MAAM,GAAG,sBAAS,CAAC,GAAG,EAAE,CAAA;QAC9B,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QAC9C,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IACpC,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,yBAAyB,EAAE;QAClC,EAAE,CAAC,oBAAoB,EAAE;YACvB,MAAM,MAAM,GAAG,sBAAS,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;YAC9D,IAAI,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAC/E,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,yBAAyB,EAAE;YAC5B,MAAM,MAAM,GAAG,sBAAS,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAA;YAChD,IAAI,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAC3E,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,sBAAsB,EAAE;QAC/B,EAAE,CAAC,oBAAoB,EAAE;YACvB,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;YAC3D,IAAI,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAC/E,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,yBAAyB,EAAE;YAC5B,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAA;YAC7C,IAAI,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAC3E,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,eAAe,EAAE;QACxB,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;YAC9B,MAAM,MAAM,GAAG,sBAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;YACzD,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAC7E,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,kBAAkB,EAAE,GAAG,EAAE;YAC1B,MAAM,MAAM,GAAG,sBAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;YACzC,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YACpE,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,kBAAkB,EAAE,GAAG,EAAE;YAC1B,MAAM,MAAM,GAAG,sBAAS,CAAC,QAAQ,EAAE,CAAA;YACnC,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YACjD,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE;QAC/B,MAAM,MAAM,GAAG,sBAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QACrC,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAClG,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IACpC,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
+{"version":3,"file":"outbound-serializer.test.js","sourceRoot":"","sources":["../src/outbound-serializer.test.ts"],"names":[],"mappings":";;;;;AAAA,oDAA2B;AAC3B,6CAAwC;AACxC,wEAA8C;AAE9C,QAAQ,CAAC,YAAY,EAAE,GAAG,EAAE;IAC1B,EAAE,CAAC,wBAAwB,EAAE;QAC3B,MAAM,MAAM,GAAG,sBAAS,CAAC,OAAO,CAAC;YAC/B,IAAI,EAAE,OAAO;YACb,QAAQ,EAAE,MAAM;SACjB,CAAC,CAAA;QACF,gBAAM,CAAC,SAAS,CACd,MAAM,EACN,IAAI,qBAAU,EAAE;aACb,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,UAAU,CAAC,MAAM,CAAC;aAClB,UAAU,CAAC,OAAO,CAAC;aACnB,UAAU,CAAC,UAAU,CAAC;aACtB,UAAU,CAAC,MAAM,CAAC;aAClB,UAAU,CAAC,iBAAiB,CAAC;aAC7B,UAAU,CAAC,MAAM,CAAC;aAClB,UAAU,CAAC,EAAE,CAAC;aACd,IAAI,CAAC,IAAI,CAAC,CACd,CAAA;IACH,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,yBAAyB,EAAE;QAC5B,MAAM,MAAM,GAAG,sBAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAA;QACtC,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;IAC5E,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,4BAA4B,EAAE;QAC/B,MAAM,MAAM,GAAG,sBAAS,CAAC,UAAU,EAAE,CAAA;QACrC,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC/D,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IACpC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,2CAA2C,EAAE;QAC9C,MAAM,MAAM,GAAG,sBAAS,CAAC,8BAA8B,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;QACvE,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;IAC7G,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,wCAAwC,EAAE;QAC3C,MAAM,MAAM,GAAG,sBAAS,CAAC,2BAA2B,CAAC,MAAM,CAAC,CAAA;QAC5D,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,qBAAU,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;IAC9E,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,sBAAsB,EAAE;QACzB,MAAM,GAAG,GAAG,oBAAoB,CAAA;QAChC,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QACnC,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;IAC5E,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,eAAe,EAAE,GAAG,EAAE;QAC7B,EAAE,CAAC,sBAAsB,EAAE;YACzB,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAA;YAC7C,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAC5F,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,uCAAuC,EAAE;YAC1C,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,CAAC;gBAC7B,IAAI,EAAE,MAAM;gBACZ,IAAI,EAAE,oBAAoB;gBAC1B,KAAK,EAAE,EAAE;aACV,CAAC,CAAA;YACF,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YACjH,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,0BAA0B,EAAE;YAC7B,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,CAAC;gBAC7B,IAAI,EAAE,OAAO;gBACb,IAAI,EAAE,oCAAoC;gBAC1C,KAAK,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;aACpB,CAAC,CAAA;YACF,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE;iBAC9B,UAAU,CAAC,OAAO,CAAC;iBACnB,UAAU,CAAC,oCAAoC,CAAC;iBAChD,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAClB,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,eAAe,EAAE;QACxB,EAAE,CAAC,gBAAgB,EAAE;YACnB,MAAM,MAAM,GAAG,sBAAS,CAAC,IAAI,EAAE,CAAA;YAE/B,MAAM,cAAc,GAAG,IAAI,qBAAU,EAAE;iBACpC,UAAU,CAAC,EAAE,CAAC;iBACd,UAAU,CAAC,EAAE,CAAC;iBACd,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAClB,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;QAC1C,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,0CAA0C,EAAE;YAC7C,MAAM,MAAM,GAAG,sBAAS,CAAC,IAAI,CAAC;gBAC5B,MAAM,EAAE,MAAM;gBACd,SAAS,EAAE,KAAK;gBAChB,MAAM,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC;aAClC,CAAC,CAAA;YACF,MAAM,cAAc,GAAG,IAAI,qBAAU,EAAE;iBACpC,UAAU,CAAC,MAAM,CAAC,CAAC,cAAc;iBACjC,UAAU,CAAC,KAAK,CAAC,CAAC,iBAAiB;iBACnC,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;iBACrB,QAAQ,CAAC,CAAC,CAAC;iBACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACtB,QAAQ,CAAC,CAAC,CAAC,CAAC;iBACZ,QAAQ,CAAC,CAAC,CAAC;iBACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;iBACxB,QAAQ,CAAC,CAAC,CAAC;iBACX,QAAQ,CAAC,CAAC,CAAC;iBACX,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAClB,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;QAC1C,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,yBAAyB,EAAE;QAC5B,MAAM,MAAM,GAAG,sBAAS,CAAC,IAAI,CAAC;YAC5B,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC;YACjC,WAAW,EAAE,GAAG,EAAE,CAAC,IAAI;SACxB,CAAC,CAAA;QACF,MAAM,cAAc,GAAG,IAAI,qBAAU,EAAE;aACpC,UAAU,CAAC,MAAM,CAAC,CAAC,cAAc;aACjC,UAAU,CAAC,KAAK,CAAC,CAAC,iBAAiB;aACnC,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC,CAAC;aACZ,QAAQ,CAAC,CAAC,CAAC,CAAC;aACZ,QAAQ,CAAC,CAAC,CAAC,CAAC;aACZ,QAAQ,CAAC,CAAC,CAAC,CAAC;aACZ,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;QAClB,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;IAC1C,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,gDAAgD,EAAE;QACnD,MAAM,MAAM,GAAG,sBAAS,CAAC,IAAI,CAAC;YAC5B,MAAM,EAAE,MAAM;YACd,SAAS,EAAE,KAAK;YAChB,MAAM,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;SACvD,CAAC,CAAA;QACF,MAAM,cAAc,GAAG,IAAI,qBAAU,EAAE;aACpC,UAAU,CAAC,MAAM,CAAC,CAAC,cAAc;aACjC,UAAU,CAAC,KAAK,CAAC,CAAC,iBAAiB;aACnC,QAAQ,CAAC,CAAC,CAAC,CAAC,cAAc;aAC1B,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;aACrB,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;aACrB,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;aACrB,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;aACrB,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;aACrB,QAAQ,CAAC,CAAC,CAAC;aACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACtB,QAAQ,CAAC,CAAC,CAAC,CAAC;aACZ,QAAQ,CAAC,CAAC,CAAC;aACX,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;aACjC,QAAQ,CAAC,CAAC,CAAC;aACX,QAAQ,CAAC,CAAC,CAAC;aACX,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;QAClB,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;IAC1C,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,wBAAwB,EAAE;QACjC,EAAE,CAAC,qCAAqC,EAAE;YACxC,MAAM,MAAM,GAAG,sBAAS,CAAC,OAAO,EAAE,CAAA;YAClC,MAAM,cAAc,GAAG,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAClF,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;QAC1C,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,iCAAiC,EAAE;YACpC,MAAM,MAAM,GAAG,sBAAS,CAAC,OAAO,CAAC;gBAC/B,MAAM,EAAE,oBAAoB;gBAC5B,IAAI,EAAE,GAAG;aACV,CAAC,CAAA;YACF,MAAM,cAAc,GAAG,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,oBAAoB,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YACtG,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,cAAc,CAAC,CAAA;QAC1C,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,sBAAsB,EAAE;QACzB,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,EAAE,CAAA;QAChC,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;QACjD,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IACpC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,qBAAqB,EAAE;QACxB,MAAM,MAAM,GAAG,sBAAS,CAAC,IAAI,EAAE,CAAA;QAC/B,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;QACjD,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IACpC,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,oBAAoB,EAAE;QACvB,MAAM,MAAM,GAAG,sBAAS,CAAC,GAAG,EAAE,CAAA;QAC9B,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAA;QAChD,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IACpC,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,yBAAyB,EAAE;QAClC,EAAE,CAAC,oBAAoB,EAAE;YACvB,MAAM,MAAM,GAAG,sBAAS,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;YAC9D,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YACjF,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,yBAAyB,EAAE;YAC5B,MAAM,MAAM,GAAG,sBAAS,CAAC,QAAQ,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAA;YAChD,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAC7E,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,sBAAsB,EAAE;QAC/B,EAAE,CAAC,oBAAoB,EAAE;YACvB,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAA;YAC3D,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YACjF,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,yBAAyB,EAAE;YAC5B,MAAM,MAAM,GAAG,sBAAS,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,CAAC,CAAA;YAC7C,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAC7E,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,eAAe,EAAE;QACxB,EAAE,CAAC,sBAAsB,EAAE,GAAG,EAAE;YAC9B,MAAM,MAAM,GAAG,sBAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;YACzD,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YAC7E,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,kBAAkB,EAAE,GAAG,EAAE;YAC1B,MAAM,MAAM,GAAG,sBAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAA;YACzC,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YACpE,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,kBAAkB,EAAE,GAAG,EAAE;YAC1B,MAAM,MAAM,GAAG,sBAAS,CAAC,QAAQ,EAAE,CAAA;YACnC,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;YACjD,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,EAAE,CAAC,uBAAuB,EAAE,GAAG,EAAE;QAC/B,MAAM,MAAM,GAAG,sBAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;QACrC,MAAM,QAAQ,GAAG,IAAI,qBAAU,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAClG,gBAAM,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAA;IACpC,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
Index: node_modules/braces/lib/expand.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nconst fill = require('fill-range');\r\nconst stringify = require('./stringify');\r\nconst utils = require('./utils');\r\n\r\nconst append = (queue = '', stash = '', enclose = false) => {\r\n  let result = [];\r\n\r\n  queue = [].concat(queue);\r\n  stash = [].concat(stash);\r\n\r\n  if (!stash.length) return queue;\r\n  if (!queue.length) {\r\n    return enclose ? utils.flatten(stash).map(ele => `{${ele}}`) : stash;\r\n  }\r\n\r\n  for (let item of queue) {\r\n    if (Array.isArray(item)) {\r\n      for (let value of item) {\r\n        result.push(append(value, stash, enclose));\r\n      }\r\n    } else {\r\n      for (let ele of stash) {\r\n        if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;\r\n        result.push(Array.isArray(ele) ? append(item, ele, enclose) : (item + ele));\r\n      }\r\n    }\r\n  }\r\n  return utils.flatten(result);\r\n};\r\n\r\nconst expand = (ast, options = {}) => {\r\n  let rangeLimit = options.rangeLimit === void 0 ? 1000 : options.rangeLimit;\r\n\r\n  let walk = (node, parent = {}) => {\r\n    node.queue = [];\r\n\r\n    let p = parent;\r\n    let q = parent.queue;\r\n\r\n    while (p.type !== 'brace' && p.type !== 'root' && p.parent) {\r\n      p = p.parent;\r\n      q = p.queue;\r\n    }\r\n\r\n    if (node.invalid || node.dollar) {\r\n      q.push(append(q.pop(), stringify(node, options)));\r\n      return;\r\n    }\r\n\r\n    if (node.type === 'brace' && node.invalid !== true && node.nodes.length === 2) {\r\n      q.push(append(q.pop(), ['{}']));\r\n      return;\r\n    }\r\n\r\n    if (node.nodes && node.ranges > 0) {\r\n      let args = utils.reduce(node.nodes);\r\n\r\n      if (utils.exceedsLimit(...args, options.step, rangeLimit)) {\r\n        throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');\r\n      }\r\n\r\n      let range = fill(...args, options);\r\n      if (range.length === 0) {\r\n        range = stringify(node, options);\r\n      }\r\n\r\n      q.push(append(q.pop(), range));\r\n      node.nodes = [];\r\n      return;\r\n    }\r\n\r\n    let enclose = utils.encloseBrace(node);\r\n    let queue = node.queue;\r\n    let block = node;\r\n\r\n    while (block.type !== 'brace' && block.type !== 'root' && block.parent) {\r\n      block = block.parent;\r\n      queue = block.queue;\r\n    }\r\n\r\n    for (let i = 0; i < node.nodes.length; i++) {\r\n      let child = node.nodes[i];\r\n\r\n      if (child.type === 'comma' && node.type === 'brace') {\r\n        if (i === 1) queue.push('');\r\n        queue.push('');\r\n        continue;\r\n      }\r\n\r\n      if (child.type === 'close') {\r\n        q.push(append(q.pop(), queue, enclose));\r\n        continue;\r\n      }\r\n\r\n      if (child.value && child.type !== 'open') {\r\n        queue.push(append(queue.pop(), child.value));\r\n        continue;\r\n      }\r\n\r\n      if (child.nodes) {\r\n        walk(child, node);\r\n      }\r\n    }\r\n\r\n    return queue;\r\n  };\r\n\r\n  return utils.flatten(walk(ast));\r\n};\r\n\r\nmodule.exports = expand;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/braces/lib/expand.js b/node_modules/braces/lib/expand.js
--- a/node_modules/braces/lib/expand.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/braces/lib/expand.js	(date 1753913035843)
@@ -5,7 +5,7 @@
 const utils = require('./utils');
 
 const append = (queue = '', stash = '', enclose = false) => {
-  let result = [];
+  const result = [];
 
   queue = [].concat(queue);
   stash = [].concat(stash);
@@ -15,15 +15,15 @@
     return enclose ? utils.flatten(stash).map(ele => `{${ele}}`) : stash;
   }
 
-  for (let item of queue) {
+  for (const item of queue) {
     if (Array.isArray(item)) {
-      for (let value of item) {
+      for (const value of item) {
         result.push(append(value, stash, enclose));
       }
     } else {
       for (let ele of stash) {
         if (enclose === true && typeof ele === 'string') ele = `{${ele}}`;
-        result.push(Array.isArray(ele) ? append(item, ele, enclose) : (item + ele));
+        result.push(Array.isArray(ele) ? append(item, ele, enclose) : item + ele);
       }
     }
   }
@@ -31,9 +31,9 @@
 };
 
 const expand = (ast, options = {}) => {
-  let rangeLimit = options.rangeLimit === void 0 ? 1000 : options.rangeLimit;
+  const rangeLimit = options.rangeLimit === undefined ? 1000 : options.rangeLimit;
 
-  let walk = (node, parent = {}) => {
+  const walk = (node, parent = {}) => {
     node.queue = [];
 
     let p = parent;
@@ -55,7 +55,7 @@
     }
 
     if (node.nodes && node.ranges > 0) {
-      let args = utils.reduce(node.nodes);
+      const args = utils.reduce(node.nodes);
 
       if (utils.exceedsLimit(...args, options.step, rangeLimit)) {
         throw new RangeError('expanded array length exceeds range limit. Use options.rangeLimit to increase or disable the limit.');
@@ -71,7 +71,7 @@
       return;
     }
 
-    let enclose = utils.encloseBrace(node);
+    const enclose = utils.encloseBrace(node);
     let queue = node.queue;
     let block = node;
 
@@ -81,7 +81,7 @@
     }
 
     for (let i = 0; i < node.nodes.length; i++) {
-      let child = node.nodes[i];
+      const child = node.nodes[i];
 
       if (child.type === 'comma' && node.type === 'brace') {
         if (i === 1) queue.push('');
Index: node_modules/braces/lib/compile.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nconst fill = require('fill-range');\r\nconst utils = require('./utils');\r\n\r\nconst compile = (ast, options = {}) => {\r\n  let walk = (node, parent = {}) => {\r\n    let invalidBlock = utils.isInvalidBrace(parent);\r\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\r\n    let invalid = invalidBlock === true || invalidNode === true;\r\n    let prefix = options.escapeInvalid === true ? '\\\\' : '';\r\n    let output = '';\r\n\r\n    if (node.isOpen === true) {\r\n      return prefix + node.value;\r\n    }\r\n    if (node.isClose === true) {\r\n      return prefix + node.value;\r\n    }\r\n\r\n    if (node.type === 'open') {\r\n      return invalid ? (prefix + node.value) : '(';\r\n    }\r\n\r\n    if (node.type === 'close') {\r\n      return invalid ? (prefix + node.value) : ')';\r\n    }\r\n\r\n    if (node.type === 'comma') {\r\n      return node.prev.type === 'comma' ? '' : (invalid ? node.value : '|');\r\n    }\r\n\r\n    if (node.value) {\r\n      return node.value;\r\n    }\r\n\r\n    if (node.nodes && node.ranges > 0) {\r\n      let args = utils.reduce(node.nodes);\r\n      let range = fill(...args, { ...options, wrap: false, toRegex: true });\r\n\r\n      if (range.length !== 0) {\r\n        return args.length > 1 && range.length > 1 ? `(${range})` : range;\r\n      }\r\n    }\r\n\r\n    if (node.nodes) {\r\n      for (let child of node.nodes) {\r\n        output += walk(child, node);\r\n      }\r\n    }\r\n    return output;\r\n  };\r\n\r\n  return walk(ast);\r\n};\r\n\r\nmodule.exports = compile;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/braces/lib/compile.js b/node_modules/braces/lib/compile.js
--- a/node_modules/braces/lib/compile.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/braces/lib/compile.js	(date 1753913035835)
@@ -4,30 +4,32 @@
 const utils = require('./utils');
 
 const compile = (ast, options = {}) => {
-  let walk = (node, parent = {}) => {
-    let invalidBlock = utils.isInvalidBrace(parent);
-    let invalidNode = node.invalid === true && options.escapeInvalid === true;
-    let invalid = invalidBlock === true || invalidNode === true;
-    let prefix = options.escapeInvalid === true ? '\\' : '';
+  const walk = (node, parent = {}) => {
+    const invalidBlock = utils.isInvalidBrace(parent);
+    const invalidNode = node.invalid === true && options.escapeInvalid === true;
+    const invalid = invalidBlock === true || invalidNode === true;
+    const prefix = options.escapeInvalid === true ? '\\' : '';
     let output = '';
 
     if (node.isOpen === true) {
       return prefix + node.value;
     }
+
     if (node.isClose === true) {
+      console.log('node.isClose', prefix, node.value);
       return prefix + node.value;
     }
 
     if (node.type === 'open') {
-      return invalid ? (prefix + node.value) : '(';
+      return invalid ? prefix + node.value : '(';
     }
 
     if (node.type === 'close') {
-      return invalid ? (prefix + node.value) : ')';
+      return invalid ? prefix + node.value : ')';
     }
 
     if (node.type === 'comma') {
-      return node.prev.type === 'comma' ? '' : (invalid ? node.value : '|');
+      return node.prev.type === 'comma' ? '' : invalid ? node.value : '|';
     }
 
     if (node.value) {
@@ -35,8 +37,8 @@
     }
 
     if (node.nodes && node.ranges > 0) {
-      let args = utils.reduce(node.nodes);
-      let range = fill(...args, { ...options, wrap: false, toRegex: true });
+      const args = utils.reduce(node.nodes);
+      const range = fill(...args, { ...options, wrap: false, toRegex: true, strictZeros: true });
 
       if (range.length !== 0) {
         return args.length > 1 && range.length > 1 ? `(${range})` : range;
@@ -44,10 +46,11 @@
     }
 
     if (node.nodes) {
-      for (let child of node.nodes) {
+      for (const child of node.nodes) {
         output += walk(child, node);
       }
     }
+
     return output;
   };
 
Index: node_modules/pg-protocol/dist/buffer-reader.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"version\":3,\"file\":\"buffer-reader.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/buffer-reader.ts\"],\"names\":[],\"mappings\":\";;;AAAA,MAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;AAEzC,MAAa,YAAY;IAMvB,YAAoB,SAAiB,CAAC;QAAlB,WAAM,GAAN,MAAM,CAAY;QAL9B,WAAM,GAAW,WAAW,CAAA;QAEpC,wCAAwC;QAChC,aAAQ,GAAW,OAAO,CAAA;IAEO,CAAC;IAEnC,SAAS,CAAC,MAAc,EAAE,MAAc;QAC7C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;IACtB,CAAC;IAEM,KAAK;QACV,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACnD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAA;QAChB,OAAO,MAAM,CAAA;IACf,CAAC;IAEM,IAAI;QACT,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACvC,IAAI,CAAC,MAAM,EAAE,CAAA;QACb,OAAO,MAAM,CAAA;IACf,CAAC;IAEM,KAAK;QACV,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACnD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAA;QAChB,OAAO,MAAM,CAAA;IACf,CAAC;IAEM,MAAM,CAAC,MAAc;QAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAA;QACrF,IAAI,CAAC,MAAM,IAAI,MAAM,CAAA;QACrB,OAAO,MAAM,CAAA;IACf,CAAC;IAEM,OAAO;QACZ,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAA;QACzB,IAAI,GAAG,GAAG,KAAK,CAAA;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,GAAE;QACnC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAA;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,CAAC,CAAA;IAC5D,CAAC;IAEM,KAAK,CAAC,MAAc;QACzB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAA;QACnE,IAAI,CAAC,MAAM,IAAI,MAAM,CAAA;QACrB,OAAO,MAAM,CAAA;IACf,CAAC;CACF;AAlDD,oCAkDC\"}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/dist/buffer-reader.js.map b/node_modules/pg-protocol/dist/buffer-reader.js.map
--- a/node_modules/pg-protocol/dist/buffer-reader.js.map	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/dist/buffer-reader.js.map	(date 1753913035307)
@@ -1,1 +1,1 @@
-{"version":3,"file":"buffer-reader.js","sourceRoot":"","sources":["../src/buffer-reader.ts"],"names":[],"mappings":";;;AAAA,MAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;AAEzC,MAAa,YAAY;IAMvB,YAAoB,SAAiB,CAAC;QAAlB,WAAM,GAAN,MAAM,CAAY;QAL9B,WAAM,GAAW,WAAW,CAAA;QAEpC,wCAAwC;QAChC,aAAQ,GAAW,OAAO,CAAA;IAEO,CAAC;IAEnC,SAAS,CAAC,MAAc,EAAE,MAAc;QAC7C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;IACtB,CAAC;IAEM,KAAK;QACV,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACnD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAA;QAChB,OAAO,MAAM,CAAA;IACf,CAAC;IAEM,IAAI;QACT,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACvC,IAAI,CAAC,MAAM,EAAE,CAAA;QACb,OAAO,MAAM,CAAA;IACf,CAAC;IAEM,KAAK;QACV,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACnD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAA;QAChB,OAAO,MAAM,CAAA;IACf,CAAC;IAEM,MAAM,CAAC,MAAc;QAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAA;QACrF,IAAI,CAAC,MAAM,IAAI,MAAM,CAAA;QACrB,OAAO,MAAM,CAAA;IACf,CAAC;IAEM,OAAO;QACZ,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAA;QACzB,IAAI,GAAG,GAAG,KAAK,CAAA;QACf,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,GAAE;QACnC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAA;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,CAAC,CAAA;IAC5D,CAAC;IAEM,KAAK,CAAC,MAAc;QACzB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAA;QACnE,IAAI,CAAC,MAAM,IAAI,MAAM,CAAA;QACrB,OAAO,MAAM,CAAA;IACf,CAAC;CACF;AAlDD,oCAkDC"}
\ No newline at end of file
+{"version":3,"file":"buffer-reader.js","sourceRoot":"","sources":["../src/buffer-reader.ts"],"names":[],"mappings":";;;AAAA,MAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;AAEzC,MAAa,YAAY;IAMvB,YAAoB,SAAiB,CAAC;QAAlB,WAAM,GAAN,MAAM,CAAY;QAL9B,WAAM,GAAW,WAAW,CAAA;QAEpC,wCAAwC;QAChC,aAAQ,GAAW,OAAO,CAAA;IAEO,CAAC;IAEnC,SAAS,CAAC,MAAc,EAAE,MAAc;QAC7C,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAA;IACtB,CAAC;IAEM,KAAK;QACV,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACnD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAA;QAChB,OAAO,MAAM,CAAA;IACf,CAAC;IAEM,IAAI;QACT,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACvC,IAAI,CAAC,MAAM,EAAE,CAAA;QACb,OAAO,MAAM,CAAA;IACf,CAAC;IAEM,KAAK;QACV,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACnD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAA;QAChB,OAAO,MAAM,CAAA;IACf,CAAC;IAEM,MAAM;QACX,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACpD,IAAI,CAAC,MAAM,IAAI,CAAC,CAAA;QAChB,OAAO,MAAM,CAAA;IACf,CAAC;IAEM,MAAM,CAAC,MAAc;QAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAA;QACrF,IAAI,CAAC,MAAM,IAAI,MAAM,CAAA;QACrB,OAAO,MAAM,CAAA;IACf,CAAC;IAEM,OAAO;QACZ,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAA;QACzB,IAAI,GAAG,GAAG,KAAK,CAAA;QACf,oCAAoC;QACpC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,GAAE;QACnC,IAAI,CAAC,MAAM,GAAG,GAAG,CAAA;QACjB,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,GAAG,GAAG,CAAC,CAAC,CAAA;IAC5D,CAAC;IAEM,KAAK,CAAC,MAAc;QACzB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,CAAA;QACnE,IAAI,CAAC,MAAM,IAAI,MAAM,CAAA;QACrB,OAAO,MAAM,CAAA;IACf,CAAC;CACF;AAzDD,oCAyDC"}
\ No newline at end of file
Index: node_modules/braces/lib/constants.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nmodule.exports = {\r\n  MAX_LENGTH: 1024 * 64,\r\n\r\n  // Digits\r\n  CHAR_0: '0', /* 0 */\r\n  CHAR_9: '9', /* 9 */\r\n\r\n  // Alphabet chars.\r\n  CHAR_UPPERCASE_A: 'A', /* A */\r\n  CHAR_LOWERCASE_A: 'a', /* a */\r\n  CHAR_UPPERCASE_Z: 'Z', /* Z */\r\n  CHAR_LOWERCASE_Z: 'z', /* z */\r\n\r\n  CHAR_LEFT_PARENTHESES: '(', /* ( */\r\n  CHAR_RIGHT_PARENTHESES: ')', /* ) */\r\n\r\n  CHAR_ASTERISK: '*', /* * */\r\n\r\n  // Non-alphabetic chars.\r\n  CHAR_AMPERSAND: '&', /* & */\r\n  CHAR_AT: '@', /* @ */\r\n  CHAR_BACKSLASH: '\\\\', /* \\ */\r\n  CHAR_BACKTICK: '`', /* ` */\r\n  CHAR_CARRIAGE_RETURN: '\\r', /* \\r */\r\n  CHAR_CIRCUMFLEX_ACCENT: '^', /* ^ */\r\n  CHAR_COLON: ':', /* : */\r\n  CHAR_COMMA: ',', /* , */\r\n  CHAR_DOLLAR: '$', /* . */\r\n  CHAR_DOT: '.', /* . */\r\n  CHAR_DOUBLE_QUOTE: '\"', /* \" */\r\n  CHAR_EQUAL: '=', /* = */\r\n  CHAR_EXCLAMATION_MARK: '!', /* ! */\r\n  CHAR_FORM_FEED: '\\f', /* \\f */\r\n  CHAR_FORWARD_SLASH: '/', /* / */\r\n  CHAR_HASH: '#', /* # */\r\n  CHAR_HYPHEN_MINUS: '-', /* - */\r\n  CHAR_LEFT_ANGLE_BRACKET: '<', /* < */\r\n  CHAR_LEFT_CURLY_BRACE: '{', /* { */\r\n  CHAR_LEFT_SQUARE_BRACKET: '[', /* [ */\r\n  CHAR_LINE_FEED: '\\n', /* \\n */\r\n  CHAR_NO_BREAK_SPACE: '\\u00A0', /* \\u00A0 */\r\n  CHAR_PERCENT: '%', /* % */\r\n  CHAR_PLUS: '+', /* + */\r\n  CHAR_QUESTION_MARK: '?', /* ? */\r\n  CHAR_RIGHT_ANGLE_BRACKET: '>', /* > */\r\n  CHAR_RIGHT_CURLY_BRACE: '}', /* } */\r\n  CHAR_RIGHT_SQUARE_BRACKET: ']', /* ] */\r\n  CHAR_SEMICOLON: ';', /* ; */\r\n  CHAR_SINGLE_QUOTE: '\\'', /* ' */\r\n  CHAR_SPACE: ' ', /*   */\r\n  CHAR_TAB: '\\t', /* \\t */\r\n  CHAR_UNDERSCORE: '_', /* _ */\r\n  CHAR_VERTICAL_LINE: '|', /* | */\r\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE: '\\uFEFF' /* \\uFEFF */\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/braces/lib/constants.js b/node_modules/braces/lib/constants.js
--- a/node_modules/braces/lib/constants.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/braces/lib/constants.js	(date 1753913035839)
@@ -1,7 +1,7 @@
 'use strict';
 
 module.exports = {
-  MAX_LENGTH: 1024 * 64,
+  MAX_LENGTH: 10000,
 
   // Digits
   CHAR_0: '0', /* 0 */
Index: node_modules/braces/lib/parse.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nconst stringify = require('./stringify');\r\n\r\n/**\r\n * Constants\r\n */\r\n\r\nconst {\r\n  MAX_LENGTH,\r\n  CHAR_BACKSLASH, /* \\ */\r\n  CHAR_BACKTICK, /* ` */\r\n  CHAR_COMMA, /* , */\r\n  CHAR_DOT, /* . */\r\n  CHAR_LEFT_PARENTHESES, /* ( */\r\n  CHAR_RIGHT_PARENTHESES, /* ) */\r\n  CHAR_LEFT_CURLY_BRACE, /* { */\r\n  CHAR_RIGHT_CURLY_BRACE, /* } */\r\n  CHAR_LEFT_SQUARE_BRACKET, /* [ */\r\n  CHAR_RIGHT_SQUARE_BRACKET, /* ] */\r\n  CHAR_DOUBLE_QUOTE, /* \" */\r\n  CHAR_SINGLE_QUOTE, /* ' */\r\n  CHAR_NO_BREAK_SPACE,\r\n  CHAR_ZERO_WIDTH_NOBREAK_SPACE\r\n} = require('./constants');\r\n\r\n/**\r\n * parse\r\n */\r\n\r\nconst parse = (input, options = {}) => {\r\n  if (typeof input !== 'string') {\r\n    throw new TypeError('Expected a string');\r\n  }\r\n\r\n  let opts = options || {};\r\n  let max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;\r\n  if (input.length > max) {\r\n    throw new SyntaxError(`Input length (${input.length}), exceeds max characters (${max})`);\r\n  }\r\n\r\n  let ast = { type: 'root', input, nodes: [] };\r\n  let stack = [ast];\r\n  let block = ast;\r\n  let prev = ast;\r\n  let brackets = 0;\r\n  let length = input.length;\r\n  let index = 0;\r\n  let depth = 0;\r\n  let value;\r\n  let memo = {};\r\n\r\n  /**\r\n   * Helpers\r\n   */\r\n\r\n  const advance = () => input[index++];\r\n  const push = node => {\r\n    if (node.type === 'text' && prev.type === 'dot') {\r\n      prev.type = 'text';\r\n    }\r\n\r\n    if (prev && prev.type === 'text' && node.type === 'text') {\r\n      prev.value += node.value;\r\n      return;\r\n    }\r\n\r\n    block.nodes.push(node);\r\n    node.parent = block;\r\n    node.prev = prev;\r\n    prev = node;\r\n    return node;\r\n  };\r\n\r\n  push({ type: 'bos' });\r\n\r\n  while (index < length) {\r\n    block = stack[stack.length - 1];\r\n    value = advance();\r\n\r\n    /**\r\n     * Invalid chars\r\n     */\r\n\r\n    if (value === CHAR_ZERO_WIDTH_NOBREAK_SPACE || value === CHAR_NO_BREAK_SPACE) {\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Escaped chars\r\n     */\r\n\r\n    if (value === CHAR_BACKSLASH) {\r\n      push({ type: 'text', value: (options.keepEscaping ? value : '') + advance() });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Right square bracket (literal): ']'\r\n     */\r\n\r\n    if (value === CHAR_RIGHT_SQUARE_BRACKET) {\r\n      push({ type: 'text', value: '\\\\' + value });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Left square bracket: '['\r\n     */\r\n\r\n    if (value === CHAR_LEFT_SQUARE_BRACKET) {\r\n      brackets++;\r\n\r\n      let closed = true;\r\n      let next;\r\n\r\n      while (index < length && (next = advance())) {\r\n        value += next;\r\n\r\n        if (next === CHAR_LEFT_SQUARE_BRACKET) {\r\n          brackets++;\r\n          continue;\r\n        }\r\n\r\n        if (next === CHAR_BACKSLASH) {\r\n          value += advance();\r\n          continue;\r\n        }\r\n\r\n        if (next === CHAR_RIGHT_SQUARE_BRACKET) {\r\n          brackets--;\r\n\r\n          if (brackets === 0) {\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      push({ type: 'text', value });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Parentheses\r\n     */\r\n\r\n    if (value === CHAR_LEFT_PARENTHESES) {\r\n      block = push({ type: 'paren', nodes: [] });\r\n      stack.push(block);\r\n      push({ type: 'text', value });\r\n      continue;\r\n    }\r\n\r\n    if (value === CHAR_RIGHT_PARENTHESES) {\r\n      if (block.type !== 'paren') {\r\n        push({ type: 'text', value });\r\n        continue;\r\n      }\r\n      block = stack.pop();\r\n      push({ type: 'text', value });\r\n      block = stack[stack.length - 1];\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Quotes: '|\"|`\r\n     */\r\n\r\n    if (value === CHAR_DOUBLE_QUOTE || value === CHAR_SINGLE_QUOTE || value === CHAR_BACKTICK) {\r\n      let open = value;\r\n      let next;\r\n\r\n      if (options.keepQuotes !== true) {\r\n        value = '';\r\n      }\r\n\r\n      while (index < length && (next = advance())) {\r\n        if (next === CHAR_BACKSLASH) {\r\n          value += next + advance();\r\n          continue;\r\n        }\r\n\r\n        if (next === open) {\r\n          if (options.keepQuotes === true) value += next;\r\n          break;\r\n        }\r\n\r\n        value += next;\r\n      }\r\n\r\n      push({ type: 'text', value });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Left curly brace: '{'\r\n     */\r\n\r\n    if (value === CHAR_LEFT_CURLY_BRACE) {\r\n      depth++;\r\n\r\n      let dollar = prev.value && prev.value.slice(-1) === '$' || block.dollar === true;\r\n      let brace = {\r\n        type: 'brace',\r\n        open: true,\r\n        close: false,\r\n        dollar,\r\n        depth,\r\n        commas: 0,\r\n        ranges: 0,\r\n        nodes: []\r\n      };\r\n\r\n      block = push(brace);\r\n      stack.push(block);\r\n      push({ type: 'open', value });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Right curly brace: '}'\r\n     */\r\n\r\n    if (value === CHAR_RIGHT_CURLY_BRACE) {\r\n      if (block.type !== 'brace') {\r\n        push({ type: 'text', value });\r\n        continue;\r\n      }\r\n\r\n      let type = 'close';\r\n      block = stack.pop();\r\n      block.close = true;\r\n\r\n      push({ type, value });\r\n      depth--;\r\n\r\n      block = stack[stack.length - 1];\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Comma: ','\r\n     */\r\n\r\n    if (value === CHAR_COMMA && depth > 0) {\r\n      if (block.ranges > 0) {\r\n        block.ranges = 0;\r\n        let open = block.nodes.shift();\r\n        block.nodes = [open, { type: 'text', value: stringify(block) }];\r\n      }\r\n\r\n      push({ type: 'comma', value });\r\n      block.commas++;\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Dot: '.'\r\n     */\r\n\r\n    if (value === CHAR_DOT && depth > 0 && block.commas === 0) {\r\n      let siblings = block.nodes;\r\n\r\n      if (depth === 0 || siblings.length === 0) {\r\n        push({ type: 'text', value });\r\n        continue;\r\n      }\r\n\r\n      if (prev.type === 'dot') {\r\n        block.range = [];\r\n        prev.value += value;\r\n        prev.type = 'range';\r\n\r\n        if (block.nodes.length !== 3 && block.nodes.length !== 5) {\r\n          block.invalid = true;\r\n          block.ranges = 0;\r\n          prev.type = 'text';\r\n          continue;\r\n        }\r\n\r\n        block.ranges++;\r\n        block.args = [];\r\n        continue;\r\n      }\r\n\r\n      if (prev.type === 'range') {\r\n        siblings.pop();\r\n\r\n        let before = siblings[siblings.length - 1];\r\n        before.value += prev.value + value;\r\n        prev = before;\r\n        block.ranges--;\r\n        continue;\r\n      }\r\n\r\n      push({ type: 'dot', value });\r\n      continue;\r\n    }\r\n\r\n    /**\r\n     * Text\r\n     */\r\n\r\n    push({ type: 'text', value });\r\n  }\r\n\r\n  // Mark imbalanced braces and brackets as invalid\r\n  do {\r\n    block = stack.pop();\r\n\r\n    if (block.type !== 'root') {\r\n      block.nodes.forEach(node => {\r\n        if (!node.nodes) {\r\n          if (node.type === 'open') node.isOpen = true;\r\n          if (node.type === 'close') node.isClose = true;\r\n          if (!node.nodes) node.type = 'text';\r\n          node.invalid = true;\r\n        }\r\n      });\r\n\r\n      // get the location of the block on parent.nodes (block's siblings)\r\n      let parent = stack[stack.length - 1];\r\n      let index = parent.nodes.indexOf(block);\r\n      // replace the (invalid) block with it's nodes\r\n      parent.nodes.splice(index, 1, ...block.nodes);\r\n    }\r\n  } while (stack.length > 0);\r\n\r\n  push({ type: 'eos' });\r\n  return ast;\r\n};\r\n\r\nmodule.exports = parse;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/braces/lib/parse.js b/node_modules/braces/lib/parse.js
--- a/node_modules/braces/lib/parse.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/braces/lib/parse.js	(date 1753913035848)
@@ -33,22 +33,21 @@
     throw new TypeError('Expected a string');
   }
 
-  let opts = options || {};
-  let max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;
+  const opts = options || {};
+  const max = typeof opts.maxLength === 'number' ? Math.min(MAX_LENGTH, opts.maxLength) : MAX_LENGTH;
   if (input.length > max) {
     throw new SyntaxError(`Input length (${input.length}), exceeds max characters (${max})`);
   }
 
-  let ast = { type: 'root', input, nodes: [] };
-  let stack = [ast];
+  const ast = { type: 'root', input, nodes: [] };
+  const stack = [ast];
   let block = ast;
   let prev = ast;
   let brackets = 0;
-  let length = input.length;
+  const length = input.length;
   let index = 0;
   let depth = 0;
   let value;
-  let memo = {};
 
   /**
    * Helpers
@@ -111,7 +110,6 @@
     if (value === CHAR_LEFT_SQUARE_BRACKET) {
       brackets++;
 
-      let closed = true;
       let next;
 
       while (index < length && (next = advance())) {
@@ -167,7 +165,7 @@
      */
 
     if (value === CHAR_DOUBLE_QUOTE || value === CHAR_SINGLE_QUOTE || value === CHAR_BACKTICK) {
-      let open = value;
+      const open = value;
       let next;
 
       if (options.keepQuotes !== true) {
@@ -199,8 +197,8 @@
     if (value === CHAR_LEFT_CURLY_BRACE) {
       depth++;
 
-      let dollar = prev.value && prev.value.slice(-1) === '$' || block.dollar === true;
-      let brace = {
+      const dollar = prev.value && prev.value.slice(-1) === '$' || block.dollar === true;
+      const brace = {
         type: 'brace',
         open: true,
         close: false,
@@ -227,7 +225,7 @@
         continue;
       }
 
-      let type = 'close';
+      const type = 'close';
       block = stack.pop();
       block.close = true;
 
@@ -245,7 +243,7 @@
     if (value === CHAR_COMMA && depth > 0) {
       if (block.ranges > 0) {
         block.ranges = 0;
-        let open = block.nodes.shift();
+        const open = block.nodes.shift();
         block.nodes = [open, { type: 'text', value: stringify(block) }];
       }
 
@@ -259,7 +257,7 @@
      */
 
     if (value === CHAR_DOT && depth > 0 && block.commas === 0) {
-      let siblings = block.nodes;
+      const siblings = block.nodes;
 
       if (depth === 0 || siblings.length === 0) {
         push({ type: 'text', value });
@@ -286,7 +284,7 @@
       if (prev.type === 'range') {
         siblings.pop();
 
-        let before = siblings[siblings.length - 1];
+        const before = siblings[siblings.length - 1];
         before.value += prev.value + value;
         prev = before;
         block.ranges--;
@@ -319,8 +317,8 @@
       });
 
       // get the location of the block on parent.nodes (block's siblings)
-      let parent = stack[stack.length - 1];
-      let index = parent.nodes.indexOf(block);
+      const parent = stack[stack.length - 1];
+      const index = parent.nodes.indexOf(block);
       // replace the (invalid) block with it's nodes
       parent.nodes.splice(index, 1, ...block.nodes);
     }
Index: node_modules/pg-protocol/dist/buffer-reader.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BufferReader = void 0;\r\nconst emptyBuffer = Buffer.allocUnsafe(0);\r\nclass BufferReader {\r\n    constructor(offset = 0) {\r\n        this.offset = offset;\r\n        this.buffer = emptyBuffer;\r\n        // TODO(bmc): support non-utf8 encoding?\r\n        this.encoding = 'utf-8';\r\n    }\r\n    setBuffer(offset, buffer) {\r\n        this.offset = offset;\r\n        this.buffer = buffer;\r\n    }\r\n    int16() {\r\n        const result = this.buffer.readInt16BE(this.offset);\r\n        this.offset += 2;\r\n        return result;\r\n    }\r\n    byte() {\r\n        const result = this.buffer[this.offset];\r\n        this.offset++;\r\n        return result;\r\n    }\r\n    int32() {\r\n        const result = this.buffer.readInt32BE(this.offset);\r\n        this.offset += 4;\r\n        return result;\r\n    }\r\n    string(length) {\r\n        const result = this.buffer.toString(this.encoding, this.offset, this.offset + length);\r\n        this.offset += length;\r\n        return result;\r\n    }\r\n    cstring() {\r\n        const start = this.offset;\r\n        let end = start;\r\n        while (this.buffer[end++] !== 0) { }\r\n        this.offset = end;\r\n        return this.buffer.toString(this.encoding, start, end - 1);\r\n    }\r\n    bytes(length) {\r\n        const result = this.buffer.slice(this.offset, this.offset + length);\r\n        this.offset += length;\r\n        return result;\r\n    }\r\n}\r\nexports.BufferReader = BufferReader;\r\n//# sourceMappingURL=buffer-reader.js.map
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/dist/buffer-reader.js b/node_modules/pg-protocol/dist/buffer-reader.js
--- a/node_modules/pg-protocol/dist/buffer-reader.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/dist/buffer-reader.js	(date 1753913035288)
@@ -28,6 +28,11 @@
         this.offset += 4;
         return result;
     }
+    uint32() {
+        const result = this.buffer.readUInt32BE(this.offset);
+        this.offset += 4;
+        return result;
+    }
     string(length) {
         const result = this.buffer.toString(this.encoding, this.offset, this.offset + length);
         this.offset += length;
@@ -36,6 +41,7 @@
     cstring() {
         const start = this.offset;
         let end = start;
+        // eslint-disable-next-line no-empty
         while (this.buffer[end++] !== 0) { }
         this.offset = end;
         return this.buffer.toString(this.encoding, start, end - 1);
Index: node_modules/braces/lib/utils.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nexports.isInteger = num => {\r\n  if (typeof num === 'number') {\r\n    return Number.isInteger(num);\r\n  }\r\n  if (typeof num === 'string' && num.trim() !== '') {\r\n    return Number.isInteger(Number(num));\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Find a node of the given type\r\n */\r\n\r\nexports.find = (node, type) => node.nodes.find(node => node.type === type);\r\n\r\n/**\r\n * Find a node of the given type\r\n */\r\n\r\nexports.exceedsLimit = (min, max, step = 1, limit) => {\r\n  if (limit === false) return false;\r\n  if (!exports.isInteger(min) || !exports.isInteger(max)) return false;\r\n  return ((Number(max) - Number(min)) / Number(step)) >= limit;\r\n};\r\n\r\n/**\r\n * Escape the given node with '\\\\' before node.value\r\n */\r\n\r\nexports.escapeNode = (block, n = 0, type) => {\r\n  let node = block.nodes[n];\r\n  if (!node) return;\r\n\r\n  if ((type && node.type === type) || node.type === 'open' || node.type === 'close') {\r\n    if (node.escaped !== true) {\r\n      node.value = '\\\\' + node.value;\r\n      node.escaped = true;\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Returns true if the given brace node should be enclosed in literal braces\r\n */\r\n\r\nexports.encloseBrace = node => {\r\n  if (node.type !== 'brace') return false;\r\n  if ((node.commas >> 0 + node.ranges >> 0) === 0) {\r\n    node.invalid = true;\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns true if a brace node is invalid.\r\n */\r\n\r\nexports.isInvalidBrace = block => {\r\n  if (block.type !== 'brace') return false;\r\n  if (block.invalid === true || block.dollar) return true;\r\n  if ((block.commas >> 0 + block.ranges >> 0) === 0) {\r\n    block.invalid = true;\r\n    return true;\r\n  }\r\n  if (block.open !== true || block.close !== true) {\r\n    block.invalid = true;\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\n/**\r\n * Returns true if a node is an open or close node\r\n */\r\n\r\nexports.isOpenOrClose = node => {\r\n  if (node.type === 'open' || node.type === 'close') {\r\n    return true;\r\n  }\r\n  return node.open === true || node.close === true;\r\n};\r\n\r\n/**\r\n * Reduce an array of text nodes.\r\n */\r\n\r\nexports.reduce = nodes => nodes.reduce((acc, node) => {\r\n  if (node.type === 'text') acc.push(node.value);\r\n  if (node.type === 'range') node.type = 'text';\r\n  return acc;\r\n}, []);\r\n\r\n/**\r\n * Flatten an array\r\n */\r\n\r\nexports.flatten = (...args) => {\r\n  const result = [];\r\n  const flat = arr => {\r\n    for (let i = 0; i < arr.length; i++) {\r\n      let ele = arr[i];\r\n      Array.isArray(ele) ? flat(ele, result) : ele !== void 0 && result.push(ele);\r\n    }\r\n    return result;\r\n  };\r\n  flat(args);\r\n  return result;\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/braces/lib/utils.js b/node_modules/braces/lib/utils.js
--- a/node_modules/braces/lib/utils.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/braces/lib/utils.js	(date 1753913035851)
@@ -31,7 +31,7 @@
  */
 
 exports.escapeNode = (block, n = 0, type) => {
-  let node = block.nodes[n];
+  const node = block.nodes[n];
   if (!node) return;
 
   if ((type && node.type === type) || node.type === 'open' || node.type === 'close') {
@@ -100,13 +100,23 @@
 
 exports.flatten = (...args) => {
   const result = [];
+
   const flat = arr => {
     for (let i = 0; i < arr.length; i++) {
-      let ele = arr[i];
-      Array.isArray(ele) ? flat(ele, result) : ele !== void 0 && result.push(ele);
+      const ele = arr[i];
+
+      if (Array.isArray(ele)) {
+        flat(ele);
+        continue;
+      }
+
+      if (ele !== undefined) {
+        result.push(ele);
+      }
     }
     return result;
   };
+
   flat(args);
   return result;
 };
Index: node_modules/pg-protocol/dist/serializer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.serialize = void 0;\r\nconst buffer_writer_1 = require(\"./buffer-writer\");\r\nconst writer = new buffer_writer_1.Writer();\r\nconst startup = (opts) => {\r\n    // protocol version\r\n    writer.addInt16(3).addInt16(0);\r\n    for (const key of Object.keys(opts)) {\r\n        writer.addCString(key).addCString(opts[key]);\r\n    }\r\n    writer.addCString('client_encoding').addCString('UTF8');\r\n    var bodyBuffer = writer.addCString('').flush();\r\n    // this message is sent without a code\r\n    var length = bodyBuffer.length + 4;\r\n    return new buffer_writer_1.Writer().addInt32(length).add(bodyBuffer).flush();\r\n};\r\nconst requestSsl = () => {\r\n    const response = Buffer.allocUnsafe(8);\r\n    response.writeInt32BE(8, 0);\r\n    response.writeInt32BE(80877103, 4);\r\n    return response;\r\n};\r\nconst password = (password) => {\r\n    return writer.addCString(password).flush(112 /* code.startup */);\r\n};\r\nconst sendSASLInitialResponseMessage = function (mechanism, initialResponse) {\r\n    // 0x70 = 'p'\r\n    writer.addCString(mechanism).addInt32(Buffer.byteLength(initialResponse)).addString(initialResponse);\r\n    return writer.flush(112 /* code.startup */);\r\n};\r\nconst sendSCRAMClientFinalMessage = function (additionalData) {\r\n    return writer.addString(additionalData).flush(112 /* code.startup */);\r\n};\r\nconst query = (text) => {\r\n    return writer.addCString(text).flush(81 /* code.query */);\r\n};\r\nconst emptyArray = [];\r\nconst parse = (query) => {\r\n    // expect something like this:\r\n    // { name: 'queryName',\r\n    //   text: 'select * from blah',\r\n    //   types: ['int8', 'bool'] }\r\n    // normalize missing query names to allow for null\r\n    const name = query.name || '';\r\n    if (name.length > 63) {\r\n        /* eslint-disable no-console */\r\n        console.error('Warning! Postgres only supports 63 characters for query names.');\r\n        console.error('You supplied %s (%s)', name, name.length);\r\n        console.error('This can cause conflicts and silent errors executing queries');\r\n        /* eslint-enable no-console */\r\n    }\r\n    const types = query.types || emptyArray;\r\n    var len = types.length;\r\n    var buffer = writer\r\n        .addCString(name) // name of query\r\n        .addCString(query.text) // actual query text\r\n        .addInt16(len);\r\n    for (var i = 0; i < len; i++) {\r\n        buffer.addInt32(types[i]);\r\n    }\r\n    return writer.flush(80 /* code.parse */);\r\n};\r\nconst paramWriter = new buffer_writer_1.Writer();\r\nconst writeValues = function (values, valueMapper) {\r\n    for (let i = 0; i < values.length; i++) {\r\n        const mappedVal = valueMapper ? valueMapper(values[i], i) : values[i];\r\n        if (mappedVal == null) {\r\n            // add the param type (string) to the writer\r\n            writer.addInt16(0 /* ParamType.STRING */);\r\n            // write -1 to the param writer to indicate null\r\n            paramWriter.addInt32(-1);\r\n        }\r\n        else if (mappedVal instanceof Buffer) {\r\n            // add the param type (binary) to the writer\r\n            writer.addInt16(1 /* ParamType.BINARY */);\r\n            // add the buffer to the param writer\r\n            paramWriter.addInt32(mappedVal.length);\r\n            paramWriter.add(mappedVal);\r\n        }\r\n        else {\r\n            // add the param type (string) to the writer\r\n            writer.addInt16(0 /* ParamType.STRING */);\r\n            paramWriter.addInt32(Buffer.byteLength(mappedVal));\r\n            paramWriter.addString(mappedVal);\r\n        }\r\n    }\r\n};\r\nconst bind = (config = {}) => {\r\n    // normalize config\r\n    const portal = config.portal || '';\r\n    const statement = config.statement || '';\r\n    const binary = config.binary || false;\r\n    const values = config.values || emptyArray;\r\n    const len = values.length;\r\n    writer.addCString(portal).addCString(statement);\r\n    writer.addInt16(len);\r\n    writeValues(values, config.valueMapper);\r\n    writer.addInt16(len);\r\n    writer.add(paramWriter.flush());\r\n    // format code\r\n    writer.addInt16(binary ? 1 /* ParamType.BINARY */ : 0 /* ParamType.STRING */);\r\n    return writer.flush(66 /* code.bind */);\r\n};\r\nconst emptyExecute = Buffer.from([69 /* code.execute */, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x00, 0x00]);\r\nconst execute = (config) => {\r\n    // this is the happy path for most queries\r\n    if (!config || (!config.portal && !config.rows)) {\r\n        return emptyExecute;\r\n    }\r\n    const portal = config.portal || '';\r\n    const rows = config.rows || 0;\r\n    const portalLength = Buffer.byteLength(portal);\r\n    const len = 4 + portalLength + 1 + 4;\r\n    // one extra bit for code\r\n    const buff = Buffer.allocUnsafe(1 + len);\r\n    buff[0] = 69 /* code.execute */;\r\n    buff.writeInt32BE(len, 1);\r\n    buff.write(portal, 5, 'utf-8');\r\n    buff[portalLength + 5] = 0; // null terminate portal cString\r\n    buff.writeUInt32BE(rows, buff.length - 4);\r\n    return buff;\r\n};\r\nconst cancel = (processID, secretKey) => {\r\n    const buffer = Buffer.allocUnsafe(16);\r\n    buffer.writeInt32BE(16, 0);\r\n    buffer.writeInt16BE(1234, 4);\r\n    buffer.writeInt16BE(5678, 6);\r\n    buffer.writeInt32BE(processID, 8);\r\n    buffer.writeInt32BE(secretKey, 12);\r\n    return buffer;\r\n};\r\nconst cstringMessage = (code, string) => {\r\n    const stringLen = Buffer.byteLength(string);\r\n    const len = 4 + stringLen + 1;\r\n    // one extra bit for code\r\n    const buffer = Buffer.allocUnsafe(1 + len);\r\n    buffer[0] = code;\r\n    buffer.writeInt32BE(len, 1);\r\n    buffer.write(string, 5, 'utf-8');\r\n    buffer[len] = 0; // null terminate cString\r\n    return buffer;\r\n};\r\nconst emptyDescribePortal = writer.addCString('P').flush(68 /* code.describe */);\r\nconst emptyDescribeStatement = writer.addCString('S').flush(68 /* code.describe */);\r\nconst describe = (msg) => {\r\n    return msg.name\r\n        ? cstringMessage(68 /* code.describe */, `${msg.type}${msg.name || ''}`)\r\n        : msg.type === 'P'\r\n            ? emptyDescribePortal\r\n            : emptyDescribeStatement;\r\n};\r\nconst close = (msg) => {\r\n    const text = `${msg.type}${msg.name || ''}`;\r\n    return cstringMessage(67 /* code.close */, text);\r\n};\r\nconst copyData = (chunk) => {\r\n    return writer.add(chunk).flush(100 /* code.copyFromChunk */);\r\n};\r\nconst copyFail = (message) => {\r\n    return cstringMessage(102 /* code.copyFail */, message);\r\n};\r\nconst codeOnlyBuffer = (code) => Buffer.from([code, 0x00, 0x00, 0x00, 0x04]);\r\nconst flushBuffer = codeOnlyBuffer(72 /* code.flush */);\r\nconst syncBuffer = codeOnlyBuffer(83 /* code.sync */);\r\nconst endBuffer = codeOnlyBuffer(88 /* code.end */);\r\nconst copyDoneBuffer = codeOnlyBuffer(99 /* code.copyDone */);\r\nconst serialize = {\r\n    startup,\r\n    password,\r\n    requestSsl,\r\n    sendSASLInitialResponseMessage,\r\n    sendSCRAMClientFinalMessage,\r\n    query,\r\n    parse,\r\n    bind,\r\n    execute,\r\n    describe,\r\n    close,\r\n    flush: () => flushBuffer,\r\n    sync: () => syncBuffer,\r\n    end: () => endBuffer,\r\n    copyData,\r\n    copyDone: () => copyDoneBuffer,\r\n    copyFail,\r\n    cancel,\r\n};\r\nexports.serialize = serialize;\r\n//# sourceMappingURL=serializer.js.map
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/dist/serializer.js b/node_modules/pg-protocol/dist/serializer.js
--- a/node_modules/pg-protocol/dist/serializer.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/dist/serializer.js	(date 1753913035303)
@@ -10,9 +10,9 @@
         writer.addCString(key).addCString(opts[key]);
     }
     writer.addCString('client_encoding').addCString('UTF8');
-    var bodyBuffer = writer.addCString('').flush();
+    const bodyBuffer = writer.addCString('').flush();
     // this message is sent without a code
-    var length = bodyBuffer.length + 4;
+    const length = bodyBuffer.length + 4;
     return new buffer_writer_1.Writer().addInt32(length).add(bodyBuffer).flush();
 };
 const requestSsl = () => {
@@ -44,19 +44,17 @@
     // normalize missing query names to allow for null
     const name = query.name || '';
     if (name.length > 63) {
-        /* eslint-disable no-console */
         console.error('Warning! Postgres only supports 63 characters for query names.');
         console.error('You supplied %s (%s)', name, name.length);
         console.error('This can cause conflicts and silent errors executing queries');
-        /* eslint-enable no-console */
     }
     const types = query.types || emptyArray;
-    var len = types.length;
-    var buffer = writer
+    const len = types.length;
+    const buffer = writer
         .addCString(name) // name of query
         .addCString(query.text) // actual query text
         .addInt16(len);
-    for (var i = 0; i < len; i++) {
+    for (let i = 0; i < len; i++) {
         buffer.addInt32(types[i]);
     }
     return writer.flush(80 /* code.parse */);
@@ -98,6 +96,8 @@
     writeValues(values, config.valueMapper);
     writer.addInt16(len);
     writer.add(paramWriter.flush());
+    // all results use the same format code
+    writer.addInt16(1);
     // format code
     writer.addInt16(binary ? 1 /* ParamType.BINARY */ : 0 /* ParamType.STRING */);
     return writer.flush(66 /* code.bind */);
Index: node_modules/encodeurl/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"encodeurl\",\r\n  \"description\": \"Encode a URL to a percent-encoded form, excluding already-encoded sequences\",\r\n  \"version\": \"1.0.2\",\r\n  \"contributors\": [\r\n    \"Douglas Christopher Wilson <doug@somethingdoug.com>\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"keywords\": [\r\n    \"encode\",\r\n    \"encodeurl\",\r\n    \"url\"\r\n  ],\r\n  \"repository\": \"pillarjs/encodeurl\",\r\n  \"devDependencies\": {\r\n    \"eslint\": \"3.19.0\",\r\n    \"eslint-config-standard\": \"10.2.1\",\r\n    \"eslint-plugin-import\": \"2.8.0\",\r\n    \"eslint-plugin-node\": \"5.2.1\",\r\n    \"eslint-plugin-promise\": \"3.6.0\",\r\n    \"eslint-plugin-standard\": \"3.0.1\",\r\n    \"istanbul\": \"0.4.5\",\r\n    \"mocha\": \"2.5.3\"\r\n  },\r\n  \"files\": [\r\n    \"LICENSE\",\r\n    \"HISTORY.md\",\r\n    \"README.md\",\r\n    \"index.js\"\r\n  ],\r\n  \"engines\": {\r\n    \"node\": \">= 0.8\"\r\n  },\r\n  \"scripts\": {\r\n    \"lint\": \"eslint .\",\r\n    \"test\": \"mocha --reporter spec --bail --check-leaks test/\",\r\n    \"test-cov\": \"istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/\",\r\n    \"test-travis\": \"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/encodeurl/package.json b/node_modules/encodeurl/package.json
--- a/node_modules/encodeurl/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/encodeurl/package.json	(date 1753913035658)
@@ -1,7 +1,7 @@
 {
   "name": "encodeurl",
   "description": "Encode a URL to a percent-encoded form, excluding already-encoded sequences",
-  "version": "1.0.2",
+  "version": "2.0.0",
   "contributors": [
     "Douglas Christopher Wilson <doug@somethingdoug.com>"
   ],
@@ -13,12 +13,12 @@
   ],
   "repository": "pillarjs/encodeurl",
   "devDependencies": {
-    "eslint": "3.19.0",
-    "eslint-config-standard": "10.2.1",
-    "eslint-plugin-import": "2.8.0",
-    "eslint-plugin-node": "5.2.1",
-    "eslint-plugin-promise": "3.6.0",
-    "eslint-plugin-standard": "3.0.1",
+    "eslint": "5.11.1",
+    "eslint-config-standard": "12.0.0",
+    "eslint-plugin-import": "2.14.0",
+    "eslint-plugin-node": "7.0.1",
+    "eslint-plugin-promise": "4.0.1",
+    "eslint-plugin-standard": "4.0.0",
     "istanbul": "0.4.5",
     "mocha": "2.5.3"
   },
Index: node_modules/braces/lib/stringify.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nconst utils = require('./utils');\r\n\r\nmodule.exports = (ast, options = {}) => {\r\n  let stringify = (node, parent = {}) => {\r\n    let invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);\r\n    let invalidNode = node.invalid === true && options.escapeInvalid === true;\r\n    let output = '';\r\n\r\n    if (node.value) {\r\n      if ((invalidBlock || invalidNode) && utils.isOpenOrClose(node)) {\r\n        return '\\\\' + node.value;\r\n      }\r\n      return node.value;\r\n    }\r\n\r\n    if (node.value) {\r\n      return node.value;\r\n    }\r\n\r\n    if (node.nodes) {\r\n      for (let child of node.nodes) {\r\n        output += stringify(child);\r\n      }\r\n    }\r\n    return output;\r\n  };\r\n\r\n  return stringify(ast);\r\n};\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/braces/lib/stringify.js b/node_modules/braces/lib/stringify.js
--- a/node_modules/braces/lib/stringify.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/braces/lib/stringify.js	(date 1753913035850)
@@ -3,9 +3,9 @@
 const utils = require('./utils');
 
 module.exports = (ast, options = {}) => {
-  let stringify = (node, parent = {}) => {
-    let invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);
-    let invalidNode = node.invalid === true && options.escapeInvalid === true;
+  const stringify = (node, parent = {}) => {
+    const invalidBlock = options.escapeInvalid && utils.isInvalidBrace(parent);
+    const invalidNode = node.invalid === true && options.escapeInvalid === true;
     let output = '';
 
     if (node.value) {
@@ -20,7 +20,7 @@
     }
 
     if (node.nodes) {
-      for (let child of node.nodes) {
+      for (const child of node.nodes) {
         output += stringify(child);
       }
     }
Index: node_modules/encodeurl/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># encodeurl\r\n\r\n[![NPM Version][npm-image]][npm-url]\r\n[![NPM Downloads][downloads-image]][downloads-url]\r\n[![Node.js Version][node-version-image]][node-version-url]\r\n[![Build Status][travis-image]][travis-url]\r\n[![Test Coverage][coveralls-image]][coveralls-url]\r\n\r\nEncode a URL to a percent-encoded form, excluding already-encoded sequences\r\n\r\n## Installation\r\n\r\nThis is a [Node.js](https://nodejs.org/en/) module available through the\r\n[npm registry](https://www.npmjs.com/). Installation is done using the\r\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\r\n\r\n```sh\r\n$ npm install encodeurl\r\n```\r\n\r\n## API\r\n\r\n```js\r\nvar encodeUrl = require('encodeurl')\r\n```\r\n\r\n### encodeUrl(url)\r\n\r\nEncode a URL to a percent-encoded form, excluding already-encoded sequences.\r\n\r\nThis function will take an already-encoded URL and encode all the non-URL\r\ncode points (as UTF-8 byte sequences). This function will not encode the\r\n\"%\" character unless it is not part of a valid sequence (`%20` will be\r\nleft as-is, but `%foo` will be encoded as `%25foo`).\r\n\r\nThis encode is meant to be \"safe\" and does not throw errors. It will try as\r\nhard as it can to properly encode the given URL, including replacing any raw,\r\nunpaired surrogate pairs with the Unicode replacement character prior to\r\nencoding.\r\n\r\nThis function is _similar_ to the intrinsic function `encodeURI`, except it\r\nwill not encode the `%` character if that is part of a valid sequence, will\r\nnot encode `[` and `]` (for IPv6 hostnames) and will replace raw, unpaired\r\nsurrogate pairs with the Unicode replacement character (instead of throwing).\r\n\r\n## Examples\r\n\r\n### Encode a URL containing user-controled data\r\n\r\n```js\r\nvar encodeUrl = require('encodeurl')\r\nvar escapeHtml = require('escape-html')\r\n\r\nhttp.createServer(function onRequest (req, res) {\r\n  // get encoded form of inbound url\r\n  var url = encodeUrl(req.url)\r\n\r\n  // create html message\r\n  var body = '<p>Location ' + escapeHtml(url) + ' not found</p>'\r\n\r\n  // send a 404\r\n  res.statusCode = 404\r\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\r\n  res.setHeader('Content-Length', String(Buffer.byteLength(body, 'utf-8')))\r\n  res.end(body, 'utf-8')\r\n})\r\n```\r\n\r\n### Encode a URL for use in a header field\r\n\r\n```js\r\nvar encodeUrl = require('encodeurl')\r\nvar escapeHtml = require('escape-html')\r\nvar url = require('url')\r\n\r\nhttp.createServer(function onRequest (req, res) {\r\n  // parse inbound url\r\n  var href = url.parse(req)\r\n\r\n  // set new host for redirect\r\n  href.host = 'localhost'\r\n  href.protocol = 'https:'\r\n  href.slashes = true\r\n\r\n  // create location header\r\n  var location = encodeUrl(url.format(href))\r\n\r\n  // create html message\r\n  var body = '<p>Redirecting to new site: ' + escapeHtml(location) + '</p>'\r\n\r\n  // send a 301\r\n  res.statusCode = 301\r\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8')\r\n  res.setHeader('Content-Length', String(Buffer.byteLength(body, 'utf-8')))\r\n  res.setHeader('Location', location)\r\n  res.end(body, 'utf-8')\r\n})\r\n```\r\n\r\n## Testing\r\n\r\n```sh\r\n$ npm test\r\n$ npm run lint\r\n```\r\n\r\n## References\r\n\r\n- [RFC 3986: Uniform Resource Identifier (URI): Generic Syntax][rfc-3986]\r\n- [WHATWG URL Living Standard][whatwg-url]\r\n\r\n[rfc-3986]: https://tools.ietf.org/html/rfc3986\r\n[whatwg-url]: https://url.spec.whatwg.org/\r\n\r\n## License\r\n\r\n[MIT](LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/encodeurl.svg\r\n[npm-url]: https://npmjs.org/package/encodeurl\r\n[node-version-image]: https://img.shields.io/node/v/encodeurl.svg\r\n[node-version-url]: https://nodejs.org/en/download\r\n[travis-image]: https://img.shields.io/travis/pillarjs/encodeurl.svg\r\n[travis-url]: https://travis-ci.org/pillarjs/encodeurl\r\n[coveralls-image]: https://img.shields.io/coveralls/pillarjs/encodeurl.svg\r\n[coveralls-url]: https://coveralls.io/r/pillarjs/encodeurl?branch=master\r\n[downloads-image]: https://img.shields.io/npm/dm/encodeurl.svg\r\n[downloads-url]: https://npmjs.org/package/encodeurl\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/encodeurl/README.md b/node_modules/encodeurl/README.md
--- a/node_modules/encodeurl/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/encodeurl/README.md	(date 1753913035661)
@@ -1,21 +1,11 @@
-# encodeurl
+# Encode URL
 
-[![NPM Version][npm-image]][npm-url]
-[![NPM Downloads][downloads-image]][downloads-url]
-[![Node.js Version][node-version-image]][node-version-url]
-[![Build Status][travis-image]][travis-url]
-[![Test Coverage][coveralls-image]][coveralls-url]
-
-Encode a URL to a percent-encoded form, excluding already-encoded sequences
+Encode a URL to a percent-encoded form, excluding already-encoded sequences.
 
 ## Installation
 
-This is a [Node.js](https://nodejs.org/en/) module available through the
-[npm registry](https://www.npmjs.com/). Installation is done using the
-[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):
-
 ```sh
-$ npm install encodeurl
+npm install encodeurl
 ```
 
 ## API
@@ -28,24 +18,13 @@
 
 Encode a URL to a percent-encoded form, excluding already-encoded sequences.
 
-This function will take an already-encoded URL and encode all the non-URL
-code points (as UTF-8 byte sequences). This function will not encode the
-"%" character unless it is not part of a valid sequence (`%20` will be
-left as-is, but `%foo` will be encoded as `%25foo`).
+This function accepts a URL and encodes all the non-URL code points (as UTF-8 byte sequences). It will not encode the "%" character unless it is not part of a valid sequence (`%20` will be left as-is, but `%foo` will be encoded as `%25foo`).
 
-This encode is meant to be "safe" and does not throw errors. It will try as
-hard as it can to properly encode the given URL, including replacing any raw,
-unpaired surrogate pairs with the Unicode replacement character prior to
-encoding.
-
-This function is _similar_ to the intrinsic function `encodeURI`, except it
-will not encode the `%` character if that is part of a valid sequence, will
-not encode `[` and `]` (for IPv6 hostnames) and will replace raw, unpaired
-surrogate pairs with the Unicode replacement character (instead of throwing).
+This encode is meant to be "safe" and does not throw errors. It will try as hard as it can to properly encode the given URL, including replacing any raw, unpaired surrogate pairs with the Unicode replacement character prior to encoding.
 
 ## Examples
 
-### Encode a URL containing user-controled data
+### Encode a URL containing user-controlled data
 
 ```js
 var encodeUrl = require('encodeurl')
@@ -97,6 +76,19 @@
 })
 ```
 
+## Similarities
+
+This function is _similar_ to the intrinsic function `encodeURI`. However, it will not encode:
+
+* The `\`, `^`, or `|` characters
+* The `%` character when it's part of a valid sequence
+* `[` and `]` (for IPv6 hostnames)
+* Replaces raw, unpaired surrogate pairs with the Unicode replacement character
+
+As a result, the encoding aligns closely with the behavior in the [WHATWG URL specification][whatwg-url]. However, this package only encodes strings and does not do any URL parsing or formatting.
+
+It is expected that any output from `new URL(url)` will not change when used with this package, as the output has already been encoded. Additionally, if we were to encode before `new URL(url)`, we do not expect the before and after encoded formats to be parsed any differently.
+
 ## Testing
 
 ```sh
@@ -115,14 +107,3 @@
 ## License
 
 [MIT](LICENSE)
-
-[npm-image]: https://img.shields.io/npm/v/encodeurl.svg
-[npm-url]: https://npmjs.org/package/encodeurl
-[node-version-image]: https://img.shields.io/node/v/encodeurl.svg
-[node-version-url]: https://nodejs.org/en/download
-[travis-image]: https://img.shields.io/travis/pillarjs/encodeurl.svg
-[travis-url]: https://travis-ci.org/pillarjs/encodeurl
-[coveralls-image]: https://img.shields.io/coveralls/pillarjs/encodeurl.svg
-[coveralls-url]: https://coveralls.io/r/pillarjs/encodeurl?branch=master
-[downloads-image]: https://img.shields.io/npm/dm/encodeurl.svg
-[downloads-url]: https://npmjs.org/package/encodeurl
Index: node_modules/encodeurl/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*!\r\n * encodeurl\r\n * Copyright(c) 2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = encodeUrl\r\n\r\n/**\r\n * RegExp to match non-URL code points, *after* encoding (i.e. not including \"%\")\r\n * and including invalid escape sequences.\r\n * @private\r\n */\r\n\r\nvar ENCODE_CHARS_REGEXP = /(?:[^\\x21\\x25\\x26-\\x3B\\x3D\\x3F-\\x5B\\x5D\\x5F\\x61-\\x7A\\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g\r\n\r\n/**\r\n * RegExp to match unmatched surrogate pair.\r\n * @private\r\n */\r\n\r\nvar UNMATCHED_SURROGATE_PAIR_REGEXP = /(^|[^\\uD800-\\uDBFF])[\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF]([^\\uDC00-\\uDFFF]|$)/g\r\n\r\n/**\r\n * String to replace unmatched surrogate pair with.\r\n * @private\r\n */\r\n\r\nvar UNMATCHED_SURROGATE_PAIR_REPLACE = '$1\\uFFFD$2'\r\n\r\n/**\r\n * Encode a URL to a percent-encoded form, excluding already-encoded sequences.\r\n *\r\n * This function will take an already-encoded URL and encode all the non-URL\r\n * code points. This function will not encode the \"%\" character unless it is\r\n * not part of a valid sequence (`%20` will be left as-is, but `%foo` will\r\n * be encoded as `%25foo`).\r\n *\r\n * This encode is meant to be \"safe\" and does not throw errors. It will try as\r\n * hard as it can to properly encode the given URL, including replacing any raw,\r\n * unpaired surrogate pairs with the Unicode replacement character prior to\r\n * encoding.\r\n *\r\n * @param {string} url\r\n * @return {string}\r\n * @public\r\n */\r\n\r\nfunction encodeUrl (url) {\r\n  return String(url)\r\n    .replace(UNMATCHED_SURROGATE_PAIR_REGEXP, UNMATCHED_SURROGATE_PAIR_REPLACE)\r\n    .replace(ENCODE_CHARS_REGEXP, encodeURI)\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/encodeurl/index.js b/node_modules/encodeurl/index.js
--- a/node_modules/encodeurl/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/encodeurl/index.js	(date 1753913035656)
@@ -19,7 +19,7 @@
  * @private
  */
 
-var ENCODE_CHARS_REGEXP = /(?:[^\x21\x25\x26-\x3B\x3D\x3F-\x5B\x5D\x5F\x61-\x7A\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g
+var ENCODE_CHARS_REGEXP = /(?:[^\x21\x23-\x3B\x3D\x3F-\x5F\x61-\x7A\x7C\x7E]|%(?:[^0-9A-Fa-f]|[0-9A-Fa-f][^0-9A-Fa-f]|$))+/g
 
 /**
  * RegExp to match unmatched surrogate pair.
Index: node_modules/pg-protocol/dist/inbound-parser.test.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"version\":3,\"file\":\"inbound-parser.test.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/inbound-parser.test.ts\"],\"names\":[],\"mappings\":\";;;;;;;;;;;;;;AAAA,0EAA4C;AAC5C,wEAA8C;AAC9C,wBAAyB;AACzB,oDAA2B;AAC3B,mCAAoC;AAGpC,IAAI,YAAY,GAAG,sBAAO,CAAC,gBAAgB,EAAE,CAAA;AAC7C,IAAI,iBAAiB,GAAG,sBAAO,CAAC,eAAe,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAA;AAC1E,IAAI,mBAAmB,GAAG,sBAAO,CAAC,aAAa,EAAE,CAAA;AACjD,IAAI,oBAAoB,GAAG,sBAAO,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AACvD,IAAI,qBAAqB,GAAG,sBAAO,CAAC,eAAe,CAAC,UAAU,CAAC,CAAA;AAC/D,IAAI,mBAAmB,GAAG,sBAAO,CAAC,aAAa,EAAE,CAAA;AACjD,IAAI,kBAAkB,GAAG,sBAAO,CAAC,YAAY,EAAE,CAAA;AAC/C,IAAI,qBAAqB,GAAG,sBAAO,CAAC,eAAe,EAAE,CAAA;AAErD,IAAI,MAAM,GAAG,UAAU,UAAsB,EAAE,IAAY,EAAE,MAAc;IACzE,OAAO,UAAU;SACd,UAAU,CAAC,IAAI,CAAC,CAAC,aAAa;SAC9B,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,WAAW;SAC9B,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,6BAA6B;SAChD,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,gCAAgC;SACnD,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,gBAAgB;SACnC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,gBAAgB;SACnC,QAAQ,CAAC,CAAC,CAAC,CAAA,CAAC,yBAAyB;AAC1C,CAAC,CAAA;AAED,IAAI,IAAI,GAAG;IACT,IAAI,EAAE,IAAI;IACV,OAAO,EAAE,CAAC;IACV,eAAe,EAAE,CAAC;IAClB,UAAU,EAAE,CAAC;IACb,YAAY,EAAE,CAAC;IACf,YAAY,EAAE,CAAC;IACf,UAAU,EAAE,CAAC;CACd,CAAA;AACD,IAAI,cAAc,GAAG,sBAAO,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;AACnD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAA;AAElB,IAAI,SAAS,GAAG,sBAAO,CAAC,cAAc,CAAC;IACrC,IAAI;IACJ;QACE,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,EAAE;QACX,eAAe,EAAE,EAAE;QACnB,UAAU,EAAE,EAAE;QACd,YAAY,EAAE,EAAE;QAChB,YAAY,EAAE,EAAE;QAChB,UAAU,EAAE,CAAC;KACd;CACF,CAAC,CAAA;AAEF,IAAI,gBAAgB,GAAG,IAAI,qBAAU,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;AAEnE,IAAI,gBAAgB,GAAG,sBAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;AAE1C,IAAI,WAAW,GAAG,IAAI,qBAAU,EAAE;KAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,mBAAmB;KAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,4BAA4B;KACxC,UAAU,CAAC,MAAM,CAAC;KAClB,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;AAElB,IAAI,WAAW,GAAG,sBAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA;AAE3C,IAAI,iCAAiC,GAAG;IACtC,IAAI,EAAE,kBAAkB;IACxB,MAAM,EAAE,CAAC;CACV,CAAA;AAED,IAAI,8BAA8B,GAAG;IACnC,IAAI,EAAE,iBAAiB;IACvB,aAAa,EAAE,iBAAiB;IAChC,cAAc,EAAE,MAAM;IACtB,MAAM,EAAE,EAAE;CACX,CAAA;AAED,IAAI,6BAA6B,GAAG;IAClC,IAAI,EAAE,gBAAgB;IACtB,SAAS,EAAE,CAAC;IACZ,SAAS,EAAE,CAAC;CACb,CAAA;AAED,IAAI,4BAA4B,GAAG;IACjC,IAAI,EAAE,eAAe;IACrB,MAAM,EAAE,CAAC;IACT,MAAM,EAAE,GAAG;CACZ,CAAA;AAED,IAAI,8BAA8B,GAAG;IACnC,IAAI,EAAE,iBAAiB;IACvB,MAAM,EAAE,EAAE;IACV,IAAI,EAAE,UAAU;CACjB,CAAA;AACD,IAAI,yBAAyB,GAAG,IAAI,qBAAU,EAAE;KAC7C,QAAQ,CAAC,CAAC,CAAC,CAAC,mBAAmB;KAC/B,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;AAElB,IAAI,kCAAkC,GAAG;IACvC,IAAI,EAAE,gBAAgB;IACtB,MAAM,EAAE,CAAC;IACT,UAAU,EAAE,CAAC;IACb,MAAM,EAAE,EAAE;CACX,CAAA;AACD,IAAI,qBAAqB,GAAG;IAC1B,IAAI,EAAE,gBAAgB;IACtB,MAAM,EAAE,EAAE;IACV,UAAU,EAAE,CAAC;IACb,MAAM,EAAE;QACN;YACE,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,CAAC;YACb,YAAY,EAAE,CAAC;YACf,gBAAgB,EAAE,CAAC;YACnB,MAAM,EAAE,MAAM;SACf;KACF;CACF,CAAA;AAED,IAAI,qBAAqB,GAAG;IAC1B,IAAI,EAAE,gBAAgB;IACtB,MAAM,EAAE,EAAE;IACV,UAAU,EAAE,CAAC;IACb,MAAM,EAAE;QACN;YACE,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,CAAC;YACb,YAAY,EAAE,CAAC;YACf,gBAAgB,EAAE,CAAC;YACnB,MAAM,EAAE,MAAM;SACf;QACD;YACE,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,EAAE;YAChB,gBAAgB,EAAE,EAAE;YACpB,MAAM,EAAE,MAAM;SACf;KACF;CACF,CAAA;AAED,IAAI,+BAA+B,GAAG,IAAI,qBAAU,EAAE;KACnD,QAAQ,CAAC,CAAC,CAAC,CAAC,uBAAuB;KACnC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;AAElB,IAAI,mBAAmB,GAAG,sBAAO,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;AAE9D,IAAI,mBAAmB,GAAG,sBAAO,CAAC,oBAAoB,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA;AAEpE,IAAI,wCAAwC,GAAG;IAC7C,IAAI,EAAE,sBAAsB;IAC5B,MAAM,EAAE,CAAC;IACT,cAAc,EAAE,CAAC;IACjB,WAAW,EAAE,EAAE;CAChB,CAAA;AAED,IAAI,2BAA2B,GAAG;IAChC,IAAI,EAAE,sBAAsB;IAC5B,MAAM,EAAE,EAAE;IACV,cAAc,EAAE,CAAC;IACjB,WAAW,EAAE,CAAC,IAAI,CAAC;CACpB,CAAA;AAED,IAAI,2BAA2B,GAAG;IAChC,IAAI,EAAE,sBAAsB;IAC5B,MAAM,EAAE,EAAE;IACV,cAAc,EAAE,CAAC;IACjB,WAAW,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;CAC1B,CAAA;AAED,IAAI,cAAc,GAAG,UAAU,MAAc,EAAE,eAAoB;IACjE,EAAE,CAAC,sBAAsB,GAAG,eAAe,CAAC,IAAI,EAAE,GAAS,EAAE;QAC3D,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA;QAC7C,MAAM,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAA;QAE9B,KAAK,MAAM,GAAG,IAAI,eAAe,EAAE;YACjC,gBAAM,CAAC,SAAS,CAAE,WAAmB,CAAC,GAAG,CAAC,EAAE,eAAe,CAAC,GAAG,CAAC,CAAC,CAAA;SAClE;IACH,CAAC,CAAA,CAAC,CAAA;AACJ,CAAC,CAAA;AAED,IAAI,mBAAmB,GAAG,sBAAO,CAAC,+BAA+B,EAAE,CAAA;AACnE,IAAI,iBAAiB,GAAG,sBAAO,CAAC,yBAAyB,EAAE,CAAA;AAC3D,IAAI,UAAU,GAAG,sBAAO,CAAC,kBAAkB,EAAE,CAAA;AAC7C,IAAI,kBAAkB,GAAG,sBAAO,CAAC,0BAA0B,EAAE,CAAA;AAC7D,IAAI,eAAe,GAAG,sBAAO,CAAC,uBAAuB,EAAE,CAAA;AAEvD,IAAI,4BAA4B,GAAG;IACjC,IAAI,EAAE,iCAAiC;CACxC,CAAA;AAED,IAAI,0BAA0B,GAAG;IAC/B,IAAI,EAAE,2BAA2B;IACjC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;CAChC,CAAA;AAED,IAAI,mBAAmB,GAAG;IACxB,IAAI,EAAE,oBAAoB;IAC1B,UAAU,EAAE,CAAC,eAAe,CAAC;CAC9B,CAAA;AAED,IAAI,2BAA2B,GAAG;IAChC,IAAI,EAAE,4BAA4B;IAClC,IAAI,EAAE,MAAM;CACb,CAAA;AAED,IAAI,wBAAwB,GAAG;IAC7B,IAAI,EAAE,yBAAyB;IAC/B,IAAI,EAAE,MAAM;CACb,CAAA;AAED,IAAI,0BAA0B,GAAG,sBAAO,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,CAAA;AACtE,IAAI,mCAAmC,GAAG;IACxC,IAAI,EAAE,cAAc;IACpB,SAAS,EAAE,CAAC;IACZ,OAAO,EAAE,IAAI;IACb,OAAO,EAAE,MAAM;CAChB,CAAA;AAED,MAAM,YAAY,GAAG,CAAO,OAAiB,EAA6B,EAAE;IAC1E,MAAM,MAAM,GAAG,IAAI,oBAAW,EAAE,CAAA;IAChC,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;QAC5B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;KACrB;IACD,MAAM,CAAC,GAAG,EAAE,CAAA;IACZ,MAAM,IAAI,GAAqB,EAAE,CAAA;IACjC,MAAM,IAAA,QAAK,EAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;IAC5C,OAAO,IAAI,CAAA;AACb,CAAC,CAAA,CAAA;AAED,QAAQ,CAAC,gBAAgB,EAAE;IACzB,cAAc,CAAC,YAAY,EAAE,iCAAiC,CAAC,CAAA;IAC/D,cAAc,CAAC,mBAAmB,EAAE,4BAA4B,CAAC,CAAA;IACjE,cAAc,CAAC,iBAAiB,EAAE,0BAA0B,CAAC,CAAA;IAC7D,cAAc,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAA;IAC/C,cAAc,CAAC,kBAAkB,EAAE,2BAA2B,CAAC,CAAA;IAE/D,4CAA4C;IAC5C,2EAA2E;IAC3E,yFAAyF;IACzF,MAAM,0BAA0B,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,kBAAkB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IACjG,cAAc,CAAC,0BAA0B,EAAE,2BAA2B,CAAC,CAAA;IAEvE,cAAc,CAAC,eAAe,EAAE,wBAAwB,CAAC,CAAA;IAEzD,4CAA4C;IAC5C,2EAA2E;IAC3E,yFAAyF;IACzF,MAAM,uBAAuB,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,eAAe,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IAC3F,cAAc,CAAC,uBAAuB,EAAE,wBAAwB,CAAC,CAAA;IAEjE,cAAc,CAAC,iBAAiB,EAAE,8BAA8B,CAAC,CAAA;IACjE,cAAc,CAAC,oBAAoB,EAAE,6BAA6B,CAAC,CAAA;IACnE,cAAc,CAAC,mBAAmB,EAAE,4BAA4B,CAAC,CAAA;IACjE,cAAc,CAAC,qBAAqB,EAAE,8BAA8B,CAAC,CAAA;IACrE,cAAc,CAAC,0BAA0B,EAAE,mCAAmC,CAAC,CAAA;IAC/E,cAAc,CAAC,sBAAO,CAAC,UAAU,EAAE,EAAE;QACnC,IAAI,EAAE,YAAY;QAClB,MAAM,EAAE,CAAC;KACV,CAAC,CAAA;IAEF,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;QAC9C,IAAI,EAAE,QAAQ;KACf,CAAC,CAAA;IAEF,QAAQ,CAAC,yBAAyB,EAAE;QAClC,cAAc,CAAC,yBAAyB,EAAE,kCAAkC,CAAC,CAAA;QAC7E,cAAc,CAAC,cAAc,EAAE,qBAAqB,CAAC,CAAA;QACrD,cAAc,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAA;IAClD,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,+BAA+B,EAAE;QACxC,cAAc,CAAC,+BAA+B,EAAE,wCAAwC,CAAC,CAAA;QACzF,cAAc,CAAC,mBAAmB,EAAE,2BAA2B,CAAC,CAAA;QAChE,cAAc,CAAC,mBAAmB,EAAE,2BAA2B,CAAC,CAAA;IAClE,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,cAAc,EAAE;QACvB,QAAQ,CAAC,mBAAmB,EAAE;YAC5B,cAAc,CAAC,gBAAgB,EAAE;gBAC/B,IAAI,EAAE,SAAS;gBACf,UAAU,EAAE,CAAC;aACd,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,QAAQ,CAAC,8BAA8B,EAAE;YACvC,cAAc,CAAC,WAAW,EAAE;gBAC1B,IAAI,EAAE,SAAS;gBACf,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE,CAAC,MAAM,CAAC;aACjB,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,gBAAgB,EAAE;QACzB,4CAA4C;QAC5C,IAAI,IAAI,GAAG,sBAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,CAAA;QACzD,cAAc,CAAC,IAAI,EAAE;YACnB,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,MAAM;SACb,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,cAAc,CAAC,sBAAO,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;QAChC,IAAI,EAAE,OAAO;KACd,CAAC,CAAA;IAEF,QAAQ,CAAC,qBAAqB,EAAE;QAC9B,IAAI,MAAM,GAAG,sBAAO,CAAC,KAAK,CAAC;YACzB;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,OAAO;aACf;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,MAAM;aACd;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,MAAM;aACd;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,KAAK;aACb;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,KAAK;aACb;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,OAAO;aACf;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,OAAO;aACf;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,MAAM;aACd;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,MAAM;aACd;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,QAAQ;aAChB;SACF,CAAC,CAAA;QAEF,cAAc,CAAC,MAAM,EAAE;YACrB,IAAI,EAAE,OAAO;YACb,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,SAAS;YAClB,MAAM,EAAE,SAAS;YACjB,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,KAAK;YACf,gBAAgB,EAAE,KAAK;YACvB,aAAa,EAAE,OAAO;YACtB,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,SAAS;SACnB,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,cAAc,CAAC,mBAAmB,EAAE;QAClC,IAAI,EAAE,eAAe;KACtB,CAAC,CAAA;IAEF,cAAc,CAAC,kBAAkB,EAAE;QACjC,IAAI,EAAE,cAAc;KACrB,CAAC,CAAA;IAEF,cAAc,CAAC,kBAAkB,EAAE;QACjC,IAAI,EAAE,cAAc;KACrB,CAAC,CAAA;IAEF,cAAc,CAAC,sBAAO,CAAC,aAAa,EAAE,EAAE;QACtC,IAAI,EAAE,eAAe;KACtB,CAAC,CAAA;IAEF,QAAQ,CAAC,iCAAiC,EAAE;QAC1C,cAAc,CAAC,qBAAqB,EAAE;YACpC,IAAI,EAAE,iBAAiB;SACxB,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,kCAAkC,EAAE;QAC3C,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE;YAC1D,IAAI,EAAE,kBAAkB;YACxB,MAAM,EAAE,CAAC;SACV,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;QACpB,cAAc,CAAC,sBAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YAChC,IAAI,EAAE,gBAAgB;YACtB,MAAM,EAAE,CAAC;YACT,MAAM,EAAE,KAAK;YACb,WAAW,EAAE,EAAE;SAChB,CAAC,CAAA;QAEF,cAAc,CAAC,sBAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YAChC,IAAI,EAAE,gBAAgB;YACtB,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,KAAK;YACb,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;SACpB,CAAC,CAAA;QAEF,cAAc,CAAC,sBAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACjC,IAAI,EAAE,iBAAiB;YACvB,MAAM,EAAE,CAAC;YACT,MAAM,EAAE,KAAK;YACb,WAAW,EAAE,EAAE;SAChB,CAAC,CAAA;QAEF,cAAc,CAAC,sBAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACjC,IAAI,EAAE,iBAAiB;YACvB,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,KAAK;YACb,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACvB,CAAC,CAAA;QAEF,cAAc,CAAC,sBAAO,CAAC,QAAQ,EAAE,EAAE;YACjC,IAAI,EAAE,UAAU;YAChB,MAAM,EAAE,CAAC;SACV,CAAC,CAAA;QAEF,cAAc,CAAC,sBAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;YACvD,IAAI,EAAE,UAAU;YAChB,MAAM,EAAE,CAAC;YACT,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC9B,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,uEAAuE;IACvE,uEAAuE;IACvE,yBAAyB;IACzB,QAAQ,CAAC,sCAAsC,EAAE;QAC/C,IAAI,UAAU,GAAG,sBAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;QAEtE,EAAE,CAAC,kCAAkC,EAAE;;gBACrC,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,CAAC,UAAU,CAAC,CAAC,CAAA;gBACjD,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAQ,CAAA;gBAClC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;gBACtC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;gBACrC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAA;gBACvC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAA;gBAC1C,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;gBACrC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;YACtC,CAAC;SAAA,CAAC,CAAA;QAEF,IAAI,+BAA+B,GAAG,UAAgB,KAAa;;gBACjE,IAAI,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA;gBACzD,IAAI,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,CAAA;gBACvE,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;gBAClC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,CAAA;gBACpD,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,CAAC,UAAU,CAAC,CAAC,CAAA;gBACjD,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAQ,CAAA;gBAClC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;gBACtC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;gBACrC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAA;gBACvC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAA;gBAC1C,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;gBACrC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;YACtC,CAAC;SAAA,CAAA;QAED,EAAE,CAAC,iCAAiC,EAAE;YACpC,+BAA+B,CAAC,CAAC,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,0BAA0B,EAAE;YAC7B,+BAA+B,CAAC,CAAC,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,gCAAgC,EAAE;YACnC,+BAA+B,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;YACtD,+BAA+B,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;YACtD,+BAA+B,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;QACxD,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,wCAAwC,EAAE;QACjD,IAAI,aAAa,GAAG,sBAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;QAC1C,IAAI,mBAAmB,GAAG,sBAAO,CAAC,aAAa,EAAE,CAAA;QACjD,IAAI,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAA;QAChF,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;QACpC,mBAAmB,CAAC,IAAI,CAAC,UAAU,EAAE,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;QAE7D,IAAI,cAAc,GAAG,UAAU,QAAe;YAC5C,gBAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;YACtC,gBAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAC5B,IAAI,EAAE,SAAS;gBACf,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE,EAAE;gBACV,MAAM,EAAE,CAAC,GAAG,CAAC;aACd,CAAC,CAAA;YACF,gBAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;YACxC,gBAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAC5B,IAAI,EAAE,eAAe;gBACrB,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,GAAG;aACZ,CAAC,CAAA;QACJ,CAAC,CAAA;QACD,eAAe;QACf,EAAE,CAAC,iDAAiD,EAAE;;gBACpD,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,CAAC,UAAU,CAAC,CAAC,CAAA;gBACjD,cAAc,CAAC,QAAQ,CAAC,CAAA;YAC1B,CAAC;SAAA,CAAC,CAAA;QAEF,IAAI,yBAAyB,GAAG,UAAgB,KAAa;;gBAC3D,IAAI,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA;gBACzD,IAAI,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,CAAA;gBACvE,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;gBAClC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,CAAA;gBACpD,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC,CAAA;gBAChE,cAAc,CAAC,QAAQ,CAAC,CAAA;YAC1B,CAAC;SAAA,CAAA;QAED,QAAQ,CAAC,6CAA6C,EAAE;YACtD,EAAE,CAAC,eAAe,EAAE;gBAClB,OAAO,yBAAyB,CAAC,EAAE,CAAC,CAAA;YACtC,CAAC,CAAC,CAAA;YACF,EAAE,CAAC,cAAc,EAAE;gBACjB,OAAO,OAAO,CAAC,GAAG,CAAC;oBACjB,yBAAyB,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;oBAChD,yBAAyB,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;oBAChD,yBAAyB,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;iBACjD,CAAC,CAAA;YACJ,CAAC,CAAC,CAAA;YAEF,EAAE,CAAC,YAAY,EAAE;gBACf,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC,EAAE,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YAClF,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA\"}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/dist/inbound-parser.test.js.map b/node_modules/pg-protocol/dist/inbound-parser.test.js.map
--- a/node_modules/pg-protocol/dist/inbound-parser.test.js.map	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/dist/inbound-parser.test.js.map	(date 1753913035312)
@@ -1,1 +1,1 @@
-{"version":3,"file":"inbound-parser.test.js","sourceRoot":"","sources":["../src/inbound-parser.test.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,0EAA4C;AAC5C,wEAA8C;AAC9C,wBAAyB;AACzB,oDAA2B;AAC3B,mCAAoC;AAGpC,IAAI,YAAY,GAAG,sBAAO,CAAC,gBAAgB,EAAE,CAAA;AAC7C,IAAI,iBAAiB,GAAG,sBAAO,CAAC,eAAe,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAA;AAC1E,IAAI,mBAAmB,GAAG,sBAAO,CAAC,aAAa,EAAE,CAAA;AACjD,IAAI,oBAAoB,GAAG,sBAAO,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AACvD,IAAI,qBAAqB,GAAG,sBAAO,CAAC,eAAe,CAAC,UAAU,CAAC,CAAA;AAC/D,IAAI,mBAAmB,GAAG,sBAAO,CAAC,aAAa,EAAE,CAAA;AACjD,IAAI,kBAAkB,GAAG,sBAAO,CAAC,YAAY,EAAE,CAAA;AAC/C,IAAI,qBAAqB,GAAG,sBAAO,CAAC,eAAe,EAAE,CAAA;AAErD,IAAI,MAAM,GAAG,UAAU,UAAsB,EAAE,IAAY,EAAE,MAAc;IACzE,OAAO,UAAU;SACd,UAAU,CAAC,IAAI,CAAC,CAAC,aAAa;SAC9B,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,WAAW;SAC9B,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,6BAA6B;SAChD,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,gCAAgC;SACnD,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,gBAAgB;SACnC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,gBAAgB;SACnC,QAAQ,CAAC,CAAC,CAAC,CAAA,CAAC,yBAAyB;AAC1C,CAAC,CAAA;AAED,IAAI,IAAI,GAAG;IACT,IAAI,EAAE,IAAI;IACV,OAAO,EAAE,CAAC;IACV,eAAe,EAAE,CAAC;IAClB,UAAU,EAAE,CAAC;IACb,YAAY,EAAE,CAAC;IACf,YAAY,EAAE,CAAC;IACf,UAAU,EAAE,CAAC;CACd,CAAA;AACD,IAAI,cAAc,GAAG,sBAAO,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;AACnD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAA;AAElB,IAAI,SAAS,GAAG,sBAAO,CAAC,cAAc,CAAC;IACrC,IAAI;IACJ;QACE,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,EAAE;QACX,eAAe,EAAE,EAAE;QACnB,UAAU,EAAE,EAAE;QACd,YAAY,EAAE,EAAE;QAChB,YAAY,EAAE,EAAE;QAChB,UAAU,EAAE,CAAC;KACd;CACF,CAAC,CAAA;AAEF,IAAI,gBAAgB,GAAG,IAAI,qBAAU,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;AAEnE,IAAI,gBAAgB,GAAG,sBAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;AAE1C,IAAI,WAAW,GAAG,IAAI,qBAAU,EAAE;KAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,mBAAmB;KAC/B,QAAQ,CAAC,CAAC,CAAC,CAAC,4BAA4B;KACxC,UAAU,CAAC,MAAM,CAAC;KAClB,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;AAElB,IAAI,WAAW,GAAG,sBAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA;AAE3C,IAAI,iCAAiC,GAAG;IACtC,IAAI,EAAE,kBAAkB;IACxB,MAAM,EAAE,CAAC;CACV,CAAA;AAED,IAAI,8BAA8B,GAAG;IACnC,IAAI,EAAE,iBAAiB;IACvB,aAAa,EAAE,iBAAiB;IAChC,cAAc,EAAE,MAAM;IACtB,MAAM,EAAE,EAAE;CACX,CAAA;AAED,IAAI,6BAA6B,GAAG;IAClC,IAAI,EAAE,gBAAgB;IACtB,SAAS,EAAE,CAAC;IACZ,SAAS,EAAE,CAAC;CACb,CAAA;AAED,IAAI,4BAA4B,GAAG;IACjC,IAAI,EAAE,eAAe;IACrB,MAAM,EAAE,CAAC;IACT,MAAM,EAAE,GAAG;CACZ,CAAA;AAED,IAAI,8BAA8B,GAAG;IACnC,IAAI,EAAE,iBAAiB;IACvB,MAAM,EAAE,EAAE;IACV,IAAI,EAAE,UAAU;CACjB,CAAA;AACD,IAAI,yBAAyB,GAAG,IAAI,qBAAU,EAAE;KAC7C,QAAQ,CAAC,CAAC,CAAC,CAAC,mBAAmB;KAC/B,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;AAElB,IAAI,kCAAkC,GAAG;IACvC,IAAI,EAAE,gBAAgB;IACtB,MAAM,EAAE,CAAC;IACT,UAAU,EAAE,CAAC;IACb,MAAM,EAAE,EAAE;CACX,CAAA;AACD,IAAI,qBAAqB,GAAG;IAC1B,IAAI,EAAE,gBAAgB;IACtB,MAAM,EAAE,EAAE;IACV,UAAU,EAAE,CAAC;IACb,MAAM,EAAE;QACN;YACE,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,CAAC;YACb,YAAY,EAAE,CAAC;YACf,gBAAgB,EAAE,CAAC;YACnB,MAAM,EAAE,MAAM;SACf;KACF;CACF,CAAA;AAED,IAAI,qBAAqB,GAAG;IAC1B,IAAI,EAAE,gBAAgB;IACtB,MAAM,EAAE,EAAE;IACV,UAAU,EAAE,CAAC;IACb,MAAM,EAAE;QACN;YACE,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,CAAC;YACb,YAAY,EAAE,CAAC;YACf,gBAAgB,EAAE,CAAC;YACnB,MAAM,EAAE,MAAM;SACf;QACD;YACE,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,EAAE;YAChB,gBAAgB,EAAE,EAAE;YACpB,MAAM,EAAE,MAAM;SACf;KACF;CACF,CAAA;AAED,IAAI,+BAA+B,GAAG,IAAI,qBAAU,EAAE;KACnD,QAAQ,CAAC,CAAC,CAAC,CAAC,uBAAuB;KACnC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;AAElB,IAAI,mBAAmB,GAAG,sBAAO,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;AAE9D,IAAI,mBAAmB,GAAG,sBAAO,CAAC,oBAAoB,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA;AAEpE,IAAI,wCAAwC,GAAG;IAC7C,IAAI,EAAE,sBAAsB;IAC5B,MAAM,EAAE,CAAC;IACT,cAAc,EAAE,CAAC;IACjB,WAAW,EAAE,EAAE;CAChB,CAAA;AAED,IAAI,2BAA2B,GAAG;IAChC,IAAI,EAAE,sBAAsB;IAC5B,MAAM,EAAE,EAAE;IACV,cAAc,EAAE,CAAC;IACjB,WAAW,EAAE,CAAC,IAAI,CAAC;CACpB,CAAA;AAED,IAAI,2BAA2B,GAAG;IAChC,IAAI,EAAE,sBAAsB;IAC5B,MAAM,EAAE,EAAE;IACV,cAAc,EAAE,CAAC;IACjB,WAAW,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;CAC1B,CAAA;AAED,IAAI,cAAc,GAAG,UAAU,MAAc,EAAE,eAAoB;IACjE,EAAE,CAAC,sBAAsB,GAAG,eAAe,CAAC,IAAI,EAAE,GAAS,EAAE;QAC3D,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA;QAC7C,MAAM,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAA;QAE9B,KAAK,MAAM,GAAG,IAAI,eAAe,EAAE;YACjC,gBAAM,CAAC,SAAS,CAAE,WAAmB,CAAC,GAAG,CAAC,EAAE,eAAe,CAAC,GAAG,CAAC,CAAC,CAAA;SAClE;IACH,CAAC,CAAA,CAAC,CAAA;AACJ,CAAC,CAAA;AAED,IAAI,mBAAmB,GAAG,sBAAO,CAAC,+BAA+B,EAAE,CAAA;AACnE,IAAI,iBAAiB,GAAG,sBAAO,CAAC,yBAAyB,EAAE,CAAA;AAC3D,IAAI,UAAU,GAAG,sBAAO,CAAC,kBAAkB,EAAE,CAAA;AAC7C,IAAI,kBAAkB,GAAG,sBAAO,CAAC,0BAA0B,EAAE,CAAA;AAC7D,IAAI,eAAe,GAAG,sBAAO,CAAC,uBAAuB,EAAE,CAAA;AAEvD,IAAI,4BAA4B,GAAG;IACjC,IAAI,EAAE,iCAAiC;CACxC,CAAA;AAED,IAAI,0BAA0B,GAAG;IAC/B,IAAI,EAAE,2BAA2B;IACjC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;CAChC,CAAA;AAED,IAAI,mBAAmB,GAAG;IACxB,IAAI,EAAE,oBAAoB;IAC1B,UAAU,EAAE,CAAC,eAAe,CAAC;CAC9B,CAAA;AAED,IAAI,2BAA2B,GAAG;IAChC,IAAI,EAAE,4BAA4B;IAClC,IAAI,EAAE,MAAM;CACb,CAAA;AAED,IAAI,wBAAwB,GAAG;IAC7B,IAAI,EAAE,yBAAyB;IAC/B,IAAI,EAAE,MAAM;CACb,CAAA;AAED,IAAI,0BAA0B,GAAG,sBAAO,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,CAAA;AACtE,IAAI,mCAAmC,GAAG;IACxC,IAAI,EAAE,cAAc;IACpB,SAAS,EAAE,CAAC;IACZ,OAAO,EAAE,IAAI;IACb,OAAO,EAAE,MAAM;CAChB,CAAA;AAED,MAAM,YAAY,GAAG,CAAO,OAAiB,EAA6B,EAAE;IAC1E,MAAM,MAAM,GAAG,IAAI,oBAAW,EAAE,CAAA;IAChC,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;QAC5B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;KACrB;IACD,MAAM,CAAC,GAAG,EAAE,CAAA;IACZ,MAAM,IAAI,GAAqB,EAAE,CAAA;IACjC,MAAM,IAAA,QAAK,EAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;IAC5C,OAAO,IAAI,CAAA;AACb,CAAC,CAAA,CAAA;AAED,QAAQ,CAAC,gBAAgB,EAAE;IACzB,cAAc,CAAC,YAAY,EAAE,iCAAiC,CAAC,CAAA;IAC/D,cAAc,CAAC,mBAAmB,EAAE,4BAA4B,CAAC,CAAA;IACjE,cAAc,CAAC,iBAAiB,EAAE,0BAA0B,CAAC,CAAA;IAC7D,cAAc,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAA;IAC/C,cAAc,CAAC,kBAAkB,EAAE,2BAA2B,CAAC,CAAA;IAE/D,4CAA4C;IAC5C,2EAA2E;IAC3E,yFAAyF;IACzF,MAAM,0BAA0B,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,kBAAkB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IACjG,cAAc,CAAC,0BAA0B,EAAE,2BAA2B,CAAC,CAAA;IAEvE,cAAc,CAAC,eAAe,EAAE,wBAAwB,CAAC,CAAA;IAEzD,4CAA4C;IAC5C,2EAA2E;IAC3E,yFAAyF;IACzF,MAAM,uBAAuB,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,eAAe,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IAC3F,cAAc,CAAC,uBAAuB,EAAE,wBAAwB,CAAC,CAAA;IAEjE,cAAc,CAAC,iBAAiB,EAAE,8BAA8B,CAAC,CAAA;IACjE,cAAc,CAAC,oBAAoB,EAAE,6BAA6B,CAAC,CAAA;IACnE,cAAc,CAAC,mBAAmB,EAAE,4BAA4B,CAAC,CAAA;IACjE,cAAc,CAAC,qBAAqB,EAAE,8BAA8B,CAAC,CAAA;IACrE,cAAc,CAAC,0BAA0B,EAAE,mCAAmC,CAAC,CAAA;IAC/E,cAAc,CAAC,sBAAO,CAAC,UAAU,EAAE,EAAE;QACnC,IAAI,EAAE,YAAY;QAClB,MAAM,EAAE,CAAC;KACV,CAAC,CAAA;IAEF,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;QAC9C,IAAI,EAAE,QAAQ;KACf,CAAC,CAAA;IAEF,QAAQ,CAAC,yBAAyB,EAAE;QAClC,cAAc,CAAC,yBAAyB,EAAE,kCAAkC,CAAC,CAAA;QAC7E,cAAc,CAAC,cAAc,EAAE,qBAAqB,CAAC,CAAA;QACrD,cAAc,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAA;IAClD,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,+BAA+B,EAAE;QACxC,cAAc,CAAC,+BAA+B,EAAE,wCAAwC,CAAC,CAAA;QACzF,cAAc,CAAC,mBAAmB,EAAE,2BAA2B,CAAC,CAAA;QAChE,cAAc,CAAC,mBAAmB,EAAE,2BAA2B,CAAC,CAAA;IAClE,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,cAAc,EAAE;QACvB,QAAQ,CAAC,mBAAmB,EAAE;YAC5B,cAAc,CAAC,gBAAgB,EAAE;gBAC/B,IAAI,EAAE,SAAS;gBACf,UAAU,EAAE,CAAC;aACd,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,QAAQ,CAAC,8BAA8B,EAAE;YACvC,cAAc,CAAC,WAAW,EAAE;gBAC1B,IAAI,EAAE,SAAS;gBACf,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE,CAAC,MAAM,CAAC;aACjB,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,gBAAgB,EAAE;QACzB,4CAA4C;QAC5C,IAAI,IAAI,GAAG,sBAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,CAAA;QACzD,cAAc,CAAC,IAAI,EAAE;YACnB,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,MAAM;SACb,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,cAAc,CAAC,sBAAO,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;QAChC,IAAI,EAAE,OAAO;KACd,CAAC,CAAA;IAEF,QAAQ,CAAC,qBAAqB,EAAE;QAC9B,IAAI,MAAM,GAAG,sBAAO,CAAC,KAAK,CAAC;YACzB;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,OAAO;aACf;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,MAAM;aACd;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,MAAM;aACd;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,KAAK;aACb;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,KAAK;aACb;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,OAAO;aACf;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,OAAO;aACf;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,MAAM;aACd;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,MAAM;aACd;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,QAAQ;aAChB;SACF,CAAC,CAAA;QAEF,cAAc,CAAC,MAAM,EAAE;YACrB,IAAI,EAAE,OAAO;YACb,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,SAAS;YAClB,MAAM,EAAE,SAAS;YACjB,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,KAAK;YACf,gBAAgB,EAAE,KAAK;YACvB,aAAa,EAAE,OAAO;YACtB,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,SAAS;SACnB,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,cAAc,CAAC,mBAAmB,EAAE;QAClC,IAAI,EAAE,eAAe;KACtB,CAAC,CAAA;IAEF,cAAc,CAAC,kBAAkB,EAAE;QACjC,IAAI,EAAE,cAAc;KACrB,CAAC,CAAA;IAEF,cAAc,CAAC,kBAAkB,EAAE;QACjC,IAAI,EAAE,cAAc;KACrB,CAAC,CAAA;IAEF,cAAc,CAAC,sBAAO,CAAC,aAAa,EAAE,EAAE;QACtC,IAAI,EAAE,eAAe;KACtB,CAAC,CAAA;IAEF,QAAQ,CAAC,iCAAiC,EAAE;QAC1C,cAAc,CAAC,qBAAqB,EAAE;YACpC,IAAI,EAAE,iBAAiB;SACxB,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,kCAAkC,EAAE;QAC3C,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE;YAC1D,IAAI,EAAE,kBAAkB;YACxB,MAAM,EAAE,CAAC;SACV,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;QACpB,cAAc,CAAC,sBAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YAChC,IAAI,EAAE,gBAAgB;YACtB,MAAM,EAAE,CAAC;YACT,MAAM,EAAE,KAAK;YACb,WAAW,EAAE,EAAE;SAChB,CAAC,CAAA;QAEF,cAAc,CAAC,sBAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YAChC,IAAI,EAAE,gBAAgB;YACtB,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,KAAK;YACb,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;SACpB,CAAC,CAAA;QAEF,cAAc,CAAC,sBAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACjC,IAAI,EAAE,iBAAiB;YACvB,MAAM,EAAE,CAAC;YACT,MAAM,EAAE,KAAK;YACb,WAAW,EAAE,EAAE;SAChB,CAAC,CAAA;QAEF,cAAc,CAAC,sBAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACjC,IAAI,EAAE,iBAAiB;YACvB,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,KAAK;YACb,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACvB,CAAC,CAAA;QAEF,cAAc,CAAC,sBAAO,CAAC,QAAQ,EAAE,EAAE;YACjC,IAAI,EAAE,UAAU;YAChB,MAAM,EAAE,CAAC;SACV,CAAC,CAAA;QAEF,cAAc,CAAC,sBAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;YACvD,IAAI,EAAE,UAAU;YAChB,MAAM,EAAE,CAAC;YACT,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC9B,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,uEAAuE;IACvE,uEAAuE;IACvE,yBAAyB;IACzB,QAAQ,CAAC,sCAAsC,EAAE;QAC/C,IAAI,UAAU,GAAG,sBAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;QAEtE,EAAE,CAAC,kCAAkC,EAAE;;gBACrC,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,CAAC,UAAU,CAAC,CAAC,CAAA;gBACjD,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAQ,CAAA;gBAClC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;gBACtC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;gBACrC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAA;gBACvC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAA;gBAC1C,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;gBACrC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;YACtC,CAAC;SAAA,CAAC,CAAA;QAEF,IAAI,+BAA+B,GAAG,UAAgB,KAAa;;gBACjE,IAAI,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA;gBACzD,IAAI,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,CAAA;gBACvE,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;gBAClC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,CAAA;gBACpD,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,CAAC,UAAU,CAAC,CAAC,CAAA;gBACjD,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAQ,CAAA;gBAClC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;gBACtC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;gBACrC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAA;gBACvC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAA;gBAC1C,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;gBACrC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;YACtC,CAAC;SAAA,CAAA;QAED,EAAE,CAAC,iCAAiC,EAAE;YACpC,+BAA+B,CAAC,CAAC,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,0BAA0B,EAAE;YAC7B,+BAA+B,CAAC,CAAC,CAAC,CAAA;QACpC,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,gCAAgC,EAAE;YACnC,+BAA+B,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;YACtD,+BAA+B,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;YACtD,+BAA+B,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;QACxD,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,wCAAwC,EAAE;QACjD,IAAI,aAAa,GAAG,sBAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;QAC1C,IAAI,mBAAmB,GAAG,sBAAO,CAAC,aAAa,EAAE,CAAA;QACjD,IAAI,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAA;QAChF,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;QACpC,mBAAmB,CAAC,IAAI,CAAC,UAAU,EAAE,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;QAE7D,IAAI,cAAc,GAAG,UAAU,QAAe;YAC5C,gBAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;YACtC,gBAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAC5B,IAAI,EAAE,SAAS;gBACf,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE,EAAE;gBACV,MAAM,EAAE,CAAC,GAAG,CAAC;aACd,CAAC,CAAA;YACF,gBAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;YACxC,gBAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAC5B,IAAI,EAAE,eAAe;gBACrB,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,GAAG;aACZ,CAAC,CAAA;QACJ,CAAC,CAAA;QACD,eAAe;QACf,EAAE,CAAC,iDAAiD,EAAE;;gBACpD,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,CAAC,UAAU,CAAC,CAAC,CAAA;gBACjD,cAAc,CAAC,QAAQ,CAAC,CAAA;YAC1B,CAAC;SAAA,CAAC,CAAA;QAEF,IAAI,yBAAyB,GAAG,UAAgB,KAAa;;gBAC3D,IAAI,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA;gBACzD,IAAI,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,CAAA;gBACvE,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;gBAClC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,CAAA;gBACpD,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC,CAAA;gBAChE,cAAc,CAAC,QAAQ,CAAC,CAAA;YAC1B,CAAC;SAAA,CAAA;QAED,QAAQ,CAAC,6CAA6C,EAAE;YACtD,EAAE,CAAC,eAAe,EAAE;gBAClB,OAAO,yBAAyB,CAAC,EAAE,CAAC,CAAA;YACtC,CAAC,CAAC,CAAA;YACF,EAAE,CAAC,cAAc,EAAE;gBACjB,OAAO,OAAO,CAAC,GAAG,CAAC;oBACjB,yBAAyB,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;oBAChD,yBAAyB,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;oBAChD,yBAAyB,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;iBACjD,CAAC,CAAA;YACJ,CAAC,CAAC,CAAA;YAEF,EAAE,CAAC,YAAY,EAAE;gBACf,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC,EAAE,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YAClF,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
+{"version":3,"file":"inbound-parser.test.js","sourceRoot":"","sources":["../src/inbound-parser.test.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,0EAA4C;AAC5C,wEAA8C;AAC9C,wBAAyB;AACzB,oDAA2B;AAC3B,mCAAoC;AAGpC,MAAM,YAAY,GAAG,sBAAO,CAAC,gBAAgB,EAAE,CAAA;AAC/C,MAAM,iBAAiB,GAAG,sBAAO,CAAC,eAAe,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAA;AAC5E,MAAM,mBAAmB,GAAG,sBAAO,CAAC,aAAa,EAAE,CAAA;AACnD,MAAM,oBAAoB,GAAG,sBAAO,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;AACzD,MAAM,qBAAqB,GAAG,sBAAO,CAAC,eAAe,CAAC,UAAU,CAAC,CAAA;AACjE,MAAM,mBAAmB,GAAG,sBAAO,CAAC,aAAa,EAAE,CAAA;AACnD,MAAM,kBAAkB,GAAG,sBAAO,CAAC,YAAY,EAAE,CAAA;AACjD,MAAM,qBAAqB,GAAG,sBAAO,CAAC,eAAe,EAAE,CAAA;AAEvD,MAAM,IAAI,GAAG;IACX,IAAI,EAAE,IAAI;IACV,OAAO,EAAE,CAAC;IACV,eAAe,EAAE,CAAC;IAClB,UAAU,EAAE,CAAC;IACb,YAAY,EAAE,CAAC;IACf,YAAY,EAAE,CAAC;IACf,UAAU,EAAE,CAAC;CACd,CAAA;AACD,MAAM,cAAc,GAAG,sBAAO,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;AACrD,IAAI,CAAC,IAAI,GAAG,MAAM,CAAA;AAElB,MAAM,SAAS,GAAG,sBAAO,CAAC,cAAc,CAAC;IACvC,IAAI;IACJ;QACE,IAAI,EAAE,OAAO;QACb,OAAO,EAAE,EAAE;QACX,eAAe,EAAE,EAAE;QACnB,UAAU,EAAE,EAAE;QACd,YAAY,EAAE,EAAE;QAChB,YAAY,EAAE,EAAE;QAChB,UAAU,EAAE,CAAC;KACd;CACF,CAAC,CAAA;AAEF,MAAM,cAAc,GAAG;IACrB,IAAI,EAAE,QAAQ;IACd,OAAO,EAAE,UAAU;IACnB,eAAe,EAAE,CAAC;IAClB,UAAU,EAAE,UAAU;IACtB,YAAY,EAAE,CAAC;IACf,YAAY,EAAE,CAAC;IACf,UAAU,EAAE,CAAC;CACd,CAAA;AACD,MAAM,cAAc,GAAG,sBAAO,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC,CAAC,CAAA;AAE/D,MAAM,gBAAgB,GAAG,sBAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAA;AAE5C,MAAM,WAAW,GAAG,sBAAO,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA;AAE7C,MAAM,iCAAiC,GAAG;IACxC,IAAI,EAAE,kBAAkB;IACxB,MAAM,EAAE,CAAC;CACV,CAAA;AAED,MAAM,8BAA8B,GAAG;IACrC,IAAI,EAAE,iBAAiB;IACvB,aAAa,EAAE,iBAAiB;IAChC,cAAc,EAAE,MAAM;IACtB,MAAM,EAAE,EAAE;CACX,CAAA;AAED,MAAM,6BAA6B,GAAG;IACpC,IAAI,EAAE,gBAAgB;IACtB,SAAS,EAAE,CAAC;IACZ,SAAS,EAAE,CAAC;CACb,CAAA;AAED,MAAM,4BAA4B,GAAG;IACnC,IAAI,EAAE,eAAe;IACrB,MAAM,EAAE,CAAC;IACT,MAAM,EAAE,GAAG;CACZ,CAAA;AAED,MAAM,8BAA8B,GAAG;IACrC,IAAI,EAAE,iBAAiB;IACvB,MAAM,EAAE,EAAE;IACV,IAAI,EAAE,UAAU;CACjB,CAAA;AACD,MAAM,yBAAyB,GAAG,IAAI,qBAAU,EAAE;KAC/C,QAAQ,CAAC,CAAC,CAAC,CAAC,mBAAmB;KAC/B,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;AAElB,MAAM,kCAAkC,GAAG;IACzC,IAAI,EAAE,gBAAgB;IACtB,MAAM,EAAE,CAAC;IACT,UAAU,EAAE,CAAC;IACb,MAAM,EAAE,EAAE;CACX,CAAA;AACD,MAAM,qBAAqB,GAAG;IAC5B,IAAI,EAAE,gBAAgB;IACtB,MAAM,EAAE,EAAE;IACV,UAAU,EAAE,CAAC;IACb,MAAM,EAAE;QACN;YACE,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,CAAC;YACb,YAAY,EAAE,CAAC;YACf,gBAAgB,EAAE,CAAC;YACnB,MAAM,EAAE,MAAM;SACf;KACF;CACF,CAAA;AAED,MAAM,qBAAqB,GAAG;IAC5B,IAAI,EAAE,gBAAgB;IACtB,MAAM,EAAE,EAAE;IACV,UAAU,EAAE,CAAC;IACb,MAAM,EAAE;QACN;YACE,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,CAAC;YACb,YAAY,EAAE,CAAC;YACf,gBAAgB,EAAE,CAAC;YACnB,MAAM,EAAE,MAAM;SACf;QACD;YACE,IAAI,EAAE,OAAO;YACb,OAAO,EAAE,EAAE;YACX,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,EAAE;YAChB,gBAAgB,EAAE,EAAE;YACpB,MAAM,EAAE,MAAM;SACf;KACF;CACF,CAAA;AACD,MAAM,qBAAqB,GAAG;IAC5B,IAAI,EAAE,gBAAgB;IACtB,MAAM,EAAE,EAAE;IACV,UAAU,EAAE,CAAC;IACb,MAAM,EAAE;QACN;YACE,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,UAAU;YACnB,QAAQ,EAAE,CAAC;YACX,UAAU,EAAE,UAAU;YACtB,YAAY,EAAE,CAAC;YACf,gBAAgB,EAAE,CAAC;YACnB,MAAM,EAAE,MAAM;SACf;KACF;CACF,CAAA;AAED,MAAM,+BAA+B,GAAG,IAAI,qBAAU,EAAE;KACrD,QAAQ,CAAC,CAAC,CAAC,CAAC,uBAAuB;KACnC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAA;AAElB,MAAM,mBAAmB,GAAG,sBAAO,CAAC,oBAAoB,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA;AAEhE,MAAM,mBAAmB,GAAG,sBAAO,CAAC,oBAAoB,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAA;AAEtE,MAAM,wCAAwC,GAAG;IAC/C,IAAI,EAAE,sBAAsB;IAC5B,MAAM,EAAE,CAAC;IACT,cAAc,EAAE,CAAC;IACjB,WAAW,EAAE,EAAE;CAChB,CAAA;AAED,MAAM,2BAA2B,GAAG;IAClC,IAAI,EAAE,sBAAsB;IAC5B,MAAM,EAAE,EAAE;IACV,cAAc,EAAE,CAAC;IACjB,WAAW,EAAE,CAAC,IAAI,CAAC;CACpB,CAAA;AAED,MAAM,2BAA2B,GAAG;IAClC,IAAI,EAAE,sBAAsB;IAC5B,MAAM,EAAE,EAAE;IACV,cAAc,EAAE,CAAC;IACjB,WAAW,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC;CAC1B,CAAA;AAED,MAAM,cAAc,GAAG,UAAU,MAAc,EAAE,eAAoB;IACnE,EAAE,CAAC,sBAAsB,GAAG,eAAe,CAAC,IAAI,EAAE,GAAS,EAAE;QAC3D,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA;QAC7C,MAAM,CAAC,WAAW,CAAC,GAAG,QAAQ,CAAA;QAE9B,KAAK,MAAM,GAAG,IAAI,eAAe,EAAE;YACjC,gBAAM,CAAC,SAAS,CAAE,WAAmB,CAAC,GAAG,CAAC,EAAE,eAAe,CAAC,GAAG,CAAC,CAAC,CAAA;SAClE;IACH,CAAC,CAAA,CAAC,CAAA;AACJ,CAAC,CAAA;AAED,MAAM,mBAAmB,GAAG,sBAAO,CAAC,+BAA+B,EAAE,CAAA;AACrE,MAAM,iBAAiB,GAAG,sBAAO,CAAC,yBAAyB,EAAE,CAAA;AAC7D,MAAM,UAAU,GAAG,sBAAO,CAAC,kBAAkB,EAAE,CAAA;AAC/C,MAAM,kBAAkB,GAAG,sBAAO,CAAC,0BAA0B,EAAE,CAAA;AAC/D,MAAM,eAAe,GAAG,sBAAO,CAAC,uBAAuB,EAAE,CAAA;AAEzD,MAAM,4BAA4B,GAAG;IACnC,IAAI,EAAE,iCAAiC;CACxC,CAAA;AAED,MAAM,0BAA0B,GAAG;IACjC,IAAI,EAAE,2BAA2B;IACjC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;CAChC,CAAA;AAED,MAAM,mBAAmB,GAAG;IAC1B,IAAI,EAAE,oBAAoB;IAC1B,UAAU,EAAE,CAAC,eAAe,CAAC;CAC9B,CAAA;AAED,MAAM,2BAA2B,GAAG;IAClC,IAAI,EAAE,4BAA4B;IAClC,IAAI,EAAE,MAAM;CACb,CAAA;AAED,MAAM,wBAAwB,GAAG;IAC/B,IAAI,EAAE,yBAAyB;IAC/B,IAAI,EAAE,MAAM;CACb,CAAA;AAED,MAAM,0BAA0B,GAAG,sBAAO,CAAC,YAAY,CAAC,CAAC,EAAE,IAAI,EAAE,MAAM,CAAC,CAAA;AACxE,MAAM,mCAAmC,GAAG;IAC1C,IAAI,EAAE,cAAc;IACpB,SAAS,EAAE,CAAC;IACZ,OAAO,EAAE,IAAI;IACb,OAAO,EAAE,MAAM;CAChB,CAAA;AAED,MAAM,YAAY,GAAG,CAAO,OAAiB,EAA6B,EAAE;IAC1E,MAAM,MAAM,GAAG,IAAI,oBAAW,EAAE,CAAA;IAChC,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;QAC5B,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;KACrB;IACD,MAAM,CAAC,GAAG,EAAE,CAAA;IACZ,MAAM,IAAI,GAAqB,EAAE,CAAA;IACjC,MAAM,IAAA,QAAK,EAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAA;IAC5C,OAAO,IAAI,CAAA;AACb,CAAC,CAAA,CAAA;AAED,QAAQ,CAAC,gBAAgB,EAAE;IACzB,cAAc,CAAC,YAAY,EAAE,iCAAiC,CAAC,CAAA;IAC/D,cAAc,CAAC,mBAAmB,EAAE,4BAA4B,CAAC,CAAA;IACjE,cAAc,CAAC,iBAAiB,EAAE,0BAA0B,CAAC,CAAA;IAC7D,cAAc,CAAC,UAAU,EAAE,mBAAmB,CAAC,CAAA;IAC/C,cAAc,CAAC,kBAAkB,EAAE,2BAA2B,CAAC,CAAA;IAE/D,4CAA4C;IAC5C,2EAA2E;IAC3E,yFAAyF;IACzF,MAAM,0BAA0B,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,kBAAkB,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IACjG,cAAc,CAAC,0BAA0B,EAAE,2BAA2B,CAAC,CAAA;IAEvE,cAAc,CAAC,eAAe,EAAE,wBAAwB,CAAC,CAAA;IAEzD,4CAA4C;IAC5C,2EAA2E;IAC3E,yFAAyF;IACzF,MAAM,uBAAuB,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,eAAe,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;IAC3F,cAAc,CAAC,uBAAuB,EAAE,wBAAwB,CAAC,CAAA;IAEjE,cAAc,CAAC,iBAAiB,EAAE,8BAA8B,CAAC,CAAA;IACjE,cAAc,CAAC,oBAAoB,EAAE,6BAA6B,CAAC,CAAA;IACnE,cAAc,CAAC,mBAAmB,EAAE,4BAA4B,CAAC,CAAA;IACjE,cAAc,CAAC,qBAAqB,EAAE,8BAA8B,CAAC,CAAA;IACrE,cAAc,CAAC,0BAA0B,EAAE,mCAAmC,CAAC,CAAA;IAC/E,cAAc,CAAC,sBAAO,CAAC,UAAU,EAAE,EAAE;QACnC,IAAI,EAAE,YAAY;QAClB,MAAM,EAAE,CAAC;KACV,CAAC,CAAA;IAEF,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;QAC9C,IAAI,EAAE,QAAQ;KACf,CAAC,CAAA;IAEF,QAAQ,CAAC,yBAAyB,EAAE;QAClC,cAAc,CAAC,yBAAyB,EAAE,kCAAkC,CAAC,CAAA;QAC7E,cAAc,CAAC,cAAc,EAAE,qBAAqB,CAAC,CAAA;QACrD,cAAc,CAAC,SAAS,EAAE,qBAAqB,CAAC,CAAA;QAChD,cAAc,CAAC,cAAc,EAAE,qBAAqB,CAAC,CAAA;IACvD,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,+BAA+B,EAAE;QACxC,cAAc,CAAC,+BAA+B,EAAE,wCAAwC,CAAC,CAAA;QACzF,cAAc,CAAC,mBAAmB,EAAE,2BAA2B,CAAC,CAAA;QAChE,cAAc,CAAC,mBAAmB,EAAE,2BAA2B,CAAC,CAAA;IAClE,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,cAAc,EAAE;QACvB,QAAQ,CAAC,mBAAmB,EAAE;YAC5B,cAAc,CAAC,gBAAgB,EAAE;gBAC/B,IAAI,EAAE,SAAS;gBACf,UAAU,EAAE,CAAC;aACd,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;QAEF,QAAQ,CAAC,8BAA8B,EAAE;YACvC,cAAc,CAAC,WAAW,EAAE;gBAC1B,IAAI,EAAE,SAAS;gBACf,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE,CAAC,MAAM,CAAC;aACjB,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,gBAAgB,EAAE;QACzB,4CAA4C;QAC5C,MAAM,IAAI,GAAG,sBAAO,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,CAAA;QAC3D,cAAc,CAAC,IAAI,EAAE;YACnB,IAAI,EAAE,QAAQ;YACd,IAAI,EAAE,MAAM;SACb,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,cAAc,CAAC,sBAAO,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;QAChC,IAAI,EAAE,OAAO;KACd,CAAC,CAAA;IAEF,QAAQ,CAAC,qBAAqB,EAAE;QAC9B,MAAM,MAAM,GAAG,sBAAO,CAAC,KAAK,CAAC;YAC3B;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,OAAO;aACf;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,MAAM;aACd;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,MAAM;aACd;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,KAAK;aACb;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,KAAK;aACb;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,OAAO;aACf;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,OAAO;aACf;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,MAAM;aACd;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,MAAM;aACd;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,SAAS;aACjB;YACD;gBACE,IAAI,EAAE,GAAG;gBACT,KAAK,EAAE,QAAQ;aAChB;SACF,CAAC,CAAA;QAEF,cAAc,CAAC,MAAM,EAAE;YACrB,IAAI,EAAE,OAAO;YACb,QAAQ,EAAE,OAAO;YACjB,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,SAAS;YAClB,MAAM,EAAE,SAAS;YACjB,IAAI,EAAE,MAAM;YACZ,QAAQ,EAAE,KAAK;YACf,gBAAgB,EAAE,KAAK;YACvB,aAAa,EAAE,OAAO;YACtB,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,MAAM;YACZ,IAAI,EAAE,MAAM;YACZ,OAAO,EAAE,SAAS;SACnB,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,cAAc,CAAC,mBAAmB,EAAE;QAClC,IAAI,EAAE,eAAe;KACtB,CAAC,CAAA;IAEF,cAAc,CAAC,kBAAkB,EAAE;QACjC,IAAI,EAAE,cAAc;KACrB,CAAC,CAAA;IAEF,cAAc,CAAC,kBAAkB,EAAE;QACjC,IAAI,EAAE,cAAc;KACrB,CAAC,CAAA;IAEF,cAAc,CAAC,sBAAO,CAAC,aAAa,EAAE,EAAE;QACtC,IAAI,EAAE,eAAe;KACtB,CAAC,CAAA;IAEF,QAAQ,CAAC,iCAAiC,EAAE;QAC1C,cAAc,CAAC,qBAAqB,EAAE;YACpC,IAAI,EAAE,iBAAiB;SACxB,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,kCAAkC,EAAE;QAC3C,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,EAAE;YAC1D,IAAI,EAAE,kBAAkB;YACxB,MAAM,EAAE,CAAC;SACV,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,MAAM,EAAE,GAAG,EAAE;QACpB,cAAc,CAAC,sBAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YAChC,IAAI,EAAE,gBAAgB;YACtB,MAAM,EAAE,CAAC;YACT,MAAM,EAAE,KAAK;YACb,WAAW,EAAE,EAAE;SAChB,CAAC,CAAA;QAEF,cAAc,CAAC,sBAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE;YAChC,IAAI,EAAE,gBAAgB;YACtB,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,KAAK;YACb,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;SACpB,CAAC,CAAA;QAEF,cAAc,CAAC,sBAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACjC,IAAI,EAAE,iBAAiB;YACvB,MAAM,EAAE,CAAC;YACT,MAAM,EAAE,KAAK;YACb,WAAW,EAAE,EAAE;SAChB,CAAC,CAAA;QAEF,cAAc,CAAC,sBAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YACjC,IAAI,EAAE,iBAAiB;YACvB,MAAM,EAAE,EAAE;YACV,MAAM,EAAE,KAAK;YACb,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SACvB,CAAC,CAAA;QAEF,cAAc,CAAC,sBAAO,CAAC,QAAQ,EAAE,EAAE;YACjC,IAAI,EAAE,UAAU;YAChB,MAAM,EAAE,CAAC;SACV,CAAC,CAAA;QAEF,cAAc,CAAC,sBAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE;YACvD,IAAI,EAAE,UAAU;YAChB,MAAM,EAAE,CAAC;YACT,KAAK,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAC9B,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,uEAAuE;IACvE,uEAAuE;IACvE,yBAAyB;IACzB,QAAQ,CAAC,sCAAsC,EAAE;QAC/C,MAAM,UAAU,GAAG,sBAAO,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC,CAAA;QAExE,EAAE,CAAC,kCAAkC,EAAE;;gBACrC,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,CAAC,UAAU,CAAC,CAAC,CAAA;gBACjD,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAQ,CAAA;gBAClC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;gBACtC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;gBACrC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAA;gBACvC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAA;gBAC1C,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;gBACrC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;YACtC,CAAC;SAAA,CAAC,CAAA;QAEF,MAAM,+BAA+B,GAAG,UAAgB,KAAa;;gBACnE,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA;gBAC3D,MAAM,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,CAAA;gBACzE,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;gBAClC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,CAAA;gBACpD,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC,CAAA;gBAChE,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAQ,CAAA;gBAClC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;gBACtC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;gBACrC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,CAAA;gBACvC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAA;gBAC1C,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAA;gBACrC,gBAAM,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;YACtC,CAAC;SAAA,CAAA;QAED,EAAE,CAAC,iCAAiC,EAAE;YACpC,OAAO,+BAA+B,CAAC,CAAC,CAAC,CAAA;QAC3C,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,0BAA0B,EAAE;YAC7B,OAAO,+BAA+B,CAAC,CAAC,CAAC,CAAA;QAC3C,CAAC,CAAC,CAAA;QAEF,EAAE,CAAC,gCAAgC,EAAE;YACnC,OAAO,OAAO,CAAC,GAAG,CAAC;gBACjB,+BAA+B,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;gBACtD,+BAA+B,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;gBACtD,+BAA+B,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;aACvD,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;IAEF,QAAQ,CAAC,wCAAwC,EAAE;QACjD,MAAM,aAAa,GAAG,sBAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA;QAC5C,MAAM,mBAAmB,GAAG,sBAAO,CAAC,aAAa,EAAE,CAAA;QACnD,MAAM,UAAU,GAAG,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,GAAG,mBAAmB,CAAC,MAAM,CAAC,CAAA;QAClF,aAAa,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;QACpC,mBAAmB,CAAC,IAAI,CAAC,UAAU,EAAE,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;QAE7D,MAAM,cAAc,GAAG,UAAU,QAAe;YAC9C,gBAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;YACtC,gBAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAC5B,IAAI,EAAE,SAAS;gBACf,UAAU,EAAE,CAAC;gBACb,MAAM,EAAE,EAAE;gBACV,MAAM,EAAE,CAAC,GAAG,CAAC;aACd,CAAC,CAAA;YACF,gBAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAA;YACxC,gBAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;gBAC5B,IAAI,EAAE,eAAe;gBACrB,MAAM,EAAE,CAAC;gBACT,MAAM,EAAE,GAAG;aACZ,CAAC,CAAA;QACJ,CAAC,CAAA;QACD,eAAe;QACf,EAAE,CAAC,iDAAiD,EAAE;;gBACpD,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,CAAC,UAAU,CAAC,CAAC,CAAA;gBACjD,cAAc,CAAC,QAAQ,CAAC,CAAA;YAC1B,CAAC;SAAA,CAAC,CAAA;QAEF,MAAM,yBAAyB,GAAG,UAAgB,KAAa;;gBAC7D,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC,CAAA;gBAC3D,MAAM,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,CAAA;gBACzE,UAAU,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,EAAE,CAAC,CAAC,CAAA;gBAClC,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,EAAE,WAAW,CAAC,MAAM,CAAC,CAAA;gBACpD,MAAM,QAAQ,GAAG,MAAM,YAAY,CAAC,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC,CAAA;gBAChE,cAAc,CAAC,QAAQ,CAAC,CAAA;YAC1B,CAAC;SAAA,CAAA;QAED,QAAQ,CAAC,6CAA6C,EAAE;YACtD,EAAE,CAAC,eAAe,EAAE;gBAClB,OAAO,yBAAyB,CAAC,EAAE,CAAC,CAAA;YACtC,CAAC,CAAC,CAAA;YACF,EAAE,CAAC,cAAc,EAAE;gBACjB,OAAO,OAAO,CAAC,GAAG,CAAC;oBACjB,yBAAyB,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;oBAChD,yBAAyB,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;oBAChD,yBAAyB,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC;iBACjD,CAAC,CAAA;YACJ,CAAC,CAAC,CAAA;YAEF,EAAE,CAAC,YAAY,EAAE;gBACf,OAAO,OAAO,CAAC,GAAG,CAAC,CAAC,yBAAyB,CAAC,CAAC,CAAC,EAAE,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;YAClF,CAAC,CAAC,CAAA;QACJ,CAAC,CAAC,CAAA;IACJ,CAAC,CAAC,CAAA;AACJ,CAAC,CAAC,CAAA"}
\ No newline at end of file
Index: node_modules/pg-protocol/dist/buffer-writer.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\n//binary data writer tuned for encoding binary specific to the postgres binary protocol\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Writer = void 0;\r\nclass Writer {\r\n    constructor(size = 256) {\r\n        this.size = size;\r\n        this.offset = 5;\r\n        this.headerPosition = 0;\r\n        this.buffer = Buffer.allocUnsafe(size);\r\n    }\r\n    ensure(size) {\r\n        var remaining = this.buffer.length - this.offset;\r\n        if (remaining < size) {\r\n            var oldBuffer = this.buffer;\r\n            // exponential growth factor of around ~ 1.5\r\n            // https://stackoverflow.com/questions/2269063/buffer-growth-strategy\r\n            var newSize = oldBuffer.length + (oldBuffer.length >> 1) + size;\r\n            this.buffer = Buffer.allocUnsafe(newSize);\r\n            oldBuffer.copy(this.buffer);\r\n        }\r\n    }\r\n    addInt32(num) {\r\n        this.ensure(4);\r\n        this.buffer[this.offset++] = (num >>> 24) & 0xff;\r\n        this.buffer[this.offset++] = (num >>> 16) & 0xff;\r\n        this.buffer[this.offset++] = (num >>> 8) & 0xff;\r\n        this.buffer[this.offset++] = (num >>> 0) & 0xff;\r\n        return this;\r\n    }\r\n    addInt16(num) {\r\n        this.ensure(2);\r\n        this.buffer[this.offset++] = (num >>> 8) & 0xff;\r\n        this.buffer[this.offset++] = (num >>> 0) & 0xff;\r\n        return this;\r\n    }\r\n    addCString(string) {\r\n        if (!string) {\r\n            this.ensure(1);\r\n        }\r\n        else {\r\n            var len = Buffer.byteLength(string);\r\n            this.ensure(len + 1); // +1 for null terminator\r\n            this.buffer.write(string, this.offset, 'utf-8');\r\n            this.offset += len;\r\n        }\r\n        this.buffer[this.offset++] = 0; // null terminator\r\n        return this;\r\n    }\r\n    addString(string = '') {\r\n        var len = Buffer.byteLength(string);\r\n        this.ensure(len);\r\n        this.buffer.write(string, this.offset);\r\n        this.offset += len;\r\n        return this;\r\n    }\r\n    add(otherBuffer) {\r\n        this.ensure(otherBuffer.length);\r\n        otherBuffer.copy(this.buffer, this.offset);\r\n        this.offset += otherBuffer.length;\r\n        return this;\r\n    }\r\n    join(code) {\r\n        if (code) {\r\n            this.buffer[this.headerPosition] = code;\r\n            //length is everything in this packet minus the code\r\n            const length = this.offset - (this.headerPosition + 1);\r\n            this.buffer.writeInt32BE(length, this.headerPosition + 1);\r\n        }\r\n        return this.buffer.slice(code ? 0 : 5, this.offset);\r\n    }\r\n    flush(code) {\r\n        var result = this.join(code);\r\n        this.offset = 5;\r\n        this.headerPosition = 0;\r\n        this.buffer = Buffer.allocUnsafe(this.size);\r\n        return result;\r\n    }\r\n}\r\nexports.Writer = Writer;\r\n//# sourceMappingURL=buffer-writer.js.map
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/dist/buffer-writer.js b/node_modules/pg-protocol/dist/buffer-writer.js
--- a/node_modules/pg-protocol/dist/buffer-writer.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/dist/buffer-writer.js	(date 1753913035294)
@@ -10,12 +10,12 @@
         this.buffer = Buffer.allocUnsafe(size);
     }
     ensure(size) {
-        var remaining = this.buffer.length - this.offset;
+        const remaining = this.buffer.length - this.offset;
         if (remaining < size) {
-            var oldBuffer = this.buffer;
+            const oldBuffer = this.buffer;
             // exponential growth factor of around ~ 1.5
             // https://stackoverflow.com/questions/2269063/buffer-growth-strategy
-            var newSize = oldBuffer.length + (oldBuffer.length >> 1) + size;
+            const newSize = oldBuffer.length + (oldBuffer.length >> 1) + size;
             this.buffer = Buffer.allocUnsafe(newSize);
             oldBuffer.copy(this.buffer);
         }
@@ -39,7 +39,7 @@
             this.ensure(1);
         }
         else {
-            var len = Buffer.byteLength(string);
+            const len = Buffer.byteLength(string);
             this.ensure(len + 1); // +1 for null terminator
             this.buffer.write(string, this.offset, 'utf-8');
             this.offset += len;
@@ -48,7 +48,7 @@
         return this;
     }
     addString(string = '') {
-        var len = Buffer.byteLength(string);
+        const len = Buffer.byteLength(string);
         this.ensure(len);
         this.buffer.write(string, this.offset);
         this.offset += len;
@@ -70,7 +70,7 @@
         return this.buffer.slice(code ? 0 : 5, this.offset);
     }
     flush(code) {
-        var result = this.join(code);
+        const result = this.join(code);
         this.offset = 5;
         this.headerPosition = 0;
         this.buffer = Buffer.allocUnsafe(this.size);
Index: node_modules/pg-protocol/dist/buffer-reader.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/// <reference types=\"node\" />\r\nexport declare class BufferReader {\r\n    private offset;\r\n    private buffer;\r\n    private encoding;\r\n    constructor(offset?: number);\r\n    setBuffer(offset: number, buffer: Buffer): void;\r\n    int16(): number;\r\n    byte(): number;\r\n    int32(): number;\r\n    string(length: number): string;\r\n    cstring(): string;\r\n    bytes(length: number): Buffer;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/dist/buffer-reader.d.ts b/node_modules/pg-protocol/dist/buffer-reader.d.ts
--- a/node_modules/pg-protocol/dist/buffer-reader.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/dist/buffer-reader.d.ts	(date 1753913035322)
@@ -8,6 +8,7 @@
     int16(): number;
     byte(): number;
     int32(): number;
+    uint32(): number;
     string(length: number): string;
     cstring(): string;
     bytes(length: number): Buffer;
Index: node_modules/pg-protocol/dist/buffer-writer.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"version\":3,\"file\":\"buffer-writer.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/buffer-writer.ts\"],\"names\":[],\"mappings\":\";AAAA,uFAAuF;;;AAEvF,MAAa,MAAM;IAIjB,YAAoB,OAAO,GAAG;QAAV,SAAI,GAAJ,IAAI,CAAM;QAFtB,WAAM,GAAW,CAAC,CAAA;QAClB,mBAAc,GAAW,CAAC,CAAA;QAEhC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;IACxC,CAAC;IAEO,MAAM,CAAC,IAAY;QACzB,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;QAChD,IAAI,SAAS,GAAG,IAAI,EAAE;YACpB,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAA;YAC3B,4CAA4C;YAC5C,qEAAqE;YACrE,IAAI,OAAO,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,IAAI,CAAA;YAC/D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;YACzC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SAC5B;IACH,CAAC;IAEM,QAAQ,CAAC,GAAW;QACzB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,IAAI,CAAA;QAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,IAAI,CAAA;QAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAA;QAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAA;QAC/C,OAAO,IAAI,CAAA;IACb,CAAC;IAEM,QAAQ,CAAC,GAAW;QACzB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAA;QAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAA;QAC/C,OAAO,IAAI,CAAA;IACb,CAAC;IAEM,UAAU,CAAC,MAAc;QAC9B,IAAI,CAAC,MAAM,EAAE;YACX,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;SACf;aAAM;YACL,IAAI,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;YACnC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAA,CAAC,yBAAyB;YAC9C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;YAC/C,IAAI,CAAC,MAAM,IAAI,GAAG,CAAA;SACnB;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAA,CAAC,kBAAkB;QACjD,OAAO,IAAI,CAAA;IACb,CAAC;IAEM,SAAS,CAAC,SAAiB,EAAE;QAClC,IAAI,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;QACnC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;QAChB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QACtC,IAAI,CAAC,MAAM,IAAI,GAAG,CAAA;QAClB,OAAO,IAAI,CAAA;IACb,CAAC;IAEM,GAAG,CAAC,WAAmB;QAC5B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;QAC/B,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QAC1C,IAAI,CAAC,MAAM,IAAI,WAAW,CAAC,MAAM,CAAA;QACjC,OAAO,IAAI,CAAA;IACb,CAAC;IAEO,IAAI,CAAC,IAAa;QACxB,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAA;YACvC,oDAAoD;YACpD,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAA;YACtD,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAA;SAC1D;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;IACrD,CAAC;IAEM,KAAK,CAAC,IAAa;QACxB,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC5B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;QACf,IAAI,CAAC,cAAc,GAAG,CAAC,CAAA;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC3C,OAAO,MAAM,CAAA;IACf,CAAC;CACF;AAlFD,wBAkFC\"}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/dist/buffer-writer.js.map b/node_modules/pg-protocol/dist/buffer-writer.js.map
--- a/node_modules/pg-protocol/dist/buffer-writer.js.map	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/dist/buffer-writer.js.map	(date 1753913035308)
@@ -1,1 +1,1 @@
-{"version":3,"file":"buffer-writer.js","sourceRoot":"","sources":["../src/buffer-writer.ts"],"names":[],"mappings":";AAAA,uFAAuF;;;AAEvF,MAAa,MAAM;IAIjB,YAAoB,OAAO,GAAG;QAAV,SAAI,GAAJ,IAAI,CAAM;QAFtB,WAAM,GAAW,CAAC,CAAA;QAClB,mBAAc,GAAW,CAAC,CAAA;QAEhC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;IACxC,CAAC;IAEO,MAAM,CAAC,IAAY;QACzB,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;QAChD,IAAI,SAAS,GAAG,IAAI,EAAE;YACpB,IAAI,SAAS,GAAG,IAAI,CAAC,MAAM,CAAA;YAC3B,4CAA4C;YAC5C,qEAAqE;YACrE,IAAI,OAAO,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,IAAI,CAAA;YAC/D,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;YACzC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SAC5B;IACH,CAAC;IAEM,QAAQ,CAAC,GAAW;QACzB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,IAAI,CAAA;QAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,IAAI,CAAA;QAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAA;QAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAA;QAC/C,OAAO,IAAI,CAAA;IACb,CAAC;IAEM,QAAQ,CAAC,GAAW;QACzB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAA;QAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAA;QAC/C,OAAO,IAAI,CAAA;IACb,CAAC;IAEM,UAAU,CAAC,MAAc;QAC9B,IAAI,CAAC,MAAM,EAAE;YACX,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;SACf;aAAM;YACL,IAAI,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;YACnC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAA,CAAC,yBAAyB;YAC9C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;YAC/C,IAAI,CAAC,MAAM,IAAI,GAAG,CAAA;SACnB;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAA,CAAC,kBAAkB;QACjD,OAAO,IAAI,CAAA;IACb,CAAC;IAEM,SAAS,CAAC,SAAiB,EAAE;QAClC,IAAI,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;QACnC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;QAChB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QACtC,IAAI,CAAC,MAAM,IAAI,GAAG,CAAA;QAClB,OAAO,IAAI,CAAA;IACb,CAAC;IAEM,GAAG,CAAC,WAAmB;QAC5B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;QAC/B,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QAC1C,IAAI,CAAC,MAAM,IAAI,WAAW,CAAC,MAAM,CAAA;QACjC,OAAO,IAAI,CAAA;IACb,CAAC;IAEO,IAAI,CAAC,IAAa;QACxB,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAA;YACvC,oDAAoD;YACpD,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAA;YACtD,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAA;SAC1D;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;IACrD,CAAC;IAEM,KAAK,CAAC,IAAa;QACxB,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC5B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;QACf,IAAI,CAAC,cAAc,GAAG,CAAC,CAAA;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC3C,OAAO,MAAM,CAAA;IACf,CAAC;CACF;AAlFD,wBAkFC"}
\ No newline at end of file
+{"version":3,"file":"buffer-writer.js","sourceRoot":"","sources":["../src/buffer-writer.ts"],"names":[],"mappings":";AAAA,uFAAuF;;;AAEvF,MAAa,MAAM;IAIjB,YAAoB,OAAO,GAAG;QAAV,SAAI,GAAJ,IAAI,CAAM;QAFtB,WAAM,GAAW,CAAC,CAAA;QAClB,mBAAc,GAAW,CAAC,CAAA;QAEhC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAA;IACxC,CAAC;IAEO,MAAM,CAAC,IAAY;QACzB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAA;QAClD,IAAI,SAAS,GAAG,IAAI,EAAE;YACpB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAA;YAC7B,4CAA4C;YAC5C,qEAAqE;YACrE,MAAM,OAAO,GAAG,SAAS,CAAC,MAAM,GAAG,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC,GAAG,IAAI,CAAA;YACjE,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,CAAA;YACzC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SAC5B;IACH,CAAC;IAEM,QAAQ,CAAC,GAAW;QACzB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,IAAI,CAAA;QAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,EAAE,CAAC,GAAG,IAAI,CAAA;QAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAA;QAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAA;QAC/C,OAAO,IAAI,CAAA;IACb,CAAC;IAEM,QAAQ,CAAC,GAAW;QACzB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;QACd,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAA;QAC/C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,IAAI,CAAA;QAC/C,OAAO,IAAI,CAAA;IACb,CAAC;IAEM,UAAU,CAAC,MAAc;QAC9B,IAAI,CAAC,MAAM,EAAE;YACX,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAA;SACf;aAAM;YACL,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;YACrC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,CAAA,CAAC,yBAAyB;YAC9C,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;YAC/C,IAAI,CAAC,MAAM,IAAI,GAAG,CAAA;SACnB;QAED,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,CAAA,CAAC,kBAAkB;QACjD,OAAO,IAAI,CAAA;IACb,CAAC;IAEM,SAAS,CAAC,SAAiB,EAAE;QAClC,MAAM,GAAG,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAA;QACrC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAA;QAChB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QACtC,IAAI,CAAC,MAAM,IAAI,GAAG,CAAA;QAClB,OAAO,IAAI,CAAA;IACb,CAAC;IAEM,GAAG,CAAC,WAAmB;QAC5B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAA;QAC/B,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QAC1C,IAAI,CAAC,MAAM,IAAI,WAAW,CAAC,MAAM,CAAA;QACjC,OAAO,IAAI,CAAA;IACb,CAAC;IAEO,IAAI,CAAC,IAAa;QACxB,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAA;YACvC,oDAAoD;YACpD,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAA;YACtD,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,CAAA;SAC1D;QACD,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;IACrD,CAAC;IAEM,KAAK,CAAC,IAAa;QACxB,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC9B,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;QACf,IAAI,CAAC,cAAc,GAAG,CAAC,CAAA;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC3C,OAAO,MAAM,CAAA;IACf,CAAC;CACF;AAlFD,wBAkFC"}
\ No newline at end of file
Index: node_modules/pg-protocol/dist/b.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\n// file for microbenchmarking\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst buffer_writer_1 = require(\"./buffer-writer\");\r\nconst buffer_reader_1 = require(\"./buffer-reader\");\r\nconst LOOPS = 1000;\r\nlet count = 0;\r\nlet start = Date.now();\r\nconst writer = new buffer_writer_1.Writer();\r\nconst reader = new buffer_reader_1.BufferReader();\r\nconst buffer = Buffer.from([33, 33, 33, 33, 33, 33, 33, 0]);\r\nconst run = () => {\r\n    if (count > LOOPS) {\r\n        console.log(Date.now() - start);\r\n        return;\r\n    }\r\n    count++;\r\n    for (let i = 0; i < LOOPS; i++) {\r\n        reader.setBuffer(0, buffer);\r\n        reader.cstring();\r\n    }\r\n    setImmediate(run);\r\n};\r\nrun();\r\n//# sourceMappingURL=b.js.map
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/dist/b.js b/node_modules/pg-protocol/dist/b.js
--- a/node_modules/pg-protocol/dist/b.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/dist/b.js	(date 1753913035285)
@@ -1,17 +1,15 @@
 "use strict";
 // file for microbenchmarking
 Object.defineProperty(exports, "__esModule", { value: true });
-const buffer_writer_1 = require("./buffer-writer");
 const buffer_reader_1 = require("./buffer-reader");
 const LOOPS = 1000;
 let count = 0;
-let start = Date.now();
-const writer = new buffer_writer_1.Writer();
+const start = performance.now();
 const reader = new buffer_reader_1.BufferReader();
 const buffer = Buffer.from([33, 33, 33, 33, 33, 33, 33, 0]);
 const run = () => {
     if (count > LOOPS) {
-        console.log(Date.now() - start);
+        console.log(performance.now() - start);
         return;
     }
     count++;
Index: node_modules/pg-protocol/dist/b.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"version\":3,\"file\":\"b.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/b.ts\"],\"names\":[],\"mappings\":\";AAAA,6BAA6B;;AAE7B,mDAAwC;AAExC,mDAA8C;AAE9C,MAAM,KAAK,GAAG,IAAI,CAAA;AAClB,IAAI,KAAK,GAAG,CAAC,CAAA;AACb,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACtB,MAAM,MAAM,GAAG,IAAI,sBAAM,EAAE,CAAA;AAE3B,MAAM,MAAM,GAAG,IAAI,4BAAY,EAAE,CAAA;AACjC,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;AAE3D,MAAM,GAAG,GAAG,GAAG,EAAE;IACf,IAAI,KAAK,GAAG,KAAK,EAAE;QACjB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,CAAA;QAC/B,OAAM;KACP;IACD,KAAK,EAAE,CAAA;IACP,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC9B,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,CAAA;QAC3B,MAAM,CAAC,OAAO,EAAE,CAAA;KACjB;IACD,YAAY,CAAC,GAAG,CAAC,CAAA;AACnB,CAAC,CAAA;AAED,GAAG,EAAE,CAAA\"}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/dist/b.js.map b/node_modules/pg-protocol/dist/b.js.map
--- a/node_modules/pg-protocol/dist/b.js.map	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/dist/b.js.map	(date 1753913035306)
@@ -1,1 +1,1 @@
-{"version":3,"file":"b.js","sourceRoot":"","sources":["../src/b.ts"],"names":[],"mappings":";AAAA,6BAA6B;;AAE7B,mDAAwC;AAExC,mDAA8C;AAE9C,MAAM,KAAK,GAAG,IAAI,CAAA;AAClB,IAAI,KAAK,GAAG,CAAC,CAAA;AACb,IAAI,KAAK,GAAG,IAAI,CAAC,GAAG,EAAE,CAAA;AACtB,MAAM,MAAM,GAAG,IAAI,sBAAM,EAAE,CAAA;AAE3B,MAAM,MAAM,GAAG,IAAI,4BAAY,EAAE,CAAA;AACjC,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;AAE3D,MAAM,GAAG,GAAG,GAAG,EAAE;IACf,IAAI,KAAK,GAAG,KAAK,EAAE;QACjB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,CAAA;QAC/B,OAAM;KACP;IACD,KAAK,EAAE,CAAA;IACP,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC9B,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,CAAA;QAC3B,MAAM,CAAC,OAAO,EAAE,CAAA;KACjB;IACD,YAAY,CAAC,GAAG,CAAC,CAAA;AACnB,CAAC,CAAA;AAED,GAAG,EAAE,CAAA"}
\ No newline at end of file
+{"version":3,"file":"b.js","sourceRoot":"","sources":["../src/b.ts"],"names":[],"mappings":";AAAA,6BAA6B;;AAE7B,mDAA8C;AAE9C,MAAM,KAAK,GAAG,IAAI,CAAA;AAClB,IAAI,KAAK,GAAG,CAAC,CAAA;AACb,MAAM,KAAK,GAAG,WAAW,CAAC,GAAG,EAAE,CAAA;AAE/B,MAAM,MAAM,GAAG,IAAI,4BAAY,EAAE,CAAA;AACjC,MAAM,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAA;AAE3D,MAAM,GAAG,GAAG,GAAG,EAAE;IACf,IAAI,KAAK,GAAG,KAAK,EAAE;QACjB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE,GAAG,KAAK,CAAC,CAAA;QACtC,OAAM;KACP;IACD,KAAK,EAAE,CAAA;IACP,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC9B,MAAM,CAAC,SAAS,CAAC,CAAC,EAAE,MAAM,CAAC,CAAA;QAC3B,MAAM,CAAC,OAAO,EAAE,CAAA;KACjB;IACD,YAAY,CAAC,GAAG,CAAC,CAAA;AACnB,CAAC,CAAA;AAED,GAAG,EAAE,CAAA"}
\ No newline at end of file
Index: node_modules/pg-protocol/dist/parser.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Parser = void 0;\r\nconst messages_1 = require(\"./messages\");\r\nconst buffer_reader_1 = require(\"./buffer-reader\");\r\n// every message is prefixed with a single bye\r\nconst CODE_LENGTH = 1;\r\n// every message has an int32 length which includes itself but does\r\n// NOT include the code in the length\r\nconst LEN_LENGTH = 4;\r\nconst HEADER_LENGTH = CODE_LENGTH + LEN_LENGTH;\r\nconst emptyBuffer = Buffer.allocUnsafe(0);\r\nclass Parser {\r\n    constructor(opts) {\r\n        this.buffer = emptyBuffer;\r\n        this.bufferLength = 0;\r\n        this.bufferOffset = 0;\r\n        this.reader = new buffer_reader_1.BufferReader();\r\n        if ((opts === null || opts === void 0 ? void 0 : opts.mode) === 'binary') {\r\n            throw new Error('Binary mode not supported yet');\r\n        }\r\n        this.mode = (opts === null || opts === void 0 ? void 0 : opts.mode) || 'text';\r\n    }\r\n    parse(buffer, callback) {\r\n        this.mergeBuffer(buffer);\r\n        const bufferFullLength = this.bufferOffset + this.bufferLength;\r\n        let offset = this.bufferOffset;\r\n        while (offset + HEADER_LENGTH <= bufferFullLength) {\r\n            // code is 1 byte long - it identifies the message type\r\n            const code = this.buffer[offset];\r\n            // length is 1 Uint32BE - it is the length of the message EXCLUDING the code\r\n            const length = this.buffer.readUInt32BE(offset + CODE_LENGTH);\r\n            const fullMessageLength = CODE_LENGTH + length;\r\n            if (fullMessageLength + offset <= bufferFullLength) {\r\n                const message = this.handlePacket(offset + HEADER_LENGTH, code, length, this.buffer);\r\n                callback(message);\r\n                offset += fullMessageLength;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        if (offset === bufferFullLength) {\r\n            // No more use for the buffer\r\n            this.buffer = emptyBuffer;\r\n            this.bufferLength = 0;\r\n            this.bufferOffset = 0;\r\n        }\r\n        else {\r\n            // Adjust the cursors of remainingBuffer\r\n            this.bufferLength = bufferFullLength - offset;\r\n            this.bufferOffset = offset;\r\n        }\r\n    }\r\n    mergeBuffer(buffer) {\r\n        if (this.bufferLength > 0) {\r\n            const newLength = this.bufferLength + buffer.byteLength;\r\n            const newFullLength = newLength + this.bufferOffset;\r\n            if (newFullLength > this.buffer.byteLength) {\r\n                // We can't concat the new buffer with the remaining one\r\n                let newBuffer;\r\n                if (newLength <= this.buffer.byteLength && this.bufferOffset >= this.bufferLength) {\r\n                    // We can move the relevant part to the beginning of the buffer instead of allocating a new buffer\r\n                    newBuffer = this.buffer;\r\n                }\r\n                else {\r\n                    // Allocate a new larger buffer\r\n                    let newBufferLength = this.buffer.byteLength * 2;\r\n                    while (newLength >= newBufferLength) {\r\n                        newBufferLength *= 2;\r\n                    }\r\n                    newBuffer = Buffer.allocUnsafe(newBufferLength);\r\n                }\r\n                // Move the remaining buffer to the new one\r\n                this.buffer.copy(newBuffer, 0, this.bufferOffset, this.bufferOffset + this.bufferLength);\r\n                this.buffer = newBuffer;\r\n                this.bufferOffset = 0;\r\n            }\r\n            // Concat the new buffer with the remaining one\r\n            buffer.copy(this.buffer, this.bufferOffset + this.bufferLength);\r\n            this.bufferLength = newLength;\r\n        }\r\n        else {\r\n            this.buffer = buffer;\r\n            this.bufferOffset = 0;\r\n            this.bufferLength = buffer.byteLength;\r\n        }\r\n    }\r\n    handlePacket(offset, code, length, bytes) {\r\n        switch (code) {\r\n            case 50 /* MessageCodes.BindComplete */:\r\n                return messages_1.bindComplete;\r\n            case 49 /* MessageCodes.ParseComplete */:\r\n                return messages_1.parseComplete;\r\n            case 51 /* MessageCodes.CloseComplete */:\r\n                return messages_1.closeComplete;\r\n            case 110 /* MessageCodes.NoData */:\r\n                return messages_1.noData;\r\n            case 115 /* MessageCodes.PortalSuspended */:\r\n                return messages_1.portalSuspended;\r\n            case 99 /* MessageCodes.CopyDone */:\r\n                return messages_1.copyDone;\r\n            case 87 /* MessageCodes.ReplicationStart */:\r\n                return messages_1.replicationStart;\r\n            case 73 /* MessageCodes.EmptyQuery */:\r\n                return messages_1.emptyQuery;\r\n            case 68 /* MessageCodes.DataRow */:\r\n                return this.parseDataRowMessage(offset, length, bytes);\r\n            case 67 /* MessageCodes.CommandComplete */:\r\n                return this.parseCommandCompleteMessage(offset, length, bytes);\r\n            case 90 /* MessageCodes.ReadyForQuery */:\r\n                return this.parseReadyForQueryMessage(offset, length, bytes);\r\n            case 65 /* MessageCodes.NotificationResponse */:\r\n                return this.parseNotificationMessage(offset, length, bytes);\r\n            case 82 /* MessageCodes.AuthenticationResponse */:\r\n                return this.parseAuthenticationResponse(offset, length, bytes);\r\n            case 83 /* MessageCodes.ParameterStatus */:\r\n                return this.parseParameterStatusMessage(offset, length, bytes);\r\n            case 75 /* MessageCodes.BackendKeyData */:\r\n                return this.parseBackendKeyData(offset, length, bytes);\r\n            case 69 /* MessageCodes.ErrorMessage */:\r\n                return this.parseErrorMessage(offset, length, bytes, 'error');\r\n            case 78 /* MessageCodes.NoticeMessage */:\r\n                return this.parseErrorMessage(offset, length, bytes, 'notice');\r\n            case 84 /* MessageCodes.RowDescriptionMessage */:\r\n                return this.parseRowDescriptionMessage(offset, length, bytes);\r\n            case 116 /* MessageCodes.ParameterDescriptionMessage */:\r\n                return this.parseParameterDescriptionMessage(offset, length, bytes);\r\n            case 71 /* MessageCodes.CopyIn */:\r\n                return this.parseCopyInMessage(offset, length, bytes);\r\n            case 72 /* MessageCodes.CopyOut */:\r\n                return this.parseCopyOutMessage(offset, length, bytes);\r\n            case 100 /* MessageCodes.CopyData */:\r\n                return this.parseCopyData(offset, length, bytes);\r\n            default:\r\n                return new messages_1.DatabaseError('received invalid response: ' + code.toString(16), length, 'error');\r\n        }\r\n    }\r\n    parseReadyForQueryMessage(offset, length, bytes) {\r\n        this.reader.setBuffer(offset, bytes);\r\n        const status = this.reader.string(1);\r\n        return new messages_1.ReadyForQueryMessage(length, status);\r\n    }\r\n    parseCommandCompleteMessage(offset, length, bytes) {\r\n        this.reader.setBuffer(offset, bytes);\r\n        const text = this.reader.cstring();\r\n        return new messages_1.CommandCompleteMessage(length, text);\r\n    }\r\n    parseCopyData(offset, length, bytes) {\r\n        const chunk = bytes.slice(offset, offset + (length - 4));\r\n        return new messages_1.CopyDataMessage(length, chunk);\r\n    }\r\n    parseCopyInMessage(offset, length, bytes) {\r\n        return this.parseCopyMessage(offset, length, bytes, 'copyInResponse');\r\n    }\r\n    parseCopyOutMessage(offset, length, bytes) {\r\n        return this.parseCopyMessage(offset, length, bytes, 'copyOutResponse');\r\n    }\r\n    parseCopyMessage(offset, length, bytes, messageName) {\r\n        this.reader.setBuffer(offset, bytes);\r\n        const isBinary = this.reader.byte() !== 0;\r\n        const columnCount = this.reader.int16();\r\n        const message = new messages_1.CopyResponse(length, messageName, isBinary, columnCount);\r\n        for (let i = 0; i < columnCount; i++) {\r\n            message.columnTypes[i] = this.reader.int16();\r\n        }\r\n        return message;\r\n    }\r\n    parseNotificationMessage(offset, length, bytes) {\r\n        this.reader.setBuffer(offset, bytes);\r\n        const processId = this.reader.int32();\r\n        const channel = this.reader.cstring();\r\n        const payload = this.reader.cstring();\r\n        return new messages_1.NotificationResponseMessage(length, processId, channel, payload);\r\n    }\r\n    parseRowDescriptionMessage(offset, length, bytes) {\r\n        this.reader.setBuffer(offset, bytes);\r\n        const fieldCount = this.reader.int16();\r\n        const message = new messages_1.RowDescriptionMessage(length, fieldCount);\r\n        for (let i = 0; i < fieldCount; i++) {\r\n            message.fields[i] = this.parseField();\r\n        }\r\n        return message;\r\n    }\r\n    parseField() {\r\n        const name = this.reader.cstring();\r\n        const tableID = this.reader.int32();\r\n        const columnID = this.reader.int16();\r\n        const dataTypeID = this.reader.int32();\r\n        const dataTypeSize = this.reader.int16();\r\n        const dataTypeModifier = this.reader.int32();\r\n        const mode = this.reader.int16() === 0 ? 'text' : 'binary';\r\n        return new messages_1.Field(name, tableID, columnID, dataTypeID, dataTypeSize, dataTypeModifier, mode);\r\n    }\r\n    parseParameterDescriptionMessage(offset, length, bytes) {\r\n        this.reader.setBuffer(offset, bytes);\r\n        const parameterCount = this.reader.int16();\r\n        const message = new messages_1.ParameterDescriptionMessage(length, parameterCount);\r\n        for (let i = 0; i < parameterCount; i++) {\r\n            message.dataTypeIDs[i] = this.reader.int32();\r\n        }\r\n        return message;\r\n    }\r\n    parseDataRowMessage(offset, length, bytes) {\r\n        this.reader.setBuffer(offset, bytes);\r\n        const fieldCount = this.reader.int16();\r\n        const fields = new Array(fieldCount);\r\n        for (let i = 0; i < fieldCount; i++) {\r\n            const len = this.reader.int32();\r\n            // a -1 for length means the value of the field is null\r\n            fields[i] = len === -1 ? null : this.reader.string(len);\r\n        }\r\n        return new messages_1.DataRowMessage(length, fields);\r\n    }\r\n    parseParameterStatusMessage(offset, length, bytes) {\r\n        this.reader.setBuffer(offset, bytes);\r\n        const name = this.reader.cstring();\r\n        const value = this.reader.cstring();\r\n        return new messages_1.ParameterStatusMessage(length, name, value);\r\n    }\r\n    parseBackendKeyData(offset, length, bytes) {\r\n        this.reader.setBuffer(offset, bytes);\r\n        const processID = this.reader.int32();\r\n        const secretKey = this.reader.int32();\r\n        return new messages_1.BackendKeyDataMessage(length, processID, secretKey);\r\n    }\r\n    parseAuthenticationResponse(offset, length, bytes) {\r\n        this.reader.setBuffer(offset, bytes);\r\n        const code = this.reader.int32();\r\n        // TODO(bmc): maybe better types here\r\n        const message = {\r\n            name: 'authenticationOk',\r\n            length,\r\n        };\r\n        switch (code) {\r\n            case 0: // AuthenticationOk\r\n                break;\r\n            case 3: // AuthenticationCleartextPassword\r\n                if (message.length === 8) {\r\n                    message.name = 'authenticationCleartextPassword';\r\n                }\r\n                break;\r\n            case 5: // AuthenticationMD5Password\r\n                if (message.length === 12) {\r\n                    message.name = 'authenticationMD5Password';\r\n                    const salt = this.reader.bytes(4);\r\n                    return new messages_1.AuthenticationMD5Password(length, salt);\r\n                }\r\n                break;\r\n            case 10: // AuthenticationSASL\r\n                message.name = 'authenticationSASL';\r\n                message.mechanisms = [];\r\n                let mechanism;\r\n                do {\r\n                    mechanism = this.reader.cstring();\r\n                    if (mechanism) {\r\n                        message.mechanisms.push(mechanism);\r\n                    }\r\n                } while (mechanism);\r\n                break;\r\n            case 11: // AuthenticationSASLContinue\r\n                message.name = 'authenticationSASLContinue';\r\n                message.data = this.reader.string(length - 8);\r\n                break;\r\n            case 12: // AuthenticationSASLFinal\r\n                message.name = 'authenticationSASLFinal';\r\n                message.data = this.reader.string(length - 8);\r\n                break;\r\n            default:\r\n                throw new Error('Unknown authenticationOk message type ' + code);\r\n        }\r\n        return message;\r\n    }\r\n    parseErrorMessage(offset, length, bytes, name) {\r\n        this.reader.setBuffer(offset, bytes);\r\n        const fields = {};\r\n        let fieldType = this.reader.string(1);\r\n        while (fieldType !== '\\0') {\r\n            fields[fieldType] = this.reader.cstring();\r\n            fieldType = this.reader.string(1);\r\n        }\r\n        const messageValue = fields.M;\r\n        const message = name === 'notice' ? new messages_1.NoticeMessage(length, messageValue) : new messages_1.DatabaseError(messageValue, length, name);\r\n        message.severity = fields.S;\r\n        message.code = fields.C;\r\n        message.detail = fields.D;\r\n        message.hint = fields.H;\r\n        message.position = fields.P;\r\n        message.internalPosition = fields.p;\r\n        message.internalQuery = fields.q;\r\n        message.where = fields.W;\r\n        message.schema = fields.s;\r\n        message.table = fields.t;\r\n        message.column = fields.c;\r\n        message.dataType = fields.d;\r\n        message.constraint = fields.n;\r\n        message.file = fields.F;\r\n        message.line = fields.L;\r\n        message.routine = fields.R;\r\n        return message;\r\n    }\r\n}\r\nexports.Parser = Parser;\r\n//# sourceMappingURL=parser.js.map
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/dist/parser.js b/node_modules/pg-protocol/dist/parser.js
--- a/node_modules/pg-protocol/dist/parser.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/dist/parser.js	(date 1753913035301)
@@ -184,9 +184,9 @@
     }
     parseField() {
         const name = this.reader.cstring();
-        const tableID = this.reader.int32();
+        const tableID = this.reader.uint32();
         const columnID = this.reader.int16();
-        const dataTypeID = this.reader.int32();
+        const dataTypeID = this.reader.uint32();
         const dataTypeSize = this.reader.int16();
         const dataTypeModifier = this.reader.int32();
         const mode = this.reader.int16() === 0 ? 'text' : 'binary';
@@ -248,15 +248,17 @@
                 }
                 break;
             case 10: // AuthenticationSASL
-                message.name = 'authenticationSASL';
-                message.mechanisms = [];
-                let mechanism;
-                do {
-                    mechanism = this.reader.cstring();
-                    if (mechanism) {
-                        message.mechanisms.push(mechanism);
-                    }
-                } while (mechanism);
+                {
+                    message.name = 'authenticationSASL';
+                    message.mechanisms = [];
+                    let mechanism;
+                    do {
+                        mechanism = this.reader.cstring();
+                        if (mechanism) {
+                            message.mechanisms.push(mechanism);
+                        }
+                    } while (mechanism);
+                }
                 break;
             case 11: // AuthenticationSASLContinue
                 message.name = 'authenticationSASLContinue';
Index: node_modules/pg-protocol/dist/inbound-parser.test.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst test_buffers_1 = __importDefault(require(\"./testing/test-buffers\"));\r\nconst buffer_list_1 = __importDefault(require(\"./testing/buffer-list\"));\r\nconst _1 = require(\".\");\r\nconst assert_1 = __importDefault(require(\"assert\"));\r\nconst stream_1 = require(\"stream\");\r\nvar authOkBuffer = test_buffers_1.default.authenticationOk();\r\nvar paramStatusBuffer = test_buffers_1.default.parameterStatus('client_encoding', 'UTF8');\r\nvar readyForQueryBuffer = test_buffers_1.default.readyForQuery();\r\nvar backendKeyDataBuffer = test_buffers_1.default.backendKeyData(1, 2);\r\nvar commandCompleteBuffer = test_buffers_1.default.commandComplete('SELECT 3');\r\nvar parseCompleteBuffer = test_buffers_1.default.parseComplete();\r\nvar bindCompleteBuffer = test_buffers_1.default.bindComplete();\r\nvar portalSuspendedBuffer = test_buffers_1.default.portalSuspended();\r\nvar addRow = function (bufferList, name, offset) {\r\n    return bufferList\r\n        .addCString(name) // field name\r\n        .addInt32(offset++) // table id\r\n        .addInt16(offset++) // attribute of column number\r\n        .addInt32(offset++) // objectId of field's data type\r\n        .addInt16(offset++) // datatype size\r\n        .addInt32(offset++) // type modifier\r\n        .addInt16(0); // format code, 0 => text\r\n};\r\nvar row1 = {\r\n    name: 'id',\r\n    tableID: 1,\r\n    attributeNumber: 2,\r\n    dataTypeID: 3,\r\n    dataTypeSize: 4,\r\n    typeModifier: 5,\r\n    formatCode: 0,\r\n};\r\nvar oneRowDescBuff = test_buffers_1.default.rowDescription([row1]);\r\nrow1.name = 'bang';\r\nvar twoRowBuf = test_buffers_1.default.rowDescription([\r\n    row1,\r\n    {\r\n        name: 'whoah',\r\n        tableID: 10,\r\n        attributeNumber: 11,\r\n        dataTypeID: 12,\r\n        dataTypeSize: 13,\r\n        typeModifier: 14,\r\n        formatCode: 0,\r\n    },\r\n]);\r\nvar emptyRowFieldBuf = new buffer_list_1.default().addInt16(0).join(true, 'D');\r\nvar emptyRowFieldBuf = test_buffers_1.default.dataRow([]);\r\nvar oneFieldBuf = new buffer_list_1.default()\r\n    .addInt16(1) // number of fields\r\n    .addInt32(5) // length of bytes of fields\r\n    .addCString('test')\r\n    .join(true, 'D');\r\nvar oneFieldBuf = test_buffers_1.default.dataRow(['test']);\r\nvar expectedAuthenticationOkayMessage = {\r\n    name: 'authenticationOk',\r\n    length: 8,\r\n};\r\nvar expectedParameterStatusMessage = {\r\n    name: 'parameterStatus',\r\n    parameterName: 'client_encoding',\r\n    parameterValue: 'UTF8',\r\n    length: 25,\r\n};\r\nvar expectedBackendKeyDataMessage = {\r\n    name: 'backendKeyData',\r\n    processID: 1,\r\n    secretKey: 2,\r\n};\r\nvar expectedReadyForQueryMessage = {\r\n    name: 'readyForQuery',\r\n    length: 5,\r\n    status: 'I',\r\n};\r\nvar expectedCommandCompleteMessage = {\r\n    name: 'commandComplete',\r\n    length: 13,\r\n    text: 'SELECT 3',\r\n};\r\nvar emptyRowDescriptionBuffer = new buffer_list_1.default()\r\n    .addInt16(0) // number of fields\r\n    .join(true, 'T');\r\nvar expectedEmptyRowDescriptionMessage = {\r\n    name: 'rowDescription',\r\n    length: 6,\r\n    fieldCount: 0,\r\n    fields: [],\r\n};\r\nvar expectedOneRowMessage = {\r\n    name: 'rowDescription',\r\n    length: 27,\r\n    fieldCount: 1,\r\n    fields: [\r\n        {\r\n            name: 'id',\r\n            tableID: 1,\r\n            columnID: 2,\r\n            dataTypeID: 3,\r\n            dataTypeSize: 4,\r\n            dataTypeModifier: 5,\r\n            format: 'text',\r\n        },\r\n    ],\r\n};\r\nvar expectedTwoRowMessage = {\r\n    name: 'rowDescription',\r\n    length: 53,\r\n    fieldCount: 2,\r\n    fields: [\r\n        {\r\n            name: 'bang',\r\n            tableID: 1,\r\n            columnID: 2,\r\n            dataTypeID: 3,\r\n            dataTypeSize: 4,\r\n            dataTypeModifier: 5,\r\n            format: 'text',\r\n        },\r\n        {\r\n            name: 'whoah',\r\n            tableID: 10,\r\n            columnID: 11,\r\n            dataTypeID: 12,\r\n            dataTypeSize: 13,\r\n            dataTypeModifier: 14,\r\n            format: 'text',\r\n        },\r\n    ],\r\n};\r\nvar emptyParameterDescriptionBuffer = new buffer_list_1.default()\r\n    .addInt16(0) // number of parameters\r\n    .join(true, 't');\r\nvar oneParameterDescBuf = test_buffers_1.default.parameterDescription([1111]);\r\nvar twoParameterDescBuf = test_buffers_1.default.parameterDescription([2222, 3333]);\r\nvar expectedEmptyParameterDescriptionMessage = {\r\n    name: 'parameterDescription',\r\n    length: 6,\r\n    parameterCount: 0,\r\n    dataTypeIDs: [],\r\n};\r\nvar expectedOneParameterMessage = {\r\n    name: 'parameterDescription',\r\n    length: 10,\r\n    parameterCount: 1,\r\n    dataTypeIDs: [1111],\r\n};\r\nvar expectedTwoParameterMessage = {\r\n    name: 'parameterDescription',\r\n    length: 14,\r\n    parameterCount: 2,\r\n    dataTypeIDs: [2222, 3333],\r\n};\r\nvar testForMessage = function (buffer, expectedMessage) {\r\n    it('recieves and parses ' + expectedMessage.name, () => __awaiter(this, void 0, void 0, function* () {\r\n        const messages = yield parseBuffers([buffer]);\r\n        const [lastMessage] = messages;\r\n        for (const key in expectedMessage) {\r\n            assert_1.default.deepEqual(lastMessage[key], expectedMessage[key]);\r\n        }\r\n    }));\r\n};\r\nvar plainPasswordBuffer = test_buffers_1.default.authenticationCleartextPassword();\r\nvar md5PasswordBuffer = test_buffers_1.default.authenticationMD5Password();\r\nvar SASLBuffer = test_buffers_1.default.authenticationSASL();\r\nvar SASLContinueBuffer = test_buffers_1.default.authenticationSASLContinue();\r\nvar SASLFinalBuffer = test_buffers_1.default.authenticationSASLFinal();\r\nvar expectedPlainPasswordMessage = {\r\n    name: 'authenticationCleartextPassword',\r\n};\r\nvar expectedMD5PasswordMessage = {\r\n    name: 'authenticationMD5Password',\r\n    salt: Buffer.from([1, 2, 3, 4]),\r\n};\r\nvar expectedSASLMessage = {\r\n    name: 'authenticationSASL',\r\n    mechanisms: ['SCRAM-SHA-256'],\r\n};\r\nvar expectedSASLContinueMessage = {\r\n    name: 'authenticationSASLContinue',\r\n    data: 'data',\r\n};\r\nvar expectedSASLFinalMessage = {\r\n    name: 'authenticationSASLFinal',\r\n    data: 'data',\r\n};\r\nvar notificationResponseBuffer = test_buffers_1.default.notification(4, 'hi', 'boom');\r\nvar expectedNotificationResponseMessage = {\r\n    name: 'notification',\r\n    processId: 4,\r\n    channel: 'hi',\r\n    payload: 'boom',\r\n};\r\nconst parseBuffers = (buffers) => __awaiter(void 0, void 0, void 0, function* () {\r\n    const stream = new stream_1.PassThrough();\r\n    for (const buffer of buffers) {\r\n        stream.write(buffer);\r\n    }\r\n    stream.end();\r\n    const msgs = [];\r\n    yield (0, _1.parse)(stream, (msg) => msgs.push(msg));\r\n    return msgs;\r\n});\r\ndescribe('PgPacketStream', function () {\r\n    testForMessage(authOkBuffer, expectedAuthenticationOkayMessage);\r\n    testForMessage(plainPasswordBuffer, expectedPlainPasswordMessage);\r\n    testForMessage(md5PasswordBuffer, expectedMD5PasswordMessage);\r\n    testForMessage(SASLBuffer, expectedSASLMessage);\r\n    testForMessage(SASLContinueBuffer, expectedSASLContinueMessage);\r\n    // this exercises a found bug in the parser:\r\n    // https://github.com/brianc/node-postgres/pull/2210#issuecomment-627626084\r\n    // and adds a test which is deterministic, rather than relying on network packet chunking\r\n    const extendedSASLContinueBuffer = Buffer.concat([SASLContinueBuffer, Buffer.from([1, 2, 3, 4])]);\r\n    testForMessage(extendedSASLContinueBuffer, expectedSASLContinueMessage);\r\n    testForMessage(SASLFinalBuffer, expectedSASLFinalMessage);\r\n    // this exercises a found bug in the parser:\r\n    // https://github.com/brianc/node-postgres/pull/2210#issuecomment-627626084\r\n    // and adds a test which is deterministic, rather than relying on network packet chunking\r\n    const extendedSASLFinalBuffer = Buffer.concat([SASLFinalBuffer, Buffer.from([1, 2, 4, 5])]);\r\n    testForMessage(extendedSASLFinalBuffer, expectedSASLFinalMessage);\r\n    testForMessage(paramStatusBuffer, expectedParameterStatusMessage);\r\n    testForMessage(backendKeyDataBuffer, expectedBackendKeyDataMessage);\r\n    testForMessage(readyForQueryBuffer, expectedReadyForQueryMessage);\r\n    testForMessage(commandCompleteBuffer, expectedCommandCompleteMessage);\r\n    testForMessage(notificationResponseBuffer, expectedNotificationResponseMessage);\r\n    testForMessage(test_buffers_1.default.emptyQuery(), {\r\n        name: 'emptyQuery',\r\n        length: 4,\r\n    });\r\n    testForMessage(Buffer.from([0x6e, 0, 0, 0, 4]), {\r\n        name: 'noData',\r\n    });\r\n    describe('rowDescription messages', function () {\r\n        testForMessage(emptyRowDescriptionBuffer, expectedEmptyRowDescriptionMessage);\r\n        testForMessage(oneRowDescBuff, expectedOneRowMessage);\r\n        testForMessage(twoRowBuf, expectedTwoRowMessage);\r\n    });\r\n    describe('parameterDescription messages', function () {\r\n        testForMessage(emptyParameterDescriptionBuffer, expectedEmptyParameterDescriptionMessage);\r\n        testForMessage(oneParameterDescBuf, expectedOneParameterMessage);\r\n        testForMessage(twoParameterDescBuf, expectedTwoParameterMessage);\r\n    });\r\n    describe('parsing rows', function () {\r\n        describe('parsing empty row', function () {\r\n            testForMessage(emptyRowFieldBuf, {\r\n                name: 'dataRow',\r\n                fieldCount: 0,\r\n            });\r\n        });\r\n        describe('parsing data row with fields', function () {\r\n            testForMessage(oneFieldBuf, {\r\n                name: 'dataRow',\r\n                fieldCount: 1,\r\n                fields: ['test'],\r\n            });\r\n        });\r\n    });\r\n    describe('notice message', function () {\r\n        // this uses the same logic as error message\r\n        var buff = test_buffers_1.default.notice([{ type: 'C', value: 'code' }]);\r\n        testForMessage(buff, {\r\n            name: 'notice',\r\n            code: 'code',\r\n        });\r\n    });\r\n    testForMessage(test_buffers_1.default.error([]), {\r\n        name: 'error',\r\n    });\r\n    describe('with all the fields', function () {\r\n        var buffer = test_buffers_1.default.error([\r\n            {\r\n                type: 'S',\r\n                value: 'ERROR',\r\n            },\r\n            {\r\n                type: 'C',\r\n                value: 'code',\r\n            },\r\n            {\r\n                type: 'M',\r\n                value: 'message',\r\n            },\r\n            {\r\n                type: 'D',\r\n                value: 'details',\r\n            },\r\n            {\r\n                type: 'H',\r\n                value: 'hint',\r\n            },\r\n            {\r\n                type: 'P',\r\n                value: '100',\r\n            },\r\n            {\r\n                type: 'p',\r\n                value: '101',\r\n            },\r\n            {\r\n                type: 'q',\r\n                value: 'query',\r\n            },\r\n            {\r\n                type: 'W',\r\n                value: 'where',\r\n            },\r\n            {\r\n                type: 'F',\r\n                value: 'file',\r\n            },\r\n            {\r\n                type: 'L',\r\n                value: 'line',\r\n            },\r\n            {\r\n                type: 'R',\r\n                value: 'routine',\r\n            },\r\n            {\r\n                type: 'Z',\r\n                value: 'alsdkf',\r\n            },\r\n        ]);\r\n        testForMessage(buffer, {\r\n            name: 'error',\r\n            severity: 'ERROR',\r\n            code: 'code',\r\n            message: 'message',\r\n            detail: 'details',\r\n            hint: 'hint',\r\n            position: '100',\r\n            internalPosition: '101',\r\n            internalQuery: 'query',\r\n            where: 'where',\r\n            file: 'file',\r\n            line: 'line',\r\n            routine: 'routine',\r\n        });\r\n    });\r\n    testForMessage(parseCompleteBuffer, {\r\n        name: 'parseComplete',\r\n    });\r\n    testForMessage(bindCompleteBuffer, {\r\n        name: 'bindComplete',\r\n    });\r\n    testForMessage(bindCompleteBuffer, {\r\n        name: 'bindComplete',\r\n    });\r\n    testForMessage(test_buffers_1.default.closeComplete(), {\r\n        name: 'closeComplete',\r\n    });\r\n    describe('parses portal suspended message', function () {\r\n        testForMessage(portalSuspendedBuffer, {\r\n            name: 'portalSuspended',\r\n        });\r\n    });\r\n    describe('parses replication start message', function () {\r\n        testForMessage(Buffer.from([0x57, 0x00, 0x00, 0x00, 0x04]), {\r\n            name: 'replicationStart',\r\n            length: 4,\r\n        });\r\n    });\r\n    describe('copy', () => {\r\n        testForMessage(test_buffers_1.default.copyIn(0), {\r\n            name: 'copyInResponse',\r\n            length: 7,\r\n            binary: false,\r\n            columnTypes: [],\r\n        });\r\n        testForMessage(test_buffers_1.default.copyIn(2), {\r\n            name: 'copyInResponse',\r\n            length: 11,\r\n            binary: false,\r\n            columnTypes: [0, 1],\r\n        });\r\n        testForMessage(test_buffers_1.default.copyOut(0), {\r\n            name: 'copyOutResponse',\r\n            length: 7,\r\n            binary: false,\r\n            columnTypes: [],\r\n        });\r\n        testForMessage(test_buffers_1.default.copyOut(3), {\r\n            name: 'copyOutResponse',\r\n            length: 13,\r\n            binary: false,\r\n            columnTypes: [0, 1, 2],\r\n        });\r\n        testForMessage(test_buffers_1.default.copyDone(), {\r\n            name: 'copyDone',\r\n            length: 4,\r\n        });\r\n        testForMessage(test_buffers_1.default.copyData(Buffer.from([5, 6, 7])), {\r\n            name: 'copyData',\r\n            length: 7,\r\n            chunk: Buffer.from([5, 6, 7]),\r\n        });\r\n    });\r\n    // since the data message on a stream can randomly divide the incomming\r\n    // tcp packets anywhere, we need to make sure we can parse every single\r\n    // split on a tcp message\r\n    describe('split buffer, single message parsing', function () {\r\n        var fullBuffer = test_buffers_1.default.dataRow([null, 'bang', 'zug zug', null, '!']);\r\n        it('parses when full buffer comes in', function () {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                const messages = yield parseBuffers([fullBuffer]);\r\n                const message = messages[0];\r\n                assert_1.default.equal(message.fields.length, 5);\r\n                assert_1.default.equal(message.fields[0], null);\r\n                assert_1.default.equal(message.fields[1], 'bang');\r\n                assert_1.default.equal(message.fields[2], 'zug zug');\r\n                assert_1.default.equal(message.fields[3], null);\r\n                assert_1.default.equal(message.fields[4], '!');\r\n            });\r\n        });\r\n        var testMessageRecievedAfterSpiltAt = function (split) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                var firstBuffer = Buffer.alloc(fullBuffer.length - split);\r\n                var secondBuffer = Buffer.alloc(fullBuffer.length - firstBuffer.length);\r\n                fullBuffer.copy(firstBuffer, 0, 0);\r\n                fullBuffer.copy(secondBuffer, 0, firstBuffer.length);\r\n                const messages = yield parseBuffers([fullBuffer]);\r\n                const message = messages[0];\r\n                assert_1.default.equal(message.fields.length, 5);\r\n                assert_1.default.equal(message.fields[0], null);\r\n                assert_1.default.equal(message.fields[1], 'bang');\r\n                assert_1.default.equal(message.fields[2], 'zug zug');\r\n                assert_1.default.equal(message.fields[3], null);\r\n                assert_1.default.equal(message.fields[4], '!');\r\n            });\r\n        };\r\n        it('parses when split in the middle', function () {\r\n            testMessageRecievedAfterSpiltAt(6);\r\n        });\r\n        it('parses when split at end', function () {\r\n            testMessageRecievedAfterSpiltAt(2);\r\n        });\r\n        it('parses when split at beginning', function () {\r\n            testMessageRecievedAfterSpiltAt(fullBuffer.length - 2);\r\n            testMessageRecievedAfterSpiltAt(fullBuffer.length - 1);\r\n            testMessageRecievedAfterSpiltAt(fullBuffer.length - 5);\r\n        });\r\n    });\r\n    describe('split buffer, multiple message parsing', function () {\r\n        var dataRowBuffer = test_buffers_1.default.dataRow(['!']);\r\n        var readyForQueryBuffer = test_buffers_1.default.readyForQuery();\r\n        var fullBuffer = Buffer.alloc(dataRowBuffer.length + readyForQueryBuffer.length);\r\n        dataRowBuffer.copy(fullBuffer, 0, 0);\r\n        readyForQueryBuffer.copy(fullBuffer, dataRowBuffer.length, 0);\r\n        var verifyMessages = function (messages) {\r\n            assert_1.default.strictEqual(messages.length, 2);\r\n            assert_1.default.deepEqual(messages[0], {\r\n                name: 'dataRow',\r\n                fieldCount: 1,\r\n                length: 11,\r\n                fields: ['!'],\r\n            });\r\n            assert_1.default.equal(messages[0].fields[0], '!');\r\n            assert_1.default.deepEqual(messages[1], {\r\n                name: 'readyForQuery',\r\n                length: 5,\r\n                status: 'I',\r\n            });\r\n        };\r\n        // sanity check\r\n        it('recieves both messages when packet is not split', function () {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                const messages = yield parseBuffers([fullBuffer]);\r\n                verifyMessages(messages);\r\n            });\r\n        });\r\n        var splitAndVerifyTwoMessages = function (split) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                var firstBuffer = Buffer.alloc(fullBuffer.length - split);\r\n                var secondBuffer = Buffer.alloc(fullBuffer.length - firstBuffer.length);\r\n                fullBuffer.copy(firstBuffer, 0, 0);\r\n                fullBuffer.copy(secondBuffer, 0, firstBuffer.length);\r\n                const messages = yield parseBuffers([firstBuffer, secondBuffer]);\r\n                verifyMessages(messages);\r\n            });\r\n        };\r\n        describe('recieves both messages when packet is split', function () {\r\n            it('in the middle', function () {\r\n                return splitAndVerifyTwoMessages(11);\r\n            });\r\n            it('at the front', function () {\r\n                return Promise.all([\r\n                    splitAndVerifyTwoMessages(fullBuffer.length - 1),\r\n                    splitAndVerifyTwoMessages(fullBuffer.length - 4),\r\n                    splitAndVerifyTwoMessages(fullBuffer.length - 6),\r\n                ]);\r\n            });\r\n            it('at the end', function () {\r\n                return Promise.all([splitAndVerifyTwoMessages(8), splitAndVerifyTwoMessages(1)]);\r\n            });\r\n        });\r\n    });\r\n});\r\n//# sourceMappingURL=inbound-parser.test.js.map
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-protocol/dist/inbound-parser.test.js b/node_modules/pg-protocol/dist/inbound-parser.test.js
--- a/node_modules/pg-protocol/dist/inbound-parser.test.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-protocol/dist/inbound-parser.test.js	(date 1753913035296)
@@ -17,25 +17,15 @@
 const _1 = require(".");
 const assert_1 = __importDefault(require("assert"));
 const stream_1 = require("stream");
-var authOkBuffer = test_buffers_1.default.authenticationOk();
-var paramStatusBuffer = test_buffers_1.default.parameterStatus('client_encoding', 'UTF8');
-var readyForQueryBuffer = test_buffers_1.default.readyForQuery();
-var backendKeyDataBuffer = test_buffers_1.default.backendKeyData(1, 2);
-var commandCompleteBuffer = test_buffers_1.default.commandComplete('SELECT 3');
-var parseCompleteBuffer = test_buffers_1.default.parseComplete();
-var bindCompleteBuffer = test_buffers_1.default.bindComplete();
-var portalSuspendedBuffer = test_buffers_1.default.portalSuspended();
-var addRow = function (bufferList, name, offset) {
-    return bufferList
-        .addCString(name) // field name
-        .addInt32(offset++) // table id
-        .addInt16(offset++) // attribute of column number
-        .addInt32(offset++) // objectId of field's data type
-        .addInt16(offset++) // datatype size
-        .addInt32(offset++) // type modifier
-        .addInt16(0); // format code, 0 => text
-};
-var row1 = {
+const authOkBuffer = test_buffers_1.default.authenticationOk();
+const paramStatusBuffer = test_buffers_1.default.parameterStatus('client_encoding', 'UTF8');
+const readyForQueryBuffer = test_buffers_1.default.readyForQuery();
+const backendKeyDataBuffer = test_buffers_1.default.backendKeyData(1, 2);
+const commandCompleteBuffer = test_buffers_1.default.commandComplete('SELECT 3');
+const parseCompleteBuffer = test_buffers_1.default.parseComplete();
+const bindCompleteBuffer = test_buffers_1.default.bindComplete();
+const portalSuspendedBuffer = test_buffers_1.default.portalSuspended();
+const row1 = {
     name: 'id',
     tableID: 1,
     attributeNumber: 2,
@@ -44,9 +34,9 @@
     typeModifier: 5,
     formatCode: 0,
 };
-var oneRowDescBuff = test_buffers_1.default.rowDescription([row1]);
+const oneRowDescBuff = test_buffers_1.default.rowDescription([row1]);
 row1.name = 'bang';
-var twoRowBuf = test_buffers_1.default.rowDescription([
+const twoRowBuf = test_buffers_1.default.rowDescription([
     row1,
     {
         name: 'whoah',
@@ -58,49 +48,53 @@
         formatCode: 0,
     },
 ]);
-var emptyRowFieldBuf = new buffer_list_1.default().addInt16(0).join(true, 'D');
-var emptyRowFieldBuf = test_buffers_1.default.dataRow([]);
-var oneFieldBuf = new buffer_list_1.default()
-    .addInt16(1) // number of fields
-    .addInt32(5) // length of bytes of fields
-    .addCString('test')
-    .join(true, 'D');
-var oneFieldBuf = test_buffers_1.default.dataRow(['test']);
-var expectedAuthenticationOkayMessage = {
+const rowWithBigOids = {
+    name: 'bigoid',
+    tableID: 3000000001,
+    attributeNumber: 2,
+    dataTypeID: 3000000003,
+    dataTypeSize: 4,
+    typeModifier: 5,
+    formatCode: 0,
+};
+const bigOidDescBuff = test_buffers_1.default.rowDescription([rowWithBigOids]);
+const emptyRowFieldBuf = test_buffers_1.default.dataRow([]);
+const oneFieldBuf = test_buffers_1.default.dataRow(['test']);
+const expectedAuthenticationOkayMessage = {
     name: 'authenticationOk',
     length: 8,
 };
-var expectedParameterStatusMessage = {
+const expectedParameterStatusMessage = {
     name: 'parameterStatus',
     parameterName: 'client_encoding',
     parameterValue: 'UTF8',
     length: 25,
 };
-var expectedBackendKeyDataMessage = {
+const expectedBackendKeyDataMessage = {
     name: 'backendKeyData',
     processID: 1,
     secretKey: 2,
 };
-var expectedReadyForQueryMessage = {
+const expectedReadyForQueryMessage = {
     name: 'readyForQuery',
     length: 5,
     status: 'I',
 };
-var expectedCommandCompleteMessage = {
+const expectedCommandCompleteMessage = {
     name: 'commandComplete',
     length: 13,
     text: 'SELECT 3',
 };
-var emptyRowDescriptionBuffer = new buffer_list_1.default()
+const emptyRowDescriptionBuffer = new buffer_list_1.default()
     .addInt16(0) // number of fields
     .join(true, 'T');
-var expectedEmptyRowDescriptionMessage = {
+const expectedEmptyRowDescriptionMessage = {
     name: 'rowDescription',
     length: 6,
     fieldCount: 0,
     fields: [],
 };
-var expectedOneRowMessage = {
+const expectedOneRowMessage = {
     name: 'rowDescription',
     length: 27,
     fieldCount: 1,
@@ -116,7 +110,7 @@
         },
     ],
 };
-var expectedTwoRowMessage = {
+const expectedTwoRowMessage = {
     name: 'rowDescription',
     length: 53,
     fieldCount: 2,
@@ -141,31 +135,47 @@
         },
     ],
 };
-var emptyParameterDescriptionBuffer = new buffer_list_1.default()
+const expectedBigOidMessage = {
+    name: 'rowDescription',
+    length: 31,
+    fieldCount: 1,
+    fields: [
+        {
+            name: 'bigoid',
+            tableID: 3000000001,
+            columnID: 2,
+            dataTypeID: 3000000003,
+            dataTypeSize: 4,
+            dataTypeModifier: 5,
+            format: 'text',
+        },
+    ],
+};
+const emptyParameterDescriptionBuffer = new buffer_list_1.default()
     .addInt16(0) // number of parameters
     .join(true, 't');
-var oneParameterDescBuf = test_buffers_1.default.parameterDescription([1111]);
-var twoParameterDescBuf = test_buffers_1.default.parameterDescription([2222, 3333]);
-var expectedEmptyParameterDescriptionMessage = {
+const oneParameterDescBuf = test_buffers_1.default.parameterDescription([1111]);
+const twoParameterDescBuf = test_buffers_1.default.parameterDescription([2222, 3333]);
+const expectedEmptyParameterDescriptionMessage = {
     name: 'parameterDescription',
     length: 6,
     parameterCount: 0,
     dataTypeIDs: [],
 };
-var expectedOneParameterMessage = {
+const expectedOneParameterMessage = {
     name: 'parameterDescription',
     length: 10,
     parameterCount: 1,
     dataTypeIDs: [1111],
 };
-var expectedTwoParameterMessage = {
+const expectedTwoParameterMessage = {
     name: 'parameterDescription',
     length: 14,
     parameterCount: 2,
     dataTypeIDs: [2222, 3333],
 };
-var testForMessage = function (buffer, expectedMessage) {
-    it('recieves and parses ' + expectedMessage.name, () => __awaiter(this, void 0, void 0, function* () {
+const testForMessage = function (buffer, expectedMessage) {
+    it('receives and parses ' + expectedMessage.name, () => __awaiter(this, void 0, void 0, function* () {
         const messages = yield parseBuffers([buffer]);
         const [lastMessage] = messages;
         for (const key in expectedMessage) {
@@ -173,32 +183,32 @@
         }
     }));
 };
-var plainPasswordBuffer = test_buffers_1.default.authenticationCleartextPassword();
-var md5PasswordBuffer = test_buffers_1.default.authenticationMD5Password();
-var SASLBuffer = test_buffers_1.default.authenticationSASL();
-var SASLContinueBuffer = test_buffers_1.default.authenticationSASLContinue();
-var SASLFinalBuffer = test_buffers_1.default.authenticationSASLFinal();
-var expectedPlainPasswordMessage = {
+const plainPasswordBuffer = test_buffers_1.default.authenticationCleartextPassword();
+const md5PasswordBuffer = test_buffers_1.default.authenticationMD5Password();
+const SASLBuffer = test_buffers_1.default.authenticationSASL();
+const SASLContinueBuffer = test_buffers_1.default.authenticationSASLContinue();
+const SASLFinalBuffer = test_buffers_1.default.authenticationSASLFinal();
+const expectedPlainPasswordMessage = {
     name: 'authenticationCleartextPassword',
 };
-var expectedMD5PasswordMessage = {
+const expectedMD5PasswordMessage = {
     name: 'authenticationMD5Password',
     salt: Buffer.from([1, 2, 3, 4]),
 };
-var expectedSASLMessage = {
+const expectedSASLMessage = {
     name: 'authenticationSASL',
     mechanisms: ['SCRAM-SHA-256'],
 };
-var expectedSASLContinueMessage = {
+const expectedSASLContinueMessage = {
     name: 'authenticationSASLContinue',
     data: 'data',
 };
-var expectedSASLFinalMessage = {
+const expectedSASLFinalMessage = {
     name: 'authenticationSASLFinal',
     data: 'data',
 };
-var notificationResponseBuffer = test_buffers_1.default.notification(4, 'hi', 'boom');
-var expectedNotificationResponseMessage = {
+const notificationResponseBuffer = test_buffers_1.default.notification(4, 'hi', 'boom');
+const expectedNotificationResponseMessage = {
     name: 'notification',
     processId: 4,
     channel: 'hi',
@@ -247,6 +257,7 @@
         testForMessage(emptyRowDescriptionBuffer, expectedEmptyRowDescriptionMessage);
         testForMessage(oneRowDescBuff, expectedOneRowMessage);
         testForMessage(twoRowBuf, expectedTwoRowMessage);
+        testForMessage(bigOidDescBuff, expectedBigOidMessage);
     });
     describe('parameterDescription messages', function () {
         testForMessage(emptyParameterDescriptionBuffer, expectedEmptyParameterDescriptionMessage);
@@ -270,7 +281,7 @@
     });
     describe('notice message', function () {
         // this uses the same logic as error message
-        var buff = test_buffers_1.default.notice([{ type: 'C', value: 'code' }]);
+        const buff = test_buffers_1.default.notice([{ type: 'C', value: 'code' }]);
         testForMessage(buff, {
             name: 'notice',
             code: 'code',
@@ -280,7 +291,7 @@
         name: 'error',
     });
     describe('with all the fields', function () {
-        var buffer = test_buffers_1.default.error([
+        const buffer = test_buffers_1.default.error([
             {
                 type: 'S',
                 value: 'ERROR',
@@ -412,7 +423,7 @@
     // tcp packets anywhere, we need to make sure we can parse every single
     // split on a tcp message
     describe('split buffer, single message parsing', function () {
-        var fullBuffer = test_buffers_1.default.dataRow([null, 'bang', 'zug zug', null, '!']);
+        const fullBuffer = test_buffers_1.default.dataRow([null, 'bang', 'zug zug', null, '!']);
         it('parses when full buffer comes in', function () {
             return __awaiter(this, void 0, void 0, function* () {
                 const messages = yield parseBuffers([fullBuffer]);
@@ -425,13 +436,13 @@
                 assert_1.default.equal(message.fields[4], '!');
             });
         });
-        var testMessageRecievedAfterSpiltAt = function (split) {
+        const testMessageReceivedAfterSplitAt = function (split) {
             return __awaiter(this, void 0, void 0, function* () {
-                var firstBuffer = Buffer.alloc(fullBuffer.length - split);
-                var secondBuffer = Buffer.alloc(fullBuffer.length - firstBuffer.length);
+                const firstBuffer = Buffer.alloc(fullBuffer.length - split);
+                const secondBuffer = Buffer.alloc(fullBuffer.length - firstBuffer.length);
                 fullBuffer.copy(firstBuffer, 0, 0);
                 fullBuffer.copy(secondBuffer, 0, firstBuffer.length);
-                const messages = yield parseBuffers([fullBuffer]);
+                const messages = yield parseBuffers([firstBuffer, secondBuffer]);
                 const message = messages[0];
                 assert_1.default.equal(message.fields.length, 5);
                 assert_1.default.equal(message.fields[0], null);
@@ -442,24 +453,26 @@
             });
         };
         it('parses when split in the middle', function () {
-            testMessageRecievedAfterSpiltAt(6);
+            return testMessageReceivedAfterSplitAt(6);
         });
         it('parses when split at end', function () {
-            testMessageRecievedAfterSpiltAt(2);
+            return testMessageReceivedAfterSplitAt(2);
         });
         it('parses when split at beginning', function () {
-            testMessageRecievedAfterSpiltAt(fullBuffer.length - 2);
-            testMessageRecievedAfterSpiltAt(fullBuffer.length - 1);
-            testMessageRecievedAfterSpiltAt(fullBuffer.length - 5);
+            return Promise.all([
+                testMessageReceivedAfterSplitAt(fullBuffer.length - 2),
+                testMessageReceivedAfterSplitAt(fullBuffer.length - 1),
+                testMessageReceivedAfterSplitAt(fullBuffer.length - 5),
+            ]);
         });
     });
     describe('split buffer, multiple message parsing', function () {
-        var dataRowBuffer = test_buffers_1.default.dataRow(['!']);
-        var readyForQueryBuffer = test_buffers_1.default.readyForQuery();
-        var fullBuffer = Buffer.alloc(dataRowBuffer.length + readyForQueryBuffer.length);
+        const dataRowBuffer = test_buffers_1.default.dataRow(['!']);
+        const readyForQueryBuffer = test_buffers_1.default.readyForQuery();
+        const fullBuffer = Buffer.alloc(dataRowBuffer.length + readyForQueryBuffer.length);
         dataRowBuffer.copy(fullBuffer, 0, 0);
         readyForQueryBuffer.copy(fullBuffer, dataRowBuffer.length, 0);
-        var verifyMessages = function (messages) {
+        const verifyMessages = function (messages) {
             assert_1.default.strictEqual(messages.length, 2);
             assert_1.default.deepEqual(messages[0], {
                 name: 'dataRow',
@@ -475,23 +488,23 @@
             });
         };
         // sanity check
-        it('recieves both messages when packet is not split', function () {
+        it('receives both messages when packet is not split', function () {
             return __awaiter(this, void 0, void 0, function* () {
                 const messages = yield parseBuffers([fullBuffer]);
                 verifyMessages(messages);
             });
         });
-        var splitAndVerifyTwoMessages = function (split) {
+        const splitAndVerifyTwoMessages = function (split) {
             return __awaiter(this, void 0, void 0, function* () {
-                var firstBuffer = Buffer.alloc(fullBuffer.length - split);
-                var secondBuffer = Buffer.alloc(fullBuffer.length - firstBuffer.length);
+                const firstBuffer = Buffer.alloc(fullBuffer.length - split);
+                const secondBuffer = Buffer.alloc(fullBuffer.length - firstBuffer.length);
                 fullBuffer.copy(firstBuffer, 0, 0);
                 fullBuffer.copy(secondBuffer, 0, firstBuffer.length);
                 const messages = yield parseBuffers([firstBuffer, secondBuffer]);
                 verifyMessages(messages);
             });
         };
-        describe('recieves both messages when packet is split', function () {
+        describe('receives both messages when packet is split', function () {
             it('in the middle', function () {
                 return splitAndVerifyTwoMessages(11);
             });
Index: node_modules/power-tasks/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># power-tasks\r\n\r\n[![NPM Version][npm-image]][npm-url]\r\n[![NPM Downloads][downloads-image]][downloads-url]\r\n[![Build Status][ci-image]][ci-url]\r\n[![Test Coverage][coveralls-image]][coveralls-url]\r\n[![Dependencies][dependencies-image]][dependencies-url]\r\n[![DevDependencies][devdependencies-image]][devdependencies-url]\r\n\r\nPowerful task management for Javascript.\r\n\r\n## Installation\r\n\r\n  - `npm install power-tasks --save`\r\n\r\n## Node Compatibility\r\n\r\n  - node `>= 14.x`;\r\n  \r\n### License\r\n[MIT](LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/power-tasks.svg\r\n[npm-url]: https://npmjs.org/package/power-tasks\r\n[ci-image]: https://circleci.com/gh/panates/power-tasks/tree/main.svg?style=svg\r\n[ci-url]: https://circleci.com/gh/panates/power-tasks/tree/main\r\n[coveralls-image]: https://img.shields.io/coveralls/panates/power-tasks/master.svg\r\n[coveralls-url]: https://coveralls.io/r/panates/power-tasks\r\n[downloads-image]: https://img.shields.io/npm/dm/power-tasks.svg\r\n[downloads-url]: https://npmjs.org/package/power-tasks\r\n[gitter-image]: https://badges.gitter.im/panates/power-tasks.svg\r\n[gitter-url]: https://gitter.im/panates/power-tasks?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\r\n[dependencies-image]: https://david-dm.org/panates/power-tasks/status.svg\r\n[dependencies-url]:https://david-dm.org/panates/power-tasks\r\n[devdependencies-image]: https://david-dm.org/panates/power-tasks/dev-status.svg\r\n[devdependencies-url]:https://david-dm.org/panates/power-tasks?type=dev\r\n[quality-image]: http://npm.packagequality.com/shield/power-tasks.png\r\n[quality-url]: http://packagequality.com/#?package=power-tasks\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/power-tasks/README.md b/node_modules/power-tasks/README.md
--- a/node_modules/power-tasks/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/power-tasks/README.md	(date 1753913035305)
@@ -11,13 +11,14 @@
 
 ## Installation
 
-  - `npm install power-tasks --save`
+- `npm install power-tasks --save`
 
 ## Node Compatibility
 
-  - node `>= 14.x`;
-  
+- node `>= 14.x`;
+
 ### License
+
 [MIT](LICENSE)
 
 [npm-image]: https://img.shields.io/npm/v/power-tasks.svg
@@ -31,8 +32,8 @@
 [gitter-image]: https://badges.gitter.im/panates/power-tasks.svg
 [gitter-url]: https://gitter.im/panates/power-tasks?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge
 [dependencies-image]: https://david-dm.org/panates/power-tasks/status.svg
-[dependencies-url]:https://david-dm.org/panates/power-tasks
+[dependencies-url]: https://david-dm.org/panates/power-tasks
 [devdependencies-image]: https://david-dm.org/panates/power-tasks/dev-status.svg
-[devdependencies-url]:https://david-dm.org/panates/power-tasks?type=dev
+[devdependencies-url]: https://david-dm.org/panates/power-tasks?type=dev
 [quality-image]: http://npm.packagequality.com/shield/power-tasks.png
 [quality-url]: http://packagequality.com/#?package=power-tasks
Index: node_modules/power-tasks/cjs/utils.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.delay = exports.plural = void 0;\r\nfunction plural(word, isPlural, pluralWord) {\r\n    if ((typeof isPlural === 'number' && isPlural > 1) || isPlural)\r\n        return pluralWord ? pluralWord : word + 's';\r\n    return word;\r\n}\r\nexports.plural = plural;\r\nfunction delay(t) {\r\n    return new Promise(resolve => setTimeout(resolve, t).unref());\r\n}\r\nexports.delay = delay;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/power-tasks/cjs/utils.js b/node_modules/power-tasks/cjs/utils.js
--- a/node_modules/power-tasks/cjs/utils.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/power-tasks/cjs/utils.js	(date 1753913035299)
@@ -1,13 +1,12 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.delay = exports.plural = void 0;
+exports.plural = plural;
+exports.delay = delay;
 function plural(word, isPlural, pluralWord) {
-    if ((typeof isPlural === 'number' && isPlural > 1) || isPlural)
-        return pluralWord ? pluralWord : word + 's';
+    if ((typeof isPlural === "number" && isPlural > 1) || isPlural)
+        return pluralWord ? pluralWord : word + "s";
     return word;
 }
-exports.plural = plural;
 function delay(t) {
-    return new Promise(resolve => setTimeout(resolve, t).unref());
+    return new Promise((resolve) => setTimeout(resolve, t).unref());
 }
-exports.delay = delay;
Index: node_modules/power-tasks/cjs/abort-error.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AbortError = void 0;\r\nclass AbortError extends Error {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.code = 'ABORT_ERR';\r\n    }\r\n}\r\nexports.AbortError = AbortError;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/power-tasks/cjs/abort-error.js b/node_modules/power-tasks/cjs/abort-error.js
--- a/node_modules/power-tasks/cjs/abort-error.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/power-tasks/cjs/abort-error.js	(date 1753913035283)
@@ -4,7 +4,7 @@
 class AbortError extends Error {
     constructor() {
         super(...arguments);
-        this.code = 'ABORT_ERR';
+        this.code = "ABORT_ERR";
     }
 }
 exports.AbortError = AbortError;
Index: node_modules/power-tasks/cjs/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./task.js\"), exports);\r\n__exportStar(require(\"./task-queue.js\"), exports);\r\n__exportStar(require(\"./abort-error.js\"), exports);\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/power-tasks/cjs/index.js b/node_modules/power-tasks/cjs/index.js
--- a/node_modules/power-tasks/cjs/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/power-tasks/cjs/index.js	(date 1753913035287)
@@ -1,19 +1,6 @@
 "use strict";
-var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    var desc = Object.getOwnPropertyDescriptor(m, k);
-    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
-      desc = { enumerable: true, get: function() { return m[k]; } };
-    }
-    Object.defineProperty(o, k2, desc);
-}) : (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    o[k2] = m[k];
-}));
-var __exportStar = (this && this.__exportStar) || function(m, exports) {
-    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
-};
 Object.defineProperty(exports, "__esModule", { value: true });
-__exportStar(require("./task.js"), exports);
-__exportStar(require("./task-queue.js"), exports);
-__exportStar(require("./abort-error.js"), exports);
+const tslib_1 = require("tslib");
+tslib_1.__exportStar(require("./abort-error.js"), exports);
+tslib_1.__exportStar(require("./task.js"), exports);
+tslib_1.__exportStar(require("./task-queue.js"), exports);
Index: node_modules/power-tasks/cjs/task-queue.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TaskQueue = void 0;\r\nconst strict_typed_events_1 = require(\"strict-typed-events\");\r\nconst doublylinked_1 = __importDefault(require(\"doublylinked\"));\r\nconst task_js_1 = require(\"./task.js\");\r\nclass TaskQueue extends strict_typed_events_1.AsyncEventEmitter {\r\n    constructor(options) {\r\n        super();\r\n        this._queue = new doublylinked_1.default();\r\n        this._running = new Set();\r\n        this.maxQueue = options?.maxQueue;\r\n        this.concurrency = options?.concurrency;\r\n        this._paused = !!options?.paused;\r\n    }\r\n    get size() {\r\n        return this._queue.length + this._running.size;\r\n    }\r\n    get running() {\r\n        return this._running.size;\r\n    }\r\n    get queued() {\r\n        return this._queue.length;\r\n    }\r\n    get paused() {\r\n        return this._paused;\r\n    }\r\n    pause() {\r\n        this._paused = true;\r\n    }\r\n    resume() {\r\n        this._paused = false;\r\n        setImmediate(() => this._pulse());\r\n    }\r\n    clearQueue() {\r\n        this._queue.forEach(task => task.abort());\r\n        this._queue = new doublylinked_1.default();\r\n    }\r\n    abortAll() {\r\n        if (!this.size)\r\n            return;\r\n        this.clearQueue();\r\n        this._running.forEach(task => task.abort());\r\n    }\r\n    async wait() {\r\n        if (!this.size)\r\n            return Promise.resolve();\r\n        return new Promise(resolve => {\r\n            this.once('finish', resolve);\r\n        });\r\n    }\r\n    enqueuePrepend(task) {\r\n        return this._enqueue(task, true);\r\n    }\r\n    enqueue(task) {\r\n        return this._enqueue(task, false);\r\n    }\r\n    _enqueue(task, prepend) {\r\n        if (this.maxQueue && this.size >= this.maxQueue)\r\n            throw new Error(`Queue limit (${this.maxQueue}) exceeded`);\r\n        const taskInstance = task instanceof task_js_1.Task ? task : new task_js_1.Task(task);\r\n        Object.defineProperty(taskInstance, '_isManaged', {\r\n            configurable: false,\r\n            writable: false,\r\n            enumerable: false,\r\n            value: true\r\n        });\r\n        taskInstance.once('error', (...args) => this.emitAsync('error', ...args));\r\n        this.emit('enqueue', taskInstance);\r\n        if (prepend)\r\n            this._queue.unshift(taskInstance);\r\n        else\r\n            this._queue.push(taskInstance);\r\n        this._pulse();\r\n        return taskInstance;\r\n    }\r\n    _pulse() {\r\n        if (this.paused)\r\n            return;\r\n        while (!this.concurrency || this._running.size < this.concurrency) {\r\n            const task = this._queue.shift();\r\n            if (!task)\r\n                return;\r\n            this._running.add(task);\r\n            task.prependOnceListener('finish', () => {\r\n                this._running.delete(task);\r\n                if (!(this._running.size || this._queue.length))\r\n                    return this.emit('finish');\r\n                this._pulse();\r\n            });\r\n            task.start();\r\n        }\r\n    }\r\n}\r\nexports.TaskQueue = TaskQueue;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/power-tasks/cjs/task-queue.js b/node_modules/power-tasks/cjs/task-queue.js
--- a/node_modules/power-tasks/cjs/task-queue.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/power-tasks/cjs/task-queue.js	(date 1753913035295)
@@ -1,11 +1,9 @@
 "use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.TaskQueue = void 0;
+const tslib_1 = require("tslib");
+const doublylinked_1 = tslib_1.__importDefault(require("doublylinked"));
 const strict_typed_events_1 = require("strict-typed-events");
-const doublylinked_1 = __importDefault(require("doublylinked"));
 const task_js_1 = require("./task.js");
 class TaskQueue extends strict_typed_events_1.AsyncEventEmitter {
     constructor(options) {
@@ -36,20 +34,20 @@
         setImmediate(() => this._pulse());
     }
     clearQueue() {
-        this._queue.forEach(task => task.abort());
+        this._queue.forEach((task) => task.abort());
         this._queue = new doublylinked_1.default();
     }
     abortAll() {
         if (!this.size)
             return;
         this.clearQueue();
-        this._running.forEach(task => task.abort());
+        this._running.forEach((task) => task.abort());
     }
     async wait() {
         if (!this.size)
             return Promise.resolve();
-        return new Promise(resolve => {
-            this.once('finish', resolve);
+        return new Promise((resolve) => {
+            this.once("finish", resolve);
         });
     }
     enqueuePrepend(task) {
@@ -62,14 +60,14 @@
         if (this.maxQueue && this.size >= this.maxQueue)
             throw new Error(`Queue limit (${this.maxQueue}) exceeded`);
         const taskInstance = task instanceof task_js_1.Task ? task : new task_js_1.Task(task);
-        Object.defineProperty(taskInstance, '_isManaged', {
+        Object.defineProperty(taskInstance, "_isManaged", {
             configurable: false,
             writable: false,
             enumerable: false,
-            value: true
+            value: true,
         });
-        taskInstance.once('error', (...args) => this.emitAsync('error', ...args));
-        this.emit('enqueue', taskInstance);
+        taskInstance.once("error", (...args) => this.emitAsync("error", ...args));
+        this.emit("enqueue", taskInstance);
         if (prepend)
             this._queue.unshift(taskInstance);
         else
@@ -85,10 +83,10 @@
             if (!task)
                 return;
             this._running.add(task);
-            task.prependOnceListener('finish', () => {
+            task.prependOnceListener("finish", () => {
                 this._running.delete(task);
                 if (!(this._running.size || this._queue.length))
-                    return this.emit('finish');
+                    return this.emit("finish");
                 this._pulse();
             });
             task.start();
Index: node_modules/power-tasks/cjs/task.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Task = void 0;\r\nconst os = __importStar(require(\"os\"));\r\nconst strict_typed_events_1 = require(\"strict-typed-events\");\r\nconst utils_js_1 = require(\"./utils.js\");\r\nconst osCPUs = os.cpus().length;\r\nclass TaskContext {\r\n    constructor() {\r\n        // allTasks = new Set<Task>();\r\n        this.executingTasks = new Set();\r\n        this.queue = new Set();\r\n    }\r\n}\r\nconst noOp = () => void (0);\r\nconst taskContextKey = Symbol.for('power-tasks.Task.context');\r\nlet idGen = 0;\r\nclass Task extends strict_typed_events_1.AsyncEventEmitter {\r\n    constructor(arg0, options) {\r\n        super();\r\n        this._id = '';\r\n        this._status = 'idle';\r\n        this._abortController = new AbortController();\r\n        this.setMaxListeners(100);\r\n        options = options || {};\r\n        if (Array.isArray(arg0)) {\r\n            options.children = arg0;\r\n        }\r\n        else\r\n            this._executeFn = arg0;\r\n        this._options = { ...options };\r\n        this._id = this._options.id || '';\r\n        if (this._options.bail == null)\r\n            this._options.bail = true;\r\n        if (options.onStart)\r\n            this.on('start', options.onStart);\r\n        if (options.onFinish)\r\n            this.on('finish', options.onFinish);\r\n        if (options.onRun)\r\n            this.on('run', options.onRun);\r\n        if (options.onStatusChange)\r\n            this.on('status-change', options.onStatusChange);\r\n        if (options.onUpdate)\r\n            this.on('update', options.onUpdate);\r\n        if (options.onUpdateRecursive)\r\n            this.on('update-recursive', options.onUpdateRecursive);\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    get name() {\r\n        return this._options.name;\r\n    }\r\n    get children() {\r\n        return this._children;\r\n    }\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    get message() {\r\n        return this._message || '';\r\n    }\r\n    get status() {\r\n        return this._status;\r\n    }\r\n    get isStarted() {\r\n        return this.status !== 'idle' && !this.isFinished;\r\n    }\r\n    get isFinished() {\r\n        return this.status === 'fulfilled' || this.status === 'failed' ||\r\n            this.status === 'aborted';\r\n    }\r\n    get isFailed() {\r\n        return this.status === 'failed';\r\n    }\r\n    get executeDuration() {\r\n        return this._executeDuration;\r\n    }\r\n    get result() {\r\n        return this._result;\r\n    }\r\n    get error() {\r\n        return this._error;\r\n    }\r\n    get dependencies() {\r\n        return this._dependencies;\r\n    }\r\n    get failedChildren() {\r\n        return this._failedChildren;\r\n    }\r\n    get failedDependencies() {\r\n        return this._failedDependencies;\r\n    }\r\n    get needWaiting() {\r\n        if (this._waitingFor && this._waitingFor.size)\r\n            return true;\r\n        if (this._children) {\r\n            for (const c of this._children) {\r\n                if (c.needWaiting)\r\n                    return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    getWaitingTasks() {\r\n        if (!(this.status === 'waiting' && this._waitingFor && this._waitingFor.size))\r\n            return;\r\n        const out = Array.from(this._waitingFor);\r\n        if (this._children)\r\n            for (const c of this._children) {\r\n                const childTasks = c.getWaitingTasks();\r\n                if (childTasks) {\r\n                    childTasks.forEach(t => {\r\n                        if (!out.includes(t))\r\n                            out.push(t);\r\n                    });\r\n                }\r\n            }\r\n        return out;\r\n    }\r\n    abort() {\r\n        if (this.isFinished || this.status === 'aborting')\r\n            return this;\r\n        if (!this.isStarted) {\r\n            this._update({ status: 'aborted', message: 'aborted' });\r\n            return this;\r\n        }\r\n        const ctx = this[taskContextKey];\r\n        const timeout = this.options.abortTimeout || 30000;\r\n        this._update({ status: 'aborting', message: 'Aborting' });\r\n        if (timeout) {\r\n            this._abortTimer = setTimeout(() => {\r\n                delete this._abortTimer;\r\n                this._update({ status: 'aborted', message: 'aborted' });\r\n            }, timeout).unref();\r\n        }\r\n        this._abortChildren()\r\n            .catch(noOp)\r\n            .then(() => {\r\n            if (this.isFinished)\r\n                return;\r\n            if (ctx.executingTasks.has(this)) {\r\n                this._abortController.abort();\r\n                return;\r\n            }\r\n            this._update({ status: 'aborted', message: 'aborted' });\r\n        });\r\n        return this;\r\n    }\r\n    start() {\r\n        if (this.isStarted)\r\n            return this;\r\n        this._id = this._id || ('t' + (++idGen));\r\n        const ctx = this[taskContextKey] = new TaskContext();\r\n        ctx.concurrency = this.options.concurrency || osCPUs;\r\n        let pulseTimer;\r\n        ctx.triggerPulse = () => {\r\n            if (pulseTimer || this.isFinished)\r\n                return;\r\n            pulseTimer = setTimeout(() => {\r\n                pulseTimer = undefined;\r\n                this._pulse();\r\n            }, 1);\r\n        };\r\n        if (this.options.children) {\r\n            this._determineChildrenTree((err) => {\r\n                if (err) {\r\n                    this._update({\r\n                        status: 'failed',\r\n                        error: err,\r\n                        message: 'Unable to fetch child tasks. ' + (err.message || err)\r\n                    });\r\n                    return;\r\n                }\r\n                this._determineChildrenDependencies([]);\r\n                this._start();\r\n            });\r\n        }\r\n        else\r\n            this._start();\r\n        return this;\r\n    }\r\n    toPromise() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.isFinished) {\r\n                if (this.isFailed)\r\n                    reject(this.error);\r\n                else\r\n                    resolve(this.result);\r\n                return;\r\n            }\r\n            this.once('finish', () => {\r\n                if (this.isFailed)\r\n                    return reject(this.error);\r\n                resolve(this.result);\r\n            });\r\n            if (!this.isStarted && !this._isManaged)\r\n                this.start();\r\n        });\r\n    }\r\n    _determineChildrenTree(callback) {\r\n        const ctx = this[taskContextKey];\r\n        const options = this._options;\r\n        const handler = (err, value) => {\r\n            if (err)\r\n                return callback(err);\r\n            if (!value)\r\n                return callback();\r\n            if (typeof value === 'function') {\r\n                try {\r\n                    const x = value();\r\n                    handler(undefined, x);\r\n                }\r\n                catch (err) {\r\n                    handler(err);\r\n                }\r\n                return;\r\n            }\r\n            if (Array.isArray(value)) {\r\n                let idx = 1;\r\n                const children = value.reduce((a, v) => {\r\n                    // noinspection SuspiciousTypeOfGuard\r\n                    if (typeof v === 'function') {\r\n                        v = new Task(v, { concurrency: options.concurrency, bail: options.bail });\r\n                    }\r\n                    if (v instanceof Task) {\r\n                        v[taskContextKey] = ctx;\r\n                        v._id = v._id || (this._id + '-' + (idx++));\r\n                        const listeners = this.listeners('update-recursive');\r\n                        listeners.forEach(listener => v.on('update-recursive', listener));\r\n                        // ctx.allTasks.add(v);\r\n                        a.push(v);\r\n                    }\r\n                    return a;\r\n                }, []);\r\n                if (children && children.length) {\r\n                    this._children = children;\r\n                    let i = 0;\r\n                    const next = (err) => {\r\n                        if (err)\r\n                            return callback(err);\r\n                        if (i >= children.length)\r\n                            return callback();\r\n                        const c = children[i++];\r\n                        if (c.options.children)\r\n                            c._determineChildrenTree((err) => next(err));\r\n                        else\r\n                            next();\r\n                    };\r\n                    next();\r\n                }\r\n                else\r\n                    callback();\r\n                return;\r\n            }\r\n            if (value && typeof value.then === 'function') {\r\n                value\r\n                    .then(v => handler(undefined, v))\r\n                    .catch(err => handler(err));\r\n                return;\r\n            }\r\n            callback(new Error('Invalid value returned from children() method.'));\r\n        };\r\n        handler(undefined, this._options.children);\r\n    }\r\n    _determineChildrenDependencies(scope) {\r\n        if (!this._children)\r\n            return;\r\n        const detectCircular = (t, lookup, path = '') => {\r\n            if (!lookup._dependencies)\r\n                return;\r\n            path = path || (t.name || t.id);\r\n            path += ' > ' + (lookup.name || lookup.id);\r\n            if (lookup._dependencies.includes(t))\r\n                throw new Error(`Circular dependency detected. ${path + ' > ' + (t.name || t.id)}`);\r\n            for (const l1 of lookup._dependencies.values())\r\n                detectCircular(t, l1, path);\r\n        };\r\n        const subScope = [...scope, ...Array.from(this._children)];\r\n        for (const c of this._children.values()) {\r\n            c._determineChildrenDependencies(subScope);\r\n            if (!c.options.dependencies)\r\n                continue;\r\n            const dependencies = [];\r\n            const waitingFor = new Set();\r\n            for (const dep of c.options.dependencies) {\r\n                const dependentTask = subScope.find(x => typeof dep === 'string' ? x.name === dep : (x === dep));\r\n                if (!dependentTask || c === dependentTask)\r\n                    continue;\r\n                detectCircular(c, dependentTask);\r\n                if (dependentTask._dependencies?.includes(c))\r\n                    throw new Error(`Task \"${c.name}\" has circular dependency with ${dependentTask.name}.`);\r\n                dependencies.push(dependentTask);\r\n                if (!dependentTask.isFinished)\r\n                    waitingFor.add(dependentTask);\r\n            }\r\n            if (dependencies.length)\r\n                c._dependencies = dependencies;\r\n            if (waitingFor.size)\r\n                c._waitingFor = waitingFor;\r\n            c._captureDependencies();\r\n        }\r\n    }\r\n    _captureDependencies() {\r\n        if (!this._waitingFor)\r\n            return;\r\n        const failedDependencies = [];\r\n        const waitingFor = this._waitingFor;\r\n        const signal = this._abortController.signal;\r\n        const abortSignalCallback = () => clearWait();\r\n        signal.addEventListener('abort', abortSignalCallback, { once: true });\r\n        const handleDependentAborted = () => {\r\n            signal.removeEventListener('abort', abortSignalCallback);\r\n            this._abortChildren()\r\n                .then(() => {\r\n                const isFailed = !!failedDependencies.find(d => d.status === 'failed');\r\n                const error = new Error('Aborted due to ' + (isFailed ? 'fail' : 'cancellation') +\r\n                    ' of dependent ' + (0, utils_js_1.plural)('task', !!failedDependencies.length));\r\n                error.failedDependencies = failedDependencies;\r\n                this._failedDependencies = failedDependencies;\r\n                this._update({\r\n                    status: isFailed ? 'failed' : 'aborted',\r\n                    message: error.message,\r\n                    error\r\n                });\r\n            })\r\n                .catch(noOp);\r\n        };\r\n        const clearWait = () => {\r\n            for (const t of waitingFor) {\r\n                t.removeListener('finish', finishCallback);\r\n            }\r\n            delete this._waitingFor;\r\n        };\r\n        const finishCallback = async (t) => {\r\n            if (this.isStarted && this.status !== 'waiting') {\r\n                clearWait();\r\n                return;\r\n            }\r\n            waitingFor.delete(t);\r\n            if (t.isFailed || t.status === 'aborted') {\r\n                failedDependencies.push(t);\r\n            }\r\n            // If all dependent tasks completed\r\n            if (!waitingFor.size) {\r\n                delete this._waitingFor;\r\n                signal.removeEventListener('abort', abortSignalCallback);\r\n                // If any of dependent tasks are failed\r\n                if (failedDependencies.length) {\r\n                    handleDependentAborted();\r\n                    return;\r\n                }\r\n                // If all dependent tasks completed successfully we continue to next step (startChildren)\r\n                if (this.isStarted)\r\n                    this._startChildren();\r\n                else\r\n                    await this.emitAsync('wait-end');\r\n            }\r\n        };\r\n        for (const t of waitingFor.values()) {\r\n            if (t.isFailed || t.status === 'aborted') {\r\n                waitingFor.delete(t);\r\n                failedDependencies.push(t);\r\n            }\r\n            else\r\n                t.prependOnceListener('finish', finishCallback);\r\n        }\r\n        if (!waitingFor.size)\r\n            handleDependentAborted();\r\n    }\r\n    _start() {\r\n        if (this.isStarted || this.isFinished)\r\n            return;\r\n        if (this._waitingFor) {\r\n            this._update({\r\n                status: 'waiting',\r\n                message: 'Waiting for dependencies',\r\n                waitingFor: true\r\n            });\r\n            return;\r\n        }\r\n        this._startChildren();\r\n    }\r\n    _startChildren() {\r\n        const children = this._children;\r\n        if (!children) {\r\n            this._pulse();\r\n            return;\r\n        }\r\n        const options = this.options;\r\n        const childrenLeft = this._childrenLeft = new Set(children);\r\n        const failedChildren = [];\r\n        const statusChangeCallback = async (t) => {\r\n            if (this.status === 'aborting')\r\n                return;\r\n            if (t.status === 'running')\r\n                this._update({ status: 'running', message: 'Running' });\r\n            if (t.status === 'waiting')\r\n                this._update({ status: 'waiting', message: 'Waiting' });\r\n        };\r\n        const finishCallback = async (t) => {\r\n            t.removeListener('status-change', statusChangeCallback);\r\n            childrenLeft.delete(t);\r\n            if (t.isFailed || t.status === 'aborted') {\r\n                failedChildren.push(t);\r\n                if (options.bail && childrenLeft.size) {\r\n                    const running = !!children.find(c => c.isStarted);\r\n                    if (running)\r\n                        this._update({ status: 'aborting', message: 'Aborting' });\r\n                    this._abortChildren().catch(noOp);\r\n                    return;\r\n                }\r\n            }\r\n            if (!childrenLeft.size) {\r\n                delete this._childrenLeft;\r\n                if (failedChildren.length) {\r\n                    const isFailed = !!failedChildren.find(d => d.status === 'failed');\r\n                    const error = new Error('Aborted due to ' + (isFailed ? 'fail' : 'cancellation') +\r\n                        ' of child ' + (0, utils_js_1.plural)('task', !!failedChildren.length));\r\n                    error.failedChildren = failedChildren;\r\n                    this._failedChildren = failedChildren;\r\n                    this._update({\r\n                        status: isFailed ? 'failed' : 'aborted',\r\n                        error,\r\n                        message: error.message\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n            this._pulse();\r\n        };\r\n        for (const c of children) {\r\n            c.prependOnceListener('wait-end', () => this._pulse());\r\n            c.prependOnceListener('finish', finishCallback);\r\n            c.prependListener('status-change', statusChangeCallback);\r\n        }\r\n        this._pulse();\r\n    }\r\n    _pulse() {\r\n        const ctx = this[taskContextKey];\r\n        if (this.isFinished ||\r\n            this._waitingFor ||\r\n            this.status === 'aborting' ||\r\n            ctx.executingTasks.has(this))\r\n            return;\r\n        const options = this.options;\r\n        if (this._childrenLeft) {\r\n            // Check if we can run multiple child tasks\r\n            for (const c of this._childrenLeft) {\r\n                if ((c.isStarted && options.serial) || (c.status === 'running' && c.options.exclusive)) {\r\n                    c._pulse();\r\n                    return;\r\n                }\r\n            }\r\n            // Check waiting children\r\n            let hasExclusive = false;\r\n            let hasRunning = false;\r\n            for (const c of this._childrenLeft) {\r\n                if (c.isFinished)\r\n                    continue;\r\n                hasExclusive = hasExclusive || !!c.options.exclusive;\r\n                hasRunning = hasRunning || c.status === 'running';\r\n            }\r\n            if (hasExclusive && hasRunning)\r\n                return;\r\n            // start children\r\n            let k = ctx.concurrency - ctx.executingTasks.size;\r\n            for (const c of this._childrenLeft) {\r\n                if (c.isStarted) {\r\n                    c._pulse();\r\n                    continue;\r\n                }\r\n                if (k-- <= 0)\r\n                    return;\r\n                if (c.options.exclusive && (ctx.executingTasks.size || ctx.executingTasks.size))\r\n                    return;\r\n                c._start();\r\n                if (options.serial || (c.status === 'running' && c.options.exclusive))\r\n                    return;\r\n            }\r\n        }\r\n        if ((this._childrenLeft && this._childrenLeft.size) || ctx.executingTasks.size >= ctx.concurrency)\r\n            return;\r\n        this._update({ status: 'running', message: 'Running' });\r\n        ctx.executingTasks.add(this);\r\n        const t = Date.now();\r\n        const signal = this._abortController.signal;\r\n        (async () => (this._executeFn || noOp)({\r\n            task: this,\r\n            signal\r\n        }))()\r\n            .then((result) => {\r\n            ctx.executingTasks.delete(this);\r\n            this._executeDuration = Date.now() - t;\r\n            this._update({\r\n                status: 'fulfilled',\r\n                message: 'Task completed',\r\n                result\r\n            });\r\n        })\r\n            .catch(error => {\r\n            ctx.executingTasks.delete(this);\r\n            this._executeDuration = Date.now() - t;\r\n            if (error.code === 'ABORT_ERR') {\r\n                this._update({\r\n                    status: 'aborted',\r\n                    error,\r\n                    message: error instanceof Error ? error.message : '' + error\r\n                });\r\n                return;\r\n            }\r\n            this._update({\r\n                status: 'failed',\r\n                error,\r\n                message: error instanceof Error ? error.message : '' + error\r\n            });\r\n        });\r\n    }\r\n    _update(prop) {\r\n        const oldFinished = this.isFinished;\r\n        const keys = [];\r\n        const oldStarted = this.isStarted;\r\n        if (prop.status && this._status !== prop.status) {\r\n            this._status = prop.status;\r\n            keys.push('status');\r\n        }\r\n        if (prop.message && this._message !== prop.message) {\r\n            this._message = prop.message;\r\n            keys.push('message');\r\n        }\r\n        if (prop.error && this._error !== prop.error) {\r\n            this._error = prop.error;\r\n            keys.push('error');\r\n        }\r\n        if (prop.result && this._result !== prop.result) {\r\n            this._result = prop.result;\r\n            keys.push('result');\r\n        }\r\n        if (prop.waitingFor) {\r\n            keys.push('waitingFor');\r\n        }\r\n        if (keys.length) {\r\n            if (keys.includes('status')) {\r\n                if (!oldStarted)\r\n                    this.emitAsync('start', this).catch(noOp);\r\n                this.emitAsync('status-change', this).catch(noOp);\r\n                if (this._status === 'running')\r\n                    this.emitAsync('run', this).catch(noOp);\r\n            }\r\n            this.emitAsync('update', this, keys).catch(noOp);\r\n            this.emitAsync('update-recursive', this, keys).catch(noOp);\r\n            if (this.isFinished && !oldFinished) {\r\n                const ctx = this[taskContextKey];\r\n                if (this._abortTimer) {\r\n                    clearTimeout(this._abortTimer);\r\n                    delete this._abortTimer;\r\n                }\r\n                delete this[taskContextKey];\r\n                if (this.error)\r\n                    this.emitAsync('error', this.error).catch(noOp);\r\n                this.emitAsync('finish', this).catch(noOp);\r\n                if (ctx)\r\n                    ctx.triggerPulse();\r\n            }\r\n        }\r\n    }\r\n    async _abortChildren() {\r\n        const promises = [];\r\n        if (this._children) {\r\n            for (let i = this._children.length - 1; i >= 0; i--) {\r\n                const child = this._children[i];\r\n                if (!child.isFinished) {\r\n                    child.abort();\r\n                    promises.push(child.toPromise());\r\n                }\r\n            }\r\n        }\r\n        if (promises.length)\r\n            await Promise.all(promises);\r\n    }\r\n}\r\nexports.Task = Task;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/power-tasks/cjs/task.js b/node_modules/power-tasks/cjs/task.js
--- a/node_modules/power-tasks/cjs/task.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/power-tasks/cjs/task.js	(date 1753913035297)
@@ -1,30 +1,8 @@
 "use strict";
-var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    var desc = Object.getOwnPropertyDescriptor(m, k);
-    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
-      desc = { enumerable: true, get: function() { return m[k]; } };
-    }
-    Object.defineProperty(o, k2, desc);
-}) : (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    o[k2] = m[k];
-}));
-var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
-    Object.defineProperty(o, "default", { enumerable: true, value: v });
-}) : function(o, v) {
-    o["default"] = v;
-});
-var __importStar = (this && this.__importStar) || function (mod) {
-    if (mod && mod.__esModule) return mod;
-    var result = {};
-    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
-    __setModuleDefault(result, mod);
-    return result;
-};
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.Task = void 0;
-const os = __importStar(require("os"));
+const tslib_1 = require("tslib");
+const os = tslib_1.__importStar(require("os"));
 const strict_typed_events_1 = require("strict-typed-events");
 const utils_js_1 = require("./utils.js");
 const osCPUs = os.cpus().length;
@@ -35,14 +13,14 @@
         this.queue = new Set();
     }
 }
-const noOp = () => void (0);
-const taskContextKey = Symbol.for('power-tasks.Task.context');
+const noOp = () => undefined;
+const taskContextKey = Symbol.for("power-tasks.Task.context");
 let idGen = 0;
 class Task extends strict_typed_events_1.AsyncEventEmitter {
     constructor(arg0, options) {
         super();
-        this._id = '';
-        this._status = 'idle';
+        this._id = "";
+        this._status = "idle";
         this._abortController = new AbortController();
         this.setMaxListeners(100);
         options = options || {};
@@ -52,21 +30,21 @@
         else
             this._executeFn = arg0;
         this._options = { ...options };
-        this._id = this._options.id || '';
+        this._id = this._options.id || "";
         if (this._options.bail == null)
             this._options.bail = true;
         if (options.onStart)
-            this.on('start', options.onStart);
+            this.on("start", options.onStart);
         if (options.onFinish)
-            this.on('finish', options.onFinish);
+            this.on("finish", options.onFinish);
         if (options.onRun)
-            this.on('run', options.onRun);
+            this.on("run", options.onRun);
         if (options.onStatusChange)
-            this.on('status-change', options.onStatusChange);
+            this.on("status-change", options.onStatusChange);
         if (options.onUpdate)
-            this.on('update', options.onUpdate);
+            this.on("update", options.onUpdate);
         if (options.onUpdateRecursive)
-            this.on('update-recursive', options.onUpdateRecursive);
+            this.on("update-recursive", options.onUpdateRecursive);
     }
     get id() {
         return this._id;
@@ -81,20 +59,19 @@
         return this._options;
     }
     get message() {
-        return this._message || '';
+        return this._message || "";
     }
     get status() {
         return this._status;
     }
     get isStarted() {
-        return this.status !== 'idle' && !this.isFinished;
+        return this.status !== "idle" && !this.isFinished;
     }
     get isFinished() {
-        return this.status === 'fulfilled' || this.status === 'failed' ||
-            this.status === 'aborted';
+        return this.status === "fulfilled" || this.status === "failed" || this.status === "aborted";
     }
     get isFailed() {
-        return this.status === 'failed';
+        return this.status === "failed";
     }
     get executeDuration() {
         return this._executeDuration;
@@ -126,35 +103,36 @@
         return false;
     }
     getWaitingTasks() {
-        if (!(this.status === 'waiting' && this._waitingFor && this._waitingFor.size))
+        if (!(this.status === "waiting" && this._waitingFor && this._waitingFor.size))
             return;
         const out = Array.from(this._waitingFor);
-        if (this._children)
+        if (this._children) {
             for (const c of this._children) {
                 const childTasks = c.getWaitingTasks();
                 if (childTasks) {
-                    childTasks.forEach(t => {
+                    childTasks.forEach((t) => {
                         if (!out.includes(t))
                             out.push(t);
                     });
                 }
             }
+        }
         return out;
     }
     abort() {
-        if (this.isFinished || this.status === 'aborting')
+        if (this.isFinished || this.status === "aborting")
             return this;
         if (!this.isStarted) {
-            this._update({ status: 'aborted', message: 'aborted' });
+            this._update({ status: "aborted", message: "aborted" });
             return this;
         }
         const ctx = this[taskContextKey];
         const timeout = this.options.abortTimeout || 30000;
-        this._update({ status: 'aborting', message: 'Aborting' });
+        this._update({ status: "aborting", message: "Aborting" });
         if (timeout) {
             this._abortTimer = setTimeout(() => {
                 delete this._abortTimer;
-                this._update({ status: 'aborted', message: 'aborted' });
+                this._update({ status: "aborted", message: "aborted" });
             }, timeout).unref();
         }
         this._abortChildren()
@@ -166,15 +144,16 @@
                 this._abortController.abort();
                 return;
             }
-            this._update({ status: 'aborted', message: 'aborted' });
-        });
+            this._update({ status: "aborted", message: "aborted" });
+        })
+            .catch(noOp);
         return this;
     }
     start() {
         if (this.isStarted)
             return this;
-        this._id = this._id || ('t' + (++idGen));
-        const ctx = this[taskContextKey] = new TaskContext();
+        this._id = this._id || "t" + ++idGen;
+        const ctx = (this[taskContextKey] = new TaskContext());
         ctx.concurrency = this.options.concurrency || osCPUs;
         let pulseTimer;
         ctx.triggerPulse = () => {
@@ -189,9 +168,9 @@
             this._determineChildrenTree((err) => {
                 if (err) {
                     this._update({
-                        status: 'failed',
+                        status: "failed",
                         error: err,
-                        message: 'Unable to fetch child tasks. ' + (err.message || err)
+                        message: "Unable to fetch child tasks. " + (err.message || err),
                     });
                     return;
                 }
@@ -212,7 +191,7 @@
                     resolve(this.result);
                 return;
             }
-            this.once('finish', () => {
+            this.once("finish", () => {
                 if (this.isFailed)
                     return reject(this.error);
                 resolve(this.result);
@@ -229,13 +208,13 @@
                 return callback(err);
             if (!value)
                 return callback();
-            if (typeof value === 'function') {
+            if (typeof value === "function") {
                 try {
                     const x = value();
                     handler(undefined, x);
                 }
-                catch (err) {
-                    handler(err);
+                catch (err2) {
+                    handler(err2);
                 }
                 return;
             }
@@ -243,15 +222,14 @@
                 let idx = 1;
                 const children = value.reduce((a, v) => {
                     // noinspection SuspiciousTypeOfGuard
-                    if (typeof v === 'function') {
+                    if (typeof v === "function") {
                         v = new Task(v, { concurrency: options.concurrency, bail: options.bail });
                     }
                     if (v instanceof Task) {
                         v[taskContextKey] = ctx;
-                        v._id = v._id || (this._id + '-' + (idx++));
-                        const listeners = this.listeners('update-recursive');
-                        listeners.forEach(listener => v.on('update-recursive', listener));
-                        // ctx.allTasks.add(v);
+                        v._id = v._id || this._id + "-" + idx++;
+                        const listeners = this.listeners("update-recursive");
+                        listeners.forEach((listener) => v.on("update-recursive", listener));
                         a.push(v);
                     }
                     return a;
@@ -259,14 +237,14 @@
                 if (children && children.length) {
                     this._children = children;
                     let i = 0;
-                    const next = (err) => {
-                        if (err)
-                            return callback(err);
+                    const next = (err2) => {
+                        if (err2)
+                            return callback(err2);
                         if (i >= children.length)
                             return callback();
                         const c = children[i++];
                         if (c.options.children)
-                            c._determineChildrenTree((err) => next(err));
+                            c._determineChildrenTree((err3) => next(err3));
                         else
                             next();
                     };
@@ -276,28 +254,40 @@
                     callback();
                 return;
             }
-            if (value && typeof value.then === 'function') {
-                value
-                    .then(v => handler(undefined, v))
-                    .catch(err => handler(err));
+            if (value && typeof value.then === "function") {
+                value.then((v) => handler(undefined, v)).catch((e) => handler(e));
                 return;
             }
-            callback(new Error('Invalid value returned from children() method.'));
+            callback(new Error("Invalid value returned from children() method."));
         };
         handler(undefined, this._options.children);
     }
     _determineChildrenDependencies(scope) {
         if (!this._children)
             return;
-        const detectCircular = (t, lookup, path = '') => {
-            if (!lookup._dependencies)
-                return;
-            path = path || (t.name || t.id);
-            path += ' > ' + (lookup.name || lookup.id);
-            if (lookup._dependencies.includes(t))
-                throw new Error(`Circular dependency detected. ${path + ' > ' + (t.name || t.id)}`);
-            for (const l1 of lookup._dependencies.values())
-                detectCircular(t, l1, path);
+        const detectCircular = (t, dependencies, path = "", list) => {
+            path = path || t.name || t.id;
+            list = list || new Set();
+            for (const l1 of dependencies.values()) {
+                if (l1 === t)
+                    throw new Error(`Circular dependency detected. ${path}`);
+                if (list.has(l1))
+                    continue;
+                list.add(l1);
+                if (l1._dependencies)
+                    detectCircular(t, l1._dependencies, path + " > " + (l1.name || l1.id), list);
+                if (l1.children) {
+                    for (const c of l1.children) {
+                        if (c === t)
+                            throw new Error(`Circular dependency detected. ${path}`);
+                        if (list.has(c))
+                            continue;
+                        list.add(c);
+                        if (c._dependencies)
+                            detectCircular(t, c._dependencies, path, list);
+                    }
+                }
+            }
         };
         const subScope = [...scope, ...Array.from(this._children)];
         for (const c of this._children.values()) {
@@ -307,16 +297,14 @@
             const dependencies = [];
             const waitingFor = new Set();
             for (const dep of c.options.dependencies) {
-                const dependentTask = subScope.find(x => typeof dep === 'string' ? x.name === dep : (x === dep));
+                const dependentTask = subScope.find((x) => (typeof dep === "string" ? x.name === dep : x === dep));
                 if (!dependentTask || c === dependentTask)
                     continue;
-                detectCircular(c, dependentTask);
-                if (dependentTask._dependencies?.includes(c))
-                    throw new Error(`Task "${c.name}" has circular dependency with ${dependentTask.name}.`);
                 dependencies.push(dependentTask);
                 if (!dependentTask.isFinished)
                     waitingFor.add(dependentTask);
             }
+            detectCircular(c, dependencies);
             if (dependencies.length)
                 c._dependencies = dependencies;
             if (waitingFor.size)
@@ -331,43 +319,45 @@
         const waitingFor = this._waitingFor;
         const signal = this._abortController.signal;
         const abortSignalCallback = () => clearWait();
-        signal.addEventListener('abort', abortSignalCallback, { once: true });
+        signal.addEventListener("abort", abortSignalCallback, { once: true });
         const handleDependentAborted = () => {
-            signal.removeEventListener('abort', abortSignalCallback);
+            signal.removeEventListener("abort", abortSignalCallback);
             this._abortChildren()
                 .then(() => {
-                const isFailed = !!failedDependencies.find(d => d.status === 'failed');
-                const error = new Error('Aborted due to ' + (isFailed ? 'fail' : 'cancellation') +
-                    ' of dependent ' + (0, utils_js_1.plural)('task', !!failedDependencies.length));
+                const isFailed = !!failedDependencies.find((d) => d.status === "failed");
+                const error = new Error("Aborted due to " +
+                    (isFailed ? "fail" : "cancellation") +
+                    " of dependent " +
+                    (0, utils_js_1.plural)("task", !!failedDependencies.length));
                 error.failedDependencies = failedDependencies;
                 this._failedDependencies = failedDependencies;
                 this._update({
-                    status: isFailed ? 'failed' : 'aborted',
+                    status: isFailed ? "failed" : "aborted",
                     message: error.message,
-                    error
+                    error,
                 });
             })
                 .catch(noOp);
         };
         const clearWait = () => {
             for (const t of waitingFor) {
-                t.removeListener('finish', finishCallback);
+                t.removeListener("finish", finishCallback);
             }
             delete this._waitingFor;
         };
         const finishCallback = async (t) => {
-            if (this.isStarted && this.status !== 'waiting') {
+            if (this.isStarted && this.status !== "waiting") {
                 clearWait();
                 return;
             }
             waitingFor.delete(t);
-            if (t.isFailed || t.status === 'aborted') {
+            if (t.isFailed || t.status === "aborted") {
                 failedDependencies.push(t);
             }
             // If all dependent tasks completed
             if (!waitingFor.size) {
                 delete this._waitingFor;
-                signal.removeEventListener('abort', abortSignalCallback);
+                signal.removeEventListener("abort", abortSignalCallback);
                 // If any of dependent tasks are failed
                 if (failedDependencies.length) {
                     handleDependentAborted();
@@ -377,16 +367,16 @@
                 if (this.isStarted)
                     this._startChildren();
                 else
-                    await this.emitAsync('wait-end');
+                    await this.emitAsync("wait-end");
             }
         };
         for (const t of waitingFor.values()) {
-            if (t.isFailed || t.status === 'aborted') {
+            if (t.isFailed || t.status === "aborted") {
                 waitingFor.delete(t);
                 failedDependencies.push(t);
             }
             else
-                t.prependOnceListener('finish', finishCallback);
+                t.prependOnceListener("finish", finishCallback);
         }
         if (!waitingFor.size)
             handleDependentAborted();
@@ -396,9 +386,9 @@
             return;
         if (this._waitingFor) {
             this._update({
-                status: 'waiting',
-                message: 'Waiting for dependencies',
-                waitingFor: true
+                status: "waiting",
+                message: "Waiting for dependencies",
+                waitingFor: true,
             });
             return;
         }
@@ -411,25 +401,25 @@
             return;
         }
         const options = this.options;
-        const childrenLeft = this._childrenLeft = new Set(children);
+        const childrenLeft = (this._childrenLeft = new Set(children));
         const failedChildren = [];
         const statusChangeCallback = async (t) => {
-            if (this.status === 'aborting')
+            if (this.status === "aborting")
                 return;
-            if (t.status === 'running')
-                this._update({ status: 'running', message: 'Running' });
-            if (t.status === 'waiting')
-                this._update({ status: 'waiting', message: 'Waiting' });
+            if (t.status === "running")
+                this._update({ status: "running", message: "Running" });
+            if (t.status === "waiting")
+                this._update({ status: "waiting", message: "Waiting" });
         };
         const finishCallback = async (t) => {
-            t.removeListener('status-change', statusChangeCallback);
+            t.removeListener("status-change", statusChangeCallback);
             childrenLeft.delete(t);
-            if (t.isFailed || t.status === 'aborted') {
+            if (t.isFailed || t.status === "aborted") {
                 failedChildren.push(t);
                 if (options.bail && childrenLeft.size) {
-                    const running = !!children.find(c => c.isStarted);
+                    const running = !!children.find((c) => c.isStarted);
                     if (running)
-                        this._update({ status: 'aborting', message: 'Aborting' });
+                        this._update({ status: "aborting", message: "Aborting" });
                     this._abortChildren().catch(noOp);
                     return;
                 }
@@ -437,15 +427,17 @@
             if (!childrenLeft.size) {
                 delete this._childrenLeft;
                 if (failedChildren.length) {
-                    const isFailed = !!failedChildren.find(d => d.status === 'failed');
-                    const error = new Error('Aborted due to ' + (isFailed ? 'fail' : 'cancellation') +
-                        ' of child ' + (0, utils_js_1.plural)('task', !!failedChildren.length));
+                    const isFailed = !!failedChildren.find((d) => d.status === "failed");
+                    const error = new Error("Aborted due to " +
+                        (isFailed ? "fail" : "cancellation") +
+                        " of child " +
+                        (0, utils_js_1.plural)("task", !!failedChildren.length));
                     error.failedChildren = failedChildren;
                     this._failedChildren = failedChildren;
                     this._update({
-                        status: isFailed ? 'failed' : 'aborted',
+                        status: isFailed ? "failed" : "aborted",
                         error,
-                        message: error.message
+                        message: error.message,
                     });
                     return;
                 }
@@ -453,24 +445,21 @@
             this._pulse();
         };
         for (const c of children) {
-            c.prependOnceListener('wait-end', () => this._pulse());
-            c.prependOnceListener('finish', finishCallback);
-            c.prependListener('status-change', statusChangeCallback);
+            c.prependOnceListener("wait-end", () => this._pulse());
+            c.prependOnceListener("finish", finishCallback);
+            c.prependListener("status-change", statusChangeCallback);
         }
         this._pulse();
     }
     _pulse() {
         const ctx = this[taskContextKey];
-        if (this.isFinished ||
-            this._waitingFor ||
-            this.status === 'aborting' ||
-            ctx.executingTasks.has(this))
+        if (this.isFinished || this._waitingFor || this.status === "aborting" || ctx.executingTasks.has(this))
             return;
         const options = this.options;
         if (this._childrenLeft) {
             // Check if we can run multiple child tasks
             for (const c of this._childrenLeft) {
-                if ((c.isStarted && options.serial) || (c.status === 'running' && c.options.exclusive)) {
+                if ((c.isStarted && options.serial) || (c.status === "running" && c.options.exclusive)) {
                     c._pulse();
                     return;
                 }
@@ -482,7 +471,7 @@
                 if (c.isFinished)
                     continue;
                 hasExclusive = hasExclusive || !!c.options.exclusive;
-                hasRunning = hasRunning || c.status === 'running';
+                hasRunning = hasRunning || c.status === "running";
             }
             if (hasExclusive && hasRunning)
                 return;
@@ -498,44 +487,44 @@
                 if (c.options.exclusive && (ctx.executingTasks.size || ctx.executingTasks.size))
                     return;
                 c._start();
-                if (options.serial || (c.status === 'running' && c.options.exclusive))
+                if (options.serial || (c.status === "running" && c.options.exclusive))
                     return;
             }
         }
         if ((this._childrenLeft && this._childrenLeft.size) || ctx.executingTasks.size >= ctx.concurrency)
             return;
-        this._update({ status: 'running', message: 'Running' });
+        this._update({ status: "running", message: "Running" });
         ctx.executingTasks.add(this);
         const t = Date.now();
         const signal = this._abortController.signal;
         (async () => (this._executeFn || noOp)({
             task: this,
-            signal
+            signal,
         }))()
             .then((result) => {
             ctx.executingTasks.delete(this);
             this._executeDuration = Date.now() - t;
             this._update({
-                status: 'fulfilled',
-                message: 'Task completed',
-                result
+                status: "fulfilled",
+                message: "Task completed",
+                result,
             });
         })
-            .catch(error => {
+            .catch((error) => {
             ctx.executingTasks.delete(this);
             this._executeDuration = Date.now() - t;
-            if (error.code === 'ABORT_ERR') {
+            if (error.code === "ABORT_ERR") {
                 this._update({
-                    status: 'aborted',
+                    status: "aborted",
                     error,
-                    message: error instanceof Error ? error.message : '' + error
+                    message: error instanceof Error ? error.message : "" + error,
                 });
                 return;
             }
             this._update({
-                status: 'failed',
+                status: "failed",
                 error,
-                message: error instanceof Error ? error.message : '' + error
+                message: error instanceof Error ? error.message : "" + error,
             });
         });
     }
@@ -545,33 +534,33 @@
         const oldStarted = this.isStarted;
         if (prop.status && this._status !== prop.status) {
             this._status = prop.status;
-            keys.push('status');
+            keys.push("status");
         }
         if (prop.message && this._message !== prop.message) {
             this._message = prop.message;
-            keys.push('message');
+            keys.push("message");
         }
         if (prop.error && this._error !== prop.error) {
             this._error = prop.error;
-            keys.push('error');
+            keys.push("error");
         }
         if (prop.result && this._result !== prop.result) {
             this._result = prop.result;
-            keys.push('result');
+            keys.push("result");
         }
         if (prop.waitingFor) {
-            keys.push('waitingFor');
+            keys.push("waitingFor");
         }
         if (keys.length) {
-            if (keys.includes('status')) {
+            if (keys.includes("status")) {
                 if (!oldStarted)
-                    this.emitAsync('start', this).catch(noOp);
-                this.emitAsync('status-change', this).catch(noOp);
-                if (this._status === 'running')
-                    this.emitAsync('run', this).catch(noOp);
+                    this.emitAsync("start", this).catch(noOp);
+                this.emitAsync("status-change", this).catch(noOp);
+                if (this._status === "running")
+                    this.emitAsync("run", this).catch(noOp);
             }
-            this.emitAsync('update', this, keys).catch(noOp);
-            this.emitAsync('update-recursive', this, keys).catch(noOp);
+            this.emitAsync("update", this, keys).catch(noOp);
+            this.emitAsync("update-recursive", this, keys).catch(noOp);
             if (this.isFinished && !oldFinished) {
                 const ctx = this[taskContextKey];
                 if (this._abortTimer) {
@@ -580,8 +569,8 @@
                 }
                 delete this[taskContextKey];
                 if (this.error)
-                    this.emitAsync('error', this.error).catch(noOp);
-                this.emitAsync('finish', this).catch(noOp);
+                    this.emitAsync("error", this.error).catch(noOp);
+                this.emitAsync("finish", this).catch(noOp);
                 if (ctx)
                     ctx.triggerPulse();
             }
Index: node_modules/power-tasks/esm/utils.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export function plural(word, isPlural, pluralWord) {\r\n    if ((typeof isPlural === 'number' && isPlural > 1) || isPlural)\r\n        return pluralWord ? pluralWord : word + 's';\r\n    return word;\r\n}\r\nexport function delay(t) {\r\n    return new Promise(resolve => setTimeout(resolve, t).unref());\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/power-tasks/esm/utils.js b/node_modules/power-tasks/esm/utils.js
--- a/node_modules/power-tasks/esm/utils.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/power-tasks/esm/utils.js	(date 1753913035300)
@@ -1,8 +1,8 @@
 export function plural(word, isPlural, pluralWord) {
-    if ((typeof isPlural === 'number' && isPlural > 1) || isPlural)
-        return pluralWord ? pluralWord : word + 's';
+    if ((typeof isPlural === "number" && isPlural > 1) || isPlural)
+        return pluralWord ? pluralWord : word + "s";
     return word;
 }
 export function delay(t) {
-    return new Promise(resolve => setTimeout(resolve, t).unref());
+    return new Promise((resolve) => setTimeout(resolve, t).unref());
 }
Index: node_modules/power-tasks/esm/abort-error.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export class AbortError extends Error {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.code = 'ABORT_ERR';\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/power-tasks/esm/abort-error.js b/node_modules/power-tasks/esm/abort-error.js
--- a/node_modules/power-tasks/esm/abort-error.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/power-tasks/esm/abort-error.js	(date 1753913035286)
@@ -1,6 +1,6 @@
 export class AbortError extends Error {
     constructor() {
         super(...arguments);
-        this.code = 'ABORT_ERR';
+        this.code = "ABORT_ERR";
     }
 }
Index: node_modules/power-tasks/esm/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export * from './task.js';\r\nexport * from './task-queue.js';\r\nexport * from './abort-error.js';\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/power-tasks/esm/index.js b/node_modules/power-tasks/esm/index.js
--- a/node_modules/power-tasks/esm/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/power-tasks/esm/index.js	(date 1753913035293)
@@ -1,3 +1,3 @@
-export * from './task.js';
-export * from './task-queue.js';
-export * from './abort-error.js';
+export * from "./abort-error.js";
+export * from "./task.js";
+export * from "./task-queue.js";
Index: node_modules/power-tasks/esm/task-queue.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { AsyncEventEmitter } from 'strict-typed-events';\r\nimport DoublyLinked from 'doublylinked';\r\nimport { Task } from './task.js';\r\nexport class TaskQueue extends AsyncEventEmitter {\r\n    constructor(options) {\r\n        super();\r\n        this._queue = new DoublyLinked();\r\n        this._running = new Set();\r\n        this.maxQueue = options?.maxQueue;\r\n        this.concurrency = options?.concurrency;\r\n        this._paused = !!options?.paused;\r\n    }\r\n    get size() {\r\n        return this._queue.length + this._running.size;\r\n    }\r\n    get running() {\r\n        return this._running.size;\r\n    }\r\n    get queued() {\r\n        return this._queue.length;\r\n    }\r\n    get paused() {\r\n        return this._paused;\r\n    }\r\n    pause() {\r\n        this._paused = true;\r\n    }\r\n    resume() {\r\n        this._paused = false;\r\n        setImmediate(() => this._pulse());\r\n    }\r\n    clearQueue() {\r\n        this._queue.forEach(task => task.abort());\r\n        this._queue = new DoublyLinked();\r\n    }\r\n    abortAll() {\r\n        if (!this.size)\r\n            return;\r\n        this.clearQueue();\r\n        this._running.forEach(task => task.abort());\r\n    }\r\n    async wait() {\r\n        if (!this.size)\r\n            return Promise.resolve();\r\n        return new Promise(resolve => {\r\n            this.once('finish', resolve);\r\n        });\r\n    }\r\n    enqueuePrepend(task) {\r\n        return this._enqueue(task, true);\r\n    }\r\n    enqueue(task) {\r\n        return this._enqueue(task, false);\r\n    }\r\n    _enqueue(task, prepend) {\r\n        if (this.maxQueue && this.size >= this.maxQueue)\r\n            throw new Error(`Queue limit (${this.maxQueue}) exceeded`);\r\n        const taskInstance = task instanceof Task ? task : new Task(task);\r\n        Object.defineProperty(taskInstance, '_isManaged', {\r\n            configurable: false,\r\n            writable: false,\r\n            enumerable: false,\r\n            value: true\r\n        });\r\n        taskInstance.once('error', (...args) => this.emitAsync('error', ...args));\r\n        this.emit('enqueue', taskInstance);\r\n        if (prepend)\r\n            this._queue.unshift(taskInstance);\r\n        else\r\n            this._queue.push(taskInstance);\r\n        this._pulse();\r\n        return taskInstance;\r\n    }\r\n    _pulse() {\r\n        if (this.paused)\r\n            return;\r\n        while (!this.concurrency || this._running.size < this.concurrency) {\r\n            const task = this._queue.shift();\r\n            if (!task)\r\n                return;\r\n            this._running.add(task);\r\n            task.prependOnceListener('finish', () => {\r\n                this._running.delete(task);\r\n                if (!(this._running.size || this._queue.length))\r\n                    return this.emit('finish');\r\n                this._pulse();\r\n            });\r\n            task.start();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/power-tasks/esm/task-queue.js b/node_modules/power-tasks/esm/task-queue.js
--- a/node_modules/power-tasks/esm/task-queue.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/power-tasks/esm/task-queue.js	(date 1753913035295)
@@ -1,6 +1,6 @@
-import { AsyncEventEmitter } from 'strict-typed-events';
-import DoublyLinked from 'doublylinked';
-import { Task } from './task.js';
+import DoublyLinked from "doublylinked";
+import { AsyncEventEmitter } from "strict-typed-events";
+import { Task } from "./task.js";
 export class TaskQueue extends AsyncEventEmitter {
     constructor(options) {
         super();
@@ -30,20 +30,20 @@
         setImmediate(() => this._pulse());
     }
     clearQueue() {
-        this._queue.forEach(task => task.abort());
+        this._queue.forEach((task) => task.abort());
         this._queue = new DoublyLinked();
     }
     abortAll() {
         if (!this.size)
             return;
         this.clearQueue();
-        this._running.forEach(task => task.abort());
+        this._running.forEach((task) => task.abort());
     }
     async wait() {
         if (!this.size)
             return Promise.resolve();
-        return new Promise(resolve => {
-            this.once('finish', resolve);
+        return new Promise((resolve) => {
+            this.once("finish", resolve);
         });
     }
     enqueuePrepend(task) {
@@ -56,14 +56,14 @@
         if (this.maxQueue && this.size >= this.maxQueue)
             throw new Error(`Queue limit (${this.maxQueue}) exceeded`);
         const taskInstance = task instanceof Task ? task : new Task(task);
-        Object.defineProperty(taskInstance, '_isManaged', {
+        Object.defineProperty(taskInstance, "_isManaged", {
             configurable: false,
             writable: false,
             enumerable: false,
-            value: true
+            value: true,
         });
-        taskInstance.once('error', (...args) => this.emitAsync('error', ...args));
-        this.emit('enqueue', taskInstance);
+        taskInstance.once("error", (...args) => this.emitAsync("error", ...args));
+        this.emit("enqueue", taskInstance);
         if (prepend)
             this._queue.unshift(taskInstance);
         else
@@ -79,10 +79,10 @@
             if (!task)
                 return;
             this._running.add(task);
-            task.prependOnceListener('finish', () => {
+            task.prependOnceListener("finish", () => {
                 this._running.delete(task);
                 if (!(this._running.size || this._queue.length))
-                    return this.emit('finish');
+                    return this.emit("finish");
                 this._pulse();
             });
             task.start();
Index: node_modules/power-tasks/esm/task.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import * as os from 'os';\r\nimport { AsyncEventEmitter } from 'strict-typed-events';\r\nimport { plural } from './utils.js';\r\nconst osCPUs = os.cpus().length;\r\nclass TaskContext {\r\n    constructor() {\r\n        // allTasks = new Set<Task>();\r\n        this.executingTasks = new Set();\r\n        this.queue = new Set();\r\n    }\r\n}\r\nconst noOp = () => void (0);\r\nconst taskContextKey = Symbol.for('power-tasks.Task.context');\r\nlet idGen = 0;\r\nexport class Task extends AsyncEventEmitter {\r\n    constructor(arg0, options) {\r\n        super();\r\n        this._id = '';\r\n        this._status = 'idle';\r\n        this._abortController = new AbortController();\r\n        this.setMaxListeners(100);\r\n        options = options || {};\r\n        if (Array.isArray(arg0)) {\r\n            options.children = arg0;\r\n        }\r\n        else\r\n            this._executeFn = arg0;\r\n        this._options = { ...options };\r\n        this._id = this._options.id || '';\r\n        if (this._options.bail == null)\r\n            this._options.bail = true;\r\n        if (options.onStart)\r\n            this.on('start', options.onStart);\r\n        if (options.onFinish)\r\n            this.on('finish', options.onFinish);\r\n        if (options.onRun)\r\n            this.on('run', options.onRun);\r\n        if (options.onStatusChange)\r\n            this.on('status-change', options.onStatusChange);\r\n        if (options.onUpdate)\r\n            this.on('update', options.onUpdate);\r\n        if (options.onUpdateRecursive)\r\n            this.on('update-recursive', options.onUpdateRecursive);\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    get name() {\r\n        return this._options.name;\r\n    }\r\n    get children() {\r\n        return this._children;\r\n    }\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    get message() {\r\n        return this._message || '';\r\n    }\r\n    get status() {\r\n        return this._status;\r\n    }\r\n    get isStarted() {\r\n        return this.status !== 'idle' && !this.isFinished;\r\n    }\r\n    get isFinished() {\r\n        return this.status === 'fulfilled' || this.status === 'failed' ||\r\n            this.status === 'aborted';\r\n    }\r\n    get isFailed() {\r\n        return this.status === 'failed';\r\n    }\r\n    get executeDuration() {\r\n        return this._executeDuration;\r\n    }\r\n    get result() {\r\n        return this._result;\r\n    }\r\n    get error() {\r\n        return this._error;\r\n    }\r\n    get dependencies() {\r\n        return this._dependencies;\r\n    }\r\n    get failedChildren() {\r\n        return this._failedChildren;\r\n    }\r\n    get failedDependencies() {\r\n        return this._failedDependencies;\r\n    }\r\n    get needWaiting() {\r\n        if (this._waitingFor && this._waitingFor.size)\r\n            return true;\r\n        if (this._children) {\r\n            for (const c of this._children) {\r\n                if (c.needWaiting)\r\n                    return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    getWaitingTasks() {\r\n        if (!(this.status === 'waiting' && this._waitingFor && this._waitingFor.size))\r\n            return;\r\n        const out = Array.from(this._waitingFor);\r\n        if (this._children)\r\n            for (const c of this._children) {\r\n                const childTasks = c.getWaitingTasks();\r\n                if (childTasks) {\r\n                    childTasks.forEach(t => {\r\n                        if (!out.includes(t))\r\n                            out.push(t);\r\n                    });\r\n                }\r\n            }\r\n        return out;\r\n    }\r\n    abort() {\r\n        if (this.isFinished || this.status === 'aborting')\r\n            return this;\r\n        if (!this.isStarted) {\r\n            this._update({ status: 'aborted', message: 'aborted' });\r\n            return this;\r\n        }\r\n        const ctx = this[taskContextKey];\r\n        const timeout = this.options.abortTimeout || 30000;\r\n        this._update({ status: 'aborting', message: 'Aborting' });\r\n        if (timeout) {\r\n            this._abortTimer = setTimeout(() => {\r\n                delete this._abortTimer;\r\n                this._update({ status: 'aborted', message: 'aborted' });\r\n            }, timeout).unref();\r\n        }\r\n        this._abortChildren()\r\n            .catch(noOp)\r\n            .then(() => {\r\n            if (this.isFinished)\r\n                return;\r\n            if (ctx.executingTasks.has(this)) {\r\n                this._abortController.abort();\r\n                return;\r\n            }\r\n            this._update({ status: 'aborted', message: 'aborted' });\r\n        });\r\n        return this;\r\n    }\r\n    start() {\r\n        if (this.isStarted)\r\n            return this;\r\n        this._id = this._id || ('t' + (++idGen));\r\n        const ctx = this[taskContextKey] = new TaskContext();\r\n        ctx.concurrency = this.options.concurrency || osCPUs;\r\n        let pulseTimer;\r\n        ctx.triggerPulse = () => {\r\n            if (pulseTimer || this.isFinished)\r\n                return;\r\n            pulseTimer = setTimeout(() => {\r\n                pulseTimer = undefined;\r\n                this._pulse();\r\n            }, 1);\r\n        };\r\n        if (this.options.children) {\r\n            this._determineChildrenTree((err) => {\r\n                if (err) {\r\n                    this._update({\r\n                        status: 'failed',\r\n                        error: err,\r\n                        message: 'Unable to fetch child tasks. ' + (err.message || err)\r\n                    });\r\n                    return;\r\n                }\r\n                this._determineChildrenDependencies([]);\r\n                this._start();\r\n            });\r\n        }\r\n        else\r\n            this._start();\r\n        return this;\r\n    }\r\n    toPromise() {\r\n        return new Promise((resolve, reject) => {\r\n            if (this.isFinished) {\r\n                if (this.isFailed)\r\n                    reject(this.error);\r\n                else\r\n                    resolve(this.result);\r\n                return;\r\n            }\r\n            this.once('finish', () => {\r\n                if (this.isFailed)\r\n                    return reject(this.error);\r\n                resolve(this.result);\r\n            });\r\n            if (!this.isStarted && !this._isManaged)\r\n                this.start();\r\n        });\r\n    }\r\n    _determineChildrenTree(callback) {\r\n        const ctx = this[taskContextKey];\r\n        const options = this._options;\r\n        const handler = (err, value) => {\r\n            if (err)\r\n                return callback(err);\r\n            if (!value)\r\n                return callback();\r\n            if (typeof value === 'function') {\r\n                try {\r\n                    const x = value();\r\n                    handler(undefined, x);\r\n                }\r\n                catch (err) {\r\n                    handler(err);\r\n                }\r\n                return;\r\n            }\r\n            if (Array.isArray(value)) {\r\n                let idx = 1;\r\n                const children = value.reduce((a, v) => {\r\n                    // noinspection SuspiciousTypeOfGuard\r\n                    if (typeof v === 'function') {\r\n                        v = new Task(v, { concurrency: options.concurrency, bail: options.bail });\r\n                    }\r\n                    if (v instanceof Task) {\r\n                        v[taskContextKey] = ctx;\r\n                        v._id = v._id || (this._id + '-' + (idx++));\r\n                        const listeners = this.listeners('update-recursive');\r\n                        listeners.forEach(listener => v.on('update-recursive', listener));\r\n                        // ctx.allTasks.add(v);\r\n                        a.push(v);\r\n                    }\r\n                    return a;\r\n                }, []);\r\n                if (children && children.length) {\r\n                    this._children = children;\r\n                    let i = 0;\r\n                    const next = (err) => {\r\n                        if (err)\r\n                            return callback(err);\r\n                        if (i >= children.length)\r\n                            return callback();\r\n                        const c = children[i++];\r\n                        if (c.options.children)\r\n                            c._determineChildrenTree((err) => next(err));\r\n                        else\r\n                            next();\r\n                    };\r\n                    next();\r\n                }\r\n                else\r\n                    callback();\r\n                return;\r\n            }\r\n            if (value && typeof value.then === 'function') {\r\n                value\r\n                    .then(v => handler(undefined, v))\r\n                    .catch(err => handler(err));\r\n                return;\r\n            }\r\n            callback(new Error('Invalid value returned from children() method.'));\r\n        };\r\n        handler(undefined, this._options.children);\r\n    }\r\n    _determineChildrenDependencies(scope) {\r\n        if (!this._children)\r\n            return;\r\n        const detectCircular = (t, lookup, path = '') => {\r\n            if (!lookup._dependencies)\r\n                return;\r\n            path = path || (t.name || t.id);\r\n            path += ' > ' + (lookup.name || lookup.id);\r\n            if (lookup._dependencies.includes(t))\r\n                throw new Error(`Circular dependency detected. ${path + ' > ' + (t.name || t.id)}`);\r\n            for (const l1 of lookup._dependencies.values())\r\n                detectCircular(t, l1, path);\r\n        };\r\n        const subScope = [...scope, ...Array.from(this._children)];\r\n        for (const c of this._children.values()) {\r\n            c._determineChildrenDependencies(subScope);\r\n            if (!c.options.dependencies)\r\n                continue;\r\n            const dependencies = [];\r\n            const waitingFor = new Set();\r\n            for (const dep of c.options.dependencies) {\r\n                const dependentTask = subScope.find(x => typeof dep === 'string' ? x.name === dep : (x === dep));\r\n                if (!dependentTask || c === dependentTask)\r\n                    continue;\r\n                detectCircular(c, dependentTask);\r\n                if (dependentTask._dependencies?.includes(c))\r\n                    throw new Error(`Task \"${c.name}\" has circular dependency with ${dependentTask.name}.`);\r\n                dependencies.push(dependentTask);\r\n                if (!dependentTask.isFinished)\r\n                    waitingFor.add(dependentTask);\r\n            }\r\n            if (dependencies.length)\r\n                c._dependencies = dependencies;\r\n            if (waitingFor.size)\r\n                c._waitingFor = waitingFor;\r\n            c._captureDependencies();\r\n        }\r\n    }\r\n    _captureDependencies() {\r\n        if (!this._waitingFor)\r\n            return;\r\n        const failedDependencies = [];\r\n        const waitingFor = this._waitingFor;\r\n        const signal = this._abortController.signal;\r\n        const abortSignalCallback = () => clearWait();\r\n        signal.addEventListener('abort', abortSignalCallback, { once: true });\r\n        const handleDependentAborted = () => {\r\n            signal.removeEventListener('abort', abortSignalCallback);\r\n            this._abortChildren()\r\n                .then(() => {\r\n                const isFailed = !!failedDependencies.find(d => d.status === 'failed');\r\n                const error = new Error('Aborted due to ' + (isFailed ? 'fail' : 'cancellation') +\r\n                    ' of dependent ' + plural('task', !!failedDependencies.length));\r\n                error.failedDependencies = failedDependencies;\r\n                this._failedDependencies = failedDependencies;\r\n                this._update({\r\n                    status: isFailed ? 'failed' : 'aborted',\r\n                    message: error.message,\r\n                    error\r\n                });\r\n            })\r\n                .catch(noOp);\r\n        };\r\n        const clearWait = () => {\r\n            for (const t of waitingFor) {\r\n                t.removeListener('finish', finishCallback);\r\n            }\r\n            delete this._waitingFor;\r\n        };\r\n        const finishCallback = async (t) => {\r\n            if (this.isStarted && this.status !== 'waiting') {\r\n                clearWait();\r\n                return;\r\n            }\r\n            waitingFor.delete(t);\r\n            if (t.isFailed || t.status === 'aborted') {\r\n                failedDependencies.push(t);\r\n            }\r\n            // If all dependent tasks completed\r\n            if (!waitingFor.size) {\r\n                delete this._waitingFor;\r\n                signal.removeEventListener('abort', abortSignalCallback);\r\n                // If any of dependent tasks are failed\r\n                if (failedDependencies.length) {\r\n                    handleDependentAborted();\r\n                    return;\r\n                }\r\n                // If all dependent tasks completed successfully we continue to next step (startChildren)\r\n                if (this.isStarted)\r\n                    this._startChildren();\r\n                else\r\n                    await this.emitAsync('wait-end');\r\n            }\r\n        };\r\n        for (const t of waitingFor.values()) {\r\n            if (t.isFailed || t.status === 'aborted') {\r\n                waitingFor.delete(t);\r\n                failedDependencies.push(t);\r\n            }\r\n            else\r\n                t.prependOnceListener('finish', finishCallback);\r\n        }\r\n        if (!waitingFor.size)\r\n            handleDependentAborted();\r\n    }\r\n    _start() {\r\n        if (this.isStarted || this.isFinished)\r\n            return;\r\n        if (this._waitingFor) {\r\n            this._update({\r\n                status: 'waiting',\r\n                message: 'Waiting for dependencies',\r\n                waitingFor: true\r\n            });\r\n            return;\r\n        }\r\n        this._startChildren();\r\n    }\r\n    _startChildren() {\r\n        const children = this._children;\r\n        if (!children) {\r\n            this._pulse();\r\n            return;\r\n        }\r\n        const options = this.options;\r\n        const childrenLeft = this._childrenLeft = new Set(children);\r\n        const failedChildren = [];\r\n        const statusChangeCallback = async (t) => {\r\n            if (this.status === 'aborting')\r\n                return;\r\n            if (t.status === 'running')\r\n                this._update({ status: 'running', message: 'Running' });\r\n            if (t.status === 'waiting')\r\n                this._update({ status: 'waiting', message: 'Waiting' });\r\n        };\r\n        const finishCallback = async (t) => {\r\n            t.removeListener('status-change', statusChangeCallback);\r\n            childrenLeft.delete(t);\r\n            if (t.isFailed || t.status === 'aborted') {\r\n                failedChildren.push(t);\r\n                if (options.bail && childrenLeft.size) {\r\n                    const running = !!children.find(c => c.isStarted);\r\n                    if (running)\r\n                        this._update({ status: 'aborting', message: 'Aborting' });\r\n                    this._abortChildren().catch(noOp);\r\n                    return;\r\n                }\r\n            }\r\n            if (!childrenLeft.size) {\r\n                delete this._childrenLeft;\r\n                if (failedChildren.length) {\r\n                    const isFailed = !!failedChildren.find(d => d.status === 'failed');\r\n                    const error = new Error('Aborted due to ' + (isFailed ? 'fail' : 'cancellation') +\r\n                        ' of child ' + plural('task', !!failedChildren.length));\r\n                    error.failedChildren = failedChildren;\r\n                    this._failedChildren = failedChildren;\r\n                    this._update({\r\n                        status: isFailed ? 'failed' : 'aborted',\r\n                        error,\r\n                        message: error.message\r\n                    });\r\n                    return;\r\n                }\r\n            }\r\n            this._pulse();\r\n        };\r\n        for (const c of children) {\r\n            c.prependOnceListener('wait-end', () => this._pulse());\r\n            c.prependOnceListener('finish', finishCallback);\r\n            c.prependListener('status-change', statusChangeCallback);\r\n        }\r\n        this._pulse();\r\n    }\r\n    _pulse() {\r\n        const ctx = this[taskContextKey];\r\n        if (this.isFinished ||\r\n            this._waitingFor ||\r\n            this.status === 'aborting' ||\r\n            ctx.executingTasks.has(this))\r\n            return;\r\n        const options = this.options;\r\n        if (this._childrenLeft) {\r\n            // Check if we can run multiple child tasks\r\n            for (const c of this._childrenLeft) {\r\n                if ((c.isStarted && options.serial) || (c.status === 'running' && c.options.exclusive)) {\r\n                    c._pulse();\r\n                    return;\r\n                }\r\n            }\r\n            // Check waiting children\r\n            let hasExclusive = false;\r\n            let hasRunning = false;\r\n            for (const c of this._childrenLeft) {\r\n                if (c.isFinished)\r\n                    continue;\r\n                hasExclusive = hasExclusive || !!c.options.exclusive;\r\n                hasRunning = hasRunning || c.status === 'running';\r\n            }\r\n            if (hasExclusive && hasRunning)\r\n                return;\r\n            // start children\r\n            let k = ctx.concurrency - ctx.executingTasks.size;\r\n            for (const c of this._childrenLeft) {\r\n                if (c.isStarted) {\r\n                    c._pulse();\r\n                    continue;\r\n                }\r\n                if (k-- <= 0)\r\n                    return;\r\n                if (c.options.exclusive && (ctx.executingTasks.size || ctx.executingTasks.size))\r\n                    return;\r\n                c._start();\r\n                if (options.serial || (c.status === 'running' && c.options.exclusive))\r\n                    return;\r\n            }\r\n        }\r\n        if ((this._childrenLeft && this._childrenLeft.size) || ctx.executingTasks.size >= ctx.concurrency)\r\n            return;\r\n        this._update({ status: 'running', message: 'Running' });\r\n        ctx.executingTasks.add(this);\r\n        const t = Date.now();\r\n        const signal = this._abortController.signal;\r\n        (async () => (this._executeFn || noOp)({\r\n            task: this,\r\n            signal\r\n        }))()\r\n            .then((result) => {\r\n            ctx.executingTasks.delete(this);\r\n            this._executeDuration = Date.now() - t;\r\n            this._update({\r\n                status: 'fulfilled',\r\n                message: 'Task completed',\r\n                result\r\n            });\r\n        })\r\n            .catch(error => {\r\n            ctx.executingTasks.delete(this);\r\n            this._executeDuration = Date.now() - t;\r\n            if (error.code === 'ABORT_ERR') {\r\n                this._update({\r\n                    status: 'aborted',\r\n                    error,\r\n                    message: error instanceof Error ? error.message : '' + error\r\n                });\r\n                return;\r\n            }\r\n            this._update({\r\n                status: 'failed',\r\n                error,\r\n                message: error instanceof Error ? error.message : '' + error\r\n            });\r\n        });\r\n    }\r\n    _update(prop) {\r\n        const oldFinished = this.isFinished;\r\n        const keys = [];\r\n        const oldStarted = this.isStarted;\r\n        if (prop.status && this._status !== prop.status) {\r\n            this._status = prop.status;\r\n            keys.push('status');\r\n        }\r\n        if (prop.message && this._message !== prop.message) {\r\n            this._message = prop.message;\r\n            keys.push('message');\r\n        }\r\n        if (prop.error && this._error !== prop.error) {\r\n            this._error = prop.error;\r\n            keys.push('error');\r\n        }\r\n        if (prop.result && this._result !== prop.result) {\r\n            this._result = prop.result;\r\n            keys.push('result');\r\n        }\r\n        if (prop.waitingFor) {\r\n            keys.push('waitingFor');\r\n        }\r\n        if (keys.length) {\r\n            if (keys.includes('status')) {\r\n                if (!oldStarted)\r\n                    this.emitAsync('start', this).catch(noOp);\r\n                this.emitAsync('status-change', this).catch(noOp);\r\n                if (this._status === 'running')\r\n                    this.emitAsync('run', this).catch(noOp);\r\n            }\r\n            this.emitAsync('update', this, keys).catch(noOp);\r\n            this.emitAsync('update-recursive', this, keys).catch(noOp);\r\n            if (this.isFinished && !oldFinished) {\r\n                const ctx = this[taskContextKey];\r\n                if (this._abortTimer) {\r\n                    clearTimeout(this._abortTimer);\r\n                    delete this._abortTimer;\r\n                }\r\n                delete this[taskContextKey];\r\n                if (this.error)\r\n                    this.emitAsync('error', this.error).catch(noOp);\r\n                this.emitAsync('finish', this).catch(noOp);\r\n                if (ctx)\r\n                    ctx.triggerPulse();\r\n            }\r\n        }\r\n    }\r\n    async _abortChildren() {\r\n        const promises = [];\r\n        if (this._children) {\r\n            for (let i = this._children.length - 1; i >= 0; i--) {\r\n                const child = this._children[i];\r\n                if (!child.isFinished) {\r\n                    child.abort();\r\n                    promises.push(child.toPromise());\r\n                }\r\n            }\r\n        }\r\n        if (promises.length)\r\n            await Promise.all(promises);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/power-tasks/esm/task.js b/node_modules/power-tasks/esm/task.js
--- a/node_modules/power-tasks/esm/task.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/power-tasks/esm/task.js	(date 1753913035298)
@@ -1,6 +1,6 @@
-import * as os from 'os';
-import { AsyncEventEmitter } from 'strict-typed-events';
-import { plural } from './utils.js';
+import * as os from "os";
+import { AsyncEventEmitter } from "strict-typed-events";
+import { plural } from "./utils.js";
 const osCPUs = os.cpus().length;
 class TaskContext {
     constructor() {
@@ -9,14 +9,14 @@
         this.queue = new Set();
     }
 }
-const noOp = () => void (0);
-const taskContextKey = Symbol.for('power-tasks.Task.context');
+const noOp = () => undefined;
+const taskContextKey = Symbol.for("power-tasks.Task.context");
 let idGen = 0;
 export class Task extends AsyncEventEmitter {
     constructor(arg0, options) {
         super();
-        this._id = '';
-        this._status = 'idle';
+        this._id = "";
+        this._status = "idle";
         this._abortController = new AbortController();
         this.setMaxListeners(100);
         options = options || {};
@@ -26,21 +26,21 @@
         else
             this._executeFn = arg0;
         this._options = { ...options };
-        this._id = this._options.id || '';
+        this._id = this._options.id || "";
         if (this._options.bail == null)
             this._options.bail = true;
         if (options.onStart)
-            this.on('start', options.onStart);
+            this.on("start", options.onStart);
         if (options.onFinish)
-            this.on('finish', options.onFinish);
+            this.on("finish", options.onFinish);
         if (options.onRun)
-            this.on('run', options.onRun);
+            this.on("run", options.onRun);
         if (options.onStatusChange)
-            this.on('status-change', options.onStatusChange);
+            this.on("status-change", options.onStatusChange);
         if (options.onUpdate)
-            this.on('update', options.onUpdate);
+            this.on("update", options.onUpdate);
         if (options.onUpdateRecursive)
-            this.on('update-recursive', options.onUpdateRecursive);
+            this.on("update-recursive", options.onUpdateRecursive);
     }
     get id() {
         return this._id;
@@ -55,20 +55,19 @@
         return this._options;
     }
     get message() {
-        return this._message || '';
+        return this._message || "";
     }
     get status() {
         return this._status;
     }
     get isStarted() {
-        return this.status !== 'idle' && !this.isFinished;
+        return this.status !== "idle" && !this.isFinished;
     }
     get isFinished() {
-        return this.status === 'fulfilled' || this.status === 'failed' ||
-            this.status === 'aborted';
+        return this.status === "fulfilled" || this.status === "failed" || this.status === "aborted";
     }
     get isFailed() {
-        return this.status === 'failed';
+        return this.status === "failed";
     }
     get executeDuration() {
         return this._executeDuration;
@@ -100,35 +99,36 @@
         return false;
     }
     getWaitingTasks() {
-        if (!(this.status === 'waiting' && this._waitingFor && this._waitingFor.size))
+        if (!(this.status === "waiting" && this._waitingFor && this._waitingFor.size))
             return;
         const out = Array.from(this._waitingFor);
-        if (this._children)
+        if (this._children) {
             for (const c of this._children) {
                 const childTasks = c.getWaitingTasks();
                 if (childTasks) {
-                    childTasks.forEach(t => {
+                    childTasks.forEach((t) => {
                         if (!out.includes(t))
                             out.push(t);
                     });
                 }
             }
+        }
         return out;
     }
     abort() {
-        if (this.isFinished || this.status === 'aborting')
+        if (this.isFinished || this.status === "aborting")
             return this;
         if (!this.isStarted) {
-            this._update({ status: 'aborted', message: 'aborted' });
+            this._update({ status: "aborted", message: "aborted" });
             return this;
         }
         const ctx = this[taskContextKey];
         const timeout = this.options.abortTimeout || 30000;
-        this._update({ status: 'aborting', message: 'Aborting' });
+        this._update({ status: "aborting", message: "Aborting" });
         if (timeout) {
             this._abortTimer = setTimeout(() => {
                 delete this._abortTimer;
-                this._update({ status: 'aborted', message: 'aborted' });
+                this._update({ status: "aborted", message: "aborted" });
             }, timeout).unref();
         }
         this._abortChildren()
@@ -140,15 +140,16 @@
                 this._abortController.abort();
                 return;
             }
-            this._update({ status: 'aborted', message: 'aborted' });
-        });
+            this._update({ status: "aborted", message: "aborted" });
+        })
+            .catch(noOp);
         return this;
     }
     start() {
         if (this.isStarted)
             return this;
-        this._id = this._id || ('t' + (++idGen));
-        const ctx = this[taskContextKey] = new TaskContext();
+        this._id = this._id || "t" + ++idGen;
+        const ctx = (this[taskContextKey] = new TaskContext());
         ctx.concurrency = this.options.concurrency || osCPUs;
         let pulseTimer;
         ctx.triggerPulse = () => {
@@ -163,9 +164,9 @@
             this._determineChildrenTree((err) => {
                 if (err) {
                     this._update({
-                        status: 'failed',
+                        status: "failed",
                         error: err,
-                        message: 'Unable to fetch child tasks. ' + (err.message || err)
+                        message: "Unable to fetch child tasks. " + (err.message || err),
                     });
                     return;
                 }
@@ -186,7 +187,7 @@
                     resolve(this.result);
                 return;
             }
-            this.once('finish', () => {
+            this.once("finish", () => {
                 if (this.isFailed)
                     return reject(this.error);
                 resolve(this.result);
@@ -203,13 +204,13 @@
                 return callback(err);
             if (!value)
                 return callback();
-            if (typeof value === 'function') {
+            if (typeof value === "function") {
                 try {
                     const x = value();
                     handler(undefined, x);
                 }
-                catch (err) {
-                    handler(err);
+                catch (err2) {
+                    handler(err2);
                 }
                 return;
             }
@@ -217,15 +218,14 @@
                 let idx = 1;
                 const children = value.reduce((a, v) => {
                     // noinspection SuspiciousTypeOfGuard
-                    if (typeof v === 'function') {
+                    if (typeof v === "function") {
                         v = new Task(v, { concurrency: options.concurrency, bail: options.bail });
                     }
                     if (v instanceof Task) {
                         v[taskContextKey] = ctx;
-                        v._id = v._id || (this._id + '-' + (idx++));
-                        const listeners = this.listeners('update-recursive');
-                        listeners.forEach(listener => v.on('update-recursive', listener));
-                        // ctx.allTasks.add(v);
+                        v._id = v._id || this._id + "-" + idx++;
+                        const listeners = this.listeners("update-recursive");
+                        listeners.forEach((listener) => v.on("update-recursive", listener));
                         a.push(v);
                     }
                     return a;
@@ -233,14 +233,14 @@
                 if (children && children.length) {
                     this._children = children;
                     let i = 0;
-                    const next = (err) => {
-                        if (err)
-                            return callback(err);
+                    const next = (err2) => {
+                        if (err2)
+                            return callback(err2);
                         if (i >= children.length)
                             return callback();
                         const c = children[i++];
                         if (c.options.children)
-                            c._determineChildrenTree((err) => next(err));
+                            c._determineChildrenTree((err3) => next(err3));
                         else
                             next();
                     };
@@ -250,28 +250,40 @@
                     callback();
                 return;
             }
-            if (value && typeof value.then === 'function') {
-                value
-                    .then(v => handler(undefined, v))
-                    .catch(err => handler(err));
+            if (value && typeof value.then === "function") {
+                value.then((v) => handler(undefined, v)).catch((e) => handler(e));
                 return;
             }
-            callback(new Error('Invalid value returned from children() method.'));
+            callback(new Error("Invalid value returned from children() method."));
         };
         handler(undefined, this._options.children);
     }
     _determineChildrenDependencies(scope) {
         if (!this._children)
             return;
-        const detectCircular = (t, lookup, path = '') => {
-            if (!lookup._dependencies)
-                return;
-            path = path || (t.name || t.id);
-            path += ' > ' + (lookup.name || lookup.id);
-            if (lookup._dependencies.includes(t))
-                throw new Error(`Circular dependency detected. ${path + ' > ' + (t.name || t.id)}`);
-            for (const l1 of lookup._dependencies.values())
-                detectCircular(t, l1, path);
+        const detectCircular = (t, dependencies, path = "", list) => {
+            path = path || t.name || t.id;
+            list = list || new Set();
+            for (const l1 of dependencies.values()) {
+                if (l1 === t)
+                    throw new Error(`Circular dependency detected. ${path}`);
+                if (list.has(l1))
+                    continue;
+                list.add(l1);
+                if (l1._dependencies)
+                    detectCircular(t, l1._dependencies, path + " > " + (l1.name || l1.id), list);
+                if (l1.children) {
+                    for (const c of l1.children) {
+                        if (c === t)
+                            throw new Error(`Circular dependency detected. ${path}`);
+                        if (list.has(c))
+                            continue;
+                        list.add(c);
+                        if (c._dependencies)
+                            detectCircular(t, c._dependencies, path, list);
+                    }
+                }
+            }
         };
         const subScope = [...scope, ...Array.from(this._children)];
         for (const c of this._children.values()) {
@@ -281,16 +293,14 @@
             const dependencies = [];
             const waitingFor = new Set();
             for (const dep of c.options.dependencies) {
-                const dependentTask = subScope.find(x => typeof dep === 'string' ? x.name === dep : (x === dep));
+                const dependentTask = subScope.find((x) => (typeof dep === "string" ? x.name === dep : x === dep));
                 if (!dependentTask || c === dependentTask)
                     continue;
-                detectCircular(c, dependentTask);
-                if (dependentTask._dependencies?.includes(c))
-                    throw new Error(`Task "${c.name}" has circular dependency with ${dependentTask.name}.`);
                 dependencies.push(dependentTask);
                 if (!dependentTask.isFinished)
                     waitingFor.add(dependentTask);
             }
+            detectCircular(c, dependencies);
             if (dependencies.length)
                 c._dependencies = dependencies;
             if (waitingFor.size)
@@ -305,43 +315,45 @@
         const waitingFor = this._waitingFor;
         const signal = this._abortController.signal;
         const abortSignalCallback = () => clearWait();
-        signal.addEventListener('abort', abortSignalCallback, { once: true });
+        signal.addEventListener("abort", abortSignalCallback, { once: true });
         const handleDependentAborted = () => {
-            signal.removeEventListener('abort', abortSignalCallback);
+            signal.removeEventListener("abort", abortSignalCallback);
             this._abortChildren()
                 .then(() => {
-                const isFailed = !!failedDependencies.find(d => d.status === 'failed');
-                const error = new Error('Aborted due to ' + (isFailed ? 'fail' : 'cancellation') +
-                    ' of dependent ' + plural('task', !!failedDependencies.length));
+                const isFailed = !!failedDependencies.find((d) => d.status === "failed");
+                const error = new Error("Aborted due to " +
+                    (isFailed ? "fail" : "cancellation") +
+                    " of dependent " +
+                    plural("task", !!failedDependencies.length));
                 error.failedDependencies = failedDependencies;
                 this._failedDependencies = failedDependencies;
                 this._update({
-                    status: isFailed ? 'failed' : 'aborted',
+                    status: isFailed ? "failed" : "aborted",
                     message: error.message,
-                    error
+                    error,
                 });
             })
                 .catch(noOp);
         };
         const clearWait = () => {
             for (const t of waitingFor) {
-                t.removeListener('finish', finishCallback);
+                t.removeListener("finish", finishCallback);
             }
             delete this._waitingFor;
         };
         const finishCallback = async (t) => {
-            if (this.isStarted && this.status !== 'waiting') {
+            if (this.isStarted && this.status !== "waiting") {
                 clearWait();
                 return;
             }
             waitingFor.delete(t);
-            if (t.isFailed || t.status === 'aborted') {
+            if (t.isFailed || t.status === "aborted") {
                 failedDependencies.push(t);
             }
             // If all dependent tasks completed
             if (!waitingFor.size) {
                 delete this._waitingFor;
-                signal.removeEventListener('abort', abortSignalCallback);
+                signal.removeEventListener("abort", abortSignalCallback);
                 // If any of dependent tasks are failed
                 if (failedDependencies.length) {
                     handleDependentAborted();
@@ -351,16 +363,16 @@
                 if (this.isStarted)
                     this._startChildren();
                 else
-                    await this.emitAsync('wait-end');
+                    await this.emitAsync("wait-end");
             }
         };
         for (const t of waitingFor.values()) {
-            if (t.isFailed || t.status === 'aborted') {
+            if (t.isFailed || t.status === "aborted") {
                 waitingFor.delete(t);
                 failedDependencies.push(t);
             }
             else
-                t.prependOnceListener('finish', finishCallback);
+                t.prependOnceListener("finish", finishCallback);
         }
         if (!waitingFor.size)
             handleDependentAborted();
@@ -370,9 +382,9 @@
             return;
         if (this._waitingFor) {
             this._update({
-                status: 'waiting',
-                message: 'Waiting for dependencies',
-                waitingFor: true
+                status: "waiting",
+                message: "Waiting for dependencies",
+                waitingFor: true,
             });
             return;
         }
@@ -385,25 +397,25 @@
             return;
         }
         const options = this.options;
-        const childrenLeft = this._childrenLeft = new Set(children);
+        const childrenLeft = (this._childrenLeft = new Set(children));
         const failedChildren = [];
         const statusChangeCallback = async (t) => {
-            if (this.status === 'aborting')
+            if (this.status === "aborting")
                 return;
-            if (t.status === 'running')
-                this._update({ status: 'running', message: 'Running' });
-            if (t.status === 'waiting')
-                this._update({ status: 'waiting', message: 'Waiting' });
+            if (t.status === "running")
+                this._update({ status: "running", message: "Running" });
+            if (t.status === "waiting")
+                this._update({ status: "waiting", message: "Waiting" });
         };
         const finishCallback = async (t) => {
-            t.removeListener('status-change', statusChangeCallback);
+            t.removeListener("status-change", statusChangeCallback);
             childrenLeft.delete(t);
-            if (t.isFailed || t.status === 'aborted') {
+            if (t.isFailed || t.status === "aborted") {
                 failedChildren.push(t);
                 if (options.bail && childrenLeft.size) {
-                    const running = !!children.find(c => c.isStarted);
+                    const running = !!children.find((c) => c.isStarted);
                     if (running)
-                        this._update({ status: 'aborting', message: 'Aborting' });
+                        this._update({ status: "aborting", message: "Aborting" });
                     this._abortChildren().catch(noOp);
                     return;
                 }
@@ -411,15 +423,17 @@
             if (!childrenLeft.size) {
                 delete this._childrenLeft;
                 if (failedChildren.length) {
-                    const isFailed = !!failedChildren.find(d => d.status === 'failed');
-                    const error = new Error('Aborted due to ' + (isFailed ? 'fail' : 'cancellation') +
-                        ' of child ' + plural('task', !!failedChildren.length));
+                    const isFailed = !!failedChildren.find((d) => d.status === "failed");
+                    const error = new Error("Aborted due to " +
+                        (isFailed ? "fail" : "cancellation") +
+                        " of child " +
+                        plural("task", !!failedChildren.length));
                     error.failedChildren = failedChildren;
                     this._failedChildren = failedChildren;
                     this._update({
-                        status: isFailed ? 'failed' : 'aborted',
+                        status: isFailed ? "failed" : "aborted",
                         error,
-                        message: error.message
+                        message: error.message,
                     });
                     return;
                 }
@@ -427,24 +441,21 @@
             this._pulse();
         };
         for (const c of children) {
-            c.prependOnceListener('wait-end', () => this._pulse());
-            c.prependOnceListener('finish', finishCallback);
-            c.prependListener('status-change', statusChangeCallback);
+            c.prependOnceListener("wait-end", () => this._pulse());
+            c.prependOnceListener("finish", finishCallback);
+            c.prependListener("status-change", statusChangeCallback);
         }
         this._pulse();
     }
     _pulse() {
         const ctx = this[taskContextKey];
-        if (this.isFinished ||
-            this._waitingFor ||
-            this.status === 'aborting' ||
-            ctx.executingTasks.has(this))
+        if (this.isFinished || this._waitingFor || this.status === "aborting" || ctx.executingTasks.has(this))
             return;
         const options = this.options;
         if (this._childrenLeft) {
             // Check if we can run multiple child tasks
             for (const c of this._childrenLeft) {
-                if ((c.isStarted && options.serial) || (c.status === 'running' && c.options.exclusive)) {
+                if ((c.isStarted && options.serial) || (c.status === "running" && c.options.exclusive)) {
                     c._pulse();
                     return;
                 }
@@ -456,7 +467,7 @@
                 if (c.isFinished)
                     continue;
                 hasExclusive = hasExclusive || !!c.options.exclusive;
-                hasRunning = hasRunning || c.status === 'running';
+                hasRunning = hasRunning || c.status === "running";
             }
             if (hasExclusive && hasRunning)
                 return;
@@ -472,44 +483,44 @@
                 if (c.options.exclusive && (ctx.executingTasks.size || ctx.executingTasks.size))
                     return;
                 c._start();
-                if (options.serial || (c.status === 'running' && c.options.exclusive))
+                if (options.serial || (c.status === "running" && c.options.exclusive))
                     return;
             }
         }
         if ((this._childrenLeft && this._childrenLeft.size) || ctx.executingTasks.size >= ctx.concurrency)
             return;
-        this._update({ status: 'running', message: 'Running' });
+        this._update({ status: "running", message: "Running" });
         ctx.executingTasks.add(this);
         const t = Date.now();
         const signal = this._abortController.signal;
         (async () => (this._executeFn || noOp)({
             task: this,
-            signal
+            signal,
         }))()
             .then((result) => {
             ctx.executingTasks.delete(this);
             this._executeDuration = Date.now() - t;
             this._update({
-                status: 'fulfilled',
-                message: 'Task completed',
-                result
+                status: "fulfilled",
+                message: "Task completed",
+                result,
             });
         })
-            .catch(error => {
+            .catch((error) => {
             ctx.executingTasks.delete(this);
             this._executeDuration = Date.now() - t;
-            if (error.code === 'ABORT_ERR') {
+            if (error.code === "ABORT_ERR") {
                 this._update({
-                    status: 'aborted',
+                    status: "aborted",
                     error,
-                    message: error instanceof Error ? error.message : '' + error
+                    message: error instanceof Error ? error.message : "" + error,
                 });
                 return;
             }
             this._update({
-                status: 'failed',
+                status: "failed",
                 error,
-                message: error instanceof Error ? error.message : '' + error
+                message: error instanceof Error ? error.message : "" + error,
             });
         });
     }
@@ -519,33 +530,33 @@
         const oldStarted = this.isStarted;
         if (prop.status && this._status !== prop.status) {
             this._status = prop.status;
-            keys.push('status');
+            keys.push("status");
         }
         if (prop.message && this._message !== prop.message) {
             this._message = prop.message;
-            keys.push('message');
+            keys.push("message");
         }
         if (prop.error && this._error !== prop.error) {
             this._error = prop.error;
-            keys.push('error');
+            keys.push("error");
         }
         if (prop.result && this._result !== prop.result) {
             this._result = prop.result;
-            keys.push('result');
+            keys.push("result");
         }
         if (prop.waitingFor) {
-            keys.push('waitingFor');
+            keys.push("waitingFor");
         }
         if (keys.length) {
-            if (keys.includes('status')) {
+            if (keys.includes("status")) {
                 if (!oldStarted)
-                    this.emitAsync('start', this).catch(noOp);
-                this.emitAsync('status-change', this).catch(noOp);
-                if (this._status === 'running')
-                    this.emitAsync('run', this).catch(noOp);
+                    this.emitAsync("start", this).catch(noOp);
+                this.emitAsync("status-change", this).catch(noOp);
+                if (this._status === "running")
+                    this.emitAsync("run", this).catch(noOp);
             }
-            this.emitAsync('update', this, keys).catch(noOp);
-            this.emitAsync('update-recursive', this, keys).catch(noOp);
+            this.emitAsync("update", this, keys).catch(noOp);
+            this.emitAsync("update-recursive", this, keys).catch(noOp);
             if (this.isFinished && !oldFinished) {
                 const ctx = this[taskContextKey];
                 if (this._abortTimer) {
@@ -554,8 +565,8 @@
                 }
                 delete this[taskContextKey];
                 if (this.error)
-                    this.emitAsync('error', this.error).catch(noOp);
-                this.emitAsync('finish', this).catch(noOp);
+                    this.emitAsync("error", this.error).catch(noOp);
+                this.emitAsync("finish", this).catch(noOp);
                 if (ctx)
                     ctx.triggerPulse();
             }
Index: node_modules/cookie/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"cookie\",\r\n  \"description\": \"HTTP server cookie parsing and serialization\",\r\n  \"version\": \"0.4.1\",\r\n  \"author\": \"Roman Shtylman <shtylman@gmail.com>\",\r\n  \"contributors\": [\r\n    \"Douglas Christopher Wilson <doug@somethingdoug.com>\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"keywords\": [\r\n    \"cookie\",\r\n    \"cookies\"\r\n  ],\r\n  \"repository\": \"jshttp/cookie\",\r\n  \"devDependencies\": {\r\n    \"beautify-benchmark\": \"0.2.4\",\r\n    \"benchmark\": \"2.1.4\",\r\n    \"eslint\": \"6.8.0\",\r\n    \"eslint-plugin-markdown\": \"1.0.2\",\r\n    \"mocha\": \"7.1.1\",\r\n    \"nyc\": \"15.0.1\"\r\n  },\r\n  \"files\": [\r\n    \"HISTORY.md\",\r\n    \"LICENSE\",\r\n    \"README.md\",\r\n    \"index.js\"\r\n  ],\r\n  \"engines\": {\r\n    \"node\": \">= 0.6\"\r\n  },\r\n  \"scripts\": {\r\n    \"bench\": \"node benchmark/index.js\",\r\n    \"lint\": \"eslint --plugin markdown --ext js,md .\",\r\n    \"test\": \"mocha --reporter spec --bail --check-leaks --ui qunit test/\",\r\n    \"test-ci\": \"nyc --reporter=text npm test\",\r\n    \"test-cov\": \"nyc --reporter=html --reporter=text npm test\",\r\n    \"version\": \"node scripts/version-history.js && git add HISTORY.md\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/cookie/package.json b/node_modules/cookie/package.json
--- a/node_modules/cookie/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/cookie/package.json	(date 1753913035763)
@@ -1,7 +1,7 @@
 {
   "name": "cookie",
   "description": "HTTP server cookie parsing and serialization",
-  "version": "0.4.1",
+  "version": "0.7.2",
   "author": "Roman Shtylman <shtylman@gmail.com>",
   "contributors": [
     "Douglas Christopher Wilson <doug@somethingdoug.com>"
@@ -15,26 +15,30 @@
   "devDependencies": {
     "beautify-benchmark": "0.2.4",
     "benchmark": "2.1.4",
-    "eslint": "6.8.0",
-    "eslint-plugin-markdown": "1.0.2",
-    "mocha": "7.1.1",
-    "nyc": "15.0.1"
+    "eslint": "8.53.0",
+    "eslint-plugin-markdown": "3.0.1",
+    "mocha": "10.2.0",
+    "nyc": "15.1.0",
+    "safe-buffer": "5.2.1",
+    "top-sites": "1.1.194"
   },
   "files": [
     "HISTORY.md",
     "LICENSE",
     "README.md",
+    "SECURITY.md",
     "index.js"
   ],
+  "main": "index.js",
   "engines": {
     "node": ">= 0.6"
   },
   "scripts": {
     "bench": "node benchmark/index.js",
-    "lint": "eslint --plugin markdown --ext js,md .",
-    "test": "mocha --reporter spec --bail --check-leaks --ui qunit test/",
-    "test-ci": "nyc --reporter=text npm test",
+    "lint": "eslint .",
+    "test": "mocha --reporter spec --bail --check-leaks test/",
+    "test-ci": "nyc --reporter=lcov --reporter=text npm test",
     "test-cov": "nyc --reporter=html --reporter=text npm test",
-    "version": "node scripts/version-history.js && git add HISTORY.md"
+    "update-bench": "node scripts/update-benchmark.js"
   }
 }
Index: node_modules/cookie/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># cookie\r\n\r\n[![NPM Version][npm-version-image]][npm-url]\r\n[![NPM Downloads][npm-downloads-image]][npm-url]\r\n[![Node.js Version][node-version-image]][node-version-url]\r\n[![Build Status][travis-image]][travis-url]\r\n[![Test Coverage][coveralls-image]][coveralls-url]\r\n\r\nBasic HTTP cookie parser and serializer for HTTP servers.\r\n\r\n## Installation\r\n\r\nThis is a [Node.js](https://nodejs.org/en/) module available through the\r\n[npm registry](https://www.npmjs.com/). Installation is done using the\r\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\r\n\r\n```sh\r\n$ npm install cookie\r\n```\r\n\r\n## API\r\n\r\n```js\r\nvar cookie = require('cookie');\r\n```\r\n\r\n### cookie.parse(str, options)\r\n\r\nParse an HTTP `Cookie` header string and returning an object of all cookie name-value pairs.\r\nThe `str` argument is the string representing a `Cookie` header value and `options` is an\r\noptional object containing additional parsing options.\r\n\r\n```js\r\nvar cookies = cookie.parse('foo=bar; equation=E%3Dmc%5E2');\r\n// { foo: 'bar', equation: 'E=mc^2' }\r\n```\r\n\r\n#### Options\r\n\r\n`cookie.parse` accepts these properties in the options object.\r\n\r\n##### decode\r\n\r\nSpecifies a function that will be used to decode a cookie's value. Since the value of a cookie\r\nhas a limited character set (and must be a simple string), this function can be used to decode\r\na previously-encoded cookie value into a JavaScript string or other object.\r\n\r\nThe default function is the global `decodeURIComponent`, which will decode any URL-encoded\r\nsequences into their byte representations.\r\n\r\n**note** if an error is thrown from this function, the original, non-decoded cookie value will\r\nbe returned as the cookie's value.\r\n\r\n### cookie.serialize(name, value, options)\r\n\r\nSerialize a cookie name-value pair into a `Set-Cookie` header string. The `name` argument is the\r\nname for the cookie, the `value` argument is the value to set the cookie to, and the `options`\r\nargument is an optional object containing additional serialization options.\r\n\r\n```js\r\nvar setCookie = cookie.serialize('foo', 'bar');\r\n// foo=bar\r\n```\r\n\r\n#### Options\r\n\r\n`cookie.serialize` accepts these properties in the options object.\r\n\r\n##### domain\r\n\r\nSpecifies the value for the [`Domain` `Set-Cookie` attribute][rfc-6265-5.2.3]. By default, no\r\ndomain is set, and most clients will consider the cookie to apply to only the current domain.\r\n\r\n##### encode\r\n\r\nSpecifies a function that will be used to encode a cookie's value. Since value of a cookie\r\nhas a limited character set (and must be a simple string), this function can be used to encode\r\na value into a string suited for a cookie's value.\r\n\r\nThe default function is the global `encodeURIComponent`, which will encode a JavaScript string\r\ninto UTF-8 byte sequences and then URL-encode any that fall outside of the cookie range.\r\n\r\n##### expires\r\n\r\nSpecifies the `Date` object to be the value for the [`Expires` `Set-Cookie` attribute][rfc-6265-5.2.1].\r\nBy default, no expiration is set, and most clients will consider this a \"non-persistent cookie\" and\r\nwill delete it on a condition like exiting a web browser application.\r\n\r\n**note** the [cookie storage model specification][rfc-6265-5.3] states that if both `expires` and\r\n`maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\r\nso if both are set, they should point to the same date and time.\r\n\r\n##### httpOnly\r\n\r\nSpecifies the `boolean` value for the [`HttpOnly` `Set-Cookie` attribute][rfc-6265-5.2.6]. When truthy,\r\nthe `HttpOnly` attribute is set, otherwise it is not. By default, the `HttpOnly` attribute is not set.\r\n\r\n**note** be careful when setting this to `true`, as compliant clients will not allow client-side\r\nJavaScript to see the cookie in `document.cookie`.\r\n\r\n##### maxAge\r\n\r\nSpecifies the `number` (in seconds) to be the value for the [`Max-Age` `Set-Cookie` attribute][rfc-6265-5.2.2].\r\nThe given number will be converted to an integer by rounding down. By default, no maximum age is set.\r\n\r\n**note** the [cookie storage model specification][rfc-6265-5.3] states that if both `expires` and\r\n`maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,\r\nso if both are set, they should point to the same date and time.\r\n\r\n##### path\r\n\r\nSpecifies the value for the [`Path` `Set-Cookie` attribute][rfc-6265-5.2.4]. By default, the path\r\nis considered the [\"default path\"][rfc-6265-5.1.4].\r\n\r\n##### sameSite\r\n\r\nSpecifies the `boolean` or `string` to be the value for the [`SameSite` `Set-Cookie` attribute][rfc-6265bis-03-4.1.2.7].\r\n\r\n  - `true` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\r\n  - `false` will not set the `SameSite` attribute.\r\n  - `'lax'` will set the `SameSite` attribute to `Lax` for lax same site enforcement.\r\n  - `'none'` will set the `SameSite` attribute to `None` for an explicit cross-site cookie.\r\n  - `'strict'` will set the `SameSite` attribute to `Strict` for strict same site enforcement.\r\n\r\nMore information about the different enforcement levels can be found in\r\n[the specification][rfc-6265bis-03-4.1.2.7].\r\n\r\n**note** This is an attribute that has not yet been fully standardized, and may change in the future.\r\nThis also means many clients may ignore this attribute until they understand it.\r\n\r\n##### secure\r\n\r\nSpecifies the `boolean` value for the [`Secure` `Set-Cookie` attribute][rfc-6265-5.2.5]. When truthy,\r\nthe `Secure` attribute is set, otherwise it is not. By default, the `Secure` attribute is not set.\r\n\r\n**note** be careful when setting this to `true`, as compliant clients will not send the cookie back to\r\nthe server in the future if the browser does not have an HTTPS connection.\r\n\r\n## Example\r\n\r\nThe following example uses this module in conjunction with the Node.js core HTTP server\r\nto prompt a user for their name and display it back on future visits.\r\n\r\n```js\r\nvar cookie = require('cookie');\r\nvar escapeHtml = require('escape-html');\r\nvar http = require('http');\r\nvar url = require('url');\r\n\r\nfunction onRequest(req, res) {\r\n  // Parse the query string\r\n  var query = url.parse(req.url, true, true).query;\r\n\r\n  if (query && query.name) {\r\n    // Set a new cookie with the name\r\n    res.setHeader('Set-Cookie', cookie.serialize('name', String(query.name), {\r\n      httpOnly: true,\r\n      maxAge: 60 * 60 * 24 * 7 // 1 week\r\n    }));\r\n\r\n    // Redirect back after setting cookie\r\n    res.statusCode = 302;\r\n    res.setHeader('Location', req.headers.referer || '/');\r\n    res.end();\r\n    return;\r\n  }\r\n\r\n  // Parse the cookies on the request\r\n  var cookies = cookie.parse(req.headers.cookie || '');\r\n\r\n  // Get the visitor name set in the cookie\r\n  var name = cookies.name;\r\n\r\n  res.setHeader('Content-Type', 'text/html; charset=UTF-8');\r\n\r\n  if (name) {\r\n    res.write('<p>Welcome back, <b>' + escapeHtml(name) + '</b>!</p>');\r\n  } else {\r\n    res.write('<p>Hello, new visitor!</p>');\r\n  }\r\n\r\n  res.write('<form method=\"GET\">');\r\n  res.write('<input placeholder=\"enter your name\" name=\"name\"> <input type=\"submit\" value=\"Set Name\">');\r\n  res.end('</form>');\r\n}\r\n\r\nhttp.createServer(onRequest).listen(3000);\r\n```\r\n\r\n## Testing\r\n\r\n```sh\r\n$ npm test\r\n```\r\n\r\n## Benchmark\r\n\r\n```\r\n$ npm run bench\r\n\r\n> cookie@0.3.1 bench cookie\r\n> node benchmark/index.js\r\n\r\n  http_parser@2.8.0\r\n  node@6.14.2\r\n  v8@5.1.281.111\r\n  uv@1.16.1\r\n  zlib@1.2.11\r\n  ares@1.10.1-DEV\r\n  icu@58.2\r\n  modules@48\r\n  napi@3\r\n  openssl@1.0.2o\r\n\r\n> node benchmark/parse.js\r\n\r\n  cookie.parse\r\n\r\n  6 tests completed.\r\n\r\n  simple      x 1,200,691 ops/sec ±1.12% (189 runs sampled)\r\n  decode      x 1,012,994 ops/sec ±0.97% (186 runs sampled)\r\n  unquote     x 1,074,174 ops/sec ±2.43% (186 runs sampled)\r\n  duplicates  x   438,424 ops/sec ±2.17% (184 runs sampled)\r\n  10 cookies  x   147,154 ops/sec ±1.01% (186 runs sampled)\r\n  100 cookies x    14,274 ops/sec ±1.07% (187 runs sampled)\r\n```\r\n\r\n## References\r\n\r\n- [RFC 6265: HTTP State Management Mechanism][rfc-6265]\r\n- [Same-site Cookies][rfc-6265bis-03-4.1.2.7]\r\n\r\n[rfc-6265bis-03-4.1.2.7]: https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-4.1.2.7\r\n[rfc-6265]: https://tools.ietf.org/html/rfc6265\r\n[rfc-6265-5.1.4]: https://tools.ietf.org/html/rfc6265#section-5.1.4\r\n[rfc-6265-5.2.1]: https://tools.ietf.org/html/rfc6265#section-5.2.1\r\n[rfc-6265-5.2.2]: https://tools.ietf.org/html/rfc6265#section-5.2.2\r\n[rfc-6265-5.2.3]: https://tools.ietf.org/html/rfc6265#section-5.2.3\r\n[rfc-6265-5.2.4]: https://tools.ietf.org/html/rfc6265#section-5.2.4\r\n[rfc-6265-5.2.5]: https://tools.ietf.org/html/rfc6265#section-5.2.5\r\n[rfc-6265-5.2.6]: https://tools.ietf.org/html/rfc6265#section-5.2.6\r\n[rfc-6265-5.3]: https://tools.ietf.org/html/rfc6265#section-5.3\r\n\r\n## License\r\n\r\n[MIT](LICENSE)\r\n\r\n[coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/cookie/master\r\n[coveralls-url]: https://coveralls.io/r/jshttp/cookie?branch=master\r\n[node-version-image]: https://badgen.net/npm/node/cookie\r\n[node-version-url]: https://nodejs.org/en/download\r\n[npm-downloads-image]: https://badgen.net/npm/dm/cookie\r\n[npm-url]: https://npmjs.org/package/cookie\r\n[npm-version-image]: https://badgen.net/npm/v/cookie\r\n[travis-image]: https://badgen.net/travis/jshttp/cookie/master\r\n[travis-url]: https://travis-ci.org/jshttp/cookie\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/cookie/README.md b/node_modules/cookie/README.md
--- a/node_modules/cookie/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/cookie/README.md	(date 1753913035765)
@@ -2,9 +2,9 @@
 
 [![NPM Version][npm-version-image]][npm-url]
 [![NPM Downloads][npm-downloads-image]][npm-url]
-[![Node.js Version][node-version-image]][node-version-url]
-[![Build Status][travis-image]][travis-url]
-[![Test Coverage][coveralls-image]][coveralls-url]
+[![Node.js Version][node-image]][node-url]
+[![Build Status][ci-image]][ci-url]
+[![Coverage Status][coveralls-image]][coveralls-url]
 
 Basic HTTP cookie parser and serializer for HTTP servers.
 
@@ -107,14 +107,39 @@
 `maxAge` are set, then `maxAge` takes precedence, but it is possible not all clients by obey this,
 so if both are set, they should point to the same date and time.
 
+##### partitioned
+
+Specifies the `boolean` value for the [`Partitioned` `Set-Cookie`](rfc-cutler-httpbis-partitioned-cookies)
+attribute. When truthy, the `Partitioned` attribute is set, otherwise it is not. By default, the
+`Partitioned` attribute is not set.
+
+**note** This is an attribute that has not yet been fully standardized, and may change in the future.
+This also means many clients may ignore this attribute until they understand it.
+
+More information about can be found in [the proposal](https://github.com/privacycg/CHIPS).
+
 ##### path
 
 Specifies the value for the [`Path` `Set-Cookie` attribute][rfc-6265-5.2.4]. By default, the path
 is considered the ["default path"][rfc-6265-5.1.4].
 
+##### priority
+
+Specifies the `string` to be the value for the [`Priority` `Set-Cookie` attribute][rfc-west-cookie-priority-00-4.1].
+
+  - `'low'` will set the `Priority` attribute to `Low`.
+  - `'medium'` will set the `Priority` attribute to `Medium`, the default priority when not set.
+  - `'high'` will set the `Priority` attribute to `High`.
+
+More information about the different priority levels can be found in
+[the specification][rfc-west-cookie-priority-00-4.1].
+
+**note** This is an attribute that has not yet been fully standardized, and may change in the future.
+This also means many clients may ignore this attribute until they understand it.
+
 ##### sameSite
 
-Specifies the `boolean` or `string` to be the value for the [`SameSite` `Set-Cookie` attribute][rfc-6265bis-03-4.1.2.7].
+Specifies the `boolean` or `string` to be the value for the [`SameSite` `Set-Cookie` attribute][rfc-6265bis-09-5.4.7].
 
   - `true` will set the `SameSite` attribute to `Strict` for strict same site enforcement.
   - `false` will not set the `SameSite` attribute.
@@ -123,7 +148,7 @@
   - `'strict'` will set the `SameSite` attribute to `Strict` for strict same site enforcement.
 
 More information about the different enforcement levels can be found in
-[the specification][rfc-6265bis-03-4.1.2.7].
+[the specification][rfc-6265bis-09-5.4.7].
 
 **note** This is an attribute that has not yet been fully standardized, and may change in the future.
 This also means many clients may ignore this attribute until they understand it.
@@ -198,40 +223,75 @@
 ```
 $ npm run bench
 
-> cookie@0.3.1 bench cookie
+> cookie@0.5.0 bench
 > node benchmark/index.js
 
-  http_parser@2.8.0
-  node@6.14.2
-  v8@5.1.281.111
-  uv@1.16.1
-  zlib@1.2.11
-  ares@1.10.1-DEV
-  icu@58.2
-  modules@48
-  napi@3
-  openssl@1.0.2o
+  node@18.18.2
+  acorn@8.10.0
+  ada@2.6.0
+  ares@1.19.1
+  brotli@1.0.9
+  cldr@43.1
+  icu@73.2
+  llhttp@6.0.11
+  modules@108
+  napi@9
+  nghttp2@1.57.0
+  nghttp3@0.7.0
+  ngtcp2@0.8.1
+  openssl@3.0.10+quic
+  simdutf@3.2.14
+  tz@2023c
+  undici@5.26.3
+  unicode@15.0
+  uv@1.44.2
+  uvwasi@0.0.18
+  v8@10.2.154.26-node.26
+  zlib@1.2.13.1-motley
+
+> node benchmark/parse-top.js
+
+  cookie.parse - top sites
+
+  14 tests completed.
+
+  parse accounts.google.com x 2,588,913 ops/sec ±0.74% (186 runs sampled)
+  parse apple.com           x 2,370,002 ops/sec ±0.69% (186 runs sampled)
+  parse cloudflare.com      x 2,213,102 ops/sec ±0.88% (188 runs sampled)
+  parse docs.google.com     x 2,194,157 ops/sec ±1.03% (184 runs sampled)
+  parse drive.google.com    x 2,265,084 ops/sec ±0.79% (187 runs sampled)
+  parse en.wikipedia.org    x   457,099 ops/sec ±0.81% (186 runs sampled)
+  parse linkedin.com        x   504,407 ops/sec ±0.89% (186 runs sampled)
+  parse maps.google.com     x 1,230,959 ops/sec ±0.98% (186 runs sampled)
+  parse microsoft.com       x   926,294 ops/sec ±0.88% (184 runs sampled)
+  parse play.google.com     x 2,311,338 ops/sec ±0.83% (185 runs sampled)
+  parse support.google.com  x 1,508,850 ops/sec ±0.86% (186 runs sampled)
+  parse www.google.com      x 1,022,582 ops/sec ±1.32% (182 runs sampled)
+  parse youtu.be            x   332,136 ops/sec ±1.02% (185 runs sampled)
+  parse youtube.com         x   323,833 ops/sec ±0.77% (183 runs sampled)
 
 > node benchmark/parse.js
 
-  cookie.parse
+  cookie.parse - generic
 
   6 tests completed.
 
-  simple      x 1,200,691 ops/sec ±1.12% (189 runs sampled)
-  decode      x 1,012,994 ops/sec ±0.97% (186 runs sampled)
-  unquote     x 1,074,174 ops/sec ±2.43% (186 runs sampled)
-  duplicates  x   438,424 ops/sec ±2.17% (184 runs sampled)
-  10 cookies  x   147,154 ops/sec ±1.01% (186 runs sampled)
-  100 cookies x    14,274 ops/sec ±1.07% (187 runs sampled)
+  simple      x 3,214,032 ops/sec ±1.61% (183 runs sampled)
+  decode      x   587,237 ops/sec ±1.16% (187 runs sampled)
+  unquote     x 2,954,618 ops/sec ±1.35% (183 runs sampled)
+  duplicates  x   857,008 ops/sec ±0.89% (187 runs sampled)
+  10 cookies  x   292,133 ops/sec ±0.89% (187 runs sampled)
+  100 cookies x    22,610 ops/sec ±0.68% (187 runs sampled)
 ```
 
 ## References
 
 - [RFC 6265: HTTP State Management Mechanism][rfc-6265]
-- [Same-site Cookies][rfc-6265bis-03-4.1.2.7]
+- [Same-site Cookies][rfc-6265bis-09-5.4.7]
 
-[rfc-6265bis-03-4.1.2.7]: https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-4.1.2.7
+[rfc-cutler-httpbis-partitioned-cookies]: https://tools.ietf.org/html/draft-cutler-httpbis-partitioned-cookies/
+[rfc-west-cookie-priority-00-4.1]: https://tools.ietf.org/html/draft-west-cookie-priority-00#section-4.1
+[rfc-6265bis-09-5.4.7]: https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-09#section-5.4.7
 [rfc-6265]: https://tools.ietf.org/html/rfc6265
 [rfc-6265-5.1.4]: https://tools.ietf.org/html/rfc6265#section-5.1.4
 [rfc-6265-5.2.1]: https://tools.ietf.org/html/rfc6265#section-5.2.1
@@ -246,12 +306,12 @@
 
 [MIT](LICENSE)
 
+[ci-image]: https://badgen.net/github/checks/jshttp/cookie/master?label=ci
+[ci-url]: https://github.com/jshttp/cookie/actions/workflows/ci.yml
 [coveralls-image]: https://badgen.net/coveralls/c/github/jshttp/cookie/master
 [coveralls-url]: https://coveralls.io/r/jshttp/cookie?branch=master
-[node-version-image]: https://badgen.net/npm/node/cookie
-[node-version-url]: https://nodejs.org/en/download
+[node-image]: https://badgen.net/npm/node/cookie
+[node-url]: https://nodejs.org/en/download
 [npm-downloads-image]: https://badgen.net/npm/dm/cookie
 [npm-url]: https://npmjs.org/package/cookie
 [npm-version-image]: https://badgen.net/npm/v/cookie
-[travis-image]: https://badgen.net/travis/jshttp/cookie/master
-[travis-url]: https://travis-ci.org/jshttp/cookie
Index: node_modules/cookie/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*!\r\n * cookie\r\n * Copyright(c) 2012-2014 Roman Shtylman\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nexports.parse = parse;\r\nexports.serialize = serialize;\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar decode = decodeURIComponent;\r\nvar encode = encodeURIComponent;\r\nvar pairSplitRegExp = /; */;\r\n\r\n/**\r\n * RegExp to match field-content in RFC 7230 sec 3.2\r\n *\r\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\r\n * field-vchar   = VCHAR / obs-text\r\n * obs-text      = %x80-FF\r\n */\r\n\r\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\r\n\r\n/**\r\n * Parse a cookie header.\r\n *\r\n * Parse the given cookie header string into an object\r\n * The object has the various cookies as keys(names) => values\r\n *\r\n * @param {string} str\r\n * @param {object} [options]\r\n * @return {object}\r\n * @public\r\n */\r\n\r\nfunction parse(str, options) {\r\n  if (typeof str !== 'string') {\r\n    throw new TypeError('argument str must be a string');\r\n  }\r\n\r\n  var obj = {}\r\n  var opt = options || {};\r\n  var pairs = str.split(pairSplitRegExp);\r\n  var dec = opt.decode || decode;\r\n\r\n  for (var i = 0; i < pairs.length; i++) {\r\n    var pair = pairs[i];\r\n    var eq_idx = pair.indexOf('=');\r\n\r\n    // skip things that don't look like key=value\r\n    if (eq_idx < 0) {\r\n      continue;\r\n    }\r\n\r\n    var key = pair.substr(0, eq_idx).trim()\r\n    var val = pair.substr(++eq_idx, pair.length).trim();\r\n\r\n    // quoted values\r\n    if ('\"' == val[0]) {\r\n      val = val.slice(1, -1);\r\n    }\r\n\r\n    // only assign once\r\n    if (undefined == obj[key]) {\r\n      obj[key] = tryDecode(val, dec);\r\n    }\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Serialize data into a cookie header.\r\n *\r\n * Serialize the a name value pair into a cookie string suitable for\r\n * http headers. An optional options object specified cookie parameters.\r\n *\r\n * serialize('foo', 'bar', { httpOnly: true })\r\n *   => \"foo=bar; httpOnly\"\r\n *\r\n * @param {string} name\r\n * @param {string} val\r\n * @param {object} [options]\r\n * @return {string}\r\n * @public\r\n */\r\n\r\nfunction serialize(name, val, options) {\r\n  var opt = options || {};\r\n  var enc = opt.encode || encode;\r\n\r\n  if (typeof enc !== 'function') {\r\n    throw new TypeError('option encode is invalid');\r\n  }\r\n\r\n  if (!fieldContentRegExp.test(name)) {\r\n    throw new TypeError('argument name is invalid');\r\n  }\r\n\r\n  var value = enc(val);\r\n\r\n  if (value && !fieldContentRegExp.test(value)) {\r\n    throw new TypeError('argument val is invalid');\r\n  }\r\n\r\n  var str = name + '=' + value;\r\n\r\n  if (null != opt.maxAge) {\r\n    var maxAge = opt.maxAge - 0;\r\n\r\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\r\n      throw new TypeError('option maxAge is invalid')\r\n    }\r\n\r\n    str += '; Max-Age=' + Math.floor(maxAge);\r\n  }\r\n\r\n  if (opt.domain) {\r\n    if (!fieldContentRegExp.test(opt.domain)) {\r\n      throw new TypeError('option domain is invalid');\r\n    }\r\n\r\n    str += '; Domain=' + opt.domain;\r\n  }\r\n\r\n  if (opt.path) {\r\n    if (!fieldContentRegExp.test(opt.path)) {\r\n      throw new TypeError('option path is invalid');\r\n    }\r\n\r\n    str += '; Path=' + opt.path;\r\n  }\r\n\r\n  if (opt.expires) {\r\n    if (typeof opt.expires.toUTCString !== 'function') {\r\n      throw new TypeError('option expires is invalid');\r\n    }\r\n\r\n    str += '; Expires=' + opt.expires.toUTCString();\r\n  }\r\n\r\n  if (opt.httpOnly) {\r\n    str += '; HttpOnly';\r\n  }\r\n\r\n  if (opt.secure) {\r\n    str += '; Secure';\r\n  }\r\n\r\n  if (opt.sameSite) {\r\n    var sameSite = typeof opt.sameSite === 'string'\r\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\r\n\r\n    switch (sameSite) {\r\n      case true:\r\n        str += '; SameSite=Strict';\r\n        break;\r\n      case 'lax':\r\n        str += '; SameSite=Lax';\r\n        break;\r\n      case 'strict':\r\n        str += '; SameSite=Strict';\r\n        break;\r\n      case 'none':\r\n        str += '; SameSite=None';\r\n        break;\r\n      default:\r\n        throw new TypeError('option sameSite is invalid');\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n/**\r\n * Try decoding a string using a decoding function.\r\n *\r\n * @param {string} str\r\n * @param {function} decode\r\n * @private\r\n */\r\n\r\nfunction tryDecode(str, decode) {\r\n  try {\r\n    return decode(str);\r\n  } catch (e) {\r\n    return str;\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/cookie/index.js b/node_modules/cookie/index.js
--- a/node_modules/cookie/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/cookie/index.js	(date 1753913035762)
@@ -20,19 +20,70 @@
  * @private
  */
 
-var decode = decodeURIComponent;
-var encode = encodeURIComponent;
-var pairSplitRegExp = /; */;
+var __toString = Object.prototype.toString
+var __hasOwnProperty = Object.prototype.hasOwnProperty
 
 /**
- * RegExp to match field-content in RFC 7230 sec 3.2
+ * RegExp to match cookie-name in RFC 6265 sec 4.1.1
+ * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2
+ * which has been replaced by the token definition in RFC 7230 appendix B.
  *
- * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]
- * field-vchar   = VCHAR / obs-text
- * obs-text      = %x80-FF
+ * cookie-name       = token
+ * token             = 1*tchar
+ * tchar             = "!" / "#" / "$" / "%" / "&" / "'" /
+ *                     "*" / "+" / "-" / "." / "^" / "_" /
+ *                     "`" / "|" / "~" / DIGIT / ALPHA
  */
 
-var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
+var cookieNameRegExp = /^[!#$%&'*+\-.^_`|~0-9A-Za-z]+$/;
+
+/**
+ * RegExp to match cookie-value in RFC 6265 sec 4.1.1
+ *
+ * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )
+ * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E
+ *                     ; US-ASCII characters excluding CTLs,
+ *                     ; whitespace DQUOTE, comma, semicolon,
+ *                     ; and backslash
+ */
+
+var cookieValueRegExp = /^("?)[\u0021\u0023-\u002B\u002D-\u003A\u003C-\u005B\u005D-\u007E]*\1$/;
+
+/**
+ * RegExp to match domain-value in RFC 6265 sec 4.1.1
+ *
+ * domain-value      = <subdomain>
+ *                     ; defined in [RFC1034], Section 3.5, as
+ *                     ; enhanced by [RFC1123], Section 2.1
+ * <subdomain>       = <label> | <subdomain> "." <label>
+ * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]
+ *                     Labels must be 63 characters or less.
+ *                     'let-dig' not 'letter' in the first char, per RFC1123
+ * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>
+ * <let-dig-hyp>     = <let-dig> | "-"
+ * <let-dig>         = <letter> | <digit>
+ * <letter>          = any one of the 52 alphabetic characters A through Z in
+ *                     upper case and a through z in lower case
+ * <digit>           = any one of the ten digits 0 through 9
+ *
+ * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173
+ *
+ * > (Note that a leading %x2E ("."), if present, is ignored even though that
+ * character is not permitted, but a trailing %x2E ("."), if present, will
+ * cause the user agent to ignore the attribute.)
+ */
+
+var domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;
+
+/**
+ * RegExp to match path-value in RFC 6265 sec 4.1.1
+ *
+ * path-value        = <any CHAR except CTLs or ";">
+ * CHAR              = %x01-7F
+ *                     ; defined in RFC 5234 appendix B.1
+ */
+
+var pathValueRegExp = /^[\u0020-\u003A\u003D-\u007E]*$/;
 
 /**
  * Parse a cookie header.
@@ -41,95 +92,128 @@
  * The object has the various cookies as keys(names) => values
  *
  * @param {string} str
- * @param {object} [options]
+ * @param {object} [opt]
  * @return {object}
  * @public
  */
 
-function parse(str, options) {
+function parse(str, opt) {
   if (typeof str !== 'string') {
     throw new TypeError('argument str must be a string');
   }
 
-  var obj = {}
-  var opt = options || {};
-  var pairs = str.split(pairSplitRegExp);
-  var dec = opt.decode || decode;
+  var obj = {};
+  var len = str.length;
+  // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.
+  if (len < 2) return obj;
+
+  var dec = (opt && opt.decode) || decode;
+  var index = 0;
+  var eqIdx = 0;
+  var endIdx = 0;
 
-  for (var i = 0; i < pairs.length; i++) {
-    var pair = pairs[i];
-    var eq_idx = pair.indexOf('=');
+  do {
+    eqIdx = str.indexOf('=', index);
+    if (eqIdx === -1) break; // No more cookie pairs.
 
-    // skip things that don't look like key=value
-    if (eq_idx < 0) {
+    endIdx = str.indexOf(';', index);
+
+    if (endIdx === -1) {
+      endIdx = len;
+    } else if (eqIdx > endIdx) {
+      // backtrack on prior semicolon
+      index = str.lastIndexOf(';', eqIdx - 1) + 1;
       continue;
     }
 
-    var key = pair.substr(0, eq_idx).trim()
-    var val = pair.substr(++eq_idx, pair.length).trim();
-
-    // quoted values
-    if ('"' == val[0]) {
-      val = val.slice(1, -1);
-    }
+    var keyStartIdx = startIndex(str, index, eqIdx);
+    var keyEndIdx = endIndex(str, eqIdx, keyStartIdx);
+    var key = str.slice(keyStartIdx, keyEndIdx);
 
     // only assign once
-    if (undefined == obj[key]) {
+    if (!__hasOwnProperty.call(obj, key)) {
+      var valStartIdx = startIndex(str, eqIdx + 1, endIdx);
+      var valEndIdx = endIndex(str, endIdx, valStartIdx);
+
+      if (str.charCodeAt(valStartIdx) === 0x22 /* " */ && str.charCodeAt(valEndIdx - 1) === 0x22 /* " */) {
+        valStartIdx++;
+        valEndIdx--;
+      }
+
+      var val = str.slice(valStartIdx, valEndIdx);
       obj[key] = tryDecode(val, dec);
     }
-  }
+
+    index = endIdx + 1
+  } while (index < len);
 
   return obj;
 }
 
+function startIndex(str, index, max) {
+  do {
+    var code = str.charCodeAt(index);
+    if (code !== 0x20 /*   */ && code !== 0x09 /* \t */) return index;
+  } while (++index < max);
+  return max;
+}
+
+function endIndex(str, index, min) {
+  while (index > min) {
+    var code = str.charCodeAt(--index);
+    if (code !== 0x20 /*   */ && code !== 0x09 /* \t */) return index + 1;
+  }
+  return min;
+}
+
 /**
  * Serialize data into a cookie header.
  *
- * Serialize the a name value pair into a cookie string suitable for
- * http headers. An optional options object specified cookie parameters.
+ * Serialize a name value pair into a cookie string suitable for
+ * http headers. An optional options object specifies cookie parameters.
  *
  * serialize('foo', 'bar', { httpOnly: true })
  *   => "foo=bar; httpOnly"
  *
  * @param {string} name
  * @param {string} val
- * @param {object} [options]
+ * @param {object} [opt]
  * @return {string}
  * @public
  */
 
-function serialize(name, val, options) {
-  var opt = options || {};
-  var enc = opt.encode || encode;
+function serialize(name, val, opt) {
+  var enc = (opt && opt.encode) || encodeURIComponent;
 
   if (typeof enc !== 'function') {
     throw new TypeError('option encode is invalid');
   }
 
-  if (!fieldContentRegExp.test(name)) {
+  if (!cookieNameRegExp.test(name)) {
     throw new TypeError('argument name is invalid');
   }
 
   var value = enc(val);
 
-  if (value && !fieldContentRegExp.test(value)) {
+  if (!cookieValueRegExp.test(value)) {
     throw new TypeError('argument val is invalid');
   }
 
   var str = name + '=' + value;
+  if (!opt) return str;
 
   if (null != opt.maxAge) {
-    var maxAge = opt.maxAge - 0;
+    var maxAge = Math.floor(opt.maxAge);
 
-    if (isNaN(maxAge) || !isFinite(maxAge)) {
+    if (!isFinite(maxAge)) {
       throw new TypeError('option maxAge is invalid')
     }
 
-    str += '; Max-Age=' + Math.floor(maxAge);
+    str += '; Max-Age=' + maxAge;
   }
 
   if (opt.domain) {
-    if (!fieldContentRegExp.test(opt.domain)) {
+    if (!domainValueRegExp.test(opt.domain)) {
       throw new TypeError('option domain is invalid');
     }
 
@@ -137,7 +221,7 @@
   }
 
   if (opt.path) {
-    if (!fieldContentRegExp.test(opt.path)) {
+    if (!pathValueRegExp.test(opt.path)) {
       throw new TypeError('option path is invalid');
     }
 
@@ -145,11 +229,13 @@
   }
 
   if (opt.expires) {
-    if (typeof opt.expires.toUTCString !== 'function') {
+    var expires = opt.expires
+
+    if (!isDate(expires) || isNaN(expires.valueOf())) {
       throw new TypeError('option expires is invalid');
     }
 
-    str += '; Expires=' + opt.expires.toUTCString();
+    str += '; Expires=' + expires.toUTCString()
   }
 
   if (opt.httpOnly) {
@@ -160,6 +246,29 @@
     str += '; Secure';
   }
 
+  if (opt.partitioned) {
+    str += '; Partitioned'
+  }
+
+  if (opt.priority) {
+    var priority = typeof opt.priority === 'string'
+      ? opt.priority.toLowerCase() : opt.priority;
+
+    switch (priority) {
+      case 'low':
+        str += '; Priority=Low'
+        break
+      case 'medium':
+        str += '; Priority=Medium'
+        break
+      case 'high':
+        str += '; Priority=High'
+        break
+      default:
+        throw new TypeError('option priority is invalid')
+    }
+  }
+
   if (opt.sameSite) {
     var sameSite = typeof opt.sameSite === 'string'
       ? opt.sameSite.toLowerCase() : opt.sameSite;
@@ -185,6 +294,30 @@
   return str;
 }
 
+/**
+ * URL-decode string value. Optimized to skip native call when no %.
+ *
+ * @param {string} str
+ * @returns {string}
+ */
+
+function decode (str) {
+  return str.indexOf('%') !== -1
+    ? decodeURIComponent(str)
+    : str
+}
+
+/**
+ * Determine if value is a Date.
+ *
+ * @param {*} val
+ * @private
+ */
+
+function isDate (val) {
+  return __toString.call(val) === '[object Date]';
+}
+
 /**
  * Try decoding a string using a decoding function.
  *
Index: node_modules/dotenv/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><div align=\"center\">\r\n\uD83C\uDF89 announcing <a href=\"https://github.com/dotenvx/dotenvx\">dotenvx</a>. <em>run anywhere, multi-environment, encrypted envs</em>.\r\n</div>\r\n\r\n&nbsp;\r\n\r\n<div align=\"center\">\r\n\r\n<p>\r\n  <sup>\r\n    <a href=\"https://github.com/sponsors/motdotla\">Dotenv is supported by the community.</a>\r\n  </sup>\r\n</p>\r\n<sup>Special thanks to:</sup>\r\n<br>\r\n<br>\r\n<a href=\"https://www.warp.dev/?utm_source=github&utm_medium=referral&utm_campaign=dotenv_p_20220831\">\r\n  <div>\r\n    <img src=\"https://res.cloudinary.com/dotenv-org/image/upload/v1661980709/warp_hi8oqj.png\" width=\"230\" alt=\"Warp\">\r\n  </div>\r\n  <b>Warp is a blazingly fast, Rust-based terminal reimagined to work like a modern app.</b>\r\n  <div>\r\n    <sup>Get more done in the CLI with real text editing, block-based output, and AI command search.</sup>\r\n  </div>\r\n</a>\r\n<br>\r\n<a href=\"https://workos.com/?utm_campaign=github_repo&utm_medium=referral&utm_content=dotenv&utm_source=github\">\r\n  <div>\r\n    <img src=\"https://res.cloudinary.com/dotenv-org/image/upload/c_scale,w_400/v1665605496/68747470733a2f2f73696e647265736f726875732e636f6d2f6173736574732f7468616e6b732f776f726b6f732d6c6f676f2d77686974652d62672e737667_zdmsbu.svg\" width=\"270\" alt=\"WorkOS\">\r\n  </div>\r\n  <b>Your App, Enterprise Ready.</b>\r\n  <div>\r\n    <sup>Add Single Sign-On, Multi-Factor Auth, and more, in minutes instead of months.</sup>\r\n  </div>\r\n</a>\r\n<br/>\r\n<a href=\"https://runalloy.com/?utm_source=github&utm_medium=referral&utm_campaign=1224_dotenv\">\r\n  <div>\r\n    <img src=\"https://res.cloudinary.com/dotenv-org/image/upload/c_crop,g_center,h_65,w_290,x_0,y_0/v1704258787/AlloyAutomation-logo_dqin8c.svg\" width=\"370\" alt=\"Alloy Automation\">\r\n  </div>\r\n  <b>Launch user-facing integrations faster</b>\r\n  <div>\r\n    <sup>Easily spin up hundreds of integrations. Sign up free or read our docs first</sup>\r\n  </div>\r\n</a>\r\n<hr>\r\n</div>\r\n\r\n# dotenv [![NPM version](https://img.shields.io/npm/v/dotenv.svg?style=flat-square)](https://www.npmjs.com/package/dotenv)\r\n\r\n<img src=\"https://raw.githubusercontent.com/motdotla/dotenv/master/dotenv.svg\" alt=\"dotenv\" align=\"right\" width=\"200\" />\r\n\r\nDotenv is a zero-dependency module that loads environment variables from a `.env` file into [`process.env`](https://nodejs.org/docs/latest/api/process.html#process_process_env). Storing configuration in the environment separate from code is based on [The Twelve-Factor App](https://12factor.net/config) methodology.\r\n\r\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/feross/standard)\r\n[![LICENSE](https://img.shields.io/github/license/motdotla/dotenv.svg)](LICENSE)\r\n[![codecov](https://codecov.io/gh/motdotla/dotenv-expand/graph/badge.svg?token=pawWEyaMfg)](https://codecov.io/gh/motdotla/dotenv-expand)\r\n\r\n* [\uD83C\uDF31 Install](#-install)\r\n* [\uD83C\uDFD7\uFE0F Usage (.env)](#%EF%B8%8F-usage)\r\n* [\uD83C\uDF34 Multiple Environments \uD83C\uDD95](#-manage-multiple-environments)\r\n* [\uD83D\uDE80 Deploying (.env.vault) \uD83C\uDD95](#-deploying)\r\n* [\uD83D\uDCDA Examples](#-examples)\r\n* [\uD83D\uDCD6 Docs](#-documentation)\r\n* [❓ FAQ](#-faq)\r\n* [⏱\uFE0F Changelog](./CHANGELOG.md)\r\n\r\n## \uD83C\uDF31 Install\r\n\r\n```bash\r\n# install locally (recommended)\r\nnpm install dotenv --save\r\n```\r\n\r\nOr installing with yarn? `yarn add dotenv`\r\n\r\n## \uD83C\uDFD7\uFE0F Usage\r\n\r\n<a href=\"https://www.youtube.com/watch?v=YtkZR0NFd1g\">\r\n<div align=\"right\">\r\n<img src=\"https://img.youtube.com/vi/YtkZR0NFd1g/hqdefault.jpg\" alt=\"how to use dotenv video tutorial\" align=\"right\" width=\"330\" />\r\n<img src=\"https://simpleicons.vercel.app/youtube/ff0000\" alt=\"youtube/@dotenvorg\" align=\"right\" width=\"24\" />\r\n</div>\r\n</a>\r\n\r\nCreate a `.env` file in the root of your project:\r\n\r\n```dosini\r\nS3_BUCKET=\"YOURS3BUCKET\"\r\nSECRET_KEY=\"YOURSECRETKEYGOESHERE\"\r\n```\r\n\r\nAs early as possible in your application, import and configure dotenv:\r\n\r\n```javascript\r\nrequire('dotenv').config()\r\nconsole.log(process.env) // remove this after you've confirmed it is working\r\n```\r\n\r\n.. [or using ES6?](#how-do-i-use-dotenv-with-import)\r\n\r\n```javascript\r\nimport 'dotenv/config'\r\n```\r\n\r\nThat's it. `process.env` now has the keys and values you defined in your `.env` file:\r\n\r\n```javascript\r\nrequire('dotenv').config()\r\n\r\n...\r\n\r\ns3.getBucketCors({Bucket: process.env.S3_BUCKET}, function(err, data) {})\r\n```\r\n\r\n### Multiline values\r\n\r\nIf you need multiline variables, for example private keys, those are now supported (`>= v15.0.0`) with line breaks:\r\n\r\n```dosini\r\nPRIVATE_KEY=\"-----BEGIN RSA PRIVATE KEY-----\r\n...\r\nKh9NV...\r\n...\r\n-----END RSA PRIVATE KEY-----\"\r\n```\r\n\r\nAlternatively, you can double quote strings and use the `\\n` character:\r\n\r\n```dosini\r\nPRIVATE_KEY=\"-----BEGIN RSA PRIVATE KEY-----\\nKh9NV...\\n-----END RSA PRIVATE KEY-----\\n\"\r\n```\r\n\r\n### Comments\r\n\r\nComments may be added to your file on their own line or inline:\r\n\r\n```dosini\r\n# This is a comment\r\nSECRET_KEY=YOURSECRETKEYGOESHERE # comment\r\nSECRET_HASH=\"something-with-a-#-hash\"\r\n```\r\n\r\nComments begin where a `#` exists, so if your value contains a `#` please wrap it in quotes. This is a breaking change from `>= v15.0.0` and on.\r\n\r\n### Parsing\r\n\r\nThe engine which parses the contents of your file containing environment variables is available to use. It accepts a String or Buffer and will return an Object with the parsed keys and values.\r\n\r\n```javascript\r\nconst dotenv = require('dotenv')\r\nconst buf = Buffer.from('BASIC=basic')\r\nconst config = dotenv.parse(buf) // will return an object\r\nconsole.log(typeof config, config) // object { BASIC : 'basic' }\r\n```\r\n\r\n### Preload\r\n\r\n> Note: Consider using [`dotenvx`](https://github.com/dotenvx/dotenvx) instead of preloading. I am now doing (and recommending) so.\r\n>\r\n> It serves the same purpose (you do not need to require and load dotenv), adds better debugging, and works with ANY language, framework, or platform. – [motdotla](https://github.com/motdotla)\r\n\r\nYou can use the `--require` (`-r`) [command line option](https://nodejs.org/api/cli.html#-r---require-module) to preload dotenv. By doing this, you do not need to require and load dotenv in your application code.\r\n\r\n```bash\r\n$ node -r dotenv/config your_script.js\r\n```\r\n\r\nThe configuration options below are supported as command line arguments in the format `dotenv_config_<option>=value`\r\n\r\n```bash\r\n$ node -r dotenv/config your_script.js dotenv_config_path=/custom/path/to/.env dotenv_config_debug=true\r\n```\r\n\r\nAdditionally, you can use environment variables to set configuration options. Command line arguments will precede these.\r\n\r\n```bash\r\n$ DOTENV_CONFIG_<OPTION>=value node -r dotenv/config your_script.js\r\n```\r\n\r\n```bash\r\n$ DOTENV_CONFIG_ENCODING=latin1 DOTENV_CONFIG_DEBUG=true node -r dotenv/config your_script.js dotenv_config_path=/custom/path/to/.env\r\n```\r\n\r\n### Variable Expansion\r\n\r\nYou need to add the value of another variable in one of your variables? Use [dotenv-expand](https://github.com/motdotla/dotenv-expand).\r\n\r\n### Syncing\r\n\r\nYou need to keep `.env` files in sync between machines, environments, or team members? Use [dotenv-vault](https://github.com/dotenv-org/dotenv-vault).\r\n\r\n### Multiple Environments\r\n\r\nYou need to manage your secrets across different environments and apply them as needed? Use a `.env.vault` file with a `DOTENV_KEY`.\r\n\r\n### Deploying\r\n\r\nYou need to deploy your secrets in a cloud-agnostic manner? Use a `.env.vault` file. See [deploying `.env.vault` files](https://github.com/motdotla/dotenv/tree/master#-deploying).\r\n\r\n## \uD83C\uDF34 Manage Multiple Environments\r\n\r\nUse [dotenvx](https://github.com/dotenvx/dotenvx) or [dotenv-vault](https://github.com/dotenv-org/dotenv-vault).\r\n\r\n### dotenvx\r\n\r\nRun any environment locally. Create a `.env.ENVIRONMENT` file and use `--env-file` to load it. It's straightforward, yet flexible.\r\n\r\n```bash\r\n$ echo \"HELLO=production\" > .env.production\r\n$ echo \"console.log('Hello ' + process.env.HELLO)\" > index.js\r\n\r\n$ dotenvx run --env-file=.env.production -- node index.js\r\nHello production\r\n> ^^\r\n```\r\n\r\nor with multiple .env files\r\n\r\n```bash\r\n$ echo \"HELLO=local\" > .env.local\r\n$ echo \"HELLO=World\" > .env\r\n$ echo \"console.log('Hello ' + process.env.HELLO)\" > index.js\r\n\r\n$ dotenvx run --env-file=.env.local --env-file=.env -- node index.js\r\nHello local\r\n```\r\n\r\n[more environment examples](https://dotenvx.com/docs/quickstart/environments)\r\n\r\n### dotenv-vault\r\n\r\nEdit your production environment variables.\r\n\r\n```bash\r\n$ npx dotenv-vault open production\r\n```\r\n\r\nRegenerate your `.env.vault` file.\r\n\r\n```bash\r\n$ npx dotenv-vault build\r\n```\r\n\r\n*ℹ\uFE0F  \uD83D\uDD10 Vault Managed vs \uD83D\uDCBB Locally Managed: The above example, for brevity's sake, used the \uD83D\uDD10 Vault Managed solution to manage your `.env.vault` file. You can instead use the \uD83D\uDCBB Locally Managed solution. [Read more here](https://github.com/dotenv-org/dotenv-vault#how-do-i-use--locally-managed-dotenv-vault). Our vision is that other platforms and orchestration tools adopt the `.env.vault` standard as they did the `.env` standard. We don't expect to be the only ones providing tooling to manage and generate `.env.vault` files.*\r\n\r\n<a href=\"https://github.com/dotenv-org/dotenv-vault#-manage-multiple-environments\">Learn more at dotenv-vault: Manage Multiple Environments</a>\r\n\r\n## \uD83D\uDE80 Deploying\r\n\r\nUse [dotenvx](https://github.com/dotenvx/dotenvx) or [dotenv-vault](https://github.com/dotenv-org/dotenv-vault).\r\n\r\n### dotenvx\r\n\r\nEncrypt your secrets to a `.env.vault` file and load from it (recommended for production and ci).\r\n\r\n```bash\r\n$ echo \"HELLO=World\" > .env\r\n$ echo \"HELLO=production\" > .env.production\r\n$ echo \"console.log('Hello ' + process.env.HELLO)\" > index.js\r\n\r\n$ dotenvx encrypt\r\n[dotenvx][info] encrypted to .env.vault (.env,.env.production)\r\n[dotenvx][info] keys added to .env.keys (DOTENV_KEY_PRODUCTION,DOTENV_KEY_PRODUCTION)\r\n\r\n$ DOTENV_KEY='<dotenv_key_production>' dotenvx run -- node index.js\r\n[dotenvx][info] loading env (1) from encrypted .env.vault\r\nHello production\r\n^ :-]\r\n```\r\n\r\n[learn more](https://github.com/dotenvx/dotenvx?tab=readme-ov-file#encryption)\r\n\r\n### dotenv-vault\r\n\r\n*Note: Requires dotenv >= 16.1.0*\r\n\r\nEncrypt your `.env.vault` file.\r\n\r\n```bash\r\n$ npx dotenv-vault build\r\n```\r\n\r\nFetch your production `DOTENV_KEY`.\r\n\r\n```bash\r\n$ npx dotenv-vault keys production\r\n```\r\n\r\nSet `DOTENV_KEY` on your server.\r\n\r\n```bash\r\n# heroku example\r\nheroku config:set DOTENV_KEY=dotenv://:key_1234…@dotenvx.com/vault/.env.vault?environment=production\r\n```\r\n\r\nThat's it! On deploy, your `.env.vault` file will be decrypted and its secrets injected as environment variables – just in time.\r\n\r\n*ℹ\uFE0F A note from [Mot](https://github.com/motdotla): Until recently, we did not have an opinion on how and where to store your secrets in production. We now strongly recommend generating a `.env.vault` file. It's the best way to prevent your secrets from being scattered across multiple servers and cloud providers – protecting you from breaches like the [CircleCI breach](https://techcrunch.com/2023/01/05/circleci-breach/). Also it unlocks interoperability WITHOUT native third-party integrations. Third-party integrations are [increasingly risky](https://coderpad.io/blog/development/heroku-github-breach/) to our industry. They may be the 'du jour' of today, but we imagine a better future.*\r\n\r\n<a href=\"https://github.com/dotenv-org/dotenv-vault#-deploying\">Learn more at dotenv-vault: Deploying</a>\r\n\r\n## \uD83D\uDCDA Examples\r\n\r\nSee [examples](https://github.com/dotenv-org/examples) of using dotenv with various frameworks, languages, and configurations.\r\n\r\n* [nodejs](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-nodejs)\r\n* [nodejs (debug on)](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-nodejs-debug)\r\n* [nodejs (override on)](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-nodejs-override)\r\n* [nodejs (processEnv override)](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-custom-target)\r\n* [nodejs (DOTENV_KEY override)](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-vault-custom-target)\r\n* [esm](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-esm)\r\n* [esm (preload)](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-esm-preload)\r\n* [typescript](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-typescript)\r\n* [typescript parse](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-typescript-parse)\r\n* [typescript config](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-typescript-config)\r\n* [webpack](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-webpack)\r\n* [webpack (plugin)](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-webpack2)\r\n* [react](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-react)\r\n* [react (typescript)](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-react-typescript)\r\n* [express](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-express)\r\n* [nestjs](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-nestjs)\r\n* [fastify](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-fastify)\r\n\r\n## \uD83D\uDCD6 Documentation\r\n\r\nDotenv exposes four functions:\r\n\r\n* `config`\r\n* `parse`\r\n* `populate`\r\n* `decrypt`\r\n\r\n### Config\r\n\r\n`config` will read your `.env` file, parse the contents, assign it to\r\n[`process.env`](https://nodejs.org/docs/latest/api/process.html#process_process_env),\r\nand return an Object with a `parsed` key containing the loaded content or an `error` key if it failed.\r\n\r\n```js\r\nconst result = dotenv.config()\r\n\r\nif (result.error) {\r\n  throw result.error\r\n}\r\n\r\nconsole.log(result.parsed)\r\n```\r\n\r\nYou can additionally, pass options to `config`.\r\n\r\n#### Options\r\n\r\n##### path\r\n\r\nDefault: `path.resolve(process.cwd(), '.env')`\r\n\r\nSpecify a custom path if your file containing environment variables is located elsewhere.\r\n\r\n```js\r\nrequire('dotenv').config({ path: '/custom/path/to/.env' })\r\n```\r\n\r\nBy default, `config` will look for a file called .env in the current working directory.\r\n\r\nPass in multiple files as an array, and they will be parsed in order and combined with `process.env` (or `option.processEnv`, if set). The first value set for a variable will win, unless the `options.override` flag is set, in which case the last value set will win.  If a value already exists in `process.env` and the `options.override` flag is NOT set, no changes will be made to that value. \r\n\r\n```js  \r\nrequire('dotenv').config({ path: ['.env.local', '.env'] })\r\n```\r\n\r\n##### encoding\r\n\r\nDefault: `utf8`\r\n\r\nSpecify the encoding of your file containing environment variables.\r\n\r\n```js\r\nrequire('dotenv').config({ encoding: 'latin1' })\r\n```\r\n\r\n##### debug\r\n\r\nDefault: `false`\r\n\r\nTurn on logging to help debug why certain keys or values are not being set as you expect.\r\n\r\n```js\r\nrequire('dotenv').config({ debug: process.env.DEBUG })\r\n```\r\n\r\n##### override\r\n\r\nDefault: `false`\r\n\r\nOverride any environment variables that have already been set on your machine with values from your .env file(s). If multiple files have been provided in `option.path` the override will also be used as each file is combined with the next. Without `override` being set, the first value wins. With `override` set the last value wins. \r\n\r\n```js\r\nrequire('dotenv').config({ override: true })\r\n```\r\n\r\n##### processEnv\r\n\r\nDefault: `process.env`\r\n\r\nSpecify an object to write your secrets to. Defaults to `process.env` environment variables.\r\n\r\n```js\r\nconst myObject = {}\r\nrequire('dotenv').config({ processEnv: myObject })\r\n\r\nconsole.log(myObject) // values from .env or .env.vault live here now.\r\nconsole.log(process.env) // this was not changed or written to\r\n```\r\n\r\n##### DOTENV_KEY\r\n\r\nDefault: `process.env.DOTENV_KEY`\r\n\r\nPass the `DOTENV_KEY` directly to config options. Defaults to looking for `process.env.DOTENV_KEY` environment variable. Note this only applies to decrypting `.env.vault` files. If passed as null or undefined, or not passed at all, dotenv falls back to its traditional job of parsing a `.env` file.\r\n\r\n```js\r\nrequire('dotenv').config({ DOTENV_KEY: 'dotenv://:key_1234…@dotenvx.com/vault/.env.vault?environment=production' })\r\n```\r\n\r\n### Parse\r\n\r\nThe engine which parses the contents of your file containing environment\r\nvariables is available to use. It accepts a String or Buffer and will return\r\nan Object with the parsed keys and values.\r\n\r\n```js\r\nconst dotenv = require('dotenv')\r\nconst buf = Buffer.from('BASIC=basic')\r\nconst config = dotenv.parse(buf) // will return an object\r\nconsole.log(typeof config, config) // object { BASIC : 'basic' }\r\n```\r\n\r\n#### Options\r\n\r\n##### debug\r\n\r\nDefault: `false`\r\n\r\nTurn on logging to help debug why certain keys or values are not being set as you expect.\r\n\r\n```js\r\nconst dotenv = require('dotenv')\r\nconst buf = Buffer.from('hello world')\r\nconst opt = { debug: true }\r\nconst config = dotenv.parse(buf, opt)\r\n// expect a debug message because the buffer is not in KEY=VAL form\r\n```\r\n\r\n### Populate\r\n\r\nThe engine which populates the contents of your .env file to `process.env` is available for use. It accepts a target, a source, and options. This is useful for power users who want to supply their own objects.\r\n\r\nFor example, customizing the source:\r\n\r\n```js\r\nconst dotenv = require('dotenv')\r\nconst parsed = { HELLO: 'world' }\r\n\r\ndotenv.populate(process.env, parsed)\r\n\r\nconsole.log(process.env.HELLO) // world\r\n```\r\n\r\nFor example, customizing the source AND target:\r\n\r\n```js\r\nconst dotenv = require('dotenv')\r\nconst parsed = { HELLO: 'universe' }\r\nconst target = { HELLO: 'world' } // empty object\r\n\r\ndotenv.populate(target, parsed, { override: true, debug: true })\r\n\r\nconsole.log(target) // { HELLO: 'universe' }\r\n```\r\n\r\n#### options\r\n\r\n##### Debug\r\n\r\nDefault: `false`\r\n\r\nTurn on logging to help debug why certain keys or values are not being populated as you expect.\r\n\r\n##### override\r\n\r\nDefault: `false`\r\n\r\nOverride any environment variables that have already been set.\r\n\r\n### Decrypt\r\n\r\nThe engine which decrypts the ciphertext contents of your .env.vault file is available for use. It accepts a ciphertext and a decryption key. It uses AES-256-GCM encryption.\r\n\r\nFor example, decrypting a simple ciphertext:\r\n\r\n```js\r\nconst dotenv = require('dotenv')\r\nconst ciphertext = 's7NYXa809k/bVSPwIAmJhPJmEGTtU0hG58hOZy7I0ix6y5HP8LsHBsZCYC/gw5DDFy5DgOcyd18R'\r\nconst decryptionKey = 'ddcaa26504cd70a6fef9801901c3981538563a1767c297cb8416e8a38c62fe00'\r\n\r\nconst decrypted = dotenv.decrypt(ciphertext, decryptionKey)\r\n\r\nconsole.log(decrypted) // # development@v6\\nALPHA=\"zeta\"\r\n```\r\n\r\n## ❓ FAQ\r\n\r\n### Why is the `.env` file not loading my environment variables successfully?\r\n\r\nMost likely your `.env` file is not in the correct place. [See this stack overflow](https://stackoverflow.com/questions/42335016/dotenv-file-is-not-loading-environment-variables).\r\n\r\nTurn on debug mode and try again..\r\n\r\n```js\r\nrequire('dotenv').config({ debug: true })\r\n```\r\n\r\nYou will receive a helpful error outputted to your console.\r\n\r\n### Should I commit my `.env` file?\r\n\r\nNo. We **strongly** recommend against committing your `.env` file to version\r\ncontrol. It should only include environment-specific values such as database\r\npasswords or API keys. Your production database should have a different\r\npassword than your development database.\r\n\r\n### Should I have multiple `.env` files?\r\n\r\nWe recommend creating on `.env` file per environment. Use `.env` for local/development, `.env.production` for production and so on. This still follows the twelve factor principles as each is attributed individually to its own environment. Avoid custom set ups that work in inheritance somehow (`.env.production` inherits values form `.env` for example). It is better to duplicate values if necessary across each `.env.environment` file.\r\n\r\n> In a twelve-factor app, env vars are granular controls, each fully orthogonal to other env vars. They are never grouped together as “environments”, but instead are independently managed for each deploy. This is a model that scales up smoothly as the app naturally expands into more deploys over its lifetime.\r\n>\r\n> – [The Twelve-Factor App](http://12factor.net/config)\r\n\r\n### What rules does the parsing engine follow?\r\n\r\nThe parsing engine currently supports the following rules:\r\n\r\n- `BASIC=basic` becomes `{BASIC: 'basic'}`\r\n- empty lines are skipped\r\n- lines beginning with `#` are treated as comments\r\n- `#` marks the beginning of a comment (unless when the value is wrapped in quotes)\r\n- empty values become empty strings (`EMPTY=` becomes `{EMPTY: ''}`)\r\n- inner quotes are maintained (think JSON) (`JSON={\"foo\": \"bar\"}` becomes `{JSON:\"{\\\"foo\\\": \\\"bar\\\"}\"`)\r\n- whitespace is removed from both ends of unquoted values (see more on [`trim`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim)) (`FOO=  some value  ` becomes `{FOO: 'some value'}`)\r\n- single and double quoted values are escaped (`SINGLE_QUOTE='quoted'` becomes `{SINGLE_QUOTE: \"quoted\"}`)\r\n- single and double quoted values maintain whitespace from both ends (`FOO=\"  some value  \"` becomes `{FOO: '  some value  '}`)\r\n- double quoted values expand new lines (`MULTILINE=\"new\\nline\"` becomes\r\n\r\n```\r\n{MULTILINE: 'new\r\nline'}\r\n```\r\n\r\n- backticks are supported (`` BACKTICK_KEY=`This has 'single' and \"double\" quotes inside of it.` ``)\r\n\r\n### What happens to environment variables that were already set?\r\n\r\nBy default, we will never modify any environment variables that have already been set. In particular, if there is a variable in your `.env` file which collides with one that already exists in your environment, then that variable will be skipped.\r\n\r\nIf instead, you want to override `process.env` use the `override` option.\r\n\r\n```javascript\r\nrequire('dotenv').config({ override: true })\r\n```\r\n\r\n### How come my environment variables are not showing up for React?\r\n\r\nYour React code is run in Webpack, where the `fs` module or even the `process` global itself are not accessible out-of-the-box. `process.env` can only be injected through Webpack configuration.\r\n\r\nIf you are using [`react-scripts`](https://www.npmjs.com/package/react-scripts), which is distributed through [`create-react-app`](https://create-react-app.dev/), it has dotenv built in but with a quirk. Preface your environment variables with `REACT_APP_`. See [this stack overflow](https://stackoverflow.com/questions/42182577/is-it-possible-to-use-dotenv-in-a-react-project) for more details.\r\n\r\nIf you are using other frameworks (e.g. Next.js, Gatsby...), you need to consult their documentation for how to inject environment variables into the client.\r\n\r\n### Can I customize/write plugins for dotenv?\r\n\r\nYes! `dotenv.config()` returns an object representing the parsed `.env` file. This gives you everything you need to continue setting values on `process.env`. For example:\r\n\r\n```js\r\nconst dotenv = require('dotenv')\r\nconst variableExpansion = require('dotenv-expand')\r\nconst myEnv = dotenv.config()\r\nvariableExpansion(myEnv)\r\n```\r\n\r\n### How do I use dotenv with `import`?\r\n\r\nSimply..\r\n\r\n```javascript\r\n// index.mjs (ESM)\r\nimport 'dotenv/config' // see https://github.com/motdotla/dotenv#how-do-i-use-dotenv-with-import\r\nimport express from 'express'\r\n```\r\n\r\nA little background..\r\n\r\n> When you run a module containing an `import` declaration, the modules it imports are loaded first, then each module body is executed in a depth-first traversal of the dependency graph, avoiding cycles by skipping anything already executed.\r\n>\r\n> – [ES6 In Depth: Modules](https://hacks.mozilla.org/2015/08/es6-in-depth-modules/)\r\n\r\nWhat does this mean in plain language? It means you would think the following would work but it won't.\r\n\r\n`errorReporter.mjs`:\r\n```js\r\nimport { Client } from 'best-error-reporting-service'\r\n\r\nexport default new Client(process.env.API_KEY)\r\n```\r\n`index.mjs`:\r\n```js\r\n// Note: this is INCORRECT and will not work\r\nimport * as dotenv from 'dotenv'\r\ndotenv.config()\r\n\r\nimport errorReporter from './errorReporter.mjs'\r\nerrorReporter.report(new Error('documented example'))\r\n```\r\n\r\n`process.env.API_KEY` will be blank.\r\n\r\nInstead, `index.mjs` should be written as..\r\n\r\n```js\r\nimport 'dotenv/config'\r\n\r\nimport errorReporter from './errorReporter.mjs'\r\nerrorReporter.report(new Error('documented example'))\r\n```\r\n\r\nDoes that make sense? It's a bit unintuitive, but it is how importing of ES6 modules work. Here is a [working example of this pitfall](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-es6-import-pitfall).\r\n\r\nThere are two alternatives to this approach:\r\n\r\n1. Preload dotenv: `node --require dotenv/config index.js` (_Note: you do not need to `import` dotenv with this approach_)\r\n2. Create a separate file that will execute `config` first as outlined in [this comment on #133](https://github.com/motdotla/dotenv/issues/133#issuecomment-255298822)\r\n\r\n### Why am I getting the error `Module not found: Error: Can't resolve 'crypto|os|path'`?\r\n\r\nYou are using dotenv on the front-end and have not included a polyfill. Webpack < 5 used to include these for you. Do the following:\r\n\r\n```bash\r\nnpm install node-polyfill-webpack-plugin\r\n```\r\n\r\nConfigure your `webpack.config.js` to something like the following.\r\n\r\n```js\r\nrequire('dotenv').config()\r\n\r\nconst path = require('path');\r\nconst webpack = require('webpack')\r\n\r\nconst NodePolyfillPlugin = require('node-polyfill-webpack-plugin')\r\n\r\nmodule.exports = {\r\n  mode: 'development',\r\n  entry: './src/index.ts',\r\n  output: {\r\n    filename: 'bundle.js',\r\n    path: path.resolve(__dirname, 'dist'),\r\n  },\r\n  plugins: [\r\n    new NodePolyfillPlugin(),\r\n    new webpack.DefinePlugin({\r\n      'process.env': {\r\n        HELLO: JSON.stringify(process.env.HELLO)\r\n      }\r\n    }),\r\n  ]\r\n};\r\n```\r\n\r\nAlternatively, just use [dotenv-webpack](https://github.com/mrsteele/dotenv-webpack) which does this and more behind the scenes for you.\r\n\r\n### What about variable expansion?\r\n\r\nTry [dotenv-expand](https://github.com/motdotla/dotenv-expand)\r\n\r\n### What about syncing and securing .env files?\r\n\r\nUse [dotenv-vault](https://github.com/dotenv-org/dotenv-vault)\r\n\r\n### What is a `.env.vault` file?\r\n\r\nA `.env.vault` file is an encrypted version of your development (and ci, staging, production, etc) environment variables. It is paired with a `DOTENV_KEY` to deploy your secrets more securely than scattering them across multiple platforms and tools. Use [dotenv-vault](https://github.com/dotenv-org/dotenv-vault) to manage and generate them.\r\n\r\n### What if I accidentally commit my `.env` file to code?\r\n\r\nRemove it, [remove git history](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/removing-sensitive-data-from-a-repository) and then install the [git pre-commit hook](https://github.com/dotenvx/dotenvx#pre-commit) to prevent this from ever happening again. \r\n\r\n```\r\nbrew install dotenvx/brew/dotenvx\r\ndotenvx precommit --install\r\n```\r\n\r\n### How can I prevent committing my `.env` file to a Docker build?\r\n\r\nUse the [docker prebuild hook](https://dotenvx.com/docs/features/prebuild).\r\n\r\n```bash\r\n# Dockerfile\r\n...\r\nRUN curl -fsS https://dotenvx.sh/ | sh\r\n...\r\nRUN dotenvx prebuild\r\nCMD [\"dotenvx\", \"run\", \"--\", \"node\", \"index.js\"]\r\n```\r\n\r\n## Contributing Guide\r\n\r\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\r\n\r\n## CHANGELOG\r\n\r\nSee [CHANGELOG.md](CHANGELOG.md)\r\n\r\n## Who's using dotenv?\r\n\r\n[These npm modules depend on it.](https://www.npmjs.com/browse/depended/dotenv)\r\n\r\nProjects that expand it often use the [keyword \"dotenv\" on npm](https://www.npmjs.com/search?q=keywords:dotenv).\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/dotenv/README.md b/node_modules/dotenv/README.md
--- a/node_modules/dotenv/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/dotenv/README.md	(date 1753913035722)
@@ -6,42 +6,13 @@
 
 <div align="center">
 
-<p>
-  <sup>
-    <a href="https://github.com/sponsors/motdotla">Dotenv is supported by the community.</a>
-  </sup>
-</p>
-<sup>Special thanks to:</sup>
+**Special thanks to [our sponsors](https://github.com/sponsors/motdotla)**
+
 <br>
+<a href="https://graphite.dev/?utm_source=github&utm_medium=repo&utm_campaign=dotenv"><img src="https://res.cloudinary.com/dotenv-org/image/upload/v1744035073/graphite_lgsrl8.gif" width="240" alt="Graphite" /></a>
 <br>
-<a href="https://www.warp.dev/?utm_source=github&utm_medium=referral&utm_campaign=dotenv_p_20220831">
-  <div>
-    <img src="https://res.cloudinary.com/dotenv-org/image/upload/v1661980709/warp_hi8oqj.png" width="230" alt="Warp">
-  </div>
-  <b>Warp is a blazingly fast, Rust-based terminal reimagined to work like a modern app.</b>
-  <div>
-    <sup>Get more done in the CLI with real text editing, block-based output, and AI command search.</sup>
-  </div>
-</a>
-<br>
-<a href="https://workos.com/?utm_campaign=github_repo&utm_medium=referral&utm_content=dotenv&utm_source=github">
-  <div>
-    <img src="https://res.cloudinary.com/dotenv-org/image/upload/c_scale,w_400/v1665605496/68747470733a2f2f73696e647265736f726875732e636f6d2f6173736574732f7468616e6b732f776f726b6f732d6c6f676f2d77686974652d62672e737667_zdmsbu.svg" width="270" alt="WorkOS">
-  </div>
-  <b>Your App, Enterprise Ready.</b>
-  <div>
-    <sup>Add Single Sign-On, Multi-Factor Auth, and more, in minutes instead of months.</sup>
-  </div>
-</a>
-<br/>
-<a href="https://runalloy.com/?utm_source=github&utm_medium=referral&utm_campaign=1224_dotenv">
-  <div>
-    <img src="https://res.cloudinary.com/dotenv-org/image/upload/c_crop,g_center,h_65,w_290,x_0,y_0/v1704258787/AlloyAutomation-logo_dqin8c.svg" width="370" alt="Alloy Automation">
-  </div>
-  <b>Launch user-facing integrations faster</b>
-  <div>
-    <sup>Easily spin up hundreds of integrations. Sign up free or read our docs first</sup>
-  </div>
+<a href="https://graphite.dev/?utm_source=github&utm_medium=repo&utm_campaign=dotenv">
+  <b>Graphite is the AI developer productivity platform helping teams on GitHub ship higher quality software, faster.</b>
 </a>
 <hr>
 </div>
@@ -59,7 +30,7 @@
 * [🌱 Install](#-install)
 * [🏗️ Usage (.env)](#%EF%B8%8F-usage)
 * [🌴 Multiple Environments 🆕](#-manage-multiple-environments)
-* [🚀 Deploying (.env.vault) 🆕](#-deploying)
+* [🚀 Deploying (encryption) 🆕](#-deploying)
 * [📚 Examples](#-examples)
 * [📖 Docs](#-documentation)
 * [❓ FAQ](#-faq)
@@ -68,11 +39,20 @@
 ## 🌱 Install
 
 ```bash
-# install locally (recommended)
 npm install dotenv --save
 ```
 
-Or installing with yarn? `yarn add dotenv`
+You can also use an npm-compatible package manager like yarn, bun or pnpm:
+
+```bash
+yarn add dotenv
+```
+```bash
+bun add dotenv
+```
+```bash
+pnpm add dotenv
+```
 
 ## 🏗️ Usage
 
@@ -83,7 +63,7 @@
 </div>
 </a>
 
-Create a `.env` file in the root of your project:
+Create a `.env` file in the root of your project (if using a monorepo structure like `apps/backend/app.js`, put it in the root of the folder where your `app.js` process runs):
 
 ```dosini
 S3_BUCKET="YOURS3BUCKET"
@@ -107,6 +87,7 @@
 
 ```javascript
 require('dotenv').config()
+// or import 'dotenv/config' if you're using ES6
 
 ...
 
@@ -186,23 +167,41 @@
 
 You need to add the value of another variable in one of your variables? Use [dotenv-expand](https://github.com/motdotla/dotenv-expand).
 
+### Command Substitution
+
+Use [dotenvx](https://github.com/dotenvx/dotenvx) to use command substitution.
+
+Add the output of a command to one of your variables in your .env file.
+
+```ini
+# .env
+DATABASE_URL="postgres://$(whoami)@localhost/my_database"
+```
+```js
+// index.js
+console.log('DATABASE_URL', process.env.DATABASE_URL)
+```
+```sh
+$ dotenvx run --debug -- node index.js
+[dotenvx@0.14.1] injecting env (1) from .env
+DATABASE_URL postgres://yourusername@localhost/my_database
+```
+
 ### Syncing
 
-You need to keep `.env` files in sync between machines, environments, or team members? Use [dotenv-vault](https://github.com/dotenv-org/dotenv-vault).
+You need to keep `.env` files in sync between machines, environments, or team members? Use [dotenvx](https://github.com/dotenvx/dotenvx) to encrypt your `.env` files and safely include them in source control. This still subscribes to the twelve-factor app rules by generating a decryption key separate from code.
 
 ### Multiple Environments
 
-You need to manage your secrets across different environments and apply them as needed? Use a `.env.vault` file with a `DOTENV_KEY`.
+Use [dotenvx](https://github.com/dotenvx/dotenvx) to generate `.env.ci`, `.env.production` files, and more.
 
 ### Deploying
 
-You need to deploy your secrets in a cloud-agnostic manner? Use a `.env.vault` file. See [deploying `.env.vault` files](https://github.com/motdotla/dotenv/tree/master#-deploying).
+You need to deploy your secrets in a cloud-agnostic manner? Use [dotenvx](https://github.com/dotenvx/dotenvx) to generate a private decryption key that is set on your production server.
 
 ## 🌴 Manage Multiple Environments
 
-Use [dotenvx](https://github.com/dotenvx/dotenvx) or [dotenv-vault](https://github.com/dotenv-org/dotenv-vault).
-
-### dotenvx
+Use [dotenvx](https://github.com/dotenvx/dotenvx)
 
 Run any environment locally. Create a `.env.ENVIRONMENT` file and use `--env-file` to load it. It's straightforward, yet flexible.
 
@@ -228,78 +227,23 @@
 
 [more environment examples](https://dotenvx.com/docs/quickstart/environments)
 
-### dotenv-vault
-
-Edit your production environment variables.
-
-```bash
-$ npx dotenv-vault open production
-```
-
-Regenerate your `.env.vault` file.
-
-```bash
-$ npx dotenv-vault build
-```
-
-*ℹ️  🔐 Vault Managed vs 💻 Locally Managed: The above example, for brevity's sake, used the 🔐 Vault Managed solution to manage your `.env.vault` file. You can instead use the 💻 Locally Managed solution. [Read more here](https://github.com/dotenv-org/dotenv-vault#how-do-i-use--locally-managed-dotenv-vault). Our vision is that other platforms and orchestration tools adopt the `.env.vault` standard as they did the `.env` standard. We don't expect to be the only ones providing tooling to manage and generate `.env.vault` files.*
-
-<a href="https://github.com/dotenv-org/dotenv-vault#-manage-multiple-environments">Learn more at dotenv-vault: Manage Multiple Environments</a>
-
 ## 🚀 Deploying
 
-Use [dotenvx](https://github.com/dotenvx/dotenvx) or [dotenv-vault](https://github.com/dotenv-org/dotenv-vault).
+Use [dotenvx](https://github.com/dotenvx/dotenvx).
 
-### dotenvx
+Add encryption to your `.env` files with a single command. Pass the `--encrypt` flag.
 
-Encrypt your secrets to a `.env.vault` file and load from it (recommended for production and ci).
-
-```bash
-$ echo "HELLO=World" > .env
-$ echo "HELLO=production" > .env.production
+```
+$ dotenvx set HELLO Production --encrypt -f .env.production
 $ echo "console.log('Hello ' + process.env.HELLO)" > index.js
 
-$ dotenvx encrypt
-[dotenvx][info] encrypted to .env.vault (.env,.env.production)
-[dotenvx][info] keys added to .env.keys (DOTENV_KEY_PRODUCTION,DOTENV_KEY_PRODUCTION)
-
-$ DOTENV_KEY='<dotenv_key_production>' dotenvx run -- node index.js
-[dotenvx][info] loading env (1) from encrypted .env.vault
-Hello production
-^ :-]
+$ DOTENV_PRIVATE_KEY_PRODUCTION="<.env.production private key>" dotenvx run -- node index.js
+[dotenvx] injecting env (2) from .env.production
+Hello Production
 ```
 
 [learn more](https://github.com/dotenvx/dotenvx?tab=readme-ov-file#encryption)
 
-### dotenv-vault
-
-*Note: Requires dotenv >= 16.1.0*
-
-Encrypt your `.env.vault` file.
-
-```bash
-$ npx dotenv-vault build
-```
-
-Fetch your production `DOTENV_KEY`.
-
-```bash
-$ npx dotenv-vault keys production
-```
-
-Set `DOTENV_KEY` on your server.
-
-```bash
-# heroku example
-heroku config:set DOTENV_KEY=dotenv://:key_1234…@dotenvx.com/vault/.env.vault?environment=production
-```
-
-That's it! On deploy, your `.env.vault` file will be decrypted and its secrets injected as environment variables – just in time.
-
-*ℹ️ A note from [Mot](https://github.com/motdotla): Until recently, we did not have an opinion on how and where to store your secrets in production. We now strongly recommend generating a `.env.vault` file. It's the best way to prevent your secrets from being scattered across multiple servers and cloud providers – protecting you from breaches like the [CircleCI breach](https://techcrunch.com/2023/01/05/circleci-breach/). Also it unlocks interoperability WITHOUT native third-party integrations. Third-party integrations are [increasingly risky](https://coderpad.io/blog/development/heroku-github-breach/) to our industry. They may be the 'du jour' of today, but we imagine a better future.*
-
-<a href="https://github.com/dotenv-org/dotenv-vault#-deploying">Learn more at dotenv-vault: Deploying</a>
-
 ## 📚 Examples
 
 See [examples](https://github.com/dotenv-org/examples) of using dotenv with various frameworks, languages, and configurations.
@@ -308,7 +252,6 @@
 * [nodejs (debug on)](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-nodejs-debug)
 * [nodejs (override on)](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-nodejs-override)
 * [nodejs (processEnv override)](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-custom-target)
-* [nodejs (DOTENV_KEY override)](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-vault-custom-target)
 * [esm](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-esm)
 * [esm (preload)](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-esm-preload)
 * [typescript](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-typescript)
@@ -403,26 +346,16 @@
 
 Default: `process.env`
 
-Specify an object to write your secrets to. Defaults to `process.env` environment variables.
+Specify an object to write your environment variables to. Defaults to `process.env` environment variables.
 
 ```js
 const myObject = {}
 require('dotenv').config({ processEnv: myObject })
 
-console.log(myObject) // values from .env or .env.vault live here now.
+console.log(myObject) // values from .env
 console.log(process.env) // this was not changed or written to
 ```
 
-##### DOTENV_KEY
-
-Default: `process.env.DOTENV_KEY`
-
-Pass the `DOTENV_KEY` directly to config options. Defaults to looking for `process.env.DOTENV_KEY` environment variable. Note this only applies to decrypting `.env.vault` files. If passed as null or undefined, or not passed at all, dotenv falls back to its traditional job of parsing a `.env` file.
-
-```js
-require('dotenv').config({ DOTENV_KEY: 'dotenv://:key_1234…@dotenvx.com/vault/.env.vault?environment=production' })
-```
-
 ### Parse
 
 The engine which parses the contents of your file containing environment
@@ -493,22 +426,6 @@
 
 Override any environment variables that have already been set.
 
-### Decrypt
-
-The engine which decrypts the ciphertext contents of your .env.vault file is available for use. It accepts a ciphertext and a decryption key. It uses AES-256-GCM encryption.
-
-For example, decrypting a simple ciphertext:
-
-```js
-const dotenv = require('dotenv')
-const ciphertext = 's7NYXa809k/bVSPwIAmJhPJmEGTtU0hG58hOZy7I0ix6y5HP8LsHBsZCYC/gw5DDFy5DgOcyd18R'
-const decryptionKey = 'ddcaa26504cd70a6fef9801901c3981538563a1767c297cb8416e8a38c62fe00'
-
-const decrypted = dotenv.decrypt(ciphertext, decryptionKey)
-
-console.log(decrypted) // # development@v6\nALPHA="zeta"
-```
-
 ## ❓ FAQ
 
 ### Why is the `.env` file not loading my environment variables successfully?
@@ -532,7 +449,7 @@
 
 ### Should I have multiple `.env` files?
 
-We recommend creating on `.env` file per environment. Use `.env` for local/development, `.env.production` for production and so on. This still follows the twelve factor principles as each is attributed individually to its own environment. Avoid custom set ups that work in inheritance somehow (`.env.production` inherits values form `.env` for example). It is better to duplicate values if necessary across each `.env.environment` file.
+We recommend creating one `.env` file per environment. Use `.env` for local/development, `.env.production` for production and so on. This still follows the twelve factor principles as each is attributed individually to its own environment. Avoid custom set ups that work in inheritance somehow (`.env.production` inherits values form `.env` for example). It is better to duplicate values if necessary across each `.env.environment` file.
 
 > In a twelve-factor app, env vars are granular controls, each fully orthogonal to other env vars. They are never grouped together as “environments”, but instead are independently managed for each deploy. This is a model that scales up smoothly as the app naturally expands into more deploys over its lifetime.
 >
@@ -609,7 +526,13 @@
 
 `errorReporter.mjs`:
 ```js
-import { Client } from 'best-error-reporting-service'
+class Client {
+  constructor (apiKey) {
+    console.log('apiKey', apiKey)
+
+    this.apiKey = apiKey
+  }
+}
 
 export default new Client(process.env.API_KEY)
 ```
@@ -619,8 +542,7 @@
 import * as dotenv from 'dotenv'
 dotenv.config()
 
-import errorReporter from './errorReporter.mjs'
-errorReporter.report(new Error('documented example'))
+import errorReporter from './errorReporter.mjs' // process.env.API_KEY will be blank!
 ```
 
 `process.env.API_KEY` will be blank.
@@ -631,7 +553,6 @@
 import 'dotenv/config'
 
 import errorReporter from './errorReporter.mjs'
-errorReporter.report(new Error('documented example'))
 ```
 
 Does that make sense? It's a bit unintuitive, but it is how importing of ES6 modules work. Here is a [working example of this pitfall](https://github.com/dotenv-org/examples/tree/master/usage/dotenv-es6-import-pitfall).
@@ -685,11 +606,7 @@
 
 ### What about syncing and securing .env files?
 
-Use [dotenv-vault](https://github.com/dotenv-org/dotenv-vault)
-
-### What is a `.env.vault` file?
-
-A `.env.vault` file is an encrypted version of your development (and ci, staging, production, etc) environment variables. It is paired with a `DOTENV_KEY` to deploy your secrets more securely than scattering them across multiple platforms and tools. Use [dotenv-vault](https://github.com/dotenv-org/dotenv-vault) to manage and generate them.
+Use [dotenvx](https://github.com/dotenvx/dotenvx)
 
 ### What if I accidentally commit my `.env` file to code?
 
Index: node_modules/dotenv/CHANGELOG.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Changelog\r\n\r\nAll notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.\r\n\r\n## [Unreleased](https://github.com/motdotla/dotenv/compare/v16.4.5...master)\r\n\r\n## [16.4.5](https://github.com/motdotla/dotenv/compare/v16.4.4...v16.4.5) (2024-02-19)\r\n\r\n### Changed\r\n\r\n- \uD83D\uDC1E fix recent regression when using `path` option. return to historical behavior: do not attempt to auto find `.env` if `path` set. (regression was introduced in `16.4.3`) [#814](https://github.com/motdotla/dotenv/pull/814)\r\n\r\n## [16.4.4](https://github.com/motdotla/dotenv/compare/v16.4.3...v16.4.4) (2024-02-13)\r\n\r\n### Changed\r\n\r\n- \uD83D\uDC1E Replaced chaining operator `?.` with old school `&&` (fixing node 12 failures) [#812](https://github.com/motdotla/dotenv/pull/812)\r\n\r\n## [16.4.3](https://github.com/motdotla/dotenv/compare/v16.4.2...v16.4.3) (2024-02-12)\r\n\r\n### Changed\r\n\r\n- Fixed processing of multiple files in `options.path` [#805](https://github.com/motdotla/dotenv/pull/805)\r\n\r\n## [16.4.2](https://github.com/motdotla/dotenv/compare/v16.4.1...v16.4.2) (2024-02-10)\r\n\r\n### Changed\r\n\r\n- Changed funding link in package.json to [`dotenvx.com`](https://dotenvx.com)\r\n\r\n## [16.4.1](https://github.com/motdotla/dotenv/compare/v16.4.0...v16.4.1) (2024-01-24)\r\n\r\n- Patch support for array as `path` option [#797](https://github.com/motdotla/dotenv/pull/797)\r\n\r\n## [16.4.0](https://github.com/motdotla/dotenv/compare/v16.3.2...v16.4.0) (2024-01-23)\r\n\r\n- Add `error.code` to error messages around `.env.vault` decryption handling [#795](https://github.com/motdotla/dotenv/pull/795)\r\n- Add ability to find `.env.vault` file when filename(s) passed as an array [#784](https://github.com/motdotla/dotenv/pull/784)\r\n\r\n## [16.3.2](https://github.com/motdotla/dotenv/compare/v16.3.1...v16.3.2) (2024-01-18)\r\n\r\n### Added\r\n\r\n- Add debug message when no encoding set [#735](https://github.com/motdotla/dotenv/pull/735)\r\n\r\n### Changed\r\n\r\n- Fix output typing for `populate` [#792](https://github.com/motdotla/dotenv/pull/792)\r\n- Use subarray instead of slice [#793](https://github.com/motdotla/dotenv/pull/793)\r\n\r\n## [16.3.1](https://github.com/motdotla/dotenv/compare/v16.3.0...v16.3.1) (2023-06-17)\r\n\r\n### Added\r\n\r\n- Add missing type definitions for `processEnv` and `DOTENV_KEY` options. [#756](https://github.com/motdotla/dotenv/pull/756)\r\n\r\n## [16.3.0](https://github.com/motdotla/dotenv/compare/v16.2.0...v16.3.0) (2023-06-16)\r\n\r\n### Added\r\n\r\n- Optionally pass `DOTENV_KEY` to options rather than relying on `process.env.DOTENV_KEY`. Defaults to `process.env.DOTENV_KEY` [#754](https://github.com/motdotla/dotenv/pull/754)\r\n\r\n## [16.2.0](https://github.com/motdotla/dotenv/compare/v16.1.4...v16.2.0) (2023-06-15)\r\n\r\n### Added\r\n\r\n- Optionally write to your own target object rather than `process.env`. Defaults to `process.env`. [#753](https://github.com/motdotla/dotenv/pull/753)\r\n- Add import type URL to types file [#751](https://github.com/motdotla/dotenv/pull/751)\r\n\r\n## [16.1.4](https://github.com/motdotla/dotenv/compare/v16.1.3...v16.1.4) (2023-06-04)\r\n\r\n### Added\r\n\r\n- Added `.github/` to `.npmignore` [#747](https://github.com/motdotla/dotenv/pull/747)\r\n\r\n## [16.1.3](https://github.com/motdotla/dotenv/compare/v16.1.2...v16.1.3) (2023-05-31)\r\n\r\n### Removed\r\n\r\n- Removed `browser` keys for `path`, `os`, and `crypto` in package.json. These were set to false incorrectly as of 16.1. Instead, if using dotenv on the front-end make sure to include polyfills for `path`, `os`, and `crypto`. [node-polyfill-webpack-plugin](https://github.com/Richienb/node-polyfill-webpack-plugin) provides these.\r\n\r\n## [16.1.2](https://github.com/motdotla/dotenv/compare/v16.1.1...v16.1.2) (2023-05-31)\r\n\r\n### Changed\r\n\r\n- Exposed private function `_configDotenv` as `configDotenv`. [#744](https://github.com/motdotla/dotenv/pull/744)\r\n\r\n## [16.1.1](https://github.com/motdotla/dotenv/compare/v16.1.0...v16.1.1) (2023-05-30)\r\n\r\n### Added\r\n\r\n- Added type definition for `decrypt` function\r\n\r\n### Changed\r\n\r\n- Fixed `{crypto: false}` in `packageJson.browser`\r\n\r\n## [16.1.0](https://github.com/motdotla/dotenv/compare/v16.0.3...v16.1.0) (2023-05-30)\r\n\r\n### Added\r\n\r\n- Add `populate` convenience method [#733](https://github.com/motdotla/dotenv/pull/733)\r\n- Accept URL as path option [#720](https://github.com/motdotla/dotenv/pull/720)\r\n- Add dotenv to `npm fund` command\r\n- Spanish language README [#698](https://github.com/motdotla/dotenv/pull/698)\r\n- Add `.env.vault` support. \uD83C\uDF89 ([#730](https://github.com/motdotla/dotenv/pull/730))\r\n\r\nℹ\uFE0F `.env.vault` extends the `.env` file format standard with a localized encrypted vault file. Package it securely with your production code deploys. It's cloud agnostic so that you can deploy your secrets anywhere – without [risky third-party integrations](https://techcrunch.com/2023/01/05/circleci-breach/). [read more](https://github.com/motdotla/dotenv#-deploying)\r\n\r\n### Changed\r\n\r\n- Fixed \"cannot resolve 'fs'\" error on tools like Replit [#693](https://github.com/motdotla/dotenv/pull/693)\r\n\r\n## [16.0.3](https://github.com/motdotla/dotenv/compare/v16.0.2...v16.0.3) (2022-09-29)\r\n\r\n### Changed\r\n\r\n- Added library version to debug logs ([#682](https://github.com/motdotla/dotenv/pull/682))\r\n\r\n## [16.0.2](https://github.com/motdotla/dotenv/compare/v16.0.1...v16.0.2) (2022-08-30)\r\n\r\n### Added\r\n\r\n- Export `env-options.js` and `cli-options.js` in package.json for use with downstream [dotenv-expand](https://github.com/motdotla/dotenv-expand) module\r\n\r\n## [16.0.1](https://github.com/motdotla/dotenv/compare/v16.0.0...v16.0.1) (2022-05-10)\r\n\r\n### Changed\r\n\r\n- Minor README clarifications\r\n- Development ONLY: updated devDependencies as recommended for development only security risks ([#658](https://github.com/motdotla/dotenv/pull/658))\r\n\r\n## [16.0.0](https://github.com/motdotla/dotenv/compare/v15.0.1...v16.0.0) (2022-02-02)\r\n\r\n### Added\r\n\r\n- _Breaking:_ Backtick support \uD83C\uDF89 ([#615](https://github.com/motdotla/dotenv/pull/615))\r\n\r\nIf you had values containing the backtick character, please quote those values with either single or double quotes.\r\n\r\n## [15.0.1](https://github.com/motdotla/dotenv/compare/v15.0.0...v15.0.1) (2022-02-02)\r\n\r\n### Changed\r\n\r\n- Properly parse empty single or double quoted values \uD83D\uDC1E ([#614](https://github.com/motdotla/dotenv/pull/614))\r\n\r\n## [15.0.0](https://github.com/motdotla/dotenv/compare/v14.3.2...v15.0.0) (2022-01-31)\r\n\r\n`v15.0.0` is a major new release with some important breaking changes.\r\n\r\n### Added\r\n\r\n- _Breaking:_ Multiline parsing support (just works. no need for the flag.)\r\n\r\n### Changed\r\n\r\n- _Breaking:_ `#` marks the beginning of a comment (UNLESS the value is wrapped in quotes. Please update your `.env` files to wrap in quotes any values containing `#`. For example: `SECRET_HASH=\"something-with-a-#-hash\"`).\r\n\r\n..Understandably, (as some teams have noted) this is tedious to do across the entire team. To make it less tedious, we recommend using [dotenv cli](https://github.com/dotenv-org/cli) going forward. It's an optional plugin that will keep your `.env` files in sync between machines, environments, or team members.\r\n\r\n### Removed\r\n\r\n- _Breaking:_ Remove multiline option (just works out of the box now. no need for the flag.)\r\n\r\n## [14.3.2](https://github.com/motdotla/dotenv/compare/v14.3.1...v14.3.2) (2022-01-25)\r\n\r\n### Changed\r\n\r\n- Preserve backwards compatibility on values containing `#` \uD83D\uDC1E ([#603](https://github.com/motdotla/dotenv/pull/603))\r\n\r\n## [14.3.1](https://github.com/motdotla/dotenv/compare/v14.3.0...v14.3.1) (2022-01-25)\r\n\r\n### Changed\r\n\r\n- Preserve backwards compatibility on exports by re-introducing the prior in-place exports \uD83D\uDC1E ([#606](https://github.com/motdotla/dotenv/pull/606))\r\n\r\n## [14.3.0](https://github.com/motdotla/dotenv/compare/v14.2.0...v14.3.0) (2022-01-24)\r\n\r\n### Added\r\n\r\n- Add `multiline` option \uD83C\uDF89 ([#486](https://github.com/motdotla/dotenv/pull/486))\r\n\r\n## [14.2.0](https://github.com/motdotla/dotenv/compare/v14.1.1...v14.2.0) (2022-01-17)\r\n\r\n### Added\r\n\r\n- Add `dotenv_config_override` cli option\r\n- Add `DOTENV_CONFIG_OVERRIDE` command line env option\r\n\r\n## [14.1.1](https://github.com/motdotla/dotenv/compare/v14.1.0...v14.1.1) (2022-01-17)\r\n\r\n### Added\r\n\r\n- Add React gotcha to FAQ on README\r\n\r\n## [14.1.0](https://github.com/motdotla/dotenv/compare/v14.0.1...v14.1.0) (2022-01-17)\r\n\r\n### Added\r\n\r\n- Add `override` option \uD83C\uDF89 ([#595](https://github.com/motdotla/dotenv/pull/595))\r\n\r\n## [14.0.1](https://github.com/motdotla/dotenv/compare/v14.0.0...v14.0.1) (2022-01-16)\r\n\r\n### Added\r\n\r\n- Log error on failure to load `.env` file ([#594](https://github.com/motdotla/dotenv/pull/594))\r\n\r\n## [14.0.0](https://github.com/motdotla/dotenv/compare/v13.0.1...v14.0.0) (2022-01-16)\r\n\r\n### Added\r\n\r\n- _Breaking:_ Support inline comments for the parser \uD83C\uDF89 ([#568](https://github.com/motdotla/dotenv/pull/568))\r\n\r\n## [13.0.1](https://github.com/motdotla/dotenv/compare/v13.0.0...v13.0.1) (2022-01-16)\r\n\r\n### Changed\r\n\r\n* Hide comments and newlines from debug output ([#404](https://github.com/motdotla/dotenv/pull/404))\r\n\r\n## [13.0.0](https://github.com/motdotla/dotenv/compare/v12.0.4...v13.0.0) (2022-01-16)\r\n\r\n### Added\r\n\r\n* _Breaking:_ Add type file for `config.js` ([#539](https://github.com/motdotla/dotenv/pull/539))\r\n\r\n## [12.0.4](https://github.com/motdotla/dotenv/compare/v12.0.3...v12.0.4) (2022-01-16)\r\n\r\n### Changed\r\n\r\n* README updates\r\n* Minor order adjustment to package json format\r\n\r\n## [12.0.3](https://github.com/motdotla/dotenv/compare/v12.0.2...v12.0.3) (2022-01-15)\r\n\r\n### Changed\r\n\r\n* Simplified jsdoc for consistency across editors\r\n\r\n## [12.0.2](https://github.com/motdotla/dotenv/compare/v12.0.1...v12.0.2) (2022-01-15)\r\n\r\n### Changed\r\n\r\n* Improve embedded jsdoc type documentation\r\n\r\n## [12.0.1](https://github.com/motdotla/dotenv/compare/v12.0.0...v12.0.1) (2022-01-15)\r\n\r\n### Changed\r\n\r\n* README updates and clarifications\r\n\r\n## [12.0.0](https://github.com/motdotla/dotenv/compare/v11.0.0...v12.0.0) (2022-01-15)\r\n\r\n### Removed\r\n\r\n- _Breaking:_ drop support for Flow static type checker ([#584](https://github.com/motdotla/dotenv/pull/584))\r\n\r\n### Changed\r\n\r\n- Move types/index.d.ts to lib/main.d.ts ([#585](https://github.com/motdotla/dotenv/pull/585))\r\n- Typescript cleanup ([#587](https://github.com/motdotla/dotenv/pull/587))\r\n- Explicit typescript inclusion in package.json ([#566](https://github.com/motdotla/dotenv/pull/566))\r\n\r\n## [11.0.0](https://github.com/motdotla/dotenv/compare/v10.0.0...v11.0.0) (2022-01-11)\r\n\r\n### Changed\r\n\r\n- _Breaking:_ drop support for Node v10 ([#558](https://github.com/motdotla/dotenv/pull/558))\r\n- Patch debug option ([#550](https://github.com/motdotla/dotenv/pull/550))\r\n\r\n## [10.0.0](https://github.com/motdotla/dotenv/compare/v9.0.2...v10.0.0) (2021-05-20)\r\n\r\n### Added\r\n\r\n- Add generic support to parse function\r\n- Allow for import \"dotenv/config.js\"\r\n- Add support to resolve home directory in path via ~\r\n\r\n## [9.0.2](https://github.com/motdotla/dotenv/compare/v9.0.1...v9.0.2) (2021-05-10)\r\n\r\n### Changed\r\n\r\n- Support windows newlines with debug mode\r\n\r\n## [9.0.1](https://github.com/motdotla/dotenv/compare/v9.0.0...v9.0.1) (2021-05-08)\r\n\r\n### Changed\r\n\r\n- Updates to README\r\n\r\n## [9.0.0](https://github.com/motdotla/dotenv/compare/v8.6.0...v9.0.0) (2021-05-05)\r\n\r\n### Changed\r\n\r\n- _Breaking:_ drop support for Node v8\r\n\r\n## [8.6.0](https://github.com/motdotla/dotenv/compare/v8.5.1...v8.6.0) (2021-05-05)\r\n\r\n### Added\r\n\r\n- define package.json in exports\r\n\r\n## [8.5.1](https://github.com/motdotla/dotenv/compare/v8.5.0...v8.5.1) (2021-05-05)\r\n\r\n### Changed\r\n\r\n- updated dev dependencies via npm audit\r\n\r\n## [8.5.0](https://github.com/motdotla/dotenv/compare/v8.4.0...v8.5.0) (2021-05-05)\r\n\r\n### Added\r\n\r\n- allow for `import \"dotenv/config\"`\r\n\r\n## [8.4.0](https://github.com/motdotla/dotenv/compare/v8.3.0...v8.4.0) (2021-05-05)\r\n\r\n### Changed\r\n\r\n- point to exact types file to work with VS Code\r\n\r\n## [8.3.0](https://github.com/motdotla/dotenv/compare/v8.2.0...v8.3.0) (2021-05-05)\r\n\r\n### Changed\r\n\r\n- _Breaking:_ drop support for Node v8 (mistake to be released as minor bump. later bumped to 9.0.0. see above.)\r\n\r\n## [8.2.0](https://github.com/motdotla/dotenv/compare/v8.1.0...v8.2.0) (2019-10-16)\r\n\r\n### Added\r\n\r\n- TypeScript types\r\n\r\n## [8.1.0](https://github.com/motdotla/dotenv/compare/v8.0.0...v8.1.0) (2019-08-18)\r\n\r\n### Changed\r\n\r\n- _Breaking:_ drop support for Node v6 ([#392](https://github.com/motdotla/dotenv/issues/392))\r\n\r\n# [8.0.0](https://github.com/motdotla/dotenv/compare/v7.0.0...v8.0.0) (2019-05-02)\r\n\r\n### Changed\r\n\r\n- _Breaking:_ drop support for Node v6 ([#302](https://github.com/motdotla/dotenv/issues/392))\r\n\r\n## [7.0.0] - 2019-03-12\r\n\r\n### Fixed\r\n\r\n- Fix removing unbalanced quotes ([#376](https://github.com/motdotla/dotenv/pull/376))\r\n\r\n### Removed\r\n\r\n- Removed `load` alias for `config` for consistency throughout code and documentation.\r\n\r\n## [6.2.0] - 2018-12-03\r\n\r\n### Added\r\n\r\n- Support preload configuration via environment variables ([#351](https://github.com/motdotla/dotenv/issues/351))\r\n\r\n## [6.1.0] - 2018-10-08\r\n\r\n### Added\r\n\r\n- `debug` option for `config` and `parse` methods will turn on logging\r\n\r\n## [6.0.0] - 2018-06-02\r\n\r\n### Changed\r\n\r\n- _Breaking:_ drop support for Node v4 ([#304](https://github.com/motdotla/dotenv/pull/304))\r\n\r\n## [5.0.0] - 2018-01-29\r\n\r\n### Added\r\n\r\n- Testing against Node v8 and v9\r\n- Documentation on trim behavior of values\r\n- Documentation on how to use with `import`\r\n\r\n### Changed\r\n\r\n- _Breaking_: default `path` is now `path.resolve(process.cwd(), '.env')`\r\n- _Breaking_: does not write over keys already in `process.env` if the key has a falsy value\r\n- using `const` and `let` instead of `var`\r\n\r\n### Removed\r\n\r\n- Testing against Node v7\r\n\r\n## [4.0.0] - 2016-12-23\r\n\r\n### Changed\r\n\r\n- Return Object with parsed content or error instead of false ([#165](https://github.com/motdotla/dotenv/pull/165)).\r\n\r\n### Removed\r\n\r\n- `verbose` option removed in favor of returning result.\r\n\r\n## [3.0.0] - 2016-12-20\r\n\r\n### Added\r\n\r\n- `verbose` option will log any error messages. Off by default.\r\n- parses email addresses correctly\r\n- allow importing config method directly in ES6\r\n\r\n### Changed\r\n\r\n- Suppress error messages by default ([#154](https://github.com/motdotla/dotenv/pull/154))\r\n- Ignoring more files for NPM to make package download smaller\r\n\r\n### Fixed\r\n\r\n- False positive test due to case-sensitive variable ([#124](https://github.com/motdotla/dotenv/pull/124))\r\n\r\n### Removed\r\n\r\n- `silent` option removed in favor of `verbose`\r\n\r\n## [2.0.0] - 2016-01-20\r\n\r\n### Added\r\n\r\n- CHANGELOG to [\"make it easier for users and contributors to see precisely what notable changes have been made between each release\"](http://keepachangelog.com/). Linked to from README\r\n- LICENSE to be more explicit about what was defined in `package.json`. Linked to from README\r\n- Testing nodejs v4 on travis-ci\r\n- added examples of how to use dotenv in different ways\r\n- return parsed object on success rather than boolean true\r\n\r\n### Changed\r\n\r\n- README has shorter description not referencing ruby gem since we don't have or want feature parity\r\n\r\n### Removed\r\n\r\n- Variable expansion and escaping so environment variables are encouraged to be fully orthogonal\r\n\r\n## [1.2.0] - 2015-06-20\r\n\r\n### Added\r\n\r\n- Preload hook to require dotenv without including it in your code\r\n\r\n### Changed\r\n\r\n- clarified license to be \"BSD-2-Clause\" in `package.json`\r\n\r\n### Fixed\r\n\r\n- retain spaces in string vars\r\n\r\n## [1.1.0] - 2015-03-31\r\n\r\n### Added\r\n\r\n- Silent option to silence `console.log` when `.env` missing\r\n\r\n## [1.0.0] - 2015-03-13\r\n\r\n### Removed\r\n\r\n- support for multiple `.env` files. should always use one `.env` file for the current environment\r\n\r\n[7.0.0]: https://github.com/motdotla/dotenv/compare/v6.2.0...v7.0.0\r\n[6.2.0]: https://github.com/motdotla/dotenv/compare/v6.1.0...v6.2.0\r\n[6.1.0]: https://github.com/motdotla/dotenv/compare/v6.0.0...v6.1.0\r\n[6.0.0]: https://github.com/motdotla/dotenv/compare/v5.0.0...v6.0.0\r\n[5.0.0]: https://github.com/motdotla/dotenv/compare/v4.0.0...v5.0.0\r\n[4.0.0]: https://github.com/motdotla/dotenv/compare/v3.0.0...v4.0.0\r\n[3.0.0]: https://github.com/motdotla/dotenv/compare/v2.0.0...v3.0.0\r\n[2.0.0]: https://github.com/motdotla/dotenv/compare/v1.2.0...v2.0.0\r\n[1.2.0]: https://github.com/motdotla/dotenv/compare/v1.1.0...v1.2.0\r\n[1.1.0]: https://github.com/motdotla/dotenv/compare/v1.0.0...v1.1.0\r\n[1.0.0]: https://github.com/motdotla/dotenv/compare/v0.4.0...v1.0.0\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/dotenv/CHANGELOG.md b/node_modules/dotenv/CHANGELOG.md
--- a/node_modules/dotenv/CHANGELOG.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/dotenv/CHANGELOG.md	(date 1753913035719)
@@ -2,13 +2,58 @@
 
 All notable changes to this project will be documented in this file. See [standard-version](https://github.com/conventional-changelog/standard-version) for commit guidelines.
 
-## [Unreleased](https://github.com/motdotla/dotenv/compare/v16.4.5...master)
+## [Unreleased](https://github.com/motdotla/dotenv/compare/v16.6.1...master)
+
+## [16.6.1](https://github.com/motdotla/dotenv/compare/v16.6.0...v16.6.1) (2025-06-27)
+
+### Changed
+
+- Default `quiet` to true – hiding the runtime log message ([#874](https://github.com/motdotla/dotenv/pull/874))
+- NOTICE: 17.0.0 will be released with quiet defaulting to false. Use `config({ quiet: true })` to suppress.
+- And check out the new [dotenvx](https://github.com/dotenvx/dotenvx). As coding workflows evolve and agents increasingly handle secrets, encrypted .env files offer a much safer way to deploy both agents and code together with secure secrets. Simply switch `require('dotenv').config()` for `require('@dotenvx/dotenvx').config()`.
+
+## [16.6.0](https://github.com/motdotla/dotenv/compare/v16.5.0...v16.6.0) (2025-06-26)
+
+### Added
+
+- Default log helpful message `[dotenv@16.6.0] injecting env (1) from .env` ([#870](https://github.com/motdotla/dotenv/pull/870))
+- Use `{ quiet: true }` to suppress
+- Aligns dotenv more closely with [dotenvx](https://github.com/dotenvx/dotenvx).
+
+## [16.5.0](https://github.com/motdotla/dotenv/compare/v16.4.7...v16.5.0) (2025-04-07)
+
+### Added
+
+- 🎉 Added new sponsor [Graphite](https://graphite.dev/?utm_source=github&utm_medium=repo&utm_campaign=dotenv) - *the AI developer productivity platform helping teams on GitHub ship higher quality software, faster*.
+
+> [!TIP]
+> **[Become a sponsor](https://github.com/sponsors/motdotla)**
+> 
+> The dotenvx README is viewed thousands of times DAILY on GitHub and NPM.
+> Sponsoring dotenv is a great way to get in front of developers and give back to the developer community at the same time.
+
+### Changed
+
+- Remove `_log` method. Use `_debug` [#862](https://github.com/motdotla/dotenv/pull/862)
+
+## [16.4.7](https://github.com/motdotla/dotenv/compare/v16.4.6...v16.4.7) (2024-12-03)
+
+### Changed
+
+- Ignore `.tap` folder when publishing. (oops, sorry about that everyone. - @motdotla) [#848](https://github.com/motdotla/dotenv/pull/848)
+
+## [16.4.6](https://github.com/motdotla/dotenv/compare/v16.4.5...v16.4.6) (2024-12-02)
+
+### Changed
+
+- Clean up stale dev dependencies [#847](https://github.com/motdotla/dotenv/pull/847)
+- Various README updates clarifying usage and alternative solutions using [dotenvx](https://github.com/dotenvx/dotenvx)
 
 ## [16.4.5](https://github.com/motdotla/dotenv/compare/v16.4.4...v16.4.5) (2024-02-19)
 
 ### Changed
 
-- 🐞 fix recent regression when using `path` option. return to historical behavior: do not attempt to auto find `.env` if `path` set. (regression was introduced in `16.4.3`) [#814](https://github.com/motdotla/dotenv/pull/814)
+- 🐞 Fix recent regression when using `path` option. return to historical behavior: do not attempt to auto find `.env` if `path` set. (regression was introduced in `16.4.3`) [#814](https://github.com/motdotla/dotenv/pull/814)
 
 ## [16.4.4](https://github.com/motdotla/dotenv/compare/v16.4.3...v16.4.4) (2024-02-13)
 
Index: node_modules/dotenv/README-es.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><div align=\"center\">\r\n\uD83C\uDF89 announcing <a href=\"https://github.com/dotenvx/dotenvx\">dotenvx</a>. <em>run anywhere, multi-environment, encrypted envs</em>.\r\n</div>\r\n\r\n&nbsp;\r\n\r\n<div align=\"center\">\r\n\r\n<p>\r\n  <sup>\r\n    <a href=\"https://github.com/sponsors/motdotla\">Dotenv es apoyado por la comunidad.</a>\r\n  </sup>\r\n</p>\r\n<sup>Gracias espaciales a:</sup>\r\n<br>\r\n<br>\r\n<a href=\"https://www.warp.dev/?utm_source=github&utm_medium=referral&utm_campaign=dotenv_p_20220831\">\r\n  <div>\r\n    <img src=\"https://res.cloudinary.com/dotenv-org/image/upload/v1661980709/warp_hi8oqj.png\" width=\"230\" alt=\"Warp\">\r\n  </div>\r\n  <b>Warp es una rápida e impresionante terminal basada en Rust, reinventado para funcionar como una aplicación moderna.</b>\r\n  <div>\r\n    <sup>Haga más en la CLI con edición de texto real, resultado básado en bloques, y busqueda de comandos de IA.</sup>\r\n  </div>\r\n</a>\r\n<br>\r\n<a href=\"https://retool.com/?utm_source=sponsor&utm_campaign=dotenv\">\r\n  <div>\r\n    <img src=\"https://res.cloudinary.com/dotenv-org/image/upload/c_scale,w_300/v1664466968/logo-full-black_vidfqf.png\" width=\"270\" alt=\"Retool\">\r\n  </div>\r\n  <b>Retool ayuda a los desarrolladores a crear software interno personalizado, como aplicaciones CRUD y paneles de administración, realmente rápido.</b>\r\n  <div>\r\n    <sup>Construya Interfaces de Usuario de forma visual con componentes flexibles, conéctese a cualquier fuente de datos, y escriba lógica de negocio en JavaScript.</sup>\r\n  </div>\r\n</a>\r\n<br>\r\n<a href=\"https://workos.com/?utm_campaign=github_repo&utm_medium=referral&utm_content=dotenv&utm_source=github\">\r\n  <div>\r\n    <img src=\"https://res.cloudinary.com/dotenv-org/image/upload/c_scale,w_400/v1665605496/68747470733a2f2f73696e647265736f726875732e636f6d2f6173736574732f7468616e6b732f776f726b6f732d6c6f676f2d77686974652d62672e737667_zdmsbu.svg\" width=\"270\" alt=\"WorkOS\">\r\n  </div>\r\n  <b>Su Apliación, Lista para la Empresa.</b>\r\n  <div>\r\n    <sup>Agrega Inicio de Sesión Único, Autenticación Multi-Factor, y mucho más, en minutos en lugar de meses.</sup>\r\n  </div>\r\n</a>\r\n<hr>\r\n<br>\r\n<br>\r\n<br>\r\n<br>\r\n\r\n</div>\r\n\r\n# dotenv [![NPM version](https://img.shields.io/npm/v/dotenv.svg?style=flat-square)](https://www.npmjs.com/package/dotenv)\r\n\r\n<img src=\"https://raw.githubusercontent.com/motdotla/dotenv/master/dotenv.svg\" alt=\"dotenv\" align=\"right\" width=\"200\" />\r\n\r\nDotenv es un módulo de dependencia cero que carga las variables de entorno desde un archivo `.env` en [`process.env`](https://nodejs.org/docs/latest/api/process.html#process_process_env). El almacenamiento de la configuración del entorno separado del código está basado en la metodología [The Twelve-Factor App](http://12factor.net/config).\r\n\r\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/feross/standard)\r\n[![LICENSE](https://img.shields.io/github/license/motdotla/dotenv.svg)](LICENSE)\r\n\r\n## Instalación\r\n\r\n```bash\r\n# instalación local (recomendado)\r\nnpm install dotenv --save\r\n```\r\n\r\nO installación con yarn? `yarn add dotenv`\r\n\r\n## Uso\r\n\r\nCree un archivo `.env` en la raíz de su proyecto:\r\n\r\n```dosini\r\nS3_BUCKET=\"YOURS3BUCKET\"\r\nSECRET_KEY=\"YOURSECRETKEYGOESHERE\"\r\n```\r\n\r\nTan prónto como sea posible en su aplicación, importe y configure dotenv:\r\n\r\n```javascript\r\nrequire('dotenv').config()\r\nconsole.log(process.env) // elimine esto después que haya confirmado que esta funcionando\r\n```\r\n\r\n.. o usa ES6?\r\n\r\n```javascript\r\nimport * as dotenv from 'dotenv' // vea en https://github.com/motdotla/dotenv#como-uso-dotenv-con-import\r\n// REVISAR LINK DE REFERENCIA DE IMPORTACIÓN\r\ndotenv.config()\r\nimport express from 'express'\r\n```\r\n\r\nEso es todo. `process.env` ahora tiene las claves y los valores que definiste en tu archivo `.env`:\r\n\r\n```javascript\r\nrequire('dotenv').config()\r\n\r\n...\r\n\r\ns3.getBucketCors({Bucket: process.env.S3_BUCKET}, function(err, data) {})\r\n```\r\n\r\n### Valores multilínea\r\n\r\nSi necesita variables de varias líneas, por ejemplo, claves privadas, ahora se admiten en la versión (`>= v15.0.0`) con saltos de línea:\r\n\r\n```dosini\r\nPRIVATE_KEY=\"-----BEGIN RSA PRIVATE KEY-----\r\n...\r\nKh9NV...\r\n...\r\n-----END RSA PRIVATE KEY-----\"\r\n```\r\n\r\nAlternativamente, puede usar comillas dobles y usar el carácter `\\n`:\r\n\r\n```dosini\r\nPRIVATE_KEY=\"-----BEGIN RSA PRIVATE KEY-----\\nKh9NV...\\n-----END RSA PRIVATE KEY-----\\n\"\r\n```\r\n\r\n### Comentarios\r\n\r\nLos comentarios pueden ser agregados en tu archivo o en la misma línea:\r\n\r\n```dosini\r\n# This is a comment\r\nSECRET_KEY=YOURSECRETKEYGOESHERE # comment\r\nSECRET_HASH=\"something-with-a-#-hash\"\r\n```\r\n\r\nLos comentarios comienzan donde existe un `#`, entonces, si su valor contiene un `#`, enciérrelo entre comillas. Este es un cambio importante desde la versión `>= v15.0.0` en adelante.\r\n\r\n### Análisis\r\n\r\nEl motor que analiza el contenido de su archivo que contiene variables de entorno está disponible para su uso. Este Acepta una Cadena o un Búfer y devolverá un Objeto con las claves y los valores analizados.\r\n\r\n```javascript\r\nconst dotenv = require('dotenv')\r\nconst buf = Buffer.from('BASICO=basico')\r\nconst config = dotenv.parse(buf) // devolverá un objeto\r\nconsole.log(typeof config, config) // objeto { BASICO : 'basico' }\r\n```\r\n\r\n### Precarga\r\n\r\nPuede usar el `--require` (`-r`) [opción de línea de comando](https://nodejs.org/api/cli.html#-r---require-module) para precargar dotenv. Al hacer esto, no necesita requerir ni cargar dotnev en el código de su aplicación.\r\n\r\n```bash\r\n$ node -r dotenv/config tu_script.js\r\n```\r\n\r\nLas opciones de configuración a continuación se admiten como argumentos de línea de comandos en el formato `dotenv_config_<option>=value`\r\n\r\n```bash\r\n$ node -r dotenv/config tu_script.js dotenv_config_path=/custom/path/to/.env dotenv_config_debug=true\r\n```\r\n\r\nAdemás, puede usar variables de entorno para establecer opciones de configuración. Los argumentos de línea de comandos precederán a estos.\r\n\r\n```bash\r\n$ DOTENV_CONFIG_<OPTION>=value node -r dotenv/config tu_script.js\r\n```\r\n\r\n```bash\r\n$ DOTENV_CONFIG_ENCODING=latin1 DOTENV_CONFIG_DEBUG=true node -r dotenv/config tu_script.js dotenv_config_path=/custom/path/to/.env\r\n```\r\n\r\n### Expansión Variable\r\n\r\nNecesitaras agregar el valor de otro variable en una de sus variables? Usa [dotenv-expand](https://github.com/motdotla/dotenv-expand).\r\n\r\n### Sincronizando\r\n\r\nNecesitas mentener sincronizados los archivos `.env` entre maquinas, entornos, o miembros del equipo? Usa \r\n[dotenv-vault](https://github.com/dotenv-org/dotenv-vault).\r\n\r\n## Ejemplos\r\n\r\nVea [ejemplos](https://github.com/dotenv-org/examples) sobre el uso de dotenv con varios frameworks, lenguajes y configuraciones.\r\n\r\n* [nodejs](https://github.com/dotenv-org/examples/tree/master/dotenv-nodejs)\r\n* [nodejs (depurar en)](https://github.com/dotenv-org/examples/tree/master/dotenv-nodejs-debug)\r\n* [nodejs (anular en)](https://github.com/dotenv-org/examples/tree/master/dotenv-nodejs-override)\r\n* [esm](https://github.com/dotenv-org/examples/tree/master/dotenv-esm)\r\n* [esm (precarga)](https://github.com/dotenv-org/examples/tree/master/dotenv-esm-preload)\r\n* [typescript](https://github.com/dotenv-org/examples/tree/master/dotenv-typescript)\r\n* [typescript parse](https://github.com/dotenv-org/examples/tree/master/dotenv-typescript-parse)\r\n* [typescript config](https://github.com/dotenv-org/examples/tree/master/dotenv-typescript-config)\r\n* [webpack](https://github.com/dotenv-org/examples/tree/master/dotenv-webpack)\r\n* [webpack (plugin)](https://github.com/dotenv-org/examples/tree/master/dotenv-webpack2)\r\n* [react](https://github.com/dotenv-org/examples/tree/master/dotenv-react)\r\n* [react (typescript)](https://github.com/dotenv-org/examples/tree/master/dotenv-react-typescript)\r\n* [express](https://github.com/dotenv-org/examples/tree/master/dotenv-express)\r\n* [nestjs](https://github.com/dotenv-org/examples/tree/master/dotenv-nestjs)\r\n\r\n## Documentación\r\n\r\nDotenv expone dos funciones:\r\n\r\n* `configuración`\r\n* `analizar`\r\n\r\n### Configuración\r\n\r\n`Configuración` leerá su archivo `.env`, analizará el contenido, lo asignará a [`process.env`](https://nodejs.org/docs/latest/api/process.html#process_process_env),\r\ny devolverá un Objeto con una clave `parsed` que contiene el contenido cargado o una clave `error` si falla.\r\n\r\n```js\r\nconst result = dotenv.config()\r\n\r\nif (result.error) {\r\n  throw result.error\r\n}\r\n\r\nconsole.log(result.parsed)\r\n```\r\n\r\nAdicionalmente, puede pasar opciones a `configuracion`.\r\n\r\n#### Opciones\r\n\r\n##### Ruta\r\n\r\nPor defecto: `path.resolve(process.cwd(), '.env')`\r\n\r\nEspecifique una ruta personalizada si el archivo que contiene las variables de entorno se encuentra localizado en otro lugar.\r\n\r\n```js\r\nrequire('dotenv').config({ path: '/personalizado/ruta/a/.env' })\r\n```\r\n\r\n##### Codificación\r\n\r\nPor defecto: `utf8`\r\n\r\nEspecifique la codificación del archivo que contiene las variables de entorno.\r\n\r\n```js\r\nrequire('dotenv').config({ encoding: 'latin1' })\r\n```\r\n\r\n##### Depurar\r\n\r\nPor defecto: `false`\r\n\r\nActive el registro de ayuda para depurar por qué ciertas claves o valores no se inician como lo esperabas.\r\n\r\n```js\r\nrequire('dotenv').config({ debug: process.env.DEBUG })\r\n```\r\n\r\n##### Anular\r\n\r\nPor defecto: `false`\r\n\r\nAnule cualquier variable de entorno que ya se haya configurada en su maquina con los valores de su archivo .env.\r\n\r\n```js\r\nrequire('dotenv').config({ override: true })\r\n```\r\n\r\n### Analizar\r\n\r\nEl motor que analiza el contenido del archivo que contiene las variables de entorno está disponible para su uso. Acepta una Cadena o un Búfer y retornará un objecto con los valores analizados.\r\n\r\n```js\r\nconst dotenv = require('dotenv')\r\nconst buf = Buffer.from('BASICO=basico')\r\nconst config = dotenv.parse(buf) // devolverá un objeto\r\nconsole.log(typeof config, config) // objeto { BASICO : 'basico' }\r\n```\r\n\r\n#### Opciones\r\n\r\n##### Depurar\r\n\r\nPor defecto: `false`\r\n\r\nActive el registro de ayuda para depurar por qué ciertas claves o valores no se inician como lo esperabas.\r\n\r\n```js\r\nconst dotenv = require('dotenv')\r\nconst buf = Buffer.from('hola mundo')\r\nconst opt = { debug: true }\r\nconst config = dotenv.parse(buf, opt)\r\n// espere por un mensaje de depuración porque el búfer no esta listo KEY=VAL\r\n```\r\n\r\n## FAQ\r\n\r\n### ¿Por qué el archivo `.env` no carga mis variables de entorno correctamente?\r\n\r\nLo más probable es que su archivo `.env` no esté en el lugar correcto. [Vea este stack overflow](https://stackoverflow.com/questions/42335016/dotenv-file-is-not-loading-environment-variables).\r\n\r\nActive el modo de depuración y vuelva a intentarlo...\r\n\r\n```js\r\nrequire('dotenv').config({ debug: true })\r\n```\r\n\r\nRecibirá un error apropiado en su consola.\r\n\r\n### ¿Debo confirmar mi archivo `.env`?\r\n\r\nNo. Recomendamos **enfáticamente** no enviar su archivo `.env` a la versión de control. Solo debe incluir los valores especificos del entorno, como la base de datos, contraseñas o claves API.\r\n\r\n### ¿Debería tener multiples archivos `.env`?\r\n\r\nNo. Recomendamos **enfáticamente** no tener un archivo `.env` \"principal\" y un archivo `.env` de \"entorno\" como `.env.test`. Su configuración debe variar entre implementaciones y no debe compartir valores entre entornos.\r\n\r\n> En una Aplicación de Doce Factores, las variables de entorno son controles diferenciados, cada uno totalmente independiente a otras variables de entorno. Nunca se agrupan como \"entornos\", sino que se gestionan de manera independiente para cada despliegue. Este es un modelo que se escala sin problemas a medida que la aplicación se expande de forma natural en más despliegues a lo largo de su vida.\r\n>\r\n> – [La Apliación de los Doce Factores](https://12factor.net/es/)\r\n\r\n### ¿Qué reglas sigue el motor de análisis?\r\n\r\nEl motor de análisis actualmente admite las siguientes reglas:\r\n\r\n- `BASICO=basico` se convierte en `{BASICO: 'basico'}`\r\n- las líneas vacías se saltan\r\n- las líneas que comienzan con `#` se tratan como comentarios\r\n- `#` marca el comienzo de un comentario (a menos que el valor esté entre comillas)\r\n- valores vacíos se convierten en cadenas vacías (`VACIO=` se convierte en `{VACIO: ''}`)\r\n- las comillas internas se mantienen (piensa en JSON) (`JSON={\"foo\": \"bar\"}` se convierte en `{JSON:\"{\\\"foo\\\": \\\"bar\\\"}\"`)\r\n- los espacios en blanco se eliminan de ambos extremos de los valores no citanos (aprende más en [`trim`](https://developer.mozilla.org/es/docs/Web/JavaScript/Reference/Global_Objects/String/Trim)) (`FOO=  algo ` se convierte en `{FOO: 'algo'}`)\r\n- los valores entre comillas simples y dobles se escapan (`CITA_SIMPLE='citado'` se convierte en `{CITA_SIMPLE: \"citado\"}`)\r\n- los valores entre comillas simples y dobles mantienen los espacios en blanco en ambos extremos  (`FOO=\"  algo  \"` se convierte en `{FOO: '  algo  '}`)\r\n- los valores entre comillas dobles expanden nuevas líneas (`MULTILINEA=\"nueva\\nlínea\"` se convierte en\r\n\r\n```\r\n{MULTILINEA: 'nueva\r\nlínea'}\r\n```\r\n\r\n- se admite la comilla simple invertida (`` SIGNO_ACENTO=`Esto tiene comillas 'simples' y \"dobles\" en su interior.` ``)\r\n\r\n### ¿Qué sucede con las variables de entorno que ya estaban configuradas?\r\n\r\nPor defecto, nunca modificaremos ninguna variable de entorno que ya haya sido establecida. En particular, si hay una variable en su archivo `.env` que colisiona con una que ya existe en su entorno, entonces esa variable se omitirá.\r\n\r\nSi por el contrario, quieres anular `process.env` utiliza la opción `override`.\r\n\r\n```javascript\r\nrequire('dotenv').config({ override: true })\r\n```\r\n\r\n### ¿Por qué mis variables de entorno no aparecen para React?\r\n\r\nSu código React se ejecuta en Webpack, donde el módulo `fs` o incluso el propio `process` global no son accesibles fuera-de-la-caja. El módulo `process.env` sólo puede ser inyectado a través de la configuración de Webpack.\r\n\r\nSi estás usando [`react-scripts`](https://www.npmjs.com/package/react-scripts), el cual se distribuye a través de [`create-react-app`](https://create-react-app.dev/), tiene dotenv incorporado pero con una singularidad. Escriba sus variables de entorno con `REACT_APP_`. Vea [este stack overflow](https://stackoverflow.com/questions/42182577/is-it-possible-to-use-dotenv-in-a-react-project) para más detalles.\r\n\r\nSi estás utilizando otros frameworks (por ejemplo, Next.js, Gatsby...), debes consultar su documentación para saber cómo injectar variables de entorno en el cliente.\r\n\r\n### ¿Puedo personalizar/escribir plugins para dotenv?\r\n\r\nSí! `dotenv.config()` devuelve un objeto que representa el archivo `.env` analizado. Esto te da todo lo que necesitas para poder establecer valores en `process.env`. Por ejemplo:\r\n\r\n```js\r\nconst dotenv = require('dotenv')\r\nconst variableExpansion = require('dotenv-expand')\r\nconst miEnv = dotenv.config()\r\nvariableExpansion(miEnv)\r\n```\r\n\r\n### Cómo uso dotnev con `import`?\r\n\r\nSimplemente..\r\n\r\n```javascript\r\n// index.mjs (ESM)\r\nimport * as dotenv from 'dotenv' // vea https://github.com/motdotla/dotenv#como-uso-dotenv-con-import\r\ndotenv.config()\r\nimport express from 'express'\r\n```\r\n\r\nUn poco de historia...\r\n\r\n> Cuando se ejecuta un módulo que contiene una sentencia `import`, los módulos que importa serán cargados primero, y luego se ejecuta cada bloque del módulo en un recorrido en profundidad del gráfico de dependencias, evitando los ciclos al saltarse todo lo que ya se ha ejecutado.\r\n>\r\n> – [ES6 en Profundidad: Módulos](https://hacks.mozilla.org/2015/08/es6-in-depth-modules/)\r\n\r\n¿Qué significa esto en lenguaje sencillo? Significa que se podrías pensar que lo siguiente funcionaría pero no lo hará.\r\n\r\n```js\r\n// notificarError.mjs\r\nimport { Cliente } from 'mejor-servicio-para-notificar-error'\r\n\r\nexport default new Client(process.env.CLAVE_API)\r\n\r\n// index.mjs\r\nimport dotenv from 'dotenv'\r\ndotenv.config()\r\n\r\nimport notificarError from './notificarError.mjs'\r\nnotificarError.report(new Error('ejemplo documentado'))\r\n```\r\n\r\n`process.env.CLAVE_API` será vacio.\r\n\r\nEn su lugar, el código anterior debe ser escrito como...\r\n\r\n```js\r\n// notificarError.mjs\r\nimport { Cliente } from 'mejor-servicio-para-notificar-errores'\r\n\r\nexport default new Client(process.env.CLAVE_API)\r\n\r\n// index.mjs\r\nimport * as dotenv from 'dotenv'\r\ndotenv.config()\r\n\r\nimport notificarError from './notificarError.mjs'\r\nnotificarError.report(new Error('ejemplo documentado'))\r\n```\r\n\r\n¿Esto tiene algo de sentido? Esto es poco poco intuitivo, pero es como funciona la importación de módulos en ES6. Aquí hay un ejemplo [ejemplo práctico de esta trampa](https://github.com/dotenv-org/examples/tree/master/dotenv-es6-import-pitfall).\r\n\r\nExisten dos arternativas a este planteamiento:\r\n\r\n1. Precarga dotenv: `node --require dotenv/config index.js` (_Nota: no es necesario usar `import` dotenv con este método_)\r\n2. Cree un archivo separado que ejecutará `config` primero como se describe en [este comentario #133](https://github.com/motdotla/dotenv/issues/133#issuecomment-255298822)\r\n\r\n### ¿Qué pasa con la expansión de variable?\r\n\r\nPrueba [dotenv-expand](https://github.com/motdotla/dotenv-expand)\r\n\r\n### ¿Qué pasa con la sincronización y la seguridad de los archivos .env?\r\n\r\nVea [dotenv-vault](https://github.com/dotenv-org/dotenv-vault)\r\n\r\n## Guía de contribución\r\n\r\nVea [CONTRIBUTING.md](CONTRIBUTING.md)\r\n\r\n## REGISTRO DE CAMBIOS\r\n\r\nVea [CHANGELOG.md](CHANGELOG.md)\r\n\r\n## ¿Quiénes utilizan dotenv?\r\n\r\n[Estos módulos npm dependen de él.](https://www.npmjs.com/browse/depended/dotenv)\r\n\r\nLos proyectos que lo amplían suelen utilizar la [palabra clave \"dotenv\" en npm](https://www.npmjs.com/search?q=keywords:dotenv).\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/dotenv/README-es.md b/node_modules/dotenv/README-es.md
--- a/node_modules/dotenv/README-es.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/dotenv/README-es.md	(date 1753913035721)
@@ -14,41 +14,13 @@
 <sup>Gracias espaciales a:</sup>
 <br>
 <br>
-<a href="https://www.warp.dev/?utm_source=github&utm_medium=referral&utm_campaign=dotenv_p_20220831">
-  <div>
-    <img src="https://res.cloudinary.com/dotenv-org/image/upload/v1661980709/warp_hi8oqj.png" width="230" alt="Warp">
-  </div>
-  <b>Warp es una rápida e impresionante terminal basada en Rust, reinventado para funcionar como una aplicación moderna.</b>
-  <div>
-    <sup>Haga más en la CLI con edición de texto real, resultado básado en bloques, y busqueda de comandos de IA.</sup>
-  </div>
-</a>
-<br>
-<a href="https://retool.com/?utm_source=sponsor&utm_campaign=dotenv">
-  <div>
-    <img src="https://res.cloudinary.com/dotenv-org/image/upload/c_scale,w_300/v1664466968/logo-full-black_vidfqf.png" width="270" alt="Retool">
-  </div>
-  <b>Retool ayuda a los desarrolladores a crear software interno personalizado, como aplicaciones CRUD y paneles de administración, realmente rápido.</b>
-  <div>
-    <sup>Construya Interfaces de Usuario de forma visual con componentes flexibles, conéctese a cualquier fuente de datos, y escriba lógica de negocio en JavaScript.</sup>
-  </div>
-</a>
-<br>
-<a href="https://workos.com/?utm_campaign=github_repo&utm_medium=referral&utm_content=dotenv&utm_source=github">
-  <div>
-    <img src="https://res.cloudinary.com/dotenv-org/image/upload/c_scale,w_400/v1665605496/68747470733a2f2f73696e647265736f726875732e636f6d2f6173736574732f7468616e6b732f776f726b6f732d6c6f676f2d77686974652d62672e737667_zdmsbu.svg" width="270" alt="WorkOS">
-  </div>
-  <b>Su Apliación, Lista para la Empresa.</b>
-  <div>
-    <sup>Agrega Inicio de Sesión Único, Autenticación Multi-Factor, y mucho más, en minutos en lugar de meses.</sup>
-  </div>
+
+<a href="https://graphite.dev/?utm_source=github&utm_medium=repo&utm_campaign=dotenv"><img src="https://res.cloudinary.com/dotenv-org/image/upload/v1744035073/graphite_lgsrl8.gif" width="240" alt="Graphite" /></a>
+
+<a href="https://graphite.dev/?utm_source=github&utm_medium=repo&utm_campaign=dotenv">
+  <b>Graphite is the AI developer productivity platform helping teams on GitHub ship higher quality software, faster.</b>
 </a>
 <hr>
-<br>
-<br>
-<br>
-<br>
-
 </div>
 
 # dotenv [![NPM version](https://img.shields.io/npm/v/dotenv.svg?style=flat-square)](https://www.npmjs.com/package/dotenv)
@@ -173,11 +145,6 @@
 
 Necesitaras agregar el valor de otro variable en una de sus variables? Usa [dotenv-expand](https://github.com/motdotla/dotenv-expand).
 
-### Sincronizando
-
-Necesitas mentener sincronizados los archivos `.env` entre maquinas, entornos, o miembros del equipo? Usa 
-[dotenv-vault](https://github.com/dotenv-org/dotenv-vault).
-
 ## Ejemplos
 
 Vea [ejemplos](https://github.com/dotenv-org/examples) sobre el uso de dotenv con varios frameworks, lenguajes y configuraciones.
@@ -429,10 +396,6 @@
 
 Prueba [dotenv-expand](https://github.com/motdotla/dotenv-expand)
 
-### ¿Qué pasa con la sincronización y la seguridad de los archivos .env?
-
-Vea [dotenv-vault](https://github.com/dotenv-org/dotenv-vault)
-
 ## Guía de contribución
 
 Vea [CONTRIBUTING.md](CONTRIBUTING.md)
Index: node_modules/dotenv/lib/cli-options.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const re = /^dotenv_config_(encoding|path|debug|override|DOTENV_KEY)=(.+)$/\r\n\r\nmodule.exports = function optionMatcher (args) {\r\n  return args.reduce(function (acc, cur) {\r\n    const matches = cur.match(re)\r\n    if (matches) {\r\n      acc[matches[1]] = matches[2]\r\n    }\r\n    return acc\r\n  }, {})\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/dotenv/lib/cli-options.js b/node_modules/dotenv/lib/cli-options.js
--- a/node_modules/dotenv/lib/cli-options.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/dotenv/lib/cli-options.js	(date 1753913035712)
@@ -1,11 +1,17 @@
-const re = /^dotenv_config_(encoding|path|debug|override|DOTENV_KEY)=(.+)$/
+const re = /^dotenv_config_(encoding|path|quiet|debug|override|DOTENV_KEY)=(.+)$/
 
 module.exports = function optionMatcher (args) {
-  return args.reduce(function (acc, cur) {
+  const options = args.reduce(function (acc, cur) {
     const matches = cur.match(re)
     if (matches) {
       acc[matches[1]] = matches[2]
     }
     return acc
   }, {})
+
+  if (!('quiet' in options)) {
+    options.quiet = 'true'
+  }
+
+  return options
 }
Index: node_modules/dotenv/lib/env-options.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// ../config.js accepts options via environment variables\r\nconst options = {}\r\n\r\nif (process.env.DOTENV_CONFIG_ENCODING != null) {\r\n  options.encoding = process.env.DOTENV_CONFIG_ENCODING\r\n}\r\n\r\nif (process.env.DOTENV_CONFIG_PATH != null) {\r\n  options.path = process.env.DOTENV_CONFIG_PATH\r\n}\r\n\r\nif (process.env.DOTENV_CONFIG_DEBUG != null) {\r\n  options.debug = process.env.DOTENV_CONFIG_DEBUG\r\n}\r\n\r\nif (process.env.DOTENV_CONFIG_OVERRIDE != null) {\r\n  options.override = process.env.DOTENV_CONFIG_OVERRIDE\r\n}\r\n\r\nif (process.env.DOTENV_CONFIG_DOTENV_KEY != null) {\r\n  options.DOTENV_KEY = process.env.DOTENV_CONFIG_DOTENV_KEY\r\n}\r\n\r\nmodule.exports = options\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/dotenv/lib/env-options.js b/node_modules/dotenv/lib/env-options.js
--- a/node_modules/dotenv/lib/env-options.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/dotenv/lib/env-options.js	(date 1753913035716)
@@ -9,6 +9,10 @@
   options.path = process.env.DOTENV_CONFIG_PATH
 }
 
+if (process.env.DOTENV_CONFIG_QUIET != null) {
+  options.quiet = process.env.DOTENV_CONFIG_QUIET
+}
+
 if (process.env.DOTENV_CONFIG_DEBUG != null) {
   options.debug = process.env.DOTENV_CONFIG_DEBUG
 }
Index: node_modules/merge-descriptors/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"merge-descriptors\",\r\n  \"description\": \"Merge objects using descriptors\",\r\n  \"version\": \"1.0.1\",\r\n  \"author\": {\r\n    \"name\": \"Jonathan Ong\",\r\n    \"email\": \"me@jongleberry.com\",\r\n    \"url\": \"http://jongleberry.com\",\r\n    \"twitter\": \"https://twitter.com/jongleberry\"\r\n  },\r\n  \"contributors\": [\r\n    \"Douglas Christopher Wilson <doug@somethingdoug.com>\",\r\n    \"Mike Grabowski <grabbou@gmail.com>\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"repository\": \"component/merge-descriptors\",\r\n  \"devDependencies\": {\r\n    \"istanbul\": \"0.4.1\",\r\n    \"mocha\": \"1.21.5\"\r\n  },\r\n  \"files\": [\r\n    \"HISTORY.md\",\r\n    \"LICENSE\",\r\n    \"README.md\",\r\n    \"index.js\"\r\n  ],\r\n  \"scripts\": {\r\n    \"test\": \"mocha --reporter spec --bail --check-leaks test/\",\r\n    \"test-ci\": \"istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/\",\r\n    \"test-cov\": \"istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/merge-descriptors/package.json b/node_modules/merge-descriptors/package.json
--- a/node_modules/merge-descriptors/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/merge-descriptors/package.json	(date 1753913035503)
@@ -1,7 +1,7 @@
 {
   "name": "merge-descriptors",
   "description": "Merge objects using descriptors",
-  "version": "1.0.1",
+  "version": "1.0.3",
   "author": {
     "name": "Jonathan Ong",
     "email": "me@jongleberry.com",
@@ -13,10 +13,17 @@
     "Mike Grabowski <grabbou@gmail.com>"
   ],
   "license": "MIT",
-  "repository": "component/merge-descriptors",
+  "repository": "sindresorhus/merge-descriptors",
+  "funding": "https://github.com/sponsors/sindresorhus",
   "devDependencies": {
-    "istanbul": "0.4.1",
-    "mocha": "1.21.5"
+    "eslint": "5.9.0",
+    "eslint-config-standard": "12.0.0",
+    "eslint-plugin-import": "2.14.0",
+    "eslint-plugin-node": "7.0.1",
+    "eslint-plugin-promise": "4.0.1",
+    "eslint-plugin-standard": "4.0.0",
+    "mocha": "5.2.0",
+    "nyc": "13.1.0"
   },
   "files": [
     "HISTORY.md",
@@ -25,8 +32,8 @@
     "index.js"
   ],
   "scripts": {
-    "test": "mocha --reporter spec --bail --check-leaks test/",
-    "test-ci": "istanbul cover node_modules/mocha/bin/_mocha --report lcovonly -- --reporter spec --check-leaks test/",
-    "test-cov": "istanbul cover node_modules/mocha/bin/_mocha -- --reporter dot --check-leaks test/"
+    "lint": "eslint .",
+    "test": "mocha test/",
+    "test-cov": "nyc --reporter=html --reporter=text npm test"
   }
 }
Index: node_modules/dotenv/lib/main.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const fs = require('fs')\r\nconst path = require('path')\r\nconst os = require('os')\r\nconst crypto = require('crypto')\r\nconst packageJson = require('../package.json')\r\n\r\nconst version = packageJson.version\r\n\r\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\r\n\r\n// Parse src into an Object\r\nfunction parse (src) {\r\n  const obj = {}\r\n\r\n  // Convert buffer to string\r\n  let lines = src.toString()\r\n\r\n  // Convert line breaks to same format\r\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\r\n\r\n  let match\r\n  while ((match = LINE.exec(lines)) != null) {\r\n    const key = match[1]\r\n\r\n    // Default undefined or null to empty string\r\n    let value = (match[2] || '')\r\n\r\n    // Remove whitespace\r\n    value = value.trim()\r\n\r\n    // Check if double quoted\r\n    const maybeQuote = value[0]\r\n\r\n    // Remove surrounding quotes\r\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\r\n\r\n    // Expand newlines if double quoted\r\n    if (maybeQuote === '\"') {\r\n      value = value.replace(/\\\\n/g, '\\n')\r\n      value = value.replace(/\\\\r/g, '\\r')\r\n    }\r\n\r\n    // Add to object\r\n    obj[key] = value\r\n  }\r\n\r\n  return obj\r\n}\r\n\r\nfunction _parseVault (options) {\r\n  const vaultPath = _vaultPath(options)\r\n\r\n  // Parse .env.vault\r\n  const result = DotenvModule.configDotenv({ path: vaultPath })\r\n  if (!result.parsed) {\r\n    const err = new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`)\r\n    err.code = 'MISSING_DATA'\r\n    throw err\r\n  }\r\n\r\n  // handle scenario for comma separated keys - for use with key rotation\r\n  // example: DOTENV_KEY=\"dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=prod,dotenv://:key_7890@dotenvx.com/vault/.env.vault?environment=prod\"\r\n  const keys = _dotenvKey(options).split(',')\r\n  const length = keys.length\r\n\r\n  let decrypted\r\n  for (let i = 0; i < length; i++) {\r\n    try {\r\n      // Get full key\r\n      const key = keys[i].trim()\r\n\r\n      // Get instructions for decrypt\r\n      const attrs = _instructions(result, key)\r\n\r\n      // Decrypt\r\n      decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key)\r\n\r\n      break\r\n    } catch (error) {\r\n      // last key\r\n      if (i + 1 >= length) {\r\n        throw error\r\n      }\r\n      // try next key\r\n    }\r\n  }\r\n\r\n  // Parse decrypted .env string\r\n  return DotenvModule.parse(decrypted)\r\n}\r\n\r\nfunction _log (message) {\r\n  console.log(`[dotenv@${version}][INFO] ${message}`)\r\n}\r\n\r\nfunction _warn (message) {\r\n  console.log(`[dotenv@${version}][WARN] ${message}`)\r\n}\r\n\r\nfunction _debug (message) {\r\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\r\n}\r\n\r\nfunction _dotenvKey (options) {\r\n  // prioritize developer directly setting options.DOTENV_KEY\r\n  if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {\r\n    return options.DOTENV_KEY\r\n  }\r\n\r\n  // secondary infra already contains a DOTENV_KEY environment variable\r\n  if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {\r\n    return process.env.DOTENV_KEY\r\n  }\r\n\r\n  // fallback to empty string\r\n  return ''\r\n}\r\n\r\nfunction _instructions (result, dotenvKey) {\r\n  // Parse DOTENV_KEY. Format is a URI\r\n  let uri\r\n  try {\r\n    uri = new URL(dotenvKey)\r\n  } catch (error) {\r\n    if (error.code === 'ERR_INVALID_URL') {\r\n      const err = new Error('INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development')\r\n      err.code = 'INVALID_DOTENV_KEY'\r\n      throw err\r\n    }\r\n\r\n    throw error\r\n  }\r\n\r\n  // Get decrypt key\r\n  const key = uri.password\r\n  if (!key) {\r\n    const err = new Error('INVALID_DOTENV_KEY: Missing key part')\r\n    err.code = 'INVALID_DOTENV_KEY'\r\n    throw err\r\n  }\r\n\r\n  // Get environment\r\n  const environment = uri.searchParams.get('environment')\r\n  if (!environment) {\r\n    const err = new Error('INVALID_DOTENV_KEY: Missing environment part')\r\n    err.code = 'INVALID_DOTENV_KEY'\r\n    throw err\r\n  }\r\n\r\n  // Get ciphertext payload\r\n  const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`\r\n  const ciphertext = result.parsed[environmentKey] // DOTENV_VAULT_PRODUCTION\r\n  if (!ciphertext) {\r\n    const err = new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`)\r\n    err.code = 'NOT_FOUND_DOTENV_ENVIRONMENT'\r\n    throw err\r\n  }\r\n\r\n  return { ciphertext, key }\r\n}\r\n\r\nfunction _vaultPath (options) {\r\n  let possibleVaultPath = null\r\n\r\n  if (options && options.path && options.path.length > 0) {\r\n    if (Array.isArray(options.path)) {\r\n      for (const filepath of options.path) {\r\n        if (fs.existsSync(filepath)) {\r\n          possibleVaultPath = filepath.endsWith('.vault') ? filepath : `${filepath}.vault`\r\n        }\r\n      }\r\n    } else {\r\n      possibleVaultPath = options.path.endsWith('.vault') ? options.path : `${options.path}.vault`\r\n    }\r\n  } else {\r\n    possibleVaultPath = path.resolve(process.cwd(), '.env.vault')\r\n  }\r\n\r\n  if (fs.existsSync(possibleVaultPath)) {\r\n    return possibleVaultPath\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nfunction _resolveHome (envPath) {\r\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\r\n}\r\n\r\nfunction _configVault (options) {\r\n  _log('Loading env from encrypted .env.vault')\r\n\r\n  const parsed = DotenvModule._parseVault(options)\r\n\r\n  let processEnv = process.env\r\n  if (options && options.processEnv != null) {\r\n    processEnv = options.processEnv\r\n  }\r\n\r\n  DotenvModule.populate(processEnv, parsed, options)\r\n\r\n  return { parsed }\r\n}\r\n\r\nfunction configDotenv (options) {\r\n  const dotenvPath = path.resolve(process.cwd(), '.env')\r\n  let encoding = 'utf8'\r\n  const debug = Boolean(options && options.debug)\r\n\r\n  if (options && options.encoding) {\r\n    encoding = options.encoding\r\n  } else {\r\n    if (debug) {\r\n      _debug('No encoding is specified. UTF-8 is used by default')\r\n    }\r\n  }\r\n\r\n  let optionPaths = [dotenvPath] // default, look for .env\r\n  if (options && options.path) {\r\n    if (!Array.isArray(options.path)) {\r\n      optionPaths = [_resolveHome(options.path)]\r\n    } else {\r\n      optionPaths = [] // reset default\r\n      for (const filepath of options.path) {\r\n        optionPaths.push(_resolveHome(filepath))\r\n      }\r\n    }\r\n  }\r\n\r\n  // Build the parsed data in a temporary object (because we need to return it).  Once we have the final\r\n  // parsed data, we will combine it with process.env (or options.processEnv if provided).\r\n  let lastError\r\n  const parsedAll = {}\r\n  for (const path of optionPaths) {\r\n    try {\r\n      // Specifying an encoding returns a string instead of a buffer\r\n      const parsed = DotenvModule.parse(fs.readFileSync(path, { encoding }))\r\n\r\n      DotenvModule.populate(parsedAll, parsed, options)\r\n    } catch (e) {\r\n      if (debug) {\r\n        _debug(`Failed to load ${path} ${e.message}`)\r\n      }\r\n      lastError = e\r\n    }\r\n  }\r\n\r\n  let processEnv = process.env\r\n  if (options && options.processEnv != null) {\r\n    processEnv = options.processEnv\r\n  }\r\n\r\n  DotenvModule.populate(processEnv, parsedAll, options)\r\n\r\n  if (lastError) {\r\n    return { parsed: parsedAll, error: lastError }\r\n  } else {\r\n    return { parsed: parsedAll }\r\n  }\r\n}\r\n\r\n// Populates process.env from .env file\r\nfunction config (options) {\r\n  // fallback to original dotenv if DOTENV_KEY is not set\r\n  if (_dotenvKey(options).length === 0) {\r\n    return DotenvModule.configDotenv(options)\r\n  }\r\n\r\n  const vaultPath = _vaultPath(options)\r\n\r\n  // dotenvKey exists but .env.vault file does not exist\r\n  if (!vaultPath) {\r\n    _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`)\r\n\r\n    return DotenvModule.configDotenv(options)\r\n  }\r\n\r\n  return DotenvModule._configVault(options)\r\n}\r\n\r\nfunction decrypt (encrypted, keyStr) {\r\n  const key = Buffer.from(keyStr.slice(-64), 'hex')\r\n  let ciphertext = Buffer.from(encrypted, 'base64')\r\n\r\n  const nonce = ciphertext.subarray(0, 12)\r\n  const authTag = ciphertext.subarray(-16)\r\n  ciphertext = ciphertext.subarray(12, -16)\r\n\r\n  try {\r\n    const aesgcm = crypto.createDecipheriv('aes-256-gcm', key, nonce)\r\n    aesgcm.setAuthTag(authTag)\r\n    return `${aesgcm.update(ciphertext)}${aesgcm.final()}`\r\n  } catch (error) {\r\n    const isRange = error instanceof RangeError\r\n    const invalidKeyLength = error.message === 'Invalid key length'\r\n    const decryptionFailed = error.message === 'Unsupported state or unable to authenticate data'\r\n\r\n    if (isRange || invalidKeyLength) {\r\n      const err = new Error('INVALID_DOTENV_KEY: It must be 64 characters long (or more)')\r\n      err.code = 'INVALID_DOTENV_KEY'\r\n      throw err\r\n    } else if (decryptionFailed) {\r\n      const err = new Error('DECRYPTION_FAILED: Please check your DOTENV_KEY')\r\n      err.code = 'DECRYPTION_FAILED'\r\n      throw err\r\n    } else {\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\n// Populate process.env with parsed values\r\nfunction populate (processEnv, parsed, options = {}) {\r\n  const debug = Boolean(options && options.debug)\r\n  const override = Boolean(options && options.override)\r\n\r\n  if (typeof parsed !== 'object') {\r\n    const err = new Error('OBJECT_REQUIRED: Please check the processEnv argument being passed to populate')\r\n    err.code = 'OBJECT_REQUIRED'\r\n    throw err\r\n  }\r\n\r\n  // Set process.env\r\n  for (const key of Object.keys(parsed)) {\r\n    if (Object.prototype.hasOwnProperty.call(processEnv, key)) {\r\n      if (override === true) {\r\n        processEnv[key] = parsed[key]\r\n      }\r\n\r\n      if (debug) {\r\n        if (override === true) {\r\n          _debug(`\"${key}\" is already defined and WAS overwritten`)\r\n        } else {\r\n          _debug(`\"${key}\" is already defined and was NOT overwritten`)\r\n        }\r\n      }\r\n    } else {\r\n      processEnv[key] = parsed[key]\r\n    }\r\n  }\r\n}\r\n\r\nconst DotenvModule = {\r\n  configDotenv,\r\n  _configVault,\r\n  _parseVault,\r\n  config,\r\n  decrypt,\r\n  parse,\r\n  populate\r\n}\r\n\r\nmodule.exports.configDotenv = DotenvModule.configDotenv\r\nmodule.exports._configVault = DotenvModule._configVault\r\nmodule.exports._parseVault = DotenvModule._parseVault\r\nmodule.exports.config = DotenvModule.config\r\nmodule.exports.decrypt = DotenvModule.decrypt\r\nmodule.exports.parse = DotenvModule.parse\r\nmodule.exports.populate = DotenvModule.populate\r\n\r\nmodule.exports = DotenvModule\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/dotenv/lib/main.js b/node_modules/dotenv/lib/main.js
--- a/node_modules/dotenv/lib/main.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/dotenv/lib/main.js	(date 1753913035717)
@@ -48,10 +48,11 @@
 }
 
 function _parseVault (options) {
+  options = options || {}
+
   const vaultPath = _vaultPath(options)
-
-  // Parse .env.vault
-  const result = DotenvModule.configDotenv({ path: vaultPath })
+  options.path = vaultPath // parse .env.vault
+  const result = DotenvModule.configDotenv(options)
   if (!result.parsed) {
     const err = new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`)
     err.code = 'MISSING_DATA'
@@ -89,10 +90,6 @@
   return DotenvModule.parse(decrypted)
 }
 
-function _log (message) {
-  console.log(`[dotenv@${version}][INFO] ${message}`)
-}
-
 function _warn (message) {
   console.log(`[dotenv@${version}][WARN] ${message}`)
 }
@@ -101,6 +98,10 @@
   console.log(`[dotenv@${version}][DEBUG] ${message}`)
 }
 
+function _log (message) {
+  console.log(`[dotenv@${version}] ${message}`)
+}
+
 function _dotenvKey (options) {
   // prioritize developer directly setting options.DOTENV_KEY
   if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {
@@ -188,7 +189,12 @@
 }
 
 function _configVault (options) {
-  _log('Loading env from encrypted .env.vault')
+  const debug = Boolean(options && options.debug)
+  const quiet = options && 'quiet' in options ? options.quiet : true
+
+  if (debug || !quiet) {
+    _log('Loading env from encrypted .env.vault')
+  }
 
   const parsed = DotenvModule._parseVault(options)
 
@@ -206,6 +212,7 @@
   const dotenvPath = path.resolve(process.cwd(), '.env')
   let encoding = 'utf8'
   const debug = Boolean(options && options.debug)
+  const quiet = options && 'quiet' in options ? options.quiet : true
 
   if (options && options.encoding) {
     encoding = options.encoding
@@ -252,6 +259,24 @@
 
   DotenvModule.populate(processEnv, parsedAll, options)
 
+  if (debug || !quiet) {
+    const keysCount = Object.keys(parsedAll).length
+    const shortPaths = []
+    for (const filePath of optionPaths) {
+      try {
+        const relative = path.relative(process.cwd(), filePath)
+        shortPaths.push(relative)
+      } catch (e) {
+        if (debug) {
+          _debug(`Failed to load ${filePath} ${e.message}`)
+        }
+        lastError = e
+      }
+    }
+
+    _log(`injecting env (${keysCount}) from ${shortPaths.join(',')}`)
+  }
+
   if (lastError) {
     return { parsed: parsedAll, error: lastError }
   } else {
Index: node_modules/merge-descriptors/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Merge Descriptors\r\n\r\n[![NPM Version][npm-image]][npm-url]\r\n[![NPM Downloads][downloads-image]][downloads-url]\r\n[![Build Status][travis-image]][travis-url]\r\n[![Test Coverage][coveralls-image]][coveralls-url]\r\n\r\nMerge objects using descriptors.\r\n\r\n```js\r\nvar thing = {\r\n  get name() {\r\n    return 'jon'\r\n  }\r\n}\r\n\r\nvar animal = {\r\n\r\n}\r\n\r\nmerge(animal, thing)\r\n\r\nanimal.name === 'jon'\r\n```\r\n\r\n## API\r\n\r\n### merge(destination, source)\r\n\r\nRedefines `destination`'s descriptors with `source`'s.\r\n\r\n### merge(destination, source, false)\r\n\r\nDefines `source`'s descriptors on `destination` if `destination` does not have\r\na descriptor by the same name.\r\n\r\n## License\r\n\r\n[MIT](LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/merge-descriptors.svg\r\n[npm-url]: https://npmjs.org/package/merge-descriptors\r\n[travis-image]: https://img.shields.io/travis/component/merge-descriptors/master.svg\r\n[travis-url]: https://travis-ci.org/component/merge-descriptors\r\n[coveralls-image]: https://img.shields.io/coveralls/component/merge-descriptors/master.svg\r\n[coveralls-url]: https://coveralls.io/r/component/merge-descriptors?branch=master\r\n[downloads-image]: https://img.shields.io/npm/dm/merge-descriptors.svg\r\n[downloads-url]: https://npmjs.org/package/merge-descriptors\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/merge-descriptors/README.md b/node_modules/merge-descriptors/README.md
--- a/node_modules/merge-descriptors/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/merge-descriptors/README.md	(date 1753913035509)
@@ -1,4 +1,4 @@
-# Merge Descriptors
+# merge-descriptors
 
 [![NPM Version][npm-image]][npm-url]
 [![NPM Downloads][downloads-image]][downloads-url]
@@ -27,12 +27,13 @@
 
 ### merge(destination, source)
 
-Redefines `destination`'s descriptors with `source`'s.
+Redefines `destination`'s descriptors with `source`'s. The return value is the
+`destination` object.
 
 ### merge(destination, source, false)
 
 Defines `source`'s descriptors on `destination` if `destination` does not have
-a descriptor by the same name.
+a descriptor by the same name. The return value is the `destination` object.
 
 ## License
 
Index: node_modules/merge-descriptors/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*!\r\n * merge-descriptors\r\n * Copyright(c) 2014 Jonathan Ong\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = merge\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty\r\n\r\n/**\r\n * Merge the property descriptors of `src` into `dest`\r\n *\r\n * @param {object} dest Object to add descriptors to\r\n * @param {object} src Object to clone descriptors from\r\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\r\n * @returns {object} Reference to dest\r\n * @public\r\n */\r\n\r\nfunction merge(dest, src, redefine) {\r\n  if (!dest) {\r\n    throw new TypeError('argument dest is required')\r\n  }\r\n\r\n  if (!src) {\r\n    throw new TypeError('argument src is required')\r\n  }\r\n\r\n  if (redefine === undefined) {\r\n    // Default to true\r\n    redefine = true\r\n  }\r\n\r\n  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {\r\n    if (!redefine && hasOwnProperty.call(dest, name)) {\r\n      // Skip desriptor\r\n      return\r\n    }\r\n\r\n    // Copy descriptor\r\n    var descriptor = Object.getOwnPropertyDescriptor(src, name)\r\n    Object.defineProperty(dest, name, descriptor)\r\n  })\r\n\r\n  return dest\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/merge-descriptors/index.js b/node_modules/merge-descriptors/index.js
--- a/node_modules/merge-descriptors/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/merge-descriptors/index.js	(date 1753913035502)
@@ -31,7 +31,7 @@
  * @public
  */
 
-function merge(dest, src, redefine) {
+function merge (dest, src, redefine) {
   if (!dest) {
     throw new TypeError('argument dest is required')
   }
@@ -45,9 +45,9 @@
     redefine = true
   }
 
-  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {
+  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName (name) {
     if (!redefine && hasOwnProperty.call(dest, name)) {
-      // Skip desriptor
+      // Skip descriptor
       return
     }
 
Index: node_modules/postgresql-client/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>## postgresql-client\r\n  \r\n[![NPM Version][npm-image]][npm-url]\r\n[![NPM Downloads][downloads-image]][downloads-url]\r\n[![CircleCI][circleci-image]][circleci-url]\r\n[![Test Coverage][coveralls-image]][coveralls-url]\r\n\r\n\r\nEnterprise level PostgreSQL client for NodeJs\r\n\r\n\r\n## Library\r\n\r\n- Pure JavaScript library completely written in TypeScript\r\n- Works with both CommonJS and ESM module systems\r\n- Well tested\r\n- Strictly typed\r\n- Asynchronous Promise based api\r\n\r\n## Features\r\n\r\n- Both single connection and advanced pooling support\r\n- Full binary wire protocol support for all data types\r\n- Named Prepared Statements\r\n- Cursors with fast double-link cache\r\n- High level implementation for notifications (LISTEN/NOTIFY)\r\n- Extensible data-types and type mapping\r\n- Bind parameters with OID mappings\r\n- Multidimensional arrays with fast binary encoding/decoding\r\n- Low memory utilization and boosted performance with Shared Buffers\r\n- Supports Clear text, MD5 and SASL password algorithms\r\n- Can return both array and object rows\r\n- Auto disposal with \"using\" syntax ([TC30 Explicit Resource Management](https://github.com/tc39/proposal-explicit-resource-management))\r\n\r\n\r\n## Installation\r\n\r\n```bash\r\n$ npm install postgresql-client --save\r\n```\r\n\r\n## Documentation\r\nPlease read :small_orange_diamond: [DOCUMENTATION](DOCUMENTATION.md) :small_orange_diamond: for detailed usage.\r\n\r\n## Example usage\r\n\r\n### Establish a single connection, execute a simple query\r\n\r\n```ts\r\nimport {Connection} from 'postgresql-client';\r\n// Create connection\r\nconst connection = new Connection('postgres://localhost');\r\n// Connect to database server\r\nawait connection.connect();\r\n\r\n// Execute query and fetch rows\r\nconst result = await connection.query(\r\n    'select * from cities where name like $1',\r\n    {params: ['%york%']});\r\nconst rows: any[] = result.rows;\r\n// Do what ever you want with rows\r\n\r\n// Disconnect from server\r\nawait connection.close(); \r\n```\r\n\r\n### Establish a pooled connection, create a cursor\r\n```ts\r\nimport {Pool} from 'postgresql-client';\r\n\r\n// Create connection pool\r\nconst db = new Pool({\r\n    host: 'postgres://localhost',\r\n    pool: {\r\n       min: 1,\r\n       max: 10,\r\n       idleTimeoutMillis: 5000\r\n    }\r\n});\r\n\r\n// Execute query and fetch cursor\r\nconst result = await db.query(\r\n    'select * from cities where name like $1',\r\n    {params: ['%york%'], cursor: true});\r\n\r\n// Walk through the cursor, and do whatever you want with fetched rows\r\nconst cursor = result.cursor;\r\nlet row;\r\nwhile ((row = await cursor.next())) {\r\n  console.log(row);\r\n}\r\n// Close cursor, (Send connection back to the pool)\r\nawait cursor.close();\r\n\r\n// Disconnect all connections and shutdown pool\r\nawait db.close(); \r\n```\r\n\r\n### Using prepared statements\r\n```ts\r\nimport {DataTypeOIDs} from 'postgresql-client'; \r\n\r\n// .....\r\nconst statement = await connection.prepare( \r\n    'insert into my_table(id, name) values ($1, $2)', {\r\n        paramTypes: [DataTypeOIDs.Int4, DataTypeOIDs.Varchar]\r\n    });\r\n\r\nfor (let i = 0; i < 100; i++) {\r\n    await statement.execute({params: [i, ('name' + i)]});\r\n}\r\nawait statement.close(); // When you done, close the statement to relase resources\r\n```\r\n\r\n#### Check [DOCUMENTATION](DOCUMENTATION.md) for other examples.\r\n\r\n\r\n\r\n## Type mappings\r\nThe table below lists builtin data type mappings.\r\n\r\n| Posgtres type | JS type     | Receive     | Send   | \r\n|---------------|:------------|-------------|--------|\r\n| bool          | boolean     | text,binary | binary | \r\n| int2          | number      | text,binary | binary | \r\n| int4          | number      | text,binary | binary | \r\n| int8          | BigInt      | text,binary | binary | \r\n| float4        | number      | text,binary | binary | \r\n| float8        | number      | text,binary | binary | \r\n| char          | string      | text,binary | binary | \r\n| bpchar        | string      | text,binary | binary | \r\n| varchar       | string      | text,binary | binary | \r\n| date          | Date        | text,binary | binary | \r\n| time          | Date        | text,binary | binary | \r\n| timestamp     | Date        | text,binary | binary | \r\n| timestamptz   | Date        | text,binary | binary | \r\n| oid           | number      | text,binary | binary | \r\n| bytea         | Buffer      | text,binary | binary | \r\n| uuid          | string      | text,binary | binary | \r\n| json          | object      | text,binary | binary | \r\n| jsonb         | object      | text,binary | binary | \r\n| xml           | string      | text,binary | binary | \r\n| point         | Point       | text,binary | binary | \r\n| circle        | Circle      | text,binary | binary | \r\n| lseg          | Rectangle   | text,binary | binary | \r\n| box           | Rectangle   | text,binary | binary | \r\n| int2Vector    | number[]    | text,binary | binary | \r\n| _bool         | boolean[]   | text,binary | binary | \r\n| _int2         | number[]    | text,binary | binary | \r\n| _int4         | number[]    | text,binary | binary | \r\n| _int8         | BigInt[]    | text,binary | binary | \r\n| _float4       | number[]    | text,binary | binary | \r\n| _float8       | number[]    | text,binary | binary | \r\n| _char         | string[]    | text,binary | binary | \r\n| _bpchar       | string[]    | text,binary | binary | \r\n| _varchar      | string[]    | text,binary | binary | \r\n| _date         | Date[]      | text,binary | binary | \r\n| _time         | Date[]      | text,binary | binary | \r\n| _timestamp    | Date[]      | text,binary | binary | \r\n| _timestamptz  | Date[]      | text,binary | binary | \r\n| _uuid         | string[]    | text,binary | binary | \r\n| _oid          | number[]    | text,binary | binary | \r\n| _bytea        | Buffer[]    | text,binary | binary | \r\n| _json         | object[]    | text,binary | binary | \r\n| _jsonb        | object[]    | text,binary | binary | \r\n| _xml          | string[]    | text,binary | binary | \r\n| _point        | Point[]     | text,binary | binary | \r\n| _circle       | Circle[]    | text,binary | binary | \r\n| _lseg         | Rectangle[] | text,binary | binary | \r\n| _box          | Rectangle[] | text,binary | binary | \r\n| _int2Vector   | number[][]  | text,binary | binary | \r\n\r\n\r\n## Support\r\nYou can report bugs and discuss features on the [GitHub issues](https://github.com/panates/postgresql-client/issues) page\r\nWhen you open an issue please provide version of NodeJS and PostgreSQL server.\r\n\r\n## Node Compatibility\r\n- node >= 14.x\r\n \r\n  \r\n## License\r\npostgresql-client is available under [MIT](LICENSE) license.\r\n\r\n[npm-image]: https://img.shields.io/npm/v/postgresql-client\r\n[npm-url]: https://npmjs.org/package/postgresql-client\r\n[circleci-image]: https://circleci.com/gh/panates/postgresql-client/tree/master.svg?style=shield\r\n[circleci-url]: https://circleci.com/gh/panates/postgresql-client/tree/master\r\n[coveralls-image]: https://img.shields.io/coveralls/panates/postgresql-client/master.svg\r\n[coveralls-url]: https://coveralls.io/r/panates/postgresql-client\r\n[downloads-image]: https://img.shields.io/npm/dm/postgresql-client.svg\r\n[downloads-url]: https://npmjs.org/package/postgresql-client\r\n[gitter-image]: https://badges.gitter.im/panates/postgresql-client.svg\r\n[gitter-url]: https://gitter.im/panates/postgresql-client?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\r\n[dependencies-image]: https://david-dm.org/panates/postgresql-client/status.svg\r\n[dependencies-url]:https://david-dm.org/panates/postgresql-client\r\n[devdependencies-image]: https://david-dm.org/panates/postgresql-client/dev-status.svg\r\n[devdependencies-url]:https://david-dm.org/panates/postgresql-client?type=dev\r\n[quality-image]: http://npm.packagequality.com/shield/postgresql-client.png\r\n[quality-url]: http://packagequality.com/#?package=postgresql-client\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/postgresql-client/README.md b/node_modules/postgresql-client/README.md
--- a/node_modules/postgresql-client/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/postgresql-client/README.md	(date 1753913034990)
@@ -1,3 +1,7 @@
+> Warning!!: The name of the package has been changed to `postgrejs`(https://www.npmjs.com/package/postgrejs)
+> and repository has been moved to (https://github.com/panates/postgrejs)
+> Please consider to update dependencies in your package.json
+
 ## postgresql-client
   
 [![NPM Version][npm-image]][npm-url]
@@ -176,7 +180,7 @@
 When you open an issue please provide version of NodeJS and PostgreSQL server.
 
 ## Node Compatibility
-- node >= 14.x
+- node >= 16.x
  
   
 ## License
Index: node_modules/postgresql-client/CHANGELOG.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># v2.11.0\r\n[2024-04-23]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`9dcf2c2`](https://github.com/panates/postgresql-client/commit/9dcf2c2957621aefb0a1f9f3da66877c4d7382bf))\r\n* Implement TC39 Explicit Resource Management proposal ([`cd5efa4`](https://github.com/panates/postgresql-client/commit/cd5efa4377d3e7c0d9eb795d3db0fbc7a1bf2943))\r\n* Implement TC39 Explicit Resource Management proposal ([`d3df6f4`](https://github.com/panates/postgresql-client/commit/d3df6f496beca807ede191968806debcec631dbf))\r\n\r\n# v2.10.7\r\n[2024-04-22]\r\n\r\n### Changes\r\n\r\n* Added prettier formatting ([`5e157f5`](https://github.com/panates/postgresql-client/commit/5e157f5cdc145df1abc2c0eb641563638af93af9))\r\n* Remove developer content from the README and into CONTRIBUTING.md ([`58c2ce8`](https://github.com/panates/postgresql-client/commit/58c2ce8c3f4e643b3bb984ad73666dd5fd40d729))\r\n* Add basic documentation on running the test suite. Add rimraf as dependency since its referenced by the scripts. Update the lockfile. Start to prepare for proper prettier formatting ([`4ca7b54`](https://github.com/panates/postgresql-client/commit/4ca7b54c970601ee9f11839bae91ce7fb3a2ea8d))\r\n* Added prettier formatting ([`250673e`](https://github.com/panates/postgresql-client/commit/250673e51c840e1fdfd4f9f79db5400af70b7d64))\r\n* Added prettier formatting ([`289c40c`](https://github.com/panates/postgresql-client/commit/289c40c1d65da55c56d814054d38715fa48a78f9))\r\n* Added prettier formatting ([`9d02a3f`](https://github.com/panates/postgresql-client/commit/9d02a3f3a53f784fd7a3b917a2cef3e355638c20))\r\n* Expose DatabaseError ([`5f1bbd2`](https://github.com/panates/postgresql-client/commit/5f1bbd2ab2ad69a836e7a53ef92ecffcc352e46b))\r\n* Remove duplicated root in .editorconfig ([`a514ad5`](https://github.com/panates/postgresql-client/commit/a514ad52f09ad92ade5b83ed599ccf1832b424ea))\r\n* Use the README.md from master ([`ac3f7b8`](https://github.com/panates/postgresql-client/commit/ac3f7b831c4a515d2a0db74f53cb481d651a0200))\r\n* Added prettier formatting ([`0e0a521`](https://github.com/panates/postgresql-client/commit/0e0a521435aae1c67ceeb27f13af6cc49066c2ad))\r\n\r\n# v2.10.6\r\n[2024-03-14]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`e0cf321`](https://github.com/panates/postgresql-client/commit/e0cf321f593f72580ba6dda14c104efedd8cad52))\r\n* Updated dependencies ([`f723f8f`](https://github.com/panates/postgresql-client/commit/f723f8fe7cc39746ba36f5ead791b78c184423aa))\r\n\r\n# v2.10.5\r\n[2024-01-15]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`f7b0db8`](https://github.com/panates/postgresql-client/commit/f7b0db8701f73d482e3b2bc3128fbfb646c5f6a6))\r\n\r\n# v2.10.4\r\n[2024-01-12]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`efc17f2`](https://github.com/panates/postgresql-client/commit/efc17f292bc1d24de518cc5529e8a7aa383ad641))\r\n\r\n# v2.10.3\r\n[2024-01-12]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`b1ec82a`](https://github.com/panates/postgresql-client/commit/b1ec82a3967dfa789583248c2d9096c40c333601))\r\n* Minor typing change ([`f036aa8`](https://github.com/panates/postgresql-client/commit/f036aa833d8b973fd5e1cc8d229cac4b199a5c48))\r\n\r\n# v2.10.2\r\n[2024-01-08]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`33a8272`](https://github.com/panates/postgresql-client/commit/33a8272de6c51dbf29ea658a6d2a6436555513e1))\r\n\r\n# v2.10.1\r\n[2023-11-09]\r\n\r\n### Changes\r\n\r\n* Fixed: Some times server response invalid message to prepare statement message. ([`bb7a0c8`](https://github.com/panates/postgresql-client/commit/bb7a0c8e2074120a2062e585183480b52677756e))\r\n\r\n# v2.10.0\r\n[2023-11-09]\r\n\r\n### Changes\r\n\r\n* Fixed: Error stack do not show caller function. ([`08a1a8f`](https://github.com/panates/postgresql-client/commit/08a1a8f4141b0066ae084de4f2a31d9d7e1bd4b9))\r\n* Improved error message handling for more understandable to humans. ([`d9bbcb0`](https://github.com/panates/postgresql-client/commit/d9bbcb0b1c10ab11816bc907d2b62977831d6082))\r\n\r\n# v2.9.1\r\n[2023-10-03]\r\n\r\n### Changes\r\n\r\n* Added int2Vector data type with binary protocol ([`94a9a3b`](https://github.com/panates/postgresql-client/commit/94a9a3b3a9e10ce7bdbce132c9195826ecc7aec1))\r\n\r\n# v2.9.0\r\n[2023-10-03]\r\n\r\n### Changes\r\n\r\n* Added int2Vector data type with binary protocol ([`55bd87e`](https://github.com/panates/postgresql-client/commit/55bd87e38a2ed1787957c1066ba51857d6c97c5d))\r\n* Support int2 and oid vector types ([`ce27006`](https://github.com/panates/postgresql-client/commit/ce27006bb7441d004fd251bd6af29c4e99836b01))\r\n* Add OID for tid array ([`d99e3ee`](https://github.com/panates/postgresql-client/commit/d99e3ee1e7fc768931553240adb556f003428ebd))\r\n\r\n# v2.8.1\r\n[2023-10-03]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`51998d4`](https://github.com/panates/postgresql-client/commit/51998d496cc84d721bf267ba29e8dda3c520fea7))\r\n* Updated dependencies ([`7faed1a`](https://github.com/panates/postgresql-client/commit/7faed1a68149b82399d951df6f0e0f1c54cd1798))\r\n* Add ability to configure buffer size ([`30d18c6`](https://github.com/panates/postgresql-client/commit/30d18c6afeb3b973eaa640f772ed791ec0707bb0))\r\n* Minor fix for logging ([`1af9e94`](https://github.com/panates/postgresql-client/commit/1af9e946018e9605882c13a85120793a65c1fada))\r\n\r\n# v2.8.0\r\n[2023-09-24]\r\n\r\n### Changes\r\n\r\n* Add ability to configure buffer size ([`34d822a`](https://github.com/panates/postgresql-client/commit/34d822a7b3a302d3a8b4b406586c3ce123cac97b))\r\n* Updated config ([`8792c63`](https://github.com/panates/postgresql-client/commit/8792c631eff7798edb1a76524acfce49e28d7593))\r\n* Updated node versions ([`7fb18dc`](https://github.com/panates/postgresql-client/commit/7fb18dc0f208ec609ebddd84d0a3ea5db4c8534a))\r\n* Updated config ([`31dab8b`](https://github.com/panates/postgresql-client/commit/31dab8b08ac5b6d5977bb89d47de60e964e09b52))\r\n* Updated node versions ([`17692ca`](https://github.com/panates/postgresql-client/commit/17692ca11cf4e440afe53b8a1bcd96041b36f352))\r\n* Updated config ([`9c5f20c`](https://github.com/panates/postgresql-client/commit/9c5f20c8e0a83633eaa66dd438d4cee3d93846a7))\r\n* Updated node versions ([`49c6eac`](https://github.com/panates/postgresql-client/commit/49c6eacd56815f969f0aabce3b41c67369e10d27))\r\n\r\n# v2.7.2\r\n[2023-09-10]\r\n\r\n### Fixes\r\n\r\n* Fix: Make concurrency explicit, prevents power-tasks from invoking os.cpus ([`20038b0`](https://github.com/panates/postgresql-client/commit/20038b034eabf35cdf57eb0c7c72097f66d6b4c4))\r\n\r\n### Changes\r\n\r\n* Updated badge url ([`b9335ed`](https://github.com/panates/postgresql-client/commit/b9335ed40a8cc4fadee4fe90e3287a48f0978cf3))\r\n\r\n# v2.7.1\r\n[2023-08-03]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`114ffb9`](https://github.com/panates/postgresql-client/commit/114ffb94e38dfc96fcc3c57d95807036f0c50045))\r\n* Fallback to \"unknown\" IOD, if can't determine data type ([`b0807e3`](https://github.com/panates/postgresql-client/commit/b0807e38af758a29c5a1fb5db4af24dd1f5c9dfb))\r\n* Export SmartBuffer fully ([`8fca283`](https://github.com/panates/postgresql-client/commit/8fca283bc3fa9be0653297f858e1ede652456289))\r\n\r\n# v2.7.0\r\n[2023-08-01]\r\n\r\n### Changes\r\n\r\n* Restructure files according to current Panates standards ([`58875b3`](https://github.com/panates/postgresql-client/commit/58875b364c58b8b5e5ddac55373dd70ad5639bd0))\r\n* Renames DatabaseConnectionParams.onErrorRollback to rollbackOnError ([`dc50fb1`](https://github.com/panates/postgresql-client/commit/dc50fb1ee3b9975f188af60b7f3fed5f8d089fcc))\r\n\r\n# v2.6.1\r\n[2023-08-01]\r\n\r\n### Changes\r\n\r\n* Now DataTypeMap.determine method lookup for data-types in reverse order. So last registered data-type returns first. ([`f2a20eb`](https://github.com/panates/postgresql-client/commit/f2a20eb9a0eba5ebfd3e8f26d427469d71b1c041))\r\n* Now DataTypeMap.determine method lookup for data-types in reverse order. So last registered data-type returns first. ([`0f8cbc8`](https://github.com/panates/postgresql-client/commit/0f8cbc809c24ca712e94ab21d2c2624e35a8b059))\r\n* Now DataTypeMap.determine method lookup for data-types in reverse order. So last registered data-type returns first. ([`e1918c3`](https://github.com/panates/postgresql-client/commit/e1918c3d9bd2cea6a084474d987df18b62b8b239))\r\n\r\n# v2.6.0\r\n[2023-08-01]\r\n\r\n### Changes\r\n\r\n* Not DataTypeMap.determine method lookup for data-types in reverse order. So last registered data-type returns first. ([`759ff85`](https://github.com/panates/postgresql-client/commit/759ff85ceaf0c5d119656b6b61d6450420c19fbc))\r\n* Fixed typing for new eslint rules ([`95f3914`](https://github.com/panates/postgresql-client/commit/95f3914f61d4883b68d4b131f6200b08fc8e2478))\r\n* Fixed typing for new eslint rules ([`f6e0d11`](https://github.com/panates/postgresql-client/commit/f6e0d11041616ee243a95062a4e9d581d5406d62))\r\n\r\n# v2.5.10\r\n[2023-07-26]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`2a21190`](https://github.com/panates/postgresql-client/commit/2a21190d2db2f70a1bbffb6cc77a8d9dc62b7636))\r\n* Added code of conduct document ([`9a64826`](https://github.com/panates/postgresql-client/commit/9a6482677ba23fb6ca850f5357a7e169218c7efd))\r\n* Updated config ([`9655d4f`](https://github.com/panates/postgresql-client/commit/9655d4f222af21b889a7a9f5070530f8ea6bcd95))\r\n\r\n# v2.5.9\r\n[2023-05-17]\r\n\r\n### Changes\r\n\r\n* Fixed missing files.\"typings\" ([`eabb616`](https://github.com/panates/postgresql-client/commit/eabb616a54831ca245d6157452737a6484167d0b))\r\n\r\n# v2.5.8\r\n[2023-05-17]\r\n\r\n### Changes\r\n\r\n* Optimized build ([`e8305f9`](https://github.com/panates/postgresql-client/commit/e8305f9da79a64484d5edc2cd0fe43c4ff7b2fa2))\r\n\r\n# v2.5.7\r\n[2023-05-16]\r\n\r\n### Changes\r\n\r\n* Optimized build ([`17d029b`](https://github.com/panates/postgresql-client/commit/17d029be5d799bab2cf49ba5258b978b20c0d52f))\r\n\r\n# v2.5.6\r\n[2023-05-16]\r\n\r\n### Changes\r\n\r\n* Removed vulnerable \"debug\" package ([`019b3f4`](https://github.com/panates/postgresql-client/commit/019b3f48955c62a9c764462b16cd52be8cf22ae2))\r\n* Updated dependencies ([`afce5f7`](https://github.com/panates/postgresql-client/commit/afce5f735d241869e6ae937cb67b6378e70fb6d0))\r\n* Fixed examples for cursor usage ([`5971341`](https://github.com/panates/postgresql-client/commit/5971341edf1c7ce363ddcb3adb97b2491bf7714d))\r\n* Updated config ([`6edd12e`](https://github.com/panates/postgresql-client/commit/6edd12e902ac3f5f2f4784626edce151bf5eb569))\r\n\r\n# v2.5.5\r\n[2023-02-22]\r\n\r\n### Changes\r\n\r\n* Added auto changelog generation ([`0c7fc22`](https://github.com/panates/postgresql-client/commit/0c7fc22f299363a8425835c11d4f6f4eeb64a9ea))\r\n* Updated examples ([`94e092a`](https://github.com/panates/postgresql-client/commit/94e092ade4e664b040bb85517eac4c61f8baeee4))\r\n* Added auto changelog generation ([`1ed1194`](https://github.com/panates/postgresql-client/commit/1ed119481ee3a5ccdd841691812f6042fab2cb5a))\r\n\r\n# v2.5.3\r\n[2023-02-20]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`b278e88`](https://github.com/panates/postgresql-client/commit/b278e88a2cfdcf9467d20b3d9257607eddb731e1))\r\n* Updated dependencies ([`b8501a2`](https://github.com/panates/postgresql-client/commit/b8501a2e5a73f0449de3e5373a1b559455af1051))\r\n\r\n# v2.5.2\r\n[2022-12-02]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`20abfde`](https://github.com/panates/postgresql-client/commit/20abfdedb3dd3fa213f6cb66e00c132607deccb9))\r\n\r\n# v2.5.1\r\n[2022-10-05]\r\n\r\n### Changes\r\n\r\n* Updated documentation ([`38093f6`](https://github.com/panates/postgresql-client/commit/38093f67924eaf7a3710e08ed5bc91f84fd3920f))\r\n* Added LISTEN/NOTIFY feature ([`73cb33b`](https://github.com/panates/postgresql-client/commit/73cb33b41d0bc3515e71b5e0ff7ace68b9f4720b))\r\n\r\n# v2.5.0\r\n[2022-10-04]\r\n\r\n### Changes\r\n\r\n* Added LISTEN/NOTIFY feature ([`f0ac754`](https://github.com/panates/postgresql-client/commit/f0ac754657da2f95977da6081f8c4265e83ba1b5))\r\n\r\n# v2.4.1\r\n[2022-09-23]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`bebcd28`](https://github.com/panates/postgresql-client/commit/bebcd283a045720f51a74f51e8258492af4c3790))\r\n\r\n# v2.4.0\r\n[2022-09-22]\r\n\r\n### Changes\r\n\r\n* Fixed exports for multi module support ([`e40dabe`](https://github.com/panates/postgresql-client/commit/e40dabe8064dc89f3a468b00e5c623f4277d68c1))\r\n\r\n# v2.3.0\r\n[2022-09-17]\r\n\r\n### Changes\r\n\r\n* Updated lightning-pool to v4.0 ([`4ae3adf`](https://github.com/panates/postgresql-client/commit/4ae3adf1e4600a7977c24c4d6903193b97e908da))\r\n\r\n# v2.2.0\r\n[2022-09-17]\r\n\r\n### Changes\r\n\r\n* Updated eslint and jest ([`229d394`](https://github.com/panates/postgresql-client/commit/229d394b3a956844c0a36665fa44edf3acda9bd3))\r\n\r\n# v2.1.5\r\n[2022-08-29]\r\n\r\n### Changes\r\n\r\n* Updated eslint config ([`5ad54ee`](https://github.com/panates/postgresql-client/commit/5ad54eeea34cb87d744a405afe21d15eb7357bd7))\r\n\r\n# v2.1.4\r\n[2022-07-06]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`15ad62c`](https://github.com/panates/postgresql-client/commit/15ad62c53dee3562576537da36325bd7b69ae144))\r\n* Updated readme ([`145afed`](https://github.com/panates/postgresql-client/commit/145afed77f278648d48ca8b0d2aaf44e5887e07a))\r\n* Fixed typing ([`70a7076`](https://github.com/panates/postgresql-client/commit/70a707672caf735d412cb0debe9661a69b8d688f))\r\n\r\n# v2.1.3\r\n[2022-06-28]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`8cef3fa`](https://github.com/panates/postgresql-client/commit/8cef3fafce9e4051ebad350494f78417f7846361))\r\n\r\n# v2.1.2\r\n[2022-06-24]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`ddeb02c`](https://github.com/panates/postgresql-client/commit/ddeb02c43c12994eab31b100aa8f25c949172565))\r\n\r\n# v2.1.1\r\n[2022-06-21]\r\n\r\n### Changes\r\n\r\n* Added prettier code style ([`c0b732e`](https://github.com/panates/postgresql-client/commit/c0b732e65400e5be844f157f5710694e1d9ebf1b))\r\n* Moved prettier to devDependencies ([`eecec11`](https://github.com/panates/postgresql-client/commit/eecec113f5d0752a90755952ad044b29f6ddbbd8))\r\n\r\n# v2.1.0\r\n[2022-06-21]\r\n\r\n### Changes\r\n\r\n* Added .js extensions to import statements for esm module support ([`dd884f1`](https://github.com/panates/postgresql-client/commit/dd884f1258abb47716a82edf6d2b945b89ef3160))\r\n* Moved from putil-taskqueue to power-tasks ([`7782551`](https://github.com/panates/postgresql-client/commit/7782551725f3441d590c6802c9812d38704d89a6))\r\n* Added husky git hooks ([`d61fc2a`](https://github.com/panates/postgresql-client/commit/d61fc2a0e540aad420f9b5ff4887cb6d0c609596))\r\n\r\n# v2.0.4\r\n[2022-06-17]\r\n\r\n### Changes\r\n\r\n* Update dependencies ([`4b34c8b`](https://github.com/panates/postgresql-client/commit/4b34c8be303062b2ef419bbc77e1d802b34ab4d2))\r\n\r\n# v2.0.3\r\n[2022-05-28]\r\n\r\n### Changes\r\n\r\n* Update dependencies ([`b2ee542`](https://github.com/panates/postgresql-client/commit/b2ee5423c58afd967eb90598977fa3bdc897920b))\r\n\r\n# v2.0.2\r\n[2022-05-11]\r\n\r\n### Changes\r\n\r\n* Added json casting for object values ([`b95766a`](https://github.com/panates/postgresql-client/commit/b95766a3f6362fb7dfa5c453df8fc76bcf46a295))\r\n\r\n# v2.0.1\r\n[2022-05-08]\r\n\r\n### Changes\r\n\r\n* Updated dependencies and documentation ([`f7f93d6`](https://github.com/panates/postgresql-client/commit/f7f93d6b3f869ef9f7517983f5489931c6c9b10d))\r\n* Updated config ([`9fa5d12`](https://github.com/panates/postgresql-client/commit/9fa5d12aac07842f1f9f4f0ff51a31dbe674b423))\r\n* Updated dependencies and documentation ([`120e7b5`](https://github.com/panates/postgresql-client/commit/120e7b505f86c10ede34df1f8291c77b8be66e10))\r\n* Fixed cover script ([`ff3dbef`](https://github.com/panates/postgresql-client/commit/ff3dbef2da974d08558475a9550778d70b8db4cc))\r\n* Updated config ([`a18fe16`](https://github.com/panates/postgresql-client/commit/a18fe169a79544ecb9e00b2186aa7f64b52cdb24))\r\n\r\n# v2.0.0\r\n[2022-03-03]\r\n\r\n### Changes\r\n\r\n* Added jsonb data type support ([`9b77962`](https://github.com/panates/postgresql-client/commit/9b77962d892887798def53f5b58ebb5c9573e0e0))\r\n* Added ESM module support ([`97857e3`](https://github.com/panates/postgresql-client/commit/97857e3925099e62d52d3dd6edf076015579fa95))\r\n* Updated dependencies ([`f8be711`](https://github.com/panates/postgresql-client/commit/f8be711c067233c41bd33d595b8630c6cbda1048))\r\n* Update issue templates ([`f84ec38`](https://github.com/panates/postgresql-client/commit/f84ec389e17925a41c1f70da4aba606173ddd90d))\r\n* Updated dependencies ([`b43ae89`](https://github.com/panates/postgresql-client/commit/b43ae89c616615b622a462d2a0c112001943856a))\r\n* Added ESM module support ([`a710889`](https://github.com/panates/postgresql-client/commit/a7108898204f7f464927ba56a84f590bc42f7fa3))\r\n\r\n# v1.21.6\r\n[2022-02-22]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`b8f05e2`](https://github.com/panates/postgresql-client/commit/b8f05e2fd1d1600461373ccc51a131e4ff772b34))\r\n\r\n# v1.21.5\r\n[2022-01-03]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`66da42d`](https://github.com/panates/postgresql-client/commit/66da42d1db31aa4009467366c1b7285fbef6cf54))\r\n\r\n# v1.21.4\r\n[2021-12-13]\r\n\r\n### Changes\r\n\r\n* Updated readme ([`d5af7cd`](https://github.com/panates/postgresql-client/commit/d5af7cdf315d9b549df79d05c077a0037b03509a))\r\n\r\n# v1.21.3\r\n[2021-12-13]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`20fc14c`](https://github.com/panates/postgresql-client/commit/20fc14ced4e5a3158d91faf7158dc81d7ca650e6))\r\n\r\n# v1.21.2\r\n[2021-10-12]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`80474a3`](https://github.com/panates/postgresql-client/commit/80474a397cda00bce583268f05f57bd31ea9c2b2))\r\n* Updated dependencies ([`68cdfed`](https://github.com/panates/postgresql-client/commit/68cdfed3966bdc9d4c88c9cc57053197cfc47cd1))\r\n\r\n# v1.21.1\r\n[2021-10-02]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`5b4638b`](https://github.com/panates/postgresql-client/commit/5b4638b198c6d68a1cf8f601c9e15965990bb917))\r\n* Fixed: float numbers are recognized as bigint ([`1c19df4`](https://github.com/panates/postgresql-client/commit/1c19df4a6054af51ac49ce22320167072c81c689))\r\n\r\n# v1.21.0\r\n[2021-09-23]\r\n\r\n### Changes\r\n\r\n* + Added releaseSavepoint() method ([`9fc61c9`](https://github.com/panates/postgresql-client/commit/9fc61c9b5fe5215239bfb6374d7661cb11b7b142))\r\n\r\n# v1.20.0\r\n[2021-09-21]\r\n\r\n# v1.19.0\r\n[2021-09-21]\r\n\r\n### Changes\r\n\r\n* + Added onErrorRollback functionality for better transaction management ([`f92b65b`](https://github.com/panates/postgresql-client/commit/f92b65b0422e6861edf728dcbd1504be9bd01e34))\r\n\r\n# v1.18.4\r\n[2021-09-14]\r\n\r\n### Changes\r\n\r\n* Fixed: Needs type casting of uuid[] types ([`b6b1b45`](https://github.com/panates/postgresql-client/commit/b6b1b4578346c49d00922a104ca6c251b0dffed6))\r\n\r\n# v1.18.3\r\n[2021-09-08]\r\n\r\n### Changes\r\n\r\n* Fixed invalid constructing of DatabaseError ([`e904539`](https://github.com/panates/postgresql-client/commit/e90453959b570ad2206415455c8f2b844e69ce85))\r\n\r\n# v1.18.2\r\n[2021-09-07]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`27d747f`](https://github.com/panates/postgresql-client/commit/27d747f2f77ec6da677bda3ce2dff362671d985a))\r\n\r\n# v1.18.1\r\n[2021-08-11]\r\n\r\n### Changes\r\n\r\n* Fixed database error properties exists in parent msg object. ([`6d5ad49`](https://github.com/panates/postgresql-client/commit/6d5ad49cea90b272419d532262c8a9e87070ac51))\r\n\r\n# v1.18.0\r\n[2021-08-01]\r\n\r\n# v1.17.0\r\n[2021-08-01]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`5e6a902`](https://github.com/panates/postgresql-client/commit/5e6a902ae7cac3da89cf887f5b56d4d179504c27))\r\n* Added lineNr, colNr and line properties to DatabaseError ([`950bfb0`](https://github.com/panates/postgresql-client/commit/950bfb0a945a2662150bc2cb4a9be6ead29e2762))\r\n\r\n# v1.16.7\r\n[2021-07-03]\r\n\r\n### Changes\r\n\r\n* Fixed: throws \"operator does not exist: integer = json\" if bind param is null or undefined ([`f57bd9e`](https://github.com/panates/postgresql-client/commit/f57bd9ec0ec813ac96ef29e51d032cad10113129))\r\n\r\n# v1.16.6\r\n[2021-07-03]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`7298b3c`](https://github.com/panates/postgresql-client/commit/7298b3c589257281963c351c5b5d18492fe0eaee))\r\n* Update README.md ([`5bac71d`](https://github.com/panates/postgresql-client/commit/5bac71d5c415128a02c01885fc9e0038ac21d4d5))\r\n\r\n# v1.16.5\r\n[2021-04-19]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`c7e0bb0`](https://github.com/panates/postgresql-client/commit/c7e0bb0e33c5b3e09cdf753a5b496833503820ee))\r\n* Updated readme ([`efbc574`](https://github.com/panates/postgresql-client/commit/efbc57427b8d7c67aef412cd2433c660c1dac0a5))\r\n\r\n# v1.16.4\r\n[2021-04-08]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`8e916c6`](https://github.com/panates/postgresql-client/commit/8e916c605fc565b89a710d226161af1eeee2be33))\r\n* Detect time format strings ([`14f8871`](https://github.com/panates/postgresql-client/commit/14f88711b29824f720233ae051709e2f3fbabaf8))\r\n\r\n# v1.16.3\r\n[2021-04-07]\r\n\r\n### Changes\r\n\r\n* Updated doc ([`54b72be`](https://github.com/panates/postgresql-client/commit/54b72beb898012daa16c99f60a98fbe98520ed18))\r\n\r\n# v1.16.2\r\n[2021-04-07]\r\n\r\n### Changes\r\n\r\n* Fixed time data type issue ([`bf80893`](https://github.com/panates/postgresql-client/commit/bf80893d628ed9ec14d448b7194ab89028b00463))\r\n* Added missed type mappings ([`f45124a`](https://github.com/panates/postgresql-client/commit/f45124aa900c82318bdd39d1770ddeaa0df62acc))\r\n\r\n# v1.16.1\r\n[2021-04-06]\r\n\r\n# v1.16.0\r\n[2021-04-06]\r\n\r\n### Changes\r\n\r\n* Added Time data type ([`127fb81`](https://github.com/panates/postgresql-client/commit/127fb8174c65215738e4450c97dd438f2f4e53a6))\r\n\r\n# v1.15.1\r\n[2021-03-19]\r\n\r\n### Changes\r\n\r\n* Use default config ([`6f3e692`](https://github.com/panates/postgresql-client/commit/6f3e692acf7a3f487e3056bc6a964032b50a0661))\r\n\r\n# v1.15.0\r\n[2021-03-07]\r\n\r\n### Changes\r\n\r\n* Added \"name\" (OID:19) data type to data type map ([`6f56e2d`](https://github.com/panates/postgresql-client/commit/6f56e2d00446dd9634eb50ff354dae2c983bceda))\r\n\r\n# v1.14.2\r\n[2021-03-05]\r\n\r\n### Changes\r\n\r\n* Dont add COMMIT to execute sql if not in transaction. ([`8f57c30`](https://github.com/panates/postgresql-client/commit/8f57c30ea4e45b014a883644a5d4817bc25485be))\r\n\r\n# v1.14.1\r\n[2021-02-16]\r\n\r\n### Changes\r\n\r\n* Now can detect uuid value when binding parameters ([`72a4ba0`](https://github.com/panates/postgresql-client/commit/72a4ba0e58cdd93ab70cc2d6edf1bfc473225ca3))\r\n\r\n# v1.14.0\r\n[2021-02-15]\r\n\r\n### Changes\r\n\r\n* Added support for UUID data type ([`d3cfbfd`](https://github.com/panates/postgresql-client/commit/d3cfbfd24e4a5b8b1b36f9842d9a9384ee50e58a))\r\n\r\n# v1.13.2\r\n[2021-01-31]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`ffddee3`](https://github.com/panates/postgresql-client/commit/ffddee39210236043909485eb478a283441a2702))\r\n\r\n# v1.13.1\r\n[2021-01-30]\r\n\r\n# v1.13.0\r\n[2021-01-28]\r\n\r\n### Changes\r\n\r\n* Added fetchAsString option for Date, Timestamp and TimestampTz ([`1d77cd1`](https://github.com/panates/postgresql-client/commit/1d77cd1c9ef04d0fa90b5729e376be4bc5cfe8b6))\r\n\r\n# v1.12.1\r\n[2021-01-28]\r\n\r\n# v1.12.0\r\n[2021-01-28]\r\n\r\n### Changes\r\n\r\n* Added fetchAsString option for Date, Timestamp and TimestampTz ([`18fa21c`](https://github.com/panates/postgresql-client/commit/18fa21c9e7885fde570901afbcb9e9d4fffaccb8))\r\n* Set test schema ([`72b3dcc`](https://github.com/panates/postgresql-client/commit/72b3dccbdea0b0352faec20e5581984780567a68))\r\n* Set test schema ([`ec18c02`](https://github.com/panates/postgresql-client/commit/ec18c02bb6964de9a42300002e3af0b6152de466))\r\n\r\n# v1.11.4\r\n[2020-12-24]\r\n\r\n### Changes\r\n\r\n* Check if fetchCount value between unsigned inter range ([`cc35ee3`](https://github.com/panates/postgresql-client/commit/cc35ee368e1a78b16b030ba259f921dca0287f89))\r\n\r\n# v1.11.3\r\n[2020-12-24]\r\n\r\n# v1.11.2\r\n[2020-12-24]\r\n\r\n### Changes\r\n\r\n* Fixed: Does not determine data type in register order. ([`e27ea7a`](https://github.com/panates/postgresql-client/commit/e27ea7a372fb5fbf1ccb3ede7b292bd58471d22f))\r\n\r\n# v1.11.1\r\n[2020-12-10]\r\n\r\n### Changes\r\n\r\n* Calling fetch of a closed cursor will not throw anymore ([`bacb630`](https://github.com/panates/postgresql-client/commit/bacb63002121b5e0ee3c3765065f60e4de3496ba))\r\n\r\n# v1.11.0\r\n[2020-12-10]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`f1e23d4`](https://github.com/panates/postgresql-client/commit/f1e23d41ce75fb5ebd6ce3fb834df0d2ff5c9e10))\r\n* Automatically convert BigInt numbers to formal number if value in safe integer range ([`110c544`](https://github.com/panates/postgresql-client/commit/110c544809b30f8be83c0893bc58cddce08dbae2))\r\n* Updated dependencies ([`4216ebd`](https://github.com/panates/postgresql-client/commit/4216ebd064b37530a8bb9d8f810c87aadc14b7a6))\r\n\r\n# v1.10.1\r\n[2020-12-09]\r\n\r\n### Changes\r\n\r\n* Fixed: Wrong message sending when parameters contains null values ([`59e5bf4`](https://github.com/panates/postgresql-client/commit/59e5bf4b4084c92dd4dbf8f7fc787f9d11709efa))\r\n\r\n# v1.10.0\r\n[2020-12-05]\r\n\r\n### Changes\r\n\r\n* Added \"numeric\" data type ([`a0a6068`](https://github.com/panates/postgresql-client/commit/a0a606838a4e3852298cc97c6ee704dd08ec36c6))\r\n* Added \"numeric\" data type ([`d78a6fe`](https://github.com/panates/postgresql-client/commit/d78a6fe55433aab90e2a00f7bc5f052eca69b2b3))\r\n\r\n# v1.9.2\r\n[2020-11-25]\r\n\r\n### Changes\r\n\r\n* Added \"debug\" package ([`f365962`](https://github.com/panates/postgresql-client/commit/f36596201bb455e7b6d5ed7460d7c72864b36b0f))\r\n\r\n# v1.9.1\r\n[2020-11-24]\r\n\r\n### Changes\r\n\r\n* Added \"debug\" package ([`618a239`](https://github.com/panates/postgresql-client/commit/618a239f4e09643460146dbffad77011768f78a9))\r\n* Added \"debug\" package ([`12c0001`](https://github.com/panates/postgresql-client/commit/12c00012a29f5365472d108e3b83cfdfa128c96b))\r\n\r\n# v1.9.0\r\n[2020-11-20]\r\n\r\n### Changes\r\n\r\n* Changed ConnectionConfiguration.searchPath to \"schema\" ([`e6df86b`](https://github.com/panates/postgresql-client/commit/e6df86b85384608cbfbb8ab5f96446dbfe5540bf))\r\n* Changed ConnectionConfiguration.searchPath to \"schema\" ([`1fd8b7a`](https://github.com/panates/postgresql-client/commit/1fd8b7ade85a61f5eb524054cef52d97e70f8635))\r\n\r\n# v1.8.1\r\n[2020-11-20]\r\n\r\n### Changes\r\n\r\n* Added rowType to all result interfaces ([`edfaec6`](https://github.com/panates/postgresql-client/commit/edfaec69751137ab488ac4af2cf97582059b7e45))\r\n\r\n# v1.8.0\r\n[2020-11-20]\r\n\r\n### Changes\r\n\r\n* Added rowType to all result interfaces ([`4bc26a7`](https://github.com/panates/postgresql-client/commit/4bc26a7d1edd9405c1fd5f06eff6e60d4d11631e))\r\n\r\n# v1.7.1\r\n[2020-11-20]\r\n\r\n# v1.7.0\r\n[2020-11-20]\r\n\r\n### Changes\r\n\r\n* Linted for code quality ([`73dad79`](https://github.com/panates/postgresql-client/commit/73dad793b7a2dfeed7fcdeeb8d7736ca90247af1))\r\n* Added rowType getter to Cursor ([`045a2a2`](https://github.com/panates/postgresql-client/commit/045a2a22e1c8d0519399c3bf70013adaf2c9e32d))\r\n\r\n# v1.6.0\r\n[2020-11-20]\r\n\r\n### Changes\r\n\r\n* Improved auto-commit operations by detecting sql is a transaction command ([`ab8e698`](https://github.com/panates/postgresql-client/commit/ab8e698f205dfe81b81b30fe7a7520db2430006c))\r\n\r\n# v1.5.1\r\n[2020-11-19]\r\n\r\n### Changes\r\n\r\n* Fixex: query() does not return fields property if cursor option is true ([`6acec29`](https://github.com/panates/postgresql-client/commit/6acec296e846c57cd3a38f1b26f58641ba688d10))\r\n\r\n# v1.5.0\r\n[2020-11-19]\r\n\r\n### Changes\r\n\r\n* Added autoCommit option for connection.execute() and connection.query() methods. ([`d75e939`](https://github.com/panates/postgresql-client/commit/d75e939cf79bc8c82879d3b46585a5d3c81d0391))\r\n\r\n# v1.4.0\r\n[2020-11-19]\r\n\r\n### Changes\r\n\r\n* Fixed: Missed sendSyncMessage after parse query. ([`d8a906e`](https://github.com/panates/postgresql-client/commit/d8a906e385225b76dfec9291584099a1361fd732))\r\n* Fixed: Missed sendSyncMessage ([`356af56`](https://github.com/panates/postgresql-client/commit/356af563c10735a4bcec6651897eadbfa6566314))\r\n\r\n# v1.3.1\r\n[2020-11-19]\r\n\r\n### Changes\r\n\r\n* Updated dependencies ([`c413990`](https://github.com/panates/postgresql-client/commit/c4139903b2d8415a0ed4deb871b820158ab0f923))\r\n\r\n# v1.3.0\r\n[2020-11-19]\r\n\r\n### Changes\r\n\r\n* Updated lightning-pool to new major version 3.0 ([`1ae9f50`](https://github.com/panates/postgresql-client/commit/1ae9f50549ed4863c37b45022962e463a9a69110))\r\n* Updated roadmap ([`b0605e3`](https://github.com/panates/postgresql-client/commit/b0605e3c487c587256991012395c07e7402b32dd))\r\n\r\n# v1.2.3\r\n[2020-11-17]\r\n\r\n### Changes\r\n\r\n* Added sessionParameters getter ([`4599db8`](https://github.com/panates/postgresql-client/commit/4599db832beca8f3a741e1a690932818edd915e9))\r\n\r\n# v1.2.2\r\n[2020-11-17]\r\n\r\n### Changes\r\n\r\n* Added isClosed property ([`c9b54f7`](https://github.com/panates/postgresql-client/commit/c9b54f7b19bf0270beff5947b02efac9ff4a12a9))\r\n* Added isClosed property ([`f2b3791`](https://github.com/panates/postgresql-client/commit/f2b3791464fcc3d3a58fe317955c609aa0d2b1e6))\r\n\r\n# v1.2.1\r\n[2020-11-17]\r\n\r\n### Changes\r\n\r\n* Major changes for FieldInfo ([`32d2e08`](https://github.com/panates/postgresql-client/commit/32d2e0887a9bc49bbf00a91c5f850908dd9ee3a5))\r\n* Expose Cursor class ([`1dc2de1`](https://github.com/panates/postgresql-client/commit/1dc2de192cc02ed5ba392d974066295a7c0f5f2a))\r\n\r\n# v1.2.0\r\n[2020-11-17]\r\n\r\n### Changes\r\n\r\n* Major changes for FieldInfo ([`982d8ec`](https://github.com/panates/postgresql-client/commit/982d8ec35c9f0b9e7a6fda2972d10c6890cfcfb8))\r\n\r\n# v1.1.1\r\n[2020-11-16]\r\n\r\n### Changes\r\n\r\n* Added dataTypeName to FieldInfo ([`6a9227d`](https://github.com/panates/postgresql-client/commit/6a9227de01bf0cccb28f3a8804c5dab526395700))\r\n\r\n# v1.1.0\r\n[2020-11-16]\r\n\r\n### Changes\r\n\r\n* Added elementDataTypeId and mappedType properties to FieldInfo ([`b554f07`](https://github.com/panates/postgresql-client/commit/b554f07421bfd3375aae90ff3212e5c84e93976c))\r\n\r\n# v1.0.5\r\n[2020-11-16]\r\n\r\n### Changes\r\n\r\n* Added fetch() method to cursor ([`4c98b80`](https://github.com/panates/postgresql-client/commit/4c98b807f578bbfc3cff257ebffec86abb67797b))\r\n* Added ability to get processId and secretKey ([`95bc84f`](https://github.com/panates/postgresql-client/commit/95bc84f9a4f3ce3e3c33b09a13cc79ff2f43ff85))\r\n\r\n# v1.0.4\r\n[2020-11-16]\r\n\r\n### Changes\r\n\r\n* Added ability to get processId and secretKey ([`acaf2d5`](https://github.com/panates/postgresql-client/commit/acaf2d55ab5143c9b0f0651118f2806a2c42ab2e))\r\n\r\n# v1.0.3\r\n[2020-11-16]\r\n\r\n### Changes\r\n\r\n* Fixed wrong repository address ([`ae3b149`](https://github.com/panates/postgresql-client/commit/ae3b149c31d35eda8b39fb1428c6cfde752890c9))\r\n\r\n# v1.0.2\r\n[2020-11-16]\r\n\r\n### Changes\r\n\r\n* Test fixed ([`0754ee8`](https://github.com/panates/postgresql-client/commit/0754ee845ef1cb5c61ed10f9f6fd89e9e8f60d14))\r\n* DOCUMENTATION.md is missing in files property ([`2d24c5f`](https://github.com/panates/postgresql-client/commit/2d24c5f4471f5390548d2377d429b9e1ec567032))\r\n\r\n# v1.0.1\r\n[2020-11-16]\r\n\r\n### Changes\r\n\r\n* ScriptExecutor test passing ([`79ee783`](https://github.com/panates/postgresql-client/commit/79ee783d877617713f5689c5b639a90f9bc6e8b5))\r\n* Initial commit ([`66713fe`](https://github.com/panates/postgresql-client/commit/66713fe1f68c32817bc8c0054126a5019ef90ec7))\r\n* Beta 1 commit ([`86195d8`](https://github.com/panates/postgresql-client/commit/86195d8446673be6da4b0706fff70d77bd607d13))\r\n* Data types implementation and tests done ([`6ba0ed5`](https://github.com/panates/postgresql-client/commit/6ba0ed545406d5d680175e9958316b0f1c0bb159))\r\n* Added int64 support for node&lt;12 ([`8637e98`](https://github.com/panates/postgresql-client/commit/8637e983ae3b56202edb12fd896344c0a1186e0d))\r\n* Beta 2 commit ([`17d3eb6`](https://github.com/panates/postgresql-client/commit/17d3eb621529a68fddc981d7b7521df80870d2f1))\r\n* Implemented extended query ([`7dea1f0`](https://github.com/panates/postgresql-client/commit/7dea1f0516a2f64709e9eaa824d8ce5d2593c32a))\r\n* 1.0 stable ([`df5c83e`](https://github.com/panates/postgresql-client/commit/df5c83e4e1d213355a1b0578c201b2992a066192))\r\n* Added house keeping ability to SmartBuffer ([`efc4fff`](https://github.com/panates/postgresql-client/commit/efc4fff19a5cc8b832e4f686d8d60a60531937f2))\r\n* Beta 1 commit ([`d6197dd`](https://github.com/panates/postgresql-client/commit/d6197ddda5c2f53a4c31783ebbd42de09e59a26b))\r\n* Updated travis url ([`3e3b661`](https://github.com/panates/postgresql-client/commit/3e3b66130c522df939dcc267939145ba64bec45c))\r\n* Initial commit ([`441d590`](https://github.com/panates/postgresql-client/commit/441d590b64a69085d792ede37a8d7c79591a29e7))\r\n* Added int64 support for node&lt;12 ([`bbac2f2`](https://github.com/panates/postgresql-client/commit/bbac2f2a0210171028011ce172d5759788fc4fcf))\r\n* Beta 1 commit ([`e68b3d8`](https://github.com/panates/postgresql-client/commit/e68b3d8df2a05bd8efa06975d3d53b9f65e5cd0e))\r\n* Implemented extended query ([`167e989`](https://github.com/panates/postgresql-client/commit/167e9892d105a0f14b41b4ef660d9c72acc4a900))\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/postgresql-client/CHANGELOG.md b/node_modules/postgresql-client/CHANGELOG.md
--- a/node_modules/postgresql-client/CHANGELOG.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/postgresql-client/CHANGELOG.md	(date 1753913034989)
@@ -1,814 +1,209 @@
-# v2.11.0
-[2024-04-23]
-
-### Changes
-
-* Updated dependencies ([`9dcf2c2`](https://github.com/panates/postgresql-client/commit/9dcf2c2957621aefb0a1f9f3da66877c4d7382bf))
-* Implement TC39 Explicit Resource Management proposal ([`cd5efa4`](https://github.com/panates/postgresql-client/commit/cd5efa4377d3e7c0d9eb795d3db0fbc7a1bf2943))
-* Implement TC39 Explicit Resource Management proposal ([`d3df6f4`](https://github.com/panates/postgresql-client/commit/d3df6f496beca807ede191968806debcec631dbf))
-
-# v2.10.7
-[2024-04-22]
-
-### Changes
-
-* Added prettier formatting ([`5e157f5`](https://github.com/panates/postgresql-client/commit/5e157f5cdc145df1abc2c0eb641563638af93af9))
-* Remove developer content from the README and into CONTRIBUTING.md ([`58c2ce8`](https://github.com/panates/postgresql-client/commit/58c2ce8c3f4e643b3bb984ad73666dd5fd40d729))
-* Add basic documentation on running the test suite. Add rimraf as dependency since its referenced by the scripts. Update the lockfile. Start to prepare for proper prettier formatting ([`4ca7b54`](https://github.com/panates/postgresql-client/commit/4ca7b54c970601ee9f11839bae91ce7fb3a2ea8d))
-* Added prettier formatting ([`250673e`](https://github.com/panates/postgresql-client/commit/250673e51c840e1fdfd4f9f79db5400af70b7d64))
-* Added prettier formatting ([`289c40c`](https://github.com/panates/postgresql-client/commit/289c40c1d65da55c56d814054d38715fa48a78f9))
-* Added prettier formatting ([`9d02a3f`](https://github.com/panates/postgresql-client/commit/9d02a3f3a53f784fd7a3b917a2cef3e355638c20))
-* Expose DatabaseError ([`5f1bbd2`](https://github.com/panates/postgresql-client/commit/5f1bbd2ab2ad69a836e7a53ef92ecffcc352e46b))
-* Remove duplicated root in .editorconfig ([`a514ad5`](https://github.com/panates/postgresql-client/commit/a514ad52f09ad92ade5b83ed599ccf1832b424ea))
-* Use the README.md from master ([`ac3f7b8`](https://github.com/panates/postgresql-client/commit/ac3f7b831c4a515d2a0db74f53cb481d651a0200))
-* Added prettier formatting ([`0e0a521`](https://github.com/panates/postgresql-client/commit/0e0a521435aae1c67ceeb27f13af6cc49066c2ad))
-
-# v2.10.6
-[2024-03-14]
-
-### Changes
-
-* Updated dependencies ([`e0cf321`](https://github.com/panates/postgresql-client/commit/e0cf321f593f72580ba6dda14c104efedd8cad52))
-* Updated dependencies ([`f723f8f`](https://github.com/panates/postgresql-client/commit/f723f8fe7cc39746ba36f5ead791b78c184423aa))
-
-# v2.10.5
-[2024-01-15]
-
-### Changes
-
-* Updated dependencies ([`f7b0db8`](https://github.com/panates/postgresql-client/commit/f7b0db8701f73d482e3b2bc3128fbfb646c5f6a6))
-
-# v2.10.4
-[2024-01-12]
-
-### Changes
-
-* Updated dependencies ([`efc17f2`](https://github.com/panates/postgresql-client/commit/efc17f292bc1d24de518cc5529e8a7aa383ad641))
-
-# v2.10.3
-[2024-01-12]
-
-### Changes
-
-* Updated dependencies ([`b1ec82a`](https://github.com/panates/postgresql-client/commit/b1ec82a3967dfa789583248c2d9096c40c333601))
-* Minor typing change ([`f036aa8`](https://github.com/panates/postgresql-client/commit/f036aa833d8b973fd5e1cc8d229cac4b199a5c48))
-
-# v2.10.2
-[2024-01-08]
-
-### Changes
-
-* Updated dependencies ([`33a8272`](https://github.com/panates/postgresql-client/commit/33a8272de6c51dbf29ea658a6d2a6436555513e1))
-
-# v2.10.1
-[2023-11-09]
-
-### Changes
-
-* Fixed: Some times server response invalid message to prepare statement message. ([`bb7a0c8`](https://github.com/panates/postgresql-client/commit/bb7a0c8e2074120a2062e585183480b52677756e))
-
-# v2.10.0
-[2023-11-09]
-
-### Changes
-
-* Fixed: Error stack do not show caller function. ([`08a1a8f`](https://github.com/panates/postgresql-client/commit/08a1a8f4141b0066ae084de4f2a31d9d7e1bd4b9))
-* Improved error message handling for more understandable to humans. ([`d9bbcb0`](https://github.com/panates/postgresql-client/commit/d9bbcb0b1c10ab11816bc907d2b62977831d6082))
-
-# v2.9.1
-[2023-10-03]
-
-### Changes
-
-* Added int2Vector data type with binary protocol ([`94a9a3b`](https://github.com/panates/postgresql-client/commit/94a9a3b3a9e10ce7bdbce132c9195826ecc7aec1))
-
-# v2.9.0
-[2023-10-03]
-
-### Changes
-
-* Added int2Vector data type with binary protocol ([`55bd87e`](https://github.com/panates/postgresql-client/commit/55bd87e38a2ed1787957c1066ba51857d6c97c5d))
-* Support int2 and oid vector types ([`ce27006`](https://github.com/panates/postgresql-client/commit/ce27006bb7441d004fd251bd6af29c4e99836b01))
-* Add OID for tid array ([`d99e3ee`](https://github.com/panates/postgresql-client/commit/d99e3ee1e7fc768931553240adb556f003428ebd))
-
-# v2.8.1
-[2023-10-03]
-
-### Changes
-
-* Updated dependencies ([`51998d4`](https://github.com/panates/postgresql-client/commit/51998d496cc84d721bf267ba29e8dda3c520fea7))
-* Updated dependencies ([`7faed1a`](https://github.com/panates/postgresql-client/commit/7faed1a68149b82399d951df6f0e0f1c54cd1798))
-* Add ability to configure buffer size ([`30d18c6`](https://github.com/panates/postgresql-client/commit/30d18c6afeb3b973eaa640f772ed791ec0707bb0))
-* Minor fix for logging ([`1af9e94`](https://github.com/panates/postgresql-client/commit/1af9e946018e9605882c13a85120793a65c1fada))
-
-# v2.8.0
-[2023-09-24]
-
-### Changes
-
-* Add ability to configure buffer size ([`34d822a`](https://github.com/panates/postgresql-client/commit/34d822a7b3a302d3a8b4b406586c3ce123cac97b))
-* Updated config ([`8792c63`](https://github.com/panates/postgresql-client/commit/8792c631eff7798edb1a76524acfce49e28d7593))
-* Updated node versions ([`7fb18dc`](https://github.com/panates/postgresql-client/commit/7fb18dc0f208ec609ebddd84d0a3ea5db4c8534a))
-* Updated config ([`31dab8b`](https://github.com/panates/postgresql-client/commit/31dab8b08ac5b6d5977bb89d47de60e964e09b52))
-* Updated node versions ([`17692ca`](https://github.com/panates/postgresql-client/commit/17692ca11cf4e440afe53b8a1bcd96041b36f352))
-* Updated config ([`9c5f20c`](https://github.com/panates/postgresql-client/commit/9c5f20c8e0a83633eaa66dd438d4cee3d93846a7))
-* Updated node versions ([`49c6eac`](https://github.com/panates/postgresql-client/commit/49c6eacd56815f969f0aabce3b41c67369e10d27))
-
-# v2.7.2
-[2023-09-10]
+# 2.13.0
+[2024-07-22]
 
 ### Fixes
 
-* Fix: Make concurrency explicit, prevents power-tasks from invoking os.cpus ([`20038b0`](https://github.com/panates/postgresql-client/commit/20038b034eabf35cdf57eb0c7c72097f66d6b4c4))
-
-### Changes
-
-* Updated badge url ([`b9335ed`](https://github.com/panates/postgresql-client/commit/b9335ed40a8cc4fadee4fe90e3287a48f0978cf3))
-
-# v2.7.1
-[2023-08-03]
-
-### Changes
-
-* Updated dependencies ([`114ffb9`](https://github.com/panates/postgresql-client/commit/114ffb94e38dfc96fcc3c57d95807036f0c50045))
-* Fallback to "unknown" IOD, if can't determine data type ([`b0807e3`](https://github.com/panates/postgresql-client/commit/b0807e38af758a29c5a1fb5db4af24dd1f5c9dfb))
-* Export SmartBuffer fully ([`8fca283`](https://github.com/panates/postgresql-client/commit/8fca283bc3fa9be0653297f858e1ede652456289))
-
-# v2.7.0
-[2023-08-01]
-
-### Changes
-
-* Restructure files according to current Panates standards ([`58875b3`](https://github.com/panates/postgresql-client/commit/58875b364c58b8b5e5ddac55373dd70ad5639bd0))
-* Renames DatabaseConnectionParams.onErrorRollback to rollbackOnError ([`dc50fb1`](https://github.com/panates/postgresql-client/commit/dc50fb1ee3b9975f188af60b7f3fed5f8d089fcc))
-
-# v2.6.1
-[2023-08-01]
-
-### Changes
-
-* Now DataTypeMap.determine method lookup for data-types in reverse order. So last registered data-type returns first. ([`f2a20eb`](https://github.com/panates/postgresql-client/commit/f2a20eb9a0eba5ebfd3e8f26d427469d71b1c041))
-* Now DataTypeMap.determine method lookup for data-types in reverse order. So last registered data-type returns first. ([`0f8cbc8`](https://github.com/panates/postgresql-client/commit/0f8cbc809c24ca712e94ab21d2c2624e35a8b059))
-* Now DataTypeMap.determine method lookup for data-types in reverse order. So last registered data-type returns first. ([`e1918c3`](https://github.com/panates/postgresql-client/commit/e1918c3d9bd2cea6a084474d987df18b62b8b239))
-
-# v2.6.0
-[2023-08-01]
-
-### Changes
-
-* Not DataTypeMap.determine method lookup for data-types in reverse order. So last registered data-type returns first. ([`759ff85`](https://github.com/panates/postgresql-client/commit/759ff85ceaf0c5d119656b6b61d6450420c19fbc))
-* Fixed typing for new eslint rules ([`95f3914`](https://github.com/panates/postgresql-client/commit/95f3914f61d4883b68d4b131f6200b08fc8e2478))
-* Fixed typing for new eslint rules ([`f6e0d11`](https://github.com/panates/postgresql-client/commit/f6e0d11041616ee243a95062a4e9d581d5406d62))
-
-# v2.5.10
-[2023-07-26]
-
-### Changes
-
-* Updated dependencies ([`2a21190`](https://github.com/panates/postgresql-client/commit/2a21190d2db2f70a1bbffb6cc77a8d9dc62b7636))
-* Added code of conduct document ([`9a64826`](https://github.com/panates/postgresql-client/commit/9a6482677ba23fb6ca850f5357a7e169218c7efd))
-* Updated config ([`9655d4f`](https://github.com/panates/postgresql-client/commit/9655d4f222af21b889a7a9f5070530f8ea6bcd95))
-
-# v2.5.9
-[2023-05-17]
-
-### Changes
-
-* Fixed missing files."typings" ([`eabb616`](https://github.com/panates/postgresql-client/commit/eabb616a54831ca245d6157452737a6484167d0b))
-
-# v2.5.8
-[2023-05-17]
-
-### Changes
-
-* Optimized build ([`e8305f9`](https://github.com/panates/postgresql-client/commit/e8305f9da79a64484d5edc2cd0fe43c4ff7b2fa2))
-
-# v2.5.7
-[2023-05-16]
-
-### Changes
-
-* Optimized build ([`17d029b`](https://github.com/panates/postgresql-client/commit/17d029be5d799bab2cf49ba5258b978b20c0d52f))
-
-# v2.5.6
-[2023-05-16]
-
-### Changes
-
-* Removed vulnerable "debug" package ([`019b3f4`](https://github.com/panates/postgresql-client/commit/019b3f48955c62a9c764462b16cd52be8cf22ae2))
-* Updated dependencies ([`afce5f7`](https://github.com/panates/postgresql-client/commit/afce5f735d241869e6ae937cb67b6378e70fb6d0))
-* Fixed examples for cursor usage ([`5971341`](https://github.com/panates/postgresql-client/commit/5971341edf1c7ce363ddcb3adb97b2491bf7714d))
-* Updated config ([`6edd12e`](https://github.com/panates/postgresql-client/commit/6edd12e902ac3f5f2f4784626edce151bf5eb569))
-
-# v2.5.5
-[2023-02-22]
-
-### Changes
-
-* Added auto changelog generation ([`0c7fc22`](https://github.com/panates/postgresql-client/commit/0c7fc22f299363a8425835c11d4f6f4eeb64a9ea))
-* Updated examples ([`94e092a`](https://github.com/panates/postgresql-client/commit/94e092ade4e664b040bb85517eac4c61f8baeee4))
-* Added auto changelog generation ([`1ed1194`](https://github.com/panates/postgresql-client/commit/1ed119481ee3a5ccdd841691812f6042fab2cb5a))
-
-# v2.5.3
-[2023-02-20]
-
-### Changes
-
-* Updated dependencies ([`b278e88`](https://github.com/panates/postgresql-client/commit/b278e88a2cfdcf9467d20b3d9257607eddb731e1))
-* Updated dependencies ([`b8501a2`](https://github.com/panates/postgresql-client/commit/b8501a2e5a73f0449de3e5373a1b559455af1051))
-
-# v2.5.2
-[2022-12-02]
-
-### Changes
-
-* Updated dependencies ([`20abfde`](https://github.com/panates/postgresql-client/commit/20abfdedb3dd3fa213f6cb66e00c132607deccb9))
-
-# v2.5.1
-[2022-10-05]
-
-### Changes
-
-* Updated documentation ([`38093f6`](https://github.com/panates/postgresql-client/commit/38093f67924eaf7a3710e08ed5bc91f84fd3920f))
-* Added LISTEN/NOTIFY feature ([`73cb33b`](https://github.com/panates/postgresql-client/commit/73cb33b41d0bc3515e71b5e0ff7ace68b9f4720b))
-
-# v2.5.0
-[2022-10-04]
-
-### Changes
-
-* Added LISTEN/NOTIFY feature ([`f0ac754`](https://github.com/panates/postgresql-client/commit/f0ac754657da2f95977da6081f8c4265e83ba1b5))
-
-# v2.4.1
-[2022-09-23]
+* Fix: Make concurrency explicit, prevents power-tasks from invoking os.cpus ([`20038b0`](https://github.com/erayhanoglu/postgresql-client/commit/20038b034eabf35cdf57eb0c7c72097f66d6b4c4))
 
 ### Changes
 
-* Updated dependencies ([`bebcd28`](https://github.com/panates/postgresql-client/commit/bebcd283a045720f51a74f51e8258492af4c3790))
-
-# v2.4.0
-[2022-09-22]
-
-### Changes
-
-* Fixed exports for multi module support ([`e40dabe`](https://github.com/panates/postgresql-client/commit/e40dabe8064dc89f3a468b00e5c623f4277d68c1))
-
-# v2.3.0
-[2022-09-17]
-
-### Changes
-
-* Updated lightning-pool to v4.0 ([`4ae3adf`](https://github.com/panates/postgresql-client/commit/4ae3adf1e4600a7977c24c4d6903193b97e908da))
-
-# v2.2.0
-[2022-09-17]
-
-### Changes
-
-* Updated eslint and jest ([`229d394`](https://github.com/panates/postgresql-client/commit/229d394b3a956844c0a36665fa44edf3acda9bd3))
-
-# v2.1.5
-[2022-08-29]
-
-### Changes
-
-* Updated eslint config ([`5ad54ee`](https://github.com/panates/postgresql-client/commit/5ad54eeea34cb87d744a405afe21d15eb7357bd7))
-
-# v2.1.4
-[2022-07-06]
-
-### Changes
-
-* Updated dependencies ([`15ad62c`](https://github.com/panates/postgresql-client/commit/15ad62c53dee3562576537da36325bd7b69ae144))
-* Updated readme ([`145afed`](https://github.com/panates/postgresql-client/commit/145afed77f278648d48ca8b0d2aaf44e5887e07a))
-* Fixed typing ([`70a7076`](https://github.com/panates/postgresql-client/commit/70a707672caf735d412cb0debe9661a69b8d688f))
-
-# v2.1.3
-[2022-06-28]
-
-### Changes
-
-* Updated dependencies ([`8cef3fa`](https://github.com/panates/postgresql-client/commit/8cef3fafce9e4051ebad350494f78417f7846361))
-
-# v2.1.2
-[2022-06-24]
-
-### Changes
-
-* Updated dependencies ([`ddeb02c`](https://github.com/panates/postgresql-client/commit/ddeb02c43c12994eab31b100aa8f25c949172565))
-
-# v2.1.1
-[2022-06-21]
-
-### Changes
-
-* Added prettier code style ([`c0b732e`](https://github.com/panates/postgresql-client/commit/c0b732e65400e5be844f157f5710694e1d9ebf1b))
-* Moved prettier to devDependencies ([`eecec11`](https://github.com/panates/postgresql-client/commit/eecec113f5d0752a90755952ad044b29f6ddbbd8))
-
-# v2.1.0
-[2022-06-21]
-
-### Changes
-
-* Added .js extensions to import statements for esm module support ([`dd884f1`](https://github.com/panates/postgresql-client/commit/dd884f1258abb47716a82edf6d2b945b89ef3160))
-* Moved from putil-taskqueue to power-tasks ([`7782551`](https://github.com/panates/postgresql-client/commit/7782551725f3441d590c6802c9812d38704d89a6))
-* Added husky git hooks ([`d61fc2a`](https://github.com/panates/postgresql-client/commit/d61fc2a0e540aad420f9b5ff4887cb6d0c609596))
-
-# v2.0.4
-[2022-06-17]
-
-### Changes
-
-* Update dependencies ([`4b34c8b`](https://github.com/panates/postgresql-client/commit/4b34c8be303062b2ef419bbc77e1d802b34ab4d2))
-
-# v2.0.3
-[2022-05-28]
-
-### Changes
-
-* Update dependencies ([`b2ee542`](https://github.com/panates/postgresql-client/commit/b2ee5423c58afd967eb90598977fa3bdc897920b))
-
-# v2.0.2
-[2022-05-11]
-
-### Changes
-
-* Added json casting for object values ([`b95766a`](https://github.com/panates/postgresql-client/commit/b95766a3f6362fb7dfa5c453df8fc76bcf46a295))
-
-# v2.0.1
-[2022-05-08]
-
-### Changes
-
-* Updated dependencies and documentation ([`f7f93d6`](https://github.com/panates/postgresql-client/commit/f7f93d6b3f869ef9f7517983f5489931c6c9b10d))
-* Updated config ([`9fa5d12`](https://github.com/panates/postgresql-client/commit/9fa5d12aac07842f1f9f4f0ff51a31dbe674b423))
-* Updated dependencies and documentation ([`120e7b5`](https://github.com/panates/postgresql-client/commit/120e7b505f86c10ede34df1f8291c77b8be66e10))
-* Fixed cover script ([`ff3dbef`](https://github.com/panates/postgresql-client/commit/ff3dbef2da974d08558475a9550778d70b8db4cc))
-* Updated config ([`a18fe16`](https://github.com/panates/postgresql-client/commit/a18fe169a79544ecb9e00b2186aa7f64b52cdb24))
-
-# v2.0.0
-[2022-03-03]
-
-### Changes
-
-* Added jsonb data type support ([`9b77962`](https://github.com/panates/postgresql-client/commit/9b77962d892887798def53f5b58ebb5c9573e0e0))
-* Added ESM module support ([`97857e3`](https://github.com/panates/postgresql-client/commit/97857e3925099e62d52d3dd6edf076015579fa95))
-* Updated dependencies ([`f8be711`](https://github.com/panates/postgresql-client/commit/f8be711c067233c41bd33d595b8630c6cbda1048))
-* Update issue templates ([`f84ec38`](https://github.com/panates/postgresql-client/commit/f84ec389e17925a41c1f70da4aba606173ddd90d))
-* Updated dependencies ([`b43ae89`](https://github.com/panates/postgresql-client/commit/b43ae89c616615b622a462d2a0c112001943856a))
-* Added ESM module support ([`a710889`](https://github.com/panates/postgresql-client/commit/a7108898204f7f464927ba56a84f590bc42f7fa3))
-
-# v1.21.6
-[2022-02-22]
-
-### Changes
-
-* Updated dependencies ([`b8f05e2`](https://github.com/panates/postgresql-client/commit/b8f05e2fd1d1600461373ccc51a131e4ff772b34))
-
-# v1.21.5
-[2022-01-03]
-
-### Changes
-
-* Updated dependencies ([`66da42d`](https://github.com/panates/postgresql-client/commit/66da42d1db31aa4009467366c1b7285fbef6cf54))
-
-# v1.21.4
-[2021-12-13]
-
-### Changes
-
-* Updated readme ([`d5af7cd`](https://github.com/panates/postgresql-client/commit/d5af7cdf315d9b549df79d05c077a0037b03509a))
-
-# v1.21.3
-[2021-12-13]
-
-### Changes
-
-* Updated dependencies ([`20fc14c`](https://github.com/panates/postgresql-client/commit/20fc14ced4e5a3158d91faf7158dc81d7ca650e6))
-
-# v1.21.2
-[2021-10-12]
-
-### Changes
-
-* Updated dependencies ([`80474a3`](https://github.com/panates/postgresql-client/commit/80474a397cda00bce583268f05f57bd31ea9c2b2))
-* Updated dependencies ([`68cdfed`](https://github.com/panates/postgresql-client/commit/68cdfed3966bdc9d4c88c9cc57053197cfc47cd1))
-
-# v1.21.1
-[2021-10-02]
-
-### Changes
-
-* Updated dependencies ([`5b4638b`](https://github.com/panates/postgresql-client/commit/5b4638b198c6d68a1cf8f601c9e15965990bb917))
-* Fixed: float numbers are recognized as bigint ([`1c19df4`](https://github.com/panates/postgresql-client/commit/1c19df4a6054af51ac49ce22320167072c81c689))
-
-# v1.21.0
-[2021-09-23]
-
-### Changes
-
-* + Added releaseSavepoint() method ([`9fc61c9`](https://github.com/panates/postgresql-client/commit/9fc61c9b5fe5215239bfb6374d7661cb11b7b142))
-
-# v1.20.0
-[2021-09-21]
-
-# v1.19.0
-[2021-09-21]
-
-### Changes
-
-* + Added onErrorRollback functionality for better transaction management ([`f92b65b`](https://github.com/panates/postgresql-client/commit/f92b65b0422e6861edf728dcbd1504be9bd01e34))
-
-# v1.18.4
-[2021-09-14]
-
-### Changes
-
-* Fixed: Needs type casting of uuid[] types ([`b6b1b45`](https://github.com/panates/postgresql-client/commit/b6b1b4578346c49d00922a104ca6c251b0dffed6))
-
-# v1.18.3
-[2021-09-08]
-
-### Changes
-
-* Fixed invalid constructing of DatabaseError ([`e904539`](https://github.com/panates/postgresql-client/commit/e90453959b570ad2206415455c8f2b844e69ce85))
-
-# v1.18.2
-[2021-09-07]
-
-### Changes
-
-* Updated dependencies ([`27d747f`](https://github.com/panates/postgresql-client/commit/27d747f2f77ec6da677bda3ce2dff362671d985a))
-
-# v1.18.1
-[2021-08-11]
-
-### Changes
-
-* Fixed database error properties exists in parent msg object. ([`6d5ad49`](https://github.com/panates/postgresql-client/commit/6d5ad49cea90b272419d532262c8a9e87070ac51))
-
-# v1.18.0
-[2021-08-01]
-
-# v1.17.0
-[2021-08-01]
-
-### Changes
-
-* Updated dependencies ([`5e6a902`](https://github.com/panates/postgresql-client/commit/5e6a902ae7cac3da89cf887f5b56d4d179504c27))
-* Added lineNr, colNr and line properties to DatabaseError ([`950bfb0`](https://github.com/panates/postgresql-client/commit/950bfb0a945a2662150bc2cb4a9be6ead29e2762))
-
-# v1.16.7
-[2021-07-03]
-
-### Changes
-
-* Fixed: throws "operator does not exist: integer = json" if bind param is null or undefined ([`f57bd9e`](https://github.com/panates/postgresql-client/commit/f57bd9ec0ec813ac96ef29e51d032cad10113129))
-
-# v1.16.6
-[2021-07-03]
-
-### Changes
-
-* Updated dependencies ([`7298b3c`](https://github.com/panates/postgresql-client/commit/7298b3c589257281963c351c5b5d18492fe0eaee))
-* Update README.md ([`5bac71d`](https://github.com/panates/postgresql-client/commit/5bac71d5c415128a02c01885fc9e0038ac21d4d5))
-
-# v1.16.5
-[2021-04-19]
-
-### Changes
-
-* Updated dependencies ([`c7e0bb0`](https://github.com/panates/postgresql-client/commit/c7e0bb0e33c5b3e09cdf753a5b496833503820ee))
-* Updated readme ([`efbc574`](https://github.com/panates/postgresql-client/commit/efbc57427b8d7c67aef412cd2433c660c1dac0a5))
-
-# v1.16.4
-[2021-04-08]
-
-### Changes
-
-* Updated dependencies ([`8e916c6`](https://github.com/panates/postgresql-client/commit/8e916c605fc565b89a710d226161af1eeee2be33))
-* Detect time format strings ([`14f8871`](https://github.com/panates/postgresql-client/commit/14f88711b29824f720233ae051709e2f3fbabaf8))
-
-# v1.16.3
-[2021-04-07]
-
-### Changes
-
-* Updated doc ([`54b72be`](https://github.com/panates/postgresql-client/commit/54b72beb898012daa16c99f60a98fbe98520ed18))
-
-# v1.16.2
-[2021-04-07]
-
-### Changes
-
-* Fixed time data type issue ([`bf80893`](https://github.com/panates/postgresql-client/commit/bf80893d628ed9ec14d448b7194ab89028b00463))
-* Added missed type mappings ([`f45124a`](https://github.com/panates/postgresql-client/commit/f45124aa900c82318bdd39d1770ddeaa0df62acc))
-
-# v1.16.1
-[2021-04-06]
-
-# v1.16.0
-[2021-04-06]
-
-### Changes
-
-* Added Time data type ([`127fb81`](https://github.com/panates/postgresql-client/commit/127fb8174c65215738e4450c97dd438f2f4e53a6))
-
-# v1.15.1
-[2021-03-19]
-
-### Changes
-
-* Use default config ([`6f3e692`](https://github.com/panates/postgresql-client/commit/6f3e692acf7a3f487e3056bc6a964032b50a0661))
-
-# v1.15.0
-[2021-03-07]
-
-### Changes
-
-* Added "name" (OID:19) data type to data type map ([`6f56e2d`](https://github.com/panates/postgresql-client/commit/6f56e2d00446dd9634eb50ff354dae2c983bceda))
-
-# v1.14.2
-[2021-03-05]
-
-### Changes
-
-* Dont add COMMIT to execute sql if not in transaction. ([`8f57c30`](https://github.com/panates/postgresql-client/commit/8f57c30ea4e45b014a883644a5d4817bc25485be))
-
-# v1.14.1
-[2021-02-16]
-
-### Changes
-
-* Now can detect uuid value when binding parameters ([`72a4ba0`](https://github.com/panates/postgresql-client/commit/72a4ba0e58cdd93ab70cc2d6edf1bfc473225ca3))
-
-# v1.14.0
-[2021-02-15]
-
-### Changes
-
-* Added support for UUID data type ([`d3cfbfd`](https://github.com/panates/postgresql-client/commit/d3cfbfd24e4a5b8b1b36f9842d9a9384ee50e58a))
-
-# v1.13.2
-[2021-01-31]
-
-### Changes
-
-* Updated dependencies ([`ffddee3`](https://github.com/panates/postgresql-client/commit/ffddee39210236043909485eb478a283441a2702))
-
-# v1.13.1
-[2021-01-30]
-
-# v1.13.0
-[2021-01-28]
-
-### Changes
-
-* Added fetchAsString option for Date, Timestamp and TimestampTz ([`1d77cd1`](https://github.com/panates/postgresql-client/commit/1d77cd1c9ef04d0fa90b5729e376be4bc5cfe8b6))
-
-# v1.12.1
-[2021-01-28]
-
-# v1.12.0
-[2021-01-28]
-
-### Changes
-
-* Added fetchAsString option for Date, Timestamp and TimestampTz ([`18fa21c`](https://github.com/panates/postgresql-client/commit/18fa21c9e7885fde570901afbcb9e9d4fffaccb8))
-* Set test schema ([`72b3dcc`](https://github.com/panates/postgresql-client/commit/72b3dccbdea0b0352faec20e5581984780567a68))
-* Set test schema ([`ec18c02`](https://github.com/panates/postgresql-client/commit/ec18c02bb6964de9a42300002e3af0b6152de466))
-
-# v1.11.4
-[2020-12-24]
-
-### Changes
-
-* Check if fetchCount value between unsigned inter range ([`cc35ee3`](https://github.com/panates/postgresql-client/commit/cc35ee368e1a78b16b030ba259f921dca0287f89))
-
-# v1.11.3
-[2020-12-24]
-
-# v1.11.2
-[2020-12-24]
-
-### Changes
-
-* Fixed: Does not determine data type in register order. ([`e27ea7a`](https://github.com/panates/postgresql-client/commit/e27ea7a372fb5fbf1ccb3ede7b292bd58471d22f))
-
-# v1.11.1
-[2020-12-10]
-
-### Changes
-
-* Calling fetch of a closed cursor will not throw anymore ([`bacb630`](https://github.com/panates/postgresql-client/commit/bacb63002121b5e0ee3c3765065f60e4de3496ba))
-
-# v1.11.0
-[2020-12-10]
-
-### Changes
-
-* Updated dependencies ([`f1e23d4`](https://github.com/panates/postgresql-client/commit/f1e23d41ce75fb5ebd6ce3fb834df0d2ff5c9e10))
-* Automatically convert BigInt numbers to formal number if value in safe integer range ([`110c544`](https://github.com/panates/postgresql-client/commit/110c544809b30f8be83c0893bc58cddce08dbae2))
-* Updated dependencies ([`4216ebd`](https://github.com/panates/postgresql-client/commit/4216ebd064b37530a8bb9d8f810c87aadc14b7a6))
-
-# v1.10.1
-[2020-12-09]
-
-### Changes
-
-* Fixed: Wrong message sending when parameters contains null values ([`59e5bf4`](https://github.com/panates/postgresql-client/commit/59e5bf4b4084c92dd4dbf8f7fc787f9d11709efa))
-
-# v1.10.0
-[2020-12-05]
-
-### Changes
-
-* Added "numeric" data type ([`a0a6068`](https://github.com/panates/postgresql-client/commit/a0a606838a4e3852298cc97c6ee704dd08ec36c6))
-* Added "numeric" data type ([`d78a6fe`](https://github.com/panates/postgresql-client/commit/d78a6fe55433aab90e2a00f7bc5f052eca69b2b3))
-
-# v1.9.2
-[2020-11-25]
-
-### Changes
-
-* Added "debug" package ([`f365962`](https://github.com/panates/postgresql-client/commit/f36596201bb455e7b6d5ed7460d7c72864b36b0f))
-
-# v1.9.1
-[2020-11-24]
-
-### Changes
-
-* Added "debug" package ([`618a239`](https://github.com/panates/postgresql-client/commit/618a239f4e09643460146dbffad77011768f78a9))
-* Added "debug" package ([`12c0001`](https://github.com/panates/postgresql-client/commit/12c00012a29f5365472d108e3b83cfdfa128c96b))
-
-# v1.9.0
-[2020-11-20]
-
-### Changes
-
-* Changed ConnectionConfiguration.searchPath to "schema" ([`e6df86b`](https://github.com/panates/postgresql-client/commit/e6df86b85384608cbfbb8ab5f96446dbfe5540bf))
-* Changed ConnectionConfiguration.searchPath to "schema" ([`1fd8b7a`](https://github.com/panates/postgresql-client/commit/1fd8b7ade85a61f5eb524054cef52d97e70f8635))
-
-# v1.8.1
-[2020-11-20]
-
-### Changes
-
-* Added rowType to all result interfaces ([`edfaec6`](https://github.com/panates/postgresql-client/commit/edfaec69751137ab488ac4af2cf97582059b7e45))
-
-# v1.8.0
-[2020-11-20]
-
-### Changes
-
-* Added rowType to all result interfaces ([`4bc26a7`](https://github.com/panates/postgresql-client/commit/4bc26a7d1edd9405c1fd5f06eff6e60d4d11631e))
-
-# v1.7.1
-[2020-11-20]
-
-# v1.7.0
-[2020-11-20]
-
-### Changes
-
-* Linted for code quality ([`73dad79`](https://github.com/panates/postgresql-client/commit/73dad793b7a2dfeed7fcdeeb8d7736ca90247af1))
-* Added rowType getter to Cursor ([`045a2a2`](https://github.com/panates/postgresql-client/commit/045a2a22e1c8d0519399c3bf70013adaf2c9e32d))
-
-# v1.6.0
-[2020-11-20]
-
-### Changes
-
-* Improved auto-commit operations by detecting sql is a transaction command ([`ab8e698`](https://github.com/panates/postgresql-client/commit/ab8e698f205dfe81b81b30fe7a7520db2430006c))
-
-# v1.5.1
-[2020-11-19]
-
-### Changes
-
-* Fixex: query() does not return fields property if cursor option is true ([`6acec29`](https://github.com/panates/postgresql-client/commit/6acec296e846c57cd3a38f1b26f58641ba688d10))
-
-# v1.5.0
-[2020-11-19]
-
-### Changes
-
-* Added autoCommit option for connection.execute() and connection.query() methods. ([`d75e939`](https://github.com/panates/postgresql-client/commit/d75e939cf79bc8c82879d3b46585a5d3c81d0391))
-
-# v1.4.0
-[2020-11-19]
-
-### Changes
-
-* Fixed: Missed sendSyncMessage after parse query. ([`d8a906e`](https://github.com/panates/postgresql-client/commit/d8a906e385225b76dfec9291584099a1361fd732))
-* Fixed: Missed sendSyncMessage ([`356af56`](https://github.com/panates/postgresql-client/commit/356af563c10735a4bcec6651897eadbfa6566314))
-
-# v1.3.1
-[2020-11-19]
-
-### Changes
-
-* Updated dependencies ([`c413990`](https://github.com/panates/postgresql-client/commit/c4139903b2d8415a0ed4deb871b820158ab0f923))
-
-# v1.3.0
-[2020-11-19]
-
-### Changes
-
-* Updated lightning-pool to new major version 3.0 ([`1ae9f50`](https://github.com/panates/postgresql-client/commit/1ae9f50549ed4863c37b45022962e463a9a69110))
-* Updated roadmap ([`b0605e3`](https://github.com/panates/postgresql-client/commit/b0605e3c487c587256991012395c07e7402b32dd))
-
-# v1.2.3
-[2020-11-17]
-
-### Changes
-
-* Added sessionParameters getter ([`4599db8`](https://github.com/panates/postgresql-client/commit/4599db832beca8f3a741e1a690932818edd915e9))
-
-# v1.2.2
-[2020-11-17]
-
-### Changes
-
-* Added isClosed property ([`c9b54f7`](https://github.com/panates/postgresql-client/commit/c9b54f7b19bf0270beff5947b02efac9ff4a12a9))
-* Added isClosed property ([`f2b3791`](https://github.com/panates/postgresql-client/commit/f2b3791464fcc3d3a58fe317955c609aa0d2b1e6))
-
-# v1.2.1
-[2020-11-17]
-
-### Changes
-
-* Major changes for FieldInfo ([`32d2e08`](https://github.com/panates/postgresql-client/commit/32d2e0887a9bc49bbf00a91c5f850908dd9ee3a5))
-* Expose Cursor class ([`1dc2de1`](https://github.com/panates/postgresql-client/commit/1dc2de192cc02ed5ba392d974066295a7c0f5f2a))
-
-# v1.2.0
-[2020-11-17]
-
-### Changes
-
-* Major changes for FieldInfo ([`982d8ec`](https://github.com/panates/postgresql-client/commit/982d8ec35c9f0b9e7a6fda2972d10c6890cfcfb8))
-
-# v1.1.1
-[2020-11-16]
-
-### Changes
-
-* Added dataTypeName to FieldInfo ([`6a9227d`](https://github.com/panates/postgresql-client/commit/6a9227de01bf0cccb28f3a8804c5dab526395700))
-
-# v1.1.0
-[2020-11-16]
-
-### Changes
-
-* Added elementDataTypeId and mappedType properties to FieldInfo ([`b554f07`](https://github.com/panates/postgresql-client/commit/b554f07421bfd3375aae90ff3212e5c84e93976c))
-
-# v1.0.5
-[2020-11-16]
-
-### Changes
-
-* Added fetch() method to cursor ([`4c98b80`](https://github.com/panates/postgresql-client/commit/4c98b807f578bbfc3cff257ebffec86abb67797b))
-* Added ability to get processId and secretKey ([`95bc84f`](https://github.com/panates/postgresql-client/commit/95bc84f9a4f3ce3e3c33b09a13cc79ff2f43ff85))
-
-# v1.0.4
-[2020-11-16]
-
-### Changes
-
-* Added ability to get processId and secretKey ([`acaf2d5`](https://github.com/panates/postgresql-client/commit/acaf2d55ab5143c9b0f0651118f2806a2c42ab2e))
-
-# v1.0.3
-[2020-11-16]
-
-### Changes
-
-* Fixed wrong repository address ([`ae3b149`](https://github.com/panates/postgresql-client/commit/ae3b149c31d35eda8b39fb1428c6cfde752890c9))
-
-# v1.0.2
-[2020-11-16]
-
-### Changes
-
-* Test fixed ([`0754ee8`](https://github.com/panates/postgresql-client/commit/0754ee845ef1cb5c61ed10f9f6fd89e9e8f60d14))
-* DOCUMENTATION.md is missing in files property ([`2d24c5f`](https://github.com/panates/postgresql-client/commit/2d24c5f4471f5390548d2377d429b9e1ec567032))
-
-# v1.0.1
-[2020-11-16]
-
-### Changes
-
-* ScriptExecutor test passing ([`79ee783`](https://github.com/panates/postgresql-client/commit/79ee783d877617713f5689c5b639a90f9bc6e8b5))
-* Initial commit ([`66713fe`](https://github.com/panates/postgresql-client/commit/66713fe1f68c32817bc8c0054126a5019ef90ec7))
-* Beta 1 commit ([`86195d8`](https://github.com/panates/postgresql-client/commit/86195d8446673be6da4b0706fff70d77bd607d13))
-* Data types implementation and tests done ([`6ba0ed5`](https://github.com/panates/postgresql-client/commit/6ba0ed545406d5d680175e9958316b0f1c0bb159))
-* Added int64 support for node&lt;12 ([`8637e98`](https://github.com/panates/postgresql-client/commit/8637e983ae3b56202edb12fd896344c0a1186e0d))
-* Beta 2 commit ([`17d3eb6`](https://github.com/panates/postgresql-client/commit/17d3eb621529a68fddc981d7b7521df80870d2f1))
-* Implemented extended query ([`7dea1f0`](https://github.com/panates/postgresql-client/commit/7dea1f0516a2f64709e9eaa824d8ce5d2593c32a))
-* 1.0 stable ([`df5c83e`](https://github.com/panates/postgresql-client/commit/df5c83e4e1d213355a1b0578c201b2992a066192))
-* Added house keeping ability to SmartBuffer ([`efc4fff`](https://github.com/panates/postgresql-client/commit/efc4fff19a5cc8b832e4f686d8d60a60531937f2))
-* Beta 1 commit ([`d6197dd`](https://github.com/panates/postgresql-client/commit/d6197ddda5c2f53a4c31783ebbd42de09e59a26b))
-* Updated travis url ([`3e3b661`](https://github.com/panates/postgresql-client/commit/3e3b66130c522df939dcc267939145ba64bec45c))
-* Initial commit ([`441d590`](https://github.com/panates/postgresql-client/commit/441d590b64a69085d792ede37a8d7c79591a29e7))
-* Added int64 support for node&lt;12 ([`bbac2f2`](https://github.com/panates/postgresql-client/commit/bbac2f2a0210171028011ce172d5759788fc4fcf))
-* Beta 1 commit ([`e68b3d8`](https://github.com/panates/postgresql-client/commit/e68b3d8df2a05bd8efa06975d3d53b9f65e5cd0e))
-* Implemented extended query ([`167e989`](https://github.com/panates/postgresql-client/commit/167e9892d105a0f14b41b4ef660d9c72acc4a900))
+* ScriptExecutor test passing ([`79ee783`](https://github.com/erayhanoglu/postgresql-client/commit/79ee783d877617713f5689c5b639a90f9bc6e8b5))
+* Added jsonb data type support ([`9b77962`](https://github.com/erayhanoglu/postgresql-client/commit/9b77962d892887798def53f5b58ebb5c9573e0e0))
+* Added .js extensions to import statements for esm module support ([`dd884f1`](https://github.com/erayhanoglu/postgresql-client/commit/dd884f1258abb47716a82edf6d2b945b89ef3160))
+* Added prettier code style ([`c0b732e`](https://github.com/erayhanoglu/postgresql-client/commit/c0b732e65400e5be844f157f5710694e1d9ebf1b))
+* Updated dependencies ([`b278e88`](https://github.com/erayhanoglu/postgresql-client/commit/b278e88a2cfdcf9467d20b3d9257607eddb731e1))
+* Initial commit ([`66713fe`](https://github.com/erayhanoglu/postgresql-client/commit/66713fe1f68c32817bc8c0054126a5019ef90ec7))
+* Now can detect uuid value when binding parameters ([`72a4ba0`](https://github.com/erayhanoglu/postgresql-client/commit/72a4ba0e58cdd93ab70cc2d6edf1bfc473225ca3))
+* Added prettier formatting ([`5e157f5`](https://github.com/erayhanoglu/postgresql-client/commit/5e157f5cdc145df1abc2c0eb641563638af93af9))
+* Updated dependencies and documentation ([`f7f93d6`](https://github.com/erayhanoglu/postgresql-client/commit/f7f93d6b3f869ef9f7517983f5489931c6c9b10d))
+* Make the package to a proxy of postgrejs package ([`69c9364`](https://github.com/erayhanoglu/postgresql-client/commit/69c9364b3b828360c1d0c95ce4ae641b4989e018))
+* Beta 1 commit ([`86195d8`](https://github.com/erayhanoglu/postgresql-client/commit/86195d8446673be6da4b0706fff70d77bd607d13))
+* Added Time data type ([`127fb81`](https://github.com/erayhanoglu/postgresql-client/commit/127fb8174c65215738e4450c97dd438f2f4e53a6))
+* Data types implementation and tests done ([`6ba0ed5`](https://github.com/erayhanoglu/postgresql-client/commit/6ba0ed545406d5d680175e9958316b0f1c0bb159))
+* Migrated eslint config to @panates/eslint-config ([`718f5fd`](https://github.com/erayhanoglu/postgresql-client/commit/718f5fd396f8966aef59ca3bcb4ecc6c52e8abce))
+* Added int64 support for node&lt;12 ([`8637e98`](https://github.com/erayhanoglu/postgresql-client/commit/8637e983ae3b56202edb12fd896344c0a1186e0d))
+* Updated eslint and jest ([`229d394`](https://github.com/erayhanoglu/postgresql-client/commit/229d394b3a956844c0a36665fa44edf3acda9bd3))
+* Updated dependencies ([`20abfde`](https://github.com/erayhanoglu/postgresql-client/commit/20abfdedb3dd3fa213f6cb66e00c132607deccb9))
+* Restructure files according to current Panates standards ([`58875b3`](https://github.com/erayhanoglu/postgresql-client/commit/58875b364c58b8b5e5ddac55373dd70ad5639bd0))
+* Updated eslint config ([`5ad54ee`](https://github.com/erayhanoglu/postgresql-client/commit/5ad54eeea34cb87d744a405afe21d15eb7357bd7))
+* Removed vulnerable "debug" package ([`019b3f4`](https://github.com/erayhanoglu/postgresql-client/commit/019b3f48955c62a9c764462b16cd52be8cf22ae2))
+* Updated dependencies ([`7298b3c`](https://github.com/erayhanoglu/postgresql-client/commit/7298b3c589257281963c351c5b5d18492fe0eaee))
+* Update dependencies ([`4b34c8b`](https://github.com/erayhanoglu/postgresql-client/commit/4b34c8be303062b2ef419bbc77e1d802b34ab4d2))
+* Updated dependencies ([`2a21190`](https://github.com/erayhanoglu/postgresql-client/commit/2a21190d2db2f70a1bbffb6cc77a8d9dc62b7636))
+* Update dependencies ([`b2ee542`](https://github.com/erayhanoglu/postgresql-client/commit/b2ee5423c58afd967eb90598977fa3bdc897920b))
+* Beta 2 commit ([`17d3eb6`](https://github.com/erayhanoglu/postgresql-client/commit/17d3eb621529a68fddc981d7b7521df80870d2f1))
+* Fixed: Does not determine data type in register order. ([`e27ea7a`](https://github.com/erayhanoglu/postgresql-client/commit/e27ea7a372fb5fbf1ccb3ede7b292bd58471d22f))
+* Updated dependencies ([`20fc14c`](https://github.com/erayhanoglu/postgresql-client/commit/20fc14ced4e5a3158d91faf7158dc81d7ca650e6))
+* Updated dependencies ([`5e6a902`](https://github.com/erayhanoglu/postgresql-client/commit/5e6a902ae7cac3da89cf887f5b56d4d179504c27))
+* Updated dependencies ([`80474a3`](https://github.com/erayhanoglu/postgresql-client/commit/80474a397cda00bce583268f05f57bd31ea9c2b2))
+* Updated dependencies ([`b8f05e2`](https://github.com/erayhanoglu/postgresql-client/commit/b8f05e2fd1d1600461373ccc51a131e4ff772b34))
+* Updated dependencies ([`e0cf321`](https://github.com/erayhanoglu/postgresql-client/commit/e0cf321f593f72580ba6dda14c104efedd8cad52))
+* Added auto changelog generation ([`0c7fc22`](https://github.com/erayhanoglu/postgresql-client/commit/0c7fc22f299363a8425835c11d4f6f4eeb64a9ea))
+* Updated dependencies ([`9dcf2c2`](https://github.com/erayhanoglu/postgresql-client/commit/9dcf2c2957621aefb0a1f9f3da66877c4d7382bf))
+* Updated dependencies ([`33a8272`](https://github.com/erayhanoglu/postgresql-client/commit/33a8272de6c51dbf29ea658a6d2a6436555513e1))
+* Added ESM module support ([`97857e3`](https://github.com/erayhanoglu/postgresql-client/commit/97857e3925099e62d52d3dd6edf076015579fa95))
+* Updated dependencies ([`51998d4`](https://github.com/erayhanoglu/postgresql-client/commit/51998d496cc84d721bf267ba29e8dda3c520fea7))
+* Now DataTypeMap.determine method lookup for data-types in reverse order. So last registered data-type returns first. ([`f2a20eb`](https://github.com/erayhanoglu/postgresql-client/commit/f2a20eb9a0eba5ebfd3e8f26d427469d71b1c041))
+* Implemented extended query ([`7dea1f0`](https://github.com/erayhanoglu/postgresql-client/commit/7dea1f0516a2f64709e9eaa824d8ce5d2593c32a))
+* Updated dependencies ([`f8be711`](https://github.com/erayhanoglu/postgresql-client/commit/f8be711c067233c41bd33d595b8630c6cbda1048))
+* Updated dependencies ([`66da42d`](https://github.com/erayhanoglu/postgresql-client/commit/66da42d1db31aa4009467366c1b7285fbef6cf54))
+* Update dependencies ([`acdf4dd`](https://github.com/erayhanoglu/postgresql-client/commit/acdf4ddbb6759b6a3ca65036f08a24a2c4685cea))
+* Updated dependencies ([`27d747f`](https://github.com/erayhanoglu/postgresql-client/commit/27d747f2f77ec6da677bda3ce2dff362671d985a))
+* Added LISTEN/NOTIFY feature ([`f0ac754`](https://github.com/erayhanoglu/postgresql-client/commit/f0ac754657da2f95977da6081f8c4265e83ba1b5))
+* Fixed exports for multi module support ([`e40dabe`](https://github.com/erayhanoglu/postgresql-client/commit/e40dabe8064dc89f3a468b00e5c623f4277d68c1))
+* Major changes for FieldInfo ([`982d8ec`](https://github.com/erayhanoglu/postgresql-client/commit/982d8ec35c9f0b9e7a6fda2972d10c6890cfcfb8))
+* Updated dependencies ([`15ad62c`](https://github.com/erayhanoglu/postgresql-client/commit/15ad62c53dee3562576537da36325bd7b69ae144))
+* Updated dependencies ([`8cef3fa`](https://github.com/erayhanoglu/postgresql-client/commit/8cef3fafce9e4051ebad350494f78417f7846361))
+* Dont add COMMIT to execute sql if not in transaction. ([`8f57c30`](https://github.com/erayhanoglu/postgresql-client/commit/8f57c30ea4e45b014a883644a5d4817bc25485be))
+* Updated dependencies ([`afce5f7`](https://github.com/erayhanoglu/postgresql-client/commit/afce5f735d241869e6ae937cb67b6378e70fb6d0))
+* Updated dependencies ([`c7e0bb0`](https://github.com/erayhanoglu/postgresql-client/commit/c7e0bb0e33c5b3e09cdf753a5b496833503820ee))
+* Fixed database error properties exists in parent msg object. ([`6d5ad49`](https://github.com/erayhanoglu/postgresql-client/commit/6d5ad49cea90b272419d532262c8a9e87070ac51))
+* Updated dependencies ([`5b4638b`](https://github.com/erayhanoglu/postgresql-client/commit/5b4638b198c6d68a1cf8f601c9e15965990bb917))
+* Updated dependencies ([`ddeb02c`](https://github.com/erayhanoglu/postgresql-client/commit/ddeb02c43c12994eab31b100aa8f25c949172565))
+* Implemented `sqlmode` query parameter for connection string and added `requireSSL` option to connection options. Now the driver tries SSL connection as a first choice. ([`5fc7e31`](https://github.com/erayhanoglu/postgresql-client/commit/5fc7e3144382d455aeeadb72b7301ec03e93f223))
+* Added support for UUID data type ([`d3cfbfd`](https://github.com/erayhanoglu/postgresql-client/commit/d3cfbfd24e4a5b8b1b36f9842d9a9384ee50e58a))
+* + Added onErrorRollback functionality for better transaction management ([`f92b65b`](https://github.com/erayhanoglu/postgresql-client/commit/f92b65b0422e6861edf728dcbd1504be9bd01e34))
+* Fixed: Needs type casting of uuid[] types ([`b6b1b45`](https://github.com/erayhanoglu/postgresql-client/commit/b6b1b4578346c49d00922a104ca6c251b0dffed6))
+* Added "numeric" data type ([`a0a6068`](https://github.com/erayhanoglu/postgresql-client/commit/a0a606838a4e3852298cc97c6ee704dd08ec36c6))
+* Updated dependencies ([`7faed1a`](https://github.com/erayhanoglu/postgresql-client/commit/7faed1a68149b82399d951df6f0e0f1c54cd1798))
+* Updated dependencies ([`ffddee3`](https://github.com/erayhanoglu/postgresql-client/commit/ffddee39210236043909485eb478a283441a2702))
+* Renames DatabaseConnectionParams.onErrorRollback to rollbackOnError ([`dc50fb1`](https://github.com/erayhanoglu/postgresql-client/commit/dc50fb1ee3b9975f188af60b7f3fed5f8d089fcc))
+* Updated dependencies ([`f1e23d4`](https://github.com/erayhanoglu/postgresql-client/commit/f1e23d41ce75fb5ebd6ce3fb834df0d2ff5c9e10))
+* 1.0 stable ([`df5c83e`](https://github.com/erayhanoglu/postgresql-client/commit/df5c83e4e1d213355a1b0578c201b2992a066192))
+* Added house keeping ability to SmartBuffer ([`efc4fff`](https://github.com/erayhanoglu/postgresql-client/commit/efc4fff19a5cc8b832e4f686d8d60a60531937f2))
+* Added fetchAsString option for Date, Timestamp and TimestampTz ([`18fa21c`](https://github.com/erayhanoglu/postgresql-client/commit/18fa21c9e7885fde570901afbcb9e9d4fffaccb8))
+* Added int2Vector data type with binary protocol ([`94a9a3b`](https://github.com/erayhanoglu/postgresql-client/commit/94a9a3b3a9e10ce7bdbce132c9195826ecc7aec1))
+* Fixed: throws "operator does not exist: integer = json" if bind param is null or undefined ([`f57bd9e`](https://github.com/erayhanoglu/postgresql-client/commit/f57bd9ec0ec813ac96ef29e51d032cad10113129))
+* Improved auto-commit operations by detecting sql is a transaction command ([`ab8e698`](https://github.com/erayhanoglu/postgresql-client/commit/ab8e698f205dfe81b81b30fe7a7520db2430006c))
+* Updated lightning-pool to new major version 3.0 ([`1ae9f50`](https://github.com/erayhanoglu/postgresql-client/commit/1ae9f50549ed4863c37b45022962e463a9a69110))
+* Added "debug" package ([`618a239`](https://github.com/erayhanoglu/postgresql-client/commit/618a239f4e09643460146dbffad77011768f78a9))
+* Updated dependencies ([`b1ec82a`](https://github.com/erayhanoglu/postgresql-client/commit/b1ec82a3967dfa789583248c2d9096c40c333601))
+* Updated documentation ([`38093f6`](https://github.com/erayhanoglu/postgresql-client/commit/38093f67924eaf7a3710e08ed5bc91f84fd3920f))
+* Added int2Vector data type with binary protocol ([`55bd87e`](https://github.com/erayhanoglu/postgresql-client/commit/55bd87e38a2ed1787957c1066ba51857d6c97c5d))
+* Added autoCommit option for connection.execute() and connection.query() methods. ([`d75e939`](https://github.com/erayhanoglu/postgresql-client/commit/d75e939cf79bc8c82879d3b46585a5d3c81d0391))
+* Updated lightning-pool to v4.0 ([`4ae3adf`](https://github.com/erayhanoglu/postgresql-client/commit/4ae3adf1e4600a7977c24c4d6903193b97e908da))
+* Added code of conduct document ([`9a64826`](https://github.com/erayhanoglu/postgresql-client/commit/9a6482677ba23fb6ca850f5357a7e169218c7efd))
+* Added elementDataTypeId and mappedType properties to FieldInfo ([`b554f07`](https://github.com/erayhanoglu/postgresql-client/commit/b554f07421bfd3375aae90ff3212e5c84e93976c))
+* Linted for code quality ([`73dad79`](https://github.com/erayhanoglu/postgresql-client/commit/73dad793b7a2dfeed7fcdeeb8d7736ca90247af1))
+* Beta 1 commit ([`d6197dd`](https://github.com/erayhanoglu/postgresql-client/commit/d6197ddda5c2f53a4c31783ebbd42de09e59a26b))
+* Moved from putil-taskqueue to power-tasks ([`7782551`](https://github.com/erayhanoglu/postgresql-client/commit/7782551725f3441d590c6802c9812d38704d89a6))
+* Fixed: Error stack do not show caller function. ([`08a1a8f`](https://github.com/erayhanoglu/postgresql-client/commit/08a1a8f4141b0066ae084de4f2a31d9d7e1bd4b9))
+* Updated dependencies ([`8e916c6`](https://github.com/erayhanoglu/postgresql-client/commit/8e916c605fc565b89a710d226161af1eeee2be33))
+* Add ability to configure buffer size ([`34d822a`](https://github.com/erayhanoglu/postgresql-client/commit/34d822a7b3a302d3a8b4b406586c3ce123cac97b))
+* Automatically convert BigInt numbers to formal number if value in safe integer range ([`110c544`](https://github.com/erayhanoglu/postgresql-client/commit/110c544809b30f8be83c0893bc58cddce08dbae2))
+* Updated dependencies ([`f7b0db8`](https://github.com/erayhanoglu/postgresql-client/commit/f7b0db8701f73d482e3b2bc3128fbfb646c5f6a6))
+* Implemented `sqlmode` query parameter for connection string and added `requireSSL` option to connection options. Now the driver tries SSL connection as a first choice. ([`3a27e85`](https://github.com/erayhanoglu/postgresql-client/commit/3a27e85dcbb7bd983dd2f835fa4ac785ad34e266))
+* Implement TC39 Explicit Resource Management proposal ([`cd5efa4`](https://github.com/erayhanoglu/postgresql-client/commit/cd5efa4377d3e7c0d9eb795d3db0fbc7a1bf2943))
+* Fixed: Missed sendSyncMessage after parse query. ([`d8a906e`](https://github.com/erayhanoglu/postgresql-client/commit/d8a906e385225b76dfec9291584099a1361fd732))
+* Update issue templates ([`f84ec38`](https://github.com/erayhanoglu/postgresql-client/commit/f84ec389e17925a41c1f70da4aba606173ddd90d))
+* Added "name" (OID:19) data type to data type map ([`6f56e2d`](https://github.com/erayhanoglu/postgresql-client/commit/6f56e2d00446dd9634eb50ff354dae2c983bceda))
+* Updated dependencies ([`bebcd28`](https://github.com/erayhanoglu/postgresql-client/commit/bebcd283a045720f51a74f51e8258492af4c3790))
+* Added lineNr, colNr and line properties to DatabaseError ([`950bfb0`](https://github.com/erayhanoglu/postgresql-client/commit/950bfb0a945a2662150bc2cb4a9be6ead29e2762))
+* Added ability to get processId and secretKey ([`acaf2d5`](https://github.com/erayhanoglu/postgresql-client/commit/acaf2d55ab5143c9b0f0651118f2806a2c42ab2e))
+* Updated readme ([`efbc574`](https://github.com/erayhanoglu/postgresql-client/commit/efbc57427b8d7c67aef412cd2433c660c1dac0a5))
+* Updated dependencies ([`114ffb9`](https://github.com/erayhanoglu/postgresql-client/commit/114ffb94e38dfc96fcc3c57d95807036f0c50045))
+* Added fetch() method to cursor ([`4c98b80`](https://github.com/erayhanoglu/postgresql-client/commit/4c98b807f578bbfc3cff257ebffec86abb67797b))
+* Update dependencies ([`3055d79`](https://github.com/erayhanoglu/postgresql-client/commit/3055d7959c9c959ac06fd5ee6b8741a10a013c84))
+* + Added releaseSavepoint() method ([`9fc61c9`](https://github.com/erayhanoglu/postgresql-client/commit/9fc61c9b5fe5215239bfb6374d7661cb11b7b142))
+* Added "debug" package ([`f365962`](https://github.com/erayhanoglu/postgresql-client/commit/f36596201bb455e7b6d5ed7460d7c72864b36b0f))
+* Add ability to configure buffer size ([`30d18c6`](https://github.com/erayhanoglu/postgresql-client/commit/30d18c6afeb3b973eaa640f772ed791ec0707bb0))
+* Added husky git hooks ([`d61fc2a`](https://github.com/erayhanoglu/postgresql-client/commit/d61fc2a0e540aad420f9b5ff4887cb6d0c609596))
+* Update dependencies ([`e58cc44`](https://github.com/erayhanoglu/postgresql-client/commit/e58cc443f7a0c774a5be546a950a9bcf6628a11f))
+* Remove developer content from the README and into CONTRIBUTING.md ([`58c2ce8`](https://github.com/erayhanoglu/postgresql-client/commit/58c2ce8c3f4e643b3bb984ad73666dd5fd40d729))
+* Add basic documentation on running the test suite. Add rimraf as dependency since its referenced by the scripts. Update the lockfile. Start to prepare for proper prettier formatting ([`4ca7b54`](https://github.com/erayhanoglu/postgresql-client/commit/4ca7b54c970601ee9f11839bae91ce7fb3a2ea8d))
+* Use default config ([`6f3e692`](https://github.com/erayhanoglu/postgresql-client/commit/6f3e692acf7a3f487e3056bc6a964032b50a0661))
+* Fixed: Some times server response invalid message to prepare statement message. ([`bb7a0c8`](https://github.com/erayhanoglu/postgresql-client/commit/bb7a0c8e2074120a2062e585183480b52677756e))
+* Changed ConnectionConfiguration.searchPath to "schema" ([`e6df86b`](https://github.com/erayhanoglu/postgresql-client/commit/e6df86b85384608cbfbb8ab5f96446dbfe5540bf))
+* Optimized build ([`17d029b`](https://github.com/erayhanoglu/postgresql-client/commit/17d029be5d799bab2cf49ba5258b978b20c0d52f))
+* Updated examples ([`94e092a`](https://github.com/erayhanoglu/postgresql-client/commit/94e092ade4e664b040bb85517eac4c61f8baeee4))
+* Support int2 and oid vector types ([`ce27006`](https://github.com/erayhanoglu/postgresql-client/commit/ce27006bb7441d004fd251bd6af29c4e99836b01))
+* Major changes for FieldInfo ([`32d2e08`](https://github.com/erayhanoglu/postgresql-client/commit/32d2e0887a9bc49bbf00a91c5f850908dd9ee3a5))
+* Updated travis url ([`3e3b661`](https://github.com/erayhanoglu/postgresql-client/commit/3e3b66130c522df939dcc267939145ba64bec45c))
+* Initial commit ([`441d590`](https://github.com/erayhanoglu/postgresql-client/commit/441d590b64a69085d792ede37a8d7c79591a29e7))
+* Updated config ([`8792c63`](https://github.com/erayhanoglu/postgresql-client/commit/8792c631eff7798edb1a76524acfce49e28d7593))
+* Minor fix for logging ([`1af9e94`](https://github.com/erayhanoglu/postgresql-client/commit/1af9e946018e9605882c13a85120793a65c1fada))
+* Added sessionParameters getter ([`4599db8`](https://github.com/erayhanoglu/postgresql-client/commit/4599db832beca8f3a741e1a690932818edd915e9))
+* Improved error message handling for more understandable to humans. ([`d9bbcb0`](https://github.com/erayhanoglu/postgresql-client/commit/d9bbcb0b1c10ab11816bc907d2b62977831d6082))
+* Added auto changelog generation ([`1ed1194`](https://github.com/erayhanoglu/postgresql-client/commit/1ed119481ee3a5ccdd841691812f6042fab2cb5a))
+* Implement TC39 Explicit Resource Management proposal ([`d3df6f4`](https://github.com/erayhanoglu/postgresql-client/commit/d3df6f496beca807ede191968806debcec631dbf))
+* Updated dependencies ([`b43ae89`](https://github.com/erayhanoglu/postgresql-client/commit/b43ae89c616615b622a462d2a0c112001943856a))
+* Now DataTypeMap.determine method lookup for data-types in reverse order. So last registered data-type returns first. ([`0f8cbc8`](https://github.com/erayhanoglu/postgresql-client/commit/0f8cbc809c24ca712e94ab21d2c2624e35a8b059))
+* Fixed: Wrong message sending when parameters contains null values ([`59e5bf4`](https://github.com/erayhanoglu/postgresql-client/commit/59e5bf4b4084c92dd4dbf8f7fc787f9d11709efa))
+* Updated roadmap ([`b0605e3`](https://github.com/erayhanoglu/postgresql-client/commit/b0605e3c487c587256991012395c07e7402b32dd))
+* Check if fetchCount value between unsigned inter range ([`cc35ee3`](https://github.com/erayhanoglu/postgresql-client/commit/cc35ee368e1a78b16b030ba259f921dca0287f89))
+* Fallback to "unknown" IOD, if can't determine data type ([`b0807e3`](https://github.com/erayhanoglu/postgresql-client/commit/b0807e38af758a29c5a1fb5db4af24dd1f5c9dfb))
+* Detect time format strings ([`14f8871`](https://github.com/erayhanoglu/postgresql-client/commit/14f88711b29824f720233ae051709e2f3fbabaf8))
+* Added rowType to all result interfaces ([`4bc26a7`](https://github.com/erayhanoglu/postgresql-client/commit/4bc26a7d1edd9405c1fd5f06eff6e60d4d11631e))
+* Updated dependencies ([`efc17f2`](https://github.com/erayhanoglu/postgresql-client/commit/efc17f292bc1d24de518cc5529e8a7aa383ad641))
+* Added "numeric" data type ([`d78a6fe`](https://github.com/erayhanoglu/postgresql-client/commit/d78a6fe55433aab90e2a00f7bc5f052eca69b2b3))
+* Updated node versions ([`7fb18dc`](https://github.com/erayhanoglu/postgresql-client/commit/7fb18dc0f208ec609ebddd84d0a3ea5db4c8534a))
+* Updated config ([`9fa5d12`](https://github.com/erayhanoglu/postgresql-client/commit/9fa5d12aac07842f1f9f4f0ff51a31dbe674b423))
+* Updated dependencies ([`c413990`](https://github.com/erayhanoglu/postgresql-client/commit/c4139903b2d8415a0ed4deb871b820158ab0f923))
+* Test fixed ([`0754ee8`](https://github.com/erayhanoglu/postgresql-client/commit/0754ee845ef1cb5c61ed10f9f6fd89e9e8f60d14))
+* Added prettier formatting ([`250673e`](https://github.com/erayhanoglu/postgresql-client/commit/250673e51c840e1fdfd4f9f79db5400af70b7d64))
+* Minor typing change ([`f036aa8`](https://github.com/erayhanoglu/postgresql-client/commit/f036aa833d8b973fd5e1cc8d229cac4b199a5c48))
+* Updated config ([`31dab8b`](https://github.com/erayhanoglu/postgresql-client/commit/31dab8b08ac5b6d5977bb89d47de60e964e09b52))
+* Fixed examples for cursor usage ([`5971341`](https://github.com/erayhanoglu/postgresql-client/commit/5971341edf1c7ce363ddcb3adb97b2491bf7714d))
+* Updated dependencies and documentation ([`120e7b5`](https://github.com/erayhanoglu/postgresql-client/commit/120e7b505f86c10ede34df1f8291c77b8be66e10))
+* Added dataTypeName to FieldInfo ([`6a9227d`](https://github.com/erayhanoglu/postgresql-client/commit/6a9227de01bf0cccb28f3a8804c5dab526395700))
+* Added int64 support for node&lt;12 ([`bbac2f2`](https://github.com/erayhanoglu/postgresql-client/commit/bbac2f2a0210171028011ce172d5759788fc4fcf))
+* Updated node versions ([`17692ca`](https://github.com/erayhanoglu/postgresql-client/commit/17692ca11cf4e440afe53b8a1bcd96041b36f352))
+* Updated config ([`6edd12e`](https://github.com/erayhanoglu/postgresql-client/commit/6edd12e902ac3f5f2f4784626edce151bf5eb569))
+* Fixed time data type issue ([`bf80893`](https://github.com/erayhanoglu/postgresql-client/commit/bf80893d628ed9ec14d448b7194ab89028b00463))
+* Expose Cursor class ([`1dc2de1`](https://github.com/erayhanoglu/postgresql-client/commit/1dc2de192cc02ed5ba392d974066295a7c0f5f2a))
+* Updated config ([`9c5f20c`](https://github.com/erayhanoglu/postgresql-client/commit/9c5f20c8e0a83633eaa66dd438d4cee3d93846a7))
+* Updated node versions ([`49c6eac`](https://github.com/erayhanoglu/postgresql-client/commit/49c6eacd56815f969f0aabce3b41c67369e10d27))
+* Updated dependencies ([`b8501a2`](https://github.com/erayhanoglu/postgresql-client/commit/b8501a2e5a73f0449de3e5373a1b559455af1051))
+* Updated readme ([`145afed`](https://github.com/erayhanoglu/postgresql-client/commit/145afed77f278648d48ca8b0d2aaf44e5887e07a))
+* Fixed cover script ([`ff3dbef`](https://github.com/erayhanoglu/postgresql-client/commit/ff3dbef2da974d08558475a9550778d70b8db4cc))
+* Update README.md ([`5bac71d`](https://github.com/erayhanoglu/postgresql-client/commit/5bac71d5c415128a02c01885fc9e0038ac21d4d5))
+* Updated doc ([`54b72be`](https://github.com/erayhanoglu/postgresql-client/commit/54b72beb898012daa16c99f60a98fbe98520ed18))
+* Added missed type mappings ([`f45124a`](https://github.com/erayhanoglu/postgresql-client/commit/f45124aa900c82318bdd39d1770ddeaa0df62acc))
+* Calling fetch of a closed cursor will not throw anymore ([`bacb630`](https://github.com/erayhanoglu/postgresql-client/commit/bacb63002121b5e0ee3c3765065f60e4de3496ba))
+* Changed ConnectionConfiguration.searchPath to "schema" ([`1fd8b7a`](https://github.com/erayhanoglu/postgresql-client/commit/1fd8b7ade85a61f5eb524054cef52d97e70f8635))
+* Added rowType getter to Cursor ([`045a2a2`](https://github.com/erayhanoglu/postgresql-client/commit/045a2a22e1c8d0519399c3bf70013adaf2c9e32d))
+* Added isClosed property ([`c9b54f7`](https://github.com/erayhanoglu/postgresql-client/commit/c9b54f7b19bf0270beff5947b02efac9ff4a12a9))
+* Beta 1 commit ([`e68b3d8`](https://github.com/erayhanoglu/postgresql-client/commit/e68b3d8df2a05bd8efa06975d3d53b9f65e5cd0e))
+* Added prettier formatting ([`289c40c`](https://github.com/erayhanoglu/postgresql-client/commit/289c40c1d65da55c56d814054d38715fa48a78f9))
+* Fixed typing for new eslint rules ([`95f3914`](https://github.com/erayhanoglu/postgresql-client/commit/95f3914f61d4883b68d4b131f6200b08fc8e2478))
+* Updated config ([`a18fe16`](https://github.com/erayhanoglu/postgresql-client/commit/a18fe169a79544ecb9e00b2186aa7f64b52cdb24))
+* Added ESM module support ([`a710889`](https://github.com/erayhanoglu/postgresql-client/commit/a7108898204f7f464927ba56a84f590bc42f7fa3))
+* Fixed: float numbers are recognized as bigint ([`1c19df4`](https://github.com/erayhanoglu/postgresql-client/commit/1c19df4a6054af51ac49ce22320167072c81c689))
+* Updated dependencies ([`4216ebd`](https://github.com/erayhanoglu/postgresql-client/commit/4216ebd064b37530a8bb9d8f810c87aadc14b7a6))
+* Fixed wrong repository address ([`ae3b149`](https://github.com/erayhanoglu/postgresql-client/commit/ae3b149c31d35eda8b39fb1428c6cfde752890c9))
+* Migrated eslint config to @panates/eslint-config ([`fb618e0`](https://github.com/erayhanoglu/postgresql-client/commit/fb618e0b606ce917b482ab8ae7bba1397ec10c2e))
+* Updated Node version ([`3fde2b9`](https://github.com/erayhanoglu/postgresql-client/commit/3fde2b95b80567178fd6cf3f13f4f4b5d05f713c))
+* Added prettier formatting ([`9d02a3f`](https://github.com/erayhanoglu/postgresql-client/commit/9d02a3f3a53f784fd7a3b917a2cef3e355638c20))
+* Updated dependencies ([`f723f8f`](https://github.com/erayhanoglu/postgresql-client/commit/f723f8fe7cc39746ba36f5ead791b78c184423aa))
+* Add OID for tid array ([`d99e3ee`](https://github.com/erayhanoglu/postgresql-client/commit/d99e3ee1e7fc768931553240adb556f003428ebd))
+* Updated badge url ([`b9335ed`](https://github.com/erayhanoglu/postgresql-client/commit/b9335ed40a8cc4fadee4fe90e3287a48f0978cf3))
+* Export SmartBuffer fully ([`8fca283`](https://github.com/erayhanoglu/postgresql-client/commit/8fca283bc3fa9be0653297f858e1ede652456289))
+* Now DataTypeMap.determine method lookup for data-types in reverse order. So last registered data-type returns first. ([`e1918c3`](https://github.com/erayhanoglu/postgresql-client/commit/e1918c3d9bd2cea6a084474d987df18b62b8b239))
+* Fixed typing for new eslint rules ([`f6e0d11`](https://github.com/erayhanoglu/postgresql-client/commit/f6e0d11041616ee243a95062a4e9d581d5406d62))
+* Updated config ([`9655d4f`](https://github.com/erayhanoglu/postgresql-client/commit/9655d4f222af21b889a7a9f5070530f8ea6bcd95))
+* Optimized build ([`e8305f9`](https://github.com/erayhanoglu/postgresql-client/commit/e8305f9da79a64484d5edc2cd0fe43c4ff7b2fa2))
+* Fixed typing ([`70a7076`](https://github.com/erayhanoglu/postgresql-client/commit/70a707672caf735d412cb0debe9661a69b8d688f))
+* Moved prettier to devDependencies ([`eecec11`](https://github.com/erayhanoglu/postgresql-client/commit/eecec113f5d0752a90755952ad044b29f6ddbbd8))
+* Added json casting for object values ([`b95766a`](https://github.com/erayhanoglu/postgresql-client/commit/b95766a3f6362fb7dfa5c453df8fc76bcf46a295))
+* Updated readme ([`d5af7cd`](https://github.com/erayhanoglu/postgresql-client/commit/d5af7cdf315d9b549df79d05c077a0037b03509a))
+* Updated dependencies ([`68cdfed`](https://github.com/erayhanoglu/postgresql-client/commit/68cdfed3966bdc9d4c88c9cc57053197cfc47cd1))
+* Fixed invalid constructing of DatabaseError ([`e904539`](https://github.com/erayhanoglu/postgresql-client/commit/e90453959b570ad2206415455c8f2b844e69ce85))
+* Set test schema ([`72b3dcc`](https://github.com/erayhanoglu/postgresql-client/commit/72b3dccbdea0b0352faec20e5581984780567a68))
+* Added "debug" package ([`12c0001`](https://github.com/erayhanoglu/postgresql-client/commit/12c00012a29f5365472d108e3b83cfdfa128c96b))
+* Added rowType to all result interfaces ([`edfaec6`](https://github.com/erayhanoglu/postgresql-client/commit/edfaec69751137ab488ac4af2cf97582059b7e45))
+* Fixex: query() does not return fields property if cursor option is true ([`6acec29`](https://github.com/erayhanoglu/postgresql-client/commit/6acec296e846c57cd3a38f1b26f58641ba688d10))
+* Added isClosed property ([`f2b3791`](https://github.com/erayhanoglu/postgresql-client/commit/f2b3791464fcc3d3a58fe317955c609aa0d2b1e6))
+* Added ability to get processId and secretKey ([`95bc84f`](https://github.com/erayhanoglu/postgresql-client/commit/95bc84f9a4f3ce3e3c33b09a13cc79ff2f43ff85))
+* Implemented extended query ([`167e989`](https://github.com/erayhanoglu/postgresql-client/commit/167e9892d105a0f14b41b4ef660d9c72acc4a900))
+* Added executor: node/default ([`2932861`](https://github.com/erayhanoglu/postgresql-client/commit/2932861c0e552361208aaceed16e94fbcf1a9456))
+* Added root ([`81c1028`](https://github.com/erayhanoglu/postgresql-client/commit/81c10284d45f53e807a153813c5b4f38594869bc))
+* Expose DatabaseError ([`5f1bbd2`](https://github.com/erayhanoglu/postgresql-client/commit/5f1bbd2ab2ad69a836e7a53ef92ecffcc352e46b))
+* Remove duplicated root in .editorconfig ([`a514ad5`](https://github.com/erayhanoglu/postgresql-client/commit/a514ad52f09ad92ade5b83ed599ccf1832b424ea))
+* Use the README.md from master ([`ac3f7b8`](https://github.com/erayhanoglu/postgresql-client/commit/ac3f7b831c4a515d2a0db74f53cb481d651a0200))
+* Added prettier formatting ([`0e0a521`](https://github.com/erayhanoglu/postgresql-client/commit/0e0a521435aae1c67ceeb27f13af6cc49066c2ad))
+* Fixed missing files."typings" ([`eabb616`](https://github.com/erayhanoglu/postgresql-client/commit/eabb616a54831ca245d6157452737a6484167d0b))
+* Added LISTEN/NOTIFY feature ([`73cb33b`](https://github.com/erayhanoglu/postgresql-client/commit/73cb33b41d0bc3515e71b5e0ff7ace68b9f4720b))
+* Added fetchAsString option for Date, Timestamp and TimestampTz ([`1d77cd1`](https://github.com/erayhanoglu/postgresql-client/commit/1d77cd1c9ef04d0fa90b5729e376be4bc5cfe8b6))
+* Set test schema ([`ec18c02`](https://github.com/erayhanoglu/postgresql-client/commit/ec18c02bb6964de9a42300002e3af0b6152de466))
+* Fixed: Missed sendSyncMessage ([`356af56`](https://github.com/erayhanoglu/postgresql-client/commit/356af563c10735a4bcec6651897eadbfa6566314))
+* DOCUMENTATION.md is missing in files property ([`2d24c5f`](https://github.com/erayhanoglu/postgresql-client/commit/2d24c5f4471f5390548d2377d429b9e1ec567032))
Index: node_modules/postgresql-client/esm/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export * from './constants.js';\r\nexport * from './data-type-map.js';\r\nexport * from './types.js';\r\nexport * from './connection/bind-param.js';\r\nexport * from './connection/connection.js';\r\nexport * from './connection/cursor.js';\r\nexport * from './connection/pool.js';\r\nexport * from './connection/prepared-statement.js';\r\nexport * from './interfaces/command-result.js';\r\nexport * from './interfaces/data-mapping-options.js';\r\nexport * from './interfaces/data-type.js';\r\nexport * from './interfaces/database-connection-params.js';\r\nexport * from './interfaces/field-info.js';\r\nexport * from './interfaces/query-options.js';\r\nexport * from './interfaces/query-result.js';\r\nexport * from './interfaces/script-execute-options.js';\r\nexport * from './interfaces/script-result.js';\r\nexport * from './interfaces/statement-prepare-options.js';\r\nexport * from './util/connection-config.js';\r\nexport * from './util/escape-literal.js';\r\nexport * from './util/parse-datetime.js';\r\nexport * from './util/stringify-arrayliteral.js';\r\nexport * from './util/stringify-for-sql.js';\r\nexport * from './protocol/smart-buffer.js';\r\nexport * from './protocol/database-error.js';\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/postgresql-client/esm/index.js b/node_modules/postgresql-client/esm/index.js
--- a/node_modules/postgresql-client/esm/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/postgresql-client/esm/index.js	(date 1753913034983)
@@ -1,25 +1,1 @@
-export * from './constants.js';
-export * from './data-type-map.js';
-export * from './types.js';
-export * from './connection/bind-param.js';
-export * from './connection/connection.js';
-export * from './connection/cursor.js';
-export * from './connection/pool.js';
-export * from './connection/prepared-statement.js';
-export * from './interfaces/command-result.js';
-export * from './interfaces/data-mapping-options.js';
-export * from './interfaces/data-type.js';
-export * from './interfaces/database-connection-params.js';
-export * from './interfaces/field-info.js';
-export * from './interfaces/query-options.js';
-export * from './interfaces/query-result.js';
-export * from './interfaces/script-execute-options.js';
-export * from './interfaces/script-result.js';
-export * from './interfaces/statement-prepare-options.js';
-export * from './util/connection-config.js';
-export * from './util/escape-literal.js';
-export * from './util/parse-datetime.js';
-export * from './util/stringify-arrayliteral.js';
-export * from './util/stringify-for-sql.js';
-export * from './protocol/smart-buffer.js';
-export * from './protocol/database-error.js';
+export * from 'postgrejs';
Index: node_modules/postgresql-client/typings/index.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export * from './constants.js';\r\nexport * from './data-type-map.js';\r\nexport * from './types.js';\r\nexport * from './connection/bind-param.js';\r\nexport * from './connection/connection.js';\r\nexport * from './connection/cursor.js';\r\nexport * from './connection/pool.js';\r\nexport * from './connection/prepared-statement.js';\r\nexport * from './interfaces/command-result.js';\r\nexport * from './interfaces/data-mapping-options.js';\r\nexport * from './interfaces/data-type.js';\r\nexport * from './interfaces/database-connection-params.js';\r\nexport * from './interfaces/field-info.js';\r\nexport * from './interfaces/query-options.js';\r\nexport * from './interfaces/query-result.js';\r\nexport * from './interfaces/script-execute-options.js';\r\nexport * from './interfaces/script-result.js';\r\nexport * from './interfaces/statement-prepare-options.js';\r\nexport * from './util/connection-config.js';\r\nexport * from './util/escape-literal.js';\r\nexport * from './util/parse-datetime.js';\r\nexport * from './util/stringify-arrayliteral.js';\r\nexport * from './util/stringify-for-sql.js';\r\nexport * from './protocol/smart-buffer.js';\r\nexport * from './protocol/database-error.js';\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/postgresql-client/typings/index.d.ts b/node_modules/postgresql-client/typings/index.d.ts
--- a/node_modules/postgresql-client/typings/index.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/postgresql-client/typings/index.d.ts	(date 1753913034990)
@@ -1,25 +1,1 @@
-export * from './constants.js';
-export * from './data-type-map.js';
-export * from './types.js';
-export * from './connection/bind-param.js';
-export * from './connection/connection.js';
-export * from './connection/cursor.js';
-export * from './connection/pool.js';
-export * from './connection/prepared-statement.js';
-export * from './interfaces/command-result.js';
-export * from './interfaces/data-mapping-options.js';
-export * from './interfaces/data-type.js';
-export * from './interfaces/database-connection-params.js';
-export * from './interfaces/field-info.js';
-export * from './interfaces/query-options.js';
-export * from './interfaces/query-result.js';
-export * from './interfaces/script-execute-options.js';
-export * from './interfaces/script-result.js';
-export * from './interfaces/statement-prepare-options.js';
-export * from './util/connection-config.js';
-export * from './util/escape-literal.js';
-export * from './util/parse-datetime.js';
-export * from './util/stringify-arrayliteral.js';
-export * from './util/stringify-for-sql.js';
-export * from './protocol/smart-buffer.js';
-export * from './protocol/database-error.js';
+export * from 'postgrejs';
Index: .idea/prettier.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/prettier.xml b/.idea/prettier.xml
new file mode 100644
--- /dev/null	(date 1753868952131)
+++ b/.idea/prettier.xml	(date 1753868952131)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="PrettierConfiguration">
+    <option name="myConfigurationMode" value="AUTOMATIC" />
+    <option name="myRunOnSave" value="true" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1753866603139)
+++ b/.idea/.gitignore	(date 1753866603139)
@@ -0,0 +1,5 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
Index: .idea/hotel-reservation.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/hotel-reservation.iml b/.idea/hotel-reservation.iml
new file mode 100644
--- /dev/null	(date 1754357892550)
+++ b/.idea/hotel-reservation.iml	(date 1754357892550)
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="WEB_MODULE" version="4">
+  <component name="NewModuleRootManager">
+    <content url="file://$MODULE_DIR$">
+      <excludeFolder url="file://$MODULE_DIR$/.tmp" />
+      <excludeFolder url="file://$MODULE_DIR$/temp" />
+      <excludeFolder url="file://$MODULE_DIR$/tmp" />
+      <excludeFolder url="file://$MODULE_DIR$/.trunk" />
+      <excludeFolder url="file://$MODULE_DIR$/.vscode" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1753866603049)
+++ b/.idea/vcs.xml	(date 1753866603049)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1753866603034)
+++ b/.idea/modules.xml	(date 1753866603034)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/hotel-reservation.iml" filepath="$PROJECT_DIR$/.idea/hotel-reservation.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/jsLibraryMappings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jsLibraryMappings.xml b/.idea/jsLibraryMappings.xml
new file mode 100644
--- /dev/null	(date 1753955059440)
+++ b/.idea/jsLibraryMappings.xml	(date 1753955059440)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="JavaScriptLibraryMappings">
+    <includedPredefinedLibrary name="Node.js Core" />
+  </component>
+</project>
\ No newline at end of file
Index: node_modules/es-define-property/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar GetIntrinsic = require('get-intrinsic');\r\n\r\n/** @type {import('.')} */\r\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true) || false;\r\nif ($defineProperty) {\r\n\ttry {\r\n\t\t$defineProperty({}, 'a', { value: 1 });\r\n\t} catch (e) {\r\n\t\t// IE 8 has a broken defineProperty\r\n\t\t$defineProperty = false;\r\n\t}\r\n}\r\n\r\nmodule.exports = $defineProperty;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/es-define-property/index.js b/node_modules/es-define-property/index.js
--- a/node_modules/es-define-property/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/es-define-property/index.js	(date 1753913035661)
@@ -1,9 +1,7 @@
 'use strict';
 
-var GetIntrinsic = require('get-intrinsic');
-
 /** @type {import('.')} */
-var $defineProperty = GetIntrinsic('%Object.defineProperty%', true) || false;
+var $defineProperty = Object.defineProperty || false;
 if ($defineProperty) {
 	try {
 		$defineProperty({}, 'a', { value: 1 });
Index: node_modules/doublylinked/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"doublylinked\",\r\n  \"description\": \"Doubly linked list implementation for JavaScript with iterator and array-like interface\",\r\n  \"version\": \"2.5.4\",\r\n  \"author\": \"Panates Ltd.\",\r\n  \"contributors\": [\r\n    \"Eray Hanoglu <e.hanoglu@panates.com>\"\r\n  ],\r\n  \"main\": \"lib/doubly-linked.js\",\r\n  \"types\": \"./lib/doubly-linked.d.ts\",\r\n  \"license\": \"MIT\",\r\n  \"repository\": \"panates/doublylinked\",\r\n  \"keywords\": [\r\n    \"javascript\",\r\n    \"doubly\",\r\n    \"linked\",\r\n    \"list\",\r\n    \"doubly linked list\"\r\n  ],\r\n  \"devDependencies\": {\r\n    \"eslint\": \"^8.56.0\",\r\n    \"eslint-config-google\": \"^0.14.0\",\r\n    \"mocha\": \"^10.2.0\",\r\n    \"nyc\": \"^15.1.0\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">= 10.0\"\r\n  },\r\n  \"directories\": {\r\n    \"lib\": \"./lib\"\r\n  },\r\n  \"files\": [\r\n    \"LICENSE\",\r\n    \"README.md\",\r\n    \"lib/\"\r\n  ],\r\n  \"nyc\": {\r\n    \"temp-directory\": \"./coverage/.nyc_output\"\r\n  },\r\n  \"scripts\": {\r\n    \"test\": \"mocha --require ./test/support/env --reporter spec --bail --check-leaks test/\",\r\n    \"cover\": \"nyc --reporter html --reporter text npm run test\",\r\n    \"travis-cover\": \"nyc --reporter lcovonly npm run test\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/doublylinked/package.json b/node_modules/doublylinked/package.json
--- a/node_modules/doublylinked/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/doublylinked/package.json	(date 1753913035760)
@@ -1,7 +1,7 @@
 {
   "name": "doublylinked",
   "description": "Doubly linked list implementation for JavaScript with iterator and array-like interface",
-  "version": "2.5.4",
+  "version": "2.5.6",
   "author": "Panates Ltd.",
   "contributors": [
     "Eray Hanoglu <e.hanoglu@panates.com>"
@@ -18,13 +18,16 @@
     "doubly linked list"
   ],
   "devDependencies": {
-    "eslint": "^8.56.0",
-    "eslint-config-google": "^0.14.0",
-    "mocha": "^10.2.0",
-    "nyc": "^15.1.0"
+    "@panates/eslint-config": "^2.0.3",
+    "@panates/eslint-config-ts": "^2.0.3",
+    "@panates/tsconfig": "^2.0.3",
+    "@types/jest": "^29.5.14",
+    "globals": "^15.14.0",
+    "husky": "^9.1.7",
+    "jest": "^29.7.0"
   },
   "engines": {
-    "node": ">= 10.0"
+    "node": ">= 16.0"
   },
   "directories": {
     "lib": "./lib"
@@ -34,12 +37,15 @@
     "README.md",
     "lib/"
   ],
-  "nyc": {
-    "temp-directory": "./coverage/.nyc_output"
-  },
   "scripts": {
-    "test": "mocha --require ./test/support/env --reporter spec --bail --check-leaks test/",
-    "cover": "nyc --reporter html --reporter text npm run test",
-    "travis-cover": "nyc --reporter lcovonly npm run test"
+    "lint": "eslint . --max-warnings=0",
+    "lint:fix": "eslint . --max-warnings=0 --fix",
+    "format": "prettier . --write --log-level=warn",
+    "test": "jest",
+    "precover": "rimraf coverage",
+    "cover": "jest --runInBand --detectOpenHandles --coverage",
+    "precitest": "rimraf coverage",
+    "citest": "jest --coverage --coverageReporters=lcov",
+    "prepare": "husky"
   }
 }
Index: node_modules/doublylinked/lib/doubly-linked.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/// <reference lib=\"es2015.symbol\" />\r\n\r\ndeclare module 'doublylinked' {\r\n\r\n  type Maybe<T> = T | void;\r\n\r\n  export namespace DoublyLinked {\r\n    export interface Node {\r\n      value: any;\r\n      readonly prev?: Node;\r\n      readonly next?: Node;\r\n\r\n      remove(): void;\r\n    }\r\n  }\r\n\r\n  export default class DoublyLinked<T = any> {\r\n    constructor(...element: T[]);\r\n\r\n    readonly cursor: DoublyLinked.Node;\r\n\r\n    readonly head: DoublyLinked.Node;\r\n\r\n    readonly length: number;\r\n\r\n    readonly tail: DoublyLinked.Node;\r\n\r\n    concat(...element: T[]): DoublyLinked<T>;\r\n\r\n    entries(): IterableIterator<[number, T]>;\r\n\r\n    keys(): IterableIterator<number>;\r\n\r\n    values(): IterableIterator<T>;\r\n\r\n    every(callback: (element: T, index?: number, thisArg?: any) => Maybe<boolean>, thisArg?: any): boolean;\r\n\r\n    everyRight(callback: (element: T, index?: number, thisArg?: any) => Maybe<boolean>, thisArg?: any): boolean;\r\n\r\n    filter(callback: (element: T, index?: number, thisArg?: any) => Maybe<boolean>, thisArg?: any): DoublyLinked<T>;\r\n\r\n    find(callback: (element: T, index?: number, thisArg?: any) => Maybe<boolean>, thisArg?: any): T;\r\n\r\n    forEach(callback: (element: T, index?: number, thisArg?: any) => void, thisArg?: any): void;\r\n\r\n    forEachRight(callback: (element: T, index?: number, thisArg?: any) => void, thisArg?: any): void;\r\n\r\n    includes(element: T, fromIndex?: number): boolean;\r\n\r\n    insert(...element: T[]): number;\r\n\r\n    join(separator: string): string;\r\n\r\n    map(callback: (element: T, index?: number, thisArg?: any) => void): DoublyLinked<T>;\r\n\r\n    next(): T;\r\n\r\n    pop(): T;\r\n\r\n    prev(): T;\r\n\r\n    push(...element: T[]): number;\r\n\r\n    reduce(callback: (accumulator: any, element: T, index?: number, thisArg?: any) => any, initialValue?: any): any;\r\n\r\n    reduceRight(callback: (accumulator: any, element: T, index?: number, thisArg?: any) => any, initialValue?: any): any;\r\n\r\n    remove(element: T, fromIndex?: number): any;\r\n\r\n    reset(): DoublyLinked<T>;\r\n\r\n    reverse(): DoublyLinked<T>;\r\n\r\n    shift(): T;\r\n\r\n    slice(start?: number, end?: number): T[];\r\n\r\n    some(callback: (element: T, index?: number, thisArg?: any) => boolean, thisArg?: any): boolean;\r\n\r\n    someRight(callback: (element: T, index?: number, thisArg?: any) => boolean, thisArg?: any): boolean;\r\n\r\n    toArray(): T[];\r\n\r\n    toString(): string;\r\n\r\n    unshift(...element: T[]): number;\r\n\r\n  }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/doublylinked/lib/doubly-linked.d.ts b/node_modules/doublylinked/lib/doubly-linked.d.ts
--- a/node_modules/doublylinked/lib/doubly-linked.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/doublylinked/lib/doubly-linked.d.ts	(date 1753913035763)
@@ -1,14 +1,13 @@
 /// <reference lib="es2015.symbol" />
 
 declare module 'doublylinked' {
-
   type Maybe<T> = T | void;
 
   export namespace DoublyLinked {
-    export interface Node {
-      value: any;
-      readonly prev?: Node;
-      readonly next?: Node;
+    export interface Node<T> {
+      value: T;
+      readonly prev?: Node<T>;
+      readonly next?: Node<T>;
 
       remove(): void;
     }
@@ -17,13 +16,13 @@
   export default class DoublyLinked<T = any> {
     constructor(...element: T[]);
 
-    readonly cursor: DoublyLinked.Node;
+    readonly cursor: DoublyLinked.Node<T>;
 
-    readonly head: DoublyLinked.Node;
+    readonly head: DoublyLinked.Node<T>;
 
     readonly length: number;
 
-    readonly tail: DoublyLinked.Node;
+    readonly tail: DoublyLinked.Node<T>;
 
     concat(...element: T[]): DoublyLinked<T>;
 
@@ -33,17 +32,35 @@
 
     values(): IterableIterator<T>;
 
-    every(callback: (element: T, index?: number, thisArg?: any) => Maybe<boolean>, thisArg?: any): boolean;
+    every(
+      callback: (element: T, index?: number, thisArg?: any) => Maybe<boolean>,
+      thisArg?: any,
+    ): boolean;
 
-    everyRight(callback: (element: T, index?: number, thisArg?: any) => Maybe<boolean>, thisArg?: any): boolean;
+    everyRight(
+      callback: (element: T, index?: number, thisArg?: any) => Maybe<boolean>,
+      thisArg?: any,
+    ): boolean;
 
-    filter(callback: (element: T, index?: number, thisArg?: any) => Maybe<boolean>, thisArg?: any): DoublyLinked<T>;
+    filter(
+      callback: (element: T, index?: number, thisArg?: any) => Maybe<boolean>,
+      thisArg?: any,
+    ): DoublyLinked<T>;
 
-    find(callback: (element: T, index?: number, thisArg?: any) => Maybe<boolean>, thisArg?: any): T;
+    find(
+      callback: (element: T, index?: number, thisArg?: any) => Maybe<boolean>,
+      thisArg?: any,
+    ): T;
 
-    forEach(callback: (element: T, index?: number, thisArg?: any) => void, thisArg?: any): void;
+    forEach(
+      callback: (element: T, index?: number, thisArg?: any) => void,
+      thisArg?: any,
+    ): void;
 
-    forEachRight(callback: (element: T, index?: number, thisArg?: any) => void, thisArg?: any): void;
+    forEachRight(
+      callback: (element: T, index?: number, thisArg?: any) => void,
+      thisArg?: any,
+    ): void;
 
     includes(element: T, fromIndex?: number): boolean;
 
@@ -51,7 +68,9 @@
 
     join(separator: string): string;
 
-    map(callback: (element: T, index?: number, thisArg?: any) => void): DoublyLinked<T>;
+    map(
+      callback: (element: T, index?: number, thisArg?: any) => void,
+    ): DoublyLinked<T>;
 
     next(): T;
 
@@ -61,9 +80,25 @@
 
     push(...element: T[]): number;
 
-    reduce(callback: (accumulator: any, element: T, index?: number, thisArg?: any) => any, initialValue?: any): any;
+    reduce(
+      callback: (
+        accumulator: any,
+        element: T,
+        index?: number,
+        thisArg?: any,
+      ) => any,
+      initialValue?: any,
+    ): any;
 
-    reduceRight(callback: (accumulator: any, element: T, index?: number, thisArg?: any) => any, initialValue?: any): any;
+    reduceRight(
+      callback: (
+        accumulator: any,
+        element: T,
+        index?: number,
+        thisArg?: any,
+      ) => any,
+      initialValue?: any,
+    ): any;
 
     remove(element: T, fromIndex?: number): any;
 
@@ -75,16 +110,20 @@
 
     slice(start?: number, end?: number): T[];
 
-    some(callback: (element: T, index?: number, thisArg?: any) => boolean, thisArg?: any): boolean;
+    some(
+      callback: (element: T, index?: number, thisArg?: any) => boolean,
+      thisArg?: any,
+    ): boolean;
 
-    someRight(callback: (element: T, index?: number, thisArg?: any) => boolean, thisArg?: any): boolean;
+    someRight(
+      callback: (element: T, index?: number, thisArg?: any) => boolean,
+      thisArg?: any,
+    ): boolean;
 
     toArray(): T[];
 
     toString(): string;
 
     unshift(...element: T[]): number;
-
   }
-
 }
Index: node_modules/es-define-property/CHANGELOG.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## v1.0.0 - 2024-02-12\r\n\r\n### Commits\r\n\r\n- Initial implementation, tests, readme, types [`3e154e1`](https://github.com/ljharb/es-define-property/commit/3e154e11a2fee09127220f5e503bf2c0a31dd480)\r\n- Initial commit [`07d98de`](https://github.com/ljharb/es-define-property/commit/07d98de34a4dc31ff5e83a37c0c3f49e0d85cd50)\r\n- npm init [`c4eb634`](https://github.com/ljharb/es-define-property/commit/c4eb6348b0d3886aac36cef34ad2ee0665ea6f3e)\r\n- Only apps should have lockfiles [`7af86ec`](https://github.com/ljharb/es-define-property/commit/7af86ec1d311ec0b17fdfe616a25f64276903856)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/es-define-property/CHANGELOG.md b/node_modules/es-define-property/CHANGELOG.md
--- a/node_modules/es-define-property/CHANGELOG.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/es-define-property/CHANGELOG.md	(date 1753913035667)
@@ -5,6 +5,20 @@
 The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
 and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
 
+## [v1.0.1](https://github.com/ljharb/es-define-property/compare/v1.0.0...v1.0.1) - 2024-12-06
+
+### Commits
+
+- [types] use shared tsconfig [`954a663`](https://github.com/ljharb/es-define-property/commit/954a66360326e508a0e5daa4b07493d58f5e110e)
+- [actions] split out node 10-20, and 20+ [`3a8e84b`](https://github.com/ljharb/es-define-property/commit/3a8e84b23883f26ff37b3e82ff283834228e18c6)
+- [Dev Deps] update `@ljharb/eslint-config`, `@ljharb/tsconfig`, `@types/get-intrinsic`, `@types/tape`, `auto-changelog`, `gopd`, `tape` [`86ae27b`](https://github.com/ljharb/es-define-property/commit/86ae27bb8cc857b23885136fad9cbe965ae36612)
+- [Refactor] avoid using `get-intrinsic` [`02480c0`](https://github.com/ljharb/es-define-property/commit/02480c0353ef6118965282977c3864aff53d98b1)
+- [Tests] replace `aud` with `npm audit` [`f6093ff`](https://github.com/ljharb/es-define-property/commit/f6093ff74ab51c98015c2592cd393bd42478e773)
+- [Tests] configure testling [`7139e66`](https://github.com/ljharb/es-define-property/commit/7139e66959247a56086d9977359caef27c6849e7)
+- [Dev Deps] update `tape` [`b901b51`](https://github.com/ljharb/es-define-property/commit/b901b511a75e001a40ce1a59fef7d9ffcfc87482)
+- [Tests] fix types in tests [`469d269`](https://github.com/ljharb/es-define-property/commit/469d269fd141b1e773ec053a9fa35843493583e0)
+- [Dev Deps] add missing peer dep [`733acfb`](https://github.com/ljharb/es-define-property/commit/733acfb0c4c96edf337e470b89a25a5b3724c352)
+
 ## v1.0.0 - 2024-02-12
 
 ### Commits
Index: node_modules/es-define-property/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n\t\"name\": \"es-define-property\",\r\n\t\"version\": \"1.0.0\",\r\n\t\"description\": \"`Object.defineProperty`, but not IE 8's broken one.\",\r\n\t\"main\": \"index.js\",\r\n\t\"types\": \"./index.d.ts\",\r\n\t\"exports\": {\r\n\t\t\".\": \"./index.js\",\r\n\t\t\"./package.json\": \"./package.json\"\r\n\t},\r\n\t\"sideEffects\": false,\r\n\t\"scripts\": {\r\n\t\t\"prepack\": \"npmignore --auto --commentLines=autogenerated\",\r\n\t\t\"prepublish\": \"not-in-publish || npm run prepublishOnly\",\r\n\t\t\"prepublishOnly\": \"safe-publish-latest\",\r\n\t\t\"prelint\": \"evalmd README.md\",\r\n\t\t\"lint\": \"eslint --ext=js,mjs .\",\r\n\t\t\"postlint\": \"tsc -p .\",\r\n\t\t\"pretest\": \"npm run lint\",\r\n\t\t\"tests-only\": \"nyc tape 'test/**/*.js'\",\r\n\t\t\"test\": \"npm run tests-only\",\r\n\t\t\"posttest\": \"aud --production\",\r\n\t\t\"version\": \"auto-changelog && git add CHANGELOG.md\",\r\n\t\t\"postversion\": \"auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \\\"v$(node -e \\\"console.log(require('./package.json').version)\\\")\\\"\"\r\n\t},\r\n\t\"repository\": {\r\n\t\t\"type\": \"git\",\r\n\t\t\"url\": \"git+https://github.com/ljharb/es-define-property.git\"\r\n\t},\r\n\t\"keywords\": [\r\n\t\t\"javascript\",\r\n\t\t\"ecmascript\",\r\n\t\t\"object\",\r\n\t\t\"define\",\r\n\t\t\"property\",\r\n\t\t\"defineProperty\",\r\n\t\t\"Object.defineProperty\"\r\n\t],\r\n\t\"author\": \"Jordan Harband <ljharb@gmail.com>\",\r\n\t\"license\": \"MIT\",\r\n\t\"bugs\": {\r\n\t\t\"url\": \"https://github.com/ljharb/es-define-property/issues\"\r\n\t},\r\n\t\"homepage\": \"https://github.com/ljharb/es-define-property#readme\",\r\n\t\"dependencies\": {\r\n\t\t\"get-intrinsic\": \"^1.2.4\"\r\n\t},\r\n\t\"devDependencies\": {\r\n\t\t\"@ljharb/eslint-config\": \"^21.1.0\",\r\n\t\t\"@types/get-intrinsic\": \"^1.2.2\",\r\n\t\t\"@types/gopd\": \"^1.0.3\",\r\n\t\t\"@types/tape\": \"^5.6.4\",\r\n\t\t\"aud\": \"^2.0.4\",\r\n\t\t\"auto-changelog\": \"^2.4.0\",\r\n\t\t\"eslint\": \"^8.8.0\",\r\n\t\t\"evalmd\": \"^0.0.19\",\r\n\t\t\"gopd\": \"^1.0.1\",\r\n\t\t\"in-publish\": \"^2.0.1\",\r\n\t\t\"npmignore\": \"^0.3.1\",\r\n\t\t\"nyc\": \"^10.3.2\",\r\n\t\t\"safe-publish-latest\": \"^2.0.0\",\r\n\t\t\"tape\": \"^5.7.4\",\r\n\t\t\"typescript\": \"next\"\r\n\t},\r\n\t\"engines\": {\r\n\t\t\"node\": \">= 0.4\"\r\n\t},\r\n\t\"auto-changelog\": {\r\n\t\t\"output\": \"CHANGELOG.md\",\r\n\t\t\"template\": \"keepachangelog\",\r\n\t\t\"unreleased\": false,\r\n\t\t\"commitLimit\": false,\r\n\t\t\"backfillLimit\": false,\r\n\t\t\"hideCredit\": true\r\n\t},\r\n\t\"publishConfig\": {\r\n\t\t\"ignore\": [\r\n\t\t\t\".github/workflows\"\r\n\t\t]\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/es-define-property/package.json b/node_modules/es-define-property/package.json
--- a/node_modules/es-define-property/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/es-define-property/package.json	(date 1753913035665)
@@ -1,6 +1,6 @@
 {
 	"name": "es-define-property",
-	"version": "1.0.0",
+	"version": "1.0.1",
 	"description": "`Object.defineProperty`, but not IE 8's broken one.",
 	"main": "index.js",
 	"types": "./index.d.ts",
@@ -19,7 +19,7 @@
 		"pretest": "npm run lint",
 		"tests-only": "nyc tape 'test/**/*.js'",
 		"test": "npm run tests-only",
-		"posttest": "aud --production",
+		"posttest": "npx npm@'>= 10.2' audit --production",
 		"version": "auto-changelog && git add CHANGELOG.md",
 		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
 	},
@@ -42,29 +42,29 @@
 		"url": "https://github.com/ljharb/es-define-property/issues"
 	},
 	"homepage": "https://github.com/ljharb/es-define-property#readme",
-	"dependencies": {
-		"get-intrinsic": "^1.2.4"
-	},
 	"devDependencies": {
-		"@ljharb/eslint-config": "^21.1.0",
-		"@types/get-intrinsic": "^1.2.2",
+		"@ljharb/eslint-config": "^21.1.1",
+		"@ljharb/tsconfig": "^0.2.2",
 		"@types/gopd": "^1.0.3",
-		"@types/tape": "^5.6.4",
-		"aud": "^2.0.4",
-		"auto-changelog": "^2.4.0",
+		"@types/tape": "^5.6.5",
+		"auto-changelog": "^2.5.0",
+		"encoding": "^0.1.13",
 		"eslint": "^8.8.0",
 		"evalmd": "^0.0.19",
-		"gopd": "^1.0.1",
+		"gopd": "^1.2.0",
 		"in-publish": "^2.0.1",
 		"npmignore": "^0.3.1",
 		"nyc": "^10.3.2",
 		"safe-publish-latest": "^2.0.0",
-		"tape": "^5.7.4",
+		"tape": "^5.9.0",
 		"typescript": "next"
 	},
 	"engines": {
 		"node": ">= 0.4"
 	},
+	"testling": {
+		"files": "test/index.js"
+	},
 	"auto-changelog": {
 		"output": "CHANGELOG.md",
 		"template": "keepachangelog",
Index: node_modules/es-define-property/tsconfig.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n\t\"compilerOptions\": {\r\n\t\t/* Visit https://aka.ms/tsconfig.json to read more about this file */\r\n\r\n\t\t/* Projects */\r\n\r\n\t\t/* Language and Environment */\r\n\t\t\"target\": \"es2022\",\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */\r\n\t\t// \"lib\": [],\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Specify a set of bundled library declaration files that describe the target runtime environment. */\r\n\t\t// \"noLib\": true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Disable including any library files, including the default lib.d.ts. */\r\n\t\t\"useDefineForClassFields\": true,\t\t\t\t\t\t\t\t\t\t /* Emit ECMAScript-standard-compliant class fields. */\r\n\t\t// \"moduleDetection\": \"auto\",\t\t\t\t\t\t\t\t\t\t\t\t/* Control what method is used to detect module-format JS files. */\r\n\r\n\t\t/* Modules */\r\n\t\t\"module\": \"commonjs\",\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Specify what module code is generated. */\r\n\t\t// \"rootDir\": \"./\",\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Specify the root folder within your source files. */\r\n\t\t// \"moduleResolution\": \"node\",\t\t\t\t\t\t\t\t\t\t\t /* Specify how TypeScript looks up a file from a given module specifier. */\r\n\t\t// \"baseUrl\": \"./\",\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Specify the base directory to resolve non-relative module names. */\r\n\t\t// \"paths\": {},\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Specify a set of entries that re-map imports to additional lookup locations. */\r\n\t\t// \"rootDirs\": [],\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t /* Allow multiple folders to be treated as one when resolving modules. */\r\n\t\t// \"typeRoots\": [\"types\"],\t\t\t\t\t\t\t\t\t\t\t\t\t /* Specify multiple folders that act like `./node_modules/@types`. */\r\n\t\t\"resolveJsonModule\": true,\t\t\t\t\t\t\t\t\t\t\t\t\t /* Enable importing .json files. */\r\n\t\t// \"allowArbitraryExtensions\": true,\t\t\t\t\t\t\t\t /* Enable importing files with any extension, provided a declaration file is present. */\r\n\r\n\t\t/* JavaScript Support */\r\n\t\t\"allowJs\": true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t /* Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files. */\r\n\t\t\"checkJs\": true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t /* Enable error reporting in type-checked JavaScript files. */\r\n\t\t\"maxNodeModuleJsDepth\": 1,\t\t\t\t\t\t\t\t\t\t\t\t\t /* Specify the maximum folder depth used for checking JavaScript files from `node_modules`. Only applicable with `allowJs`. */\r\n\r\n\t\t/* Emit */\r\n\t\t\"declaration\": true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t /* Generate .d.ts files from TypeScript and JavaScript files in your project. */\r\n\t\t\"declarationMap\": true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Create sourcemaps for d.ts files. */\r\n\t\t\"noEmit\": true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Disable emitting files from a compilation. */\r\n\r\n\t\t/* Interop Constraints */\r\n\t\t\"allowSyntheticDefaultImports\": true,\t\t\t\t\t\t\t\t/* Allow `import x from y` when a module doesn't have a default export. */\r\n\t\t\"esModuleInterop\": true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */\r\n\t\t\"forceConsistentCasingInFileNames\": true,\t\t\t\t\t\t/* Ensure that casing is correct in imports. */\r\n\r\n\t\t/* Type Checking */\r\n\t\t\"strict\": true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Enable all strict type-checking options. */\r\n\r\n\t\t/* Completeness */\r\n\t\t// \"skipLibCheck\": true\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Skip type checking all .d.ts files. */\r\n\t},\r\n\t\"exclude\": [\r\n\t\t\"coverage\",\r\n\t\t\"test/list-exports\"\r\n\t],\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/es-define-property/tsconfig.json b/node_modules/es-define-property/tsconfig.json
--- a/node_modules/es-define-property/tsconfig.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/es-define-property/tsconfig.json	(date 1753913035666)
@@ -1,47 +1,7 @@
 {
+	"extends": "@ljharb/tsconfig",
 	"compilerOptions": {
-		/* Visit https://aka.ms/tsconfig.json to read more about this file */
-
-		/* Projects */
-
-		/* Language and Environment */
-		"target": "es2022",																	/* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
-		// "lib": [],																				/* Specify a set of bundled library declaration files that describe the target runtime environment. */
-		// "noLib": true,																		/* Disable including any library files, including the default lib.d.ts. */
-		"useDefineForClassFields": true,										 /* Emit ECMAScript-standard-compliant class fields. */
-		// "moduleDetection": "auto",												/* Control what method is used to detect module-format JS files. */
-
-		/* Modules */
-		"module": "commonjs",																/* Specify what module code is generated. */
-		// "rootDir": "./",																	/* Specify the root folder within your source files. */
-		// "moduleResolution": "node",											 /* Specify how TypeScript looks up a file from a given module specifier. */
-		// "baseUrl": "./",																	/* Specify the base directory to resolve non-relative module names. */
-		// "paths": {},																			/* Specify a set of entries that re-map imports to additional lookup locations. */
-		// "rootDirs": [],																	 /* Allow multiple folders to be treated as one when resolving modules. */
-		// "typeRoots": ["types"],													 /* Specify multiple folders that act like `./node_modules/@types`. */
-		"resolveJsonModule": true,													 /* Enable importing .json files. */
-		// "allowArbitraryExtensions": true,								 /* Enable importing files with any extension, provided a declaration file is present. */
-
-		/* JavaScript Support */
-		"allowJs": true,																		 /* Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files. */
-		"checkJs": true,																		 /* Enable error reporting in type-checked JavaScript files. */
-		"maxNodeModuleJsDepth": 1,													 /* Specify the maximum folder depth used for checking JavaScript files from `node_modules`. Only applicable with `allowJs`. */
-
-		/* Emit */
-		"declaration": true,																 /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
-		"declarationMap": true,															/* Create sourcemaps for d.ts files. */
-		"noEmit": true,																			/* Disable emitting files from a compilation. */
-
-		/* Interop Constraints */
-		"allowSyntheticDefaultImports": true,								/* Allow `import x from y` when a module doesn't have a default export. */
-		"esModuleInterop": true,														 /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */
-		"forceConsistentCasingInFileNames": true,						/* Ensure that casing is correct in imports. */
-
-		/* Type Checking */
-		"strict": true,																			/* Enable all strict type-checking options. */
-
-		/* Completeness */
-		// "skipLibCheck": true															/* Skip type checking all .d.ts files. */
+		"target": "es2022",
 	},
 	"exclude": [
 		"coverage",
Index: node_modules/es-define-property/test/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar $defineProperty = require('../');\r\n\r\nvar test = require('tape');\r\nvar gOPD = require('gopd');\r\n\r\ntest('defineProperty: supported', { skip: !$defineProperty }, function (t) {\r\n\tt.plan(4);\r\n\r\n\tt.equal(typeof $defineProperty, 'function', 'defineProperty is supported');\r\n\tif ($defineProperty && gOPD) { // this `if` check is just to shut TS up\r\n\t\tvar o = { a: 1 };\r\n\r\n\t\t$defineProperty(o, 'b', { enumerable: true, value: 2 });\r\n\t\tt.deepEqual(\r\n\t\t\tgOPD(o, 'b'),\r\n\t\t\t{\r\n\t\t\t\tconfigurable: false,\r\n\t\t\t\tenumerable: true,\r\n\t\t\t\tvalue: 2,\r\n\t\t\t\twritable: false\r\n\t\t\t},\r\n\t\t\t'property descriptor is as expected'\r\n\t\t);\r\n\r\n\t\t$defineProperty(o, 'c', { enumerable: false, value: 3, writable: true });\r\n\t\tt.deepEqual(\r\n\t\t\tgOPD(o, 'c'),\r\n\t\t\t{\r\n\t\t\t\tconfigurable: false,\r\n\t\t\t\tenumerable: false,\r\n\t\t\t\tvalue: 3,\r\n\t\t\t\twritable: true\r\n\t\t\t},\r\n\t\t\t'property descriptor is as expected'\r\n\t\t);\r\n\t}\r\n\r\n\tt.equal($defineProperty, Object.defineProperty, 'defineProperty is Object.defineProperty');\r\n\r\n\tt.end();\r\n});\r\n\r\ntest('defineProperty: not supported', { skip: !!$defineProperty }, function (t) {\r\n\tt.notOk($defineProperty, 'defineProperty is not supported');\r\n\r\n\tt.match(\r\n\t\ttypeof $defineProperty,\r\n\t\t/^(?:undefined|boolean)$/,\r\n\t\t'`typeof defineProperty` is `undefined` or `boolean`'\r\n\t);\r\n\r\n\tt.end();\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/es-define-property/test/index.js b/node_modules/es-define-property/test/index.js
--- a/node_modules/es-define-property/test/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/es-define-property/test/index.js	(date 1753913035663)
@@ -10,6 +10,7 @@
 
 	t.equal(typeof $defineProperty, 'function', 'defineProperty is supported');
 	if ($defineProperty && gOPD) { // this `if` check is just to shut TS up
+		/** @type {{ a: number, b?: number, c?: number }} */
 		var o = { a: 1 };
 
 		$defineProperty(o, 'b', { enumerable: true, value: 2 });
Index: routes/usersRoute.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const express = require('express')\r\n\r\nconst router = express.Router()\r\n\r\nconst {\r\n  getAllUsers,\r\n  getSingleUser,\r\n  deleteUser\r\n} = require('../controllers/userController')\r\n\r\nrouter.get('/getAllUsers', getAllUsers)\r\nrouter.get('/:id', getSingleUser)\r\nrouter.delete('/:id', deleteUser)\r\n\r\nmodule.exports = router\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/routes/usersRoute.js b/routes/usersRoute.js
--- a/routes/usersRoute.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/routes/usersRoute.js	(date 1753870609449)
@@ -2,6 +2,7 @@
 
 const router = express.Router()
 
+
 const {
   getAllUsers,
   getSingleUser,
Index: routes/roomsRoute.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const express = require('express')\r\n\r\nconst router = express.Router()\r\n\r\nconst {\r\n  createRooms,\r\n  getAllRooms,\r\n  getSingleRoom,\r\n  deleteRoom,\r\n  updateRoom\r\n} = require('../controllers/roomsController')\r\n\r\nrouter.post('/createRoom', createRooms)\r\nrouter.get('/getRooms', getAllRooms)\r\nrouter.put('/:id', updateRoom)\r\nrouter.get('/:id', getSingleRoom)\r\nrouter.delete('/:id', deleteRoom)\r\n\r\nmodule.exports = router\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/routes/roomsRoute.js b/routes/roomsRoute.js
--- a/routes/roomsRoute.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/routes/roomsRoute.js	(date 1716046718494)
@@ -7,13 +7,14 @@
   getAllRooms,
   getSingleRoom,
   deleteRoom,
-  updateRoom
+  updateRoom,
+  uploadImage
 } = require('../controllers/roomsController')
 
 router.post('/createRoom', createRooms)
+router.post('/uploadImage', uploadImage)
 router.get('/getRooms', getAllRooms)
 router.put('/:id', updateRoom)
 router.get('/:id', getSingleRoom)
 router.delete('/:id', deleteRoom)
-
 module.exports = router
Index: node_modules/finalhandler/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"finalhandler\",\r\n  \"description\": \"Node.js final http responder\",\r\n  \"version\": \"1.2.0\",\r\n  \"author\": \"Douglas Christopher Wilson <doug@somethingdoug.com>\",\r\n  \"license\": \"MIT\",\r\n  \"repository\": \"pillarjs/finalhandler\",\r\n  \"dependencies\": {\r\n    \"debug\": \"2.6.9\",\r\n    \"encodeurl\": \"~1.0.2\",\r\n    \"escape-html\": \"~1.0.3\",\r\n    \"on-finished\": \"2.4.1\",\r\n    \"parseurl\": \"~1.3.3\",\r\n    \"statuses\": \"2.0.1\",\r\n    \"unpipe\": \"~1.0.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"eslint\": \"7.32.0\",\r\n    \"eslint-config-standard\": \"14.1.1\",\r\n    \"eslint-plugin-import\": \"2.25.4\",\r\n    \"eslint-plugin-markdown\": \"2.2.1\",\r\n    \"eslint-plugin-node\": \"11.1.0\",\r\n    \"eslint-plugin-promise\": \"5.2.0\",\r\n    \"eslint-plugin-standard\": \"4.1.0\",\r\n    \"mocha\": \"9.2.2\",\r\n    \"nyc\": \"15.1.0\",\r\n    \"readable-stream\": \"2.3.6\",\r\n    \"safe-buffer\": \"5.2.1\",\r\n    \"supertest\": \"6.2.2\"\r\n  },\r\n  \"files\": [\r\n    \"LICENSE\",\r\n    \"HISTORY.md\",\r\n    \"SECURITY.md\",\r\n    \"index.js\"\r\n  ],\r\n  \"engines\": {\r\n    \"node\": \">= 0.8\"\r\n  },\r\n  \"scripts\": {\r\n    \"lint\": \"eslint .\",\r\n    \"test\": \"mocha --reporter spec --bail --check-leaks test/\",\r\n    \"test-ci\": \"nyc --reporter=lcovonly --reporter=text npm test\",\r\n    \"test-cov\": \"nyc --reporter=html --reporter=text npm test\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/finalhandler/package.json b/node_modules/finalhandler/package.json
--- a/node_modules/finalhandler/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/finalhandler/package.json	(date 1753913035657)
@@ -1,13 +1,13 @@
 {
   "name": "finalhandler",
   "description": "Node.js final http responder",
-  "version": "1.2.0",
+  "version": "1.3.1",
   "author": "Douglas Christopher Wilson <doug@somethingdoug.com>",
   "license": "MIT",
   "repository": "pillarjs/finalhandler",
   "dependencies": {
     "debug": "2.6.9",
-    "encodeurl": "~1.0.2",
+    "encodeurl": "~2.0.0",
     "escape-html": "~1.0.3",
     "on-finished": "2.4.1",
     "parseurl": "~1.3.3",
@@ -17,16 +17,16 @@
   "devDependencies": {
     "eslint": "7.32.0",
     "eslint-config-standard": "14.1.1",
-    "eslint-plugin-import": "2.25.4",
+    "eslint-plugin-import": "2.26.0",
     "eslint-plugin-markdown": "2.2.1",
     "eslint-plugin-node": "11.1.0",
     "eslint-plugin-promise": "5.2.0",
     "eslint-plugin-standard": "4.1.0",
-    "mocha": "9.2.2",
+    "mocha": "10.0.0",
     "nyc": "15.1.0",
     "readable-stream": "2.3.6",
     "safe-buffer": "5.2.1",
-    "supertest": "6.2.2"
+    "supertest": "6.2.4"
   },
   "files": [
     "LICENSE",
@@ -39,8 +39,9 @@
   },
   "scripts": {
     "lint": "eslint .",
-    "test": "mocha --reporter spec --bail --check-leaks test/",
+    "test": "mocha --reporter spec --check-leaks test/",
     "test-ci": "nyc --reporter=lcovonly --reporter=text npm test",
-    "test-cov": "nyc --reporter=html --reporter=text npm test"
+    "test-cov": "nyc --reporter=html --reporter=text npm test",
+    "test-inspect": "mocha --reporter spec --inspect --inspect-brk test/"
   }
 }
Index: node_modules/finalhandler/HISTORY.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>1.2.0 / 2022-03-22\r\n==================\r\n\r\n  * Remove set content headers that break response\r\n  * deps: on-finished@2.4.1\r\n  * deps: statuses@2.0.1\r\n    - Rename `425 Unordered Collection` to standard `425 Too Early`\r\n\r\n1.1.2 / 2019-05-09\r\n==================\r\n\r\n  * Set stricter `Content-Security-Policy` header\r\n  * deps: parseurl@~1.3.3\r\n  * deps: statuses@~1.5.0\r\n\r\n1.1.1 / 2018-03-06\r\n==================\r\n\r\n  * Fix 404 output for bad / missing pathnames\r\n  * deps: encodeurl@~1.0.2\r\n    - Fix encoding `%` as last character\r\n  * deps: statuses@~1.4.0\r\n\r\n1.1.0 / 2017-09-24\r\n==================\r\n\r\n  * Use `res.headersSent` when available\r\n\r\n1.0.6 / 2017-09-22\r\n==================\r\n\r\n  * deps: debug@2.6.9\r\n\r\n1.0.5 / 2017-09-15\r\n==================\r\n\r\n  * deps: parseurl@~1.3.2\r\n    - perf: reduce overhead for full URLs\r\n    - perf: unroll the \"fast-path\" `RegExp`\r\n\r\n1.0.4 / 2017-08-03\r\n==================\r\n\r\n  * deps: debug@2.6.8\r\n\r\n1.0.3 / 2017-05-16\r\n==================\r\n\r\n  * deps: debug@2.6.7\r\n    - deps: ms@2.0.0\r\n\r\n1.0.2 / 2017-04-22\r\n==================\r\n\r\n  * deps: debug@2.6.4\r\n    - deps: ms@0.7.3\r\n\r\n1.0.1 / 2017-03-21\r\n==================\r\n\r\n  * Fix missing `</html>` in HTML document\r\n  * deps: debug@2.6.3\r\n    - Fix: `DEBUG_MAX_ARRAY_LENGTH`\r\n\r\n1.0.0 / 2017-02-15\r\n==================\r\n\r\n  * Fix exception when `err` cannot be converted to a string\r\n  * Fully URL-encode the pathname in the 404 message\r\n  * Only include the pathname in the 404 message\r\n  * Send complete HTML document\r\n  * Set `Content-Security-Policy: default-src 'self'` header\r\n  * deps: debug@2.6.1\r\n    - Allow colors in workers\r\n    - Deprecated `DEBUG_FD` environment variable set to `3` or higher\r\n    - Fix error when running under React Native\r\n    - Use same color for same namespace\r\n    - deps: ms@0.7.2\r\n\r\n0.5.1 / 2016-11-12\r\n==================\r\n\r\n  * Fix exception when `err.headers` is not an object\r\n  * deps: statuses@~1.3.1\r\n  * perf: hoist regular expressions\r\n  * perf: remove duplicate validation path\r\n\r\n0.5.0 / 2016-06-15\r\n==================\r\n\r\n  * Change invalid or non-numeric status code to 500\r\n  * Overwrite status message to match set status code\r\n  * Prefer `err.statusCode` if `err.status` is invalid\r\n  * Set response headers from `err.headers` object\r\n  * Use `statuses` instead of `http` module for status messages\r\n    - Includes all defined status messages\r\n\r\n0.4.1 / 2015-12-02\r\n==================\r\n\r\n  * deps: escape-html@~1.0.3\r\n    - perf: enable strict mode\r\n    - perf: optimize string replacement\r\n    - perf: use faster string coercion\r\n\r\n0.4.0 / 2015-06-14\r\n==================\r\n\r\n  * Fix a false-positive when unpiping in Node.js 0.8\r\n  * Support `statusCode` property on `Error` objects\r\n  * Use `unpipe` module for unpiping requests\r\n  * deps: escape-html@1.0.2\r\n  * deps: on-finished@~2.3.0\r\n    - Add defined behavior for HTTP `CONNECT` requests\r\n    - Add defined behavior for HTTP `Upgrade` requests\r\n    - deps: ee-first@1.1.1\r\n  * perf: enable strict mode\r\n  * perf: remove argument reassignment\r\n\r\n0.3.6 / 2015-05-11\r\n==================\r\n\r\n  * deps: debug@~2.2.0\r\n    - deps: ms@0.7.1\r\n\r\n0.3.5 / 2015-04-22\r\n==================\r\n\r\n  * deps: on-finished@~2.2.1\r\n    - Fix `isFinished(req)` when data buffered\r\n\r\n0.3.4 / 2015-03-15\r\n==================\r\n\r\n  * deps: debug@~2.1.3\r\n    - Fix high intensity foreground color for bold\r\n    - deps: ms@0.7.0\r\n\r\n0.3.3 / 2015-01-01\r\n==================\r\n\r\n  * deps: debug@~2.1.1\r\n  * deps: on-finished@~2.2.0\r\n\r\n0.3.2 / 2014-10-22\r\n==================\r\n\r\n  * deps: on-finished@~2.1.1\r\n    - Fix handling of pipelined requests\r\n\r\n0.3.1 / 2014-10-16\r\n==================\r\n\r\n  * deps: debug@~2.1.0\r\n    - Implement `DEBUG_FD` env variable support\r\n\r\n0.3.0 / 2014-09-17\r\n==================\r\n\r\n  * Terminate in progress response only on error\r\n  * Use `on-finished` to determine request status\r\n\r\n0.2.0 / 2014-09-03\r\n==================\r\n\r\n  * Set `X-Content-Type-Options: nosniff` header\r\n  * deps: debug@~2.0.0\r\n\r\n0.1.0 / 2014-07-16\r\n==================\r\n\r\n  * Respond after request fully read\r\n    - prevents hung responses and socket hang ups\r\n  * deps: debug@1.0.4\r\n\r\n0.0.3 / 2014-07-11\r\n==================\r\n\r\n  * deps: debug@1.0.3\r\n    - Add support for multiple wildcards in namespaces\r\n\r\n0.0.2 / 2014-06-19\r\n==================\r\n\r\n  * Handle invalid status codes\r\n\r\n0.0.1 / 2014-06-05\r\n==================\r\n\r\n  * deps: debug@1.0.2\r\n\r\n0.0.0 / 2014-06-05\r\n==================\r\n\r\n  * Extracted from connect/express\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/finalhandler/HISTORY.md b/node_modules/finalhandler/HISTORY.md
--- a/node_modules/finalhandler/HISTORY.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/finalhandler/HISTORY.md	(date 1753913035660)
@@ -1,3 +1,18 @@
+v1.3.1 / 2024-09-11
+==================
+
+  * deps: encodeurl@~2.0.0
+
+v1.3.0 / 2024-09-03
+==================
+
+  * ignore status message for HTTP/2 (#53)
+
+v1.2.1 / 2024-09-02
+==================
+
+  * Gracefully handle when handling an error and socket is null
+
 1.2.0 / 2022-03-22
 ==================
 
Index: node_modules/finalhandler/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># finalhandler\r\n\r\n[![NPM Version][npm-image]][npm-url]\r\n[![NPM Downloads][downloads-image]][downloads-url]\r\n[![Node.js Version][node-image]][node-url]\r\n[![Build Status][github-actions-ci-image]][github-actions-ci-url]\r\n[![Test Coverage][coveralls-image]][coveralls-url]\r\n\r\nNode.js function to invoke as the final step to respond to HTTP request.\r\n\r\n## Installation\r\n\r\nThis is a [Node.js](https://nodejs.org/en/) module available through the\r\n[npm registry](https://www.npmjs.com/). Installation is done using the\r\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\r\n\r\n```sh\r\n$ npm install finalhandler\r\n```\r\n\r\n## API\r\n\r\n```js\r\nvar finalhandler = require('finalhandler')\r\n```\r\n\r\n### finalhandler(req, res, [options])\r\n\r\nReturns function to be invoked as the final step for the given `req` and `res`.\r\nThis function is to be invoked as `fn(err)`. If `err` is falsy, the handler will\r\nwrite out a 404 response to the `res`. If it is truthy, an error response will\r\nbe written out to the `res` or `res` will be terminated if a response has already\r\nstarted.\r\n\r\nWhen an error is written, the following information is added to the response:\r\n\r\n  * The `res.statusCode` is set from `err.status` (or `err.statusCode`). If\r\n    this value is outside the 4xx or 5xx range, it will be set to 500.\r\n  * The `res.statusMessage` is set according to the status code.\r\n  * The body will be the HTML of the status code message if `env` is\r\n    `'production'`, otherwise will be `err.stack`.\r\n  * Any headers specified in an `err.headers` object.\r\n\r\nThe final handler will also unpipe anything from `req` when it is invoked.\r\n\r\n#### options.env\r\n\r\nBy default, the environment is determined by `NODE_ENV` variable, but it can be\r\noverridden by this option.\r\n\r\n#### options.onerror\r\n\r\nProvide a function to be called with the `err` when it exists. Can be used for\r\nwriting errors to a central location without excessive function generation. Called\r\nas `onerror(err, req, res)`.\r\n\r\n## Examples\r\n\r\n### always 404\r\n\r\n```js\r\nvar finalhandler = require('finalhandler')\r\nvar http = require('http')\r\n\r\nvar server = http.createServer(function (req, res) {\r\n  var done = finalhandler(req, res)\r\n  done()\r\n})\r\n\r\nserver.listen(3000)\r\n```\r\n\r\n### perform simple action\r\n\r\n```js\r\nvar finalhandler = require('finalhandler')\r\nvar fs = require('fs')\r\nvar http = require('http')\r\n\r\nvar server = http.createServer(function (req, res) {\r\n  var done = finalhandler(req, res)\r\n\r\n  fs.readFile('index.html', function (err, buf) {\r\n    if (err) return done(err)\r\n    res.setHeader('Content-Type', 'text/html')\r\n    res.end(buf)\r\n  })\r\n})\r\n\r\nserver.listen(3000)\r\n```\r\n\r\n### use with middleware-style functions\r\n\r\n```js\r\nvar finalhandler = require('finalhandler')\r\nvar http = require('http')\r\nvar serveStatic = require('serve-static')\r\n\r\nvar serve = serveStatic('public')\r\n\r\nvar server = http.createServer(function (req, res) {\r\n  var done = finalhandler(req, res)\r\n  serve(req, res, done)\r\n})\r\n\r\nserver.listen(3000)\r\n```\r\n\r\n### keep log of all errors\r\n\r\n```js\r\nvar finalhandler = require('finalhandler')\r\nvar fs = require('fs')\r\nvar http = require('http')\r\n\r\nvar server = http.createServer(function (req, res) {\r\n  var done = finalhandler(req, res, { onerror: logerror })\r\n\r\n  fs.readFile('index.html', function (err, buf) {\r\n    if (err) return done(err)\r\n    res.setHeader('Content-Type', 'text/html')\r\n    res.end(buf)\r\n  })\r\n})\r\n\r\nserver.listen(3000)\r\n\r\nfunction logerror (err) {\r\n  console.error(err.stack || err.toString())\r\n}\r\n```\r\n\r\n## License\r\n\r\n[MIT](LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/finalhandler.svg\r\n[npm-url]: https://npmjs.org/package/finalhandler\r\n[node-image]: https://img.shields.io/node/v/finalhandler.svg\r\n[node-url]: https://nodejs.org/en/download\r\n[coveralls-image]: https://img.shields.io/coveralls/pillarjs/finalhandler.svg\r\n[coveralls-url]: https://coveralls.io/r/pillarjs/finalhandler?branch=master\r\n[downloads-image]: https://img.shields.io/npm/dm/finalhandler.svg\r\n[downloads-url]: https://npmjs.org/package/finalhandler\r\n[github-actions-ci-image]: https://img.shields.io/github/workflow/status/pillarjs/finalhandler/ci/master?label=ci\r\n[github-actions-ci-url]: https://github.com/jshttp/pillarjs/finalhandler?query=workflow%3Aci\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/finalhandler/README.md b/node_modules/finalhandler/README.md
--- a/node_modules/finalhandler/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/finalhandler/README.md	(date 1753913035661)
@@ -143,5 +143,5 @@
 [coveralls-url]: https://coveralls.io/r/pillarjs/finalhandler?branch=master
 [downloads-image]: https://img.shields.io/npm/dm/finalhandler.svg
 [downloads-url]: https://npmjs.org/package/finalhandler
-[github-actions-ci-image]: https://img.shields.io/github/workflow/status/pillarjs/finalhandler/ci/master?label=ci
-[github-actions-ci-url]: https://github.com/jshttp/pillarjs/finalhandler?query=workflow%3Aci
+[github-actions-ci-image]: https://github.com/pillarjs/finalhandler/actions/workflows/ci.yml/badge.svg
+[github-actions-ci-url]: https://github.com/pillarjs/finalhandler/actions/workflows/ci.yml
Index: node_modules/finalhandler/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*!\r\n * finalhandler\r\n * Copyright(c) 2014-2022 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar debug = require('debug')('finalhandler')\r\nvar encodeUrl = require('encodeurl')\r\nvar escapeHtml = require('escape-html')\r\nvar onFinished = require('on-finished')\r\nvar parseUrl = require('parseurl')\r\nvar statuses = require('statuses')\r\nvar unpipe = require('unpipe')\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar DOUBLE_SPACE_REGEXP = /\\x20{2}/g\r\nvar NEWLINE_REGEXP = /\\n/g\r\n\r\n/* istanbul ignore next */\r\nvar defer = typeof setImmediate === 'function'\r\n  ? setImmediate\r\n  : function (fn) { process.nextTick(fn.bind.apply(fn, arguments)) }\r\nvar isFinished = onFinished.isFinished\r\n\r\n/**\r\n * Create a minimal HTML document.\r\n *\r\n * @param {string} message\r\n * @private\r\n */\r\n\r\nfunction createHtmlDocument (message) {\r\n  var body = escapeHtml(message)\r\n    .replace(NEWLINE_REGEXP, '<br>')\r\n    .replace(DOUBLE_SPACE_REGEXP, ' &nbsp;')\r\n\r\n  return '<!DOCTYPE html>\\n' +\r\n    '<html lang=\"en\">\\n' +\r\n    '<head>\\n' +\r\n    '<meta charset=\"utf-8\">\\n' +\r\n    '<title>Error</title>\\n' +\r\n    '</head>\\n' +\r\n    '<body>\\n' +\r\n    '<pre>' + body + '</pre>\\n' +\r\n    '</body>\\n' +\r\n    '</html>\\n'\r\n}\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = finalhandler\r\n\r\n/**\r\n * Create a function to handle the final response.\r\n *\r\n * @param {Request} req\r\n * @param {Response} res\r\n * @param {Object} [options]\r\n * @return {Function}\r\n * @public\r\n */\r\n\r\nfunction finalhandler (req, res, options) {\r\n  var opts = options || {}\r\n\r\n  // get environment\r\n  var env = opts.env || process.env.NODE_ENV || 'development'\r\n\r\n  // get error callback\r\n  var onerror = opts.onerror\r\n\r\n  return function (err) {\r\n    var headers\r\n    var msg\r\n    var status\r\n\r\n    // ignore 404 on in-flight response\r\n    if (!err && headersSent(res)) {\r\n      debug('cannot 404 after headers sent')\r\n      return\r\n    }\r\n\r\n    // unhandled error\r\n    if (err) {\r\n      // respect status code from error\r\n      status = getErrorStatusCode(err)\r\n\r\n      if (status === undefined) {\r\n        // fallback to status code on response\r\n        status = getResponseStatusCode(res)\r\n      } else {\r\n        // respect headers from error\r\n        headers = getErrorHeaders(err)\r\n      }\r\n\r\n      // get error message\r\n      msg = getErrorMessage(err, status, env)\r\n    } else {\r\n      // not found\r\n      status = 404\r\n      msg = 'Cannot ' + req.method + ' ' + encodeUrl(getResourceName(req))\r\n    }\r\n\r\n    debug('default %s', status)\r\n\r\n    // schedule onerror callback\r\n    if (err && onerror) {\r\n      defer(onerror, err, req, res)\r\n    }\r\n\r\n    // cannot actually respond\r\n    if (headersSent(res)) {\r\n      debug('cannot %d after headers sent', status)\r\n      req.socket.destroy()\r\n      return\r\n    }\r\n\r\n    // send response\r\n    send(req, res, status, headers, msg)\r\n  }\r\n}\r\n\r\n/**\r\n * Get headers from Error object.\r\n *\r\n * @param {Error} err\r\n * @return {object}\r\n * @private\r\n */\r\n\r\nfunction getErrorHeaders (err) {\r\n  if (!err.headers || typeof err.headers !== 'object') {\r\n    return undefined\r\n  }\r\n\r\n  var headers = Object.create(null)\r\n  var keys = Object.keys(err.headers)\r\n\r\n  for (var i = 0; i < keys.length; i++) {\r\n    var key = keys[i]\r\n    headers[key] = err.headers[key]\r\n  }\r\n\r\n  return headers\r\n}\r\n\r\n/**\r\n * Get message from Error object, fallback to status message.\r\n *\r\n * @param {Error} err\r\n * @param {number} status\r\n * @param {string} env\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction getErrorMessage (err, status, env) {\r\n  var msg\r\n\r\n  if (env !== 'production') {\r\n    // use err.stack, which typically includes err.message\r\n    msg = err.stack\r\n\r\n    // fallback to err.toString() when possible\r\n    if (!msg && typeof err.toString === 'function') {\r\n      msg = err.toString()\r\n    }\r\n  }\r\n\r\n  return msg || statuses.message[status]\r\n}\r\n\r\n/**\r\n * Get status code from Error object.\r\n *\r\n * @param {Error} err\r\n * @return {number}\r\n * @private\r\n */\r\n\r\nfunction getErrorStatusCode (err) {\r\n  // check err.status\r\n  if (typeof err.status === 'number' && err.status >= 400 && err.status < 600) {\r\n    return err.status\r\n  }\r\n\r\n  // check err.statusCode\r\n  if (typeof err.statusCode === 'number' && err.statusCode >= 400 && err.statusCode < 600) {\r\n    return err.statusCode\r\n  }\r\n\r\n  return undefined\r\n}\r\n\r\n/**\r\n * Get resource name for the request.\r\n *\r\n * This is typically just the original pathname of the request\r\n * but will fallback to \"resource\" is that cannot be determined.\r\n *\r\n * @param {IncomingMessage} req\r\n * @return {string}\r\n * @private\r\n */\r\n\r\nfunction getResourceName (req) {\r\n  try {\r\n    return parseUrl.original(req).pathname\r\n  } catch (e) {\r\n    return 'resource'\r\n  }\r\n}\r\n\r\n/**\r\n * Get status code from response.\r\n *\r\n * @param {OutgoingMessage} res\r\n * @return {number}\r\n * @private\r\n */\r\n\r\nfunction getResponseStatusCode (res) {\r\n  var status = res.statusCode\r\n\r\n  // default status code to 500 if outside valid range\r\n  if (typeof status !== 'number' || status < 400 || status > 599) {\r\n    status = 500\r\n  }\r\n\r\n  return status\r\n}\r\n\r\n/**\r\n * Determine if the response headers have been sent.\r\n *\r\n * @param {object} res\r\n * @returns {boolean}\r\n * @private\r\n */\r\n\r\nfunction headersSent (res) {\r\n  return typeof res.headersSent !== 'boolean'\r\n    ? Boolean(res._header)\r\n    : res.headersSent\r\n}\r\n\r\n/**\r\n * Send response.\r\n *\r\n * @param {IncomingMessage} req\r\n * @param {OutgoingMessage} res\r\n * @param {number} status\r\n * @param {object} headers\r\n * @param {string} message\r\n * @private\r\n */\r\n\r\nfunction send (req, res, status, headers, message) {\r\n  function write () {\r\n    // response body\r\n    var body = createHtmlDocument(message)\r\n\r\n    // response status\r\n    res.statusCode = status\r\n    res.statusMessage = statuses.message[status]\r\n\r\n    // remove any content headers\r\n    res.removeHeader('Content-Encoding')\r\n    res.removeHeader('Content-Language')\r\n    res.removeHeader('Content-Range')\r\n\r\n    // response headers\r\n    setHeaders(res, headers)\r\n\r\n    // security headers\r\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\r\n    res.setHeader('X-Content-Type-Options', 'nosniff')\r\n\r\n    // standard headers\r\n    res.setHeader('Content-Type', 'text/html; charset=utf-8')\r\n    res.setHeader('Content-Length', Buffer.byteLength(body, 'utf8'))\r\n\r\n    if (req.method === 'HEAD') {\r\n      res.end()\r\n      return\r\n    }\r\n\r\n    res.end(body, 'utf8')\r\n  }\r\n\r\n  if (isFinished(req)) {\r\n    write()\r\n    return\r\n  }\r\n\r\n  // unpipe everything from the request\r\n  unpipe(req)\r\n\r\n  // flush the request\r\n  onFinished(req, write)\r\n  req.resume()\r\n}\r\n\r\n/**\r\n * Set response headers from an object.\r\n *\r\n * @param {OutgoingMessage} res\r\n * @param {object} headers\r\n * @private\r\n */\r\n\r\nfunction setHeaders (res, headers) {\r\n  if (!headers) {\r\n    return\r\n  }\r\n\r\n  var keys = Object.keys(headers)\r\n  for (var i = 0; i < keys.length; i++) {\r\n    var key = keys[i]\r\n    res.setHeader(key, headers[key])\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/finalhandler/index.js b/node_modules/finalhandler/index.js
--- a/node_modules/finalhandler/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/finalhandler/index.js	(date 1753913035655)
@@ -125,7 +125,9 @@
     // cannot actually respond
     if (headersSent(res)) {
       debug('cannot %d after headers sent', status)
-      req.socket.destroy()
+      if (req.socket) {
+        req.socket.destroy()
+      }
       return
     }
 
@@ -276,7 +278,10 @@
 
     // response status
     res.statusCode = status
-    res.statusMessage = statuses.message[status]
+
+    if (req.httpVersionMajor < 2) {
+      res.statusMessage = statuses.message[status]
+    }
 
     // remove any content headers
     res.removeHeader('Content-Encoding')
Index: controllers/userController.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const users = require('../models/User')\r\nconst { StatusCodes } = require('http-status-codes')\r\nconst { sql } = require('../db/connectDb')\r\n\r\nconst getAllUsers = async (req, resp) => {\r\n  const users = await sql`\r\n      SELECT * FROM users`\r\n  if (!users.length > 0) {\r\n    console.log(users)\r\n    return resp\r\n      .status(StatusCodes.NOT_FOUND)\r\n      .json({ message: 'Error! User Not Found' })\r\n  }\r\n  return resp.status(StatusCodes.OK).json(users)\r\n}\r\nconst getSingleUser = async (req, resp) => {\r\n  const { id } = req.params\r\n  console.log('iD Data', id)\r\n  const singleUser = await sql`\r\nSELECT * FROM  users WHERE id =${id}\r\n    `\r\n  if (!singleUser) {\r\n    console.log(singleUser)\r\n    return resp\r\n      .status(StatusCodes.NOT_FOUND)\r\n      .json({ message: `User With ID ${id} NOT_FOUND` })\r\n  }\r\n  return resp.status(StatusCodes.OK).json(singleUser)\r\n}\r\nconst deleteUser = async (req, resp) => {\r\n  const { id } = req.params\r\n  console.log('iD Data', id)\r\n  const singleUser = await sql`\r\n   DELETE FROM  users WHERE id =${id}\r\n    `\r\n  if (!singleUser) {\r\n    return resp\r\n      .status(StatusCodes.NOT_FOUND)\r\n      .json({ message: `User With ID ${id} NOT_FOUND` })\r\n  }\r\n  return resp\r\n    .status(StatusCodes.OK)\r\n    .json({ Success: `USER WITH  ID${id} Deleted` })\r\n}\r\n\r\nmodule.exports = {\r\n  getAllUsers,\r\n  getSingleUser,\r\n  deleteUser\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/controllers/userController.js b/controllers/userController.js
--- a/controllers/userController.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/controllers/userController.js	(date 1754118021787)
@@ -1,24 +1,25 @@
 const users = require('../models/User')
 const { StatusCodes } = require('http-status-codes')
 const { sql } = require('../db/connectDb')
+const { Pool } = require('postgresql-client')
+const  {sqlPool} = require('../db/connectDb')
+const Users = require("../queries/users");
 
 const getAllUsers = async (req, resp) => {
-  const users = await sql`
-      SELECT * FROM users`
-  if (!users.length > 0) {
-    console.log(users)
+  const users = await Users.allUsers()
+
+  if (users.error) {
+    console.log('user not found  in users table')
     return resp
       .status(StatusCodes.NOT_FOUND)
       .json({ message: 'Error! User Not Found' })
   }
-  return resp.status(StatusCodes.OK).json(users)
+  return resp.status(StatusCodes.OK).json(users.data)
 }
 const getSingleUser = async (req, resp) => {
   const { id } = req.params
   console.log('iD Data', id)
-  const singleUser = await sql`
-SELECT * FROM  users WHERE id =${id}
-    `
+  const singleUser = await sqlPool.query('SELECT * FROM  users WHERE id =${id}')
   if (!singleUser) {
     console.log(singleUser)
     return resp
@@ -30,9 +31,7 @@
 const deleteUser = async (req, resp) => {
   const { id } = req.params
   console.log('iD Data', id)
-  const singleUser = await sql`
-   DELETE FROM  users WHERE id =${id}
-    `
+  const singleUser = await sqlPool.query('DELETE FROM  users WHERE id =${id}')
   if (!singleUser) {
     return resp
       .status(StatusCodes.NOT_FOUND)
Index: node_modules/strict-typed-events/cjs/typed-events.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.TypedEventEmitterClass = void 0;\r\nfunction TypedEventEmitterClass(emitter) {\r\n    return emitter;\r\n}\r\nexports.TypedEventEmitterClass = TypedEventEmitterClass;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/strict-typed-events/cjs/typed-events.js b/node_modules/strict-typed-events/cjs/typed-events.js
--- a/node_modules/strict-typed-events/cjs/typed-events.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/strict-typed-events/cjs/typed-events.js	(date 1753913035109)
@@ -1,7 +1,6 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.TypedEventEmitterClass = void 0;
+exports.TypedEventEmitterClass = TypedEventEmitterClass;
 function TypedEventEmitterClass(emitter) {
     return emitter;
 }
-exports.TypedEventEmitterClass = TypedEventEmitterClass;
Index: controllers/roomsController.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const { response } = require('express')\r\nconst { StatusCodes } = require('http-status-codes')\r\nconst { dbPool, sql } = require('../db/connectDb')\r\nvar bcrypt = require('bcryptjs')\r\n\r\nconst createRooms = async (req, res) => {\r\n  const {\r\n    room_number,\r\n    room_type,\r\n    price,\r\n    number_of_occupants,\r\n    availability_status,\r\n    image_url,\r\n    room_description\r\n  } = req.body\r\n  console.log(\r\n    room_number,\r\n    room_type,\r\n    price,\r\n    number_of_occupants,\r\n    availability_status,\r\n    image_url,\r\n    room_description\r\n  )\r\n  if (number_of_occupants < 1) {\r\n    return res.status(StatusCodes.BAD_REQUEST).json({\r\n      error: `number  of occuppants must be  at least 1`\r\n    })\r\n  }\r\n  if (availability_status !== 'Available' && availability_status !== 'Booked') {\r\n    console.log(availability_status)\r\n    return res.status(StatusCodes.BAD_REQUEST).json({\r\n      error: ` availability status must either be \"Available or  Booked\"`\r\n    })\r\n  }\r\n  if (price <= '5000') {\r\n    return res.status(StatusCodes.BAD_REQUEST).json({\r\n      error: `please ensure price is greater  than ${price}`\r\n    })\r\n  }\r\n\r\n  try {\r\n    const createdRoom =\r\n      await sql`INSERT  INTO  rooms(room_number,room_type,price,number_of_occupants,availability_status,image_url,room_description)\r\n    VALUES(${room_number}, ${room_type}, ${price},${number_of_occupants}, ${availability_status}, ${image_url}, ${room_description})\r\n    RETURNING room_number, room_type,price,number_of_occupants,availability_status,image_url,room_description`\r\n    // console.log(createdRoom)\r\n    if (createRooms) {\r\n      createdRoom.forEach(roomData => {\r\n        console.log(roomData)\r\n        return res.status(StatusCodes.OK).json(roomData)\r\n      })\r\n    }\r\n  } catch (error) {\r\n    return res\r\n      .status(StatusCodes.BAD_REQUEST)\r\n      .json({ error: `error,  creating Table ${error}` })\r\n  }\r\n}\r\n\r\nconst getSingleRoom = async (req, res) => {\r\n  const id = req.params.id\r\n\r\n  const roomId = await sql` SELECT  * FROM  rooms  WHERE   id= ${id} `\r\n\r\n  if (roomId.length < 1) {\r\n    res\r\n      .status(StatusCodes.OK)\r\n      .json({ error: `invalid  id ${roomId} please  enter a  valid  id` })\r\n  }\r\n  roomId.forEach(data => {\r\n    console.log('data  for  single  room', data)\r\n    res.status(StatusCodes.OK).json({ success: roomId })\r\n  })\r\n}\r\nconst updateRoom = async (req, res) => {\r\n  const {\r\n    id,\r\n    room_number,\r\n    room_type,\r\n    price,\r\n    number_of_occupants,\r\n    availability_status,\r\n    image_url,\r\n    room_description\r\n  } = req.body\r\n\r\n  console.log('dATA  ID', id, 'number  of occupants', number_of_occupants)\r\n  if (number_of_occupants < 1 || number_of_occupants > 4) {\r\n    return res.status(StatusCodes.BAD_REQUEST).json({\r\n      error: `number  of occuppants must be  within  1 to 4`\r\n    })\r\n  }\r\n  if (availability_status !== 'Available' && availability_status !== 'Booked') {\r\n    console.log(availability_status)\r\n    return res.status(StatusCodes.BAD_REQUEST).json({\r\n      error: ` availability status must either be \"Available or  Booked\"`\r\n    })\r\n  }\r\n  if (price <= '5000') {\r\n    return res.status(StatusCodes.BAD_REQUEST).json({\r\n      error: `please ensure price is greater  than ${price}`\r\n    })\r\n  }\r\n\r\n  try {\r\n    const updatedData = await sql`UPDATE rooms SET room_type=${room_type},\r\n     availability_status=${availability_status}, price=${price}, room_number =${room_number},\r\n    number_of_occupants=${number_of_occupants}, room_description=${room_description} WHERE  id =${id}`\r\n\r\n    res.status(StatusCodes.OK).json({ success: `data  updated successfully` })\r\n  } catch (error) {\r\n    console.log(error)\r\n    res.status(StatusCodes.BAD_REQUEST).json({\r\n      error: `en  error  occurred ${error}`\r\n    })\r\n  }\r\n}\r\n\r\nconst deleteRoom = async (req, res) => {\r\n  const id = req.params.id\r\n\r\n  const deleteData = await sql`DELETE FROM  rooms WHERE  id = ${id}`\r\n  if (deleteData.length < 0) {\r\n    res\r\n      .status(StatusCodes.OK)\r\n      .json({ error: `room  with  id ${id} not found!` })\r\n  }\r\n\r\n  res.status(StatusCodes.OK).json({ success: `room  with  id ${id} deleted!` })\r\n}\r\nconst getAllRooms = async (req, res) => {\r\n  try {\r\n    const roomsData = await sql` SELECT * FROM rooms`\r\n    console.log(roomsData)\r\n    if (roomsData.length < 1) {\r\n      res\r\n        .status(StatusCodes.BAD_REQUEST)\r\n        .json({ error: `no records  found in  rooms table` })\r\n    }\r\n    res.status(StatusCodes.OK).json(roomsData)\r\n  } catch (error) {\r\n    throw new Error('an Error occurred')\r\n  }\r\n}\r\nconst uploadImage = async (req, res) => {\r\n\r\n}\r\nmodule.exports = {\r\n  createRooms,\r\n  getSingleRoom,\r\n  getAllRooms,\r\n  deleteRoom,\r\n  updateRoom\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/controllers/roomsController.js b/controllers/roomsController.js
--- a/controllers/roomsController.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/controllers/roomsController.js	(date 1719680934380)
@@ -2,26 +2,32 @@
 const { StatusCodes } = require('http-status-codes')
 const { dbPool, sql } = require('../db/connectDb')
 var bcrypt = require('bcryptjs')
+const multer = require('multer')
+const upload = multer({ storage: multer.memoryStorage() })
+// const upload = multer({ dest: 'uploads/' })
+const fs = require('fs')
 
 const createRooms = async (req, res) => {
-  const {
-    room_number,
-    room_type,
-    price,
-    number_of_occupants,
-    availability_status,
-    image_url,
-    room_description
-  } = req.body
+  // console.log(req)
+  const room_type = req.body.room_type
+  const room_number = req.body.room_number
+  const price = req.body.price
+  const number_of_occupants = req.body.number_of_occupants
+
+  const availability_status = req.body.availability_status
+  const room_description = req.body.room_description
+
+  // console.log(req.data)
+
   console.log(
     room_number,
     room_type,
     price,
     number_of_occupants,
     availability_status,
-    image_url,
     room_description
   )
+
   if (number_of_occupants < 1) {
     return res.status(StatusCodes.BAD_REQUEST).json({
       error: `number  of occuppants must be  at least 1`
@@ -44,7 +50,7 @@
       await sql`INSERT  INTO  rooms(room_number,room_type,price,number_of_occupants,availability_status,image_url,room_description)
     VALUES(${room_number}, ${room_type}, ${price},${number_of_occupants}, ${availability_status}, ${image_url}, ${room_description})
     RETURNING room_number, room_type,price,number_of_occupants,availability_status,image_url,room_description`
-    // console.log(createdRoom)
+
     if (createRooms) {
       createdRoom.forEach(roomData => {
         console.log(roomData)
@@ -144,12 +150,37 @@
   }
 }
 const uploadImage = async (req, res) => {
-
+  console.log('Upload  Image  Data')
+  upload.single('image')(req, res, err => {
+    if (err) {
+      return res.status(StatusCodes.BAD_REQUEST).json({ error: err.message })
+    }
+    // get  the  image  of  file here
+    //file  is 1MB
+    const maxSize = 1024 * 1024 * 5
+    // if (file.size) fs.readFileSync(imageFilePath)
+    console.log(req.file)
+    const { size } = req.file
+    // console.log(size)
+    if (maxSize <= size) {
+      console.log(size, 'image size')
+      console.log(maxSize, 'max image size')
+      console.log('image size  is  greater')
+      return res.status(StatusCodes.BAD_REQUEST).json('Image  must  be 1 MB')
+    }
+    const { buffer } = req.file
+    // console.log(buffer)
+    const imageData = Buffer.from(buffer, 'base64')
+    console.log(typeof imageData)
+    // const imageBuffer = fs.readFileSync()
+    // console.log(imageBuffer)
+  })
 }
 module.exports = {
   createRooms,
   getSingleRoom,
   getAllRooms,
   deleteRoom,
-  updateRoom
+  updateRoom,
+  uploadImage
 }
Index: node_modules/strict-typed-events/cjs/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__exportStar(require(\"./async-event-emitter.js\"), exports);\r\n__exportStar(require(\"./typed-events.js\"), exports);\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/strict-typed-events/cjs/index.js b/node_modules/strict-typed-events/cjs/index.js
--- a/node_modules/strict-typed-events/cjs/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/strict-typed-events/cjs/index.js	(date 1753913035107)
@@ -1,18 +1,5 @@
 "use strict";
-var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    var desc = Object.getOwnPropertyDescriptor(m, k);
-    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
-      desc = { enumerable: true, get: function() { return m[k]; } };
-    }
-    Object.defineProperty(o, k2, desc);
-}) : (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    o[k2] = m[k];
-}));
-var __exportStar = (this && this.__exportStar) || function(m, exports) {
-    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
-};
 Object.defineProperty(exports, "__esModule", { value: true });
-__exportStar(require("./async-event-emitter.js"), exports);
-__exportStar(require("./typed-events.js"), exports);
+const tslib_1 = require("tslib");
+tslib_1.__exportStar(require("./async-event-emitter.js"), exports);
+tslib_1.__exportStar(require("./typed-events.js"), exports);
Index: node_modules/strict-typed-events/cjs/async-event-emitter.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.AsyncEventEmitter = void 0;\r\nconst events_1 = require(\"events\");\r\nconst putil_promisify_1 = __importDefault(require(\"putil-promisify\"));\r\nclass AsyncEventEmitter extends events_1.EventEmitter {\r\n    async emitAsync(event, ...args) {\r\n        const listeners = this.rawListeners(event);\r\n        if (!listeners.length)\r\n            return false;\r\n        const promises = listeners.reduce((a, fn) => {\r\n            const x = fn(...args);\r\n            if (putil_promisify_1.default.isPromise(x))\r\n                a.push(x);\r\n            return a;\r\n        }, []);\r\n        return Promise.all(promises).then(() => true);\r\n    }\r\n    async emitAsyncSerial(event, ...args) {\r\n        const listeners = this.rawListeners(event);\r\n        if (!listeners.length)\r\n            return false;\r\n        for (const listener of listeners) {\r\n            await listener(...args);\r\n        }\r\n        return true;\r\n    }\r\n}\r\nexports.AsyncEventEmitter = AsyncEventEmitter;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/strict-typed-events/cjs/async-event-emitter.js b/node_modules/strict-typed-events/cjs/async-event-emitter.js
--- a/node_modules/strict-typed-events/cjs/async-event-emitter.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/strict-typed-events/cjs/async-event-emitter.js	(date 1753913035105)
@@ -1,11 +1,9 @@
 "use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.AsyncEventEmitter = void 0;
+const tslib_1 = require("tslib");
 const events_1 = require("events");
-const putil_promisify_1 = __importDefault(require("putil-promisify"));
+const putil_promisify_1 = tslib_1.__importDefault(require("putil-promisify"));
 class AsyncEventEmitter extends events_1.EventEmitter {
     async emitAsync(event, ...args) {
         const listeners = this.rawListeners(event);
Index: node_modules/semver/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"semver\",\r\n  \"version\": \"7.6.2\",\r\n  \"description\": \"The semantic version parser used by npm.\",\r\n  \"main\": \"index.js\",\r\n  \"scripts\": {\r\n    \"test\": \"tap\",\r\n    \"snap\": \"tap\",\r\n    \"lint\": \"eslint \\\"**/*.{js,cjs,ts,mjs,jsx,tsx}\\\"\",\r\n    \"postlint\": \"template-oss-check\",\r\n    \"lintfix\": \"npm run lint -- --fix\",\r\n    \"posttest\": \"npm run lint\",\r\n    \"template-oss-apply\": \"template-oss-apply --force\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@npmcli/eslint-config\": \"^4.0.0\",\r\n    \"@npmcli/template-oss\": \"4.22.0\",\r\n    \"benchmark\": \"^2.1.4\",\r\n    \"tap\": \"^16.0.0\"\r\n  },\r\n  \"license\": \"ISC\",\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git+https://github.com/npm/node-semver.git\"\r\n  },\r\n  \"bin\": {\r\n    \"semver\": \"bin/semver.js\"\r\n  },\r\n  \"files\": [\r\n    \"bin/\",\r\n    \"lib/\",\r\n    \"classes/\",\r\n    \"functions/\",\r\n    \"internal/\",\r\n    \"ranges/\",\r\n    \"index.js\",\r\n    \"preload.js\",\r\n    \"range.bnf\"\r\n  ],\r\n  \"tap\": {\r\n    \"timeout\": 30,\r\n    \"coverage-map\": \"map.js\",\r\n    \"nyc-arg\": [\r\n      \"--exclude\",\r\n      \"tap-snapshots/**\"\r\n    ]\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">=10\"\r\n  },\r\n  \"author\": \"GitHub Inc.\",\r\n  \"templateOSS\": {\r\n    \"//@npmcli/template-oss\": \"This file is partially managed by @npmcli/template-oss. Edits may be overwritten.\",\r\n    \"version\": \"4.22.0\",\r\n    \"engines\": \">=10\",\r\n    \"distPaths\": [\r\n      \"classes/\",\r\n      \"functions/\",\r\n      \"internal/\",\r\n      \"ranges/\",\r\n      \"index.js\",\r\n      \"preload.js\",\r\n      \"range.bnf\"\r\n    ],\r\n    \"allowPaths\": [\r\n      \"/classes/\",\r\n      \"/functions/\",\r\n      \"/internal/\",\r\n      \"/ranges/\",\r\n      \"/index.js\",\r\n      \"/preload.js\",\r\n      \"/range.bnf\",\r\n      \"/benchmarks\"\r\n    ],\r\n    \"publish\": \"true\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/package.json b/node_modules/semver/package.json
--- a/node_modules/semver/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/package.json	(date 1753913035337)
@@ -1,20 +1,21 @@
 {
   "name": "semver",
-  "version": "7.6.2",
+  "version": "7.7.2",
   "description": "The semantic version parser used by npm.",
   "main": "index.js",
   "scripts": {
     "test": "tap",
     "snap": "tap",
-    "lint": "eslint \"**/*.{js,cjs,ts,mjs,jsx,tsx}\"",
+    "lint": "npm run eslint",
     "postlint": "template-oss-check",
-    "lintfix": "npm run lint -- --fix",
+    "lintfix": "npm run eslint -- --fix",
     "posttest": "npm run lint",
-    "template-oss-apply": "template-oss-apply --force"
+    "template-oss-apply": "template-oss-apply --force",
+    "eslint": "eslint \"**/*.{js,cjs,ts,mjs,jsx,tsx}\""
   },
   "devDependencies": {
-    "@npmcli/eslint-config": "^4.0.0",
-    "@npmcli/template-oss": "4.22.0",
+    "@npmcli/eslint-config": "^5.0.0",
+    "@npmcli/template-oss": "4.24.3",
     "benchmark": "^2.1.4",
     "tap": "^16.0.0"
   },
@@ -51,7 +52,7 @@
   "author": "GitHub Inc.",
   "templateOSS": {
     "//@npmcli/template-oss": "This file is partially managed by @npmcli/template-oss. Edits may be overwritten.",
-    "version": "4.22.0",
+    "version": "4.24.3",
     "engines": ">=10",
     "distPaths": [
       "classes/",
Index: node_modules/semver/preload.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// XXX remove in v8 or beyond\r\nmodule.exports = require('./index.js')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/preload.js b/node_modules/semver/preload.js
--- a/node_modules/semver/preload.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/preload.js	(date 1753913035322)
@@ -1,2 +1,4 @@
+'use strict'
+
 // XXX remove in v8 or beyond
 module.exports = require('./index.js')
Index: node_modules/semver/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// just pre-load all the stuff that index.js lazily exports\r\nconst internalRe = require('./internal/re')\r\nconst constants = require('./internal/constants')\r\nconst SemVer = require('./classes/semver')\r\nconst identifiers = require('./internal/identifiers')\r\nconst parse = require('./functions/parse')\r\nconst valid = require('./functions/valid')\r\nconst clean = require('./functions/clean')\r\nconst inc = require('./functions/inc')\r\nconst diff = require('./functions/diff')\r\nconst major = require('./functions/major')\r\nconst minor = require('./functions/minor')\r\nconst patch = require('./functions/patch')\r\nconst prerelease = require('./functions/prerelease')\r\nconst compare = require('./functions/compare')\r\nconst rcompare = require('./functions/rcompare')\r\nconst compareLoose = require('./functions/compare-loose')\r\nconst compareBuild = require('./functions/compare-build')\r\nconst sort = require('./functions/sort')\r\nconst rsort = require('./functions/rsort')\r\nconst gt = require('./functions/gt')\r\nconst lt = require('./functions/lt')\r\nconst eq = require('./functions/eq')\r\nconst neq = require('./functions/neq')\r\nconst gte = require('./functions/gte')\r\nconst lte = require('./functions/lte')\r\nconst cmp = require('./functions/cmp')\r\nconst coerce = require('./functions/coerce')\r\nconst Comparator = require('./classes/comparator')\r\nconst Range = require('./classes/range')\r\nconst satisfies = require('./functions/satisfies')\r\nconst toComparators = require('./ranges/to-comparators')\r\nconst maxSatisfying = require('./ranges/max-satisfying')\r\nconst minSatisfying = require('./ranges/min-satisfying')\r\nconst minVersion = require('./ranges/min-version')\r\nconst validRange = require('./ranges/valid')\r\nconst outside = require('./ranges/outside')\r\nconst gtr = require('./ranges/gtr')\r\nconst ltr = require('./ranges/ltr')\r\nconst intersects = require('./ranges/intersects')\r\nconst simplifyRange = require('./ranges/simplify')\r\nconst subset = require('./ranges/subset')\r\nmodule.exports = {\r\n  parse,\r\n  valid,\r\n  clean,\r\n  inc,\r\n  diff,\r\n  major,\r\n  minor,\r\n  patch,\r\n  prerelease,\r\n  compare,\r\n  rcompare,\r\n  compareLoose,\r\n  compareBuild,\r\n  sort,\r\n  rsort,\r\n  gt,\r\n  lt,\r\n  eq,\r\n  neq,\r\n  gte,\r\n  lte,\r\n  cmp,\r\n  coerce,\r\n  Comparator,\r\n  Range,\r\n  satisfies,\r\n  toComparators,\r\n  maxSatisfying,\r\n  minSatisfying,\r\n  minVersion,\r\n  validRange,\r\n  outside,\r\n  gtr,\r\n  ltr,\r\n  intersects,\r\n  simplifyRange,\r\n  subset,\r\n  SemVer,\r\n  re: internalRe.re,\r\n  src: internalRe.src,\r\n  tokens: internalRe.t,\r\n  SEMVER_SPEC_VERSION: constants.SEMVER_SPEC_VERSION,\r\n  RELEASE_TYPES: constants.RELEASE_TYPES,\r\n  compareIdentifiers: identifiers.compareIdentifiers,\r\n  rcompareIdentifiers: identifiers.rcompareIdentifiers,\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/index.js b/node_modules/semver/index.js
--- a/node_modules/semver/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/index.js	(date 1753913035308)
@@ -1,3 +1,5 @@
+'use strict'
+
 // just pre-load all the stuff that index.js lazily exports
 const internalRe = require('./internal/re')
 const constants = require('./internal/constants')
Index: node_modules/semver/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>semver(1) -- The semantic versioner for npm\r\n===========================================\r\n\r\n## Install\r\n\r\n```bash\r\nnpm install semver\r\n````\r\n\r\n## Usage\r\n\r\nAs a node module:\r\n\r\n```js\r\nconst semver = require('semver')\r\n\r\nsemver.valid('1.2.3') // '1.2.3'\r\nsemver.valid('a.b.c') // null\r\nsemver.clean('  =v1.2.3   ') // '1.2.3'\r\nsemver.satisfies('1.2.3', '1.x || >=2.5.0 || 5.0.0 - 7.2.3') // true\r\nsemver.gt('1.2.3', '9.8.7') // false\r\nsemver.lt('1.2.3', '9.8.7') // true\r\nsemver.minVersion('>=1.0.0') // '1.0.0'\r\nsemver.valid(semver.coerce('v2')) // '2.0.0'\r\nsemver.valid(semver.coerce('42.6.7.9.3-alpha')) // '42.6.7'\r\n```\r\n\r\nYou can also just load the module for the function that you care about if\r\nyou'd like to minimize your footprint.\r\n\r\n```js\r\n// load the whole API at once in a single object\r\nconst semver = require('semver')\r\n\r\n// or just load the bits you need\r\n// all of them listed here, just pick and choose what you want\r\n\r\n// classes\r\nconst SemVer = require('semver/classes/semver')\r\nconst Comparator = require('semver/classes/comparator')\r\nconst Range = require('semver/classes/range')\r\n\r\n// functions for working with versions\r\nconst semverParse = require('semver/functions/parse')\r\nconst semverValid = require('semver/functions/valid')\r\nconst semverClean = require('semver/functions/clean')\r\nconst semverInc = require('semver/functions/inc')\r\nconst semverDiff = require('semver/functions/diff')\r\nconst semverMajor = require('semver/functions/major')\r\nconst semverMinor = require('semver/functions/minor')\r\nconst semverPatch = require('semver/functions/patch')\r\nconst semverPrerelease = require('semver/functions/prerelease')\r\nconst semverCompare = require('semver/functions/compare')\r\nconst semverRcompare = require('semver/functions/rcompare')\r\nconst semverCompareLoose = require('semver/functions/compare-loose')\r\nconst semverCompareBuild = require('semver/functions/compare-build')\r\nconst semverSort = require('semver/functions/sort')\r\nconst semverRsort = require('semver/functions/rsort')\r\n\r\n// low-level comparators between versions\r\nconst semverGt = require('semver/functions/gt')\r\nconst semverLt = require('semver/functions/lt')\r\nconst semverEq = require('semver/functions/eq')\r\nconst semverNeq = require('semver/functions/neq')\r\nconst semverGte = require('semver/functions/gte')\r\nconst semverLte = require('semver/functions/lte')\r\nconst semverCmp = require('semver/functions/cmp')\r\nconst semverCoerce = require('semver/functions/coerce')\r\n\r\n// working with ranges\r\nconst semverSatisfies = require('semver/functions/satisfies')\r\nconst semverMaxSatisfying = require('semver/ranges/max-satisfying')\r\nconst semverMinSatisfying = require('semver/ranges/min-satisfying')\r\nconst semverToComparators = require('semver/ranges/to-comparators')\r\nconst semverMinVersion = require('semver/ranges/min-version')\r\nconst semverValidRange = require('semver/ranges/valid')\r\nconst semverOutside = require('semver/ranges/outside')\r\nconst semverGtr = require('semver/ranges/gtr')\r\nconst semverLtr = require('semver/ranges/ltr')\r\nconst semverIntersects = require('semver/ranges/intersects')\r\nconst semverSimplifyRange = require('semver/ranges/simplify')\r\nconst semverRangeSubset = require('semver/ranges/subset')\r\n```\r\n\r\nAs a command-line utility:\r\n\r\n```\r\n$ semver -h\r\n\r\nA JavaScript implementation of the https://semver.org/ specification\r\nCopyright Isaac Z. Schlueter\r\n\r\nUsage: semver [options] <version> [<version> [...]]\r\nPrints valid versions sorted by SemVer precedence\r\n\r\nOptions:\r\n-r --range <range>\r\n        Print versions that match the specified range.\r\n\r\n-i --increment [<level>]\r\n        Increment a version by the specified level.  Level can\r\n        be one of: major, minor, patch, premajor, preminor,\r\n        prepatch, or prerelease.  Default level is 'patch'.\r\n        Only one version may be specified.\r\n\r\n--preid <identifier>\r\n        Identifier to be used to prefix premajor, preminor,\r\n        prepatch or prerelease version increments.\r\n\r\n-l --loose\r\n        Interpret versions and ranges loosely\r\n\r\n-n <0|1>\r\n        This is the base to be used for the prerelease identifier.\r\n\r\n-p --include-prerelease\r\n        Always include prerelease versions in range matching\r\n\r\n-c --coerce\r\n        Coerce a string into SemVer if possible\r\n        (does not imply --loose)\r\n\r\n--rtl\r\n        Coerce version strings right to left\r\n\r\n--ltr\r\n        Coerce version strings left to right (default)\r\n\r\nProgram exits successfully if any valid version satisfies\r\nall supplied ranges, and prints all satisfying versions.\r\n\r\nIf no satisfying versions are found, then exits failure.\r\n\r\nVersions are printed in ascending order, so supplying\r\nmultiple versions to the utility will just sort them.\r\n```\r\n\r\n## Versions\r\n\r\nA \"version\" is described by the `v2.0.0` specification found at\r\n<https://semver.org/>.\r\n\r\nA leading `\"=\"` or `\"v\"` character is stripped off and ignored.\r\n\r\n## Ranges\r\n\r\nA `version range` is a set of `comparators` that specify versions\r\nthat satisfy the range.\r\n\r\nA `comparator` is composed of an `operator` and a `version`.  The set\r\nof primitive `operators` is:\r\n\r\n* `<` Less than\r\n* `<=` Less than or equal to\r\n* `>` Greater than\r\n* `>=` Greater than or equal to\r\n* `=` Equal.  If no operator is specified, then equality is assumed,\r\n  so this operator is optional but MAY be included.\r\n\r\nFor example, the comparator `>=1.2.7` would match the versions\r\n`1.2.7`, `1.2.8`, `2.5.3`, and `1.3.9`, but not the versions `1.2.6`\r\nor `1.1.0`. The comparator `>1` is equivalent to `>=2.0.0` and\r\nwould match the versions `2.0.0` and `3.1.0`, but not the versions\r\n`1.0.1` or `1.1.0`.\r\n\r\nComparators can be joined by whitespace to form a `comparator set`,\r\nwhich is satisfied by the **intersection** of all of the comparators\r\nit includes.\r\n\r\nA range is composed of one or more comparator sets, joined by `||`.  A\r\nversion matches a range if and only if every comparator in at least\r\none of the `||`-separated comparator sets is satisfied by the version.\r\n\r\nFor example, the range `>=1.2.7 <1.3.0` would match the versions\r\n`1.2.7`, `1.2.8`, and `1.2.99`, but not the versions `1.2.6`, `1.3.0`,\r\nor `1.1.0`.\r\n\r\nThe range `1.2.7 || >=1.2.9 <2.0.0` would match the versions `1.2.7`,\r\n`1.2.9`, and `1.4.6`, but not the versions `1.2.8` or `2.0.0`.\r\n\r\n### Prerelease Tags\r\n\r\nIf a version has a prerelease tag (for example, `1.2.3-alpha.3`) then\r\nit will only be allowed to satisfy comparator sets if at least one\r\ncomparator with the same `[major, minor, patch]` tuple also has a\r\nprerelease tag.\r\n\r\nFor example, the range `>1.2.3-alpha.3` would be allowed to match the\r\nversion `1.2.3-alpha.7`, but it would *not* be satisfied by\r\n`3.4.5-alpha.9`, even though `3.4.5-alpha.9` is technically \"greater\r\nthan\" `1.2.3-alpha.3` according to the SemVer sort rules.  The version\r\nrange only accepts prerelease tags on the `1.2.3` version.\r\nVersion `3.4.5` *would* satisfy the range because it does not have a\r\nprerelease flag, and `3.4.5` is greater than `1.2.3-alpha.7`.\r\n\r\nThe purpose of this behavior is twofold.  First, prerelease versions\r\nfrequently are updated very quickly, and contain many breaking changes\r\nthat are (by the author's design) not yet fit for public consumption.\r\nTherefore, by default, they are excluded from range-matching\r\nsemantics.\r\n\r\nSecond, a user who has opted into using a prerelease version has\r\nindicated the intent to use *that specific* set of\r\nalpha/beta/rc versions.  By including a prerelease tag in the range,\r\nthe user is indicating that they are aware of the risk.  However, it\r\nis still not appropriate to assume that they have opted into taking a\r\nsimilar risk on the *next* set of prerelease versions.\r\n\r\nNote that this behavior can be suppressed (treating all prerelease\r\nversions as if they were normal versions, for range-matching)\r\nby setting the `includePrerelease` flag on the options\r\nobject to any\r\n[functions](https://github.com/npm/node-semver#functions) that do\r\nrange matching.\r\n\r\n#### Prerelease Identifiers\r\n\r\nThe method `.inc` takes an additional `identifier` string argument that\r\nwill append the value of the string as a prerelease identifier:\r\n\r\n```javascript\r\nsemver.inc('1.2.3', 'prerelease', 'beta')\r\n// '1.2.4-beta.0'\r\n```\r\n\r\ncommand-line example:\r\n\r\n```bash\r\n$ semver 1.2.3 -i prerelease --preid beta\r\n1.2.4-beta.0\r\n```\r\n\r\nWhich then can be used to increment further:\r\n\r\n```bash\r\n$ semver 1.2.4-beta.0 -i prerelease\r\n1.2.4-beta.1\r\n```\r\n\r\n#### Prerelease Identifier Base\r\n\r\nThe method `.inc` takes an optional parameter 'identifierBase' string\r\nthat will let you let your prerelease number as zero-based or one-based.\r\nSet to `false` to omit the prerelease number altogether.\r\nIf you do not specify this parameter, it will default to zero-based.\r\n\r\n```javascript\r\nsemver.inc('1.2.3', 'prerelease', 'beta', '1')\r\n// '1.2.4-beta.1'\r\n```\r\n\r\n```javascript\r\nsemver.inc('1.2.3', 'prerelease', 'beta', false)\r\n// '1.2.4-beta'\r\n```\r\n\r\ncommand-line example:\r\n\r\n```bash\r\n$ semver 1.2.3 -i prerelease --preid beta -n 1\r\n1.2.4-beta.1\r\n```\r\n\r\n```bash\r\n$ semver 1.2.3 -i prerelease --preid beta -n false\r\n1.2.4-beta\r\n```\r\n\r\n### Advanced Range Syntax\r\n\r\nAdvanced range syntax desugars to primitive comparators in\r\ndeterministic ways.\r\n\r\nAdvanced ranges may be combined in the same way as primitive\r\ncomparators using white space or `||`.\r\n\r\n#### Hyphen Ranges `X.Y.Z - A.B.C`\r\n\r\nSpecifies an inclusive set.\r\n\r\n* `1.2.3 - 2.3.4` := `>=1.2.3 <=2.3.4`\r\n\r\nIf a partial version is provided as the first version in the inclusive\r\nrange, then the missing pieces are replaced with zeroes.\r\n\r\n* `1.2 - 2.3.4` := `>=1.2.0 <=2.3.4`\r\n\r\nIf a partial version is provided as the second version in the\r\ninclusive range, then all versions that start with the supplied parts\r\nof the tuple are accepted, but nothing that would be greater than the\r\nprovided tuple parts.\r\n\r\n* `1.2.3 - 2.3` := `>=1.2.3 <2.4.0-0`\r\n* `1.2.3 - 2` := `>=1.2.3 <3.0.0-0`\r\n\r\n#### X-Ranges `1.2.x` `1.X` `1.2.*` `*`\r\n\r\nAny of `X`, `x`, or `*` may be used to \"stand in\" for one of the\r\nnumeric values in the `[major, minor, patch]` tuple.\r\n\r\n* `*` := `>=0.0.0` (Any non-prerelease version satisfies, unless\r\n  `includePrerelease` is specified, in which case any version at all\r\n  satisfies)\r\n* `1.x` := `>=1.0.0 <2.0.0-0` (Matching major version)\r\n* `1.2.x` := `>=1.2.0 <1.3.0-0` (Matching major and minor versions)\r\n\r\nA partial version range is treated as an X-Range, so the special\r\ncharacter is in fact optional.\r\n\r\n* `\"\"` (empty string) := `*` := `>=0.0.0`\r\n* `1` := `1.x.x` := `>=1.0.0 <2.0.0-0`\r\n* `1.2` := `1.2.x` := `>=1.2.0 <1.3.0-0`\r\n\r\n#### Tilde Ranges `~1.2.3` `~1.2` `~1`\r\n\r\nAllows patch-level changes if a minor version is specified on the\r\ncomparator.  Allows minor-level changes if not.\r\n\r\n* `~1.2.3` := `>=1.2.3 <1.(2+1).0` := `>=1.2.3 <1.3.0-0`\r\n* `~1.2` := `>=1.2.0 <1.(2+1).0` := `>=1.2.0 <1.3.0-0` (Same as `1.2.x`)\r\n* `~1` := `>=1.0.0 <(1+1).0.0` := `>=1.0.0 <2.0.0-0` (Same as `1.x`)\r\n* `~0.2.3` := `>=0.2.3 <0.(2+1).0` := `>=0.2.3 <0.3.0-0`\r\n* `~0.2` := `>=0.2.0 <0.(2+1).0` := `>=0.2.0 <0.3.0-0` (Same as `0.2.x`)\r\n* `~0` := `>=0.0.0 <(0+1).0.0` := `>=0.0.0 <1.0.0-0` (Same as `0.x`)\r\n* `~1.2.3-beta.2` := `>=1.2.3-beta.2 <1.3.0-0` Note that prereleases in\r\n  the `1.2.3` version will be allowed, if they are greater than or\r\n  equal to `beta.2`.  So, `1.2.3-beta.4` would be allowed, but\r\n  `1.2.4-beta.2` would not, because it is a prerelease of a\r\n  different `[major, minor, patch]` tuple.\r\n\r\n#### Caret Ranges `^1.2.3` `^0.2.5` `^0.0.4`\r\n\r\nAllows changes that do not modify the left-most non-zero element in the\r\n`[major, minor, patch]` tuple.  In other words, this allows patch and\r\nminor updates for versions `1.0.0` and above, patch updates for\r\nversions `0.X >=0.1.0`, and *no* updates for versions `0.0.X`.\r\n\r\nMany authors treat a `0.x` version as if the `x` were the major\r\n\"breaking-change\" indicator.\r\n\r\nCaret ranges are ideal when an author may make breaking changes\r\nbetween `0.2.4` and `0.3.0` releases, which is a common practice.\r\nHowever, it presumes that there will *not* be breaking changes between\r\n`0.2.4` and `0.2.5`.  It allows for changes that are presumed to be\r\nadditive (but non-breaking), according to commonly observed practices.\r\n\r\n* `^1.2.3` := `>=1.2.3 <2.0.0-0`\r\n* `^0.2.3` := `>=0.2.3 <0.3.0-0`\r\n* `^0.0.3` := `>=0.0.3 <0.0.4-0`\r\n* `^1.2.3-beta.2` := `>=1.2.3-beta.2 <2.0.0-0` Note that prereleases in\r\n  the `1.2.3` version will be allowed, if they are greater than or\r\n  equal to `beta.2`.  So, `1.2.3-beta.4` would be allowed, but\r\n  `1.2.4-beta.2` would not, because it is a prerelease of a\r\n  different `[major, minor, patch]` tuple.\r\n* `^0.0.3-beta` := `>=0.0.3-beta <0.0.4-0`  Note that prereleases in the\r\n  `0.0.3` version *only* will be allowed, if they are greater than or\r\n  equal to `beta`.  So, `0.0.3-pr.2` would be allowed.\r\n\r\nWhen parsing caret ranges, a missing `patch` value desugars to the\r\nnumber `0`, but will allow flexibility within that value, even if the\r\nmajor and minor versions are both `0`.\r\n\r\n* `^1.2.x` := `>=1.2.0 <2.0.0-0`\r\n* `^0.0.x` := `>=0.0.0 <0.1.0-0`\r\n* `^0.0` := `>=0.0.0 <0.1.0-0`\r\n\r\nA missing `minor` and `patch` values will desugar to zero, but also\r\nallow flexibility within those values, even if the major version is\r\nzero.\r\n\r\n* `^1.x` := `>=1.0.0 <2.0.0-0`\r\n* `^0.x` := `>=0.0.0 <1.0.0-0`\r\n\r\n### Range Grammar\r\n\r\nPutting all this together, here is a Backus-Naur grammar for ranges,\r\nfor the benefit of parser authors:\r\n\r\n```bnf\r\nrange-set  ::= range ( logical-or range ) *\r\nlogical-or ::= ( ' ' ) * '||' ( ' ' ) *\r\nrange      ::= hyphen | simple ( ' ' simple ) * | ''\r\nhyphen     ::= partial ' - ' partial\r\nsimple     ::= primitive | partial | tilde | caret\r\nprimitive  ::= ( '<' | '>' | '>=' | '<=' | '=' ) partial\r\npartial    ::= xr ( '.' xr ( '.' xr qualifier ? )? )?\r\nxr         ::= 'x' | 'X' | '*' | nr\r\nnr         ::= '0' | ['1'-'9'] ( ['0'-'9'] ) *\r\ntilde      ::= '~' partial\r\ncaret      ::= '^' partial\r\nqualifier  ::= ( '-' pre )? ( '+' build )?\r\npre        ::= parts\r\nbuild      ::= parts\r\nparts      ::= part ( '.' part ) *\r\npart       ::= nr | [-0-9A-Za-z]+\r\n```\r\n\r\n## Functions\r\n\r\nAll methods and classes take a final `options` object argument.  All\r\noptions in this object are `false` by default.  The options supported\r\nare:\r\n\r\n- `loose`: Be more forgiving about not-quite-valid semver strings.\r\n  (Any resulting output will always be 100% strict compliant, of\r\n  course.)  For backwards compatibility reasons, if the `options`\r\n  argument is a boolean value instead of an object, it is interpreted\r\n  to be the `loose` param.\r\n- `includePrerelease`: Set to suppress the [default\r\n  behavior](https://github.com/npm/node-semver#prerelease-tags) of\r\n  excluding prerelease tagged versions from ranges unless they are\r\n  explicitly opted into.\r\n\r\nStrict-mode Comparators and Ranges will be strict about the SemVer\r\nstrings that they parse.\r\n\r\n* `valid(v)`: Return the parsed version, or null if it's not valid.\r\n* `inc(v, release, options, identifier, identifierBase)`: \r\n  Return the version incremented by the release\r\n  type (`major`, `premajor`, `minor`, `preminor`, `patch`,\r\n  `prepatch`, or `prerelease`), or null if it's not valid\r\n  * `premajor` in one call will bump the version up to the next major\r\n    version and down to a prerelease of that major version.\r\n    `preminor`, and `prepatch` work the same way.\r\n  * If called from a non-prerelease version, `prerelease` will work the\r\n    same as `prepatch`. It increments the patch version and then makes a\r\n    prerelease. If the input version is already a prerelease it simply\r\n    increments it.\r\n  * `identifier` can be used to prefix `premajor`, `preminor`,\r\n    `prepatch`, or `prerelease` version increments. `identifierBase`\r\n    is the base to be used for the `prerelease` identifier.\r\n* `prerelease(v)`: Returns an array of prerelease components, or null\r\n  if none exist. Example: `prerelease('1.2.3-alpha.1') -> ['alpha', 1]`\r\n* `major(v)`: Return the major version number.\r\n* `minor(v)`: Return the minor version number.\r\n* `patch(v)`: Return the patch version number.\r\n* `intersects(r1, r2, loose)`: Return true if the two supplied ranges\r\n  or comparators intersect.\r\n* `parse(v)`: Attempt to parse a string as a semantic version, returning either\r\n  a `SemVer` object or `null`.\r\n\r\n### Comparison\r\n\r\n* `gt(v1, v2)`: `v1 > v2`\r\n* `gte(v1, v2)`: `v1 >= v2`\r\n* `lt(v1, v2)`: `v1 < v2`\r\n* `lte(v1, v2)`: `v1 <= v2`\r\n* `eq(v1, v2)`: `v1 == v2` This is true if they're logically equivalent,\r\n  even if they're not the same string.  You already know how to\r\n  compare strings.\r\n* `neq(v1, v2)`: `v1 != v2` The opposite of `eq`.\r\n* `cmp(v1, comparator, v2)`: Pass in a comparison string, and it'll call\r\n  the corresponding function above.  `\"===\"` and `\"!==\"` do simple\r\n  string comparison, but are included for completeness.  Throws if an\r\n  invalid comparison string is provided.\r\n* `compare(v1, v2)`: Return `0` if `v1 == v2`, or `1` if `v1` is greater, or `-1` if\r\n  `v2` is greater.  Sorts in ascending order if passed to `Array.sort()`.\r\n* `rcompare(v1, v2)`: The reverse of `compare`.  Sorts an array of versions\r\n  in descending order when passed to `Array.sort()`.\r\n* `compareBuild(v1, v2)`: The same as `compare` but considers `build` when two versions\r\n  are equal.  Sorts in ascending order if passed to `Array.sort()`.\r\n* `compareLoose(v1, v2)`: Short for ``compare(v1, v2, { loose: true })`.\r\n* `diff(v1, v2)`: Returns the difference between two versions by the release type\r\n  (`major`, `premajor`, `minor`, `preminor`, `patch`, `prepatch`, or `prerelease`),\r\n  or null if the versions are the same.\r\n\r\n### Sorting\r\n\r\n* `sort(versions)`: Returns a sorted array of versions based on the `compareBuild` \r\n  function.\r\n* `rsort(versions)`: The reverse of `sort`. Returns an array of versions based on\r\n  the `compareBuild` function in descending order.\r\n\r\n### Comparators\r\n\r\n* `intersects(comparator)`: Return true if the comparators intersect\r\n\r\n### Ranges\r\n\r\n* `validRange(range)`: Return the valid range or null if it's not valid\r\n* `satisfies(version, range)`: Return true if the version satisfies the\r\n  range.\r\n* `maxSatisfying(versions, range)`: Return the highest version in the list\r\n  that satisfies the range, or `null` if none of them do.\r\n* `minSatisfying(versions, range)`: Return the lowest version in the list\r\n  that satisfies the range, or `null` if none of them do.\r\n* `minVersion(range)`: Return the lowest version that can match\r\n  the given range.\r\n* `gtr(version, range)`: Return `true` if the version is greater than all the\r\n  versions possible in the range.\r\n* `ltr(version, range)`: Return `true` if the version is less than all the\r\n  versions possible in the range.\r\n* `outside(version, range, hilo)`: Return true if the version is outside\r\n  the bounds of the range in either the high or low direction.  The\r\n  `hilo` argument must be either the string `'>'` or `'<'`.  (This is\r\n  the function called by `gtr` and `ltr`.)\r\n* `intersects(range)`: Return true if any of the range comparators intersect.\r\n* `simplifyRange(versions, range)`: Return a \"simplified\" range that\r\n  matches the same items in the `versions` list as the range specified.  Note\r\n  that it does *not* guarantee that it would match the same versions in all\r\n  cases, only for the set of versions provided.  This is useful when\r\n  generating ranges by joining together multiple versions with `||`\r\n  programmatically, to provide the user with something a bit more\r\n  ergonomic.  If the provided range is shorter in string-length than the\r\n  generated range, then that is returned.\r\n* `subset(subRange, superRange)`: Return `true` if the `subRange` range is\r\n  entirely contained by the `superRange` range.\r\n\r\nNote that, since ranges may be non-contiguous, a version might not be\r\ngreater than a range, less than a range, *or* satisfy a range!  For\r\nexample, the range `1.2 <1.2.9 || >2.0.0` would have a hole from `1.2.9`\r\nuntil `2.0.0`, so version `1.2.10` would not be greater than the\r\nrange (because `2.0.1` satisfies, which is higher), nor less than the\r\nrange (since `1.2.8` satisfies, which is lower), and it also does not\r\nsatisfy the range.\r\n\r\nIf you want to know if a version satisfies or does not satisfy a\r\nrange, use the `satisfies(version, range)` function.\r\n\r\n### Coercion\r\n\r\n* `coerce(version, options)`: Coerces a string to semver if possible\r\n\r\nThis aims to provide a very forgiving translation of a non-semver string to\r\nsemver. It looks for the first digit in a string and consumes all\r\nremaining characters which satisfy at least a partial semver (e.g., `1`,\r\n`1.2`, `1.2.3`) up to the max permitted length (256 characters).  Longer\r\nversions are simply truncated (`4.6.3.9.2-alpha2` becomes `4.6.3`).  All\r\nsurrounding text is simply ignored (`v3.4 replaces v3.3.1` becomes\r\n`3.4.0`).  Only text which lacks digits will fail coercion (`version one`\r\nis not valid).  The maximum length for any semver component considered for\r\ncoercion is 16 characters; longer components will be ignored\r\n(`10000000000000000.4.7.4` becomes `4.7.4`).  The maximum value for any\r\nsemver component is `Number.MAX_SAFE_INTEGER || (2**53 - 1)`; higher value\r\ncomponents are invalid (`9999999999999999.4.7.4` is likely invalid).\r\n\r\nIf the `options.rtl` flag is set, then `coerce` will return the right-most\r\ncoercible tuple that does not share an ending index with a longer coercible\r\ntuple.  For example, `1.2.3.4` will return `2.3.4` in rtl mode, not\r\n`4.0.0`.  `1.2.3/4` will return `4.0.0`, because the `4` is not a part of\r\nany other overlapping SemVer tuple.\r\n\r\nIf the `options.includePrerelease` flag is set, then the `coerce` result will contain\r\nprerelease and build parts of a version.  For example, `1.2.3.4-rc.1+rev.2`\r\nwill preserve prerelease `rc.1` and build `rev.2` in the result.\r\n\r\n### Clean\r\n\r\n* `clean(version)`: Clean a string to be a valid semver if possible\r\n\r\nThis will return a cleaned and trimmed semver version. If the provided\r\nversion is not valid a null will be returned. This does not work for\r\nranges.\r\n\r\nex.\r\n* `s.clean(' = v 2.1.5foo')`: `null`\r\n* `s.clean(' = v 2.1.5foo', { loose: true })`: `'2.1.5-foo'`\r\n* `s.clean(' = v 2.1.5-foo')`: `null`\r\n* `s.clean(' = v 2.1.5-foo', { loose: true })`: `'2.1.5-foo'`\r\n* `s.clean('=v2.1.5')`: `'2.1.5'`\r\n* `s.clean('  =v2.1.5')`: `'2.1.5'`\r\n* `s.clean('      2.1.5   ')`: `'2.1.5'`\r\n* `s.clean('~1.0.0')`: `null`\r\n\r\n## Constants\r\n\r\nAs a convenience, helper constants are exported to provide information about what `node-semver` supports:\r\n\r\n### `RELEASE_TYPES`\r\n\r\n- major\r\n- premajor\r\n- minor\r\n- preminor\r\n- patch\r\n- prepatch\r\n- prerelease\r\n\r\n```\r\nconst semver = require('semver');\r\n\r\nif (semver.RELEASE_TYPES.includes(arbitraryUserInput)) {\r\n  console.log('This is a valid release type!');\r\n} else {\r\n  console.warn('This is NOT a valid release type!');\r\n}\r\n```\r\n\r\n### `SEMVER_SPEC_VERSION`\r\n\r\n2.0.0\r\n\r\n```\r\nconst semver = require('semver');\r\n\r\nconsole.log('We are currently using the semver specification version:', semver.SEMVER_SPEC_VERSION);\r\n```\r\n\r\n## Exported Modules\r\n\r\n<!--\r\nTODO: Make sure that all of these items are documented (classes aren't,\r\neg), and then pull the module name into the documentation for that specific\r\nthing.\r\n-->\r\n\r\nYou may pull in just the part of this semver utility that you need if you\r\nare sensitive to packing and tree-shaking concerns.  The main\r\n`require('semver')` export uses getter functions to lazily load the parts\r\nof the API that are used.\r\n\r\nThe following modules are available:\r\n\r\n* `require('semver')`\r\n* `require('semver/classes')`\r\n* `require('semver/classes/comparator')`\r\n* `require('semver/classes/range')`\r\n* `require('semver/classes/semver')`\r\n* `require('semver/functions/clean')`\r\n* `require('semver/functions/cmp')`\r\n* `require('semver/functions/coerce')`\r\n* `require('semver/functions/compare')`\r\n* `require('semver/functions/compare-build')`\r\n* `require('semver/functions/compare-loose')`\r\n* `require('semver/functions/diff')`\r\n* `require('semver/functions/eq')`\r\n* `require('semver/functions/gt')`\r\n* `require('semver/functions/gte')`\r\n* `require('semver/functions/inc')`\r\n* `require('semver/functions/lt')`\r\n* `require('semver/functions/lte')`\r\n* `require('semver/functions/major')`\r\n* `require('semver/functions/minor')`\r\n* `require('semver/functions/neq')`\r\n* `require('semver/functions/parse')`\r\n* `require('semver/functions/patch')`\r\n* `require('semver/functions/prerelease')`\r\n* `require('semver/functions/rcompare')`\r\n* `require('semver/functions/rsort')`\r\n* `require('semver/functions/satisfies')`\r\n* `require('semver/functions/sort')`\r\n* `require('semver/functions/valid')`\r\n* `require('semver/ranges/gtr')`\r\n* `require('semver/ranges/intersects')`\r\n* `require('semver/ranges/ltr')`\r\n* `require('semver/ranges/max-satisfying')`\r\n* `require('semver/ranges/min-satisfying')`\r\n* `require('semver/ranges/min-version')`\r\n* `require('semver/ranges/outside')`\r\n* `require('semver/ranges/simplify')`\r\n* `require('semver/ranges/subset')`\r\n* `require('semver/ranges/to-comparators')`\r\n* `require('semver/ranges/valid')`\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/README.md b/node_modules/semver/README.md
--- a/node_modules/semver/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/README.md	(date 1753913035339)
@@ -100,7 +100,7 @@
 -i --increment [<level>]
         Increment a version by the specified level.  Level can
         be one of: major, minor, patch, premajor, preminor,
-        prepatch, or prerelease.  Default level is 'patch'.
+        prepatch, prerelease, or release.  Default level is 'patch'.
         Only one version may be specified.
 
 --preid <identifier>
@@ -141,6 +141,8 @@
 <https://semver.org/>.
 
 A leading `"="` or `"v"` character is stripped off and ignored.
+Support for stripping a leading "v" is kept for compatibility with `v1.0.0` of the SemVer
+specification but should not be used anymore.
 
 ## Ranges
 
@@ -237,6 +239,13 @@
 1.2.4-beta.1
 ```
 
+To get out of the prerelease phase, use the `release` option:
+
+```bash
+$ semver 1.2.4-beta.1 -i release
+1.2.4
+```
+
 #### Prerelease Identifier Base
 
 The method `.inc` takes an optional parameter 'identifierBase' string
@@ -415,10 +424,10 @@
 strings that they parse.
 
 * `valid(v)`: Return the parsed version, or null if it's not valid.
-* `inc(v, release, options, identifier, identifierBase)`: 
+* `inc(v, releaseType, options, identifier, identifierBase)`: 
   Return the version incremented by the release
   type (`major`, `premajor`, `minor`, `preminor`, `patch`,
-  `prepatch`, or `prerelease`), or null if it's not valid
+  `prepatch`, `prerelease`, or `release`), or null if it's not valid
   * `premajor` in one call will bump the version up to the next major
     version and down to a prerelease of that major version.
     `preminor`, and `prepatch` work the same way.
@@ -426,6 +435,7 @@
     same as `prepatch`. It increments the patch version and then makes a
     prerelease. If the input version is already a prerelease it simply
     increments it.
+  * `release` will remove any prerelease part of the version.
   * `identifier` can be used to prefix `premajor`, `preminor`,
     `prepatch`, or `prerelease` version increments. `identifierBase`
     is the base to be used for the `prerelease` identifier.
@@ -459,7 +469,7 @@
   in descending order when passed to `Array.sort()`.
 * `compareBuild(v1, v2)`: The same as `compare` but considers `build` when two versions
   are equal.  Sorts in ascending order if passed to `Array.sort()`.
-* `compareLoose(v1, v2)`: Short for ``compare(v1, v2, { loose: true })`.
+* `compareLoose(v1, v2)`: Short for `compare(v1, v2, { loose: true })`.
 * `diff(v1, v2)`: Returns the difference between two versions by the release type
   (`major`, `premajor`, `minor`, `preminor`, `patch`, `prepatch`, or `prerelease`),
   or null if the versions are the same.
@@ -477,7 +487,7 @@
 
 ### Ranges
 
-* `validRange(range)`: Return the valid range or null if it's not valid
+* `validRange(range)`: Return the valid range or null if it's not valid.
 * `satisfies(version, range)`: Return true if the version satisfies the
   range.
 * `maxSatisfying(versions, range)`: Return the highest version in the list
Index: node_modules/pg-connection-string/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"pg-connection-string\",\r\n  \"version\": \"2.6.4\",\r\n  \"description\": \"Functions for dealing with a PostgresSQL connection string\",\r\n  \"main\": \"./index.js\",\r\n  \"types\": \"./index.d.ts\",\r\n  \"scripts\": {\r\n    \"test\": \"istanbul cover _mocha && npm run check-coverage\",\r\n    \"check-coverage\": \"istanbul check-coverage --statements 100 --branches 100 --lines 100 --functions 100\",\r\n    \"coveralls\": \"cat ./coverage/lcov.info | ./node_modules/.bin/coveralls\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git://github.com/brianc/node-postgres.git\",\r\n    \"directory\": \"packages/pg-connection-string\"\r\n  },\r\n  \"keywords\": [\r\n    \"pg\",\r\n    \"connection\",\r\n    \"string\",\r\n    \"parse\"\r\n  ],\r\n  \"author\": \"Blaine Bublitz <blaine@iceddev.com> (http://iceddev.com/)\",\r\n  \"license\": \"MIT\",\r\n  \"bugs\": {\r\n    \"url\": \"https://github.com/brianc/node-postgres/issues\"\r\n  },\r\n  \"homepage\": \"https://github.com/brianc/node-postgres/tree/master/packages/pg-connection-string\",\r\n  \"devDependencies\": {\r\n    \"chai\": \"^4.1.1\",\r\n    \"coveralls\": \"^3.0.4\",\r\n    \"istanbul\": \"^0.4.5\",\r\n    \"mocha\": \"^7.1.2\"\r\n  },\r\n  \"files\": [\r\n    \"index.js\",\r\n    \"index.d.ts\"\r\n  ],\r\n  \"gitHead\": \"a37a93bf7990220517a40cf16b8e72d4c3e6cef5\"\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-connection-string/package.json b/node_modules/pg-connection-string/package.json
--- a/node_modules/pg-connection-string/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-connection-string/package.json	(date 1753913035356)
@@ -1,13 +1,20 @@
 {
   "name": "pg-connection-string",
-  "version": "2.6.4",
+  "version": "2.9.1",
   "description": "Functions for dealing with a PostgresSQL connection string",
   "main": "./index.js",
   "types": "./index.d.ts",
+  "exports": {
+    ".": {
+      "types": "./index.d.ts",
+      "import": "./esm/index.mjs",
+      "require": "./index.js",
+      "default": "./index.js"
+    }
+  },
   "scripts": {
-    "test": "istanbul cover _mocha && npm run check-coverage",
-    "check-coverage": "istanbul check-coverage --statements 100 --branches 100 --lines 100 --functions 100",
-    "coveralls": "cat ./coverage/lcov.info | ./node_modules/.bin/coveralls"
+    "test": "nyc --reporter=lcov mocha && npm run check-coverage",
+    "check-coverage": "nyc check-coverage --statements 100 --branches 100 --lines 100 --functions 100"
   },
   "repository": {
     "type": "git",
@@ -27,14 +34,19 @@
   },
   "homepage": "https://github.com/brianc/node-postgres/tree/master/packages/pg-connection-string",
   "devDependencies": {
+    "@types/pg": "^8.12.0",
     "chai": "^4.1.1",
     "coveralls": "^3.0.4",
     "istanbul": "^0.4.5",
-    "mocha": "^7.1.2"
+    "mocha": "^10.5.2",
+    "nyc": "^15",
+    "tsx": "^4.19.4",
+    "typescript": "^4.0.3"
   },
   "files": [
     "index.js",
-    "index.d.ts"
+    "index.d.ts",
+    "esm"
   ],
-  "gitHead": "a37a93bf7990220517a40cf16b8e72d4c3e6cef5"
+  "gitHead": "cd877a57612a39335a97b593111710d26126279d"
 }
Index: node_modules/semver/bin/semver.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>#!/usr/bin/env node\r\n// Standalone semver comparison program.\r\n// Exits successfully and prints matching version(s) if\r\n// any supplied version is valid and passes all tests.\r\n\r\nconst argv = process.argv.slice(2)\r\n\r\nlet versions = []\r\n\r\nconst range = []\r\n\r\nlet inc = null\r\n\r\nconst version = require('../package.json').version\r\n\r\nlet loose = false\r\n\r\nlet includePrerelease = false\r\n\r\nlet coerce = false\r\n\r\nlet rtl = false\r\n\r\nlet identifier\r\n\r\nlet identifierBase\r\n\r\nconst semver = require('../')\r\nconst parseOptions = require('../internal/parse-options')\r\n\r\nlet reverse = false\r\n\r\nlet options = {}\r\n\r\nconst main = () => {\r\n  if (!argv.length) {\r\n    return help()\r\n  }\r\n  while (argv.length) {\r\n    let a = argv.shift()\r\n    const indexOfEqualSign = a.indexOf('=')\r\n    if (indexOfEqualSign !== -1) {\r\n      const value = a.slice(indexOfEqualSign + 1)\r\n      a = a.slice(0, indexOfEqualSign)\r\n      argv.unshift(value)\r\n    }\r\n    switch (a) {\r\n      case '-rv': case '-rev': case '--rev': case '--reverse':\r\n        reverse = true\r\n        break\r\n      case '-l': case '--loose':\r\n        loose = true\r\n        break\r\n      case '-p': case '--include-prerelease':\r\n        includePrerelease = true\r\n        break\r\n      case '-v': case '--version':\r\n        versions.push(argv.shift())\r\n        break\r\n      case '-i': case '--inc': case '--increment':\r\n        switch (argv[0]) {\r\n          case 'major': case 'minor': case 'patch': case 'prerelease':\r\n          case 'premajor': case 'preminor': case 'prepatch':\r\n            inc = argv.shift()\r\n            break\r\n          default:\r\n            inc = 'patch'\r\n            break\r\n        }\r\n        break\r\n      case '--preid':\r\n        identifier = argv.shift()\r\n        break\r\n      case '-r': case '--range':\r\n        range.push(argv.shift())\r\n        break\r\n      case '-n':\r\n        identifierBase = argv.shift()\r\n        if (identifierBase === 'false') {\r\n          identifierBase = false\r\n        }\r\n        break\r\n      case '-c': case '--coerce':\r\n        coerce = true\r\n        break\r\n      case '--rtl':\r\n        rtl = true\r\n        break\r\n      case '--ltr':\r\n        rtl = false\r\n        break\r\n      case '-h': case '--help': case '-?':\r\n        return help()\r\n      default:\r\n        versions.push(a)\r\n        break\r\n    }\r\n  }\r\n\r\n  options = parseOptions({ loose, includePrerelease, rtl })\r\n\r\n  versions = versions.map((v) => {\r\n    return coerce ? (semver.coerce(v, options) || { version: v }).version : v\r\n  }).filter((v) => {\r\n    return semver.valid(v)\r\n  })\r\n  if (!versions.length) {\r\n    return fail()\r\n  }\r\n  if (inc && (versions.length !== 1 || range.length)) {\r\n    return failInc()\r\n  }\r\n\r\n  for (let i = 0, l = range.length; i < l; i++) {\r\n    versions = versions.filter((v) => {\r\n      return semver.satisfies(v, range[i], options)\r\n    })\r\n    if (!versions.length) {\r\n      return fail()\r\n    }\r\n  }\r\n  versions\r\n    .sort((a, b) => semver[reverse ? 'rcompare' : 'compare'](a, b, options))\r\n    .map(v => semver.clean(v, options))\r\n    .map(v => inc ? semver.inc(v, inc, options, identifier, identifierBase) : v)\r\n    .forEach(v => console.log(v))\r\n}\r\n\r\nconst failInc = () => {\r\n  console.error('--inc can only be used on a single version with no range')\r\n  fail()\r\n}\r\n\r\nconst fail = () => process.exit(1)\r\n\r\nconst help = () => console.log(\r\n`SemVer ${version}\r\n\r\nA JavaScript implementation of the https://semver.org/ specification\r\nCopyright Isaac Z. Schlueter\r\n\r\nUsage: semver [options] <version> [<version> [...]]\r\nPrints valid versions sorted by SemVer precedence\r\n\r\nOptions:\r\n-r --range <range>\r\n        Print versions that match the specified range.\r\n\r\n-i --increment [<level>]\r\n        Increment a version by the specified level.  Level can\r\n        be one of: major, minor, patch, premajor, preminor,\r\n        prepatch, or prerelease.  Default level is 'patch'.\r\n        Only one version may be specified.\r\n\r\n--preid <identifier>\r\n        Identifier to be used to prefix premajor, preminor,\r\n        prepatch or prerelease version increments.\r\n\r\n-l --loose\r\n        Interpret versions and ranges loosely\r\n\r\n-p --include-prerelease\r\n        Always include prerelease versions in range matching\r\n\r\n-c --coerce\r\n        Coerce a string into SemVer if possible\r\n        (does not imply --loose)\r\n\r\n--rtl\r\n        Coerce version strings right to left\r\n\r\n--ltr\r\n        Coerce version strings left to right (default)\r\n\r\n-n <base>\r\n        Base number to be used for the prerelease identifier.\r\n        Can be either 0 or 1, or false to omit the number altogether.\r\n        Defaults to 0.\r\n\r\nProgram exits successfully if any valid version satisfies\r\nall supplied ranges, and prints all satisfying versions.\r\n\r\nIf no satisfying versions are found, then exits failure.\r\n\r\nVersions are printed in ascending order, so supplying\r\nmultiple versions to the utility will just sort them.`)\r\n\r\nmain()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/bin/semver.js b/node_modules/semver/bin/semver.js
--- a/node_modules/semver/bin/semver.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/bin/semver.js	(date 1753913035329)
@@ -3,6 +3,8 @@
 // Exits successfully and prints matching version(s) if
 // any supplied version is valid and passes all tests.
 
+'use strict'
+
 const argv = process.argv.slice(2)
 
 let versions = []
@@ -61,6 +63,7 @@
         switch (argv[0]) {
           case 'major': case 'minor': case 'patch': case 'prerelease':
           case 'premajor': case 'preminor': case 'prepatch':
+          case 'release':
             inc = argv.shift()
             break
           default:
@@ -149,7 +152,7 @@
 -i --increment [<level>]
         Increment a version by the specified level.  Level can
         be one of: major, minor, patch, premajor, preminor,
-        prepatch, or prerelease.  Default level is 'patch'.
+        prepatch, prerelease, or release.  Default level is 'patch'.
         Only one version may be specified.
 
 --preid <identifier>
Index: node_modules/semver/ranges/intersects.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const Range = require('../classes/range')\r\nconst intersects = (r1, r2, options) => {\r\n  r1 = new Range(r1, options)\r\n  r2 = new Range(r2, options)\r\n  return r1.intersects(r2, options)\r\n}\r\nmodule.exports = intersects\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/ranges/intersects.js b/node_modules/semver/ranges/intersects.js
--- a/node_modules/semver/ranges/intersects.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/ranges/intersects.js	(date 1753913035309)
@@ -1,3 +1,5 @@
+'use strict'
+
 const Range = require('../classes/range')
 const intersects = (r1, r2, options) => {
   r1 = new Range(r1, options)
Index: node_modules/pg-connection-string/index.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>export function parse(connectionString: string): ConnectionOptions\r\n\r\nexport interface ConnectionOptions {\r\n  host: string | null\r\n  password?: string\r\n  user?: string\r\n  port?: string | null\r\n  database: string | null | undefined\r\n  client_encoding?: string\r\n  ssl?: boolean | string\r\n\r\n  application_name?: string\r\n  fallback_application_name?: string\r\n  options?: string\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-connection-string/index.d.ts b/node_modules/pg-connection-string/index.d.ts
--- a/node_modules/pg-connection-string/index.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-connection-string/index.d.ts	(date 1753913035360)
@@ -1,4 +1,18 @@
-export function parse(connectionString: string): ConnectionOptions
+import { ClientConfig } from 'pg'
+
+export function parse(connectionString: string, options?: Options): ConnectionOptions
+
+export interface Options {
+  // Use libpq semantics when interpreting the connection string
+  useLibpqCompat?: boolean
+}
+
+interface SSLConfig {
+  ca?: string
+  cert?: string | null
+  key?: string
+  rejectUnauthorized?: boolean
+}
 
 export interface ConnectionOptions {
   host: string | null
@@ -7,9 +21,16 @@
   port?: string | null
   database: string | null | undefined
   client_encoding?: string
-  ssl?: boolean | string
+  ssl?: boolean | string | SSLConfig
 
   application_name?: string
   fallback_application_name?: string
   options?: string
+  keepalives?: number
+
+  // We allow any other options to be passed through
+  [key: string]: unknown
 }
+
+export function toClientConfig(config: ConnectionOptions): ClientConfig
+export function parseIntoClientConfig(connectionString: string): ClientConfig
Index: node_modules/semver/ranges/to-comparators.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const Range = require('../classes/range')\r\n\r\n// Mostly just for testing and legacy API reasons\r\nconst toComparators = (range, options) =>\r\n  new Range(range, options).set\r\n    .map(comp => comp.map(c => c.value).join(' ').trim().split(' '))\r\n\r\nmodule.exports = toComparators\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/ranges/to-comparators.js b/node_modules/semver/ranges/to-comparators.js
--- a/node_modules/semver/ranges/to-comparators.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/ranges/to-comparators.js	(date 1753913035334)
@@ -1,3 +1,5 @@
+'use strict'
+
 const Range = require('../classes/range')
 
 // Mostly just for testing and legacy API reasons
Index: node_modules/pg-connection-string/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>pg-connection-string\r\n====================\r\n\r\n[![NPM](https://nodei.co/npm/pg-connection-string.png?compact=true)](https://nodei.co/npm/pg-connection-string/)\r\n\r\n[![Build Status](https://travis-ci.org/iceddev/pg-connection-string.svg?branch=master)](https://travis-ci.org/iceddev/pg-connection-string)\r\n[![Coverage Status](https://coveralls.io/repos/github/iceddev/pg-connection-string/badge.svg?branch=master)](https://coveralls.io/github/iceddev/pg-connection-string?branch=master)\r\n\r\nFunctions for dealing with a PostgresSQL connection string\r\n\r\n`parse` method taken from [node-postgres](https://github.com/brianc/node-postgres.git)\r\nCopyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com)\r\nMIT License\r\n\r\n## Usage\r\n\r\n```js\r\nvar parse = require('pg-connection-string').parse;\r\n\r\nvar config = parse('postgres://someuser:somepassword@somehost:381/somedatabase')\r\n```\r\n\r\nThe resulting config contains a subset of the following properties:\r\n\r\n* `host` - Postgres server hostname or, for UNIX domain sockets, the socket filename\r\n* `port` - port on which to connect\r\n* `user` - User with which to authenticate to the server\r\n* `password` - Corresponding password\r\n* `database` - Database name within the server\r\n* `client_encoding` - string encoding the client will use\r\n* `ssl`, either a boolean or an object with properties\r\n  * `rejectUnauthorized`\r\n  * `cert`\r\n  * `key`\r\n  * `ca`\r\n* any other query parameters (for example, `application_name`) are preserved intact.\r\n\r\n## Connection Strings\r\n\r\nThe short summary of acceptable URLs is:\r\n\r\n * `socket:<path>?<query>` - UNIX domain socket\r\n * `postgres://<user>:<password>@<host>:<port>/<database>?<query>` - TCP connection\r\n\r\nBut see below for more details.\r\n\r\n### UNIX Domain Sockets\r\n\r\nWhen user and password are not given, the socket path follows `socket:`, as in `socket:/var/run/pgsql`.\r\nThis form can be shortened to just a path: `/var/run/pgsql`.\r\n\r\nWhen user and password are given, they are included in the typical URL positions, with an empty `host`, as in `socket://user:pass@/var/run/pgsql`.\r\n\r\nQuery parameters follow a `?` character, including the following special query parameters:\r\n\r\n * `db=<database>` - sets the database name (urlencoded)\r\n * `encoding=<encoding>` - sets the `client_encoding` property\r\n\r\n### TCP Connections\r\n\r\nTCP connections to the Postgres server are indicated with `pg:` or `postgres:` schemes (in fact, any scheme but `socket:` is accepted).\r\nIf username and password are included, they should be urlencoded.\r\nThe database name, however, should *not* be urlencoded.\r\n\r\nQuery parameters follow a `?` character, including the following special query parameters:\r\n * `host=<host>` - sets `host` property, overriding the URL's host\r\n * `encoding=<encoding>` - sets the `client_encoding` property\r\n * `ssl=1`, `ssl=true`, `ssl=0`, `ssl=false` - sets `ssl` to true or false, accordingly\r\n * `sslmode=<sslmode>`\r\n   * `sslmode=disable` - sets `ssl` to false\r\n   * `sslmode=no-verify` - sets `ssl` to `{ rejectUnauthorized: false }`\r\n   * `sslmode=prefer`, `sslmode=require`, `sslmode=verify-ca`, `sslmode=verify-full` - sets `ssl` to true\r\n * `sslcert=<filename>` - reads data from the given file and includes the result as `ssl.cert`\r\n * `sslkey=<filename>` - reads data from the given file and includes the result as `ssl.key`\r\n * `sslrootcert=<filename>` - reads data from the given file and includes the result as `ssl.ca`\r\n\r\nA bare relative URL, such as `salesdata`, will indicate a database name while leaving other properties empty.\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-connection-string/README.md b/node_modules/pg-connection-string/README.md
--- a/node_modules/pg-connection-string/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-connection-string/README.md	(date 1753913035358)
@@ -3,9 +3,6 @@
 
 [![NPM](https://nodei.co/npm/pg-connection-string.png?compact=true)](https://nodei.co/npm/pg-connection-string/)
 
-[![Build Status](https://travis-ci.org/iceddev/pg-connection-string.svg?branch=master)](https://travis-ci.org/iceddev/pg-connection-string)
-[![Coverage Status](https://coveralls.io/repos/github/iceddev/pg-connection-string/badge.svg?branch=master)](https://coveralls.io/github/iceddev/pg-connection-string?branch=master)
-
 Functions for dealing with a PostgresSQL connection string
 
 `parse` method taken from [node-postgres](https://github.com/brianc/node-postgres.git)
@@ -15,17 +12,17 @@
 ## Usage
 
 ```js
-var parse = require('pg-connection-string').parse;
+const parse = require('pg-connection-string').parse;
 
-var config = parse('postgres://someuser:somepassword@somehost:381/somedatabase')
+const config = parse('postgres://someuser:somepassword@somehost:381/somedatabase')
 ```
 
 The resulting config contains a subset of the following properties:
 
+* `user` - User with which to authenticate to the server
+* `password` - Corresponding password
 * `host` - Postgres server hostname or, for UNIX domain sockets, the socket filename
 * `port` - port on which to connect
-* `user` - User with which to authenticate to the server
-* `password` - Corresponding password
 * `database` - Database name within the server
 * `client_encoding` - string encoding the client will use
 * `ssl`, either a boolean or an object with properties
@@ -35,6 +32,27 @@
   * `ca`
 * any other query parameters (for example, `application_name`) are preserved intact.
 
+### ClientConfig Compatibility for TypeScript
+
+The pg-connection-string `ConnectionOptions` interface is not compatible with the `ClientConfig` interface that [pg.Client](https://node-postgres.com/apis/client) expects. To remedy this, use the `parseIntoClientConfig` function instead of `parse`:
+
+```ts
+import { ClientConfig } from 'pg';
+import { parseIntoClientConfig } from 'pg-connection-string';
+
+const config: ClientConfig = parseIntoClientConfig('postgres://someuser:somepassword@somehost:381/somedatabase')
+```
+
+You can also use `toClientConfig` to convert an existing `ConnectionOptions` interface into a `ClientConfig` interface:
+
+```ts
+import { ClientConfig } from 'pg';
+import { parse, toClientConfig } from 'pg-connection-string';
+
+const config = parse('postgres://someuser:somepassword@somehost:381/somedatabase')
+const clientConfig: ClientConfig = toClientConfig(config)
+```
+
 ## Connection Strings
 
 The short summary of acceptable URLs is:
@@ -66,12 +84,22 @@
  * `host=<host>` - sets `host` property, overriding the URL's host
  * `encoding=<encoding>` - sets the `client_encoding` property
  * `ssl=1`, `ssl=true`, `ssl=0`, `ssl=false` - sets `ssl` to true or false, accordingly
- * `sslmode=<sslmode>`
+ * `uselibpqcompat=true` - use libpq semantics
+ * `sslmode=<sslmode>` when `uselibpqcompat=true` is not set
    * `sslmode=disable` - sets `ssl` to false
    * `sslmode=no-verify` - sets `ssl` to `{ rejectUnauthorized: false }`
    * `sslmode=prefer`, `sslmode=require`, `sslmode=verify-ca`, `sslmode=verify-full` - sets `ssl` to true
+ * `sslmode=<sslmode>` when `uselibpqcompat=true`
+   * `sslmode=disable` - sets `ssl` to false
+   * `sslmode=prefer` - sets `ssl` to `{ rejectUnauthorized: false }`
+   * `sslmode=require` - sets `ssl` to `{ rejectUnauthorized: false }` unless `sslrootcert` is specified, in which case it behaves like `verify-ca`
+   * `sslmode=verify-ca` - sets `ssl` to `{ checkServerIdentity: no-op }` (verify CA, but not server identity). This verifies the presented certificate against the effective CA specified in sslrootcert.
+   * `sslmode=verify-full` - sets `ssl` to `{}` (verify CA and server identity)
  * `sslcert=<filename>` - reads data from the given file and includes the result as `ssl.cert`
  * `sslkey=<filename>` - reads data from the given file and includes the result as `ssl.key`
  * `sslrootcert=<filename>` - reads data from the given file and includes the result as `ssl.ca`
 
 A bare relative URL, such as `salesdata`, will indicate a database name while leaving other properties empty.
+
+> [!CAUTION]
+> Choosing an sslmode other than verify-full has serious security implications. Please read https://www.postgresql.org/docs/current/libpq-ssl.html#LIBPQ-SSL-SSLMODE-STATEMENTS to understand the trade-offs.
Index: node_modules/semver/ranges/min-version.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const SemVer = require('../classes/semver')\r\nconst Range = require('../classes/range')\r\nconst gt = require('../functions/gt')\r\n\r\nconst minVersion = (range, loose) => {\r\n  range = new Range(range, loose)\r\n\r\n  let minver = new SemVer('0.0.0')\r\n  if (range.test(minver)) {\r\n    return minver\r\n  }\r\n\r\n  minver = new SemVer('0.0.0-0')\r\n  if (range.test(minver)) {\r\n    return minver\r\n  }\r\n\r\n  minver = null\r\n  for (let i = 0; i < range.set.length; ++i) {\r\n    const comparators = range.set[i]\r\n\r\n    let setMin = null\r\n    comparators.forEach((comparator) => {\r\n      // Clone to avoid manipulating the comparator's semver object.\r\n      const compver = new SemVer(comparator.semver.version)\r\n      switch (comparator.operator) {\r\n        case '>':\r\n          if (compver.prerelease.length === 0) {\r\n            compver.patch++\r\n          } else {\r\n            compver.prerelease.push(0)\r\n          }\r\n          compver.raw = compver.format()\r\n          /* fallthrough */\r\n        case '':\r\n        case '>=':\r\n          if (!setMin || gt(compver, setMin)) {\r\n            setMin = compver\r\n          }\r\n          break\r\n        case '<':\r\n        case '<=':\r\n          /* Ignore maximum versions */\r\n          break\r\n        /* istanbul ignore next */\r\n        default:\r\n          throw new Error(`Unexpected operation: ${comparator.operator}`)\r\n      }\r\n    })\r\n    if (setMin && (!minver || gt(minver, setMin))) {\r\n      minver = setMin\r\n    }\r\n  }\r\n\r\n  if (minver && range.test(minver)) {\r\n    return minver\r\n  }\r\n\r\n  return null\r\n}\r\nmodule.exports = minVersion\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/ranges/min-version.js b/node_modules/semver/ranges/min-version.js
--- a/node_modules/semver/ranges/min-version.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/ranges/min-version.js	(date 1753913035317)
@@ -1,3 +1,5 @@
+'use strict'
+
 const SemVer = require('../classes/semver')
 const Range = require('../classes/range')
 const gt = require('../functions/gt')
Index: node_modules/pg-connection-string/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict'\r\n\r\n//Parse method copied from https://github.com/brianc/node-postgres\r\n//Copyright (c) 2010-2014 Brian Carlson (brian.m.carlson@gmail.com)\r\n//MIT License\r\n\r\n//parses a connection string\r\nfunction parse(str) {\r\n  //unix socket\r\n  if (str.charAt(0) === '/') {\r\n    const config = str.split(' ')\r\n    return { host: config[0], database: config[1] }\r\n  }\r\n\r\n  // Check for empty host in URL\r\n\r\n  const config = {}\r\n  let result\r\n  let dummyHost = false\r\n  if (/ |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(str)) {\r\n    // Ensure spaces are encoded as %20\r\n    str = encodeURI(str).replace(/\\%25(\\d\\d)/g, '%$1')\r\n  }\r\n\r\n  try {\r\n    result = new URL(str, 'postgres://base')\r\n  } catch (e) {\r\n    // The URL is invalid so try again with a dummy host\r\n    result = new URL(str.replace('@/', '@___DUMMY___/'), 'postgres://base')\r\n    dummyHost = true\r\n  }\r\n\r\n  // We'd like to use Object.fromEntries() here but Node.js 10 does not support it\r\n  for (const entry of result.searchParams.entries()) {\r\n    config[entry[0]] = entry[1]\r\n  }\r\n\r\n  config.user = config.user || decodeURIComponent(result.username)\r\n  config.password = config.password || decodeURIComponent(result.password)\r\n\r\n  if (result.protocol == 'socket:') {\r\n    config.host = decodeURI(result.pathname)\r\n    config.database = result.searchParams.get('db')\r\n    config.client_encoding = result.searchParams.get('encoding')\r\n    return config\r\n  }\r\n  const hostname = dummyHost ? '' : result.hostname\r\n  if (!config.host) {\r\n    // Only set the host if there is no equivalent query param.\r\n    config.host = decodeURIComponent(hostname)\r\n  } else if (hostname && /^%2f/i.test(hostname)) {\r\n    // Only prepend the hostname to the pathname if it is not a URL encoded Unix socket host.\r\n    result.pathname = hostname + result.pathname\r\n  }\r\n  if (!config.port) {\r\n    // Only set the port if there is no equivalent query param.\r\n    config.port = result.port\r\n  }\r\n\r\n  const pathname = result.pathname.slice(1) || null\r\n  config.database = pathname ? decodeURI(pathname) : null\r\n\r\n  if (config.ssl === 'true' || config.ssl === '1') {\r\n    config.ssl = true\r\n  }\r\n\r\n  if (config.ssl === '0') {\r\n    config.ssl = false\r\n  }\r\n\r\n  if (config.sslcert || config.sslkey || config.sslrootcert || config.sslmode) {\r\n    config.ssl = {}\r\n  }\r\n\r\n  // Only try to load fs if we expect to read from the disk\r\n  const fs = config.sslcert || config.sslkey || config.sslrootcert ? require('fs') : null\r\n\r\n  if (config.sslcert) {\r\n    config.ssl.cert = fs.readFileSync(config.sslcert).toString()\r\n  }\r\n\r\n  if (config.sslkey) {\r\n    config.ssl.key = fs.readFileSync(config.sslkey).toString()\r\n  }\r\n\r\n  if (config.sslrootcert) {\r\n    config.ssl.ca = fs.readFileSync(config.sslrootcert).toString()\r\n  }\r\n\r\n  switch (config.sslmode) {\r\n    case 'disable': {\r\n      config.ssl = false\r\n      break\r\n    }\r\n    case 'prefer':\r\n    case 'require':\r\n    case 'verify-ca':\r\n    case 'verify-full': {\r\n      break\r\n    }\r\n    case 'no-verify': {\r\n      config.ssl.rejectUnauthorized = false\r\n      break\r\n    }\r\n  }\r\n\r\n  return config\r\n}\r\n\r\nmodule.exports = parse\r\n\r\nparse.parse = parse\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-connection-string/index.js b/node_modules/pg-connection-string/index.js
--- a/node_modules/pg-connection-string/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-connection-string/index.js	(date 1753913035355)
@@ -5,7 +5,7 @@
 //MIT License
 
 //parses a connection string
-function parse(str) {
+function parse(str, options = {}) {
   //unix socket
   if (str.charAt(0) === '/') {
     const config = str.split(' ')
@@ -19,15 +19,20 @@
   let dummyHost = false
   if (/ |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(str)) {
     // Ensure spaces are encoded as %20
-    str = encodeURI(str).replace(/\%25(\d\d)/g, '%$1')
+    str = encodeURI(str).replace(/%25(\d\d)/g, '%$1')
   }
 
   try {
-    result = new URL(str, 'postgres://base')
-  } catch (e) {
-    // The URL is invalid so try again with a dummy host
-    result = new URL(str.replace('@/', '@___DUMMY___/'), 'postgres://base')
-    dummyHost = true
+    try {
+      result = new URL(str, 'postgres://base')
+    } catch (e) {
+      // The URL is invalid so try again with a dummy host
+      result = new URL(str.replace('@/', '@___DUMMY___/'), 'postgres://base')
+      dummyHost = true
+    }
+  } catch (err) {
+    // Remove the input from the error message to avoid leaking sensitive information
+    err.input && (err.input = '*****REDACTED*****')
   }
 
   // We'd like to use Object.fromEntries() here but Node.js 10 does not support it
@@ -87,26 +92,122 @@
     config.ssl.ca = fs.readFileSync(config.sslrootcert).toString()
   }
 
-  switch (config.sslmode) {
-    case 'disable': {
-      config.ssl = false
-      break
+  if (options.useLibpqCompat && config.uselibpqcompat) {
+    throw new Error('Both useLibpqCompat and uselibpqcompat are set. Please use only one of them.')
+  }
+
+  if (config.uselibpqcompat === 'true' || options.useLibpqCompat) {
+    switch (config.sslmode) {
+      case 'disable': {
+        config.ssl = false
+        break
+      }
+      case 'prefer': {
+        config.ssl.rejectUnauthorized = false
+        break
+      }
+      case 'require': {
+        if (config.sslrootcert) {
+          // If a root CA is specified, behavior of `sslmode=require` will be the same as that of `verify-ca`
+          config.ssl.checkServerIdentity = function () {}
+        } else {
+          config.ssl.rejectUnauthorized = false
+        }
+        break
+      }
+      case 'verify-ca': {
+        if (!config.ssl.ca) {
+          throw new Error(
+            'SECURITY WARNING: Using sslmode=verify-ca requires specifying a CA with sslrootcert. If a public CA is used, verify-ca allows connections to a server that somebody else may have registered with the CA, making you vulnerable to Man-in-the-Middle attacks. Either specify a custom CA certificate with sslrootcert parameter or use sslmode=verify-full for proper security.'
+          )
+        }
+        config.ssl.checkServerIdentity = function () {}
+        break
+      }
+      case 'verify-full': {
+        break
+      }
     }
-    case 'prefer':
-    case 'require':
-    case 'verify-ca':
-    case 'verify-full': {
-      break
-    }
-    case 'no-verify': {
-      config.ssl.rejectUnauthorized = false
-      break
+  } else {
+    switch (config.sslmode) {
+      case 'disable': {
+        config.ssl = false
+        break
+      }
+      case 'prefer':
+      case 'require':
+      case 'verify-ca':
+      case 'verify-full': {
+        break
+      }
+      case 'no-verify': {
+        config.ssl.rejectUnauthorized = false
+        break
+      }
     }
   }
 
   return config
 }
 
+// convert pg-connection-string ssl config to a ClientConfig.ConnectionOptions
+function toConnectionOptions(sslConfig) {
+  const connectionOptions = Object.entries(sslConfig).reduce((c, [key, value]) => {
+    // we explicitly check for undefined and null instead of `if (value)` because some
+    // options accept falsy values. Example: `ssl.rejectUnauthorized = false`
+    if (value !== undefined && value !== null) {
+      c[key] = value
+    }
+
+    return c
+  }, {})
+
+  return connectionOptions
+}
+
+// convert pg-connection-string config to a ClientConfig
+function toClientConfig(config) {
+  const poolConfig = Object.entries(config).reduce((c, [key, value]) => {
+    if (key === 'ssl') {
+      const sslConfig = value
+
+      if (typeof sslConfig === 'boolean') {
+        c[key] = sslConfig
+      }
+
+      if (typeof sslConfig === 'object') {
+        c[key] = toConnectionOptions(sslConfig)
+      }
+    } else if (value !== undefined && value !== null) {
+      if (key === 'port') {
+        // when port is not specified, it is converted into an empty string
+        // we want to avoid NaN or empty string as a values in ClientConfig
+        if (value !== '') {
+          const v = parseInt(value, 10)
+          if (isNaN(v)) {
+            throw new Error(`Invalid ${key}: ${value}`)
+          }
+
+          c[key] = v
+        }
+      } else {
+        c[key] = value
+      }
+    }
+
+    return c
+  }, {})
+
+  return poolConfig
+}
+
+// parses a connection string into ClientConfig
+function parseIntoClientConfig(str) {
+  return toClientConfig(parse(str))
+}
+
 module.exports = parse
 
 parse.parse = parse
+parse.toClientConfig = toClientConfig
+parse.parseIntoClientConfig = parseIntoClientConfig
Index: node_modules/semver/ranges/min-satisfying.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const SemVer = require('../classes/semver')\r\nconst Range = require('../classes/range')\r\nconst minSatisfying = (versions, range, options) => {\r\n  let min = null\r\n  let minSV = null\r\n  let rangeObj = null\r\n  try {\r\n    rangeObj = new Range(range, options)\r\n  } catch (er) {\r\n    return null\r\n  }\r\n  versions.forEach((v) => {\r\n    if (rangeObj.test(v)) {\r\n      // satisfies(v, range, options)\r\n      if (!min || minSV.compare(v) === 1) {\r\n        // compare(min, v, true)\r\n        min = v\r\n        minSV = new SemVer(min, options)\r\n      }\r\n    }\r\n  })\r\n  return min\r\n}\r\nmodule.exports = minSatisfying\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/ranges/min-satisfying.js b/node_modules/semver/ranges/min-satisfying.js
--- a/node_modules/semver/ranges/min-satisfying.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/ranges/min-satisfying.js	(date 1753913035316)
@@ -1,3 +1,5 @@
+'use strict'
+
 const SemVer = require('../classes/semver')
 const Range = require('../classes/range')
 const minSatisfying = (versions, range, options) => {
Index: node_modules/semver/ranges/max-satisfying.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const SemVer = require('../classes/semver')\r\nconst Range = require('../classes/range')\r\n\r\nconst maxSatisfying = (versions, range, options) => {\r\n  let max = null\r\n  let maxSV = null\r\n  let rangeObj = null\r\n  try {\r\n    rangeObj = new Range(range, options)\r\n  } catch (er) {\r\n    return null\r\n  }\r\n  versions.forEach((v) => {\r\n    if (rangeObj.test(v)) {\r\n      // satisfies(v, range, options)\r\n      if (!max || maxSV.compare(v) === -1) {\r\n        // compare(max, v, true)\r\n        max = v\r\n        maxSV = new SemVer(max, options)\r\n      }\r\n    }\r\n  })\r\n  return max\r\n}\r\nmodule.exports = maxSatisfying\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/ranges/max-satisfying.js b/node_modules/semver/ranges/max-satisfying.js
--- a/node_modules/semver/ranges/max-satisfying.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/ranges/max-satisfying.js	(date 1753913035315)
@@ -1,3 +1,5 @@
+'use strict'
+
 const SemVer = require('../classes/semver')
 const Range = require('../classes/range')
 
Index: node_modules/semver/ranges/outside.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const SemVer = require('../classes/semver')\r\nconst Comparator = require('../classes/comparator')\r\nconst { ANY } = Comparator\r\nconst Range = require('../classes/range')\r\nconst satisfies = require('../functions/satisfies')\r\nconst gt = require('../functions/gt')\r\nconst lt = require('../functions/lt')\r\nconst lte = require('../functions/lte')\r\nconst gte = require('../functions/gte')\r\n\r\nconst outside = (version, range, hilo, options) => {\r\n  version = new SemVer(version, options)\r\n  range = new Range(range, options)\r\n\r\n  let gtfn, ltefn, ltfn, comp, ecomp\r\n  switch (hilo) {\r\n    case '>':\r\n      gtfn = gt\r\n      ltefn = lte\r\n      ltfn = lt\r\n      comp = '>'\r\n      ecomp = '>='\r\n      break\r\n    case '<':\r\n      gtfn = lt\r\n      ltefn = gte\r\n      ltfn = gt\r\n      comp = '<'\r\n      ecomp = '<='\r\n      break\r\n    default:\r\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\r\n  }\r\n\r\n  // If it satisfies the range it is not outside\r\n  if (satisfies(version, range, options)) {\r\n    return false\r\n  }\r\n\r\n  // From now on, variable terms are as if we're in \"gtr\" mode.\r\n  // but note that everything is flipped for the \"ltr\" function.\r\n\r\n  for (let i = 0; i < range.set.length; ++i) {\r\n    const comparators = range.set[i]\r\n\r\n    let high = null\r\n    let low = null\r\n\r\n    comparators.forEach((comparator) => {\r\n      if (comparator.semver === ANY) {\r\n        comparator = new Comparator('>=0.0.0')\r\n      }\r\n      high = high || comparator\r\n      low = low || comparator\r\n      if (gtfn(comparator.semver, high.semver, options)) {\r\n        high = comparator\r\n      } else if (ltfn(comparator.semver, low.semver, options)) {\r\n        low = comparator\r\n      }\r\n    })\r\n\r\n    // If the edge version comparator has a operator then our version\r\n    // isn't outside it\r\n    if (high.operator === comp || high.operator === ecomp) {\r\n      return false\r\n    }\r\n\r\n    // If the lowest version comparator has an operator and our version\r\n    // is less than it then it isn't higher than the range\r\n    if ((!low.operator || low.operator === comp) &&\r\n        ltefn(version, low.semver)) {\r\n      return false\r\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nmodule.exports = outside\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/ranges/outside.js b/node_modules/semver/ranges/outside.js
--- a/node_modules/semver/ranges/outside.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/ranges/outside.js	(date 1753913035319)
@@ -1,3 +1,5 @@
+'use strict'
+
 const SemVer = require('../classes/semver')
 const Comparator = require('../classes/comparator')
 const { ANY } = Comparator
Index: node_modules/semver/ranges/gtr.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Determine if version is greater than all the versions possible in the range.\r\nconst outside = require('./outside')\r\nconst gtr = (version, range, options) => outside(version, range, '>', options)\r\nmodule.exports = gtr\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/ranges/gtr.js b/node_modules/semver/ranges/gtr.js
--- a/node_modules/semver/ranges/gtr.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/ranges/gtr.js	(date 1753913035305)
@@ -1,3 +1,5 @@
+'use strict'
+
 // Determine if version is greater than all the versions possible in the range.
 const outside = require('./outside')
 const gtr = (version, range, options) => outside(version, range, '>', options)
Index: node_modules/semver/ranges/valid.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const Range = require('../classes/range')\r\nconst validRange = (range, options) => {\r\n  try {\r\n    // Return '*' instead of '' so that truthiness works.\r\n    // This will throw if it's invalid anyway\r\n    return new Range(range, options).range || '*'\r\n  } catch (er) {\r\n    return null\r\n  }\r\n}\r\nmodule.exports = validRange\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/ranges/valid.js b/node_modules/semver/ranges/valid.js
--- a/node_modules/semver/ranges/valid.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/ranges/valid.js	(date 1753913035335)
@@ -1,3 +1,5 @@
+'use strict'
+
 const Range = require('../classes/range')
 const validRange = (range, options) => {
   try {
Index: node_modules/semver/ranges/ltr.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const outside = require('./outside')\r\n// Determine if version is less than all the versions possible in the range\r\nconst ltr = (version, range, options) => outside(version, range, '<', options)\r\nmodule.exports = ltr\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/ranges/ltr.js b/node_modules/semver/ranges/ltr.js
--- a/node_modules/semver/ranges/ltr.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/ranges/ltr.js	(date 1753913035313)
@@ -1,3 +1,5 @@
+'use strict'
+
 const outside = require('./outside')
 // Determine if version is less than all the versions possible in the range
 const ltr = (version, range, options) => outside(version, range, '<', options)
Index: node_modules/semver/ranges/subset.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const Range = require('../classes/range.js')\r\nconst Comparator = require('../classes/comparator.js')\r\nconst { ANY } = Comparator\r\nconst satisfies = require('../functions/satisfies.js')\r\nconst compare = require('../functions/compare.js')\r\n\r\n// Complex range `r1 || r2 || ...` is a subset of `R1 || R2 || ...` iff:\r\n// - Every simple range `r1, r2, ...` is a null set, OR\r\n// - Every simple range `r1, r2, ...` which is not a null set is a subset of\r\n//   some `R1, R2, ...`\r\n//\r\n// Simple range `c1 c2 ...` is a subset of simple range `C1 C2 ...` iff:\r\n// - If c is only the ANY comparator\r\n//   - If C is only the ANY comparator, return true\r\n//   - Else if in prerelease mode, return false\r\n//   - else replace c with `[>=0.0.0]`\r\n// - If C is only the ANY comparator\r\n//   - if in prerelease mode, return true\r\n//   - else replace C with `[>=0.0.0]`\r\n// - Let EQ be the set of = comparators in c\r\n// - If EQ is more than one, return true (null set)\r\n// - Let GT be the highest > or >= comparator in c\r\n// - Let LT be the lowest < or <= comparator in c\r\n// - If GT and LT, and GT.semver > LT.semver, return true (null set)\r\n// - If any C is a = range, and GT or LT are set, return false\r\n// - If EQ\r\n//   - If GT, and EQ does not satisfy GT, return true (null set)\r\n//   - If LT, and EQ does not satisfy LT, return true (null set)\r\n//   - If EQ satisfies every C, return true\r\n//   - Else return false\r\n// - If GT\r\n//   - If GT.semver is lower than any > or >= comp in C, return false\r\n//   - If GT is >=, and GT.semver does not satisfy every C, return false\r\n//   - If GT.semver has a prerelease, and not in prerelease mode\r\n//     - If no C has a prerelease and the GT.semver tuple, return false\r\n// - If LT\r\n//   - If LT.semver is greater than any < or <= comp in C, return false\r\n//   - If LT is <=, and LT.semver does not satisfy every C, return false\r\n//   - If GT.semver has a prerelease, and not in prerelease mode\r\n//     - If no C has a prerelease and the LT.semver tuple, return false\r\n// - Else return true\r\n\r\nconst subset = (sub, dom, options = {}) => {\r\n  if (sub === dom) {\r\n    return true\r\n  }\r\n\r\n  sub = new Range(sub, options)\r\n  dom = new Range(dom, options)\r\n  let sawNonNull = false\r\n\r\n  OUTER: for (const simpleSub of sub.set) {\r\n    for (const simpleDom of dom.set) {\r\n      const isSub = simpleSubset(simpleSub, simpleDom, options)\r\n      sawNonNull = sawNonNull || isSub !== null\r\n      if (isSub) {\r\n        continue OUTER\r\n      }\r\n    }\r\n    // the null set is a subset of everything, but null simple ranges in\r\n    // a complex range should be ignored.  so if we saw a non-null range,\r\n    // then we know this isn't a subset, but if EVERY simple range was null,\r\n    // then it is a subset.\r\n    if (sawNonNull) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\nconst minimumVersionWithPreRelease = [new Comparator('>=0.0.0-0')]\r\nconst minimumVersion = [new Comparator('>=0.0.0')]\r\n\r\nconst simpleSubset = (sub, dom, options) => {\r\n  if (sub === dom) {\r\n    return true\r\n  }\r\n\r\n  if (sub.length === 1 && sub[0].semver === ANY) {\r\n    if (dom.length === 1 && dom[0].semver === ANY) {\r\n      return true\r\n    } else if (options.includePrerelease) {\r\n      sub = minimumVersionWithPreRelease\r\n    } else {\r\n      sub = minimumVersion\r\n    }\r\n  }\r\n\r\n  if (dom.length === 1 && dom[0].semver === ANY) {\r\n    if (options.includePrerelease) {\r\n      return true\r\n    } else {\r\n      dom = minimumVersion\r\n    }\r\n  }\r\n\r\n  const eqSet = new Set()\r\n  let gt, lt\r\n  for (const c of sub) {\r\n    if (c.operator === '>' || c.operator === '>=') {\r\n      gt = higherGT(gt, c, options)\r\n    } else if (c.operator === '<' || c.operator === '<=') {\r\n      lt = lowerLT(lt, c, options)\r\n    } else {\r\n      eqSet.add(c.semver)\r\n    }\r\n  }\r\n\r\n  if (eqSet.size > 1) {\r\n    return null\r\n  }\r\n\r\n  let gtltComp\r\n  if (gt && lt) {\r\n    gtltComp = compare(gt.semver, lt.semver, options)\r\n    if (gtltComp > 0) {\r\n      return null\r\n    } else if (gtltComp === 0 && (gt.operator !== '>=' || lt.operator !== '<=')) {\r\n      return null\r\n    }\r\n  }\r\n\r\n  // will iterate one or zero times\r\n  for (const eq of eqSet) {\r\n    if (gt && !satisfies(eq, String(gt), options)) {\r\n      return null\r\n    }\r\n\r\n    if (lt && !satisfies(eq, String(lt), options)) {\r\n      return null\r\n    }\r\n\r\n    for (const c of dom) {\r\n      if (!satisfies(eq, String(c), options)) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  let higher, lower\r\n  let hasDomLT, hasDomGT\r\n  // if the subset has a prerelease, we need a comparator in the superset\r\n  // with the same tuple and a prerelease, or it's not a subset\r\n  let needDomLTPre = lt &&\r\n    !options.includePrerelease &&\r\n    lt.semver.prerelease.length ? lt.semver : false\r\n  let needDomGTPre = gt &&\r\n    !options.includePrerelease &&\r\n    gt.semver.prerelease.length ? gt.semver : false\r\n  // exception: <1.2.3-0 is the same as <1.2.3\r\n  if (needDomLTPre && needDomLTPre.prerelease.length === 1 &&\r\n      lt.operator === '<' && needDomLTPre.prerelease[0] === 0) {\r\n    needDomLTPre = false\r\n  }\r\n\r\n  for (const c of dom) {\r\n    hasDomGT = hasDomGT || c.operator === '>' || c.operator === '>='\r\n    hasDomLT = hasDomLT || c.operator === '<' || c.operator === '<='\r\n    if (gt) {\r\n      if (needDomGTPre) {\r\n        if (c.semver.prerelease && c.semver.prerelease.length &&\r\n            c.semver.major === needDomGTPre.major &&\r\n            c.semver.minor === needDomGTPre.minor &&\r\n            c.semver.patch === needDomGTPre.patch) {\r\n          needDomGTPre = false\r\n        }\r\n      }\r\n      if (c.operator === '>' || c.operator === '>=') {\r\n        higher = higherGT(gt, c, options)\r\n        if (higher === c && higher !== gt) {\r\n          return false\r\n        }\r\n      } else if (gt.operator === '>=' && !satisfies(gt.semver, String(c), options)) {\r\n        return false\r\n      }\r\n    }\r\n    if (lt) {\r\n      if (needDomLTPre) {\r\n        if (c.semver.prerelease && c.semver.prerelease.length &&\r\n            c.semver.major === needDomLTPre.major &&\r\n            c.semver.minor === needDomLTPre.minor &&\r\n            c.semver.patch === needDomLTPre.patch) {\r\n          needDomLTPre = false\r\n        }\r\n      }\r\n      if (c.operator === '<' || c.operator === '<=') {\r\n        lower = lowerLT(lt, c, options)\r\n        if (lower === c && lower !== lt) {\r\n          return false\r\n        }\r\n      } else if (lt.operator === '<=' && !satisfies(lt.semver, String(c), options)) {\r\n        return false\r\n      }\r\n    }\r\n    if (!c.operator && (lt || gt) && gtltComp !== 0) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  // if there was a < or >, and nothing in the dom, then must be false\r\n  // UNLESS it was limited by another range in the other direction.\r\n  // Eg, >1.0.0 <1.0.1 is still a subset of <2.0.0\r\n  if (gt && hasDomLT && !lt && gtltComp !== 0) {\r\n    return false\r\n  }\r\n\r\n  if (lt && hasDomGT && !gt && gtltComp !== 0) {\r\n    return false\r\n  }\r\n\r\n  // we needed a prerelease range in a specific tuple, but didn't get one\r\n  // then this isn't a subset.  eg >=1.2.3-pre is not a subset of >=1.0.0,\r\n  // because it includes prereleases in the 1.2.3 tuple\r\n  if (needDomGTPre || needDomLTPre) {\r\n    return false\r\n  }\r\n\r\n  return true\r\n}\r\n\r\n// >=1.2.3 is lower than >1.2.3\r\nconst higherGT = (a, b, options) => {\r\n  if (!a) {\r\n    return b\r\n  }\r\n  const comp = compare(a.semver, b.semver, options)\r\n  return comp > 0 ? a\r\n    : comp < 0 ? b\r\n    : b.operator === '>' && a.operator === '>=' ? b\r\n    : a\r\n}\r\n\r\n// <=1.2.3 is higher than <1.2.3\r\nconst lowerLT = (a, b, options) => {\r\n  if (!a) {\r\n    return b\r\n  }\r\n  const comp = compare(a.semver, b.semver, options)\r\n  return comp < 0 ? a\r\n    : comp > 0 ? b\r\n    : b.operator === '<' && a.operator === '<=' ? b\r\n    : a\r\n}\r\n\r\nmodule.exports = subset\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/ranges/subset.js b/node_modules/semver/ranges/subset.js
--- a/node_modules/semver/ranges/subset.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/ranges/subset.js	(date 1753913035333)
@@ -1,3 +1,5 @@
+'use strict'
+
 const Range = require('../classes/range.js')
 const Comparator = require('../classes/comparator.js')
 const { ANY } = Comparator
Index: node_modules/semver/ranges/simplify.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// given a set of versions and a range, create a \"simplified\" range\r\n// that includes the same versions that the original range does\r\n// If the original range is shorter than the simplified one, return that.\r\nconst satisfies = require('../functions/satisfies.js')\r\nconst compare = require('../functions/compare.js')\r\nmodule.exports = (versions, range, options) => {\r\n  const set = []\r\n  let first = null\r\n  let prev = null\r\n  const v = versions.sort((a, b) => compare(a, b, options))\r\n  for (const version of v) {\r\n    const included = satisfies(version, range, options)\r\n    if (included) {\r\n      prev = version\r\n      if (!first) {\r\n        first = version\r\n      }\r\n    } else {\r\n      if (prev) {\r\n        set.push([first, prev])\r\n      }\r\n      prev = null\r\n      first = null\r\n    }\r\n  }\r\n  if (first) {\r\n    set.push([first, null])\r\n  }\r\n\r\n  const ranges = []\r\n  for (const [min, max] of set) {\r\n    if (min === max) {\r\n      ranges.push(min)\r\n    } else if (!max && min === v[0]) {\r\n      ranges.push('*')\r\n    } else if (!max) {\r\n      ranges.push(`>=${min}`)\r\n    } else if (min === v[0]) {\r\n      ranges.push(`<=${max}`)\r\n    } else {\r\n      ranges.push(`${min} - ${max}`)\r\n    }\r\n  }\r\n  const simplified = ranges.join(' || ')\r\n  const original = typeof range.raw === 'string' ? range.raw : String(range)\r\n  return simplified.length < original.length ? simplified : range\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/ranges/simplify.js b/node_modules/semver/ranges/simplify.js
--- a/node_modules/semver/ranges/simplify.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/ranges/simplify.js	(date 1753913035331)
@@ -1,3 +1,5 @@
+'use strict'
+
 // given a set of versions and a range, create a "simplified" range
 // that includes the same versions that the original range does
 // If the original range is shorter than the simplified one, return that.
Index: node_modules/semver/classes/comparator.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const ANY = Symbol('SemVer ANY')\r\n// hoisted class for cyclic dependency\r\nclass Comparator {\r\n  static get ANY () {\r\n    return ANY\r\n  }\r\n\r\n  constructor (comp, options) {\r\n    options = parseOptions(options)\r\n\r\n    if (comp instanceof Comparator) {\r\n      if (comp.loose === !!options.loose) {\r\n        return comp\r\n      } else {\r\n        comp = comp.value\r\n      }\r\n    }\r\n\r\n    comp = comp.trim().split(/\\s+/).join(' ')\r\n    debug('comparator', comp, options)\r\n    this.options = options\r\n    this.loose = !!options.loose\r\n    this.parse(comp)\r\n\r\n    if (this.semver === ANY) {\r\n      this.value = ''\r\n    } else {\r\n      this.value = this.operator + this.semver.version\r\n    }\r\n\r\n    debug('comp', this)\r\n  }\r\n\r\n  parse (comp) {\r\n    const r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\r\n    const m = comp.match(r)\r\n\r\n    if (!m) {\r\n      throw new TypeError(`Invalid comparator: ${comp}`)\r\n    }\r\n\r\n    this.operator = m[1] !== undefined ? m[1] : ''\r\n    if (this.operator === '=') {\r\n      this.operator = ''\r\n    }\r\n\r\n    // if it literally is just '>' or '' then allow anything.\r\n    if (!m[2]) {\r\n      this.semver = ANY\r\n    } else {\r\n      this.semver = new SemVer(m[2], this.options.loose)\r\n    }\r\n  }\r\n\r\n  toString () {\r\n    return this.value\r\n  }\r\n\r\n  test (version) {\r\n    debug('Comparator.test', version, this.options.loose)\r\n\r\n    if (this.semver === ANY || version === ANY) {\r\n      return true\r\n    }\r\n\r\n    if (typeof version === 'string') {\r\n      try {\r\n        version = new SemVer(version, this.options)\r\n      } catch (er) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    return cmp(version, this.operator, this.semver, this.options)\r\n  }\r\n\r\n  intersects (comp, options) {\r\n    if (!(comp instanceof Comparator)) {\r\n      throw new TypeError('a Comparator is required')\r\n    }\r\n\r\n    if (this.operator === '') {\r\n      if (this.value === '') {\r\n        return true\r\n      }\r\n      return new Range(comp.value, options).test(this.value)\r\n    } else if (comp.operator === '') {\r\n      if (comp.value === '') {\r\n        return true\r\n      }\r\n      return new Range(this.value, options).test(comp.semver)\r\n    }\r\n\r\n    options = parseOptions(options)\r\n\r\n    // Special cases where nothing can possibly be lower\r\n    if (options.includePrerelease &&\r\n      (this.value === '<0.0.0-0' || comp.value === '<0.0.0-0')) {\r\n      return false\r\n    }\r\n    if (!options.includePrerelease &&\r\n      (this.value.startsWith('<0.0.0') || comp.value.startsWith('<0.0.0'))) {\r\n      return false\r\n    }\r\n\r\n    // Same direction increasing (> or >=)\r\n    if (this.operator.startsWith('>') && comp.operator.startsWith('>')) {\r\n      return true\r\n    }\r\n    // Same direction decreasing (< or <=)\r\n    if (this.operator.startsWith('<') && comp.operator.startsWith('<')) {\r\n      return true\r\n    }\r\n    // same SemVer and both sides are inclusive (<= or >=)\r\n    if (\r\n      (this.semver.version === comp.semver.version) &&\r\n      this.operator.includes('=') && comp.operator.includes('=')) {\r\n      return true\r\n    }\r\n    // opposite directions less than\r\n    if (cmp(this.semver, '<', comp.semver, options) &&\r\n      this.operator.startsWith('>') && comp.operator.startsWith('<')) {\r\n      return true\r\n    }\r\n    // opposite directions greater than\r\n    if (cmp(this.semver, '>', comp.semver, options) &&\r\n      this.operator.startsWith('<') && comp.operator.startsWith('>')) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n}\r\n\r\nmodule.exports = Comparator\r\n\r\nconst parseOptions = require('../internal/parse-options')\r\nconst { safeRe: re, t } = require('../internal/re')\r\nconst cmp = require('../functions/cmp')\r\nconst debug = require('../internal/debug')\r\nconst SemVer = require('./semver')\r\nconst Range = require('./range')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/classes/comparator.js b/node_modules/semver/classes/comparator.js
--- a/node_modules/semver/classes/comparator.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/classes/comparator.js	(date 1753913035294)
@@ -1,3 +1,5 @@
+'use strict'
+
 const ANY = Symbol('SemVer ANY')
 // hoisted class for cyclic dependency
 class Comparator {
Index: node_modules/semver/classes/semver.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const debug = require('../internal/debug')\r\nconst { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')\r\nconst { safeRe: re, t } = require('../internal/re')\r\n\r\nconst parseOptions = require('../internal/parse-options')\r\nconst { compareIdentifiers } = require('../internal/identifiers')\r\nclass SemVer {\r\n  constructor (version, options) {\r\n    options = parseOptions(options)\r\n\r\n    if (version instanceof SemVer) {\r\n      if (version.loose === !!options.loose &&\r\n          version.includePrerelease === !!options.includePrerelease) {\r\n        return version\r\n      } else {\r\n        version = version.version\r\n      }\r\n    } else if (typeof version !== 'string') {\r\n      throw new TypeError(`Invalid version. Must be a string. Got type \"${typeof version}\".`)\r\n    }\r\n\r\n    if (version.length > MAX_LENGTH) {\r\n      throw new TypeError(\r\n        `version is longer than ${MAX_LENGTH} characters`\r\n      )\r\n    }\r\n\r\n    debug('SemVer', version, options)\r\n    this.options = options\r\n    this.loose = !!options.loose\r\n    // this isn't actually relevant for versions, but keep it so that we\r\n    // don't run into trouble passing this.options around.\r\n    this.includePrerelease = !!options.includePrerelease\r\n\r\n    const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\r\n\r\n    if (!m) {\r\n      throw new TypeError(`Invalid Version: ${version}`)\r\n    }\r\n\r\n    this.raw = version\r\n\r\n    // these are actually numbers\r\n    this.major = +m[1]\r\n    this.minor = +m[2]\r\n    this.patch = +m[3]\r\n\r\n    if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\r\n      throw new TypeError('Invalid major version')\r\n    }\r\n\r\n    if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\r\n      throw new TypeError('Invalid minor version')\r\n    }\r\n\r\n    if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\r\n      throw new TypeError('Invalid patch version')\r\n    }\r\n\r\n    // numberify any prerelease numeric ids\r\n    if (!m[4]) {\r\n      this.prerelease = []\r\n    } else {\r\n      this.prerelease = m[4].split('.').map((id) => {\r\n        if (/^[0-9]+$/.test(id)) {\r\n          const num = +id\r\n          if (num >= 0 && num < MAX_SAFE_INTEGER) {\r\n            return num\r\n          }\r\n        }\r\n        return id\r\n      })\r\n    }\r\n\r\n    this.build = m[5] ? m[5].split('.') : []\r\n    this.format()\r\n  }\r\n\r\n  format () {\r\n    this.version = `${this.major}.${this.minor}.${this.patch}`\r\n    if (this.prerelease.length) {\r\n      this.version += `-${this.prerelease.join('.')}`\r\n    }\r\n    return this.version\r\n  }\r\n\r\n  toString () {\r\n    return this.version\r\n  }\r\n\r\n  compare (other) {\r\n    debug('SemVer.compare', this.version, this.options, other)\r\n    if (!(other instanceof SemVer)) {\r\n      if (typeof other === 'string' && other === this.version) {\r\n        return 0\r\n      }\r\n      other = new SemVer(other, this.options)\r\n    }\r\n\r\n    if (other.version === this.version) {\r\n      return 0\r\n    }\r\n\r\n    return this.compareMain(other) || this.comparePre(other)\r\n  }\r\n\r\n  compareMain (other) {\r\n    if (!(other instanceof SemVer)) {\r\n      other = new SemVer(other, this.options)\r\n    }\r\n\r\n    return (\r\n      compareIdentifiers(this.major, other.major) ||\r\n      compareIdentifiers(this.minor, other.minor) ||\r\n      compareIdentifiers(this.patch, other.patch)\r\n    )\r\n  }\r\n\r\n  comparePre (other) {\r\n    if (!(other instanceof SemVer)) {\r\n      other = new SemVer(other, this.options)\r\n    }\r\n\r\n    // NOT having a prerelease is > having one\r\n    if (this.prerelease.length && !other.prerelease.length) {\r\n      return -1\r\n    } else if (!this.prerelease.length && other.prerelease.length) {\r\n      return 1\r\n    } else if (!this.prerelease.length && !other.prerelease.length) {\r\n      return 0\r\n    }\r\n\r\n    let i = 0\r\n    do {\r\n      const a = this.prerelease[i]\r\n      const b = other.prerelease[i]\r\n      debug('prerelease compare', i, a, b)\r\n      if (a === undefined && b === undefined) {\r\n        return 0\r\n      } else if (b === undefined) {\r\n        return 1\r\n      } else if (a === undefined) {\r\n        return -1\r\n      } else if (a === b) {\r\n        continue\r\n      } else {\r\n        return compareIdentifiers(a, b)\r\n      }\r\n    } while (++i)\r\n  }\r\n\r\n  compareBuild (other) {\r\n    if (!(other instanceof SemVer)) {\r\n      other = new SemVer(other, this.options)\r\n    }\r\n\r\n    let i = 0\r\n    do {\r\n      const a = this.build[i]\r\n      const b = other.build[i]\r\n      debug('build compare', i, a, b)\r\n      if (a === undefined && b === undefined) {\r\n        return 0\r\n      } else if (b === undefined) {\r\n        return 1\r\n      } else if (a === undefined) {\r\n        return -1\r\n      } else if (a === b) {\r\n        continue\r\n      } else {\r\n        return compareIdentifiers(a, b)\r\n      }\r\n    } while (++i)\r\n  }\r\n\r\n  // preminor will bump the version up to the next minor release, and immediately\r\n  // down to pre-release. premajor and prepatch work the same way.\r\n  inc (release, identifier, identifierBase) {\r\n    switch (release) {\r\n      case 'premajor':\r\n        this.prerelease.length = 0\r\n        this.patch = 0\r\n        this.minor = 0\r\n        this.major++\r\n        this.inc('pre', identifier, identifierBase)\r\n        break\r\n      case 'preminor':\r\n        this.prerelease.length = 0\r\n        this.patch = 0\r\n        this.minor++\r\n        this.inc('pre', identifier, identifierBase)\r\n        break\r\n      case 'prepatch':\r\n        // If this is already a prerelease, it will bump to the next version\r\n        // drop any prereleases that might already exist, since they are not\r\n        // relevant at this point.\r\n        this.prerelease.length = 0\r\n        this.inc('patch', identifier, identifierBase)\r\n        this.inc('pre', identifier, identifierBase)\r\n        break\r\n      // If the input is a non-prerelease version, this acts the same as\r\n      // prepatch.\r\n      case 'prerelease':\r\n        if (this.prerelease.length === 0) {\r\n          this.inc('patch', identifier, identifierBase)\r\n        }\r\n        this.inc('pre', identifier, identifierBase)\r\n        break\r\n\r\n      case 'major':\r\n        // If this is a pre-major version, bump up to the same major version.\r\n        // Otherwise increment major.\r\n        // 1.0.0-5 bumps to 1.0.0\r\n        // 1.1.0 bumps to 2.0.0\r\n        if (\r\n          this.minor !== 0 ||\r\n          this.patch !== 0 ||\r\n          this.prerelease.length === 0\r\n        ) {\r\n          this.major++\r\n        }\r\n        this.minor = 0\r\n        this.patch = 0\r\n        this.prerelease = []\r\n        break\r\n      case 'minor':\r\n        // If this is a pre-minor version, bump up to the same minor version.\r\n        // Otherwise increment minor.\r\n        // 1.2.0-5 bumps to 1.2.0\r\n        // 1.2.1 bumps to 1.3.0\r\n        if (this.patch !== 0 || this.prerelease.length === 0) {\r\n          this.minor++\r\n        }\r\n        this.patch = 0\r\n        this.prerelease = []\r\n        break\r\n      case 'patch':\r\n        // If this is not a pre-release version, it will increment the patch.\r\n        // If it is a pre-release it will bump up to the same patch version.\r\n        // 1.2.0-5 patches to 1.2.0\r\n        // 1.2.0 patches to 1.2.1\r\n        if (this.prerelease.length === 0) {\r\n          this.patch++\r\n        }\r\n        this.prerelease = []\r\n        break\r\n      // This probably shouldn't be used publicly.\r\n      // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\r\n      case 'pre': {\r\n        const base = Number(identifierBase) ? 1 : 0\r\n\r\n        if (!identifier && identifierBase === false) {\r\n          throw new Error('invalid increment argument: identifier is empty')\r\n        }\r\n\r\n        if (this.prerelease.length === 0) {\r\n          this.prerelease = [base]\r\n        } else {\r\n          let i = this.prerelease.length\r\n          while (--i >= 0) {\r\n            if (typeof this.prerelease[i] === 'number') {\r\n              this.prerelease[i]++\r\n              i = -2\r\n            }\r\n          }\r\n          if (i === -1) {\r\n            // didn't increment anything\r\n            if (identifier === this.prerelease.join('.') && identifierBase === false) {\r\n              throw new Error('invalid increment argument: identifier already exists')\r\n            }\r\n            this.prerelease.push(base)\r\n          }\r\n        }\r\n        if (identifier) {\r\n          // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\r\n          // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\r\n          let prerelease = [identifier, base]\r\n          if (identifierBase === false) {\r\n            prerelease = [identifier]\r\n          }\r\n          if (compareIdentifiers(this.prerelease[0], identifier) === 0) {\r\n            if (isNaN(this.prerelease[1])) {\r\n              this.prerelease = prerelease\r\n            }\r\n          } else {\r\n            this.prerelease = prerelease\r\n          }\r\n        }\r\n        break\r\n      }\r\n      default:\r\n        throw new Error(`invalid increment argument: ${release}`)\r\n    }\r\n    this.raw = this.format()\r\n    if (this.build.length) {\r\n      this.raw += `+${this.build.join('.')}`\r\n    }\r\n    return this\r\n  }\r\n}\r\n\r\nmodule.exports = SemVer\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/classes/semver.js b/node_modules/semver/classes/semver.js
--- a/node_modules/semver/classes/semver.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/classes/semver.js	(date 1753913035330)
@@ -1,3 +1,5 @@
+'use strict'
+
 const debug = require('../internal/debug')
 const { MAX_LENGTH, MAX_SAFE_INTEGER } = require('../internal/constants')
 const { safeRe: re, t } = require('../internal/re')
@@ -10,7 +12,7 @@
 
     if (version instanceof SemVer) {
       if (version.loose === !!options.loose &&
-          version.includePrerelease === !!options.includePrerelease) {
+        version.includePrerelease === !!options.includePrerelease) {
         return version
       } else {
         version = version.version
@@ -176,6 +178,19 @@
   // preminor will bump the version up to the next minor release, and immediately
   // down to pre-release. premajor and prepatch work the same way.
   inc (release, identifier, identifierBase) {
+    if (release.startsWith('pre')) {
+      if (!identifier && identifierBase === false) {
+        throw new Error('invalid increment argument: identifier is empty')
+      }
+      // Avoid an invalid semver results
+      if (identifier) {
+        const match = `-${identifier}`.match(this.options.loose ? re[t.PRERELEASELOOSE] : re[t.PRERELEASE])
+        if (!match || match[1] !== identifier) {
+          throw new Error(`invalid identifier: ${identifier}`)
+        }
+      }
+    }
+
     switch (release) {
       case 'premajor':
         this.prerelease.length = 0
@@ -206,6 +221,12 @@
         }
         this.inc('pre', identifier, identifierBase)
         break
+      case 'release':
+        if (this.prerelease.length === 0) {
+          throw new Error(`version ${this.raw} is not a prerelease`)
+        }
+        this.prerelease.length = 0
+        break
 
       case 'major':
         // If this is a pre-major version, bump up to the same major version.
@@ -249,10 +270,6 @@
       case 'pre': {
         const base = Number(identifierBase) ? 1 : 0
 
-        if (!identifier && identifierBase === false) {
-          throw new Error('invalid increment argument: identifier is empty')
-        }
-
         if (this.prerelease.length === 0) {
           this.prerelease = [base]
         } else {
Index: node_modules/semver/classes/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>module.exports = {\r\n  SemVer: require('./semver.js'),\r\n  Range: require('./range.js'),\r\n  Comparator: require('./comparator.js'),\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/classes/index.js b/node_modules/semver/classes/index.js
--- a/node_modules/semver/classes/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/classes/index.js	(date 1753913035307)
@@ -1,3 +1,5 @@
+'use strict'
+
 module.exports = {
   SemVer: require('./semver.js'),
   Range: require('./range.js'),
Index: node_modules/semver/classes/range.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// hoisted class for cyclic dependency\r\nclass Range {\r\n  constructor (range, options) {\r\n    options = parseOptions(options)\r\n\r\n    if (range instanceof Range) {\r\n      if (\r\n        range.loose === !!options.loose &&\r\n        range.includePrerelease === !!options.includePrerelease\r\n      ) {\r\n        return range\r\n      } else {\r\n        return new Range(range.raw, options)\r\n      }\r\n    }\r\n\r\n    if (range instanceof Comparator) {\r\n      // just put it in the set and return\r\n      this.raw = range.value\r\n      this.set = [[range]]\r\n      this.format()\r\n      return this\r\n    }\r\n\r\n    this.options = options\r\n    this.loose = !!options.loose\r\n    this.includePrerelease = !!options.includePrerelease\r\n\r\n    // First reduce all whitespace as much as possible so we do not have to rely\r\n    // on potentially slow regexes like \\s*. This is then stored and used for\r\n    // future error messages as well.\r\n    this.raw = range\r\n      .trim()\r\n      .split(/\\s+/)\r\n      .join(' ')\r\n\r\n    // First, split on ||\r\n    this.set = this.raw\r\n      .split('||')\r\n      // map the range to a 2d array of comparators\r\n      .map(r => this.parseRange(r.trim()))\r\n      // throw out any comparator lists that are empty\r\n      // this generally means that it was not a valid range, which is allowed\r\n      // in loose mode, but will still throw if the WHOLE range is invalid.\r\n      .filter(c => c.length)\r\n\r\n    if (!this.set.length) {\r\n      throw new TypeError(`Invalid SemVer Range: ${this.raw}`)\r\n    }\r\n\r\n    // if we have any that are not the null set, throw out null sets.\r\n    if (this.set.length > 1) {\r\n      // keep the first one, in case they're all null sets\r\n      const first = this.set[0]\r\n      this.set = this.set.filter(c => !isNullSet(c[0]))\r\n      if (this.set.length === 0) {\r\n        this.set = [first]\r\n      } else if (this.set.length > 1) {\r\n        // if we have any that are *, then the range is just *\r\n        for (const c of this.set) {\r\n          if (c.length === 1 && isAny(c[0])) {\r\n            this.set = [c]\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    this.format()\r\n  }\r\n\r\n  format () {\r\n    this.range = this.set\r\n      .map((comps) => comps.join(' ').trim())\r\n      .join('||')\r\n      .trim()\r\n    return this.range\r\n  }\r\n\r\n  toString () {\r\n    return this.range\r\n  }\r\n\r\n  parseRange (range) {\r\n    // memoize range parsing for performance.\r\n    // this is a very hot path, and fully deterministic.\r\n    const memoOpts =\r\n      (this.options.includePrerelease && FLAG_INCLUDE_PRERELEASE) |\r\n      (this.options.loose && FLAG_LOOSE)\r\n    const memoKey = memoOpts + ':' + range\r\n    const cached = cache.get(memoKey)\r\n    if (cached) {\r\n      return cached\r\n    }\r\n\r\n    const loose = this.options.loose\r\n    // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\r\n    const hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\r\n    range = range.replace(hr, hyphenReplace(this.options.includePrerelease))\r\n    debug('hyphen replace', range)\r\n\r\n    // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\r\n    range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\r\n    debug('comparator trim', range)\r\n\r\n    // `~ 1.2.3` => `~1.2.3`\r\n    range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\r\n    debug('tilde trim', range)\r\n\r\n    // `^ 1.2.3` => `^1.2.3`\r\n    range = range.replace(re[t.CARETTRIM], caretTrimReplace)\r\n    debug('caret trim', range)\r\n\r\n    // At this point, the range is completely trimmed and\r\n    // ready to be split into comparators.\r\n\r\n    let rangeList = range\r\n      .split(' ')\r\n      .map(comp => parseComparator(comp, this.options))\r\n      .join(' ')\r\n      .split(/\\s+/)\r\n      // >=0.0.0 is equivalent to *\r\n      .map(comp => replaceGTE0(comp, this.options))\r\n\r\n    if (loose) {\r\n      // in loose mode, throw out any that are not valid comparators\r\n      rangeList = rangeList.filter(comp => {\r\n        debug('loose invalid filter', comp, this.options)\r\n        return !!comp.match(re[t.COMPARATORLOOSE])\r\n      })\r\n    }\r\n    debug('range list', rangeList)\r\n\r\n    // if any comparators are the null set, then replace with JUST null set\r\n    // if more than one comparator, remove any * comparators\r\n    // also, don't include the same comparator more than once\r\n    const rangeMap = new Map()\r\n    const comparators = rangeList.map(comp => new Comparator(comp, this.options))\r\n    for (const comp of comparators) {\r\n      if (isNullSet(comp)) {\r\n        return [comp]\r\n      }\r\n      rangeMap.set(comp.value, comp)\r\n    }\r\n    if (rangeMap.size > 1 && rangeMap.has('')) {\r\n      rangeMap.delete('')\r\n    }\r\n\r\n    const result = [...rangeMap.values()]\r\n    cache.set(memoKey, result)\r\n    return result\r\n  }\r\n\r\n  intersects (range, options) {\r\n    if (!(range instanceof Range)) {\r\n      throw new TypeError('a Range is required')\r\n    }\r\n\r\n    return this.set.some((thisComparators) => {\r\n      return (\r\n        isSatisfiable(thisComparators, options) &&\r\n        range.set.some((rangeComparators) => {\r\n          return (\r\n            isSatisfiable(rangeComparators, options) &&\r\n            thisComparators.every((thisComparator) => {\r\n              return rangeComparators.every((rangeComparator) => {\r\n                return thisComparator.intersects(rangeComparator, options)\r\n              })\r\n            })\r\n          )\r\n        })\r\n      )\r\n    })\r\n  }\r\n\r\n  // if ANY of the sets match ALL of its comparators, then pass\r\n  test (version) {\r\n    if (!version) {\r\n      return false\r\n    }\r\n\r\n    if (typeof version === 'string') {\r\n      try {\r\n        version = new SemVer(version, this.options)\r\n      } catch (er) {\r\n        return false\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < this.set.length; i++) {\r\n      if (testSet(this.set[i], version, this.options)) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n}\r\n\r\nmodule.exports = Range\r\n\r\nconst LRU = require('../internal/lrucache')\r\nconst cache = new LRU()\r\n\r\nconst parseOptions = require('../internal/parse-options')\r\nconst Comparator = require('./comparator')\r\nconst debug = require('../internal/debug')\r\nconst SemVer = require('./semver')\r\nconst {\r\n  safeRe: re,\r\n  t,\r\n  comparatorTrimReplace,\r\n  tildeTrimReplace,\r\n  caretTrimReplace,\r\n} = require('../internal/re')\r\nconst { FLAG_INCLUDE_PRERELEASE, FLAG_LOOSE } = require('../internal/constants')\r\n\r\nconst isNullSet = c => c.value === '<0.0.0-0'\r\nconst isAny = c => c.value === ''\r\n\r\n// take a set of comparators and determine whether there\r\n// exists a version which can satisfy it\r\nconst isSatisfiable = (comparators, options) => {\r\n  let result = true\r\n  const remainingComparators = comparators.slice()\r\n  let testComparator = remainingComparators.pop()\r\n\r\n  while (result && remainingComparators.length) {\r\n    result = remainingComparators.every((otherComparator) => {\r\n      return testComparator.intersects(otherComparator, options)\r\n    })\r\n\r\n    testComparator = remainingComparators.pop()\r\n  }\r\n\r\n  return result\r\n}\r\n\r\n// comprised of xranges, tildes, stars, and gtlt's at this point.\r\n// already replaced the hyphen ranges\r\n// turn into a set of JUST comparators.\r\nconst parseComparator = (comp, options) => {\r\n  debug('comp', comp, options)\r\n  comp = replaceCarets(comp, options)\r\n  debug('caret', comp)\r\n  comp = replaceTildes(comp, options)\r\n  debug('tildes', comp)\r\n  comp = replaceXRanges(comp, options)\r\n  debug('xrange', comp)\r\n  comp = replaceStars(comp, options)\r\n  debug('stars', comp)\r\n  return comp\r\n}\r\n\r\nconst isX = id => !id || id.toLowerCase() === 'x' || id === '*'\r\n\r\n// ~, ~> --> * (any, kinda silly)\r\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0-0\r\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0-0\r\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0-0\r\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0-0\r\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0-0\r\n// ~0.0.1 --> >=0.0.1 <0.1.0-0\r\nconst replaceTildes = (comp, options) => {\r\n  return comp\r\n    .trim()\r\n    .split(/\\s+/)\r\n    .map((c) => replaceTilde(c, options))\r\n    .join(' ')\r\n}\r\n\r\nconst replaceTilde = (comp, options) => {\r\n  const r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\r\n  return comp.replace(r, (_, M, m, p, pr) => {\r\n    debug('tilde', comp, _, M, m, p, pr)\r\n    let ret\r\n\r\n    if (isX(M)) {\r\n      ret = ''\r\n    } else if (isX(m)) {\r\n      ret = `>=${M}.0.0 <${+M + 1}.0.0-0`\r\n    } else if (isX(p)) {\r\n      // ~1.2 == >=1.2.0 <1.3.0-0\r\n      ret = `>=${M}.${m}.0 <${M}.${+m + 1}.0-0`\r\n    } else if (pr) {\r\n      debug('replaceTilde pr', pr)\r\n      ret = `>=${M}.${m}.${p}-${pr\r\n      } <${M}.${+m + 1}.0-0`\r\n    } else {\r\n      // ~1.2.3 == >=1.2.3 <1.3.0-0\r\n      ret = `>=${M}.${m}.${p\r\n      } <${M}.${+m + 1}.0-0`\r\n    }\r\n\r\n    debug('tilde return', ret)\r\n    return ret\r\n  })\r\n}\r\n\r\n// ^ --> * (any, kinda silly)\r\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0-0\r\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0-0\r\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0-0\r\n// ^1.2.3 --> >=1.2.3 <2.0.0-0\r\n// ^1.2.0 --> >=1.2.0 <2.0.0-0\r\n// ^0.0.1 --> >=0.0.1 <0.0.2-0\r\n// ^0.1.0 --> >=0.1.0 <0.2.0-0\r\nconst replaceCarets = (comp, options) => {\r\n  return comp\r\n    .trim()\r\n    .split(/\\s+/)\r\n    .map((c) => replaceCaret(c, options))\r\n    .join(' ')\r\n}\r\n\r\nconst replaceCaret = (comp, options) => {\r\n  debug('caret', comp, options)\r\n  const r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\r\n  const z = options.includePrerelease ? '-0' : ''\r\n  return comp.replace(r, (_, M, m, p, pr) => {\r\n    debug('caret', comp, _, M, m, p, pr)\r\n    let ret\r\n\r\n    if (isX(M)) {\r\n      ret = ''\r\n    } else if (isX(m)) {\r\n      ret = `>=${M}.0.0${z} <${+M + 1}.0.0-0`\r\n    } else if (isX(p)) {\r\n      if (M === '0') {\r\n        ret = `>=${M}.${m}.0${z} <${M}.${+m + 1}.0-0`\r\n      } else {\r\n        ret = `>=${M}.${m}.0${z} <${+M + 1}.0.0-0`\r\n      }\r\n    } else if (pr) {\r\n      debug('replaceCaret pr', pr)\r\n      if (M === '0') {\r\n        if (m === '0') {\r\n          ret = `>=${M}.${m}.${p}-${pr\r\n          } <${M}.${m}.${+p + 1}-0`\r\n        } else {\r\n          ret = `>=${M}.${m}.${p}-${pr\r\n          } <${M}.${+m + 1}.0-0`\r\n        }\r\n      } else {\r\n        ret = `>=${M}.${m}.${p}-${pr\r\n        } <${+M + 1}.0.0-0`\r\n      }\r\n    } else {\r\n      debug('no pr')\r\n      if (M === '0') {\r\n        if (m === '0') {\r\n          ret = `>=${M}.${m}.${p\r\n          }${z} <${M}.${m}.${+p + 1}-0`\r\n        } else {\r\n          ret = `>=${M}.${m}.${p\r\n          }${z} <${M}.${+m + 1}.0-0`\r\n        }\r\n      } else {\r\n        ret = `>=${M}.${m}.${p\r\n        } <${+M + 1}.0.0-0`\r\n      }\r\n    }\r\n\r\n    debug('caret return', ret)\r\n    return ret\r\n  })\r\n}\r\n\r\nconst replaceXRanges = (comp, options) => {\r\n  debug('replaceXRanges', comp, options)\r\n  return comp\r\n    .split(/\\s+/)\r\n    .map((c) => replaceXRange(c, options))\r\n    .join(' ')\r\n}\r\n\r\nconst replaceXRange = (comp, options) => {\r\n  comp = comp.trim()\r\n  const r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\r\n  return comp.replace(r, (ret, gtlt, M, m, p, pr) => {\r\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\r\n    const xM = isX(M)\r\n    const xm = xM || isX(m)\r\n    const xp = xm || isX(p)\r\n    const anyX = xp\r\n\r\n    if (gtlt === '=' && anyX) {\r\n      gtlt = ''\r\n    }\r\n\r\n    // if we're including prereleases in the match, then we need\r\n    // to fix this to -0, the lowest possible prerelease value\r\n    pr = options.includePrerelease ? '-0' : ''\r\n\r\n    if (xM) {\r\n      if (gtlt === '>' || gtlt === '<') {\r\n        // nothing is allowed\r\n        ret = '<0.0.0-0'\r\n      } else {\r\n        // nothing is forbidden\r\n        ret = '*'\r\n      }\r\n    } else if (gtlt && anyX) {\r\n      // we know patch is an x, because we have any x at all.\r\n      // replace X with 0\r\n      if (xm) {\r\n        m = 0\r\n      }\r\n      p = 0\r\n\r\n      if (gtlt === '>') {\r\n        // >1 => >=2.0.0\r\n        // >1.2 => >=1.3.0\r\n        gtlt = '>='\r\n        if (xm) {\r\n          M = +M + 1\r\n          m = 0\r\n          p = 0\r\n        } else {\r\n          m = +m + 1\r\n          p = 0\r\n        }\r\n      } else if (gtlt === '<=') {\r\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\r\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\r\n        gtlt = '<'\r\n        if (xm) {\r\n          M = +M + 1\r\n        } else {\r\n          m = +m + 1\r\n        }\r\n      }\r\n\r\n      if (gtlt === '<') {\r\n        pr = '-0'\r\n      }\r\n\r\n      ret = `${gtlt + M}.${m}.${p}${pr}`\r\n    } else if (xm) {\r\n      ret = `>=${M}.0.0${pr} <${+M + 1}.0.0-0`\r\n    } else if (xp) {\r\n      ret = `>=${M}.${m}.0${pr\r\n      } <${M}.${+m + 1}.0-0`\r\n    }\r\n\r\n    debug('xRange return', ret)\r\n\r\n    return ret\r\n  })\r\n}\r\n\r\n// Because * is AND-ed with everything else in the comparator,\r\n// and '' means \"any version\", just remove the *s entirely.\r\nconst replaceStars = (comp, options) => {\r\n  debug('replaceStars', comp, options)\r\n  // Looseness is ignored here.  star is always as loose as it gets!\r\n  return comp\r\n    .trim()\r\n    .replace(re[t.STAR], '')\r\n}\r\n\r\nconst replaceGTE0 = (comp, options) => {\r\n  debug('replaceGTE0', comp, options)\r\n  return comp\r\n    .trim()\r\n    .replace(re[options.includePrerelease ? t.GTE0PRE : t.GTE0], '')\r\n}\r\n\r\n// This function is passed to string.replace(re[t.HYPHENRANGE])\r\n// M, m, patch, prerelease, build\r\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\r\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0-0 Any 3.4.x will do\r\n// 1.2 - 3.4 => >=1.2.0 <3.5.0-0\r\n// TODO build?\r\nconst hyphenReplace = incPr => ($0,\r\n  from, fM, fm, fp, fpr, fb,\r\n  to, tM, tm, tp, tpr) => {\r\n  if (isX(fM)) {\r\n    from = ''\r\n  } else if (isX(fm)) {\r\n    from = `>=${fM}.0.0${incPr ? '-0' : ''}`\r\n  } else if (isX(fp)) {\r\n    from = `>=${fM}.${fm}.0${incPr ? '-0' : ''}`\r\n  } else if (fpr) {\r\n    from = `>=${from}`\r\n  } else {\r\n    from = `>=${from}${incPr ? '-0' : ''}`\r\n  }\r\n\r\n  if (isX(tM)) {\r\n    to = ''\r\n  } else if (isX(tm)) {\r\n    to = `<${+tM + 1}.0.0-0`\r\n  } else if (isX(tp)) {\r\n    to = `<${tM}.${+tm + 1}.0-0`\r\n  } else if (tpr) {\r\n    to = `<=${tM}.${tm}.${tp}-${tpr}`\r\n  } else if (incPr) {\r\n    to = `<${tM}.${tm}.${+tp + 1}-0`\r\n  } else {\r\n    to = `<=${to}`\r\n  }\r\n\r\n  return `${from} ${to}`.trim()\r\n}\r\n\r\nconst testSet = (set, version, options) => {\r\n  for (let i = 0; i < set.length; i++) {\r\n    if (!set[i].test(version)) {\r\n      return false\r\n    }\r\n  }\r\n\r\n  if (version.prerelease.length && !options.includePrerelease) {\r\n    // Find the set of versions that are allowed to have prereleases\r\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\r\n    // That should allow `1.2.3-pr.2` to pass.\r\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\r\n    // even though it's within the range set by the comparators.\r\n    for (let i = 0; i < set.length; i++) {\r\n      debug(set[i].semver)\r\n      if (set[i].semver === Comparator.ANY) {\r\n        continue\r\n      }\r\n\r\n      if (set[i].semver.prerelease.length > 0) {\r\n        const allowed = set[i].semver\r\n        if (allowed.major === version.major &&\r\n            allowed.minor === version.minor &&\r\n            allowed.patch === version.patch) {\r\n          return true\r\n        }\r\n      }\r\n    }\r\n\r\n    // Version has a -pre, but it's not one of the ones we like.\r\n    return false\r\n  }\r\n\r\n  return true\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/classes/range.js b/node_modules/semver/classes/range.js
--- a/node_modules/semver/classes/range.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/classes/range.js	(date 1753913035324)
@@ -1,3 +1,7 @@
+'use strict'
+
+const SPACE_CHARACTERS = /\s+/g
+
 // hoisted class for cyclic dependency
 class Range {
   constructor (range, options) {
@@ -18,7 +22,7 @@
       // just put it in the set and return
       this.raw = range.value
       this.set = [[range]]
-      this.format()
+      this.formatted = undefined
       return this
     }
 
@@ -29,10 +33,7 @@
     // First reduce all whitespace as much as possible so we do not have to rely
     // on potentially slow regexes like \s*. This is then stored and used for
     // future error messages as well.
-    this.raw = range
-      .trim()
-      .split(/\s+/)
-      .join(' ')
+    this.raw = range.trim().replace(SPACE_CHARACTERS, ' ')
 
     // First, split on ||
     this.set = this.raw
@@ -66,14 +67,29 @@
       }
     }
 
-    this.format()
+    this.formatted = undefined
+  }
+
+  get range () {
+    if (this.formatted === undefined) {
+      this.formatted = ''
+      for (let i = 0; i < this.set.length; i++) {
+        if (i > 0) {
+          this.formatted += '||'
+        }
+        const comps = this.set[i]
+        for (let k = 0; k < comps.length; k++) {
+          if (k > 0) {
+            this.formatted += ' '
+          }
+          this.formatted += comps[k].toString().trim()
+        }
+      }
+    }
+    return this.formatted
   }
 
   format () {
-    this.range = this.set
-      .map((comps) => comps.join(' ').trim())
-      .join('||')
-      .trim()
     return this.range
   }
 
Index: node_modules/semver/internal/debug.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const debug = (\r\n  typeof process === 'object' &&\r\n  process.env &&\r\n  process.env.NODE_DEBUG &&\r\n  /\\bsemver\\b/i.test(process.env.NODE_DEBUG)\r\n) ? (...args) => console.error('SEMVER', ...args)\r\n  : () => {}\r\n\r\nmodule.exports = debug\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/internal/debug.js b/node_modules/semver/internal/debug.js
--- a/node_modules/semver/internal/debug.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/internal/debug.js	(date 1753913035299)
@@ -1,3 +1,5 @@
+'use strict'
+
 const debug = (
   typeof process === 'object' &&
   process.env &&
Index: node_modules/semver/internal/re.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const {\r\n  MAX_SAFE_COMPONENT_LENGTH,\r\n  MAX_SAFE_BUILD_LENGTH,\r\n  MAX_LENGTH,\r\n} = require('./constants')\r\nconst debug = require('./debug')\r\nexports = module.exports = {}\r\n\r\n// The actual regexps go on exports.re\r\nconst re = exports.re = []\r\nconst safeRe = exports.safeRe = []\r\nconst src = exports.src = []\r\nconst t = exports.t = {}\r\nlet R = 0\r\n\r\nconst LETTERDASHNUMBER = '[a-zA-Z0-9-]'\r\n\r\n// Replace some greedy regex tokens to prevent regex dos issues. These regex are\r\n// used internally via the safeRe object since all inputs in this library get\r\n// normalized first to trim and collapse all extra whitespace. The original\r\n// regexes are exported for userland consumption and lower level usage. A\r\n// future breaking change could export the safer regex only with a note that\r\n// all input should have extra whitespace removed.\r\nconst safeRegexReplacements = [\r\n  ['\\\\s', 1],\r\n  ['\\\\d', MAX_LENGTH],\r\n  [LETTERDASHNUMBER, MAX_SAFE_BUILD_LENGTH],\r\n]\r\n\r\nconst makeSafeRegex = (value) => {\r\n  for (const [token, max] of safeRegexReplacements) {\r\n    value = value\r\n      .split(`${token}*`).join(`${token}{0,${max}}`)\r\n      .split(`${token}+`).join(`${token}{1,${max}}`)\r\n  }\r\n  return value\r\n}\r\n\r\nconst createToken = (name, value, isGlobal) => {\r\n  const safe = makeSafeRegex(value)\r\n  const index = R++\r\n  debug(name, index, value)\r\n  t[name] = index\r\n  src[index] = value\r\n  re[index] = new RegExp(value, isGlobal ? 'g' : undefined)\r\n  safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)\r\n}\r\n\r\n// The following Regular Expressions can be used for tokenizing,\r\n// validating, and parsing SemVer version strings.\r\n\r\n// ## Numeric Identifier\r\n// A single `0`, or a non-zero digit followed by zero or more digits.\r\n\r\ncreateToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*')\r\ncreateToken('NUMERICIDENTIFIERLOOSE', '\\\\d+')\r\n\r\n// ## Non-numeric Identifier\r\n// Zero or more digits, followed by a letter or hyphen, and then zero or\r\n// more letters, digits, or hyphens.\r\n\r\ncreateToken('NONNUMERICIDENTIFIER', `\\\\d*[a-zA-Z-]${LETTERDASHNUMBER}*`)\r\n\r\n// ## Main Version\r\n// Three dot-separated numeric identifiers.\r\n\r\ncreateToken('MAINVERSION', `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\r\n                   `(${src[t.NUMERICIDENTIFIER]})\\\\.` +\r\n                   `(${src[t.NUMERICIDENTIFIER]})`)\r\n\r\ncreateToken('MAINVERSIONLOOSE', `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\r\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})\\\\.` +\r\n                        `(${src[t.NUMERICIDENTIFIERLOOSE]})`)\r\n\r\n// ## Pre-release Version Identifier\r\n// A numeric identifier, or a non-numeric identifier.\r\n\r\ncreateToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]\r\n}|${src[t.NONNUMERICIDENTIFIER]})`)\r\n\r\ncreateToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]\r\n}|${src[t.NONNUMERICIDENTIFIER]})`)\r\n\r\n// ## Pre-release Version\r\n// Hyphen, followed by one or more dot-separated pre-release version\r\n// identifiers.\r\n\r\ncreateToken('PRERELEASE', `(?:-(${src[t.PRERELEASEIDENTIFIER]\r\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIER]})*))`)\r\n\r\ncreateToken('PRERELEASELOOSE', `(?:-?(${src[t.PRERELEASEIDENTIFIERLOOSE]\r\n}(?:\\\\.${src[t.PRERELEASEIDENTIFIERLOOSE]})*))`)\r\n\r\n// ## Build Metadata Identifier\r\n// Any combination of digits, letters, or hyphens.\r\n\r\ncreateToken('BUILDIDENTIFIER', `${LETTERDASHNUMBER}+`)\r\n\r\n// ## Build Metadata\r\n// Plus sign, followed by one or more period-separated build metadata\r\n// identifiers.\r\n\r\ncreateToken('BUILD', `(?:\\\\+(${src[t.BUILDIDENTIFIER]\r\n}(?:\\\\.${src[t.BUILDIDENTIFIER]})*))`)\r\n\r\n// ## Full Version String\r\n// A main version, followed optionally by a pre-release version and\r\n// build metadata.\r\n\r\n// Note that the only major, minor, patch, and pre-release sections of\r\n// the version string are capturing groups.  The build metadata is not a\r\n// capturing group, because it should not ever be used in version\r\n// comparison.\r\n\r\ncreateToken('FULLPLAIN', `v?${src[t.MAINVERSION]\r\n}${src[t.PRERELEASE]}?${\r\n  src[t.BUILD]}?`)\r\n\r\ncreateToken('FULL', `^${src[t.FULLPLAIN]}$`)\r\n\r\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\r\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\r\n// common in the npm registry.\r\ncreateToken('LOOSEPLAIN', `[v=\\\\s]*${src[t.MAINVERSIONLOOSE]\r\n}${src[t.PRERELEASELOOSE]}?${\r\n  src[t.BUILD]}?`)\r\n\r\ncreateToken('LOOSE', `^${src[t.LOOSEPLAIN]}$`)\r\n\r\ncreateToken('GTLT', '((?:<|>)?=?)')\r\n\r\n// Something like \"2.*\" or \"1.2.x\".\r\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\r\n// Only the first item is strictly required.\r\ncreateToken('XRANGEIDENTIFIERLOOSE', `${src[t.NUMERICIDENTIFIERLOOSE]}|x|X|\\\\*`)\r\ncreateToken('XRANGEIDENTIFIER', `${src[t.NUMERICIDENTIFIER]}|x|X|\\\\*`)\r\n\r\ncreateToken('XRANGEPLAIN', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIER]})` +\r\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\r\n                   `(?:\\\\.(${src[t.XRANGEIDENTIFIER]})` +\r\n                   `(?:${src[t.PRERELEASE]})?${\r\n                     src[t.BUILD]}?` +\r\n                   `)?)?`)\r\n\r\ncreateToken('XRANGEPLAINLOOSE', `[v=\\\\s]*(${src[t.XRANGEIDENTIFIERLOOSE]})` +\r\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\r\n                        `(?:\\\\.(${src[t.XRANGEIDENTIFIERLOOSE]})` +\r\n                        `(?:${src[t.PRERELEASELOOSE]})?${\r\n                          src[t.BUILD]}?` +\r\n                        `)?)?`)\r\n\r\ncreateToken('XRANGE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAIN]}$`)\r\ncreateToken('XRANGELOOSE', `^${src[t.GTLT]}\\\\s*${src[t.XRANGEPLAINLOOSE]}$`)\r\n\r\n// Coercion.\r\n// Extract anything that could conceivably be a part of a valid semver\r\ncreateToken('COERCEPLAIN', `${'(^|[^\\\\d])' +\r\n              '(\\\\d{1,'}${MAX_SAFE_COMPONENT_LENGTH}})` +\r\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?` +\r\n              `(?:\\\\.(\\\\d{1,${MAX_SAFE_COMPONENT_LENGTH}}))?`)\r\ncreateToken('COERCE', `${src[t.COERCEPLAIN]}(?:$|[^\\\\d])`)\r\ncreateToken('COERCEFULL', src[t.COERCEPLAIN] +\r\n              `(?:${src[t.PRERELEASE]})?` +\r\n              `(?:${src[t.BUILD]})?` +\r\n              `(?:$|[^\\\\d])`)\r\ncreateToken('COERCERTL', src[t.COERCE], true)\r\ncreateToken('COERCERTLFULL', src[t.COERCEFULL], true)\r\n\r\n// Tilde ranges.\r\n// Meaning is \"reasonably at or greater than\"\r\ncreateToken('LONETILDE', '(?:~>?)')\r\n\r\ncreateToken('TILDETRIM', `(\\\\s*)${src[t.LONETILDE]}\\\\s+`, true)\r\nexports.tildeTrimReplace = '$1~'\r\n\r\ncreateToken('TILDE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAIN]}$`)\r\ncreateToken('TILDELOOSE', `^${src[t.LONETILDE]}${src[t.XRANGEPLAINLOOSE]}$`)\r\n\r\n// Caret ranges.\r\n// Meaning is \"at least and backwards compatible with\"\r\ncreateToken('LONECARET', '(?:\\\\^)')\r\n\r\ncreateToken('CARETTRIM', `(\\\\s*)${src[t.LONECARET]}\\\\s+`, true)\r\nexports.caretTrimReplace = '$1^'\r\n\r\ncreateToken('CARET', `^${src[t.LONECARET]}${src[t.XRANGEPLAIN]}$`)\r\ncreateToken('CARETLOOSE', `^${src[t.LONECARET]}${src[t.XRANGEPLAINLOOSE]}$`)\r\n\r\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\r\ncreateToken('COMPARATORLOOSE', `^${src[t.GTLT]}\\\\s*(${src[t.LOOSEPLAIN]})$|^$`)\r\ncreateToken('COMPARATOR', `^${src[t.GTLT]}\\\\s*(${src[t.FULLPLAIN]})$|^$`)\r\n\r\n// An expression to strip any whitespace between the gtlt and the thing\r\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\r\ncreateToken('COMPARATORTRIM', `(\\\\s*)${src[t.GTLT]\r\n}\\\\s*(${src[t.LOOSEPLAIN]}|${src[t.XRANGEPLAIN]})`, true)\r\nexports.comparatorTrimReplace = '$1$2$3'\r\n\r\n// Something like `1.2.3 - 1.2.4`\r\n// Note that these all use the loose form, because they'll be\r\n// checked against either the strict or loose comparator form\r\n// later.\r\ncreateToken('HYPHENRANGE', `^\\\\s*(${src[t.XRANGEPLAIN]})` +\r\n                   `\\\\s+-\\\\s+` +\r\n                   `(${src[t.XRANGEPLAIN]})` +\r\n                   `\\\\s*$`)\r\n\r\ncreateToken('HYPHENRANGELOOSE', `^\\\\s*(${src[t.XRANGEPLAINLOOSE]})` +\r\n                        `\\\\s+-\\\\s+` +\r\n                        `(${src[t.XRANGEPLAINLOOSE]})` +\r\n                        `\\\\s*$`)\r\n\r\n// Star ranges basically just allow anything at all.\r\ncreateToken('STAR', '(<|>)?=?\\\\s*\\\\*')\r\n// >=0.0.0 is like a star\r\ncreateToken('GTE0', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0\\\\s*$')\r\ncreateToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\\\.0\\\\.0-0\\\\s*$')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/internal/re.js b/node_modules/semver/internal/re.js
--- a/node_modules/semver/internal/re.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/internal/re.js	(date 1753913035326)
@@ -1,3 +1,5 @@
+'use strict'
+
 const {
   MAX_SAFE_COMPONENT_LENGTH,
   MAX_SAFE_BUILD_LENGTH,
@@ -10,6 +12,7 @@
 const re = exports.re = []
 const safeRe = exports.safeRe = []
 const src = exports.src = []
+const safeSrc = exports.safeSrc = []
 const t = exports.t = {}
 let R = 0
 
@@ -42,6 +45,7 @@
   debug(name, index, value)
   t[name] = index
   src[index] = value
+  safeSrc[index] = safe
   re[index] = new RegExp(value, isGlobal ? 'g' : undefined)
   safeRe[index] = new RegExp(safe, isGlobal ? 'g' : undefined)
 }
@@ -74,12 +78,14 @@
 
 // ## Pre-release Version Identifier
 // A numeric identifier, or a non-numeric identifier.
+// Non-numberic identifiers include numberic identifiers but can be longer.
+// Therefore non-numberic identifiers must go first.
 
-createToken('PRERELEASEIDENTIFIER', `(?:${src[t.NUMERICIDENTIFIER]
-}|${src[t.NONNUMERICIDENTIFIER]})`)
+createToken('PRERELEASEIDENTIFIER', `(?:${src[t.NONNUMERICIDENTIFIER]
+}|${src[t.NUMERICIDENTIFIER]})`)
 
-createToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NUMERICIDENTIFIERLOOSE]
-}|${src[t.NONNUMERICIDENTIFIER]})`)
+createToken('PRERELEASEIDENTIFIERLOOSE', `(?:${src[t.NONNUMERICIDENTIFIER]
+}|${src[t.NUMERICIDENTIFIERLOOSE]})`)
 
 // ## Pre-release Version
 // Hyphen, followed by one or more dot-separated pre-release version
Index: node_modules/serve-static/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"serve-static\",\r\n  \"description\": \"Serve static files\",\r\n  \"version\": \"1.15.0\",\r\n  \"author\": \"Douglas Christopher Wilson <doug@somethingdoug.com>\",\r\n  \"license\": \"MIT\",\r\n  \"repository\": \"expressjs/serve-static\",\r\n  \"dependencies\": {\r\n    \"encodeurl\": \"~1.0.2\",\r\n    \"escape-html\": \"~1.0.3\",\r\n    \"parseurl\": \"~1.3.3\",\r\n    \"send\": \"0.18.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"eslint\": \"7.32.0\",\r\n    \"eslint-config-standard\": \"14.1.1\",\r\n    \"eslint-plugin-import\": \"2.25.4\",\r\n    \"eslint-plugin-markdown\": \"2.2.1\",\r\n    \"eslint-plugin-node\": \"11.1.0\",\r\n    \"eslint-plugin-promise\": \"5.2.0\",\r\n    \"eslint-plugin-standard\": \"4.1.0\",\r\n    \"mocha\": \"9.2.2\",\r\n    \"nyc\": \"15.1.0\",\r\n    \"safe-buffer\": \"5.2.1\",\r\n    \"supertest\": \"6.2.2\"\r\n  },\r\n  \"files\": [\r\n    \"LICENSE\",\r\n    \"HISTORY.md\",\r\n    \"index.js\"\r\n  ],\r\n  \"engines\": {\r\n    \"node\": \">= 0.8.0\"\r\n  },\r\n  \"scripts\": {\r\n    \"lint\": \"eslint .\",\r\n    \"test\": \"mocha --reporter spec --bail --check-leaks test/\",\r\n    \"test-ci\": \"nyc --reporter=lcov --reporter=text npm test\",\r\n    \"test-cov\": \"nyc --reporter=html --reporter=text npm test\",\r\n    \"version\": \"node scripts/version-history.js && git add HISTORY.md\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/serve-static/package.json b/node_modules/serve-static/package.json
--- a/node_modules/serve-static/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/serve-static/package.json	(date 1753913035116)
@@ -1,15 +1,15 @@
 {
   "name": "serve-static",
   "description": "Serve static files",
-  "version": "1.15.0",
+  "version": "1.16.2",
   "author": "Douglas Christopher Wilson <doug@somethingdoug.com>",
   "license": "MIT",
   "repository": "expressjs/serve-static",
   "dependencies": {
-    "encodeurl": "~1.0.2",
+    "encodeurl": "~2.0.0",
     "escape-html": "~1.0.3",
     "parseurl": "~1.3.3",
-    "send": "0.18.0"
+    "send": "0.19.0"
   },
   "devDependencies": {
     "eslint": "7.32.0",
Index: node_modules/semver/internal/parse-options.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// parse out just the options we care about\r\nconst looseOption = Object.freeze({ loose: true })\r\nconst emptyOpts = Object.freeze({ })\r\nconst parseOptions = options => {\r\n  if (!options) {\r\n    return emptyOpts\r\n  }\r\n\r\n  if (typeof options !== 'object') {\r\n    return looseOption\r\n  }\r\n\r\n  return options\r\n}\r\nmodule.exports = parseOptions\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/internal/parse-options.js b/node_modules/semver/internal/parse-options.js
--- a/node_modules/semver/internal/parse-options.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/internal/parse-options.js	(date 1753913035320)
@@ -1,3 +1,5 @@
+'use strict'
+
 // parse out just the options we care about
 const looseOption = Object.freeze({ loose: true })
 const emptyOpts = Object.freeze({ })
Index: node_modules/serve-static/HISTORY.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>1.15.0 / 2022-03-24\r\n===================\r\n\r\n  * deps: send@0.18.0\r\n    - Fix emitted 416 error missing headers property\r\n    - Limit the headers removed for 304 response\r\n    - deps: depd@2.0.0\r\n    - deps: destroy@1.2.0\r\n    - deps: http-errors@2.0.0\r\n    - deps: on-finished@2.4.1\r\n    - deps: statuses@2.0.1\r\n\r\n1.14.2 / 2021-12-15\r\n===================\r\n\r\n  * deps: send@0.17.2\r\n    - deps: http-errors@1.8.1\r\n    - deps: ms@2.1.3\r\n    - pref: ignore empty http tokens\r\n\r\n1.14.1 / 2019-05-10\r\n===================\r\n\r\n  * Set stricter CSP header in redirect response\r\n  * deps: send@0.17.1\r\n    - deps: range-parser@~1.2.1\r\n\r\n1.14.0 / 2019-05-07\r\n===================\r\n\r\n  * deps: parseurl@~1.3.3\r\n  * deps: send@0.17.0\r\n    - deps: http-errors@~1.7.2\r\n    - deps: mime@1.6.0\r\n    - deps: ms@2.1.1\r\n    - deps: statuses@~1.5.0\r\n    - perf: remove redundant `path.normalize` call\r\n\r\n1.13.2 / 2018-02-07\r\n===================\r\n\r\n  * Fix incorrect end tag in redirects\r\n  * deps: encodeurl@~1.0.2\r\n    - Fix encoding `%` as last character\r\n  * deps: send@0.16.2\r\n    - deps: depd@~1.1.2\r\n    - deps: encodeurl@~1.0.2\r\n    - deps: statuses@~1.4.0\r\n\r\n1.13.1 / 2017-09-29\r\n===================\r\n\r\n  * Fix regression when `root` is incorrectly set to a file\r\n  * deps: send@0.16.1\r\n\r\n1.13.0 / 2017-09-27\r\n===================\r\n\r\n  * deps: send@0.16.0\r\n    - Add 70 new types for file extensions\r\n    - Add `immutable` option\r\n    - Fix missing `</html>` in default error & redirects\r\n    - Set charset as \"UTF-8\" for .js and .json\r\n    - Use instance methods on steam to check for listeners\r\n    - deps: mime@1.4.1\r\n    - perf: improve path validation speed\r\n\r\n1.12.6 / 2017-09-22\r\n===================\r\n\r\n  * deps: send@0.15.6\r\n    - deps: debug@2.6.9\r\n    - perf: improve `If-Match` token parsing\r\n  * perf: improve slash collapsing\r\n\r\n1.12.5 / 2017-09-21\r\n===================\r\n\r\n  * deps: parseurl@~1.3.2\r\n    - perf: reduce overhead for full URLs\r\n    - perf: unroll the \"fast-path\" `RegExp`\r\n  * deps: send@0.15.5\r\n    - Fix handling of modified headers with invalid dates\r\n    - deps: etag@~1.8.1\r\n    - deps: fresh@0.5.2\r\n\r\n1.12.4 / 2017-08-05\r\n===================\r\n\r\n  * deps: send@0.15.4\r\n    - deps: debug@2.6.8\r\n    - deps: depd@~1.1.1\r\n    - deps: http-errors@~1.6.2\r\n\r\n1.12.3 / 2017-05-16\r\n===================\r\n\r\n  * deps: send@0.15.3\r\n    - deps: debug@2.6.7\r\n\r\n1.12.2 / 2017-04-26\r\n===================\r\n\r\n  * deps: send@0.15.2\r\n    - deps: debug@2.6.4\r\n\r\n1.12.1 / 2017-03-04\r\n===================\r\n\r\n  * deps: send@0.15.1\r\n    - Fix issue when `Date.parse` does not return `NaN` on invalid date\r\n    - Fix strict violation in broken environments\r\n\r\n1.12.0 / 2017-02-25\r\n===================\r\n\r\n  * Send complete HTML document in redirect response\r\n  * Set default CSP header in redirect response\r\n  * deps: send@0.15.0\r\n    - Fix false detection of `no-cache` request directive\r\n    - Fix incorrect result when `If-None-Match` has both `*` and ETags\r\n    - Fix weak `ETag` matching to match spec\r\n    - Remove usage of `res._headers` private field\r\n    - Support `If-Match` and `If-Unmodified-Since` headers\r\n    - Use `res.getHeaderNames()` when available\r\n    - Use `res.headersSent` when available\r\n    - deps: debug@2.6.1\r\n    - deps: etag@~1.8.0\r\n    - deps: fresh@0.5.0\r\n    - deps: http-errors@~1.6.1\r\n\r\n1.11.2 / 2017-01-23\r\n===================\r\n\r\n  * deps: send@0.14.2\r\n    - deps: http-errors@~1.5.1\r\n    - deps: ms@0.7.2\r\n    - deps: statuses@~1.3.1\r\n\r\n1.11.1 / 2016-06-10\r\n===================\r\n\r\n  * Fix redirect error when `req.url` contains raw non-URL characters\r\n  * deps: send@0.14.1\r\n\r\n1.11.0 / 2016-06-07\r\n===================\r\n\r\n  * Use status code 301 for redirects\r\n  * deps: send@0.14.0\r\n    - Add `acceptRanges` option\r\n    - Add `cacheControl` option\r\n    - Attempt to combine multiple ranges into single range\r\n    - Correctly inherit from `Stream` class\r\n    - Fix `Content-Range` header in 416 responses when using `start`/`end` options\r\n    - Fix `Content-Range` header missing from default 416 responses\r\n    - Ignore non-byte `Range` headers\r\n    - deps: http-errors@~1.5.0\r\n    - deps: range-parser@~1.2.0\r\n    - deps: statuses@~1.3.0\r\n    - perf: remove argument reassignment\r\n\r\n1.10.3 / 2016-05-30\r\n===================\r\n\r\n  * deps: send@0.13.2\r\n    - Fix invalid `Content-Type` header when `send.mime.default_type` unset\r\n\r\n1.10.2 / 2016-01-19\r\n===================\r\n\r\n  * deps: parseurl@~1.3.1\r\n    - perf: enable strict mode\r\n\r\n1.10.1 / 2016-01-16\r\n===================\r\n\r\n  * deps: escape-html@~1.0.3\r\n    - perf: enable strict mode\r\n    - perf: optimize string replacement\r\n    - perf: use faster string coercion\r\n  * deps: send@0.13.1\r\n    - deps: depd@~1.1.0\r\n    - deps: destroy@~1.0.4\r\n    - deps: escape-html@~1.0.3\r\n    - deps: range-parser@~1.0.3\r\n\r\n1.10.0 / 2015-06-17\r\n===================\r\n\r\n  * Add `fallthrough` option\r\n    - Allows declaring this middleware is the final destination\r\n    - Provides better integration with Express patterns\r\n  * Fix reading options from options prototype\r\n  * Improve the default redirect response headers\r\n  * deps: escape-html@1.0.2\r\n  * deps: send@0.13.0\r\n    - Allow Node.js HTTP server to set `Date` response header\r\n    - Fix incorrectly removing `Content-Location` on 304 response\r\n    - Improve the default redirect response headers\r\n    - Send appropriate headers on default error response\r\n    - Use `http-errors` for standard emitted errors\r\n    - Use `statuses` instead of `http` module for status messages\r\n    - deps: escape-html@1.0.2\r\n    - deps: etag@~1.7.0\r\n    - deps: fresh@0.3.0\r\n    - deps: on-finished@~2.3.0\r\n    - perf: enable strict mode\r\n    - perf: remove unnecessary array allocations\r\n  * perf: enable strict mode\r\n  * perf: remove argument reassignment\r\n\r\n1.9.3 / 2015-05-14\r\n==================\r\n\r\n  * deps: send@0.12.3\r\n    - deps: debug@~2.2.0\r\n    - deps: depd@~1.0.1\r\n    - deps: etag@~1.6.0\r\n    - deps: ms@0.7.1\r\n    - deps: on-finished@~2.2.1\r\n\r\n1.9.2 / 2015-03-14\r\n==================\r\n\r\n  * deps: send@0.12.2\r\n    - Throw errors early for invalid `extensions` or `index` options\r\n    - deps: debug@~2.1.3\r\n\r\n1.9.1 / 2015-02-17\r\n==================\r\n\r\n  * deps: send@0.12.1\r\n    - Fix regression sending zero-length files\r\n\r\n1.9.0 / 2015-02-16\r\n==================\r\n\r\n  * deps: send@0.12.0\r\n    - Always read the stat size from the file\r\n    - Fix mutating passed-in `options`\r\n    - deps: mime@1.3.4\r\n\r\n1.8.1 / 2015-01-20\r\n==================\r\n\r\n  * Fix redirect loop in Node.js 0.11.14\r\n  * deps: send@0.11.1\r\n    - Fix root path disclosure\r\n\r\n1.8.0 / 2015-01-05\r\n==================\r\n\r\n  * deps: send@0.11.0\r\n    - deps: debug@~2.1.1\r\n    - deps: etag@~1.5.1\r\n    - deps: ms@0.7.0\r\n    - deps: on-finished@~2.2.0\r\n\r\n1.7.2 / 2015-01-02\r\n==================\r\n\r\n  * Fix potential open redirect when mounted at root\r\n\r\n1.7.1 / 2014-10-22\r\n==================\r\n\r\n  * deps: send@0.10.1\r\n    - deps: on-finished@~2.1.1\r\n\r\n1.7.0 / 2014-10-15\r\n==================\r\n\r\n  * deps: send@0.10.0\r\n    - deps: debug@~2.1.0\r\n    - deps: depd@~1.0.0\r\n    - deps: etag@~1.5.0\r\n\r\n1.6.5 / 2015-02-04\r\n==================\r\n\r\n  * Fix potential open redirect when mounted at root\r\n    - Back-ported from v1.7.2\r\n\r\n1.6.4 / 2014-10-08\r\n==================\r\n\r\n  * Fix redirect loop when index file serving disabled\r\n\r\n1.6.3 / 2014-09-24\r\n==================\r\n\r\n  * deps: send@0.9.3\r\n    - deps: etag@~1.4.0\r\n\r\n1.6.2 / 2014-09-15\r\n==================\r\n\r\n  * deps: send@0.9.2\r\n    - deps: depd@0.4.5\r\n    - deps: etag@~1.3.1\r\n    - deps: range-parser@~1.0.2\r\n\r\n1.6.1 / 2014-09-07\r\n==================\r\n\r\n  * deps: send@0.9.1\r\n    - deps: fresh@0.2.4\r\n\r\n1.6.0 / 2014-09-07\r\n==================\r\n\r\n  * deps: send@0.9.0\r\n    - Add `lastModified` option\r\n    - Use `etag` to generate `ETag` header\r\n    - deps: debug@~2.0.0\r\n\r\n1.5.4 / 2014-09-04\r\n==================\r\n\r\n  * deps: send@0.8.5\r\n    - Fix a path traversal issue when using `root`\r\n    - Fix malicious path detection for empty string path\r\n\r\n1.5.3 / 2014-08-17\r\n==================\r\n\r\n  * deps: send@0.8.3\r\n\r\n1.5.2 / 2014-08-14\r\n==================\r\n\r\n  * deps: send@0.8.2\r\n    - Work around `fd` leak in Node.js 0.10 for `fs.ReadStream`\r\n\r\n1.5.1 / 2014-08-09\r\n==================\r\n\r\n  * Fix parsing of weird `req.originalUrl` values\r\n  * deps: parseurl@~1.3.0\r\n  * deps: utils-merge@1.0.0\r\n\r\n1.5.0 / 2014-08-05\r\n==================\r\n\r\n  * deps: send@0.8.1\r\n    - Add `extensions` option\r\n\r\n1.4.4 / 2014-08-04\r\n==================\r\n\r\n  * deps: send@0.7.4\r\n    - Fix serving index files without root dir\r\n\r\n1.4.3 / 2014-07-29\r\n==================\r\n\r\n  * deps: send@0.7.3\r\n    - Fix incorrect 403 on Windows and Node.js 0.11\r\n\r\n1.4.2 / 2014-07-27\r\n==================\r\n\r\n  * deps: send@0.7.2\r\n    - deps: depd@0.4.4\r\n\r\n1.4.1 / 2014-07-26\r\n==================\r\n\r\n  * deps: send@0.7.1\r\n    - deps: depd@0.4.3\r\n\r\n1.4.0 / 2014-07-21\r\n==================\r\n\r\n  * deps: parseurl@~1.2.0\r\n    - Cache URLs based on original value\r\n    - Remove no-longer-needed URL mis-parse work-around\r\n    - Simplify the \"fast-path\" `RegExp`\r\n  * deps: send@0.7.0\r\n    - Add `dotfiles` option\r\n    - deps: debug@1.0.4\r\n    - deps: depd@0.4.2\r\n\r\n1.3.2 / 2014-07-11\r\n==================\r\n\r\n  * deps: send@0.6.0\r\n    - Cap `maxAge` value to 1 year\r\n    - deps: debug@1.0.3\r\n\r\n1.3.1 / 2014-07-09\r\n==================\r\n\r\n  * deps: parseurl@~1.1.3\r\n    - faster parsing of href-only URLs\r\n\r\n1.3.0 / 2014-06-28\r\n==================\r\n\r\n  * Add `setHeaders` option\r\n  * Include HTML link in redirect response\r\n  * deps: send@0.5.0\r\n    - Accept string for `maxAge` (converted by `ms`)\r\n\r\n1.2.3 / 2014-06-11\r\n==================\r\n\r\n  * deps: send@0.4.3\r\n    - Do not throw un-catchable error on file open race condition\r\n    - Use `escape-html` for HTML escaping\r\n    - deps: debug@1.0.2\r\n    - deps: finished@1.2.2\r\n    - deps: fresh@0.2.2\r\n\r\n1.2.2 / 2014-06-09\r\n==================\r\n\r\n  * deps: send@0.4.2\r\n    - fix \"event emitter leak\" warnings\r\n    - deps: debug@1.0.1\r\n    - deps: finished@1.2.1\r\n\r\n1.2.1 / 2014-06-02\r\n==================\r\n\r\n  * use `escape-html` for escaping\r\n  * deps: send@0.4.1\r\n    - Send `max-age` in `Cache-Control` in correct format\r\n\r\n1.2.0 / 2014-05-29\r\n==================\r\n\r\n  * deps: send@0.4.0\r\n    - Calculate ETag with md5 for reduced collisions\r\n    - Fix wrong behavior when index file matches directory\r\n    - Ignore stream errors after request ends\r\n    - Skip directories in index file search\r\n    - deps: debug@0.8.1\r\n\r\n1.1.0 / 2014-04-24\r\n==================\r\n\r\n  * Accept options directly to `send` module\r\n  * deps: send@0.3.0\r\n\r\n1.0.4 / 2014-04-07\r\n==================\r\n\r\n  * Resolve relative paths at middleware setup\r\n  * Use parseurl to parse the URL from request\r\n\r\n1.0.3 / 2014-03-20\r\n==================\r\n\r\n  * Do not rely on connect-like environments\r\n\r\n1.0.2 / 2014-03-06\r\n==================\r\n\r\n  * deps: send@0.2.0\r\n\r\n1.0.1 / 2014-03-05\r\n==================\r\n\r\n  * Add mime export for back-compat\r\n\r\n1.0.0 / 2014-03-05\r\n==================\r\n\r\n  * Genesis from `connect`\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/serve-static/HISTORY.md b/node_modules/serve-static/HISTORY.md
--- a/node_modules/serve-static/HISTORY.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/serve-static/HISTORY.md	(date 1753913035118)
@@ -1,3 +1,19 @@
+1.16.2 / 2024-09-11
+===================
+
+* deps: encodeurl@~2.0.0
+
+1.16.1 / 2024-09-11
+===================
+
+* deps: send@0.19.0
+
+1.16.0 / 2024-09-10
+===================
+
+* Remove link renderization in html while redirecting
+
+
 1.15.0 / 2022-03-24
 ===================
 
Index: node_modules/semver/internal/constants.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// Note: this is the semver.org version of the spec that it implements\r\n// Not necessarily the package version of this code.\r\nconst SEMVER_SPEC_VERSION = '2.0.0'\r\n\r\nconst MAX_LENGTH = 256\r\nconst MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\r\n/* istanbul ignore next */ 9007199254740991\r\n\r\n// Max safe segment length for coercion.\r\nconst MAX_SAFE_COMPONENT_LENGTH = 16\r\n\r\n// Max safe length for a build identifier. The max length minus 6 characters for\r\n// the shortest version with a build 0.0.0+BUILD.\r\nconst MAX_SAFE_BUILD_LENGTH = MAX_LENGTH - 6\r\n\r\nconst RELEASE_TYPES = [\r\n  'major',\r\n  'premajor',\r\n  'minor',\r\n  'preminor',\r\n  'patch',\r\n  'prepatch',\r\n  'prerelease',\r\n]\r\n\r\nmodule.exports = {\r\n  MAX_LENGTH,\r\n  MAX_SAFE_COMPONENT_LENGTH,\r\n  MAX_SAFE_BUILD_LENGTH,\r\n  MAX_SAFE_INTEGER,\r\n  RELEASE_TYPES,\r\n  SEMVER_SPEC_VERSION,\r\n  FLAG_INCLUDE_PRERELEASE: 0b001,\r\n  FLAG_LOOSE: 0b010,\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/internal/constants.js b/node_modules/semver/internal/constants.js
--- a/node_modules/semver/internal/constants.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/internal/constants.js	(date 1753913035298)
@@ -1,3 +1,5 @@
+'use strict'
+
 // Note: this is the semver.org version of the spec that it implements
 // Not necessarily the package version of this code.
 const SEMVER_SPEC_VERSION = '2.0.0'
Index: node_modules/serve-static/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*!\r\n * serve-static\r\n * Copyright(c) 2010 Sencha Inc.\r\n * Copyright(c) 2011 TJ Holowaychuk\r\n * Copyright(c) 2014-2016 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict'\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar encodeUrl = require('encodeurl')\r\nvar escapeHtml = require('escape-html')\r\nvar parseUrl = require('parseurl')\r\nvar resolve = require('path').resolve\r\nvar send = require('send')\r\nvar url = require('url')\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = serveStatic\r\nmodule.exports.mime = send.mime\r\n\r\n/**\r\n * @param {string} root\r\n * @param {object} [options]\r\n * @return {function}\r\n * @public\r\n */\r\n\r\nfunction serveStatic (root, options) {\r\n  if (!root) {\r\n    throw new TypeError('root path required')\r\n  }\r\n\r\n  if (typeof root !== 'string') {\r\n    throw new TypeError('root path must be a string')\r\n  }\r\n\r\n  // copy options object\r\n  var opts = Object.create(options || null)\r\n\r\n  // fall-though\r\n  var fallthrough = opts.fallthrough !== false\r\n\r\n  // default redirect\r\n  var redirect = opts.redirect !== false\r\n\r\n  // headers listener\r\n  var setHeaders = opts.setHeaders\r\n\r\n  if (setHeaders && typeof setHeaders !== 'function') {\r\n    throw new TypeError('option setHeaders must be function')\r\n  }\r\n\r\n  // setup options for send\r\n  opts.maxage = opts.maxage || opts.maxAge || 0\r\n  opts.root = resolve(root)\r\n\r\n  // construct directory listener\r\n  var onDirectory = redirect\r\n    ? createRedirectDirectoryListener()\r\n    : createNotFoundDirectoryListener()\r\n\r\n  return function serveStatic (req, res, next) {\r\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\r\n      if (fallthrough) {\r\n        return next()\r\n      }\r\n\r\n      // method not allowed\r\n      res.statusCode = 405\r\n      res.setHeader('Allow', 'GET, HEAD')\r\n      res.setHeader('Content-Length', '0')\r\n      res.end()\r\n      return\r\n    }\r\n\r\n    var forwardError = !fallthrough\r\n    var originalUrl = parseUrl.original(req)\r\n    var path = parseUrl(req).pathname\r\n\r\n    // make sure redirect occurs at mount\r\n    if (path === '/' && originalUrl.pathname.substr(-1) !== '/') {\r\n      path = ''\r\n    }\r\n\r\n    // create send stream\r\n    var stream = send(req, path, opts)\r\n\r\n    // add directory handler\r\n    stream.on('directory', onDirectory)\r\n\r\n    // add headers listener\r\n    if (setHeaders) {\r\n      stream.on('headers', setHeaders)\r\n    }\r\n\r\n    // add file listener for fallthrough\r\n    if (fallthrough) {\r\n      stream.on('file', function onFile () {\r\n        // once file is determined, always forward error\r\n        forwardError = true\r\n      })\r\n    }\r\n\r\n    // forward errors\r\n    stream.on('error', function error (err) {\r\n      if (forwardError || !(err.statusCode < 500)) {\r\n        next(err)\r\n        return\r\n      }\r\n\r\n      next()\r\n    })\r\n\r\n    // pipe\r\n    stream.pipe(res)\r\n  }\r\n}\r\n\r\n/**\r\n * Collapse all leading slashes into a single slash\r\n * @private\r\n */\r\nfunction collapseLeadingSlashes (str) {\r\n  for (var i = 0; i < str.length; i++) {\r\n    if (str.charCodeAt(i) !== 0x2f /* / */) {\r\n      break\r\n    }\r\n  }\r\n\r\n  return i > 1\r\n    ? '/' + str.substr(i)\r\n    : str\r\n}\r\n\r\n/**\r\n * Create a minimal HTML document.\r\n *\r\n * @param {string} title\r\n * @param {string} body\r\n * @private\r\n */\r\n\r\nfunction createHtmlDocument (title, body) {\r\n  return '<!DOCTYPE html>\\n' +\r\n    '<html lang=\"en\">\\n' +\r\n    '<head>\\n' +\r\n    '<meta charset=\"utf-8\">\\n' +\r\n    '<title>' + title + '</title>\\n' +\r\n    '</head>\\n' +\r\n    '<body>\\n' +\r\n    '<pre>' + body + '</pre>\\n' +\r\n    '</body>\\n' +\r\n    '</html>\\n'\r\n}\r\n\r\n/**\r\n * Create a directory listener that just 404s.\r\n * @private\r\n */\r\n\r\nfunction createNotFoundDirectoryListener () {\r\n  return function notFound () {\r\n    this.error(404)\r\n  }\r\n}\r\n\r\n/**\r\n * Create a directory listener that performs a redirect.\r\n * @private\r\n */\r\n\r\nfunction createRedirectDirectoryListener () {\r\n  return function redirect (res) {\r\n    if (this.hasTrailingSlash()) {\r\n      this.error(404)\r\n      return\r\n    }\r\n\r\n    // get original URL\r\n    var originalUrl = parseUrl.original(this.req)\r\n\r\n    // append trailing slash\r\n    originalUrl.path = null\r\n    originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + '/')\r\n\r\n    // reformat the URL\r\n    var loc = encodeUrl(url.format(originalUrl))\r\n    var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' +\r\n      escapeHtml(loc) + '</a>')\r\n\r\n    // send redirect response\r\n    res.statusCode = 301\r\n    res.setHeader('Content-Type', 'text/html; charset=UTF-8')\r\n    res.setHeader('Content-Length', Buffer.byteLength(doc))\r\n    res.setHeader('Content-Security-Policy', \"default-src 'none'\")\r\n    res.setHeader('X-Content-Type-Options', 'nosniff')\r\n    res.setHeader('Location', loc)\r\n    res.end(doc)\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/serve-static/index.js b/node_modules/serve-static/index.js
--- a/node_modules/serve-static/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/serve-static/index.js	(date 1753913035115)
@@ -195,8 +195,7 @@
 
     // reformat the URL
     var loc = encodeUrl(url.format(originalUrl))
-    var doc = createHtmlDocument('Redirecting', 'Redirecting to <a href="' + escapeHtml(loc) + '">' +
-      escapeHtml(loc) + '</a>')
+    var doc = createHtmlDocument('Redirecting', 'Redirecting to ' + escapeHtml(loc))
 
     // send redirect response
     res.statusCode = 301
Index: node_modules/semver/internal/identifiers.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const numeric = /^[0-9]+$/\r\nconst compareIdentifiers = (a, b) => {\r\n  const anum = numeric.test(a)\r\n  const bnum = numeric.test(b)\r\n\r\n  if (anum && bnum) {\r\n    a = +a\r\n    b = +b\r\n  }\r\n\r\n  return a === b ? 0\r\n    : (anum && !bnum) ? -1\r\n    : (bnum && !anum) ? 1\r\n    : a < b ? -1\r\n    : 1\r\n}\r\n\r\nconst rcompareIdentifiers = (a, b) => compareIdentifiers(b, a)\r\n\r\nmodule.exports = {\r\n  compareIdentifiers,\r\n  rcompareIdentifiers,\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/internal/identifiers.js b/node_modules/semver/internal/identifiers.js
--- a/node_modules/semver/internal/identifiers.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/internal/identifiers.js	(date 1753913035306)
@@ -1,3 +1,5 @@
+'use strict'
+
 const numeric = /^[0-9]+$/
 const compareIdentifiers = (a, b) => {
   const anum = numeric.test(a)
Index: node_modules/semver/internal/lrucache.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>class LRUCache {\r\n  constructor () {\r\n    this.max = 1000\r\n    this.map = new Map()\r\n  }\r\n\r\n  get (key) {\r\n    const value = this.map.get(key)\r\n    if (value === undefined) {\r\n      return undefined\r\n    } else {\r\n      // Remove the key from the map and add it to the end\r\n      this.map.delete(key)\r\n      this.map.set(key, value)\r\n      return value\r\n    }\r\n  }\r\n\r\n  delete (key) {\r\n    return this.map.delete(key)\r\n  }\r\n\r\n  set (key, value) {\r\n    const deleted = this.delete(key)\r\n\r\n    if (!deleted && value !== undefined) {\r\n      // If cache is full, delete the least recently used item\r\n      if (this.map.size >= this.max) {\r\n        const firstKey = this.map.keys().next().value\r\n        this.delete(firstKey)\r\n      }\r\n\r\n      this.map.set(key, value)\r\n    }\r\n\r\n    return this\r\n  }\r\n}\r\n\r\nmodule.exports = LRUCache\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/internal/lrucache.js b/node_modules/semver/internal/lrucache.js
--- a/node_modules/semver/internal/lrucache.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/internal/lrucache.js	(date 1753913035310)
@@ -1,3 +1,5 @@
+'use strict'
+
 class LRUCache {
   constructor () {
     this.max = 1000
Index: node_modules/semver/functions/lt.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const compare = require('./compare')\r\nconst lt = (a, b, loose) => compare(a, b, loose) < 0\r\nmodule.exports = lt\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/lt.js b/node_modules/semver/functions/lt.js
--- a/node_modules/semver/functions/lt.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/lt.js	(date 1753913035311)
@@ -1,3 +1,5 @@
+'use strict'
+
 const compare = require('./compare')
 const lt = (a, b, loose) => compare(a, b, loose) < 0
 module.exports = lt
Index: node_modules/semver/functions/patch.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const SemVer = require('../classes/semver')\r\nconst patch = (a, loose) => new SemVer(a, loose).patch\r\nmodule.exports = patch\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/patch.js b/node_modules/semver/functions/patch.js
--- a/node_modules/semver/functions/patch.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/patch.js	(date 1753913035321)
@@ -1,3 +1,5 @@
+'use strict'
+
 const SemVer = require('../classes/semver')
 const patch = (a, loose) => new SemVer(a, loose).patch
 module.exports = patch
Index: node_modules/semver/functions/eq.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const compare = require('./compare')\r\nconst eq = (a, b, loose) => compare(a, b, loose) === 0\r\nmodule.exports = eq\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/eq.js b/node_modules/semver/functions/eq.js
--- a/node_modules/semver/functions/eq.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/eq.js	(date 1753913035301)
@@ -1,3 +1,5 @@
+'use strict'
+
 const compare = require('./compare')
 const eq = (a, b, loose) => compare(a, b, loose) === 0
 module.exports = eq
Index: node_modules/semver/functions/lte.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const compare = require('./compare')\r\nconst lte = (a, b, loose) => compare(a, b, loose) <= 0\r\nmodule.exports = lte\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/lte.js b/node_modules/semver/functions/lte.js
--- a/node_modules/semver/functions/lte.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/lte.js	(date 1753913035311)
@@ -1,3 +1,5 @@
+'use strict'
+
 const compare = require('./compare')
 const lte = (a, b, loose) => compare(a, b, loose) <= 0
 module.exports = lte
Index: node_modules/side-channel/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar GetIntrinsic = require('get-intrinsic');\r\nvar callBound = require('call-bind/callBound');\r\nvar inspect = require('object-inspect');\r\n\r\nvar $TypeError = require('es-errors/type');\r\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\r\nvar $Map = GetIntrinsic('%Map%', true);\r\n\r\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\r\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\r\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\r\nvar $mapGet = callBound('Map.prototype.get', true);\r\nvar $mapSet = callBound('Map.prototype.set', true);\r\nvar $mapHas = callBound('Map.prototype.has', true);\r\n\r\n/*\r\n* This function traverses the list returning the node corresponding to the given key.\r\n*\r\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list. By doing so, all the recently used nodes can be accessed relatively quickly.\r\n*/\r\n/** @type {import('.').listGetNode} */\r\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\r\n\t/** @type {typeof list | NonNullable<(typeof list)['next']>} */\r\n\tvar prev = list;\r\n\t/** @type {(typeof list)['next']} */\r\n\tvar curr;\r\n\tfor (; (curr = prev.next) !== null; prev = curr) {\r\n\t\tif (curr.key === key) {\r\n\t\t\tprev.next = curr.next;\r\n\t\t\t// eslint-disable-next-line no-extra-parens\r\n\t\t\tcurr.next = /** @type {NonNullable<typeof list.next>} */ (list.next);\r\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\r\n\t\t\treturn curr;\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/** @type {import('.').listGet} */\r\nvar listGet = function (objects, key) {\r\n\tvar node = listGetNode(objects, key);\r\n\treturn node && node.value;\r\n};\r\n/** @type {import('.').listSet} */\r\nvar listSet = function (objects, key, value) {\r\n\tvar node = listGetNode(objects, key);\r\n\tif (node) {\r\n\t\tnode.value = value;\r\n\t} else {\r\n\t\t// Prepend the new node to the beginning of the list\r\n\t\tobjects.next = /** @type {import('.').ListNode<typeof value>} */ ({ // eslint-disable-line no-param-reassign, no-extra-parens\r\n\t\t\tkey: key,\r\n\t\t\tnext: objects.next,\r\n\t\t\tvalue: value\r\n\t\t});\r\n\t}\r\n};\r\n/** @type {import('.').listHas} */\r\nvar listHas = function (objects, key) {\r\n\treturn !!listGetNode(objects, key);\r\n};\r\n\r\n/** @type {import('.')} */\r\nmodule.exports = function getSideChannel() {\r\n\t/** @type {WeakMap<object, unknown>} */ var $wm;\r\n\t/** @type {Map<object, unknown>} */ var $m;\r\n\t/** @type {import('.').RootNode<unknown>} */ var $o;\r\n\r\n\t/** @type {import('.').Channel} */\r\n\tvar channel = {\r\n\t\tassert: function (key) {\r\n\t\t\tif (!channel.has(key)) {\r\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\r\n\t\t\t}\r\n\t\t},\r\n\t\tget: function (key) { // eslint-disable-line consistent-return\r\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\r\n\t\t\t\tif ($wm) {\r\n\t\t\t\t\treturn $weakMapGet($wm, key);\r\n\t\t\t\t}\r\n\t\t\t} else if ($Map) {\r\n\t\t\t\tif ($m) {\r\n\t\t\t\t\treturn $mapGet($m, key);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\r\n\t\t\t\t\treturn listGet($o, key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\thas: function (key) {\r\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\r\n\t\t\t\tif ($wm) {\r\n\t\t\t\t\treturn $weakMapHas($wm, key);\r\n\t\t\t\t}\r\n\t\t\t} else if ($Map) {\r\n\t\t\t\tif ($m) {\r\n\t\t\t\t\treturn $mapHas($m, key);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\r\n\t\t\t\t\treturn listHas($o, key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tset: function (key, value) {\r\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\r\n\t\t\t\tif (!$wm) {\r\n\t\t\t\t\t$wm = new $WeakMap();\r\n\t\t\t\t}\r\n\t\t\t\t$weakMapSet($wm, key, value);\r\n\t\t\t} else if ($Map) {\r\n\t\t\t\tif (!$m) {\r\n\t\t\t\t\t$m = new $Map();\r\n\t\t\t\t}\r\n\t\t\t\t$mapSet($m, key, value);\r\n\t\t\t} else {\r\n\t\t\t\tif (!$o) {\r\n\t\t\t\t\t// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head\r\n\t\t\t\t\t$o = { key: {}, next: null };\r\n\t\t\t\t}\r\n\t\t\t\tlistSet($o, key, value);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn channel;\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/side-channel/index.js b/node_modules/side-channel/index.js
--- a/node_modules/side-channel/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/side-channel/index.js	(date 1753913035064)
@@ -1,129 +1,43 @@
 'use strict';
 
-var GetIntrinsic = require('get-intrinsic');
-var callBound = require('call-bind/callBound');
-var inspect = require('object-inspect');
-
 var $TypeError = require('es-errors/type');
-var $WeakMap = GetIntrinsic('%WeakMap%', true);
-var $Map = GetIntrinsic('%Map%', true);
-
-var $weakMapGet = callBound('WeakMap.prototype.get', true);
-var $weakMapSet = callBound('WeakMap.prototype.set', true);
-var $weakMapHas = callBound('WeakMap.prototype.has', true);
-var $mapGet = callBound('Map.prototype.get', true);
-var $mapSet = callBound('Map.prototype.set', true);
-var $mapHas = callBound('Map.prototype.has', true);
+var inspect = require('object-inspect');
+var getSideChannelList = require('side-channel-list');
+var getSideChannelMap = require('side-channel-map');
+var getSideChannelWeakMap = require('side-channel-weakmap');
 
-/*
-* This function traverses the list returning the node corresponding to the given key.
-*
-* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list. By doing so, all the recently used nodes can be accessed relatively quickly.
-*/
-/** @type {import('.').listGetNode} */
-var listGetNode = function (list, key) { // eslint-disable-line consistent-return
-	/** @type {typeof list | NonNullable<(typeof list)['next']>} */
-	var prev = list;
-	/** @type {(typeof list)['next']} */
-	var curr;
-	for (; (curr = prev.next) !== null; prev = curr) {
-		if (curr.key === key) {
-			prev.next = curr.next;
-			// eslint-disable-next-line no-extra-parens
-			curr.next = /** @type {NonNullable<typeof list.next>} */ (list.next);
-			list.next = curr; // eslint-disable-line no-param-reassign
-			return curr;
-		}
-	}
-};
-
-/** @type {import('.').listGet} */
-var listGet = function (objects, key) {
-	var node = listGetNode(objects, key);
-	return node && node.value;
-};
-/** @type {import('.').listSet} */
-var listSet = function (objects, key, value) {
-	var node = listGetNode(objects, key);
-	if (node) {
-		node.value = value;
-	} else {
-		// Prepend the new node to the beginning of the list
-		objects.next = /** @type {import('.').ListNode<typeof value>} */ ({ // eslint-disable-line no-param-reassign, no-extra-parens
-			key: key,
-			next: objects.next,
-			value: value
-		});
-	}
-};
-/** @type {import('.').listHas} */
-var listHas = function (objects, key) {
-	return !!listGetNode(objects, key);
-};
+var makeChannel = getSideChannelWeakMap || getSideChannelMap || getSideChannelList;
 
 /** @type {import('.')} */
 module.exports = function getSideChannel() {
-	/** @type {WeakMap<object, unknown>} */ var $wm;
-	/** @type {Map<object, unknown>} */ var $m;
-	/** @type {import('.').RootNode<unknown>} */ var $o;
+	/** @typedef {ReturnType<typeof getSideChannel>} Channel */
 
-	/** @type {import('.').Channel} */
+	/** @type {Channel | undefined} */ var $channelData;
+
+	/** @type {Channel} */
 	var channel = {
 		assert: function (key) {
 			if (!channel.has(key)) {
 				throw new $TypeError('Side channel does not contain ' + inspect(key));
 			}
 		},
-		get: function (key) { // eslint-disable-line consistent-return
-			if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
-				if ($wm) {
-					return $weakMapGet($wm, key);
-				}
-			} else if ($Map) {
-				if ($m) {
-					return $mapGet($m, key);
-				}
-			} else {
-				if ($o) { // eslint-disable-line no-lonely-if
-					return listGet($o, key);
-				}
-			}
+		'delete': function (key) {
+			return !!$channelData && $channelData['delete'](key);
+		},
+		get: function (key) {
+			return $channelData && $channelData.get(key);
 		},
 		has: function (key) {
-			if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
-				if ($wm) {
-					return $weakMapHas($wm, key);
-				}
-			} else if ($Map) {
-				if ($m) {
-					return $mapHas($m, key);
-				}
-			} else {
-				if ($o) { // eslint-disable-line no-lonely-if
-					return listHas($o, key);
-				}
-			}
-			return false;
+			return !!$channelData && $channelData.has(key);
 		},
 		set: function (key, value) {
-			if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
-				if (!$wm) {
-					$wm = new $WeakMap();
-				}
-				$weakMapSet($wm, key, value);
-			} else if ($Map) {
-				if (!$m) {
-					$m = new $Map();
-				}
-				$mapSet($m, key, value);
-			} else {
-				if (!$o) {
-					// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head
-					$o = { key: {}, next: null };
-				}
-				listSet($o, key, value);
+			if (!$channelData) {
+				$channelData = makeChannel();
 			}
+
+			$channelData.set(key, value);
 		}
 	};
+	// @ts-expect-error TODO: figure out why this is erroring
 	return channel;
 };
Index: node_modules/semver/functions/rcompare.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const compare = require('./compare')\r\nconst rcompare = (a, b, loose) => compare(b, a, loose)\r\nmodule.exports = rcompare\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/rcompare.js b/node_modules/semver/functions/rcompare.js
--- a/node_modules/semver/functions/rcompare.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/rcompare.js	(date 1753913035325)
@@ -1,3 +1,5 @@
+'use strict'
+
 const compare = require('./compare')
 const rcompare = (a, b, loose) => compare(b, a, loose)
 module.exports = rcompare
Index: node_modules/side-channel/.eslintrc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n\t\"root\": true,\r\n\r\n\t\"extends\": \"@ljharb\",\r\n\r\n\t\"rules\": {\r\n\t\t\"max-lines-per-function\": 0,\r\n\t\t\"multiline-comment-style\": 1,\r\n\t\t\"new-cap\": [2, { \"capIsNewExceptions\": [\"GetIntrinsic\"] }],\r\n\t},\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/side-channel/.eslintrc b/node_modules/side-channel/.eslintrc
--- a/node_modules/side-channel/.eslintrc	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/side-channel/.eslintrc	(date 1753913035061)
@@ -4,6 +4,7 @@
 	"extends": "@ljharb",
 
 	"rules": {
+		"id-length": 0,
 		"max-lines-per-function": 0,
 		"multiline-comment-style": 1,
 		"new-cap": [2, { "capIsNewExceptions": ["GetIntrinsic"] }],
Index: node_modules/semver/functions/compare-loose.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const compare = require('./compare')\r\nconst compareLoose = (a, b) => compare(a, b, true)\r\nmodule.exports = compareLoose\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/compare-loose.js b/node_modules/semver/functions/compare-loose.js
--- a/node_modules/semver/functions/compare-loose.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/compare-loose.js	(date 1753913035296)
@@ -1,3 +1,5 @@
+'use strict'
+
 const compare = require('./compare')
 const compareLoose = (a, b) => compare(a, b, true)
 module.exports = compareLoose
Index: node_modules/side-channel/CHANGELOG.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [v1.0.6](https://github.com/ljharb/side-channel/compare/v1.0.5...v1.0.6) - 2024-02-29\r\n\r\n### Commits\r\n\r\n- add types [`9beef66`](https://github.com/ljharb/side-channel/commit/9beef6643e6d717ea57bedabf86448123a7dd9e9)\r\n- [meta] simplify `exports` [`4334cf9`](https://github.com/ljharb/side-channel/commit/4334cf9df654151504c383b62a2f9ebdc8d9d5ac)\r\n- [Deps] update `call-bind` [`d6043c4`](https://github.com/ljharb/side-channel/commit/d6043c4d8f4d7be9037dd0f0419c7a2e0e39ec6a)\r\n- [Dev Deps] update `tape` [`6aca376`](https://github.com/ljharb/side-channel/commit/6aca3761868dc8cd5ff7fd9799bf6b95e09a6eb0)\r\n\r\n## [v1.0.5](https://github.com/ljharb/side-channel/compare/v1.0.4...v1.0.5) - 2024-02-06\r\n\r\n### Commits\r\n\r\n- [actions] reuse common workflows [`3d2e1ff`](https://github.com/ljharb/side-channel/commit/3d2e1ffd16dd6eaaf3e40ff57951f840d2d63c04)\r\n- [meta] use `npmignore` to autogenerate an npmignore file [`04296ea`](https://github.com/ljharb/side-channel/commit/04296ea17d1544b0a5d20fd5bfb31aa4f6513eb9)\r\n- [meta] add `.editorconfig`; add `eclint` [`130f0a6`](https://github.com/ljharb/side-channel/commit/130f0a6adbc04d385c7456a601d38344dce3d6a9)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `safe-publish-latest`, `tape` [`d480c2f`](https://github.com/ljharb/side-channel/commit/d480c2fbe757489ae9b4275491ffbcc3ac4725e9)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `tape` [`ecbe70e`](https://github.com/ljharb/side-channel/commit/ecbe70e53a418234081a77971fec1fdfae20c841)\r\n- [actions] update rebase action [`75240b9`](https://github.com/ljharb/side-channel/commit/75240b9963b816e8846400d2287cb68f88c7fba7)\r\n- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `npmignore`, `tape` [`ae8d281`](https://github.com/ljharb/side-channel/commit/ae8d281572430099109870fd9430d2ca3f320b8d)\r\n- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `tape` [`7125b88`](https://github.com/ljharb/side-channel/commit/7125b885fd0eacad4fee9b073b72d14065ece278)\r\n- [Deps] update `call-bind`, `get-intrinsic`, `object-inspect` [`82577c9`](https://github.com/ljharb/side-channel/commit/82577c9796304519139a570f82a317211b5f3b86)\r\n- [Deps] update `call-bind`, `get-intrinsic`, `object-inspect` [`550aadf`](https://github.com/ljharb/side-channel/commit/550aadf20475a6081fd70304cc54f77259a5c8a8)\r\n- [Tests] increase coverage [`5130877`](https://github.com/ljharb/side-channel/commit/5130877a7b27c862e64e6d1c12a178b28808859d)\r\n- [Deps] update `get-intrinsic`, `object-inspect` [`ba0194c`](https://github.com/ljharb/side-channel/commit/ba0194c505b1a8a0427be14cadd5b8a46d4d01b8)\r\n- [meta] add missing `engines.node` [`985fd24`](https://github.com/ljharb/side-channel/commit/985fd249663cb06617a693a94fe08cad12f5cb70)\r\n- [Refactor] use `es-errors`, so things that only need those do not need `get-intrinsic` [`40227a8`](https://github.com/ljharb/side-channel/commit/40227a87b01709ad2c0eebf87eb4223a800099b9)\r\n- [Deps] update `get-intrinsic` [`a989b40`](https://github.com/ljharb/side-channel/commit/a989b4024958737ae7be9fbffdeff2078f33a0fd)\r\n- [Deps] update `object-inspect` [`aec42d2`](https://github.com/ljharb/side-channel/commit/aec42d2ec541a31aaa02475692c87d489237d9a3)\r\n\r\n## [v1.0.4](https://github.com/ljharb/side-channel/compare/v1.0.3...v1.0.4) - 2020-12-29\r\n\r\n### Commits\r\n\r\n- [Tests] migrate tests to Github Actions [`10909cb`](https://github.com/ljharb/side-channel/commit/10909cbf8ce9c0bf96f604cf13d7ffd5a22c2d40)\r\n- [Refactor] Use a linked list rather than an array, and move accessed nodes to the beginning [`195613f`](https://github.com/ljharb/side-channel/commit/195613f28b5c1e6072ef0b61b5beebaf2b6a304e)\r\n- [meta] do not publish github action workflow files [`290ec29`](https://github.com/ljharb/side-channel/commit/290ec29cd21a60585145b4a7237ec55228c52c27)\r\n- [Tests] run `nyc` on all tests; use `tape` runner [`ea6d030`](https://github.com/ljharb/side-channel/commit/ea6d030ff3fe6be2eca39e859d644c51ecd88869)\r\n- [actions] add \"Allow Edits\" workflow [`d464d8f`](https://github.com/ljharb/side-channel/commit/d464d8fe52b5eddf1504a0ed97f0941a90f32c15)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog` [`02daca8`](https://github.com/ljharb/side-channel/commit/02daca87c6809821c97be468d1afa2f5ef447383)\r\n- [Refactor] use `call-bind` and `get-intrinsic` instead of `es-abstract` [`e09d481`](https://github.com/ljharb/side-channel/commit/e09d481528452ebafa5cdeae1af665c35aa2deee)\r\n- [Deps] update `object.assign` [`ee83aa8`](https://github.com/ljharb/side-channel/commit/ee83aa81df313b5e46319a63adb05cf0c179079a)\r\n- [actions] update rebase action to use checkout v2 [`7726b0b`](https://github.com/ljharb/side-channel/commit/7726b0b058b632fccea709f58960871defaaa9d7)\r\n\r\n## [v1.0.3](https://github.com/ljharb/side-channel/compare/v1.0.2...v1.0.3) - 2020-08-23\r\n\r\n### Commits\r\n\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `tape` [`1f10561`](https://github.com/ljharb/side-channel/commit/1f105611ef3acf32dec8032ae5c0baa5e56bb868)\r\n- [Deps] update `es-abstract`, `object-inspect` [`bc20159`](https://github.com/ljharb/side-channel/commit/bc201597949a505e37cef9eaf24c7010831e6f03)\r\n- [Dev Deps] update `@ljharb/eslint-config`, `tape` [`b9b2b22`](https://github.com/ljharb/side-channel/commit/b9b2b225f9e0ea72a6ec2b89348f0bd690bc9ed1)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `tape` [`7055ab4`](https://github.com/ljharb/side-channel/commit/7055ab4de0860606efd2003674a74f1fe6ebc07e)\r\n- [Dev Deps] update `auto-changelog`; add `aud` [`d278c37`](https://github.com/ljharb/side-channel/commit/d278c37d08227be4f84aa769fcd919e73feeba40)\r\n- [actions] switch Automatic Rebase workflow to `pull_request_target` event [`3bcf982`](https://github.com/ljharb/side-channel/commit/3bcf982faa122745b39c33ce83d32fdf003741c6)\r\n- [Tests] only audit prod deps [`18d01c4`](https://github.com/ljharb/side-channel/commit/18d01c4015b82a3d75044c4d5ba7917b2eac01ec)\r\n- [Deps] update `es-abstract` [`6ab096d`](https://github.com/ljharb/side-channel/commit/6ab096d9de2b482cf5e0717e34e212f5b2b9bc9a)\r\n- [Dev Deps] update `tape` [`9dc174c`](https://github.com/ljharb/side-channel/commit/9dc174cc651dfd300b4b72da936a0a7eda5f9452)\r\n- [Deps] update `es-abstract` [`431d0f0`](https://github.com/ljharb/side-channel/commit/431d0f0ff11fbd2ae6f3115582a356d3a1cfce82)\r\n- [Deps] update `es-abstract` [`49869fd`](https://github.com/ljharb/side-channel/commit/49869fd323bf4453f0ba515c0fb265cf5ab7b932)\r\n- [meta] Add package.json to package's exports [`77d9cdc`](https://github.com/ljharb/side-channel/commit/77d9cdceb2a9e47700074f2ae0c0a202e7dac0d4)\r\n\r\n## [v1.0.2](https://github.com/ljharb/side-channel/compare/v1.0.1...v1.0.2) - 2019-12-20\r\n\r\n### Commits\r\n\r\n- [Dev Deps] update `@ljharb/eslint-config`, `tape` [`4a526df`](https://github.com/ljharb/side-channel/commit/4a526df44e4701566ed001ec78546193f818b082)\r\n- [Deps] update `es-abstract` [`d4f6e62`](https://github.com/ljharb/side-channel/commit/d4f6e629b6fb93a07415db7f30d3c90fd7f264fe)\r\n\r\n## [v1.0.1](https://github.com/ljharb/side-channel/compare/v1.0.0...v1.0.1) - 2019-12-01\r\n\r\n### Commits\r\n\r\n- [Fix] add missing \"exports\" [`d212907`](https://github.com/ljharb/side-channel/commit/d2129073abf0701a5343bf28aa2145617604dc2e)\r\n\r\n## v1.0.0 - 2019-12-01\r\n\r\n### Commits\r\n\r\n- Initial implementation [`dbebd3a`](https://github.com/ljharb/side-channel/commit/dbebd3a4b5ed64242f9a6810efe7c4214cd8cde4)\r\n- Initial tests [`73bdefe`](https://github.com/ljharb/side-channel/commit/73bdefe568c9076cf8c0b8719bc2141aec0e19b8)\r\n- Initial commit [`43c03e1`](https://github.com/ljharb/side-channel/commit/43c03e1c2849ec50a87b7a5cd76238a62b0b8770)\r\n- npm init [`5c090a7`](https://github.com/ljharb/side-channel/commit/5c090a765d66a5527d9889b89aeff78dee91348c)\r\n- [meta] add `auto-changelog` [`a5c4e56`](https://github.com/ljharb/side-channel/commit/a5c4e5675ec02d5eb4d84b4243aeea2a1d38fbec)\r\n- [actions] add automatic rebasing / merge commit blocking [`bab1683`](https://github.com/ljharb/side-channel/commit/bab1683d8f9754b086e94397699fdc645e0d7077)\r\n- [meta] add `funding` field; create FUNDING.yml [`63d7aea`](https://github.com/ljharb/side-channel/commit/63d7aeaf34f5650650ae97ca4b9fae685bd0937c)\r\n- [Tests] add `npm run lint` [`46a5a81`](https://github.com/ljharb/side-channel/commit/46a5a81705cd2664f83df232c01dbbf2ee952885)\r\n- Only apps should have lockfiles [`8b16b03`](https://github.com/ljharb/side-channel/commit/8b16b0305f00895d90c4e2e5773c854cfea0e448)\r\n- [meta] add `safe-publish-latest` [`2f098ef`](https://github.com/ljharb/side-channel/commit/2f098ef092a39399cfe548b19a1fc03c2fd2f490)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/side-channel/CHANGELOG.md b/node_modules/side-channel/CHANGELOG.md
--- a/node_modules/side-channel/CHANGELOG.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/side-channel/CHANGELOG.md	(date 1753913035068)
@@ -5,6 +5,21 @@
 The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
 and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
 
+## [v1.1.0](https://github.com/ljharb/side-channel/compare/v1.0.6...v1.1.0) - 2024-12-11
+
+### Commits
+
+- [Refactor] extract implementations to `side-channel-weakmap`, `side-channel-map`, `side-channel-list` [`ada5955`](https://github.com/ljharb/side-channel/commit/ada595549a5c4c6c853756d598846b180941c6da)
+- [New] add `channel.delete` [`c01d2d3`](https://github.com/ljharb/side-channel/commit/c01d2d3fd51dbb1ce6da72ad7916e61bd6172aad)
+- [types] improve types [`0c54356`](https://github.com/ljharb/side-channel/commit/0c5435651417df41b8cc1a5f7cdce8bffae68cde)
+- [readme] add content [`be24868`](https://github.com/ljharb/side-channel/commit/be248682ac294b0e22c883092c45985aa91c490a)
+- [actions] split out node 10-20, and 20+ [`c4488e2`](https://github.com/ljharb/side-channel/commit/c4488e241ef3d49a19fe266ac830a2e644305911)
+- [types] use shared tsconfig [`0e0d57c`](https://github.com/ljharb/side-channel/commit/0e0d57c2ff17c7b45c6cbd43ebcf553edc9e3adc)
+- [Dev Deps] update `@ljharb/eslint-config`, `@ljharb/tsconfig`, `@types/get-intrinsic`, `@types/object-inspect`, `@types/tape`, `auto-changelog`, `tape` [`fb4f622`](https://github.com/ljharb/side-channel/commit/fb4f622e64a99a1e40b6e5cd7691674a9dc429e4)
+- [Deps] update `call-bind`, `get-intrinsic`, `object-inspect` [`b78336b`](https://github.com/ljharb/side-channel/commit/b78336b886172d1b457d414ac9e28de8c5fecc78)
+- [Tests] replace `aud` with `npm audit` [`ee3ab46`](https://github.com/ljharb/side-channel/commit/ee3ab4690d954311c35115651bcfd45edd205aa1)
+- [Dev Deps] add missing peer dep [`c03e21a`](https://github.com/ljharb/side-channel/commit/c03e21a7def3b67cdc15ae22316884fefcb2f6a8)
+
 ## [v1.0.6](https://github.com/ljharb/side-channel/compare/v1.0.5...v1.0.6) - 2024-02-29
 
 ### Commits
Index: node_modules/semver/functions/diff.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const parse = require('./parse.js')\r\n\r\nconst diff = (version1, version2) => {\r\n  const v1 = parse(version1, null, true)\r\n  const v2 = parse(version2, null, true)\r\n  const comparison = v1.compare(v2)\r\n\r\n  if (comparison === 0) {\r\n    return null\r\n  }\r\n\r\n  const v1Higher = comparison > 0\r\n  const highVersion = v1Higher ? v1 : v2\r\n  const lowVersion = v1Higher ? v2 : v1\r\n  const highHasPre = !!highVersion.prerelease.length\r\n  const lowHasPre = !!lowVersion.prerelease.length\r\n\r\n  if (lowHasPre && !highHasPre) {\r\n    // Going from prerelease -> no prerelease requires some special casing\r\n\r\n    // If the low version has only a major, then it will always be a major\r\n    // Some examples:\r\n    // 1.0.0-1 -> 1.0.0\r\n    // 1.0.0-1 -> 1.1.1\r\n    // 1.0.0-1 -> 2.0.0\r\n    if (!lowVersion.patch && !lowVersion.minor) {\r\n      return 'major'\r\n    }\r\n\r\n    // Otherwise it can be determined by checking the high version\r\n\r\n    if (highVersion.patch) {\r\n      // anything higher than a patch bump would result in the wrong version\r\n      return 'patch'\r\n    }\r\n\r\n    if (highVersion.minor) {\r\n      // anything higher than a minor bump would result in the wrong version\r\n      return 'minor'\r\n    }\r\n\r\n    // bumping major/minor/patch all have same result\r\n    return 'major'\r\n  }\r\n\r\n  // add the `pre` prefix if we are going to a prerelease version\r\n  const prefix = highHasPre ? 'pre' : ''\r\n\r\n  if (v1.major !== v2.major) {\r\n    return prefix + 'major'\r\n  }\r\n\r\n  if (v1.minor !== v2.minor) {\r\n    return prefix + 'minor'\r\n  }\r\n\r\n  if (v1.patch !== v2.patch) {\r\n    return prefix + 'patch'\r\n  }\r\n\r\n  // high and low are preleases\r\n  return 'prerelease'\r\n}\r\n\r\nmodule.exports = diff\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/diff.js b/node_modules/semver/functions/diff.js
--- a/node_modules/semver/functions/diff.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/diff.js	(date 1753913035300)
@@ -1,3 +1,5 @@
+'use strict'
+
 const parse = require('./parse.js')
 
 const diff = (version1, version2) => {
@@ -27,20 +29,13 @@
       return 'major'
     }
 
-    // Otherwise it can be determined by checking the high version
-
-    if (highVersion.patch) {
-      // anything higher than a patch bump would result in the wrong version
-      return 'patch'
-    }
-
-    if (highVersion.minor) {
-      // anything higher than a minor bump would result in the wrong version
-      return 'minor'
+    // If the main part has no difference
+    if (lowVersion.compareMain(highVersion) === 0) {
+      if (lowVersion.minor && !lowVersion.patch) {
+        return 'minor'
+      }
+      return 'patch'
     }
-
-    // bumping major/minor/patch all have same result
-    return 'major'
   }
 
   // add the `pre` prefix if we are going to a prerelease version
Index: node_modules/semver/functions/compare-build.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const SemVer = require('../classes/semver')\r\nconst compareBuild = (a, b, loose) => {\r\n  const versionA = new SemVer(a, loose)\r\n  const versionB = new SemVer(b, loose)\r\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\r\n}\r\nmodule.exports = compareBuild\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/compare-build.js b/node_modules/semver/functions/compare-build.js
--- a/node_modules/semver/functions/compare-build.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/compare-build.js	(date 1753913035295)
@@ -1,3 +1,5 @@
+'use strict'
+
 const SemVer = require('../classes/semver')
 const compareBuild = (a, b, loose) => {
   const versionA = new SemVer(a, loose)
Index: node_modules/side-channel/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># side-channel\r\nStore information about any JS value in a side channel. Uses WeakMap if available.\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/side-channel/README.md b/node_modules/side-channel/README.md
--- a/node_modules/side-channel/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/side-channel/README.md	(date 1753913035068)
@@ -1,2 +1,61 @@
-# side-channel
+# side-channel <sup>[![Version Badge][npm-version-svg]][package-url]</sup>
+
+[![github actions][actions-image]][actions-url]
+[![coverage][codecov-image]][codecov-url]
+[![License][license-image]][license-url]
+[![Downloads][downloads-image]][downloads-url]
+
+[![npm badge][npm-badge-png]][package-url]
+
 Store information about any JS value in a side channel. Uses WeakMap if available.
+
+Warning: in an environment that lacks `WeakMap`, this implementation will leak memory until you `delete` the `key`.
+
+## Getting started
+
+```sh
+npm install --save side-channel
+```
+
+## Usage/Examples
+
+```js
+const assert = require('assert');
+const getSideChannel = require('side-channel');
+
+const channel = getSideChannel();
+
+const key = {};
+assert.equal(channel.has(key), false);
+assert.throws(() => channel.assert(key), TypeError);
+
+channel.set(key, 42);
+
+channel.assert(key); // does not throw
+assert.equal(channel.has(key), true);
+assert.equal(channel.get(key), 42);
+
+channel.delete(key);
+assert.equal(channel.has(key), false);
+assert.throws(() => channel.assert(key), TypeError);
+```
+
+## Tests
+
+Clone the repo, `npm install`, and run `npm test`
+
+[package-url]: https://npmjs.org/package/side-channel
+[npm-version-svg]: https://versionbadg.es/ljharb/side-channel.svg
+[deps-svg]: https://david-dm.org/ljharb/side-channel.svg
+[deps-url]: https://david-dm.org/ljharb/side-channel
+[dev-deps-svg]: https://david-dm.org/ljharb/side-channel/dev-status.svg
+[dev-deps-url]: https://david-dm.org/ljharb/side-channel#info=devDependencies
+[npm-badge-png]: https://nodei.co/npm/side-channel.png?downloads=true&stars=true
+[license-image]: https://img.shields.io/npm/l/side-channel.svg
+[license-url]: LICENSE
+[downloads-image]: https://img.shields.io/npm/dm/side-channel.svg
+[downloads-url]: https://npm-stat.com/charts.html?package=side-channel
+[codecov-image]: https://codecov.io/gh/ljharb/side-channel/branch/main/graphs/badge.svg
+[codecov-url]: https://app.codecov.io/gh/ljharb/side-channel/
+[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/side-channel
+[actions-url]: https://github.com/ljharb/side-channel/actions
Index: node_modules/semver/functions/prerelease.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const parse = require('./parse')\r\nconst prerelease = (version, options) => {\r\n  const parsed = parse(version, options)\r\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\r\n}\r\nmodule.exports = prerelease\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/prerelease.js b/node_modules/semver/functions/prerelease.js
--- a/node_modules/semver/functions/prerelease.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/prerelease.js	(date 1753913035323)
@@ -1,3 +1,5 @@
+'use strict'
+
 const parse = require('./parse')
 const prerelease = (version, options) => {
   const parsed = parse(version, options)
Index: node_modules/semver/functions/minor.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const SemVer = require('../classes/semver')\r\nconst minor = (a, loose) => new SemVer(a, loose).minor\r\nmodule.exports = minor\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/minor.js b/node_modules/semver/functions/minor.js
--- a/node_modules/semver/functions/minor.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/minor.js	(date 1753913035317)
@@ -1,3 +1,5 @@
+'use strict'
+
 const SemVer = require('../classes/semver')
 const minor = (a, loose) => new SemVer(a, loose).minor
 module.exports = minor
Index: node_modules/side-channel/index.d.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>declare namespace getSideChannel {\r\n\ttype Key = unknown;\r\n\ttype ListNode<T> = {\r\n\t\tkey: Key;\r\n\t\tnext: ListNode<T>;\r\n\t\tvalue: T;\r\n\t};\r\n\ttype RootNode<T> = {\r\n\t\tkey: object;\r\n\t\tnext: null | ListNode<T>;\r\n\t};\r\n\tfunction listGetNode<T>(list: RootNode<T>, key: ListNode<T>['key']): ListNode<T> | void;\r\n\tfunction listGet<T>(objects: RootNode<T>, key: ListNode<T>['key']): T | void;\r\n\tfunction listSet<T>(objects: RootNode<T>, key: ListNode<T>['key'], value: T): void;\r\n\tfunction listHas<T>(objects: RootNode<T>, key: ListNode<T>['key']): boolean;\r\n\r\n\ttype Channel = {\r\n\t\tassert: (key: Key) => void;\r\n\t\thas: (key: Key) => boolean;\r\n\t\tget: <T>(key: Key) => T;\r\n\t\tset: <T>(key: Key, value: T) => void;\r\n\t}\r\n}\r\n\r\ndeclare function getSideChannel(): getSideChannel.Channel;\r\n\r\nexport = getSideChannel;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/side-channel/index.d.ts b/node_modules/side-channel/index.d.ts
--- a/node_modules/side-channel/index.d.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/side-channel/index.d.ts	(date 1753913035068)
@@ -1,27 +1,14 @@
+import getSideChannelList from 'side-channel-list';
+import getSideChannelMap from 'side-channel-map';
+import getSideChannelWeakMap from 'side-channel-weakmap';
+
 declare namespace getSideChannel {
-	type Key = unknown;
-	type ListNode<T> = {
-		key: Key;
-		next: ListNode<T>;
-		value: T;
-	};
-	type RootNode<T> = {
-		key: object;
-		next: null | ListNode<T>;
-	};
-	function listGetNode<T>(list: RootNode<T>, key: ListNode<T>['key']): ListNode<T> | void;
-	function listGet<T>(objects: RootNode<T>, key: ListNode<T>['key']): T | void;
-	function listSet<T>(objects: RootNode<T>, key: ListNode<T>['key'], value: T): void;
-	function listHas<T>(objects: RootNode<T>, key: ListNode<T>['key']): boolean;
-
-	type Channel = {
-		assert: (key: Key) => void;
-		has: (key: Key) => boolean;
-		get: <T>(key: Key) => T;
-		set: <T>(key: Key, value: T) => void;
-	}
+	type Channel<K, V> =
+		| getSideChannelList.Channel<K, V>
+		| ReturnType<Exclude<typeof getSideChannelMap<K, V>, false>>
+		| ReturnType<Exclude<typeof getSideChannelWeakMap<K, V>, false>>;
 }
 
-declare function getSideChannel(): getSideChannel.Channel;
+declare function getSideChannel<K, V>(): getSideChannel.Channel<K, V>;
 
 export = getSideChannel;
Index: node_modules/semver/functions/rsort.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const compareBuild = require('./compare-build')\r\nconst rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))\r\nmodule.exports = rsort\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/rsort.js b/node_modules/semver/functions/rsort.js
--- a/node_modules/semver/functions/rsort.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/rsort.js	(date 1753913035327)
@@ -1,3 +1,5 @@
+'use strict'
+
 const compareBuild = require('./compare-build')
 const rsort = (list, loose) => list.sort((a, b) => compareBuild(b, a, loose))
 module.exports = rsort
Index: node_modules/side-channel/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n\t\"name\": \"side-channel\",\r\n\t\"version\": \"1.0.6\",\r\n\t\"description\": \"Store information about any JS value in a side channel. Uses WeakMap if available.\",\r\n\t\"main\": \"index.js\",\r\n\t\"exports\": {\r\n\t\t\"./package.json\": \"./package.json\",\r\n\t\t\".\": \"./index.js\"\r\n\t},\r\n\t\"types\": \"./index.d.ts\",\r\n\t\"scripts\": {\r\n\t\t\"prepack\": \"npmignore --auto --commentLines=autogenerated\",\r\n\t\t\"prepublishOnly\": \"safe-publish-latest\",\r\n\t\t\"prepublish\": \"not-in-publish || npm run prepublishOnly\",\r\n\t\t\"prelint\": \"eclint check $(git ls-files | xargs find 2> /dev/null | grep -vE 'node_modules|\\\\.git')\",\r\n\t\t\"lint\": \"eslint --ext=js,mjs .\",\r\n\t\t\"postlint\": \"tsc -p .\",\r\n\t\t\"pretest\": \"npm run lint\",\r\n\t\t\"tests-only\": \"nyc tape 'test/**/*.js'\",\r\n\t\t\"test\": \"npm run tests-only\",\r\n\t\t\"posttest\": \"aud --production\",\r\n\t\t\"version\": \"auto-changelog && git add CHANGELOG.md\",\r\n\t\t\"postversion\": \"auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \\\"v$(node -e \\\"console.log(require('./package.json').version)\\\")\\\"\"\r\n\t},\r\n\t\"repository\": {\r\n\t\t\"type\": \"git\",\r\n\t\t\"url\": \"git+https://github.com/ljharb/side-channel.git\"\r\n\t},\r\n\t\"keywords\": [\r\n\t\t\"weakmap\",\r\n\t\t\"map\",\r\n\t\t\"side\",\r\n\t\t\"channel\",\r\n\t\t\"metadata\"\r\n\t],\r\n\t\"author\": \"Jordan Harband <ljharb@gmail.com>\",\r\n\t\"funding\": {\r\n\t\t\"url\": \"https://github.com/sponsors/ljharb\"\r\n\t},\r\n\t\"license\": \"MIT\",\r\n\t\"bugs\": {\r\n\t\t\"url\": \"https://github.com/ljharb/side-channel/issues\"\r\n\t},\r\n\t\"homepage\": \"https://github.com/ljharb/side-channel#readme\",\r\n\t\"devDependencies\": {\r\n\t\t\"@ljharb/eslint-config\": \"^21.1.0\",\r\n\t\t\"@types/call-bind\": \"^1.0.5\",\r\n\t\t\"@types/get-intrinsic\": \"^1.2.2\",\r\n\t\t\"@types/object-inspect\": \"^1.8.4\",\r\n\t\t\"@types/tape\": \"^5.6.4\",\r\n\t\t\"aud\": \"^2.0.4\",\r\n\t\t\"auto-changelog\": \"^2.4.0\",\r\n\t\t\"eclint\": \"^2.8.1\",\r\n\t\t\"eslint\": \"=8.8.0\",\r\n\t\t\"in-publish\": \"^2.0.1\",\r\n\t\t\"npmignore\": \"^0.3.1\",\r\n\t\t\"nyc\": \"^10.3.2\",\r\n\t\t\"safe-publish-latest\": \"^2.0.0\",\r\n\t\t\"tape\": \"^5.7.5\",\r\n\t\t\"typescript\": \"next\"\r\n\t},\r\n\t\"dependencies\": {\r\n\t\t\"call-bind\": \"^1.0.7\",\r\n\t\t\"es-errors\": \"^1.3.0\",\r\n\t\t\"get-intrinsic\": \"^1.2.4\",\r\n\t\t\"object-inspect\": \"^1.13.1\"\r\n\t},\r\n\t\"auto-changelog\": {\r\n\t\t\"output\": \"CHANGELOG.md\",\r\n\t\t\"template\": \"keepachangelog\",\r\n\t\t\"unreleased\": false,\r\n\t\t\"commitLimit\": false,\r\n\t\t\"backfillLimit\": false,\r\n\t\t\"hideCredit\": true\r\n\t},\r\n\t\"publishConfig\": {\r\n\t\t\"ignore\": [\r\n\t\t\t\".github/workflows\"\r\n\t\t]\r\n\t},\r\n\t\"engines\": {\r\n\t\t\"node\": \">= 0.4\"\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/side-channel/package.json b/node_modules/side-channel/package.json
--- a/node_modules/side-channel/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/side-channel/package.json	(date 1753913035066)
@@ -1,11 +1,11 @@
 {
 	"name": "side-channel",
-	"version": "1.0.6",
+	"version": "1.1.0",
 	"description": "Store information about any JS value in a side channel. Uses WeakMap if available.",
 	"main": "index.js",
 	"exports": {
-		"./package.json": "./package.json",
-		".": "./index.js"
+		".": "./index.js",
+		"./package.json": "./package.json"
 	},
 	"types": "./index.d.ts",
 	"scripts": {
@@ -14,11 +14,11 @@
 		"prepublish": "not-in-publish || npm run prepublishOnly",
 		"prelint": "eclint check $(git ls-files | xargs find 2> /dev/null | grep -vE 'node_modules|\\.git')",
 		"lint": "eslint --ext=js,mjs .",
-		"postlint": "tsc -p .",
+		"postlint": "tsc -p . && attw -P",
 		"pretest": "npm run lint",
 		"tests-only": "nyc tape 'test/**/*.js'",
 		"test": "npm run tests-only",
-		"posttest": "aud --production",
+		"posttest": "npx npm@'>=10.2' audit --production",
 		"version": "auto-changelog && git add CHANGELOG.md",
 		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
 	},
@@ -42,29 +42,30 @@
 		"url": "https://github.com/ljharb/side-channel/issues"
 	},
 	"homepage": "https://github.com/ljharb/side-channel#readme",
+	"dependencies": {
+		"es-errors": "^1.3.0",
+		"object-inspect": "^1.13.3",
+		"side-channel-list": "^1.0.0",
+		"side-channel-map": "^1.0.1",
+		"side-channel-weakmap": "^1.0.2"
+	},
 	"devDependencies": {
-		"@ljharb/eslint-config": "^21.1.0",
-		"@types/call-bind": "^1.0.5",
-		"@types/get-intrinsic": "^1.2.2",
-		"@types/object-inspect": "^1.8.4",
-		"@types/tape": "^5.6.4",
-		"aud": "^2.0.4",
-		"auto-changelog": "^2.4.0",
+		"@arethetypeswrong/cli": "^0.17.1",
+		"@ljharb/eslint-config": "^21.1.1",
+		"@ljharb/tsconfig": "^0.2.2",
+		"@types/object-inspect": "^1.13.0",
+		"@types/tape": "^5.6.5",
+		"auto-changelog": "^2.5.0",
 		"eclint": "^2.8.1",
+		"encoding": "^0.1.13",
 		"eslint": "=8.8.0",
 		"in-publish": "^2.0.1",
 		"npmignore": "^0.3.1",
 		"nyc": "^10.3.2",
 		"safe-publish-latest": "^2.0.0",
-		"tape": "^5.7.5",
+		"tape": "^5.9.0",
 		"typescript": "next"
 	},
-	"dependencies": {
-		"call-bind": "^1.0.7",
-		"es-errors": "^1.3.0",
-		"get-intrinsic": "^1.2.4",
-		"object-inspect": "^1.13.1"
-	},
 	"auto-changelog": {
 		"output": "CHANGELOG.md",
 		"template": "keepachangelog",
Index: node_modules/side-channel/tsconfig.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n\t\"compilerOptions\": {\r\n\t\t/* Visit https://aka.ms/tsconfig.json to read more about this file */\r\n\r\n\t\t/* Projects */\r\n\r\n\t\t/* Language and Environment */\r\n\t\t\"target\": \"es2022\",\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */\r\n\t\t// \"lib\": [],\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Specify a set of bundled library declaration files that describe the target runtime environment. */\r\n\t\t// \"noLib\": true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Disable including any library files, including the default lib.d.ts. */\r\n\t\t\"useDefineForClassFields\": true,\t\t\t\t\t\t\t\t\t\t /* Emit ECMAScript-standard-compliant class fields. */\r\n\t\t// \"moduleDetection\": \"auto\",\t\t\t\t\t\t\t\t\t\t\t\t/* Control what method is used to detect module-format JS files. */\r\n\r\n\t\t/* Modules */\r\n\t\t\"module\": \"commonjs\",\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Specify what module code is generated. */\r\n\t\t// \"rootDir\": \"./\",\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Specify the root folder within your source files. */\r\n\t\t// \"moduleResolution\": \"node\",\t\t\t\t\t\t\t\t\t\t\t /* Specify how TypeScript looks up a file from a given module specifier. */\r\n\t\t// \"baseUrl\": \"./\",\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Specify the base directory to resolve non-relative module names. */\r\n\t\t// \"paths\": {},\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Specify a set of entries that re-map imports to additional lookup locations. */\r\n\t\t// \"rootDirs\": [],\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t /* Allow multiple folders to be treated as one when resolving modules. */\r\n\t\t// \"typeRoots\": [\"types\"],\t\t\t\t\t\t\t\t\t\t\t\t\t /* Specify multiple folders that act like `./node_modules/@types`. */\r\n\t\t\"resolveJsonModule\": true,\t\t\t\t\t\t\t\t\t\t\t\t\t /* Enable importing .json files. */\r\n\t\t// \"allowArbitraryExtensions\": true,\t\t\t\t\t\t\t\t /* Enable importing files with any extension, provided a declaration file is present. */\r\n\r\n\t\t/* JavaScript Support */\r\n\t\t\"allowJs\": true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t /* Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files. */\r\n\t\t\"checkJs\": true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t /* Enable error reporting in type-checked JavaScript files. */\r\n\t\t\"maxNodeModuleJsDepth\": 1,\t\t\t\t\t\t\t\t\t\t\t\t\t /* Specify the maximum folder depth used for checking JavaScript files from `node_modules`. Only applicable with `allowJs`. */\r\n\r\n\t\t/* Emit */\r\n\t\t\"declaration\": true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t /* Generate .d.ts files from TypeScript and JavaScript files in your project. */\r\n\t\t\"declarationMap\": true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Create sourcemaps for d.ts files. */\r\n\t\t\"noEmit\": true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Disable emitting files from a compilation. */\r\n\r\n\t\t/* Interop Constraints */\r\n\t\t\"allowSyntheticDefaultImports\": true,\t\t\t\t\t\t\t\t/* Allow `import x from y` when a module doesn't have a default export. */\r\n\t\t\"esModuleInterop\": true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */\r\n\t\t\"forceConsistentCasingInFileNames\": true,\t\t\t\t\t\t/* Ensure that casing is correct in imports. */\r\n\r\n\t\t/* Type Checking */\r\n\t\t\"strict\": true,\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Enable all strict type-checking options. */\r\n\r\n\t\t/* Completeness */\r\n\t\t// \"skipLibCheck\": true\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/* Skip type checking all .d.ts files. */\r\n\t},\r\n\t\"exclude\": [\r\n\t\t\"coverage\",\r\n\t\t\"test/list-exports\"\r\n\t],\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/side-channel/tsconfig.json b/node_modules/side-channel/tsconfig.json
--- a/node_modules/side-channel/tsconfig.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/side-channel/tsconfig.json	(date 1753913035066)
@@ -1,50 +1,9 @@
 {
+	"extends": "@ljharb/tsconfig",
 	"compilerOptions": {
-		/* Visit https://aka.ms/tsconfig.json to read more about this file */
-
-		/* Projects */
-
-		/* Language and Environment */
-		"target": "es2022",																	/* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */
-		// "lib": [],																				/* Specify a set of bundled library declaration files that describe the target runtime environment. */
-		// "noLib": true,																		/* Disable including any library files, including the default lib.d.ts. */
-		"useDefineForClassFields": true,										 /* Emit ECMAScript-standard-compliant class fields. */
-		// "moduleDetection": "auto",												/* Control what method is used to detect module-format JS files. */
-
-		/* Modules */
-		"module": "commonjs",																/* Specify what module code is generated. */
-		// "rootDir": "./",																	/* Specify the root folder within your source files. */
-		// "moduleResolution": "node",											 /* Specify how TypeScript looks up a file from a given module specifier. */
-		// "baseUrl": "./",																	/* Specify the base directory to resolve non-relative module names. */
-		// "paths": {},																			/* Specify a set of entries that re-map imports to additional lookup locations. */
-		// "rootDirs": [],																	 /* Allow multiple folders to be treated as one when resolving modules. */
-		// "typeRoots": ["types"],													 /* Specify multiple folders that act like `./node_modules/@types`. */
-		"resolveJsonModule": true,													 /* Enable importing .json files. */
-		// "allowArbitraryExtensions": true,								 /* Enable importing files with any extension, provided a declaration file is present. */
-
-		/* JavaScript Support */
-		"allowJs": true,																		 /* Allow JavaScript files to be a part of your program. Use the `checkJS` option to get errors from these files. */
-		"checkJs": true,																		 /* Enable error reporting in type-checked JavaScript files. */
-		"maxNodeModuleJsDepth": 1,													 /* Specify the maximum folder depth used for checking JavaScript files from `node_modules`. Only applicable with `allowJs`. */
-
-		/* Emit */
-		"declaration": true,																 /* Generate .d.ts files from TypeScript and JavaScript files in your project. */
-		"declarationMap": true,															/* Create sourcemaps for d.ts files. */
-		"noEmit": true,																			/* Disable emitting files from a compilation. */
-
-		/* Interop Constraints */
-		"allowSyntheticDefaultImports": true,								/* Allow `import x from y` when a module doesn't have a default export. */
-		"esModuleInterop": true,														 /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */
-		"forceConsistentCasingInFileNames": true,						/* Ensure that casing is correct in imports. */
-
-		/* Type Checking */
-		"strict": true,																			/* Enable all strict type-checking options. */
-
-		/* Completeness */
-		// "skipLibCheck": true															/* Skip type checking all .d.ts files. */
+		"target": "es2021",
 	},
 	"exclude": [
 		"coverage",
-		"test/list-exports"
 	],
 }
Index: node_modules/semver/functions/coerce.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const SemVer = require('../classes/semver')\r\nconst parse = require('./parse')\r\nconst { safeRe: re, t } = require('../internal/re')\r\n\r\nconst coerce = (version, options) => {\r\n  if (version instanceof SemVer) {\r\n    return version\r\n  }\r\n\r\n  if (typeof version === 'number') {\r\n    version = String(version)\r\n  }\r\n\r\n  if (typeof version !== 'string') {\r\n    return null\r\n  }\r\n\r\n  options = options || {}\r\n\r\n  let match = null\r\n  if (!options.rtl) {\r\n    match = version.match(options.includePrerelease ? re[t.COERCEFULL] : re[t.COERCE])\r\n  } else {\r\n    // Find the right-most coercible string that does not share\r\n    // a terminus with a more left-ward coercible string.\r\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\r\n    // With includePrerelease option set, '1.2.3.4-rc' wants to coerce '2.3.4-rc', not '2.3.4'\r\n    //\r\n    // Walk through the string checking with a /g regexp\r\n    // Manually set the index so as to pick up overlapping matches.\r\n    // Stop when we get a match that ends at the string end, since no\r\n    // coercible string can be more right-ward without the same terminus.\r\n    const coerceRtlRegex = options.includePrerelease ? re[t.COERCERTLFULL] : re[t.COERCERTL]\r\n    let next\r\n    while ((next = coerceRtlRegex.exec(version)) &&\r\n        (!match || match.index + match[0].length !== version.length)\r\n    ) {\r\n      if (!match ||\r\n            next.index + next[0].length !== match.index + match[0].length) {\r\n        match = next\r\n      }\r\n      coerceRtlRegex.lastIndex = next.index + next[1].length + next[2].length\r\n    }\r\n    // leave it in a clean state\r\n    coerceRtlRegex.lastIndex = -1\r\n  }\r\n\r\n  if (match === null) {\r\n    return null\r\n  }\r\n\r\n  const major = match[2]\r\n  const minor = match[3] || '0'\r\n  const patch = match[4] || '0'\r\n  const prerelease = options.includePrerelease && match[5] ? `-${match[5]}` : ''\r\n  const build = options.includePrerelease && match[6] ? `+${match[6]}` : ''\r\n\r\n  return parse(`${major}.${minor}.${patch}${prerelease}${build}`, options)\r\n}\r\nmodule.exports = coerce\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/coerce.js b/node_modules/semver/functions/coerce.js
--- a/node_modules/semver/functions/coerce.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/coerce.js	(date 1753913035287)
@@ -1,3 +1,5 @@
+'use strict'
+
 const SemVer = require('../classes/semver')
 const parse = require('./parse')
 const { safeRe: re, t } = require('../internal/re')
Index: node_modules/semver/functions/parse.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const SemVer = require('../classes/semver')\r\nconst parse = (version, options, throwErrors = false) => {\r\n  if (version instanceof SemVer) {\r\n    return version\r\n  }\r\n  try {\r\n    return new SemVer(version, options)\r\n  } catch (er) {\r\n    if (!throwErrors) {\r\n      return null\r\n    }\r\n    throw er\r\n  }\r\n}\r\n\r\nmodule.exports = parse\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/parse.js b/node_modules/semver/functions/parse.js
--- a/node_modules/semver/functions/parse.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/parse.js	(date 1753913035321)
@@ -1,3 +1,5 @@
+'use strict'
+
 const SemVer = require('../classes/semver')
 const parse = (version, options, throwErrors = false) => {
   if (version instanceof SemVer) {
Index: node_modules/side-channel/test/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar test = require('tape');\r\n\r\nvar getSideChannel = require('../');\r\n\r\ntest('export', function (t) {\r\n\tt.equal(typeof getSideChannel, 'function', 'is a function');\r\n\tt.equal(getSideChannel.length, 0, 'takes no arguments');\r\n\r\n\tvar channel = getSideChannel();\r\n\tt.ok(channel, 'is truthy');\r\n\tt.equal(typeof channel, 'object', 'is an object');\r\n\r\n\tt.end();\r\n});\r\n\r\ntest('assert', function (t) {\r\n\tvar channel = getSideChannel();\r\n\tt['throws'](\r\n\t\tfunction () { channel.assert({}); },\r\n\t\tTypeError,\r\n\t\t'nonexistent value throws'\r\n\t);\r\n\r\n\tvar o = {};\r\n\tchannel.set(o, 'data');\r\n\tt.doesNotThrow(function () { channel.assert(o); }, 'existent value noops');\r\n\r\n\tt.end();\r\n});\r\n\r\ntest('has', function (t) {\r\n\tvar channel = getSideChannel();\r\n\t/** @type {unknown[]} */ var o = [];\r\n\r\n\tt.equal(channel.has(o), false, 'nonexistent value yields false');\r\n\r\n\tchannel.set(o, 'foo');\r\n\tt.equal(channel.has(o), true, 'existent value yields true');\r\n\r\n\tt.equal(channel.has('abc'), false, 'non object value non existent yields false');\r\n\r\n\tchannel.set('abc', 'foo');\r\n\tt.equal(channel.has('abc'), true, 'non object value that exists yields true');\r\n\r\n\tt.end();\r\n});\r\n\r\ntest('get', function (t) {\r\n\tvar channel = getSideChannel();\r\n\tvar o = {};\r\n\tt.equal(channel.get(o), undefined, 'nonexistent value yields undefined');\r\n\r\n\tvar data = {};\r\n\tchannel.set(o, data);\r\n\tt.equal(channel.get(o), data, '\"get\" yields data set by \"set\"');\r\n\r\n\tt.end();\r\n});\r\n\r\ntest('set', function (t) {\r\n\tvar channel = getSideChannel();\r\n\tvar o = function () {};\r\n\tt.equal(channel.get(o), undefined, 'value not set');\r\n\r\n\tchannel.set(o, 42);\r\n\tt.equal(channel.get(o), 42, 'value was set');\r\n\r\n\tchannel.set(o, Infinity);\r\n\tt.equal(channel.get(o), Infinity, 'value was set again');\r\n\r\n\tvar o2 = {};\r\n\tchannel.set(o2, 17);\r\n\tt.equal(channel.get(o), Infinity, 'o is not modified');\r\n\tt.equal(channel.get(o2), 17, 'o2 is set');\r\n\r\n\tchannel.set(o, 14);\r\n\tt.equal(channel.get(o), 14, 'o is modified');\r\n\tt.equal(channel.get(o2), 17, 'o2 is not modified');\r\n\r\n\tt.end();\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/side-channel/test/index.js b/node_modules/side-channel/test/index.js
--- a/node_modules/side-channel/test/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/side-channel/test/index.js	(date 1753913035065)
@@ -4,80 +4,101 @@
 
 var getSideChannel = require('../');
 
-test('export', function (t) {
-	t.equal(typeof getSideChannel, 'function', 'is a function');
-	t.equal(getSideChannel.length, 0, 'takes no arguments');
+test('getSideChannel', function (t) {
+	t.test('export', function (st) {
+		st.equal(typeof getSideChannel, 'function', 'is a function');
+
+		st.equal(getSideChannel.length, 0, 'takes no arguments');
 
-	var channel = getSideChannel();
-	t.ok(channel, 'is truthy');
-	t.equal(typeof channel, 'object', 'is an object');
-
-	t.end();
-});
+		var channel = getSideChannel();
+		st.ok(channel, 'is truthy');
+		st.equal(typeof channel, 'object', 'is an object');
+		st.end();
+	});
 
-test('assert', function (t) {
-	var channel = getSideChannel();
-	t['throws'](
-		function () { channel.assert({}); },
-		TypeError,
-		'nonexistent value throws'
-	);
+	t.test('assert', function (st) {
+		var channel = getSideChannel();
+		st['throws'](
+			function () { channel.assert({}); },
+			TypeError,
+			'nonexistent value throws'
+		);
 
-	var o = {};
-	channel.set(o, 'data');
-	t.doesNotThrow(function () { channel.assert(o); }, 'existent value noops');
+		var o = {};
+		channel.set(o, 'data');
+		st.doesNotThrow(function () { channel.assert(o); }, 'existent value noops');
 
-	t.end();
-});
+		st.end();
+	});
 
-test('has', function (t) {
-	var channel = getSideChannel();
-	/** @type {unknown[]} */ var o = [];
+	t.test('has', function (st) {
+		var channel = getSideChannel();
+		/** @type {unknown[]} */ var o = [];
 
-	t.equal(channel.has(o), false, 'nonexistent value yields false');
+		st.equal(channel.has(o), false, 'nonexistent value yields false');
 
-	channel.set(o, 'foo');
-	t.equal(channel.has(o), true, 'existent value yields true');
+		channel.set(o, 'foo');
+		st.equal(channel.has(o), true, 'existent value yields true');
 
-	t.equal(channel.has('abc'), false, 'non object value non existent yields false');
+		st.equal(channel.has('abc'), false, 'non object value non existent yields false');
 
-	channel.set('abc', 'foo');
-	t.equal(channel.has('abc'), true, 'non object value that exists yields true');
+		channel.set('abc', 'foo');
+		st.equal(channel.has('abc'), true, 'non object value that exists yields true');
 
-	t.end();
-});
+		st.end();
+	});
 
-test('get', function (t) {
-	var channel = getSideChannel();
-	var o = {};
-	t.equal(channel.get(o), undefined, 'nonexistent value yields undefined');
+	t.test('get', function (st) {
+		var channel = getSideChannel();
+		var o = {};
+		st.equal(channel.get(o), undefined, 'nonexistent value yields undefined');
 
-	var data = {};
-	channel.set(o, data);
-	t.equal(channel.get(o), data, '"get" yields data set by "set"');
+		var data = {};
+		channel.set(o, data);
+		st.equal(channel.get(o), data, '"get" yields data set by "set"');
 
-	t.end();
-});
+		st.end();
+	});
 
-test('set', function (t) {
-	var channel = getSideChannel();
-	var o = function () {};
-	t.equal(channel.get(o), undefined, 'value not set');
+	t.test('set', function (st) {
+		var channel = getSideChannel();
+		var o = function () {};
+		st.equal(channel.get(o), undefined, 'value not set');
 
-	channel.set(o, 42);
-	t.equal(channel.get(o), 42, 'value was set');
+		channel.set(o, 42);
+		st.equal(channel.get(o), 42, 'value was set');
 
-	channel.set(o, Infinity);
-	t.equal(channel.get(o), Infinity, 'value was set again');
+		channel.set(o, Infinity);
+		st.equal(channel.get(o), Infinity, 'value was set again');
 
-	var o2 = {};
-	channel.set(o2, 17);
-	t.equal(channel.get(o), Infinity, 'o is not modified');
-	t.equal(channel.get(o2), 17, 'o2 is set');
+		var o2 = {};
+		channel.set(o2, 17);
+		st.equal(channel.get(o), Infinity, 'o is not modified');
+		st.equal(channel.get(o2), 17, 'o2 is set');
 
-	channel.set(o, 14);
-	t.equal(channel.get(o), 14, 'o is modified');
-	t.equal(channel.get(o2), 17, 'o2 is not modified');
+		channel.set(o, 14);
+		st.equal(channel.get(o), 14, 'o is modified');
+		st.equal(channel.get(o2), 17, 'o2 is not modified');
+
+		st.end();
+	});
+
+	t.test('delete', function (st) {
+		var channel = getSideChannel();
+		var o = {};
+		st.equal(channel['delete']({}), false, 'nonexistent value yields false');
+
+		channel.set(o, 42);
+		st.equal(channel.has(o), true, 'value is set');
+
+		st.equal(channel['delete']({}), false, 'nonexistent value still yields false');
+
+		st.equal(channel['delete'](o), true, 'deleted value yields true');
+
+		st.equal(channel.has(o), false, 'value is no longer set');
+
+		st.end();
+	});
 
 	t.end();
 });
Index: node_modules/semver/functions/clean.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const parse = require('./parse')\r\nconst clean = (version, options) => {\r\n  const s = parse(version.trim().replace(/^[=v]+/, ''), options)\r\n  return s ? s.version : null\r\n}\r\nmodule.exports = clean\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/clean.js b/node_modules/semver/functions/clean.js
--- a/node_modules/semver/functions/clean.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/clean.js	(date 1753913035282)
@@ -1,3 +1,5 @@
+'use strict'
+
 const parse = require('./parse')
 const clean = (version, options) => {
   const s = parse(version.trim().replace(/^[=v]+/, ''), options)
Index: node_modules/semver/functions/sort.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const compareBuild = require('./compare-build')\r\nconst sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))\r\nmodule.exports = sort\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/sort.js b/node_modules/semver/functions/sort.js
--- a/node_modules/semver/functions/sort.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/sort.js	(date 1753913035332)
@@ -1,3 +1,5 @@
+'use strict'
+
 const compareBuild = require('./compare-build')
 const sort = (list, loose) => list.sort((a, b) => compareBuild(a, b, loose))
 module.exports = sort
Index: node_modules/semver/functions/compare.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const SemVer = require('../classes/semver')\r\nconst compare = (a, b, loose) =>\r\n  new SemVer(a, loose).compare(new SemVer(b, loose))\r\n\r\nmodule.exports = compare\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/compare.js b/node_modules/semver/functions/compare.js
--- a/node_modules/semver/functions/compare.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/compare.js	(date 1753913035297)
@@ -1,3 +1,5 @@
+'use strict'
+
 const SemVer = require('../classes/semver')
 const compare = (a, b, loose) =>
   new SemVer(a, loose).compare(new SemVer(b, loose))
Index: node_modules/semver/functions/major.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const SemVer = require('../classes/semver')\r\nconst major = (a, loose) => new SemVer(a, loose).major\r\nmodule.exports = major\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/major.js b/node_modules/semver/functions/major.js
--- a/node_modules/semver/functions/major.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/major.js	(date 1753913035314)
@@ -1,3 +1,5 @@
+'use strict'
+
 const SemVer = require('../classes/semver')
 const major = (a, loose) => new SemVer(a, loose).major
 module.exports = major
Index: node_modules/semver/functions/gte.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const compare = require('./compare')\r\nconst gte = (a, b, loose) => compare(a, b, loose) >= 0\r\nmodule.exports = gte\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/gte.js b/node_modules/semver/functions/gte.js
--- a/node_modules/semver/functions/gte.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/gte.js	(date 1753913035303)
@@ -1,3 +1,5 @@
+'use strict'
+
 const compare = require('./compare')
 const gte = (a, b, loose) => compare(a, b, loose) >= 0
 module.exports = gte
Index: node_modules/semver/functions/satisfies.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const Range = require('../classes/range')\r\nconst satisfies = (version, range, options) => {\r\n  try {\r\n    range = new Range(range, options)\r\n  } catch (er) {\r\n    return false\r\n  }\r\n  return range.test(version)\r\n}\r\nmodule.exports = satisfies\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/satisfies.js b/node_modules/semver/functions/satisfies.js
--- a/node_modules/semver/functions/satisfies.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/satisfies.js	(date 1753913035327)
@@ -1,3 +1,5 @@
+'use strict'
+
 const Range = require('../classes/range')
 const satisfies = (version, range, options) => {
   try {
Index: node_modules/semver/functions/gt.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const compare = require('./compare')\r\nconst gt = (a, b, loose) => compare(a, b, loose) > 0\r\nmodule.exports = gt\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/gt.js b/node_modules/semver/functions/gt.js
--- a/node_modules/semver/functions/gt.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/gt.js	(date 1753913035302)
@@ -1,3 +1,5 @@
+'use strict'
+
 const compare = require('./compare')
 const gt = (a, b, loose) => compare(a, b, loose) > 0
 module.exports = gt
Index: node_modules/semver/functions/valid.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const parse = require('./parse')\r\nconst valid = (version, options) => {\r\n  const v = parse(version, options)\r\n  return v ? v.version : null\r\n}\r\nmodule.exports = valid\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/valid.js b/node_modules/semver/functions/valid.js
--- a/node_modules/semver/functions/valid.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/valid.js	(date 1753913035335)
@@ -1,3 +1,5 @@
+'use strict'
+
 const parse = require('./parse')
 const valid = (version, options) => {
   const v = parse(version, options)
Index: node_modules/semver/functions/inc.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const SemVer = require('../classes/semver')\r\n\r\nconst inc = (version, release, options, identifier, identifierBase) => {\r\n  if (typeof (options) === 'string') {\r\n    identifierBase = identifier\r\n    identifier = options\r\n    options = undefined\r\n  }\r\n\r\n  try {\r\n    return new SemVer(\r\n      version instanceof SemVer ? version.version : version,\r\n      options\r\n    ).inc(release, identifier, identifierBase).version\r\n  } catch (er) {\r\n    return null\r\n  }\r\n}\r\nmodule.exports = inc\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/inc.js b/node_modules/semver/functions/inc.js
--- a/node_modules/semver/functions/inc.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/inc.js	(date 1753913035306)
@@ -1,3 +1,5 @@
+'use strict'
+
 const SemVer = require('../classes/semver')
 
 const inc = (version, release, options, identifier, identifierBase) => {
Index: node_modules/semver/functions/cmp.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const eq = require('./eq')\r\nconst neq = require('./neq')\r\nconst gt = require('./gt')\r\nconst gte = require('./gte')\r\nconst lt = require('./lt')\r\nconst lte = require('./lte')\r\n\r\nconst cmp = (a, op, b, loose) => {\r\n  switch (op) {\r\n    case '===':\r\n      if (typeof a === 'object') {\r\n        a = a.version\r\n      }\r\n      if (typeof b === 'object') {\r\n        b = b.version\r\n      }\r\n      return a === b\r\n\r\n    case '!==':\r\n      if (typeof a === 'object') {\r\n        a = a.version\r\n      }\r\n      if (typeof b === 'object') {\r\n        b = b.version\r\n      }\r\n      return a !== b\r\n\r\n    case '':\r\n    case '=':\r\n    case '==':\r\n      return eq(a, b, loose)\r\n\r\n    case '!=':\r\n      return neq(a, b, loose)\r\n\r\n    case '>':\r\n      return gt(a, b, loose)\r\n\r\n    case '>=':\r\n      return gte(a, b, loose)\r\n\r\n    case '<':\r\n      return lt(a, b, loose)\r\n\r\n    case '<=':\r\n      return lte(a, b, loose)\r\n\r\n    default:\r\n      throw new TypeError(`Invalid operator: ${op}`)\r\n  }\r\n}\r\nmodule.exports = cmp\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/cmp.js b/node_modules/semver/functions/cmp.js
--- a/node_modules/semver/functions/cmp.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/cmp.js	(date 1753913035285)
@@ -1,3 +1,5 @@
+'use strict'
+
 const eq = require('./eq')
 const neq = require('./neq')
 const gt = require('./gt')
Index: node_modules/semver/functions/neq.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const compare = require('./compare')\r\nconst neq = (a, b, loose) => compare(a, b, loose) !== 0\r\nmodule.exports = neq\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/semver/functions/neq.js b/node_modules/semver/functions/neq.js
--- a/node_modules/semver/functions/neq.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/semver/functions/neq.js	(date 1753913035318)
@@ -1,3 +1,5 @@
+'use strict'
+
 const compare = require('./compare')
 const neq = (a, b, loose) => compare(a, b, loose) !== 0
 module.exports = neq
Index: .idea/git_toolbox_blame.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/git_toolbox_blame.xml b/.idea/git_toolbox_blame.xml
new file mode 100644
--- /dev/null	(date 1754356905244)
+++ b/.idea/git_toolbox_blame.xml	(date 1754356905244)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GitToolBoxBlameSettings">
+    <option name="version" value="2" />
+  </component>
+</project>
\ No newline at end of file
Index: node_modules/cookie-parser/HISTORY.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>1.4.6 / 2021-11-16\r\n==================\r\n\r\n  * deps: cookie@0.4.1\r\n\r\n1.4.5 / 2020-03-14\r\n==================\r\n\r\n  * deps: cookie@0.4.0\r\n\r\n1.4.4 / 2019-02-12\r\n==================\r\n\r\n  * perf: normalize `secret` argument only once\r\n\r\n1.4.3 / 2016-05-26\r\n==================\r\n\r\n  * deps: cookie@0.3.1\r\n    - perf: use for loop in parse\r\n\r\n1.4.2 / 2016-05-20\r\n==================\r\n\r\n  * deps: cookie@0.2.4\r\n    - perf: enable strict mode\r\n    - perf: use for loop in parse\r\n    - perf: use string concatenation for serialization\r\n\r\n1.4.1 / 2016-01-11\r\n==================\r\n\r\n  * deps: cookie@0.2.3\r\n  * perf: enable strict mode\r\n\r\n1.4.0 / 2015-09-18\r\n==================\r\n\r\n  * Accept array of secrets in addition to a single secret\r\n  * Fix `JSONCookie` to return `undefined` for non-string arguments\r\n  * Fix `signedCookie` to return `undefined` for non-string arguments\r\n  * deps: cookie@0.2.2\r\n\r\n1.3.5 / 2015-05-19\r\n==================\r\n\r\n  * deps: cookie@0.1.3\r\n    - Slight optimizations\r\n\r\n1.3.4 / 2015-02-15\r\n==================\r\n\r\n  * deps: cookie-signature@1.0.6\r\n\r\n1.3.3 / 2014-09-05\r\n==================\r\n\r\n  * deps: cookie-signature@1.0.5\r\n\r\n1.3.2 / 2014-06-26\r\n==================\r\n\r\n  * deps: cookie-signature@1.0.4\r\n    - fix for timing attacks\r\n\r\n1.3.1 / 2014-06-17\r\n==================\r\n\r\n  * actually export `signedCookie`\r\n\r\n1.3.0 / 2014-06-17\r\n==================\r\n\r\n  * add `signedCookie` export for single cookie unsigning\r\n\r\n1.2.0 / 2014-06-17\r\n==================\r\n\r\n  * export parsing functions\r\n  * `req.cookies` and `req.signedCookies` are now plain objects\r\n  * slightly faster parsing of many cookies\r\n\r\n1.1.0 / 2014-05-12\r\n==================\r\n\r\n  * Support for NodeJS version 0.8\r\n  * deps: cookie@0.1.2\r\n    - Fix for maxAge == 0\r\n    - made compat with expires field\r\n    - tweak maxAge NaN error message\r\n\r\n1.0.1 / 2014-02-20\r\n==================\r\n\r\n  * add missing dependencies\r\n\r\n1.0.0 / 2014-02-15\r\n==================\r\n\r\n  * Genesis from `connect`\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/cookie-parser/HISTORY.md b/node_modules/cookie-parser/HISTORY.md
--- a/node_modules/cookie-parser/HISTORY.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/cookie-parser/HISTORY.md	(date 1753913035716)
@@ -1,3 +1,27 @@
+1.4.7 / 2024-10-08
+==========
+
+  * deps: cookie@0.7.2
+    - Fix object assignment of `hasOwnProperty`
+  * deps: cookie@0.7.1
+    - Allow leading dot for domain
+      - Although not permitted in the spec, some users expect this to work and user agents ignore the leading dot according to spec
+    - Add fast path for `serialize` without options, use `obj.hasOwnProperty` when parsing
+  * deps: cookie@0.7.0
+    - perf: parse cookies ~10% faster
+    - fix: narrow the validation of cookies to match RFC6265
+    - fix: add `main` to `package.json` for rspack
+  * deps: cookie@0.6.0
+    - Add `partitioned` option
+  * deps: cookie@0.5.0
+    - Add `priority` option
+    - Fix `expires` option to reject invalid dates
+    - pref: improve default decode speed
+    - pref: remove slow string split in parse
+  * deps: cookie@0.4.2
+    - pref: read value only when assigning in parse
+    - pref: remove unnecessary regexp in parse
+
 1.4.6 / 2021-11-16
 ==================
 
Index: node_modules/get-intrinsic/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar undefined;\r\n\r\nvar $Error = require('es-errors');\r\nvar $EvalError = require('es-errors/eval');\r\nvar $RangeError = require('es-errors/range');\r\nvar $ReferenceError = require('es-errors/ref');\r\nvar $SyntaxError = require('es-errors/syntax');\r\nvar $TypeError = require('es-errors/type');\r\nvar $URIError = require('es-errors/uri');\r\n\r\nvar $Function = Function;\r\n\r\n// eslint-disable-next-line consistent-return\r\nvar getEvalledConstructor = function (expressionSyntax) {\r\n\ttry {\r\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\r\n\t} catch (e) {}\r\n};\r\n\r\nvar $gOPD = Object.getOwnPropertyDescriptor;\r\nif ($gOPD) {\r\n\ttry {\r\n\t\t$gOPD({}, '');\r\n\t} catch (e) {\r\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\r\n\t}\r\n}\r\n\r\nvar throwTypeError = function () {\r\n\tthrow new $TypeError();\r\n};\r\nvar ThrowTypeError = $gOPD\r\n\t? (function () {\r\n\t\ttry {\r\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\r\n\t\t\targuments.callee; // IE 8 does not throw here\r\n\t\t\treturn throwTypeError;\r\n\t\t} catch (calleeThrows) {\r\n\t\t\ttry {\r\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\r\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\r\n\t\t\t} catch (gOPDthrows) {\r\n\t\t\t\treturn throwTypeError;\r\n\t\t\t}\r\n\t\t}\r\n\t}())\r\n\t: throwTypeError;\r\n\r\nvar hasSymbols = require('has-symbols')();\r\nvar hasProto = require('has-proto')();\r\n\r\nvar getProto = Object.getPrototypeOf || (\r\n\thasProto\r\n\t\t? function (x) { return x.__proto__; } // eslint-disable-line no-proto\r\n\t\t: null\r\n);\r\n\r\nvar needsEval = {};\r\n\r\nvar TypedArray = typeof Uint8Array === 'undefined' || !getProto ? undefined : getProto(Uint8Array);\r\n\r\nvar INTRINSICS = {\r\n\t__proto__: null,\r\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\r\n\t'%Array%': Array,\r\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\r\n\t'%ArrayIteratorPrototype%': hasSymbols && getProto ? getProto([][Symbol.iterator]()) : undefined,\r\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\r\n\t'%AsyncFunction%': needsEval,\r\n\t'%AsyncGenerator%': needsEval,\r\n\t'%AsyncGeneratorFunction%': needsEval,\r\n\t'%AsyncIteratorPrototype%': needsEval,\r\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\r\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\r\n\t'%BigInt64Array%': typeof BigInt64Array === 'undefined' ? undefined : BigInt64Array,\r\n\t'%BigUint64Array%': typeof BigUint64Array === 'undefined' ? undefined : BigUint64Array,\r\n\t'%Boolean%': Boolean,\r\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\r\n\t'%Date%': Date,\r\n\t'%decodeURI%': decodeURI,\r\n\t'%decodeURIComponent%': decodeURIComponent,\r\n\t'%encodeURI%': encodeURI,\r\n\t'%encodeURIComponent%': encodeURIComponent,\r\n\t'%Error%': $Error,\r\n\t'%eval%': eval, // eslint-disable-line no-eval\r\n\t'%EvalError%': $EvalError,\r\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\r\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\r\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\r\n\t'%Function%': $Function,\r\n\t'%GeneratorFunction%': needsEval,\r\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\r\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\r\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\r\n\t'%isFinite%': isFinite,\r\n\t'%isNaN%': isNaN,\r\n\t'%IteratorPrototype%': hasSymbols && getProto ? getProto(getProto([][Symbol.iterator]())) : undefined,\r\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\r\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\r\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),\r\n\t'%Math%': Math,\r\n\t'%Number%': Number,\r\n\t'%Object%': Object,\r\n\t'%parseFloat%': parseFloat,\r\n\t'%parseInt%': parseInt,\r\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\r\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\r\n\t'%RangeError%': $RangeError,\r\n\t'%ReferenceError%': $ReferenceError,\r\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\r\n\t'%RegExp%': RegExp,\r\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\r\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Set()[Symbol.iterator]()),\r\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\r\n\t'%String%': String,\r\n\t'%StringIteratorPrototype%': hasSymbols && getProto ? getProto(''[Symbol.iterator]()) : undefined,\r\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\r\n\t'%SyntaxError%': $SyntaxError,\r\n\t'%ThrowTypeError%': ThrowTypeError,\r\n\t'%TypedArray%': TypedArray,\r\n\t'%TypeError%': $TypeError,\r\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\r\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\r\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\r\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\r\n\t'%URIError%': $URIError,\r\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\r\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\r\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\r\n};\r\n\r\nif (getProto) {\r\n\ttry {\r\n\t\tnull.error; // eslint-disable-line no-unused-expressions\r\n\t} catch (e) {\r\n\t\t// https://github.com/tc39/proposal-shadowrealm/pull/384#issuecomment-1364264229\r\n\t\tvar errorProto = getProto(getProto(e));\r\n\t\tINTRINSICS['%Error.prototype%'] = errorProto;\r\n\t}\r\n}\r\n\r\nvar doEval = function doEval(name) {\r\n\tvar value;\r\n\tif (name === '%AsyncFunction%') {\r\n\t\tvalue = getEvalledConstructor('async function () {}');\r\n\t} else if (name === '%GeneratorFunction%') {\r\n\t\tvalue = getEvalledConstructor('function* () {}');\r\n\t} else if (name === '%AsyncGeneratorFunction%') {\r\n\t\tvalue = getEvalledConstructor('async function* () {}');\r\n\t} else if (name === '%AsyncGenerator%') {\r\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\r\n\t\tif (fn) {\r\n\t\t\tvalue = fn.prototype;\r\n\t\t}\r\n\t} else if (name === '%AsyncIteratorPrototype%') {\r\n\t\tvar gen = doEval('%AsyncGenerator%');\r\n\t\tif (gen && getProto) {\r\n\t\t\tvalue = getProto(gen.prototype);\r\n\t\t}\r\n\t}\r\n\r\n\tINTRINSICS[name] = value;\r\n\r\n\treturn value;\r\n};\r\n\r\nvar LEGACY_ALIASES = {\r\n\t__proto__: null,\r\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\r\n\t'%ArrayPrototype%': ['Array', 'prototype'],\r\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\r\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\r\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\r\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\r\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\r\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\r\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\r\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\r\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\r\n\t'%DatePrototype%': ['Date', 'prototype'],\r\n\t'%ErrorPrototype%': ['Error', 'prototype'],\r\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\r\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\r\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\r\n\t'%FunctionPrototype%': ['Function', 'prototype'],\r\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\r\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\r\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\r\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\r\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\r\n\t'%JSONParse%': ['JSON', 'parse'],\r\n\t'%JSONStringify%': ['JSON', 'stringify'],\r\n\t'%MapPrototype%': ['Map', 'prototype'],\r\n\t'%NumberPrototype%': ['Number', 'prototype'],\r\n\t'%ObjectPrototype%': ['Object', 'prototype'],\r\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\r\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\r\n\t'%PromisePrototype%': ['Promise', 'prototype'],\r\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\r\n\t'%Promise_all%': ['Promise', 'all'],\r\n\t'%Promise_reject%': ['Promise', 'reject'],\r\n\t'%Promise_resolve%': ['Promise', 'resolve'],\r\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\r\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\r\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\r\n\t'%SetPrototype%': ['Set', 'prototype'],\r\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\r\n\t'%StringPrototype%': ['String', 'prototype'],\r\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\r\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\r\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\r\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\r\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\r\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\r\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\r\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\r\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\r\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\r\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\r\n};\r\n\r\nvar bind = require('function-bind');\r\nvar hasOwn = require('hasown');\r\nvar $concat = bind.call(Function.call, Array.prototype.concat);\r\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\r\nvar $replace = bind.call(Function.call, String.prototype.replace);\r\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\r\nvar $exec = bind.call(Function.call, RegExp.prototype.exec);\r\n\r\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\r\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\r\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\r\nvar stringToPath = function stringToPath(string) {\r\n\tvar first = $strSlice(string, 0, 1);\r\n\tvar last = $strSlice(string, -1);\r\n\tif (first === '%' && last !== '%') {\r\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\r\n\t} else if (last === '%' && first !== '%') {\r\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\r\n\t}\r\n\tvar result = [];\r\n\t$replace(string, rePropName, function (match, number, quote, subString) {\r\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\r\n\t});\r\n\treturn result;\r\n};\r\n/* end adaptation */\r\n\r\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\r\n\tvar intrinsicName = name;\r\n\tvar alias;\r\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\r\n\t\talias = LEGACY_ALIASES[intrinsicName];\r\n\t\tintrinsicName = '%' + alias[0] + '%';\r\n\t}\r\n\r\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\r\n\t\tvar value = INTRINSICS[intrinsicName];\r\n\t\tif (value === needsEval) {\r\n\t\t\tvalue = doEval(intrinsicName);\r\n\t\t}\r\n\t\tif (typeof value === 'undefined' && !allowMissing) {\r\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\talias: alias,\r\n\t\t\tname: intrinsicName,\r\n\t\t\tvalue: value\r\n\t\t};\r\n\t}\r\n\r\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\r\n};\r\n\r\nmodule.exports = function GetIntrinsic(name, allowMissing) {\r\n\tif (typeof name !== 'string' || name.length === 0) {\r\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\r\n\t}\r\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\r\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\r\n\t}\r\n\r\n\tif ($exec(/^%?[^%]*%?$/, name) === null) {\r\n\t\tthrow new $SyntaxError('`%` may not be present anywhere but at the beginning and end of the intrinsic name');\r\n\t}\r\n\tvar parts = stringToPath(name);\r\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\r\n\r\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\r\n\tvar intrinsicRealName = intrinsic.name;\r\n\tvar value = intrinsic.value;\r\n\tvar skipFurtherCaching = false;\r\n\r\n\tvar alias = intrinsic.alias;\r\n\tif (alias) {\r\n\t\tintrinsicBaseName = alias[0];\r\n\t\t$spliceApply(parts, $concat([0, 1], alias));\r\n\t}\r\n\r\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\r\n\t\tvar part = parts[i];\r\n\t\tvar first = $strSlice(part, 0, 1);\r\n\t\tvar last = $strSlice(part, -1);\r\n\t\tif (\r\n\t\t\t(\r\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\r\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\r\n\t\t\t)\r\n\t\t\t&& first !== last\r\n\t\t) {\r\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\r\n\t\t}\r\n\t\tif (part === 'constructor' || !isOwn) {\r\n\t\t\tskipFurtherCaching = true;\r\n\t\t}\r\n\r\n\t\tintrinsicBaseName += '.' + part;\r\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\r\n\r\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\r\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\r\n\t\t} else if (value != null) {\r\n\t\t\tif (!(part in value)) {\r\n\t\t\t\tif (!allowMissing) {\r\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\r\n\t\t\t\t}\r\n\t\t\t\treturn void undefined;\r\n\t\t\t}\r\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\r\n\t\t\t\tvar desc = $gOPD(value, part);\r\n\t\t\t\tisOwn = !!desc;\r\n\r\n\t\t\t\t// By convention, when a data property is converted to an accessor\r\n\t\t\t\t// property to emulate a data property that does not suffer from\r\n\t\t\t\t// the override mistake, that accessor's getter is marked with\r\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\r\n\t\t\t\t// uphold the illusion by pretending to see that original data\r\n\t\t\t\t// property, i.e., returning the value rather than the getter\r\n\t\t\t\t// itself.\r\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\r\n\t\t\t\t\tvalue = desc.get;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = value[part];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tisOwn = hasOwn(value, part);\r\n\t\t\t\tvalue = value[part];\r\n\t\t\t}\r\n\r\n\t\t\tif (isOwn && !skipFurtherCaching) {\r\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn value;\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/get-intrinsic/index.js b/node_modules/get-intrinsic/index.js
--- a/node_modules/get-intrinsic/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/get-intrinsic/index.js	(date 1753913035662)
@@ -2,6 +2,8 @@
 
 var undefined;
 
+var $Object = require('es-object-atoms');
+
 var $Error = require('es-errors');
 var $EvalError = require('es-errors/eval');
 var $RangeError = require('es-errors/range');
@@ -10,6 +12,14 @@
 var $TypeError = require('es-errors/type');
 var $URIError = require('es-errors/uri');
 
+var abs = require('math-intrinsics/abs');
+var floor = require('math-intrinsics/floor');
+var max = require('math-intrinsics/max');
+var min = require('math-intrinsics/min');
+var pow = require('math-intrinsics/pow');
+var round = require('math-intrinsics/round');
+var sign = require('math-intrinsics/sign');
+
 var $Function = Function;
 
 // eslint-disable-next-line consistent-return
@@ -19,14 +29,8 @@
 	} catch (e) {}
 };
 
-var $gOPD = Object.getOwnPropertyDescriptor;
-if ($gOPD) {
-	try {
-		$gOPD({}, '');
-	} catch (e) {
-		$gOPD = null; // this is IE 8, which has a broken gOPD
-	}
-}
+var $gOPD = require('gopd');
+var $defineProperty = require('es-define-property');
 
 var throwTypeError = function () {
 	throw new $TypeError();
@@ -49,13 +53,13 @@
 	: throwTypeError;
 
 var hasSymbols = require('has-symbols')();
-var hasProto = require('has-proto')();
 
-var getProto = Object.getPrototypeOf || (
-	hasProto
-		? function (x) { return x.__proto__; } // eslint-disable-line no-proto
-		: null
-);
+var getProto = require('get-proto');
+var $ObjectGPO = require('get-proto/Object.getPrototypeOf');
+var $ReflectGPO = require('get-proto/Reflect.getPrototypeOf');
+
+var $apply = require('call-bind-apply-helpers/functionApply');
+var $call = require('call-bind-apply-helpers/functionCall');
 
 var needsEval = {};
 
@@ -86,6 +90,7 @@
 	'%Error%': $Error,
 	'%eval%': eval, // eslint-disable-line no-eval
 	'%EvalError%': $EvalError,
+	'%Float16Array%': typeof Float16Array === 'undefined' ? undefined : Float16Array,
 	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
 	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
 	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
@@ -102,7 +107,8 @@
 	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols || !getProto ? undefined : getProto(new Map()[Symbol.iterator]()),
 	'%Math%': Math,
 	'%Number%': Number,
-	'%Object%': Object,
+	'%Object%': $Object,
+	'%Object.getOwnPropertyDescriptor%': $gOPD,
 	'%parseFloat%': parseFloat,
 	'%parseInt%': parseInt,
 	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
@@ -128,7 +134,20 @@
 	'%URIError%': $URIError,
 	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
 	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
-	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
+	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,
+
+	'%Function.prototype.call%': $call,
+	'%Function.prototype.apply%': $apply,
+	'%Object.defineProperty%': $defineProperty,
+	'%Object.getPrototypeOf%': $ObjectGPO,
+	'%Math.abs%': abs,
+	'%Math.floor%': floor,
+	'%Math.max%': max,
+	'%Math.min%': min,
+	'%Math.pow%': pow,
+	'%Math.round%': round,
+	'%Math.sign%': sign,
+	'%Reflect.getPrototypeOf%': $ReflectGPO
 };
 
 if (getProto) {
@@ -223,11 +242,11 @@
 
 var bind = require('function-bind');
 var hasOwn = require('hasown');
-var $concat = bind.call(Function.call, Array.prototype.concat);
-var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
-var $replace = bind.call(Function.call, String.prototype.replace);
-var $strSlice = bind.call(Function.call, String.prototype.slice);
-var $exec = bind.call(Function.call, RegExp.prototype.exec);
+var $concat = bind.call($call, Array.prototype.concat);
+var $spliceApply = bind.call($apply, Array.prototype.splice);
+var $replace = bind.call($call, String.prototype.replace);
+var $strSlice = bind.call($call, String.prototype.slice);
+var $exec = bind.call($call, RegExp.prototype.exec);
 
 /* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
 var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
Index: node_modules/get-intrinsic/.eslintrc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n\t\"root\": true,\r\n\r\n\t\"extends\": \"@ljharb\",\r\n\r\n\t\"env\": {\r\n\t\t\"es6\": true,\r\n\t\t\"es2017\": true,\r\n\t\t\"es2020\": true,\r\n\t\t\"es2021\": true,\r\n\t\t\"es2022\": true,\r\n\t},\r\n\r\n\t\"rules\": {\r\n\t\t\"array-bracket-newline\": 0,\r\n\t\t\"complexity\": 0,\r\n\t\t\"eqeqeq\": [2, \"allow-null\"],\r\n\t\t\"func-name-matching\": 0,\r\n\t\t\"id-length\": 0,\r\n\t\t\"max-lines\": 0,\r\n\t\t\"max-lines-per-function\": [2, 90],\r\n\t\t\"max-params\": [2, 4],\r\n\t\t\"max-statements\": 0,\r\n\t\t\"max-statements-per-line\": [2, { \"max\": 2 }],\r\n\t\t\"multiline-comment-style\": 0,\r\n\t\t\"no-magic-numbers\": 0,\r\n\t\t\"sort-keys\": 0,\r\n\t},\r\n\r\n\t\"overrides\": [\r\n\t\t{\r\n\t\t\t\"files\": \"test/**\",\r\n\t\t\t\"rules\": {\r\n\t\t\t\t\"new-cap\": 0,\r\n\t\t\t},\r\n\t\t},\r\n\t],\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/get-intrinsic/.eslintrc b/node_modules/get-intrinsic/.eslintrc
--- a/node_modules/get-intrinsic/.eslintrc	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/get-intrinsic/.eslintrc	(date 1753913035652)
@@ -11,6 +11,10 @@
 		"es2022": true,
 	},
 
+	"globals": {
+		"Float16Array": false,
+	},
+
 	"rules": {
 		"array-bracket-newline": 0,
 		"complexity": 0,
Index: node_modules/get-intrinsic/CHANGELOG.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># Changelog\r\n\r\nAll notable changes to this project will be documented in this file.\r\n\r\nThe format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)\r\nand this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\r\n\r\n## [v1.2.4](https://github.com/ljharb/get-intrinsic/compare/v1.2.3...v1.2.4) - 2024-02-05\r\n\r\n### Commits\r\n\r\n- [Refactor] use all 7 &lt;+ ES6 Errors from `es-errors` [`bcac811`](https://github.com/ljharb/get-intrinsic/commit/bcac811abdc1c982e12abf848a410d6aae148d14)\r\n\r\n## [v1.2.3](https://github.com/ljharb/get-intrinsic/compare/v1.2.2...v1.2.3) - 2024-02-03\r\n\r\n### Commits\r\n\r\n- [Refactor] use `es-errors`, so things that only need those do not need `get-intrinsic` [`f11db9c`](https://github.com/ljharb/get-intrinsic/commit/f11db9c4fb97d87bbd53d3c73ac6b3db3613ad3b)\r\n- [Dev Deps] update `aud`, `es-abstract`, `mock-property`, `npmignore` [`b7ac7d1`](https://github.com/ljharb/get-intrinsic/commit/b7ac7d1616fefb03877b1aed0c8f8d61aad32b6c)\r\n- [meta] simplify `exports` [`faa0cc6`](https://github.com/ljharb/get-intrinsic/commit/faa0cc618e2830ffb51a8202490b0c215d965cbc)\r\n- [meta] add missing `engines.node` [`774dd0b`](https://github.com/ljharb/get-intrinsic/commit/774dd0b3e8f741c3f05a6322d124d6087f146af1)\r\n- [Dev Deps] update `tape` [`5828e8e`](https://github.com/ljharb/get-intrinsic/commit/5828e8e4a04e69312e87a36c0ea39428a7a4c3d8)\r\n- [Robustness] use null objects for lookups [`eb9a11f`](https://github.com/ljharb/get-intrinsic/commit/eb9a11fa9eb3e13b193fcc05a7fb814341b1a7b7)\r\n- [meta] add `sideEffects` flag [`89bcc7a`](https://github.com/ljharb/get-intrinsic/commit/89bcc7a42e19bf07b7c21e3094d5ab177109e6d2)\r\n\r\n## [v1.2.2](https://github.com/ljharb/get-intrinsic/compare/v1.2.1...v1.2.2) - 2023-10-20\r\n\r\n### Commits\r\n\r\n- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `call-bind`, `es-abstract`, `mock-property`, `object-inspect`, `tape` [`f51bcf2`](https://github.com/ljharb/get-intrinsic/commit/f51bcf26412d58d17ce17c91c9afd0ad271f0762)\r\n- [Refactor] use `hasown` instead of `has` [`18d14b7`](https://github.com/ljharb/get-intrinsic/commit/18d14b799bea6b5765e1cec91890830cbcdb0587)\r\n- [Deps] update `function-bind` [`6e109c8`](https://github.com/ljharb/get-intrinsic/commit/6e109c81e03804cc5e7824fb64353cdc3d8ee2c7)\r\n\r\n## [v1.2.1](https://github.com/ljharb/get-intrinsic/compare/v1.2.0...v1.2.1) - 2023-05-13\r\n\r\n### Commits\r\n\r\n- [Fix] avoid a crash in envs without `__proto__` [`7bad8d0`](https://github.com/ljharb/get-intrinsic/commit/7bad8d061bf8721733b58b73a2565af2b6756b64)\r\n- [Dev Deps] update `es-abstract` [`c60e6b7`](https://github.com/ljharb/get-intrinsic/commit/c60e6b7b4cf9660c7f27ed970970fd55fac48dc5)\r\n\r\n## [v1.2.0](https://github.com/ljharb/get-intrinsic/compare/v1.1.3...v1.2.0) - 2023-01-19\r\n\r\n### Commits\r\n\r\n- [actions] update checkout action [`ca6b12f`](https://github.com/ljharb/get-intrinsic/commit/ca6b12f31eaacea4ea3b055e744cd61623385ffb)\r\n- [Dev Deps] update `@ljharb/eslint-config`, `es-abstract`, `object-inspect`, `tape` [`41a3727`](https://github.com/ljharb/get-intrinsic/commit/41a3727d0026fa04273ae216a5f8e12eefd72da8)\r\n- [Fix] ensure `Error.prototype` is undeniable [`c511e97`](https://github.com/ljharb/get-intrinsic/commit/c511e97ae99c764c4524b540dee7a70757af8da3)\r\n- [Dev Deps] update `aud`, `es-abstract`, `tape` [`1bef8a8`](https://github.com/ljharb/get-intrinsic/commit/1bef8a8fd439ebb80863199b6189199e0851ac67)\r\n- [Dev Deps] update `aud`, `es-abstract` [`0d41f16`](https://github.com/ljharb/get-intrinsic/commit/0d41f16bcd500bc28b7bfc98043ebf61ea081c26)\r\n- [New] add `BigInt64Array` and `BigUint64Array` [`a6cca25`](https://github.com/ljharb/get-intrinsic/commit/a6cca25f29635889b7e9bd669baf9e04be90e48c)\r\n- [Tests] use `gopd` [`ecf7722`](https://github.com/ljharb/get-intrinsic/commit/ecf7722240d15cfd16edda06acf63359c10fb9bd)\r\n\r\n## [v1.1.3](https://github.com/ljharb/get-intrinsic/compare/v1.1.2...v1.1.3) - 2022-09-12\r\n\r\n### Commits\r\n\r\n- [Dev Deps] update `es-abstract`, `es-value-fixtures`, `tape` [`07ff291`](https://github.com/ljharb/get-intrinsic/commit/07ff291816406ebe5a12d7f16965bde0942dd688)\r\n- [Fix] properly check for % signs [`50ac176`](https://github.com/ljharb/get-intrinsic/commit/50ac1760fe99c227e64eabde76e9c0e44cd881b5)\r\n\r\n## [v1.1.2](https://github.com/ljharb/get-intrinsic/compare/v1.1.1...v1.1.2) - 2022-06-08\r\n\r\n### Fixed\r\n\r\n- [Fix] properly validate against extra % signs [`#16`](https://github.com/ljharb/get-intrinsic/issues/16)\r\n\r\n### Commits\r\n\r\n- [actions] reuse common workflows [`0972547`](https://github.com/ljharb/get-intrinsic/commit/0972547efd0abc863fe4c445a6ca7eb4f8c6901d)\r\n- [meta] use `npmignore` to autogenerate an npmignore file [`5ba0b51`](https://github.com/ljharb/get-intrinsic/commit/5ba0b51d8d8d4f1c31d426d74abc0770fd106bad)\r\n- [actions] use `node/install` instead of `node/run`; use `codecov` action [`c364492`](https://github.com/ljharb/get-intrinsic/commit/c364492af4af51333e6f81c0bf21fd3d602c3661)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `es-abstract`, `object-inspect`, `tape` [`dc04dad`](https://github.com/ljharb/get-intrinsic/commit/dc04dad86f6e5608775a2640cb0db5927ae29ed9)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `es-abstract`, `object-inspect`, `safe-publish-latest`, `tape` [`1c14059`](https://github.com/ljharb/get-intrinsic/commit/1c1405984e86dd2dc9366c15d8a0294a96a146a5)\r\n- [Tests] use `mock-property` [`b396ef0`](https://github.com/ljharb/get-intrinsic/commit/b396ef05bb73b1d699811abd64b0d9b97997fdda)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `auto-changelog`, `object-inspect`, `tape` [`c2c758d`](https://github.com/ljharb/get-intrinsic/commit/c2c758d3b90af4fef0a76910d8d3c292ec8d1d3e)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `es-abstract`, `es-value-fixtures`, `object-inspect`, `tape` [`29e3c09`](https://github.com/ljharb/get-intrinsic/commit/29e3c091c2bf3e17099969847e8729d0e46896de)\r\n- [actions] update codecov uploader [`8cbc141`](https://github.com/ljharb/get-intrinsic/commit/8cbc1418940d7a8941f3a7985cbc4ac095c5e13d)\r\n- [Dev Deps] update `@ljharb/eslint-config`, `es-abstract`, `es-value-fixtures`, `object-inspect`, `tape` [`10b6f5c`](https://github.com/ljharb/get-intrinsic/commit/10b6f5c02593fb3680c581d696ac124e30652932)\r\n- [readme] add github actions/codecov badges [`4e25400`](https://github.com/ljharb/get-intrinsic/commit/4e25400d9f51ae9eb059cbe22d9144e70ea214e8)\r\n- [Tests] use `for-each` instead of `foreach` [`c05b957`](https://github.com/ljharb/get-intrinsic/commit/c05b957ad9a7bc7721af7cc9e9be1edbfe057496)\r\n- [Dev Deps] update `es-abstract` [`29b05ae`](https://github.com/ljharb/get-intrinsic/commit/29b05aec3e7330e9ad0b8e0f685a9112c20cdd97)\r\n- [meta] use `prepublishOnly` script for npm 7+ [`95c285d`](https://github.com/ljharb/get-intrinsic/commit/95c285da810516057d3bbfa871176031af38f05d)\r\n- [Deps] update `has-symbols` [`593cb4f`](https://github.com/ljharb/get-intrinsic/commit/593cb4fb38e7922e40e42c183f45274b636424cd)\r\n- [readme] fix repo URLs [`1c8305b`](https://github.com/ljharb/get-intrinsic/commit/1c8305b5365827c9b6fc785434aac0e1328ff2f5)\r\n- [Deps] update `has-symbols` [`c7138b6`](https://github.com/ljharb/get-intrinsic/commit/c7138b6c6d73132d859471fb8c13304e1e7c8b20)\r\n- [Dev Deps] remove unused `has-bigints` [`bd63aff`](https://github.com/ljharb/get-intrinsic/commit/bd63aff6ad8f3a986c557fcda2914187bdaab359)\r\n\r\n## [v1.1.1](https://github.com/ljharb/get-intrinsic/compare/v1.1.0...v1.1.1) - 2021-02-03\r\n\r\n### Fixed\r\n\r\n- [meta] export `./package.json` [`#9`](https://github.com/ljharb/get-intrinsic/issues/9)\r\n\r\n### Commits\r\n\r\n- [readme] flesh out the readme; use `evalmd` [`d12f12c`](https://github.com/ljharb/get-intrinsic/commit/d12f12c15345a0a0772cc65a7c64369529abd614)\r\n- [eslint] set up proper globals config [`5a8c098`](https://github.com/ljharb/get-intrinsic/commit/5a8c0984e3319d1ac0e64b102f8ec18b64e79f36)\r\n- [Dev Deps] update `eslint` [`7b9a5c0`](https://github.com/ljharb/get-intrinsic/commit/7b9a5c0d31a90ca1a1234181c74988fb046701cd)\r\n\r\n## [v1.1.0](https://github.com/ljharb/get-intrinsic/compare/v1.0.2...v1.1.0) - 2021-01-25\r\n\r\n### Fixed\r\n\r\n- [Refactor] delay `Function` eval until syntax-derived values are requested [`#3`](https://github.com/ljharb/get-intrinsic/issues/3)\r\n\r\n### Commits\r\n\r\n- [Tests] migrate tests to Github Actions [`2ab762b`](https://github.com/ljharb/get-intrinsic/commit/2ab762b48164aea8af37a40ba105bbc8246ab8c4)\r\n- [meta] do not publish github action workflow files [`5e7108e`](https://github.com/ljharb/get-intrinsic/commit/5e7108e4768b244d48d9567ba4f8a6cab9c65b8e)\r\n- [Tests] add some coverage [`01ac7a8`](https://github.com/ljharb/get-intrinsic/commit/01ac7a87ac29738567e8524cd8c9e026b1fa8cb3)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `call-bind`, `es-abstract`, `tape`; add `call-bind` [`911b672`](https://github.com/ljharb/get-intrinsic/commit/911b672fbffae433a96924c6ce013585e425f4b7)\r\n- [Refactor] rearrange evalled constructors a bit [`7e7e4bf`](https://github.com/ljharb/get-intrinsic/commit/7e7e4bf583f3799c8ac1c6c5e10d2cb553957347)\r\n- [meta] add Automatic Rebase and Require Allow Edits workflows [`0199968`](https://github.com/ljharb/get-intrinsic/commit/01999687a263ffce0a3cb011dfbcb761754aedbc)\r\n\r\n## [v1.0.2](https://github.com/ljharb/get-intrinsic/compare/v1.0.1...v1.0.2) - 2020-12-17\r\n\r\n### Commits\r\n\r\n- [Fix] Throw for non‑existent intrinsics [`68f873b`](https://github.com/ljharb/get-intrinsic/commit/68f873b013c732a05ad6f5fc54f697e55515461b)\r\n- [Fix] Throw for non‑existent segments in the intrinsic path [`8325dee`](https://github.com/ljharb/get-intrinsic/commit/8325deee43128f3654d3399aa9591741ebe17b21)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `has-bigints`, `object-inspect` [`0c227a7`](https://github.com/ljharb/get-intrinsic/commit/0c227a7d8b629166f25715fd242553892e458525)\r\n- [meta] do not lint coverage output [`70d2419`](https://github.com/ljharb/get-intrinsic/commit/70d24199b620043cd9110fc5f426d214ebe21dc9)\r\n\r\n## [v1.0.1](https://github.com/ljharb/get-intrinsic/compare/v1.0.0...v1.0.1) - 2020-10-30\r\n\r\n### Commits\r\n\r\n- [Tests] gather coverage data on every job [`d1d280d`](https://github.com/ljharb/get-intrinsic/commit/d1d280dec714e3f0519cc877dbcb193057d9cac6)\r\n- [Fix] add missing dependencies [`5031771`](https://github.com/ljharb/get-intrinsic/commit/5031771bb1095b38be88ce7c41d5de88718e432e)\r\n- [Tests] use `es-value-fixtures` [`af48765`](https://github.com/ljharb/get-intrinsic/commit/af48765a23c5323fb0b6b38dbf00eb5099c7bebc)\r\n\r\n## v1.0.0 - 2020-10-29\r\n\r\n### Commits\r\n\r\n- Implementation [`bbce57c`](https://github.com/ljharb/get-intrinsic/commit/bbce57c6f33d05b2d8d3efa273ceeb3ee01127bb)\r\n- Tests [`17b4f0d`](https://github.com/ljharb/get-intrinsic/commit/17b4f0d56dea6b4059b56fc30ef3ee4d9500ebc2)\r\n- Initial commit [`3153294`](https://github.com/ljharb/get-intrinsic/commit/31532948de363b0a27dd9fd4649e7b7028ec4b44)\r\n- npm init [`fb326c4`](https://github.com/ljharb/get-intrinsic/commit/fb326c4d2817c8419ec31de1295f06bb268a7902)\r\n- [meta] add Automatic Rebase and Require Allow Edits workflows [`48862fb`](https://github.com/ljharb/get-intrinsic/commit/48862fb2508c8f6a57968e6d08b7c883afc9d550)\r\n- [meta] add `auto-changelog` [`5f28ad0`](https://github.com/ljharb/get-intrinsic/commit/5f28ad019e060a353d8028f9f2591a9cc93074a1)\r\n- [meta] add \"funding\"; create `FUNDING.yml` [`c2bbdde`](https://github.com/ljharb/get-intrinsic/commit/c2bbddeba73a875be61484ee4680b129a6d4e0a1)\r\n- [Tests] add `npm run lint` [`0a84b98`](https://github.com/ljharb/get-intrinsic/commit/0a84b98b22b7cf7a748666f705b0003a493c35fd)\r\n- Only apps should have lockfiles [`9586c75`](https://github.com/ljharb/get-intrinsic/commit/9586c75866c1ee678e4d5d4dbbdef6997e511b05)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/get-intrinsic/CHANGELOG.md b/node_modules/get-intrinsic/CHANGELOG.md
--- a/node_modules/get-intrinsic/CHANGELOG.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/get-intrinsic/CHANGELOG.md	(date 1753913035665)
@@ -5,6 +5,49 @@
 The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/)
 and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).
 
+## [v1.3.0](https://github.com/ljharb/get-intrinsic/compare/v1.2.7...v1.3.0) - 2025-02-22
+
+### Commits
+
+- [Dev Deps] update `es-abstract`, `es-value-fixtures`, `for-each`, `object-inspect` [`9b61553`](https://github.com/ljharb/get-intrinsic/commit/9b61553c587f1c1edbd435597e88c7d387da97dd)
+- [Deps] update `call-bind-apply-helpers`, `es-object-atoms`, `get-proto` [`a341fee`](https://github.com/ljharb/get-intrinsic/commit/a341fee0f39a403b0f0069e82c97642d5eb11043)
+- [New] add `Float16Array` [`de22116`](https://github.com/ljharb/get-intrinsic/commit/de22116b492fb989a0341bceb6e573abfaed73dc)
+
+## [v1.2.7](https://github.com/ljharb/get-intrinsic/compare/v1.2.6...v1.2.7) - 2025-01-02
+
+### Commits
+
+- [Refactor] use `get-proto` directly [`00ab955`](https://github.com/ljharb/get-intrinsic/commit/00ab95546a0980c8ad42a84253daaa8d2adcedf9)
+- [Deps] update `math-intrinsics` [`c716cdd`](https://github.com/ljharb/get-intrinsic/commit/c716cdd6bbe36b438057025561b8bb5a879ac8a0)
+- [Dev Deps] update `call-bound`, `es-abstract` [`dc648a6`](https://github.com/ljharb/get-intrinsic/commit/dc648a67eb359037dff8d8619bfa71d86debccb1)
+
+## [v1.2.6](https://github.com/ljharb/get-intrinsic/compare/v1.2.5...v1.2.6) - 2024-12-11
+
+### Commits
+
+- [Refactor] use `math-intrinsics` [`841be86`](https://github.com/ljharb/get-intrinsic/commit/841be8641a9254c4c75483b30c8871b5d5065926)
+- [Refactor] use `es-object-atoms` [`42057df`](https://github.com/ljharb/get-intrinsic/commit/42057dfa16f66f64787e66482af381cc6f31d2c1)
+- [Deps] update `call-bind-apply-helpers` [`45afa24`](https://github.com/ljharb/get-intrinsic/commit/45afa24a9ee4d6d3c172db1f555b16cb27843ef4)
+- [Dev Deps] update `call-bound` [`9cba9c6`](https://github.com/ljharb/get-intrinsic/commit/9cba9c6e70212bc163b7a5529cb25df46071646f)
+
+## [v1.2.5](https://github.com/ljharb/get-intrinsic/compare/v1.2.4...v1.2.5) - 2024-12-06
+
+### Commits
+
+- [actions] split out node 10-20, and 20+ [`6e2b9dd`](https://github.com/ljharb/get-intrinsic/commit/6e2b9dd23902665681ebe453256ccfe21d7966f0)
+- [Refactor] use `dunder-proto` and `call-bind-apply-helpers` instead of `has-proto` [`c095d17`](https://github.com/ljharb/get-intrinsic/commit/c095d179ad0f4fbfff20c8a3e0cb4fe668018998)
+- [Refactor] use `gopd` [`9841d5b`](https://github.com/ljharb/get-intrinsic/commit/9841d5b35f7ab4fd2d193f0c741a50a077920e90)
+- [Dev Deps] update `@ljharb/eslint-config`, `auto-changelog`, `es-abstract`, `es-value-fixtures`, `gopd`, `mock-property`, `object-inspect`, `tape` [`2d07e01`](https://github.com/ljharb/get-intrinsic/commit/2d07e01310cee2cbaedfead6903df128b1f5d425)
+- [Deps] update `gopd`, `has-proto`, `has-symbols`, `hasown` [`974d8bf`](https://github.com/ljharb/get-intrinsic/commit/974d8bf5baad7939eef35c25cc1dd88c10a30fa6)
+- [Dev Deps] update `call-bind`, `es-abstract`, `tape` [`df9dde1`](https://github.com/ljharb/get-intrinsic/commit/df9dde178186631ab8a3165ede056549918ce4bc)
+- [Refactor] cache `es-define-property` as well [`43ef543`](https://github.com/ljharb/get-intrinsic/commit/43ef543cb02194401420e3a914a4ca9168691926)
+- [Deps] update `has-proto`, `has-symbols`, `hasown` [`ad4949d`](https://github.com/ljharb/get-intrinsic/commit/ad4949d5467316505aad89bf75f9417ed782f7af)
+- [Tests] use `call-bound` directly [`ad5c406`](https://github.com/ljharb/get-intrinsic/commit/ad5c4069774bfe90e520a35eead5fe5ca9d69e80)
+- [Deps] update `has-proto`, `hasown` [`45414ca`](https://github.com/ljharb/get-intrinsic/commit/45414caa312333a2798953682c68f85c550627dd)
+- [Tests] replace `aud` with `npm audit` [`18d3509`](https://github.com/ljharb/get-intrinsic/commit/18d3509f79460e7924da70409ee81e5053087523)
+- [Deps] update `es-define-property` [`aadaa3b`](https://github.com/ljharb/get-intrinsic/commit/aadaa3b2188d77ad9bff394ce5d4249c49eb21f5)
+- [Dev Deps] add missing peer dep [`c296a16`](https://github.com/ljharb/get-intrinsic/commit/c296a16246d0c9a5981944f4cc5cf61fbda0cf6a)
+
 ## [v1.2.4](https://github.com/ljharb/get-intrinsic/compare/v1.2.3...v1.2.4) - 2024-02-05
 
 ### Commits
Index: node_modules/get-intrinsic/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n\t\"name\": \"get-intrinsic\",\r\n\t\"version\": \"1.2.4\",\r\n\t\"description\": \"Get and robustly cache all JS language-level intrinsics at first require time\",\r\n\t\"main\": \"index.js\",\r\n\t\"exports\": {\r\n\t\t\".\": \"./index.js\",\r\n\t\t\"./package.json\": \"./package.json\"\r\n\t},\r\n\t\"sideEffects\": false,\r\n\t\"scripts\": {\r\n\t\t\"prepack\": \"npmignore --auto --commentLines=autogenerated\",\r\n\t\t\"prepublish\": \"not-in-publish || npm run prepublishOnly\",\r\n\t\t\"prepublishOnly\": \"safe-publish-latest\",\r\n\t\t\"prelint\": \"evalmd README.md\",\r\n\t\t\"lint\": \"eslint --ext=.js,.mjs .\",\r\n\t\t\"pretest\": \"npm run lint\",\r\n\t\t\"tests-only\": \"nyc tape 'test/**/*.js'\",\r\n\t\t\"test\": \"npm run tests-only\",\r\n\t\t\"posttest\": \"aud --production\",\r\n\t\t\"version\": \"auto-changelog && git add CHANGELOG.md\",\r\n\t\t\"postversion\": \"auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \\\"v$(node -e \\\"console.log(require('./package.json').version)\\\")\\\"\"\r\n\t},\r\n\t\"repository\": {\r\n\t\t\"type\": \"git\",\r\n\t\t\"url\": \"git+https://github.com/ljharb/get-intrinsic.git\"\r\n\t},\r\n\t\"keywords\": [\r\n\t\t\"javascript\",\r\n\t\t\"ecmascript\",\r\n\t\t\"es\",\r\n\t\t\"js\",\r\n\t\t\"intrinsic\",\r\n\t\t\"getintrinsic\",\r\n\t\t\"es-abstract\"\r\n\t],\r\n\t\"author\": \"Jordan Harband <ljharb@gmail.com>\",\r\n\t\"funding\": {\r\n\t\t\"url\": \"https://github.com/sponsors/ljharb\"\r\n\t},\r\n\t\"license\": \"MIT\",\r\n\t\"bugs\": {\r\n\t\t\"url\": \"https://github.com/ljharb/get-intrinsic/issues\"\r\n\t},\r\n\t\"homepage\": \"https://github.com/ljharb/get-intrinsic#readme\",\r\n\t\"devDependencies\": {\r\n\t\t\"@ljharb/eslint-config\": \"^21.1.0\",\r\n\t\t\"aud\": \"^2.0.4\",\r\n\t\t\"auto-changelog\": \"^2.4.0\",\r\n\t\t\"call-bind\": \"^1.0.5\",\r\n\t\t\"es-abstract\": \"^1.22.3\",\r\n\t\t\"es-value-fixtures\": \"^1.4.2\",\r\n\t\t\"eslint\": \"=8.8.0\",\r\n\t\t\"evalmd\": \"^0.0.19\",\r\n\t\t\"for-each\": \"^0.3.3\",\r\n\t\t\"gopd\": \"^1.0.1\",\r\n\t\t\"make-async-function\": \"^1.0.0\",\r\n\t\t\"make-async-generator-function\": \"^1.0.0\",\r\n\t\t\"make-generator-function\": \"^2.0.0\",\r\n\t\t\"mock-property\": \"^1.0.3\",\r\n\t\t\"npmignore\": \"^0.3.1\",\r\n\t\t\"nyc\": \"^10.3.2\",\r\n\t\t\"object-inspect\": \"^1.13.1\",\r\n\t\t\"safe-publish-latest\": \"^2.0.0\",\r\n\t\t\"tape\": \"^5.7.4\"\r\n\t},\r\n\t\"auto-changelog\": {\r\n\t\t\"output\": \"CHANGELOG.md\",\r\n\t\t\"template\": \"keepachangelog\",\r\n\t\t\"unreleased\": false,\r\n\t\t\"commitLimit\": false,\r\n\t\t\"backfillLimit\": false,\r\n\t\t\"hideCredit\": true\r\n\t},\r\n\t\"dependencies\": {\r\n\t\t\"es-errors\": \"^1.3.0\",\r\n\t\t\"function-bind\": \"^1.1.2\",\r\n\t\t\"has-proto\": \"^1.0.1\",\r\n\t\t\"has-symbols\": \"^1.0.3\",\r\n\t\t\"hasown\": \"^2.0.0\"\r\n\t},\r\n\t\"testling\": {\r\n\t\t\"files\": \"test/GetIntrinsic.js\"\r\n\t},\r\n\t\"publishConfig\": {\r\n\t\t\"ignore\": [\r\n\t\t\t\".github/workflows\"\r\n\t\t]\r\n\t},\r\n\t\"engines\": {\r\n\t\t\"node\": \">= 0.4\"\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/get-intrinsic/package.json b/node_modules/get-intrinsic/package.json
--- a/node_modules/get-intrinsic/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/get-intrinsic/package.json	(date 1753913035663)
@@ -1,6 +1,6 @@
 {
 	"name": "get-intrinsic",
-	"version": "1.2.4",
+	"version": "1.3.0",
 	"description": "Get and robustly cache all JS language-level intrinsics at first require time",
 	"main": "index.js",
 	"exports": {
@@ -17,7 +17,7 @@
 		"pretest": "npm run lint",
 		"tests-only": "nyc tape 'test/**/*.js'",
 		"test": "npm run tests-only",
-		"posttest": "aud --production",
+		"posttest": "npx npm@'>= 10.2' audit --production",
 		"version": "auto-changelog && git add CHANGELOG.md",
 		"postversion": "auto-changelog && git add CHANGELOG.md && git commit --no-edit --amend && git tag -f \"v$(node -e \"console.log(require('./package.json').version)\")\""
 	},
@@ -43,26 +43,37 @@
 		"url": "https://github.com/ljharb/get-intrinsic/issues"
 	},
 	"homepage": "https://github.com/ljharb/get-intrinsic#readme",
+	"dependencies": {
+		"call-bind-apply-helpers": "^1.0.2",
+		"es-define-property": "^1.0.1",
+		"es-errors": "^1.3.0",
+		"es-object-atoms": "^1.1.1",
+		"function-bind": "^1.1.2",
+		"get-proto": "^1.0.1",
+		"gopd": "^1.2.0",
+		"has-symbols": "^1.1.0",
+		"hasown": "^2.0.2",
+		"math-intrinsics": "^1.1.0"
+	},
 	"devDependencies": {
-		"@ljharb/eslint-config": "^21.1.0",
-		"aud": "^2.0.4",
-		"auto-changelog": "^2.4.0",
-		"call-bind": "^1.0.5",
-		"es-abstract": "^1.22.3",
-		"es-value-fixtures": "^1.4.2",
+		"@ljharb/eslint-config": "^21.1.1",
+		"auto-changelog": "^2.5.0",
+		"call-bound": "^1.0.3",
+		"encoding": "^0.1.13",
+		"es-abstract": "^1.23.9",
+		"es-value-fixtures": "^1.7.1",
 		"eslint": "=8.8.0",
 		"evalmd": "^0.0.19",
-		"for-each": "^0.3.3",
-		"gopd": "^1.0.1",
+		"for-each": "^0.3.5",
 		"make-async-function": "^1.0.0",
 		"make-async-generator-function": "^1.0.0",
 		"make-generator-function": "^2.0.0",
-		"mock-property": "^1.0.3",
+		"mock-property": "^1.1.0",
 		"npmignore": "^0.3.1",
 		"nyc": "^10.3.2",
-		"object-inspect": "^1.13.1",
+		"object-inspect": "^1.13.4",
 		"safe-publish-latest": "^2.0.0",
-		"tape": "^5.7.4"
+		"tape": "^5.9.0"
 	},
 	"auto-changelog": {
 		"output": "CHANGELOG.md",
@@ -72,13 +83,6 @@
 		"backfillLimit": false,
 		"hideCredit": true
 	},
-	"dependencies": {
-		"es-errors": "^1.3.0",
-		"function-bind": "^1.1.2",
-		"has-proto": "^1.0.1",
-		"has-symbols": "^1.0.3",
-		"hasown": "^2.0.0"
-	},
 	"testling": {
 		"files": "test/GetIntrinsic.js"
 	},
Index: node_modules/get-intrinsic/test/GetIntrinsic.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar GetIntrinsic = require('../');\r\n\r\nvar test = require('tape');\r\nvar forEach = require('for-each');\r\nvar debug = require('object-inspect');\r\nvar generatorFns = require('make-generator-function')();\r\nvar asyncFns = require('make-async-function').list();\r\nvar asyncGenFns = require('make-async-generator-function')();\r\nvar mockProperty = require('mock-property');\r\n\r\nvar callBound = require('call-bind/callBound');\r\nvar v = require('es-value-fixtures');\r\nvar $gOPD = require('gopd');\r\nvar DefinePropertyOrThrow = require('es-abstract/2021/DefinePropertyOrThrow');\r\n\r\nvar $isProto = callBound('%Object.prototype.isPrototypeOf%');\r\n\r\ntest('export', function (t) {\r\n\tt.equal(typeof GetIntrinsic, 'function', 'it is a function');\r\n\tt.equal(GetIntrinsic.length, 2, 'function has length of 2');\r\n\r\n\tt.end();\r\n});\r\n\r\ntest('throws', function (t) {\r\n\tt['throws'](\r\n\t\tfunction () { GetIntrinsic('not an intrinsic'); },\r\n\t\tSyntaxError,\r\n\t\t'nonexistent intrinsic throws a syntax error'\r\n\t);\r\n\r\n\tt['throws'](\r\n\t\tfunction () { GetIntrinsic(''); },\r\n\t\tTypeError,\r\n\t\t'empty string intrinsic throws a type error'\r\n\t);\r\n\r\n\tt['throws'](\r\n\t\tfunction () { GetIntrinsic('.'); },\r\n\t\tSyntaxError,\r\n\t\t'\"just a dot\" intrinsic throws a syntax error'\r\n\t);\r\n\r\n\tt['throws'](\r\n\t\tfunction () { GetIntrinsic('%String'); },\r\n\t\tSyntaxError,\r\n\t\t'Leading % without trailing % throws a syntax error'\r\n\t);\r\n\r\n\tt['throws'](\r\n\t\tfunction () { GetIntrinsic('String%'); },\r\n\t\tSyntaxError,\r\n\t\t'Trailing % without leading % throws a syntax error'\r\n\t);\r\n\r\n\tt['throws'](\r\n\t\tfunction () { GetIntrinsic(\"String['prototype]\"); },\r\n\t\tSyntaxError,\r\n\t\t'Dynamic property access is disallowed for intrinsics (unterminated string)'\r\n\t);\r\n\r\n\tt['throws'](\r\n\t\tfunction () { GetIntrinsic('%Proxy.prototype.undefined%'); },\r\n\t\tTypeError,\r\n\t\t\"Throws when middle part doesn't exist (%Proxy.prototype.undefined%)\"\r\n\t);\r\n\r\n\tt['throws'](\r\n\t\tfunction () { GetIntrinsic('%Array.prototype%garbage%'); },\r\n\t\tSyntaxError,\r\n\t\t'Throws with extra percent signs'\r\n\t);\r\n\r\n\tt['throws'](\r\n\t\tfunction () { GetIntrinsic('%Array.prototype%push%'); },\r\n\t\tSyntaxError,\r\n\t\t'Throws with extra percent signs, even on an existing intrinsic'\r\n\t);\r\n\r\n\tforEach(v.nonStrings, function (nonString) {\r\n\t\tt['throws'](\r\n\t\t\tfunction () { GetIntrinsic(nonString); },\r\n\t\t\tTypeError,\r\n\t\t\tdebug(nonString) + ' is not a String'\r\n\t\t);\r\n\t});\r\n\r\n\tforEach(v.nonBooleans, function (nonBoolean) {\r\n\t\tt['throws'](\r\n\t\t\tfunction () { GetIntrinsic('%', nonBoolean); },\r\n\t\t\tTypeError,\r\n\t\t\tdebug(nonBoolean) + ' is not a Boolean'\r\n\t\t);\r\n\t});\r\n\r\n\tforEach([\r\n\t\t'toString',\r\n\t\t'propertyIsEnumerable',\r\n\t\t'hasOwnProperty'\r\n\t], function (objectProtoMember) {\r\n\t\tt['throws'](\r\n\t\t\tfunction () { GetIntrinsic(objectProtoMember); },\r\n\t\t\tSyntaxError,\r\n\t\t\tdebug(objectProtoMember) + ' is not an intrinsic'\r\n\t\t);\r\n\t});\r\n\r\n\tt.end();\r\n});\r\n\r\ntest('base intrinsics', function (t) {\r\n\tt.equal(GetIntrinsic('%Object%'), Object, '%Object% yields Object');\r\n\tt.equal(GetIntrinsic('Object'), Object, 'Object yields Object');\r\n\tt.equal(GetIntrinsic('%Array%'), Array, '%Array% yields Array');\r\n\tt.equal(GetIntrinsic('Array'), Array, 'Array yields Array');\r\n\r\n\tt.end();\r\n});\r\n\r\ntest('dotted paths', function (t) {\r\n\tt.equal(GetIntrinsic('%Object.prototype.toString%'), Object.prototype.toString, '%Object.prototype.toString% yields Object.prototype.toString');\r\n\tt.equal(GetIntrinsic('Object.prototype.toString'), Object.prototype.toString, 'Object.prototype.toString yields Object.prototype.toString');\r\n\tt.equal(GetIntrinsic('%Array.prototype.push%'), Array.prototype.push, '%Array.prototype.push% yields Array.prototype.push');\r\n\tt.equal(GetIntrinsic('Array.prototype.push'), Array.prototype.push, 'Array.prototype.push yields Array.prototype.push');\r\n\r\n\ttest('underscore paths are aliases for dotted paths', { skip: !Object.isFrozen || Object.isFrozen(Object.prototype) }, function (st) {\r\n\t\tvar original = GetIntrinsic('%ObjProto_toString%');\r\n\r\n\t\tforEach([\r\n\t\t\t'%Object.prototype.toString%',\r\n\t\t\t'Object.prototype.toString',\r\n\t\t\t'%ObjectPrototype.toString%',\r\n\t\t\t'ObjectPrototype.toString',\r\n\t\t\t'%ObjProto_toString%',\r\n\t\t\t'ObjProto_toString'\r\n\t\t], function (name) {\r\n\t\t\tDefinePropertyOrThrow(Object.prototype, 'toString', {\r\n\t\t\t\t'[[Value]]': function toString() {\r\n\t\t\t\t\treturn original.apply(this, arguments);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tst.equal(GetIntrinsic(name), original, name + ' yields original Object.prototype.toString');\r\n\t\t});\r\n\r\n\t\tDefinePropertyOrThrow(Object.prototype, 'toString', { '[[Value]]': original });\r\n\t\tst.end();\r\n\t});\r\n\r\n\ttest('dotted paths cache', { skip: !Object.isFrozen || Object.isFrozen(Object.prototype) }, function (st) {\r\n\t\tvar original = GetIntrinsic('%Object.prototype.propertyIsEnumerable%');\r\n\r\n\t\tforEach([\r\n\t\t\t'%Object.prototype.propertyIsEnumerable%',\r\n\t\t\t'Object.prototype.propertyIsEnumerable',\r\n\t\t\t'%ObjectPrototype.propertyIsEnumerable%',\r\n\t\t\t'ObjectPrototype.propertyIsEnumerable'\r\n\t\t], function (name) {\r\n\t\t\tvar restore = mockProperty(Object.prototype, 'propertyIsEnumerable', {\r\n\t\t\t\tvalue: function propertyIsEnumerable() {\r\n\t\t\t\t\treturn original.apply(this, arguments);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tst.equal(GetIntrinsic(name), original, name + ' yields cached Object.prototype.propertyIsEnumerable');\r\n\r\n\t\t\trestore();\r\n\t\t});\r\n\r\n\t\tst.end();\r\n\t});\r\n\r\n\ttest('dotted path reports correct error', function (st) {\r\n\t\tst['throws'](function () {\r\n\t\t\tGetIntrinsic('%NonExistentIntrinsic.prototype.property%');\r\n\t\t}, /%NonExistentIntrinsic%/, 'The base intrinsic of %NonExistentIntrinsic.prototype.property% is %NonExistentIntrinsic%');\r\n\r\n\t\tst['throws'](function () {\r\n\t\t\tGetIntrinsic('%NonExistentIntrinsicPrototype.property%');\r\n\t\t}, /%NonExistentIntrinsicPrototype%/, 'The base intrinsic of %NonExistentIntrinsicPrototype.property% is %NonExistentIntrinsicPrototype%');\r\n\r\n\t\tst.end();\r\n\t});\r\n\r\n\tt.end();\r\n});\r\n\r\ntest('accessors', { skip: !$gOPD || typeof Map !== 'function' }, function (t) {\r\n\tvar actual = $gOPD(Map.prototype, 'size');\r\n\tt.ok(actual, 'Map.prototype.size has a descriptor');\r\n\tt.equal(typeof actual.get, 'function', 'Map.prototype.size has a getter function');\r\n\tt.equal(GetIntrinsic('%Map.prototype.size%'), actual.get, '%Map.prototype.size% yields the getter for it');\r\n\tt.equal(GetIntrinsic('Map.prototype.size'), actual.get, 'Map.prototype.size yields the getter for it');\r\n\r\n\tt.end();\r\n});\r\n\r\ntest('generator functions', { skip: !generatorFns.length }, function (t) {\r\n\tvar $GeneratorFunction = GetIntrinsic('%GeneratorFunction%');\r\n\tvar $GeneratorFunctionPrototype = GetIntrinsic('%Generator%');\r\n\tvar $GeneratorPrototype = GetIntrinsic('%GeneratorPrototype%');\r\n\r\n\tforEach(generatorFns, function (genFn) {\r\n\t\tvar fnName = genFn.name;\r\n\t\tfnName = fnName ? \"'\" + fnName + \"'\" : 'genFn';\r\n\r\n\t\tt.ok(genFn instanceof $GeneratorFunction, fnName + ' instanceof %GeneratorFunction%');\r\n\t\tt.ok($isProto($GeneratorFunctionPrototype, genFn), '%Generator% is prototype of ' + fnName);\r\n\t\tt.ok($isProto($GeneratorPrototype, genFn.prototype), '%GeneratorPrototype% is prototype of ' + fnName + '.prototype');\r\n\t});\r\n\r\n\tt.end();\r\n});\r\n\r\ntest('async functions', { skip: !asyncFns.length }, function (t) {\r\n\tvar $AsyncFunction = GetIntrinsic('%AsyncFunction%');\r\n\tvar $AsyncFunctionPrototype = GetIntrinsic('%AsyncFunctionPrototype%');\r\n\r\n\tforEach(asyncFns, function (asyncFn) {\r\n\t\tvar fnName = asyncFn.name;\r\n\t\tfnName = fnName ? \"'\" + fnName + \"'\" : 'asyncFn';\r\n\r\n\t\tt.ok(asyncFn instanceof $AsyncFunction, fnName + ' instanceof %AsyncFunction%');\r\n\t\tt.ok($isProto($AsyncFunctionPrototype, asyncFn), '%AsyncFunctionPrototype% is prototype of ' + fnName);\r\n\t});\r\n\r\n\tt.end();\r\n});\r\n\r\ntest('async generator functions', { skip: asyncGenFns.length === 0 }, function (t) {\r\n\tvar $AsyncGeneratorFunction = GetIntrinsic('%AsyncGeneratorFunction%');\r\n\tvar $AsyncGeneratorFunctionPrototype = GetIntrinsic('%AsyncGenerator%');\r\n\tvar $AsyncGeneratorPrototype = GetIntrinsic('%AsyncGeneratorPrototype%');\r\n\r\n\tforEach(asyncGenFns, function (asyncGenFn) {\r\n\t\tvar fnName = asyncGenFn.name;\r\n\t\tfnName = fnName ? \"'\" + fnName + \"'\" : 'asyncGenFn';\r\n\r\n\t\tt.ok(asyncGenFn instanceof $AsyncGeneratorFunction, fnName + ' instanceof %AsyncGeneratorFunction%');\r\n\t\tt.ok($isProto($AsyncGeneratorFunctionPrototype, asyncGenFn), '%AsyncGenerator% is prototype of ' + fnName);\r\n\t\tt.ok($isProto($AsyncGeneratorPrototype, asyncGenFn.prototype), '%AsyncGeneratorPrototype% is prototype of ' + fnName + '.prototype');\r\n\t});\r\n\r\n\tt.end();\r\n});\r\n\r\ntest('%ThrowTypeError%', function (t) {\r\n\tvar $ThrowTypeError = GetIntrinsic('%ThrowTypeError%');\r\n\r\n\tt.equal(typeof $ThrowTypeError, 'function', 'is a function');\r\n\tt['throws'](\r\n\t\t$ThrowTypeError,\r\n\t\tTypeError,\r\n\t\t'%ThrowTypeError% throws a TypeError'\r\n\t);\r\n\r\n\tt.end();\r\n});\r\n\r\ntest('allowMissing', { skip: asyncGenFns.length > 0 }, function (t) {\r\n\tt['throws'](\r\n\t\tfunction () { GetIntrinsic('%AsyncGeneratorPrototype%'); },\r\n\t\tTypeError,\r\n\t\t'throws when missing'\r\n\t);\r\n\r\n\tt.equal(\r\n\t\tGetIntrinsic('%AsyncGeneratorPrototype%', true),\r\n\t\tundefined,\r\n\t\t'does not throw when allowMissing'\r\n\t);\r\n\r\n\tt.end();\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/get-intrinsic/test/GetIntrinsic.js b/node_modules/get-intrinsic/test/GetIntrinsic.js
--- a/node_modules/get-intrinsic/test/GetIntrinsic.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/get-intrinsic/test/GetIntrinsic.js	(date 1753913035659)
@@ -10,10 +10,10 @@
 var asyncGenFns = require('make-async-generator-function')();
 var mockProperty = require('mock-property');
 
-var callBound = require('call-bind/callBound');
+var callBound = require('call-bound');
 var v = require('es-value-fixtures');
 var $gOPD = require('gopd');
-var DefinePropertyOrThrow = require('es-abstract/2021/DefinePropertyOrThrow');
+var DefinePropertyOrThrow = require('es-abstract/2023/DefinePropertyOrThrow');
 
 var $isProto = callBound('%Object.prototype.isPrototypeOf%');
 
Index: node_modules/express/History.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>4.19.2 / 2024-03-25\r\n==========\r\n\r\n  * Improved fix for open redirect allow list bypass\r\n\r\n4.19.1 / 2024-03-20\r\n==========\r\n\r\n  * Allow passing non-strings to res.location with new encoding handling checks\r\n\r\n4.19.0 / 2024-03-20\r\n==========\r\n\r\n  * Prevent open redirect allow list bypass due to encodeurl\r\n  * deps: cookie@0.6.0\r\n\r\n4.18.3 / 2024-02-29\r\n==========\r\n\r\n  * Fix routing requests without method\r\n  * deps: body-parser@1.20.2\r\n    - Fix strict json error message on Node.js 19+\r\n    - deps: content-type@~1.0.5\r\n    - deps: raw-body@2.5.2\r\n  * deps: cookie@0.6.0\r\n    - Add `partitioned` option\r\n\r\n4.18.2 / 2022-10-08\r\n===================\r\n\r\n  * Fix regression routing a large stack in a single route\r\n  * deps: body-parser@1.20.1\r\n    - deps: qs@6.11.0\r\n    - perf: remove unnecessary object clone\r\n  * deps: qs@6.11.0\r\n\r\n4.18.1 / 2022-04-29\r\n===================\r\n\r\n  * Fix hanging on large stack of sync routes\r\n\r\n4.18.0 / 2022-04-25\r\n===================\r\n\r\n  * Add \"root\" option to `res.download`\r\n  * Allow `options` without `filename` in `res.download`\r\n  * Deprecate string and non-integer arguments to `res.status`\r\n  * Fix behavior of `null`/`undefined` as `maxAge` in `res.cookie`\r\n  * Fix handling very large stacks of sync middleware\r\n  * Ignore `Object.prototype` values in settings through `app.set`/`app.get`\r\n  * Invoke `default` with same arguments as types in `res.format`\r\n  * Support proper 205 responses using `res.send`\r\n  * Use `http-errors` for `res.format` error\r\n  * deps: body-parser@1.20.0\r\n    - Fix error message for json parse whitespace in `strict`\r\n    - Fix internal error when inflated body exceeds limit\r\n    - Prevent loss of async hooks context\r\n    - Prevent hanging when request already read\r\n    - deps: depd@2.0.0\r\n    - deps: http-errors@2.0.0\r\n    - deps: on-finished@2.4.1\r\n    - deps: qs@6.10.3\r\n    - deps: raw-body@2.5.1\r\n  * deps: cookie@0.5.0\r\n    - Add `priority` option\r\n    - Fix `expires` option to reject invalid dates\r\n  * deps: depd@2.0.0\r\n    - Replace internal `eval` usage with `Function` constructor\r\n    - Use instance methods on `process` to check for listeners\r\n  * deps: finalhandler@1.2.0\r\n    - Remove set content headers that break response\r\n    - deps: on-finished@2.4.1\r\n    - deps: statuses@2.0.1\r\n  * deps: on-finished@2.4.1\r\n    - Prevent loss of async hooks context\r\n  * deps: qs@6.10.3\r\n  * deps: send@0.18.0\r\n    - Fix emitted 416 error missing headers property\r\n    - Limit the headers removed for 304 response\r\n    - deps: depd@2.0.0\r\n    - deps: destroy@1.2.0\r\n    - deps: http-errors@2.0.0\r\n    - deps: on-finished@2.4.1\r\n    - deps: statuses@2.0.1\r\n  * deps: serve-static@1.15.0\r\n    - deps: send@0.18.0\r\n  * deps: statuses@2.0.1\r\n    - Remove code 306\r\n    - Rename `425 Unordered Collection` to standard `425 Too Early`\r\n\r\n4.17.3 / 2022-02-16\r\n===================\r\n\r\n  * deps: accepts@~1.3.8\r\n    - deps: mime-types@~2.1.34\r\n    - deps: negotiator@0.6.3\r\n  * deps: body-parser@1.19.2\r\n    - deps: bytes@3.1.2\r\n    - deps: qs@6.9.7\r\n    - deps: raw-body@2.4.3\r\n  * deps: cookie@0.4.2\r\n  * deps: qs@6.9.7\r\n    * Fix handling of `__proto__` keys\r\n  * pref: remove unnecessary regexp for trust proxy\r\n\r\n4.17.2 / 2021-12-16\r\n===================\r\n\r\n  * Fix handling of `undefined` in `res.jsonp`\r\n  * Fix handling of `undefined` when `\"json escape\"` is enabled\r\n  * Fix incorrect middleware execution with unanchored `RegExp`s\r\n  * Fix `res.jsonp(obj, status)` deprecation message\r\n  * Fix typo in `res.is` JSDoc\r\n  * deps: body-parser@1.19.1\r\n    - deps: bytes@3.1.1\r\n    - deps: http-errors@1.8.1\r\n    - deps: qs@6.9.6\r\n    - deps: raw-body@2.4.2\r\n    - deps: safe-buffer@5.2.1\r\n    - deps: type-is@~1.6.18\r\n  * deps: content-disposition@0.5.4\r\n    - deps: safe-buffer@5.2.1\r\n  * deps: cookie@0.4.1\r\n    - Fix `maxAge` option to reject invalid values\r\n  * deps: proxy-addr@~2.0.7\r\n    - Use `req.socket` over deprecated `req.connection`\r\n    - deps: forwarded@0.2.0\r\n    - deps: ipaddr.js@1.9.1\r\n  * deps: qs@6.9.6\r\n  * deps: safe-buffer@5.2.1\r\n  * deps: send@0.17.2\r\n    - deps: http-errors@1.8.1\r\n    - deps: ms@2.1.3\r\n    - pref: ignore empty http tokens\r\n  * deps: serve-static@1.14.2\r\n    - deps: send@0.17.2\r\n  * deps: setprototypeof@1.2.0\r\n\r\n4.17.1 / 2019-05-25\r\n===================\r\n\r\n  * Revert \"Improve error message for `null`/`undefined` to `res.status`\"\r\n\r\n4.17.0 / 2019-05-16\r\n===================\r\n\r\n  * Add `express.raw` to parse bodies into `Buffer`\r\n  * Add `express.text` to parse bodies into string\r\n  * Improve error message for non-strings to `res.sendFile`\r\n  * Improve error message for `null`/`undefined` to `res.status`\r\n  * Support multiple hosts in `X-Forwarded-Host`\r\n  * deps: accepts@~1.3.7\r\n  * deps: body-parser@1.19.0\r\n    - Add encoding MIK\r\n    - Add petabyte (`pb`) support\r\n    - Fix parsing array brackets after index\r\n    - deps: bytes@3.1.0\r\n    - deps: http-errors@1.7.2\r\n    - deps: iconv-lite@0.4.24\r\n    - deps: qs@6.7.0\r\n    - deps: raw-body@2.4.0\r\n    - deps: type-is@~1.6.17\r\n  * deps: content-disposition@0.5.3\r\n  * deps: cookie@0.4.0\r\n    - Add `SameSite=None` support\r\n  * deps: finalhandler@~1.1.2\r\n    - Set stricter `Content-Security-Policy` header\r\n    - deps: parseurl@~1.3.3\r\n    - deps: statuses@~1.5.0\r\n  * deps: parseurl@~1.3.3\r\n  * deps: proxy-addr@~2.0.5\r\n    - deps: ipaddr.js@1.9.0\r\n  * deps: qs@6.7.0\r\n    - Fix parsing array brackets after index\r\n  * deps: range-parser@~1.2.1\r\n  * deps: send@0.17.1\r\n    - Set stricter CSP header in redirect & error responses\r\n    - deps: http-errors@~1.7.2\r\n    - deps: mime@1.6.0\r\n    - deps: ms@2.1.1\r\n    - deps: range-parser@~1.2.1\r\n    - deps: statuses@~1.5.0\r\n    - perf: remove redundant `path.normalize` call\r\n  * deps: serve-static@1.14.1\r\n    - Set stricter CSP header in redirect response\r\n    - deps: parseurl@~1.3.3\r\n    - deps: send@0.17.1\r\n  * deps: setprototypeof@1.1.1\r\n  * deps: statuses@~1.5.0\r\n    - Add `103 Early Hints`\r\n  * deps: type-is@~1.6.18\r\n    - deps: mime-types@~2.1.24\r\n    - perf: prevent internal `throw` on invalid type\r\n\r\n4.16.4 / 2018-10-10\r\n===================\r\n\r\n  * Fix issue where `\"Request aborted\"` may be logged in `res.sendfile`\r\n  * Fix JSDoc for `Router` constructor\r\n  * deps: body-parser@1.18.3\r\n    - Fix deprecation warnings on Node.js 10+\r\n    - Fix stack trace for strict json parse error\r\n    - deps: depd@~1.1.2\r\n    - deps: http-errors@~1.6.3\r\n    - deps: iconv-lite@0.4.23\r\n    - deps: qs@6.5.2\r\n    - deps: raw-body@2.3.3\r\n    - deps: type-is@~1.6.16\r\n  * deps: proxy-addr@~2.0.4\r\n    - deps: ipaddr.js@1.8.0\r\n  * deps: qs@6.5.2\r\n  * deps: safe-buffer@5.1.2\r\n\r\n4.16.3 / 2018-03-12\r\n===================\r\n\r\n  * deps: accepts@~1.3.5\r\n    - deps: mime-types@~2.1.18\r\n  * deps: depd@~1.1.2\r\n    - perf: remove argument reassignment\r\n  * deps: encodeurl@~1.0.2\r\n    - Fix encoding `%` as last character\r\n  * deps: finalhandler@1.1.1\r\n    - Fix 404 output for bad / missing pathnames\r\n    - deps: encodeurl@~1.0.2\r\n    - deps: statuses@~1.4.0\r\n  * deps: proxy-addr@~2.0.3\r\n    - deps: ipaddr.js@1.6.0\r\n  * deps: send@0.16.2\r\n    - Fix incorrect end tag in default error & redirects\r\n    - deps: depd@~1.1.2\r\n    - deps: encodeurl@~1.0.2\r\n    - deps: statuses@~1.4.0\r\n  * deps: serve-static@1.13.2\r\n    - Fix incorrect end tag in redirects\r\n    - deps: encodeurl@~1.0.2\r\n    - deps: send@0.16.2\r\n  * deps: statuses@~1.4.0\r\n  * deps: type-is@~1.6.16\r\n    - deps: mime-types@~2.1.18\r\n\r\n4.16.2 / 2017-10-09\r\n===================\r\n\r\n  * Fix `TypeError` in `res.send` when given `Buffer` and `ETag` header set\r\n  * perf: skip parsing of entire `X-Forwarded-Proto` header\r\n\r\n4.16.1 / 2017-09-29\r\n===================\r\n\r\n  * deps: send@0.16.1\r\n  * deps: serve-static@1.13.1\r\n    - Fix regression when `root` is incorrectly set to a file\r\n    - deps: send@0.16.1\r\n\r\n4.16.0 / 2017-09-28\r\n===================\r\n\r\n  * Add `\"json escape\"` setting for `res.json` and `res.jsonp`\r\n  * Add `express.json` and `express.urlencoded` to parse bodies\r\n  * Add `options` argument to `res.download`\r\n  * Improve error message when autoloading invalid view engine\r\n  * Improve error messages when non-function provided as middleware\r\n  * Skip `Buffer` encoding when not generating ETag for small response\r\n  * Use `safe-buffer` for improved Buffer API\r\n  * deps: accepts@~1.3.4\r\n    - deps: mime-types@~2.1.16\r\n  * deps: content-type@~1.0.4\r\n    - perf: remove argument reassignment\r\n    - perf: skip parameter parsing when no parameters\r\n  * deps: etag@~1.8.1\r\n    - perf: replace regular expression with substring\r\n  * deps: finalhandler@1.1.0\r\n    - Use `res.headersSent` when available\r\n  * deps: parseurl@~1.3.2\r\n    - perf: reduce overhead for full URLs\r\n    - perf: unroll the \"fast-path\" `RegExp`\r\n  * deps: proxy-addr@~2.0.2\r\n    - Fix trimming leading / trailing OWS in `X-Forwarded-For`\r\n    - deps: forwarded@~0.1.2\r\n    - deps: ipaddr.js@1.5.2\r\n    - perf: reduce overhead when no `X-Forwarded-For` header\r\n  * deps: qs@6.5.1\r\n    - Fix parsing & compacting very deep objects\r\n  * deps: send@0.16.0\r\n    - Add 70 new types for file extensions\r\n    - Add `immutable` option\r\n    - Fix missing `</html>` in default error & redirects\r\n    - Set charset as \"UTF-8\" for .js and .json\r\n    - Use instance methods on steam to check for listeners\r\n    - deps: mime@1.4.1\r\n    - perf: improve path validation speed\r\n  * deps: serve-static@1.13.0\r\n    - Add 70 new types for file extensions\r\n    - Add `immutable` option\r\n    - Set charset as \"UTF-8\" for .js and .json\r\n    - deps: send@0.16.0\r\n  * deps: setprototypeof@1.1.0\r\n  * deps: utils-merge@1.0.1\r\n  * deps: vary@~1.1.2\r\n    - perf: improve header token parsing speed\r\n  * perf: re-use options object when generating ETags\r\n  * perf: remove dead `.charset` set in `res.jsonp`\r\n\r\n4.15.5 / 2017-09-24\r\n===================\r\n\r\n  * deps: debug@2.6.9\r\n  * deps: finalhandler@~1.0.6\r\n    - deps: debug@2.6.9\r\n    - deps: parseurl@~1.3.2\r\n  * deps: fresh@0.5.2\r\n    - Fix handling of modified headers with invalid dates\r\n    - perf: improve ETag match loop\r\n    - perf: improve `If-None-Match` token parsing\r\n  * deps: send@0.15.6\r\n    - Fix handling of modified headers with invalid dates\r\n    - deps: debug@2.6.9\r\n    - deps: etag@~1.8.1\r\n    - deps: fresh@0.5.2\r\n    - perf: improve `If-Match` token parsing\r\n  * deps: serve-static@1.12.6\r\n    - deps: parseurl@~1.3.2\r\n    - deps: send@0.15.6\r\n    - perf: improve slash collapsing\r\n\r\n4.15.4 / 2017-08-06\r\n===================\r\n\r\n  * deps: debug@2.6.8\r\n  * deps: depd@~1.1.1\r\n    - Remove unnecessary `Buffer` loading\r\n  * deps: finalhandler@~1.0.4\r\n    - deps: debug@2.6.8\r\n  * deps: proxy-addr@~1.1.5\r\n    - Fix array argument being altered\r\n    - deps: ipaddr.js@1.4.0\r\n  * deps: qs@6.5.0\r\n  * deps: send@0.15.4\r\n    - deps: debug@2.6.8\r\n    - deps: depd@~1.1.1\r\n    - deps: http-errors@~1.6.2\r\n  * deps: serve-static@1.12.4\r\n    - deps: send@0.15.4\r\n\r\n4.15.3 / 2017-05-16\r\n===================\r\n\r\n  * Fix error when `res.set` cannot add charset to `Content-Type`\r\n  * deps: debug@2.6.7\r\n    - Fix `DEBUG_MAX_ARRAY_LENGTH`\r\n    - deps: ms@2.0.0\r\n  * deps: finalhandler@~1.0.3\r\n    - Fix missing `</html>` in HTML document\r\n    - deps: debug@2.6.7\r\n  * deps: proxy-addr@~1.1.4\r\n    - deps: ipaddr.js@1.3.0\r\n  * deps: send@0.15.3\r\n    - deps: debug@2.6.7\r\n    - deps: ms@2.0.0\r\n  * deps: serve-static@1.12.3\r\n    - deps: send@0.15.3\r\n  * deps: type-is@~1.6.15\r\n    - deps: mime-types@~2.1.15\r\n  * deps: vary@~1.1.1\r\n    - perf: hoist regular expression\r\n\r\n4.15.2 / 2017-03-06\r\n===================\r\n\r\n  * deps: qs@6.4.0\r\n    - Fix regression parsing keys starting with `[`\r\n\r\n4.15.1 / 2017-03-05\r\n===================\r\n\r\n  * deps: send@0.15.1\r\n    - Fix issue when `Date.parse` does not return `NaN` on invalid date\r\n    - Fix strict violation in broken environments\r\n  * deps: serve-static@1.12.1\r\n    - Fix issue when `Date.parse` does not return `NaN` on invalid date\r\n    - deps: send@0.15.1\r\n\r\n4.15.0 / 2017-03-01\r\n===================\r\n\r\n  * Add debug message when loading view engine\r\n  * Add `next(\"router\")` to exit from router\r\n  * Fix case where `router.use` skipped requests routes did not\r\n  * Remove usage of `res._headers` private field\r\n    - Improves compatibility with Node.js 8 nightly\r\n  * Skip routing when `req.url` is not set\r\n  * Use `%o` in path debug to tell types apart\r\n  * Use `Object.create` to setup request & response prototypes\r\n  * Use `setprototypeof` module to replace `__proto__` setting\r\n  * Use `statuses` instead of `http` module for status messages\r\n  * deps: debug@2.6.1\r\n    - Allow colors in workers\r\n    - Deprecated `DEBUG_FD` environment variable set to `3` or higher\r\n    - Fix error when running under React Native\r\n    - Use same color for same namespace\r\n    - deps: ms@0.7.2\r\n  * deps: etag@~1.8.0\r\n    - Use SHA1 instead of MD5 for ETag hashing\r\n    - Works with FIPS 140-2 OpenSSL configuration\r\n  * deps: finalhandler@~1.0.0\r\n    - Fix exception when `err` cannot be converted to a string\r\n    - Fully URL-encode the pathname in the 404\r\n    - Only include the pathname in the 404 message\r\n    - Send complete HTML document\r\n    - Set `Content-Security-Policy: default-src 'self'` header\r\n    - deps: debug@2.6.1\r\n  * deps: fresh@0.5.0\r\n    - Fix false detection of `no-cache` request directive\r\n    - Fix incorrect result when `If-None-Match` has both `*` and ETags\r\n    - Fix weak `ETag` matching to match spec\r\n    - perf: delay reading header values until needed\r\n    - perf: enable strict mode\r\n    - perf: hoist regular expressions\r\n    - perf: remove duplicate conditional\r\n    - perf: remove unnecessary boolean coercions\r\n    - perf: skip checking modified time if ETag check failed\r\n    - perf: skip parsing `If-None-Match` when no `ETag` header\r\n    - perf: use `Date.parse` instead of `new Date`\r\n  * deps: qs@6.3.1\r\n    - Fix array parsing from skipping empty values\r\n    - Fix compacting nested arrays\r\n  * deps: send@0.15.0\r\n    - Fix false detection of `no-cache` request directive\r\n    - Fix incorrect result when `If-None-Match` has both `*` and ETags\r\n    - Fix weak `ETag` matching to match spec\r\n    - Remove usage of `res._headers` private field\r\n    - Support `If-Match` and `If-Unmodified-Since` headers\r\n    - Use `res.getHeaderNames()` when available\r\n    - Use `res.headersSent` when available\r\n    - deps: debug@2.6.1\r\n    - deps: etag@~1.8.0\r\n    - deps: fresh@0.5.0\r\n    - deps: http-errors@~1.6.1\r\n  * deps: serve-static@1.12.0\r\n    - Fix false detection of `no-cache` request directive\r\n    - Fix incorrect result when `If-None-Match` has both `*` and ETags\r\n    - Fix weak `ETag` matching to match spec\r\n    - Remove usage of `res._headers` private field\r\n    - Send complete HTML document in redirect response\r\n    - Set default CSP header in redirect response\r\n    - Support `If-Match` and `If-Unmodified-Since` headers\r\n    - Use `res.getHeaderNames()` when available\r\n    - Use `res.headersSent` when available\r\n    - deps: send@0.15.0\r\n  * perf: add fast match path for `*` route\r\n  * perf: improve `req.ips` performance\r\n\r\n4.14.1 / 2017-01-28\r\n===================\r\n\r\n  * deps: content-disposition@0.5.2\r\n  * deps: finalhandler@0.5.1\r\n    - Fix exception when `err.headers` is not an object\r\n    - deps: statuses@~1.3.1\r\n    - perf: hoist regular expressions\r\n    - perf: remove duplicate validation path\r\n  * deps: proxy-addr@~1.1.3\r\n    - deps: ipaddr.js@1.2.0\r\n  * deps: send@0.14.2\r\n    - deps: http-errors@~1.5.1\r\n    - deps: ms@0.7.2\r\n    - deps: statuses@~1.3.1\r\n  * deps: serve-static@~1.11.2\r\n    - deps: send@0.14.2\r\n  * deps: type-is@~1.6.14\r\n    - deps: mime-types@~2.1.13\r\n\r\n4.14.0 / 2016-06-16\r\n===================\r\n\r\n  * Add `acceptRanges` option to `res.sendFile`/`res.sendfile`\r\n  * Add `cacheControl` option to `res.sendFile`/`res.sendfile`\r\n  * Add `options` argument to `req.range`\r\n    - Includes the `combine` option\r\n  * Encode URL in `res.location`/`res.redirect` if not already encoded\r\n  * Fix some redirect handling in `res.sendFile`/`res.sendfile`\r\n  * Fix Windows absolute path check using forward slashes\r\n  * Improve error with invalid arguments to `req.get()`\r\n  * Improve performance for `res.json`/`res.jsonp` in most cases\r\n  * Improve `Range` header handling in `res.sendFile`/`res.sendfile`\r\n  * deps: accepts@~1.3.3\r\n    - Fix including type extensions in parameters in `Accept` parsing\r\n    - Fix parsing `Accept` parameters with quoted equals\r\n    - Fix parsing `Accept` parameters with quoted semicolons\r\n    - Many performance improvements\r\n    - deps: mime-types@~2.1.11\r\n    - deps: negotiator@0.6.1\r\n  * deps: content-type@~1.0.2\r\n    - perf: enable strict mode\r\n  * deps: cookie@0.3.1\r\n    - Add `sameSite` option\r\n    - Fix cookie `Max-Age` to never be a floating point number\r\n    - Improve error message when `encode` is not a function\r\n    - Improve error message when `expires` is not a `Date`\r\n    - Throw better error for invalid argument to parse\r\n    - Throw on invalid values provided to `serialize`\r\n    - perf: enable strict mode\r\n    - perf: hoist regular expression\r\n    - perf: use for loop in parse\r\n    - perf: use string concatenation for serialization\r\n  * deps: finalhandler@0.5.0\r\n    - Change invalid or non-numeric status code to 500\r\n    - Overwrite status message to match set status code\r\n    - Prefer `err.statusCode` if `err.status` is invalid\r\n    - Set response headers from `err.headers` object\r\n    - Use `statuses` instead of `http` module for status messages\r\n  * deps: proxy-addr@~1.1.2\r\n    - Fix accepting various invalid netmasks\r\n    - Fix IPv6-mapped IPv4 validation edge cases\r\n    - IPv4 netmasks must be contiguous\r\n    - IPv6 addresses cannot be used as a netmask\r\n    - deps: ipaddr.js@1.1.1\r\n  * deps: qs@6.2.0\r\n    - Add `decoder` option in `parse` function\r\n  * deps: range-parser@~1.2.0\r\n    - Add `combine` option to combine overlapping ranges\r\n    - Fix incorrectly returning -1 when there is at least one valid range\r\n    - perf: remove internal function\r\n  * deps: send@0.14.1\r\n    - Add `acceptRanges` option\r\n    - Add `cacheControl` option\r\n    - Attempt to combine multiple ranges into single range\r\n    - Correctly inherit from `Stream` class\r\n    - Fix `Content-Range` header in 416 responses when using `start`/`end` options\r\n    - Fix `Content-Range` header missing from default 416 responses\r\n    - Fix redirect error when `path` contains raw non-URL characters\r\n    - Fix redirect when `path` starts with multiple forward slashes\r\n    - Ignore non-byte `Range` headers\r\n    - deps: http-errors@~1.5.0\r\n    - deps: range-parser@~1.2.0\r\n    - deps: statuses@~1.3.0\r\n    - perf: remove argument reassignment\r\n  * deps: serve-static@~1.11.1\r\n    - Add `acceptRanges` option\r\n    - Add `cacheControl` option\r\n    - Attempt to combine multiple ranges into single range\r\n    - Fix redirect error when `req.url` contains raw non-URL characters\r\n    - Ignore non-byte `Range` headers\r\n    - Use status code 301 for redirects\r\n    - deps: send@0.14.1\r\n  * deps: type-is@~1.6.13\r\n    - Fix type error when given invalid type to match against\r\n    - deps: mime-types@~2.1.11\r\n  * deps: vary@~1.1.0\r\n    - Only accept valid field names in the `field` argument\r\n  * perf: use strict equality when possible\r\n\r\n4.13.4 / 2016-01-21\r\n===================\r\n\r\n  * deps: content-disposition@0.5.1\r\n    - perf: enable strict mode\r\n  * deps: cookie@0.1.5\r\n    - Throw on invalid values provided to `serialize`\r\n  * deps: depd@~1.1.0\r\n    - Support web browser loading\r\n    - perf: enable strict mode\r\n  * deps: escape-html@~1.0.3\r\n    - perf: enable strict mode\r\n    - perf: optimize string replacement\r\n    - perf: use faster string coercion\r\n  * deps: finalhandler@0.4.1\r\n    - deps: escape-html@~1.0.3\r\n  * deps: merge-descriptors@1.0.1\r\n    - perf: enable strict mode\r\n  * deps: methods@~1.1.2\r\n    - perf: enable strict mode\r\n  * deps: parseurl@~1.3.1\r\n    - perf: enable strict mode\r\n  * deps: proxy-addr@~1.0.10\r\n    - deps: ipaddr.js@1.0.5\r\n    - perf: enable strict mode\r\n  * deps: range-parser@~1.0.3\r\n    - perf: enable strict mode\r\n  * deps: send@0.13.1\r\n    - deps: depd@~1.1.0\r\n    - deps: destroy@~1.0.4\r\n    - deps: escape-html@~1.0.3\r\n    - deps: range-parser@~1.0.3\r\n  * deps: serve-static@~1.10.2\r\n    - deps: escape-html@~1.0.3\r\n    - deps: parseurl@~1.3.0\r\n    - deps: send@0.13.1\r\n\r\n4.13.3 / 2015-08-02\r\n===================\r\n\r\n  * Fix infinite loop condition using `mergeParams: true`\r\n  * Fix inner numeric indices incorrectly altering parent `req.params`\r\n\r\n4.13.2 / 2015-07-31\r\n===================\r\n\r\n  * deps: accepts@~1.2.12\r\n    - deps: mime-types@~2.1.4\r\n  * deps: array-flatten@1.1.1\r\n    - perf: enable strict mode\r\n  * deps: path-to-regexp@0.1.7\r\n    - Fix regression with escaped round brackets and matching groups\r\n  * deps: type-is@~1.6.6\r\n    - deps: mime-types@~2.1.4\r\n\r\n4.13.1 / 2015-07-05\r\n===================\r\n\r\n  * deps: accepts@~1.2.10\r\n    - deps: mime-types@~2.1.2\r\n  * deps: qs@4.0.0\r\n    - Fix dropping parameters like `hasOwnProperty`\r\n    - Fix various parsing edge cases\r\n  * deps: type-is@~1.6.4\r\n    - deps: mime-types@~2.1.2\r\n    - perf: enable strict mode\r\n    - perf: remove argument reassignment\r\n\r\n4.13.0 / 2015-06-20\r\n===================\r\n\r\n  * Add settings to debug output\r\n  * Fix `res.format` error when only `default` provided\r\n  * Fix issue where `next('route')` in `app.param` would incorrectly skip values\r\n  * Fix hiding platform issues with `decodeURIComponent`\r\n    - Only `URIError`s are a 400\r\n  * Fix using `*` before params in routes\r\n  * Fix using capture groups before params in routes\r\n  * Simplify `res.cookie` to call `res.append`\r\n  * Use `array-flatten` module for flattening arrays\r\n  * deps: accepts@~1.2.9\r\n    - deps: mime-types@~2.1.1\r\n    - perf: avoid argument reassignment & argument slice\r\n    - perf: avoid negotiator recursive construction\r\n    - perf: enable strict mode\r\n    - perf: remove unnecessary bitwise operator\r\n  * deps: cookie@0.1.3\r\n    - perf: deduce the scope of try-catch deopt\r\n    - perf: remove argument reassignments\r\n  * deps: escape-html@1.0.2\r\n  * deps: etag@~1.7.0\r\n    - Always include entity length in ETags for hash length extensions\r\n    - Generate non-Stats ETags using MD5 only (no longer CRC32)\r\n    - Improve stat performance by removing hashing\r\n    - Improve support for JXcore\r\n    - Remove base64 padding in ETags to shorten\r\n    - Support \"fake\" stats objects in environments without fs\r\n    - Use MD5 instead of MD4 in weak ETags over 1KB\r\n  * deps: finalhandler@0.4.0\r\n    - Fix a false-positive when unpiping in Node.js 0.8\r\n    - Support `statusCode` property on `Error` objects\r\n    - Use `unpipe` module for unpiping requests\r\n    - deps: escape-html@1.0.2\r\n    - deps: on-finished@~2.3.0\r\n    - perf: enable strict mode\r\n    - perf: remove argument reassignment\r\n  * deps: fresh@0.3.0\r\n    - Add weak `ETag` matching support\r\n  * deps: on-finished@~2.3.0\r\n    - Add defined behavior for HTTP `CONNECT` requests\r\n    - Add defined behavior for HTTP `Upgrade` requests\r\n    - deps: ee-first@1.1.1\r\n  * deps: path-to-regexp@0.1.6\r\n  * deps: send@0.13.0\r\n    - Allow Node.js HTTP server to set `Date` response header\r\n    - Fix incorrectly removing `Content-Location` on 304 response\r\n    - Improve the default redirect response headers\r\n    - Send appropriate headers on default error response\r\n    - Use `http-errors` for standard emitted errors\r\n    - Use `statuses` instead of `http` module for status messages\r\n    - deps: escape-html@1.0.2\r\n    - deps: etag@~1.7.0\r\n    - deps: fresh@0.3.0\r\n    - deps: on-finished@~2.3.0\r\n    - perf: enable strict mode\r\n    - perf: remove unnecessary array allocations\r\n  * deps: serve-static@~1.10.0\r\n    - Add `fallthrough` option\r\n    - Fix reading options from options prototype\r\n    - Improve the default redirect response headers\r\n    - Malformed URLs now `next()` instead of 400\r\n    - deps: escape-html@1.0.2\r\n    - deps: send@0.13.0\r\n    - perf: enable strict mode\r\n    - perf: remove argument reassignment\r\n  * deps: type-is@~1.6.3\r\n    - deps: mime-types@~2.1.1\r\n    - perf: reduce try block size\r\n    - perf: remove bitwise operations\r\n  * perf: enable strict mode\r\n  * perf: isolate `app.render` try block\r\n  * perf: remove argument reassignments in application\r\n  * perf: remove argument reassignments in request prototype\r\n  * perf: remove argument reassignments in response prototype\r\n  * perf: remove argument reassignments in routing\r\n  * perf: remove argument reassignments in `View`\r\n  * perf: skip attempting to decode zero length string\r\n  * perf: use saved reference to `http.STATUS_CODES`\r\n\r\n4.12.4 / 2015-05-17\r\n===================\r\n\r\n  * deps: accepts@~1.2.7\r\n    - deps: mime-types@~2.0.11\r\n    - deps: negotiator@0.5.3\r\n  * deps: debug@~2.2.0\r\n    - deps: ms@0.7.1\r\n  * deps: depd@~1.0.1\r\n  * deps: etag@~1.6.0\r\n    - Improve support for JXcore\r\n    - Support \"fake\" stats objects in environments without `fs`\r\n  * deps: finalhandler@0.3.6\r\n    - deps: debug@~2.2.0\r\n    - deps: on-finished@~2.2.1\r\n  * deps: on-finished@~2.2.1\r\n    - Fix `isFinished(req)` when data buffered\r\n  * deps: proxy-addr@~1.0.8\r\n    - deps: ipaddr.js@1.0.1\r\n  * deps: qs@2.4.2\r\n   - Fix allowing parameters like `constructor`\r\n  * deps: send@0.12.3\r\n    - deps: debug@~2.2.0\r\n    - deps: depd@~1.0.1\r\n    - deps: etag@~1.6.0\r\n    - deps: ms@0.7.1\r\n    - deps: on-finished@~2.2.1\r\n  * deps: serve-static@~1.9.3\r\n    - deps: send@0.12.3\r\n  * deps: type-is@~1.6.2\r\n    - deps: mime-types@~2.0.11\r\n\r\n4.12.3 / 2015-03-17\r\n===================\r\n\r\n  * deps: accepts@~1.2.5\r\n    - deps: mime-types@~2.0.10\r\n  * deps: debug@~2.1.3\r\n    - Fix high intensity foreground color for bold\r\n    - deps: ms@0.7.0\r\n  * deps: finalhandler@0.3.4\r\n    - deps: debug@~2.1.3\r\n  * deps: proxy-addr@~1.0.7\r\n    - deps: ipaddr.js@0.1.9\r\n  * deps: qs@2.4.1\r\n    - Fix error when parameter `hasOwnProperty` is present\r\n  * deps: send@0.12.2\r\n    - Throw errors early for invalid `extensions` or `index` options\r\n    - deps: debug@~2.1.3\r\n  * deps: serve-static@~1.9.2\r\n    - deps: send@0.12.2\r\n  * deps: type-is@~1.6.1\r\n    - deps: mime-types@~2.0.10\r\n\r\n4.12.2 / 2015-03-02\r\n===================\r\n\r\n  * Fix regression where `\"Request aborted\"` is logged using `res.sendFile`\r\n\r\n4.12.1 / 2015-03-01\r\n===================\r\n\r\n  * Fix constructing application with non-configurable prototype properties\r\n  * Fix `ECONNRESET` errors from `res.sendFile` usage\r\n  * Fix `req.host` when using \"trust proxy\" hops count\r\n  * Fix `req.protocol`/`req.secure` when using \"trust proxy\" hops count\r\n  * Fix wrong `code` on aborted connections from `res.sendFile`\r\n  * deps: merge-descriptors@1.0.0\r\n\r\n4.12.0 / 2015-02-23\r\n===================\r\n\r\n  * Fix `\"trust proxy\"` setting to inherit when app is mounted\r\n  * Generate `ETag`s for all request responses\r\n    - No longer restricted to only responses for `GET` and `HEAD` requests\r\n  * Use `content-type` to parse `Content-Type` headers\r\n  * deps: accepts@~1.2.4\r\n    - Fix preference sorting to be stable for long acceptable lists\r\n    - deps: mime-types@~2.0.9\r\n    - deps: negotiator@0.5.1\r\n  * deps: cookie-signature@1.0.6\r\n  * deps: send@0.12.1\r\n    - Always read the stat size from the file\r\n    - Fix mutating passed-in `options`\r\n    - deps: mime@1.3.4\r\n  * deps: serve-static@~1.9.1\r\n    - deps: send@0.12.1\r\n  * deps: type-is@~1.6.0\r\n    - fix argument reassignment\r\n    - fix false-positives in `hasBody` `Transfer-Encoding` check\r\n    - support wildcard for both type and subtype (`*/*`)\r\n    - deps: mime-types@~2.0.9\r\n\r\n4.11.2 / 2015-02-01\r\n===================\r\n\r\n  * Fix `res.redirect` double-calling `res.end` for `HEAD` requests\r\n  * deps: accepts@~1.2.3\r\n    - deps: mime-types@~2.0.8\r\n  * deps: proxy-addr@~1.0.6\r\n    - deps: ipaddr.js@0.1.8\r\n  * deps: type-is@~1.5.6\r\n    - deps: mime-types@~2.0.8\r\n\r\n4.11.1 / 2015-01-20\r\n===================\r\n\r\n  * deps: send@0.11.1\r\n    - Fix root path disclosure\r\n  * deps: serve-static@~1.8.1\r\n    - Fix redirect loop in Node.js 0.11.14\r\n    - Fix root path disclosure\r\n    - deps: send@0.11.1\r\n\r\n4.11.0 / 2015-01-13\r\n===================\r\n\r\n  * Add `res.append(field, val)` to append headers\r\n  * Deprecate leading `:` in `name` for `app.param(name, fn)`\r\n  * Deprecate `req.param()` -- use `req.params`, `req.body`, or `req.query` instead\r\n  * Deprecate `app.param(fn)`\r\n  * Fix `OPTIONS` responses to include the `HEAD` method properly\r\n  * Fix `res.sendFile` not always detecting aborted connection\r\n  * Match routes iteratively to prevent stack overflows\r\n  * deps: accepts@~1.2.2\r\n    - deps: mime-types@~2.0.7\r\n    - deps: negotiator@0.5.0\r\n  * deps: send@0.11.0\r\n    - deps: debug@~2.1.1\r\n    - deps: etag@~1.5.1\r\n    - deps: ms@0.7.0\r\n    - deps: on-finished@~2.2.0\r\n  * deps: serve-static@~1.8.0\r\n    - deps: send@0.11.0\r\n\r\n4.10.8 / 2015-01-13\r\n===================\r\n\r\n  * Fix crash from error within `OPTIONS` response handler\r\n  * deps: proxy-addr@~1.0.5\r\n    - deps: ipaddr.js@0.1.6\r\n\r\n4.10.7 / 2015-01-04\r\n===================\r\n\r\n  * Fix `Allow` header for `OPTIONS` to not contain duplicate methods\r\n  * Fix incorrect \"Request aborted\" for `res.sendFile` when `HEAD` or 304\r\n  * deps: debug@~2.1.1\r\n  * deps: finalhandler@0.3.3\r\n    - deps: debug@~2.1.1\r\n    - deps: on-finished@~2.2.0\r\n  * deps: methods@~1.1.1\r\n  * deps: on-finished@~2.2.0\r\n  * deps: serve-static@~1.7.2\r\n    - Fix potential open redirect when mounted at root\r\n  * deps: type-is@~1.5.5\r\n    - deps: mime-types@~2.0.7\r\n\r\n4.10.6 / 2014-12-12\r\n===================\r\n\r\n  * Fix exception in `req.fresh`/`req.stale` without response headers\r\n\r\n4.10.5 / 2014-12-10\r\n===================\r\n\r\n  * Fix `res.send` double-calling `res.end` for `HEAD` requests\r\n  * deps: accepts@~1.1.4\r\n    - deps: mime-types@~2.0.4\r\n  * deps: type-is@~1.5.4\r\n    - deps: mime-types@~2.0.4\r\n\r\n4.10.4 / 2014-11-24\r\n===================\r\n\r\n  * Fix `res.sendfile` logging standard write errors\r\n\r\n4.10.3 / 2014-11-23\r\n===================\r\n\r\n  * Fix `res.sendFile` logging standard write errors\r\n  * deps: etag@~1.5.1\r\n  * deps: proxy-addr@~1.0.4\r\n    - deps: ipaddr.js@0.1.5\r\n  * deps: qs@2.3.3\r\n    - Fix `arrayLimit` behavior\r\n\r\n4.10.2 / 2014-11-09\r\n===================\r\n\r\n  * Correctly invoke async router callback asynchronously\r\n  * deps: accepts@~1.1.3\r\n    - deps: mime-types@~2.0.3\r\n  * deps: type-is@~1.5.3\r\n    - deps: mime-types@~2.0.3\r\n\r\n4.10.1 / 2014-10-28\r\n===================\r\n\r\n  * Fix handling of URLs containing `://` in the path\r\n  * deps: qs@2.3.2\r\n    - Fix parsing of mixed objects and values\r\n\r\n4.10.0 / 2014-10-23\r\n===================\r\n\r\n  * Add support for `app.set('views', array)`\r\n    - Views are looked up in sequence in array of directories\r\n  * Fix `res.send(status)` to mention `res.sendStatus(status)`\r\n  * Fix handling of invalid empty URLs\r\n  * Use `content-disposition` module for `res.attachment`/`res.download`\r\n    - Sends standards-compliant `Content-Disposition` header\r\n    - Full Unicode support\r\n  * Use `path.resolve` in view lookup\r\n  * deps: debug@~2.1.0\r\n    - Implement `DEBUG_FD` env variable support\r\n  * deps: depd@~1.0.0\r\n  * deps: etag@~1.5.0\r\n    - Improve string performance\r\n    - Slightly improve speed for weak ETags over 1KB\r\n  * deps: finalhandler@0.3.2\r\n    - Terminate in progress response only on error\r\n    - Use `on-finished` to determine request status\r\n    - deps: debug@~2.1.0\r\n    - deps: on-finished@~2.1.1\r\n  * deps: on-finished@~2.1.1\r\n    - Fix handling of pipelined requests\r\n  * deps: qs@2.3.0\r\n    - Fix parsing of mixed implicit and explicit arrays\r\n  * deps: send@0.10.1\r\n    - deps: debug@~2.1.0\r\n    - deps: depd@~1.0.0\r\n    - deps: etag@~1.5.0\r\n    - deps: on-finished@~2.1.1\r\n  * deps: serve-static@~1.7.1\r\n    - deps: send@0.10.1\r\n\r\n4.9.8 / 2014-10-17\r\n==================\r\n\r\n  * Fix `res.redirect` body when redirect status specified\r\n  * deps: accepts@~1.1.2\r\n    - Fix error when media type has invalid parameter\r\n    - deps: negotiator@0.4.9\r\n\r\n4.9.7 / 2014-10-10\r\n==================\r\n\r\n  * Fix using same param name in array of paths\r\n\r\n4.9.6 / 2014-10-08\r\n==================\r\n\r\n  * deps: accepts@~1.1.1\r\n    - deps: mime-types@~2.0.2\r\n    - deps: negotiator@0.4.8\r\n  * deps: serve-static@~1.6.4\r\n    - Fix redirect loop when index file serving disabled\r\n  * deps: type-is@~1.5.2\r\n    - deps: mime-types@~2.0.2\r\n\r\n4.9.5 / 2014-09-24\r\n==================\r\n\r\n  * deps: etag@~1.4.0\r\n  * deps: proxy-addr@~1.0.3\r\n    - Use `forwarded` npm module\r\n  * deps: send@0.9.3\r\n    - deps: etag@~1.4.0\r\n  * deps: serve-static@~1.6.3\r\n    - deps: send@0.9.3\r\n\r\n4.9.4 / 2014-09-19\r\n==================\r\n\r\n  * deps: qs@2.2.4\r\n    - Fix issue with object keys starting with numbers truncated\r\n\r\n4.9.3 / 2014-09-18\r\n==================\r\n\r\n  * deps: proxy-addr@~1.0.2\r\n    - Fix a global leak when multiple subnets are trusted\r\n    - deps: ipaddr.js@0.1.3\r\n\r\n4.9.2 / 2014-09-17\r\n==================\r\n\r\n  * Fix regression for empty string `path` in `app.use`\r\n  * Fix `router.use` to accept array of middleware without path\r\n  * Improve error message for bad `app.use` arguments\r\n\r\n4.9.1 / 2014-09-16\r\n==================\r\n\r\n  * Fix `app.use` to accept array of middleware without path\r\n  * deps: depd@0.4.5\r\n  * deps: etag@~1.3.1\r\n  * deps: send@0.9.2\r\n    - deps: depd@0.4.5\r\n    - deps: etag@~1.3.1\r\n    - deps: range-parser@~1.0.2\r\n  * deps: serve-static@~1.6.2\r\n    - deps: send@0.9.2\r\n\r\n4.9.0 / 2014-09-08\r\n==================\r\n\r\n  * Add `res.sendStatus`\r\n  * Invoke callback for sendfile when client aborts\r\n    - Applies to `res.sendFile`, `res.sendfile`, and `res.download`\r\n    - `err` will be populated with request aborted error\r\n  * Support IP address host in `req.subdomains`\r\n  * Use `etag` to generate `ETag` headers\r\n  * deps: accepts@~1.1.0\r\n    - update `mime-types`\r\n  * deps: cookie-signature@1.0.5\r\n  * deps: debug@~2.0.0\r\n  * deps: finalhandler@0.2.0\r\n    - Set `X-Content-Type-Options: nosniff` header\r\n    - deps: debug@~2.0.0\r\n  * deps: fresh@0.2.4\r\n  * deps: media-typer@0.3.0\r\n    - Throw error when parameter format invalid on parse\r\n  * deps: qs@2.2.3\r\n    - Fix issue where first empty value in array is discarded\r\n  * deps: range-parser@~1.0.2\r\n  * deps: send@0.9.1\r\n    - Add `lastModified` option\r\n    - Use `etag` to generate `ETag` header\r\n    - deps: debug@~2.0.0\r\n    - deps: fresh@0.2.4\r\n  * deps: serve-static@~1.6.1\r\n    - Add `lastModified` option\r\n    - deps: send@0.9.1\r\n  * deps: type-is@~1.5.1\r\n    - fix `hasbody` to be true for `content-length: 0`\r\n    - deps: media-typer@0.3.0\r\n    - deps: mime-types@~2.0.1\r\n  * deps: vary@~1.0.0\r\n    - Accept valid `Vary` header string as `field`\r\n\r\n4.8.8 / 2014-09-04\r\n==================\r\n\r\n  * deps: send@0.8.5\r\n    - Fix a path traversal issue when using `root`\r\n    - Fix malicious path detection for empty string path\r\n  * deps: serve-static@~1.5.4\r\n    - deps: send@0.8.5\r\n\r\n4.8.7 / 2014-08-29\r\n==================\r\n\r\n  * deps: qs@2.2.2\r\n    - Remove unnecessary cloning\r\n\r\n4.8.6 / 2014-08-27\r\n==================\r\n\r\n  * deps: qs@2.2.0\r\n    - Array parsing fix\r\n    - Performance improvements\r\n\r\n4.8.5 / 2014-08-18\r\n==================\r\n\r\n  * deps: send@0.8.3\r\n    - deps: destroy@1.0.3\r\n    - deps: on-finished@2.1.0\r\n  * deps: serve-static@~1.5.3\r\n    - deps: send@0.8.3\r\n\r\n4.8.4 / 2014-08-14\r\n==================\r\n\r\n  * deps: qs@1.2.2\r\n  * deps: send@0.8.2\r\n    - Work around `fd` leak in Node.js 0.10 for `fs.ReadStream`\r\n  * deps: serve-static@~1.5.2\r\n    - deps: send@0.8.2\r\n\r\n4.8.3 / 2014-08-10\r\n==================\r\n\r\n  * deps: parseurl@~1.3.0\r\n  * deps: qs@1.2.1\r\n  * deps: serve-static@~1.5.1\r\n    - Fix parsing of weird `req.originalUrl` values\r\n    - deps: parseurl@~1.3.0\r\n    - deps: utils-merge@1.0.0\r\n\r\n4.8.2 / 2014-08-07\r\n==================\r\n\r\n  * deps: qs@1.2.0\r\n    - Fix parsing array of objects\r\n\r\n4.8.1 / 2014-08-06\r\n==================\r\n\r\n  * fix incorrect deprecation warnings on `res.download`\r\n  * deps: qs@1.1.0\r\n    - Accept urlencoded square brackets\r\n    - Accept empty values in implicit array notation\r\n\r\n4.8.0 / 2014-08-05\r\n==================\r\n\r\n  * add `res.sendFile`\r\n    - accepts a file system path instead of a URL\r\n    - requires an absolute path or `root` option specified\r\n  * deprecate `res.sendfile` -- use `res.sendFile` instead\r\n  * support mounted app as any argument to `app.use()`\r\n  * deps: qs@1.0.2\r\n    - Complete rewrite\r\n    - Limits array length to 20\r\n    - Limits object depth to 5\r\n    - Limits parameters to 1,000\r\n  * deps: send@0.8.1\r\n    - Add `extensions` option\r\n  * deps: serve-static@~1.5.0\r\n    - Add `extensions` option\r\n    - deps: send@0.8.1\r\n\r\n4.7.4 / 2014-08-04\r\n==================\r\n\r\n  * fix `res.sendfile` regression for serving directory index files\r\n  * deps: send@0.7.4\r\n    - Fix incorrect 403 on Windows and Node.js 0.11\r\n    - Fix serving index files without root dir\r\n  * deps: serve-static@~1.4.4\r\n    - deps: send@0.7.4\r\n\r\n4.7.3 / 2014-08-04\r\n==================\r\n\r\n  * deps: send@0.7.3\r\n    - Fix incorrect 403 on Windows and Node.js 0.11\r\n  * deps: serve-static@~1.4.3\r\n    - Fix incorrect 403 on Windows and Node.js 0.11\r\n    - deps: send@0.7.3\r\n\r\n4.7.2 / 2014-07-27\r\n==================\r\n\r\n  * deps: depd@0.4.4\r\n    - Work-around v8 generating empty stack traces\r\n  * deps: send@0.7.2\r\n    - deps: depd@0.4.4\r\n  * deps: serve-static@~1.4.2\r\n\r\n4.7.1 / 2014-07-26\r\n==================\r\n\r\n  * deps: depd@0.4.3\r\n    - Fix exception when global `Error.stackTraceLimit` is too low\r\n  * deps: send@0.7.1\r\n    - deps: depd@0.4.3\r\n  * deps: serve-static@~1.4.1\r\n\r\n4.7.0 / 2014-07-25\r\n==================\r\n\r\n  * fix `req.protocol` for proxy-direct connections\r\n  * configurable query parser with `app.set('query parser', parser)`\r\n    - `app.set('query parser', 'extended')` parse with \"qs\" module\r\n    - `app.set('query parser', 'simple')` parse with \"querystring\" core module\r\n    - `app.set('query parser', false)` disable query string parsing\r\n    - `app.set('query parser', true)` enable simple parsing\r\n  * deprecate `res.json(status, obj)` -- use `res.status(status).json(obj)` instead\r\n  * deprecate `res.jsonp(status, obj)` -- use `res.status(status).jsonp(obj)` instead\r\n  * deprecate `res.send(status, body)` -- use `res.status(status).send(body)` instead\r\n  * deps: debug@1.0.4\r\n  * deps: depd@0.4.2\r\n    - Add `TRACE_DEPRECATION` environment variable\r\n    - Remove non-standard grey color from color output\r\n    - Support `--no-deprecation` argument\r\n    - Support `--trace-deprecation` argument\r\n  * deps: finalhandler@0.1.0\r\n    - Respond after request fully read\r\n    - deps: debug@1.0.4\r\n  * deps: parseurl@~1.2.0\r\n    - Cache URLs based on original value\r\n    - Remove no-longer-needed URL mis-parse work-around\r\n    - Simplify the \"fast-path\" `RegExp`\r\n  * deps: send@0.7.0\r\n    - Add `dotfiles` option\r\n    - Cap `maxAge` value to 1 year\r\n    - deps: debug@1.0.4\r\n    - deps: depd@0.4.2\r\n  * deps: serve-static@~1.4.0\r\n    - deps: parseurl@~1.2.0\r\n    - deps: send@0.7.0\r\n  * perf: prevent multiple `Buffer` creation in `res.send`\r\n\r\n4.6.1 / 2014-07-12\r\n==================\r\n\r\n  * fix `subapp.mountpath` regression for `app.use(subapp)`\r\n\r\n4.6.0 / 2014-07-11\r\n==================\r\n\r\n  * accept multiple callbacks to `app.use()`\r\n  * add explicit \"Rosetta Flash JSONP abuse\" protection\r\n    - previous versions are not vulnerable; this is just explicit protection\r\n  * catch errors in multiple `req.param(name, fn)` handlers\r\n  * deprecate `res.redirect(url, status)` -- use `res.redirect(status, url)` instead\r\n  * fix `res.send(status, num)` to send `num` as json (not error)\r\n  * remove unnecessary escaping when `res.jsonp` returns JSON response\r\n  * support non-string `path` in `app.use(path, fn)`\r\n    - supports array of paths\r\n    - supports `RegExp`\r\n  * router: fix optimization on router exit\r\n  * router: refactor location of `try` blocks\r\n  * router: speed up standard `app.use(fn)`\r\n  * deps: debug@1.0.3\r\n    - Add support for multiple wildcards in namespaces\r\n  * deps: finalhandler@0.0.3\r\n    - deps: debug@1.0.3\r\n  * deps: methods@1.1.0\r\n    - add `CONNECT`\r\n  * deps: parseurl@~1.1.3\r\n    - faster parsing of href-only URLs\r\n  * deps: path-to-regexp@0.1.3\r\n  * deps: send@0.6.0\r\n    - deps: debug@1.0.3\r\n  * deps: serve-static@~1.3.2\r\n    - deps: parseurl@~1.1.3\r\n    - deps: send@0.6.0\r\n  * perf: fix arguments reassign deopt in some `res` methods\r\n\r\n4.5.1 / 2014-07-06\r\n==================\r\n\r\n * fix routing regression when altering `req.method`\r\n\r\n4.5.0 / 2014-07-04\r\n==================\r\n\r\n * add deprecation message to non-plural `req.accepts*`\r\n * add deprecation message to `res.send(body, status)`\r\n * add deprecation message to `res.vary()`\r\n * add `headers` option to `res.sendfile`\r\n   - use to set headers on successful file transfer\r\n * add `mergeParams` option to `Router`\r\n   - merges `req.params` from parent routes\r\n * add `req.hostname` -- correct name for what `req.host` returns\r\n * deprecate things with `depd` module\r\n * deprecate `req.host` -- use `req.hostname` instead\r\n * fix behavior when handling request without routes\r\n * fix handling when `route.all` is only route\r\n * invoke `router.param()` only when route matches\r\n * restore `req.params` after invoking router\r\n * use `finalhandler` for final response handling\r\n * use `media-typer` to alter content-type charset\r\n * deps: accepts@~1.0.7\r\n * deps: send@0.5.0\r\n   - Accept string for `maxage` (converted by `ms`)\r\n   - Include link in default redirect response\r\n * deps: serve-static@~1.3.0\r\n   - Accept string for `maxAge` (converted by `ms`)\r\n   - Add `setHeaders` option\r\n   - Include HTML link in redirect response\r\n   - deps: send@0.5.0\r\n * deps: type-is@~1.3.2\r\n\r\n4.4.5 / 2014-06-26\r\n==================\r\n\r\n * deps: cookie-signature@1.0.4\r\n   - fix for timing attacks\r\n\r\n4.4.4 / 2014-06-20\r\n==================\r\n\r\n * fix `res.attachment` Unicode filenames in Safari\r\n * fix \"trim prefix\" debug message in `express:router`\r\n * deps: accepts@~1.0.5\r\n * deps: buffer-crc32@0.2.3\r\n\r\n4.4.3 / 2014-06-11\r\n==================\r\n\r\n * fix persistence of modified `req.params[name]` from `app.param()`\r\n * deps: accepts@1.0.3\r\n   - deps: negotiator@0.4.6\r\n * deps: debug@1.0.2\r\n * deps: send@0.4.3\r\n   - Do not throw uncatchable error on file open race condition\r\n   - Use `escape-html` for HTML escaping\r\n   - deps: debug@1.0.2\r\n   - deps: finished@1.2.2\r\n   - deps: fresh@0.2.2\r\n * deps: serve-static@1.2.3\r\n   - Do not throw uncatchable error on file open race condition\r\n   - deps: send@0.4.3\r\n\r\n4.4.2 / 2014-06-09\r\n==================\r\n\r\n * fix catching errors from top-level handlers\r\n * use `vary` module for `res.vary`\r\n * deps: debug@1.0.1\r\n * deps: proxy-addr@1.0.1\r\n * deps: send@0.4.2\r\n   - fix \"event emitter leak\" warnings\r\n   - deps: debug@1.0.1\r\n   - deps: finished@1.2.1\r\n * deps: serve-static@1.2.2\r\n   - fix \"event emitter leak\" warnings\r\n   - deps: send@0.4.2\r\n * deps: type-is@1.2.1\r\n\r\n4.4.1 / 2014-06-02\r\n==================\r\n\r\n * deps: methods@1.0.1\r\n * deps: send@0.4.1\r\n   - Send `max-age` in `Cache-Control` in correct format\r\n * deps: serve-static@1.2.1\r\n   - use `escape-html` for escaping\r\n   - deps: send@0.4.1\r\n\r\n4.4.0 / 2014-05-30\r\n==================\r\n\r\n * custom etag control with `app.set('etag', val)`\r\n   - `app.set('etag', function(body, encoding){ return '\"etag\"' })` custom etag generation\r\n   - `app.set('etag', 'weak')` weak tag\r\n   - `app.set('etag', 'strong')` strong etag\r\n   - `app.set('etag', false)` turn off\r\n   - `app.set('etag', true)` standard etag\r\n * mark `res.send` ETag as weak and reduce collisions\r\n * update accepts to 1.0.2\r\n   - Fix interpretation when header not in request\r\n * update send to 0.4.0\r\n   - Calculate ETag with md5 for reduced collisions\r\n   - Ignore stream errors after request ends\r\n   - deps: debug@0.8.1\r\n * update serve-static to 1.2.0\r\n   - Calculate ETag with md5 for reduced collisions\r\n   - Ignore stream errors after request ends\r\n   - deps: send@0.4.0\r\n\r\n4.3.2 / 2014-05-28\r\n==================\r\n\r\n * fix handling of errors from `router.param()` callbacks\r\n\r\n4.3.1 / 2014-05-23\r\n==================\r\n\r\n * revert \"fix behavior of multiple `app.VERB` for the same path\"\r\n   - this caused a regression in the order of route execution\r\n\r\n4.3.0 / 2014-05-21\r\n==================\r\n\r\n * add `req.baseUrl` to access the path stripped from `req.url` in routes\r\n * fix behavior of multiple `app.VERB` for the same path\r\n * fix issue routing requests among sub routers\r\n * invoke `router.param()` only when necessary instead of every match\r\n * proper proxy trust with `app.set('trust proxy', trust)`\r\n   - `app.set('trust proxy', 1)` trust first hop\r\n   - `app.set('trust proxy', 'loopback')` trust loopback addresses\r\n   - `app.set('trust proxy', '10.0.0.1')` trust single IP\r\n   - `app.set('trust proxy', '10.0.0.1/16')` trust subnet\r\n   - `app.set('trust proxy', '10.0.0.1, 10.0.0.2')` trust list\r\n   - `app.set('trust proxy', false)` turn off\r\n   - `app.set('trust proxy', true)` trust everything\r\n * set proper `charset` in `Content-Type` for `res.send`\r\n * update type-is to 1.2.0\r\n   - support suffix matching\r\n\r\n4.2.0 / 2014-05-11\r\n==================\r\n\r\n * deprecate `app.del()` -- use `app.delete()` instead\r\n * deprecate `res.json(obj, status)` -- use `res.json(status, obj)` instead\r\n   - the edge-case `res.json(status, num)` requires `res.status(status).json(num)`\r\n * deprecate `res.jsonp(obj, status)` -- use `res.jsonp(status, obj)` instead\r\n   - the edge-case `res.jsonp(status, num)` requires `res.status(status).jsonp(num)`\r\n * fix `req.next` when inside router instance\r\n * include `ETag` header in `HEAD` requests\r\n * keep previous `Content-Type` for `res.jsonp`\r\n * support PURGE method\r\n   - add `app.purge`\r\n   - add `router.purge`\r\n   - include PURGE in `app.all`\r\n * update debug to 0.8.0\r\n   - add `enable()` method\r\n   - change from stderr to stdout\r\n * update methods to 1.0.0\r\n   - add PURGE\r\n\r\n4.1.2 / 2014-05-08\r\n==================\r\n\r\n * fix `req.host` for IPv6 literals\r\n * fix `res.jsonp` error if callback param is object\r\n\r\n4.1.1 / 2014-04-27\r\n==================\r\n\r\n * fix package.json to reflect supported node version\r\n\r\n4.1.0 / 2014-04-24\r\n==================\r\n\r\n * pass options from `res.sendfile` to `send`\r\n * preserve casing of headers in `res.header` and `res.set`\r\n * support unicode file names in `res.attachment` and `res.download`\r\n * update accepts to 1.0.1\r\n   - deps: negotiator@0.4.0\r\n * update cookie to 0.1.2\r\n   - Fix for maxAge == 0\r\n   - made compat with expires field\r\n * update send to 0.3.0\r\n   - Accept API options in options object\r\n   - Coerce option types\r\n   - Control whether to generate etags\r\n   - Default directory access to 403 when index disabled\r\n   - Fix sending files with dots without root set\r\n   - Include file path in etag\r\n   - Make \"Can't set headers after they are sent.\" catchable\r\n   - Send full entity-body for multi range requests\r\n   - Set etags to \"weak\"\r\n   - Support \"If-Range\" header\r\n   - Support multiple index paths\r\n   - deps: mime@1.2.11\r\n * update serve-static to 1.1.0\r\n   - Accept options directly to `send` module\r\n   - Resolve relative paths at middleware setup\r\n   - Use parseurl to parse the URL from request\r\n   - deps: send@0.3.0\r\n * update type-is to 1.1.0\r\n   - add non-array values support\r\n   - add `multipart` as a shorthand\r\n\r\n4.0.0 / 2014-04-09\r\n==================\r\n\r\n * remove:\r\n   - node 0.8 support\r\n   - connect and connect's patches except for charset handling\r\n   - express(1) - moved to [express-generator](https://github.com/expressjs/generator)\r\n   - `express.createServer()` - it has been deprecated for a long time. Use `express()`\r\n   - `app.configure` - use logic in your own app code\r\n   - `app.router` - is removed\r\n   - `req.auth` - use `basic-auth` instead\r\n   - `req.accepted*` - use `req.accepts*()` instead\r\n   - `res.location` - relative URL resolution is removed\r\n   - `res.charset` - include the charset in the content type when using `res.set()`\r\n   - all bundled middleware except `static`\r\n * change:\r\n   - `app.route` -> `app.mountpath` when mounting an express app in another express app\r\n   - `json spaces` no longer enabled by default in development\r\n   - `req.accepts*` -> `req.accepts*s` - i.e. `req.acceptsEncoding` -> `req.acceptsEncodings`\r\n   - `req.params` is now an object instead of an array\r\n   - `res.locals` is no longer a function. It is a plain js object. Treat it as such.\r\n   - `res.headerSent` -> `res.headersSent` to match node.js ServerResponse object\r\n * refactor:\r\n   - `req.accepts*` with [accepts](https://github.com/expressjs/accepts)\r\n   - `req.is` with [type-is](https://github.com/expressjs/type-is)\r\n   - [path-to-regexp](https://github.com/component/path-to-regexp)\r\n * add:\r\n   - `app.router()` - returns the app Router instance\r\n   - `app.route()` - Proxy to the app's `Router#route()` method to create a new route\r\n   - Router & Route - public API\r\n\r\n3.21.2 / 2015-07-31\r\n===================\r\n\r\n  * deps: connect@2.30.2\r\n    - deps: body-parser@~1.13.3\r\n    - deps: compression@~1.5.2\r\n    - deps: errorhandler@~1.4.2\r\n    - deps: method-override@~2.3.5\r\n    - deps: serve-index@~1.7.2\r\n    - deps: type-is@~1.6.6\r\n    - deps: vhost@~3.0.1\r\n  * deps: vary@~1.0.1\r\n    - Fix setting empty header from empty `field`\r\n    - perf: enable strict mode\r\n    - perf: remove argument reassignments\r\n\r\n3.21.1 / 2015-07-05\r\n===================\r\n\r\n  * deps: basic-auth@~1.0.3\r\n  * deps: connect@2.30.1\r\n    - deps: body-parser@~1.13.2\r\n    - deps: compression@~1.5.1\r\n    - deps: errorhandler@~1.4.1\r\n    - deps: morgan@~1.6.1\r\n    - deps: pause@0.1.0\r\n    - deps: qs@4.0.0\r\n    - deps: serve-index@~1.7.1\r\n    - deps: type-is@~1.6.4\r\n\r\n3.21.0 / 2015-06-18\r\n===================\r\n\r\n  * deps: basic-auth@1.0.2\r\n    - perf: enable strict mode\r\n    - perf: hoist regular expression\r\n    - perf: parse with regular expressions\r\n    - perf: remove argument reassignment\r\n  * deps: connect@2.30.0\r\n    - deps: body-parser@~1.13.1\r\n    - deps: bytes@2.1.0\r\n    - deps: compression@~1.5.0\r\n    - deps: cookie@0.1.3\r\n    - deps: cookie-parser@~1.3.5\r\n    - deps: csurf@~1.8.3\r\n    - deps: errorhandler@~1.4.0\r\n    - deps: express-session@~1.11.3\r\n    - deps: finalhandler@0.4.0\r\n    - deps: fresh@0.3.0\r\n    - deps: morgan@~1.6.0\r\n    - deps: serve-favicon@~2.3.0\r\n    - deps: serve-index@~1.7.0\r\n    - deps: serve-static@~1.10.0\r\n    - deps: type-is@~1.6.3\r\n  * deps: cookie@0.1.3\r\n    - perf: deduce the scope of try-catch deopt\r\n    - perf: remove argument reassignments\r\n  * deps: escape-html@1.0.2\r\n  * deps: etag@~1.7.0\r\n    - Always include entity length in ETags for hash length extensions\r\n    - Generate non-Stats ETags using MD5 only (no longer CRC32)\r\n    - Improve stat performance by removing hashing\r\n    - Improve support for JXcore\r\n    - Remove base64 padding in ETags to shorten\r\n    - Support \"fake\" stats objects in environments without fs\r\n    - Use MD5 instead of MD4 in weak ETags over 1KB\r\n  * deps: fresh@0.3.0\r\n    - Add weak `ETag` matching support\r\n  * deps: mkdirp@0.5.1\r\n    - Work in global strict mode\r\n  * deps: send@0.13.0\r\n    - Allow Node.js HTTP server to set `Date` response header\r\n    - Fix incorrectly removing `Content-Location` on 304 response\r\n    - Improve the default redirect response headers\r\n    - Send appropriate headers on default error response\r\n    - Use `http-errors` for standard emitted errors\r\n    - Use `statuses` instead of `http` module for status messages\r\n    - deps: escape-html@1.0.2\r\n    - deps: etag@~1.7.0\r\n    - deps: fresh@0.3.0\r\n    - deps: on-finished@~2.3.0\r\n    - perf: enable strict mode\r\n    - perf: remove unnecessary array allocations\r\n\r\n3.20.3 / 2015-05-17\r\n===================\r\n\r\n  * deps: connect@2.29.2\r\n    - deps: body-parser@~1.12.4\r\n    - deps: compression@~1.4.4\r\n    - deps: connect-timeout@~1.6.2\r\n    - deps: debug@~2.2.0\r\n    - deps: depd@~1.0.1\r\n    - deps: errorhandler@~1.3.6\r\n    - deps: finalhandler@0.3.6\r\n    - deps: method-override@~2.3.3\r\n    - deps: morgan@~1.5.3\r\n    - deps: qs@2.4.2\r\n    - deps: response-time@~2.3.1\r\n    - deps: serve-favicon@~2.2.1\r\n    - deps: serve-index@~1.6.4\r\n    - deps: serve-static@~1.9.3\r\n    - deps: type-is@~1.6.2\r\n  * deps: debug@~2.2.0\r\n    - deps: ms@0.7.1\r\n  * deps: depd@~1.0.1\r\n  * deps: proxy-addr@~1.0.8\r\n    - deps: ipaddr.js@1.0.1\r\n  * deps: send@0.12.3\r\n    - deps: debug@~2.2.0\r\n    - deps: depd@~1.0.1\r\n    - deps: etag@~1.6.0\r\n    - deps: ms@0.7.1\r\n    - deps: on-finished@~2.2.1\r\n\r\n3.20.2 / 2015-03-16\r\n===================\r\n\r\n  * deps: connect@2.29.1\r\n    - deps: body-parser@~1.12.2\r\n    - deps: compression@~1.4.3\r\n    - deps: connect-timeout@~1.6.1\r\n    - deps: debug@~2.1.3\r\n    - deps: errorhandler@~1.3.5\r\n    - deps: express-session@~1.10.4\r\n    - deps: finalhandler@0.3.4\r\n    - deps: method-override@~2.3.2\r\n    - deps: morgan@~1.5.2\r\n    - deps: qs@2.4.1\r\n    - deps: serve-index@~1.6.3\r\n    - deps: serve-static@~1.9.2\r\n    - deps: type-is@~1.6.1\r\n  * deps: debug@~2.1.3\r\n    - Fix high intensity foreground color for bold\r\n    - deps: ms@0.7.0\r\n  * deps: merge-descriptors@1.0.0\r\n  * deps: proxy-addr@~1.0.7\r\n    - deps: ipaddr.js@0.1.9\r\n  * deps: send@0.12.2\r\n    - Throw errors early for invalid `extensions` or `index` options\r\n    - deps: debug@~2.1.3\r\n\r\n3.20.1 / 2015-02-28\r\n===================\r\n\r\n  * Fix `req.host` when using \"trust proxy\" hops count\r\n  * Fix `req.protocol`/`req.secure` when using \"trust proxy\" hops count\r\n\r\n3.20.0 / 2015-02-18\r\n===================\r\n\r\n  * Fix `\"trust proxy\"` setting to inherit when app is mounted\r\n  * Generate `ETag`s for all request responses\r\n    - No longer restricted to only responses for `GET` and `HEAD` requests\r\n  * Use `content-type` to parse `Content-Type` headers\r\n  * deps: connect@2.29.0\r\n    - Use `content-type` to parse `Content-Type` headers\r\n    - deps: body-parser@~1.12.0\r\n    - deps: compression@~1.4.1\r\n    - deps: connect-timeout@~1.6.0\r\n    - deps: cookie-parser@~1.3.4\r\n    - deps: cookie-signature@1.0.6\r\n    - deps: csurf@~1.7.0\r\n    - deps: errorhandler@~1.3.4\r\n    - deps: express-session@~1.10.3\r\n    - deps: http-errors@~1.3.1\r\n    - deps: response-time@~2.3.0\r\n    - deps: serve-index@~1.6.2\r\n    - deps: serve-static@~1.9.1\r\n    - deps: type-is@~1.6.0\r\n  * deps: cookie-signature@1.0.6\r\n  * deps: send@0.12.1\r\n    - Always read the stat size from the file\r\n    - Fix mutating passed-in `options`\r\n    - deps: mime@1.3.4\r\n\r\n3.19.2 / 2015-02-01\r\n===================\r\n\r\n  * deps: connect@2.28.3\r\n    - deps: compression@~1.3.1\r\n    - deps: csurf@~1.6.6\r\n    - deps: errorhandler@~1.3.3\r\n    - deps: express-session@~1.10.2\r\n    - deps: serve-index@~1.6.1\r\n    - deps: type-is@~1.5.6\r\n  * deps: proxy-addr@~1.0.6\r\n    - deps: ipaddr.js@0.1.8\r\n\r\n3.19.1 / 2015-01-20\r\n===================\r\n\r\n  * deps: connect@2.28.2\r\n    - deps: body-parser@~1.10.2\r\n    - deps: serve-static@~1.8.1\r\n  * deps: send@0.11.1\r\n    - Fix root path disclosure\r\n\r\n3.19.0 / 2015-01-09\r\n===================\r\n\r\n  * Fix `OPTIONS` responses to include the `HEAD` method property\r\n  * Use `readline` for prompt in `express(1)`\r\n  * deps: commander@2.6.0\r\n  * deps: connect@2.28.1\r\n    - deps: body-parser@~1.10.1\r\n    - deps: compression@~1.3.0\r\n    - deps: connect-timeout@~1.5.0\r\n    - deps: csurf@~1.6.4\r\n    - deps: debug@~2.1.1\r\n    - deps: errorhandler@~1.3.2\r\n    - deps: express-session@~1.10.1\r\n    - deps: finalhandler@0.3.3\r\n    - deps: method-override@~2.3.1\r\n    - deps: morgan@~1.5.1\r\n    - deps: serve-favicon@~2.2.0\r\n    - deps: serve-index@~1.6.0\r\n    - deps: serve-static@~1.8.0\r\n    - deps: type-is@~1.5.5\r\n  * deps: debug@~2.1.1\r\n  * deps: methods@~1.1.1\r\n  * deps: proxy-addr@~1.0.5\r\n    - deps: ipaddr.js@0.1.6\r\n  * deps: send@0.11.0\r\n    - deps: debug@~2.1.1\r\n    - deps: etag@~1.5.1\r\n    - deps: ms@0.7.0\r\n    - deps: on-finished@~2.2.0\r\n\r\n3.18.6 / 2014-12-12\r\n===================\r\n\r\n  * Fix exception in `req.fresh`/`req.stale` without response headers\r\n\r\n3.18.5 / 2014-12-11\r\n===================\r\n\r\n  * deps: connect@2.27.6\r\n    - deps: compression@~1.2.2\r\n    - deps: express-session@~1.9.3\r\n    - deps: http-errors@~1.2.8\r\n    - deps: serve-index@~1.5.3\r\n    - deps: type-is@~1.5.4\r\n\r\n3.18.4 / 2014-11-23\r\n===================\r\n\r\n  * deps: connect@2.27.4\r\n    - deps: body-parser@~1.9.3\r\n    - deps: compression@~1.2.1\r\n    - deps: errorhandler@~1.2.3\r\n    - deps: express-session@~1.9.2\r\n    - deps: qs@2.3.3\r\n    - deps: serve-favicon@~2.1.7\r\n    - deps: serve-static@~1.5.1\r\n    - deps: type-is@~1.5.3\r\n  * deps: etag@~1.5.1\r\n  * deps: proxy-addr@~1.0.4\r\n    - deps: ipaddr.js@0.1.5\r\n\r\n3.18.3 / 2014-11-09\r\n===================\r\n\r\n  * deps: connect@2.27.3\r\n    - Correctly invoke async callback asynchronously\r\n    - deps: csurf@~1.6.3\r\n\r\n3.18.2 / 2014-10-28\r\n===================\r\n\r\n  * deps: connect@2.27.2\r\n    - Fix handling of URLs containing `://` in the path\r\n    - deps: body-parser@~1.9.2\r\n    - deps: qs@2.3.2\r\n\r\n3.18.1 / 2014-10-22\r\n===================\r\n\r\n  * Fix internal `utils.merge` deprecation warnings\r\n  * deps: connect@2.27.1\r\n    - deps: body-parser@~1.9.1\r\n    - deps: express-session@~1.9.1\r\n    - deps: finalhandler@0.3.2\r\n    - deps: morgan@~1.4.1\r\n    - deps: qs@2.3.0\r\n    - deps: serve-static@~1.7.1\r\n  * deps: send@0.10.1\r\n    - deps: on-finished@~2.1.1\r\n\r\n3.18.0 / 2014-10-17\r\n===================\r\n\r\n  * Use `content-disposition` module for `res.attachment`/`res.download`\r\n    - Sends standards-compliant `Content-Disposition` header\r\n    - Full Unicode support\r\n  * Use `etag` module to generate `ETag` headers\r\n  * deps: connect@2.27.0\r\n    - Use `http-errors` module for creating errors\r\n    - Use `utils-merge` module for merging objects\r\n    - deps: body-parser@~1.9.0\r\n    - deps: compression@~1.2.0\r\n    - deps: connect-timeout@~1.4.0\r\n    - deps: debug@~2.1.0\r\n    - deps: depd@~1.0.0\r\n    - deps: express-session@~1.9.0\r\n    - deps: finalhandler@0.3.1\r\n    - deps: method-override@~2.3.0\r\n    - deps: morgan@~1.4.0\r\n    - deps: response-time@~2.2.0\r\n    - deps: serve-favicon@~2.1.6\r\n    - deps: serve-index@~1.5.0\r\n    - deps: serve-static@~1.7.0\r\n  * deps: debug@~2.1.0\r\n    - Implement `DEBUG_FD` env variable support\r\n  * deps: depd@~1.0.0\r\n  * deps: send@0.10.0\r\n    - deps: debug@~2.1.0\r\n    - deps: depd@~1.0.0\r\n    - deps: etag@~1.5.0\r\n\r\n3.17.8 / 2014-10-15\r\n===================\r\n\r\n  * deps: connect@2.26.6\r\n    - deps: compression@~1.1.2\r\n    - deps: csurf@~1.6.2\r\n    - deps: errorhandler@~1.2.2\r\n\r\n3.17.7 / 2014-10-08\r\n===================\r\n\r\n  * deps: connect@2.26.5\r\n    - Fix accepting non-object arguments to `logger`\r\n    - deps: serve-static@~1.6.4\r\n\r\n3.17.6 / 2014-10-02\r\n===================\r\n\r\n  * deps: connect@2.26.4\r\n    - deps: morgan@~1.3.2\r\n    - deps: type-is@~1.5.2\r\n\r\n3.17.5 / 2014-09-24\r\n===================\r\n\r\n  * deps: connect@2.26.3\r\n    - deps: body-parser@~1.8.4\r\n    - deps: serve-favicon@~2.1.5\r\n    - deps: serve-static@~1.6.3\r\n  * deps: proxy-addr@~1.0.3\r\n    - Use `forwarded` npm module\r\n  * deps: send@0.9.3\r\n    - deps: etag@~1.4.0\r\n\r\n3.17.4 / 2014-09-19\r\n===================\r\n\r\n  * deps: connect@2.26.2\r\n    - deps: body-parser@~1.8.3\r\n    - deps: qs@2.2.4\r\n\r\n3.17.3 / 2014-09-18\r\n===================\r\n\r\n  * deps: proxy-addr@~1.0.2\r\n    - Fix a global leak when multiple subnets are trusted\r\n    - deps: ipaddr.js@0.1.3\r\n\r\n3.17.2 / 2014-09-15\r\n===================\r\n\r\n  * Use `crc` instead of `buffer-crc32` for speed\r\n  * deps: connect@2.26.1\r\n    - deps: body-parser@~1.8.2\r\n    - deps: depd@0.4.5\r\n    - deps: express-session@~1.8.2\r\n    - deps: morgan@~1.3.1\r\n    - deps: serve-favicon@~2.1.3\r\n    - deps: serve-static@~1.6.2\r\n  * deps: depd@0.4.5\r\n  * deps: send@0.9.2\r\n    - deps: depd@0.4.5\r\n    - deps: etag@~1.3.1\r\n    - deps: range-parser@~1.0.2\r\n\r\n3.17.1 / 2014-09-08\r\n===================\r\n\r\n  * Fix error in `req.subdomains` on empty host\r\n\r\n3.17.0 / 2014-09-08\r\n===================\r\n\r\n  * Support `X-Forwarded-Host` in `req.subdomains`\r\n  * Support IP address host in `req.subdomains`\r\n  * deps: connect@2.26.0\r\n    - deps: body-parser@~1.8.1\r\n    - deps: compression@~1.1.0\r\n    - deps: connect-timeout@~1.3.0\r\n    - deps: cookie-parser@~1.3.3\r\n    - deps: cookie-signature@1.0.5\r\n    - deps: csurf@~1.6.1\r\n    - deps: debug@~2.0.0\r\n    - deps: errorhandler@~1.2.0\r\n    - deps: express-session@~1.8.1\r\n    - deps: finalhandler@0.2.0\r\n    - deps: fresh@0.2.4\r\n    - deps: media-typer@0.3.0\r\n    - deps: method-override@~2.2.0\r\n    - deps: morgan@~1.3.0\r\n    - deps: qs@2.2.3\r\n    - deps: serve-favicon@~2.1.3\r\n    - deps: serve-index@~1.2.1\r\n    - deps: serve-static@~1.6.1\r\n    - deps: type-is@~1.5.1\r\n    - deps: vhost@~3.0.0\r\n  * deps: cookie-signature@1.0.5\r\n  * deps: debug@~2.0.0\r\n  * deps: fresh@0.2.4\r\n  * deps: media-typer@0.3.0\r\n    - Throw error when parameter format invalid on parse\r\n  * deps: range-parser@~1.0.2\r\n  * deps: send@0.9.1\r\n    - Add `lastModified` option\r\n    - Use `etag` to generate `ETag` header\r\n    - deps: debug@~2.0.0\r\n    - deps: fresh@0.2.4\r\n  * deps: vary@~1.0.0\r\n    - Accept valid `Vary` header string as `field`\r\n\r\n3.16.10 / 2014-09-04\r\n====================\r\n\r\n  * deps: connect@2.25.10\r\n    - deps: serve-static@~1.5.4\r\n  * deps: send@0.8.5\r\n    - Fix a path traversal issue when using `root`\r\n    - Fix malicious path detection for empty string path\r\n\r\n3.16.9 / 2014-08-29\r\n===================\r\n\r\n  * deps: connect@2.25.9\r\n    - deps: body-parser@~1.6.7\r\n    - deps: qs@2.2.2\r\n\r\n3.16.8 / 2014-08-27\r\n===================\r\n\r\n  * deps: connect@2.25.8\r\n    - deps: body-parser@~1.6.6\r\n    - deps: csurf@~1.4.1\r\n    - deps: qs@2.2.0\r\n\r\n3.16.7 / 2014-08-18\r\n===================\r\n\r\n  * deps: connect@2.25.7\r\n    - deps: body-parser@~1.6.5\r\n    - deps: express-session@~1.7.6\r\n    - deps: morgan@~1.2.3\r\n    - deps: serve-static@~1.5.3\r\n  * deps: send@0.8.3\r\n    - deps: destroy@1.0.3\r\n    - deps: on-finished@2.1.0\r\n\r\n3.16.6 / 2014-08-14\r\n===================\r\n\r\n  * deps: connect@2.25.6\r\n    - deps: body-parser@~1.6.4\r\n    - deps: qs@1.2.2\r\n    - deps: serve-static@~1.5.2\r\n  * deps: send@0.8.2\r\n    - Work around `fd` leak in Node.js 0.10 for `fs.ReadStream`\r\n\r\n3.16.5 / 2014-08-11\r\n===================\r\n\r\n  * deps: connect@2.25.5\r\n    - Fix backwards compatibility in `logger`\r\n\r\n3.16.4 / 2014-08-10\r\n===================\r\n\r\n  * Fix original URL parsing in `res.location`\r\n  * deps: connect@2.25.4\r\n    - Fix `query` middleware breaking with argument\r\n    - deps: body-parser@~1.6.3\r\n    - deps: compression@~1.0.11\r\n    - deps: connect-timeout@~1.2.2\r\n    - deps: express-session@~1.7.5\r\n    - deps: method-override@~2.1.3\r\n    - deps: on-headers@~1.0.0\r\n    - deps: parseurl@~1.3.0\r\n    - deps: qs@1.2.1\r\n    - deps: response-time@~2.0.1\r\n    - deps: serve-index@~1.1.6\r\n    - deps: serve-static@~1.5.1\r\n  * deps: parseurl@~1.3.0\r\n\r\n3.16.3 / 2014-08-07\r\n===================\r\n\r\n  * deps: connect@2.25.3\r\n    - deps: multiparty@3.3.2\r\n\r\n3.16.2 / 2014-08-07\r\n===================\r\n\r\n  * deps: connect@2.25.2\r\n    - deps: body-parser@~1.6.2\r\n    - deps: qs@1.2.0\r\n\r\n3.16.1 / 2014-08-06\r\n===================\r\n\r\n  * deps: connect@2.25.1\r\n    - deps: body-parser@~1.6.1\r\n    - deps: qs@1.1.0\r\n\r\n3.16.0 / 2014-08-05\r\n===================\r\n\r\n  * deps: connect@2.25.0\r\n    - deps: body-parser@~1.6.0\r\n    - deps: compression@~1.0.10\r\n    - deps: csurf@~1.4.0\r\n    - deps: express-session@~1.7.4\r\n    - deps: qs@1.0.2\r\n    - deps: serve-static@~1.5.0\r\n  * deps: send@0.8.1\r\n    - Add `extensions` option\r\n\r\n3.15.3 / 2014-08-04\r\n===================\r\n\r\n  * fix `res.sendfile` regression for serving directory index files\r\n  * deps: connect@2.24.3\r\n    - deps: serve-index@~1.1.5\r\n    - deps: serve-static@~1.4.4\r\n  * deps: send@0.7.4\r\n    - Fix incorrect 403 on Windows and Node.js 0.11\r\n    - Fix serving index files without root dir\r\n\r\n3.15.2 / 2014-07-27\r\n===================\r\n\r\n  * deps: connect@2.24.2\r\n    - deps: body-parser@~1.5.2\r\n    - deps: depd@0.4.4\r\n    - deps: express-session@~1.7.2\r\n    - deps: morgan@~1.2.2\r\n    - deps: serve-static@~1.4.2\r\n  * deps: depd@0.4.4\r\n    - Work-around v8 generating empty stack traces\r\n  * deps: send@0.7.2\r\n    - deps: depd@0.4.4\r\n\r\n3.15.1 / 2014-07-26\r\n===================\r\n\r\n  * deps: connect@2.24.1\r\n    - deps: body-parser@~1.5.1\r\n    - deps: depd@0.4.3\r\n    - deps: express-session@~1.7.1\r\n    - deps: morgan@~1.2.1\r\n    - deps: serve-index@~1.1.4\r\n    - deps: serve-static@~1.4.1\r\n  * deps: depd@0.4.3\r\n    - Fix exception when global `Error.stackTraceLimit` is too low\r\n  * deps: send@0.7.1\r\n    - deps: depd@0.4.3\r\n\r\n3.15.0 / 2014-07-22\r\n===================\r\n\r\n  * Fix `req.protocol` for proxy-direct connections\r\n  * Pass options from `res.sendfile` to `send`\r\n  * deps: connect@2.24.0\r\n    - deps: body-parser@~1.5.0\r\n    - deps: compression@~1.0.9\r\n    - deps: connect-timeout@~1.2.1\r\n    - deps: debug@1.0.4\r\n    - deps: depd@0.4.2\r\n    - deps: express-session@~1.7.0\r\n    - deps: finalhandler@0.1.0\r\n    - deps: method-override@~2.1.2\r\n    - deps: morgan@~1.2.0\r\n    - deps: multiparty@3.3.1\r\n    - deps: parseurl@~1.2.0\r\n    - deps: serve-static@~1.4.0\r\n  * deps: debug@1.0.4\r\n  * deps: depd@0.4.2\r\n    - Add `TRACE_DEPRECATION` environment variable\r\n    - Remove non-standard grey color from color output\r\n    - Support `--no-deprecation` argument\r\n    - Support `--trace-deprecation` argument\r\n  * deps: parseurl@~1.2.0\r\n    - Cache URLs based on original value\r\n    - Remove no-longer-needed URL mis-parse work-around\r\n    - Simplify the \"fast-path\" `RegExp`\r\n  * deps: send@0.7.0\r\n    - Add `dotfiles` option\r\n    - Cap `maxAge` value to 1 year\r\n    - deps: debug@1.0.4\r\n    - deps: depd@0.4.2\r\n\r\n3.14.0 / 2014-07-11\r\n===================\r\n\r\n * add explicit \"Rosetta Flash JSONP abuse\" protection\r\n   - previous versions are not vulnerable; this is just explicit protection\r\n * deprecate `res.redirect(url, status)` -- use `res.redirect(status, url)` instead\r\n * fix `res.send(status, num)` to send `num` as json (not error)\r\n * remove unnecessary escaping when `res.jsonp` returns JSON response\r\n * deps: basic-auth@1.0.0\r\n   - support empty password\r\n   - support empty username\r\n * deps: connect@2.23.0\r\n   - deps: debug@1.0.3\r\n   - deps: express-session@~1.6.4\r\n   - deps: method-override@~2.1.0\r\n   - deps: parseurl@~1.1.3\r\n   - deps: serve-static@~1.3.1\r\n  * deps: debug@1.0.3\r\n    - Add support for multiple wildcards in namespaces\r\n  * deps: methods@1.1.0\r\n    - add `CONNECT`\r\n  * deps: parseurl@~1.1.3\r\n    - faster parsing of href-only URLs\r\n\r\n3.13.0 / 2014-07-03\r\n===================\r\n\r\n * add deprecation message to `app.configure`\r\n * add deprecation message to `req.auth`\r\n * use `basic-auth` to parse `Authorization` header\r\n * deps: connect@2.22.0\r\n   - deps: csurf@~1.3.0\r\n   - deps: express-session@~1.6.1\r\n   - deps: multiparty@3.3.0\r\n   - deps: serve-static@~1.3.0\r\n * deps: send@0.5.0\r\n   - Accept string for `maxage` (converted by `ms`)\r\n   - Include link in default redirect response\r\n\r\n3.12.1 / 2014-06-26\r\n===================\r\n\r\n * deps: connect@2.21.1\r\n   - deps: cookie-parser@1.3.2\r\n   - deps: cookie-signature@1.0.4\r\n   - deps: express-session@~1.5.2\r\n   - deps: type-is@~1.3.2\r\n * deps: cookie-signature@1.0.4\r\n   - fix for timing attacks\r\n\r\n3.12.0 / 2014-06-21\r\n===================\r\n\r\n * use `media-typer` to alter content-type charset\r\n * deps: connect@2.21.0\r\n   - deprecate `connect(middleware)` -- use `app.use(middleware)` instead\r\n   - deprecate `connect.createServer()` -- use `connect()` instead\r\n   - fix `res.setHeader()` patch to work with get -> append -> set pattern\r\n   - deps: compression@~1.0.8\r\n   - deps: errorhandler@~1.1.1\r\n   - deps: express-session@~1.5.0\r\n   - deps: serve-index@~1.1.3\r\n\r\n3.11.0 / 2014-06-19\r\n===================\r\n\r\n * deprecate things with `depd` module\r\n * deps: buffer-crc32@0.2.3\r\n * deps: connect@2.20.2\r\n   - deprecate `verify` option to `json` -- use `body-parser` npm module instead\r\n   - deprecate `verify` option to `urlencoded` -- use `body-parser` npm module instead\r\n   - deprecate things with `depd` module\r\n   - use `finalhandler` for final response handling\r\n   - use `media-typer` to parse `content-type` for charset\r\n   - deps: body-parser@1.4.3\r\n   - deps: connect-timeout@1.1.1\r\n   - deps: cookie-parser@1.3.1\r\n   - deps: csurf@1.2.2\r\n   - deps: errorhandler@1.1.0\r\n   - deps: express-session@1.4.0\r\n   - deps: multiparty@3.2.9\r\n   - deps: serve-index@1.1.2\r\n   - deps: type-is@1.3.1\r\n   - deps: vhost@2.0.0\r\n\r\n3.10.5 / 2014-06-11\r\n===================\r\n\r\n * deps: connect@2.19.6\r\n   - deps: body-parser@1.3.1\r\n   - deps: compression@1.0.7\r\n   - deps: debug@1.0.2\r\n   - deps: serve-index@1.1.1\r\n   - deps: serve-static@1.2.3\r\n * deps: debug@1.0.2\r\n * deps: send@0.4.3\r\n   - Do not throw uncatchable error on file open race condition\r\n   - Use `escape-html` for HTML escaping\r\n   - deps: debug@1.0.2\r\n   - deps: finished@1.2.2\r\n   - deps: fresh@0.2.2\r\n\r\n3.10.4 / 2014-06-09\r\n===================\r\n\r\n * deps: connect@2.19.5\r\n   - fix \"event emitter leak\" warnings\r\n   - deps: csurf@1.2.1\r\n   - deps: debug@1.0.1\r\n   - deps: serve-static@1.2.2\r\n   - deps: type-is@1.2.1\r\n * deps: debug@1.0.1\r\n * deps: send@0.4.2\r\n   - fix \"event emitter leak\" warnings\r\n   - deps: finished@1.2.1\r\n   - deps: debug@1.0.1\r\n\r\n3.10.3 / 2014-06-05\r\n===================\r\n\r\n * use `vary` module for `res.vary`\r\n * deps: connect@2.19.4\r\n   - deps: errorhandler@1.0.2\r\n   - deps: method-override@2.0.2\r\n   - deps: serve-favicon@2.0.1\r\n * deps: debug@1.0.0\r\n\r\n3.10.2 / 2014-06-03\r\n===================\r\n\r\n * deps: connect@2.19.3\r\n   - deps: compression@1.0.6\r\n\r\n3.10.1 / 2014-06-03\r\n===================\r\n\r\n * deps: connect@2.19.2\r\n   - deps: compression@1.0.4\r\n * deps: proxy-addr@1.0.1\r\n\r\n3.10.0 / 2014-06-02\r\n===================\r\n\r\n * deps: connect@2.19.1\r\n   - deprecate `methodOverride()` -- use `method-override` npm module instead\r\n   - deps: body-parser@1.3.0\r\n   - deps: method-override@2.0.1\r\n   - deps: multiparty@3.2.8\r\n   - deps: response-time@2.0.0\r\n   - deps: serve-static@1.2.1\r\n * deps: methods@1.0.1\r\n * deps: send@0.4.1\r\n   - Send `max-age` in `Cache-Control` in correct format\r\n\r\n3.9.0 / 2014-05-30\r\n==================\r\n\r\n * custom etag control with `app.set('etag', val)`\r\n   - `app.set('etag', function(body, encoding){ return '\"etag\"' })` custom etag generation\r\n   - `app.set('etag', 'weak')` weak tag\r\n   - `app.set('etag', 'strong')` strong etag\r\n   - `app.set('etag', false)` turn off\r\n   - `app.set('etag', true)` standard etag\r\n * Include ETag in HEAD requests\r\n * mark `res.send` ETag as weak and reduce collisions\r\n * update connect to 2.18.0\r\n   - deps: compression@1.0.3\r\n   - deps: serve-index@1.1.0\r\n   - deps: serve-static@1.2.0\r\n * update send to 0.4.0\r\n   - Calculate ETag with md5 for reduced collisions\r\n   - Ignore stream errors after request ends\r\n   - deps: debug@0.8.1\r\n\r\n3.8.1 / 2014-05-27\r\n==================\r\n\r\n * update connect to 2.17.3\r\n   - deps: body-parser@1.2.2\r\n   - deps: express-session@1.2.1\r\n   - deps: method-override@1.0.2\r\n\r\n3.8.0 / 2014-05-21\r\n==================\r\n\r\n * keep previous `Content-Type` for `res.jsonp`\r\n * set proper `charset` in `Content-Type` for `res.send`\r\n * update connect to 2.17.1\r\n   - fix `res.charset` appending charset when `content-type` has one\r\n   - deps: express-session@1.2.0\r\n   - deps: morgan@1.1.1\r\n   - deps: serve-index@1.0.3\r\n\r\n3.7.0 / 2014-05-18\r\n==================\r\n\r\n * proper proxy trust with `app.set('trust proxy', trust)`\r\n   - `app.set('trust proxy', 1)` trust first hop\r\n   - `app.set('trust proxy', 'loopback')` trust loopback addresses\r\n   - `app.set('trust proxy', '10.0.0.1')` trust single IP\r\n   - `app.set('trust proxy', '10.0.0.1/16')` trust subnet\r\n   - `app.set('trust proxy', '10.0.0.1, 10.0.0.2')` trust list\r\n   - `app.set('trust proxy', false)` turn off\r\n   - `app.set('trust proxy', true)` trust everything\r\n * update connect to 2.16.2\r\n   - deprecate `res.headerSent` -- use `res.headersSent`\r\n   - deprecate `res.on(\"header\")` -- use on-headers module instead\r\n   - fix edge-case in `res.appendHeader` that would append in wrong order\r\n   - json: use body-parser\r\n   - urlencoded: use body-parser\r\n   - dep: bytes@1.0.0\r\n   - dep: cookie-parser@1.1.0\r\n   - dep: csurf@1.2.0\r\n   - dep: express-session@1.1.0\r\n   - dep: method-override@1.0.1\r\n\r\n3.6.0 / 2014-05-09\r\n==================\r\n\r\n * deprecate `app.del()` -- use `app.delete()` instead\r\n * deprecate `res.json(obj, status)` -- use `res.json(status, obj)` instead\r\n   - the edge-case `res.json(status, num)` requires `res.status(status).json(num)`\r\n * deprecate `res.jsonp(obj, status)` -- use `res.jsonp(status, obj)` instead\r\n   - the edge-case `res.jsonp(status, num)` requires `res.status(status).jsonp(num)`\r\n * support PURGE method\r\n   - add `app.purge`\r\n   - add `router.purge`\r\n   - include PURGE in `app.all`\r\n * update connect to 2.15.0\r\n   * Add `res.appendHeader`\r\n   * Call error stack even when response has been sent\r\n   * Patch `res.headerSent` to return Boolean\r\n   * Patch `res.headersSent` for node.js 0.8\r\n   * Prevent default 404 handler after response sent\r\n   * dep: compression@1.0.2\r\n   * dep: connect-timeout@1.1.0\r\n   * dep: debug@^0.8.0\r\n   * dep: errorhandler@1.0.1\r\n   * dep: express-session@1.0.4\r\n   * dep: morgan@1.0.1\r\n   * dep: serve-favicon@2.0.0\r\n   * dep: serve-index@1.0.2\r\n * update debug to 0.8.0\r\n   * add `enable()` method\r\n   * change from stderr to stdout\r\n * update methods to 1.0.0\r\n   - add PURGE\r\n * update mkdirp to 0.5.0\r\n\r\n3.5.3 / 2014-05-08\r\n==================\r\n\r\n * fix `req.host` for IPv6 literals\r\n * fix `res.jsonp` error if callback param is object\r\n\r\n3.5.2 / 2014-04-24\r\n==================\r\n\r\n * update connect to 2.14.5\r\n * update cookie to 0.1.2\r\n * update mkdirp to 0.4.0\r\n * update send to 0.3.0\r\n\r\n3.5.1 / 2014-03-25\r\n==================\r\n\r\n * pin less-middleware in generated app\r\n\r\n3.5.0 / 2014-03-06\r\n==================\r\n\r\n * bump deps\r\n\r\n3.4.8 / 2014-01-13\r\n==================\r\n\r\n * prevent incorrect automatic OPTIONS responses #1868 @dpatti\r\n * update binary and examples for jade 1.0 #1876 @yossi, #1877 @reqshark, #1892 @matheusazzi\r\n * throw 400 in case of malformed paths @rlidwka\r\n\r\n3.4.7 / 2013-12-10\r\n==================\r\n\r\n * update connect\r\n\r\n3.4.6 / 2013-12-01\r\n==================\r\n\r\n * update connect (raw-body)\r\n\r\n3.4.5 / 2013-11-27\r\n==================\r\n\r\n * update connect\r\n * res.location: remove leading ./ #1802 @kapouer\r\n * res.redirect: fix `res.redirect('toString') #1829 @michaelficarra\r\n * res.send: always send ETag when content-length > 0\r\n * router: add Router.all() method\r\n\r\n3.4.4 / 2013-10-29\r\n==================\r\n\r\n * update connect\r\n * update supertest\r\n * update methods\r\n * express(1): replace bodyParser() with urlencoded() and json() #1795 @chirag04\r\n\r\n3.4.3 / 2013-10-23\r\n==================\r\n\r\n * update connect\r\n\r\n3.4.2 / 2013-10-18\r\n==================\r\n\r\n * update connect\r\n * downgrade commander\r\n\r\n3.4.1 / 2013-10-15\r\n==================\r\n\r\n * update connect\r\n * update commander\r\n * jsonp: check if callback is a function\r\n * router: wrap encodeURIComponent in a try/catch #1735 (@lxe)\r\n * res.format: now includes charset @1747 (@sorribas)\r\n * res.links: allow multiple calls @1746 (@sorribas)\r\n\r\n3.4.0 / 2013-09-07\r\n==================\r\n\r\n * add res.vary(). Closes #1682\r\n * update connect\r\n\r\n3.3.8 / 2013-09-02\r\n==================\r\n\r\n * update connect\r\n\r\n3.3.7 / 2013-08-28\r\n==================\r\n\r\n * update connect\r\n\r\n3.3.6 / 2013-08-27\r\n==================\r\n\r\n * Revert \"remove charset from json responses. Closes #1631\" (causes issues in some clients)\r\n * add: req.accepts take an argument list\r\n\r\n3.3.4 / 2013-07-08\r\n==================\r\n\r\n * update send and connect\r\n\r\n3.3.3 / 2013-07-04\r\n==================\r\n\r\n * update connect\r\n\r\n3.3.2 / 2013-07-03\r\n==================\r\n\r\n * update connect\r\n * update send\r\n * remove .version export\r\n\r\n3.3.1 / 2013-06-27\r\n==================\r\n\r\n * update connect\r\n\r\n3.3.0 / 2013-06-26\r\n==================\r\n\r\n * update connect\r\n * add support for multiple X-Forwarded-Proto values. Closes #1646\r\n * change: remove charset from json responses. Closes #1631\r\n * change: return actual booleans from req.accept* functions\r\n * fix jsonp callback array throw\r\n\r\n3.2.6 / 2013-06-02\r\n==================\r\n\r\n * update connect\r\n\r\n3.2.5 / 2013-05-21\r\n==================\r\n\r\n * update connect\r\n * update node-cookie\r\n * add: throw a meaningful error when there is no default engine\r\n * change generation of ETags with res.send() to GET requests only. Closes #1619\r\n\r\n3.2.4 / 2013-05-09\r\n==================\r\n\r\n  * fix `req.subdomains` when no Host is present\r\n  * fix `req.host` when no Host is present, return undefined\r\n\r\n3.2.3 / 2013-05-07\r\n==================\r\n\r\n  * update connect / qs\r\n\r\n3.2.2 / 2013-05-03\r\n==================\r\n\r\n  * update qs\r\n\r\n3.2.1 / 2013-04-29\r\n==================\r\n\r\n  * add app.VERB() paths array deprecation warning\r\n  * update connect\r\n  * update qs and remove all ~ semver crap\r\n  * fix: accept number as value of Signed Cookie\r\n\r\n3.2.0 / 2013-04-15\r\n==================\r\n\r\n  * add \"view\" constructor setting to override view behaviour\r\n  * add req.acceptsEncoding(name)\r\n  * add req.acceptedEncodings\r\n  * revert cookie signature change causing session race conditions\r\n  * fix sorting of Accept values of the same quality\r\n\r\n3.1.2 / 2013-04-12\r\n==================\r\n\r\n  * add support for custom Accept parameters\r\n  * update cookie-signature\r\n\r\n3.1.1 / 2013-04-01\r\n==================\r\n\r\n  * add X-Forwarded-Host support to `req.host`\r\n  * fix relative redirects\r\n  * update mkdirp\r\n  * update buffer-crc32\r\n  * remove legacy app.configure() method from app template.\r\n\r\n3.1.0 / 2013-01-25\r\n==================\r\n\r\n  * add support for leading \".\" in \"view engine\" setting\r\n  * add array support to `res.set()`\r\n  * add node 0.8.x to travis.yml\r\n  * add \"subdomain offset\" setting for tweaking `req.subdomains`\r\n  * add `res.location(url)` implementing `res.redirect()`-like setting of Location\r\n  * use app.get() for x-powered-by setting for inheritance\r\n  * fix colons in passwords for `req.auth`\r\n\r\n3.0.6 / 2013-01-04\r\n==================\r\n\r\n  * add http verb methods to Router\r\n  * update connect\r\n  * fix mangling of the `res.cookie()` options object\r\n  * fix jsonp whitespace escape. Closes #1132\r\n\r\n3.0.5 / 2012-12-19\r\n==================\r\n\r\n  * add throwing when a non-function is passed to a route\r\n  * fix: explicitly remove Transfer-Encoding header from 204 and 304 responses\r\n  * revert \"add 'etag' option\"\r\n\r\n3.0.4 / 2012-12-05\r\n==================\r\n\r\n  * add 'etag' option to disable `res.send()` Etags\r\n  * add escaping of urls in text/plain in `res.redirect()`\r\n    for old browsers interpreting as html\r\n  * change crc32 module for a more liberal license\r\n  * update connect\r\n\r\n3.0.3 / 2012-11-13\r\n==================\r\n\r\n  * update connect\r\n  * update cookie module\r\n  * fix cookie max-age\r\n\r\n3.0.2 / 2012-11-08\r\n==================\r\n\r\n  * add OPTIONS to cors example. Closes #1398\r\n  * fix route chaining regression. Closes #1397\r\n\r\n3.0.1 / 2012-11-01\r\n==================\r\n\r\n  * update connect\r\n\r\n3.0.0 / 2012-10-23\r\n==================\r\n\r\n  * add `make clean`\r\n  * add \"Basic\" check to req.auth\r\n  * add `req.auth` test coverage\r\n  * add cb && cb(payload) to `res.jsonp()`. Closes #1374\r\n  * add backwards compat for `res.redirect()` status. Closes #1336\r\n  * add support for `res.json()` to retain previously defined Content-Types. Closes #1349\r\n  * update connect\r\n  * change `res.redirect()` to utilize a pathname-relative Location again. Closes #1382\r\n  * remove non-primitive string support for `res.send()`\r\n  * fix view-locals example. Closes #1370\r\n  * fix route-separation example\r\n\r\n3.0.0rc5 / 2012-09-18\r\n==================\r\n\r\n  * update connect\r\n  * add redis search example\r\n  * add static-files example\r\n  * add \"x-powered-by\" setting (`app.disable('x-powered-by')`)\r\n  * add \"application/octet-stream\" redirect Accept test case. Closes #1317\r\n\r\n3.0.0rc4 / 2012-08-30\r\n==================\r\n\r\n  * add `res.jsonp()`. Closes #1307\r\n  * add \"verbose errors\" option to error-pages example\r\n  * add another route example to express(1) so people are not so confused\r\n  * add redis online user activity tracking example\r\n  * update connect dep\r\n  * fix etag quoting. Closes #1310\r\n  * fix error-pages 404 status\r\n  * fix jsonp callback char restrictions\r\n  * remove old OPTIONS default response\r\n\r\n3.0.0rc3 / 2012-08-13\r\n==================\r\n\r\n  * update connect dep\r\n  * fix signed cookies to work with `connect.cookieParser()` (\"s:\" prefix was missing) [tnydwrds]\r\n  * fix `res.render()` clobbering of \"locals\"\r\n\r\n3.0.0rc2 / 2012-08-03\r\n==================\r\n\r\n  * add CORS example\r\n  * update connect dep\r\n  * deprecate `.createServer()` & remove old stale examples\r\n  * fix: escape `res.redirect()` link\r\n  * fix vhost example\r\n\r\n3.0.0rc1 / 2012-07-24\r\n==================\r\n\r\n  * add more examples to view-locals\r\n  * add scheme-relative redirects (`res.redirect(\"//foo.com\")`) support\r\n  * update cookie dep\r\n  * update connect dep\r\n  * update send dep\r\n  * fix `express(1)` -h flag, use -H for hogan. Closes #1245\r\n  * fix `res.sendfile()` socket error handling regression\r\n\r\n3.0.0beta7 / 2012-07-16\r\n==================\r\n\r\n  * update connect dep for `send()` root normalization regression\r\n\r\n3.0.0beta6 / 2012-07-13\r\n==================\r\n\r\n  * add `err.view` property for view errors. Closes #1226\r\n  * add \"jsonp callback name\" setting\r\n  * add support for \"/foo/:bar*\" non-greedy matches\r\n  * change `res.sendfile()` to use `send()` module\r\n  * change `res.send` to use \"response-send\" module\r\n  * remove `app.locals.use` and `res.locals.use`, use regular middleware\r\n\r\n3.0.0beta5 / 2012-07-03\r\n==================\r\n\r\n  * add \"make check\" support\r\n  * add route-map example\r\n  * add `res.json(obj, status)` support back for BC\r\n  * add \"methods\" dep, remove internal methods module\r\n  * update connect dep\r\n  * update auth example to utilize cores pbkdf2\r\n  * updated tests to use \"supertest\"\r\n\r\n3.0.0beta4 / 2012-06-25\r\n==================\r\n\r\n  * Added `req.auth`\r\n  * Added `req.range(size)`\r\n  * Added `res.links(obj)`\r\n  * Added `res.send(body, status)` support back for backwards compat\r\n  * Added `.default()` support to `res.format()`\r\n  * Added 2xx / 304 check to `req.fresh`\r\n  * Revert \"Added + support to the router\"\r\n  * Fixed `res.send()` freshness check, respect res.statusCode\r\n\r\n3.0.0beta3 / 2012-06-15\r\n==================\r\n\r\n  * Added hogan `--hjs` to express(1) [nullfirm]\r\n  * Added another example to content-negotiation\r\n  * Added `fresh` dep\r\n  * Changed: `res.send()` always checks freshness\r\n  * Fixed: expose connects mime module. Closes #1165\r\n\r\n3.0.0beta2 / 2012-06-06\r\n==================\r\n\r\n  * Added `+` support to the router\r\n  * Added `req.host`\r\n  * Changed `req.param()` to check route first\r\n  * Update connect dep\r\n\r\n3.0.0beta1 / 2012-06-01\r\n==================\r\n\r\n  * Added `res.format()` callback to override default 406 behaviour\r\n  * Fixed `res.redirect()` 406. Closes #1154\r\n\r\n3.0.0alpha5 / 2012-05-30\r\n==================\r\n\r\n  * Added `req.ip`\r\n  * Added `{ signed: true }` option to `res.cookie()`\r\n  * Removed `res.signedCookie()`\r\n  * Changed: dont reverse `req.ips`\r\n  * Fixed \"trust proxy\" setting check for `req.ips`\r\n\r\n3.0.0alpha4 / 2012-05-09\r\n==================\r\n\r\n  * Added: allow `[]` in jsonp callback. Closes #1128\r\n  * Added `PORT` env var support in generated template. Closes #1118 [benatkin]\r\n  * Updated: connect 2.2.2\r\n\r\n3.0.0alpha3 / 2012-05-04\r\n==================\r\n\r\n  * Added public `app.routes`. Closes #887\r\n  * Added _view-locals_ example\r\n  * Added _mvc_ example\r\n  * Added `res.locals.use()`. Closes #1120\r\n  * Added conditional-GET support to `res.send()`\r\n  * Added: coerce `res.set()` values to strings\r\n  * Changed: moved `static()` in generated apps below router\r\n  * Changed: `res.send()` only set ETag when not previously set\r\n  * Changed connect 2.2.1 dep\r\n  * Changed: `make test` now runs unit / acceptance tests\r\n  * Fixed req/res proto inheritance\r\n\r\n3.0.0alpha2 / 2012-04-26\r\n==================\r\n\r\n  * Added `make benchmark` back\r\n  * Added `res.send()` support for `String` objects\r\n  * Added client-side data exposing example\r\n  * Added `res.header()` and `req.header()` aliases for BC\r\n  * Added `express.createServer()` for BC\r\n  * Perf: memoize parsed urls\r\n  * Perf: connect 2.2.0 dep\r\n  * Changed: make `expressInit()` middleware self-aware\r\n  * Fixed: use app.get() for all core settings\r\n  * Fixed redis session example\r\n  * Fixed session example. Closes #1105\r\n  * Fixed generated express dep. Closes #1078\r\n\r\n3.0.0alpha1 / 2012-04-15\r\n==================\r\n\r\n  * Added `app.locals.use(callback)`\r\n  * Added `app.locals` object\r\n  * Added `app.locals(obj)`\r\n  * Added `res.locals` object\r\n  * Added `res.locals(obj)`\r\n  * Added `res.format()` for content-negotiation\r\n  * Added `app.engine()`\r\n  * Added `res.cookie()` JSON cookie support\r\n  * Added \"trust proxy\" setting\r\n  * Added `req.subdomains`\r\n  * Added `req.protocol`\r\n  * Added `req.secure`\r\n  * Added `req.path`\r\n  * Added `req.ips`\r\n  * Added `req.fresh`\r\n  * Added `req.stale`\r\n  * Added comma-delimited / array support for `req.accepts()`\r\n  * Added debug instrumentation\r\n  * Added `res.set(obj)`\r\n  * Added `res.set(field, value)`\r\n  * Added `res.get(field)`\r\n  * Added `app.get(setting)`. Closes #842\r\n  * Added `req.acceptsLanguage()`\r\n  * Added `req.acceptsCharset()`\r\n  * Added `req.accepted`\r\n  * Added `req.acceptedLanguages`\r\n  * Added `req.acceptedCharsets`\r\n  * Added \"json replacer\" setting\r\n  * Added \"json spaces\" setting\r\n  * Added X-Forwarded-Proto support to `res.redirect()`. Closes #92\r\n  * Added `--less` support to express(1)\r\n  * Added `express.response` prototype\r\n  * Added `express.request` prototype\r\n  * Added `express.application` prototype\r\n  * Added `app.path()`\r\n  * Added `app.render()`\r\n  * Added `res.type()` to replace `res.contentType()`\r\n  * Changed: `res.redirect()` to add relative support\r\n  * Changed: enable \"jsonp callback\" by default\r\n  * Changed: renamed \"case sensitive routes\" to \"case sensitive routing\"\r\n  * Rewrite of all tests with mocha\r\n  * Removed \"root\" setting\r\n  * Removed `res.redirect('home')` support\r\n  * Removed `req.notify()`\r\n  * Removed `app.register()`\r\n  * Removed `app.redirect()`\r\n  * Removed `app.is()`\r\n  * Removed `app.helpers()`\r\n  * Removed `app.dynamicHelpers()`\r\n  * Fixed `res.sendfile()` with non-GET. Closes #723\r\n  * Fixed express(1) public dir for windows. Closes #866\r\n\r\n2.5.9/ 2012-04-02\r\n==================\r\n\r\n  * Added support for PURGE request method [pbuyle]\r\n  * Fixed `express(1)` generated app `app.address()` before `listening` [mmalecki]\r\n\r\n2.5.8 / 2012-02-08\r\n==================\r\n\r\n  * Update mkdirp dep. Closes #991\r\n\r\n2.5.7 / 2012-02-06\r\n==================\r\n\r\n  * Fixed `app.all` duplicate DELETE requests [mscdex]\r\n\r\n2.5.6 / 2012-01-13\r\n==================\r\n\r\n  * Updated hamljs dev dep. Closes #953\r\n\r\n2.5.5 / 2012-01-08\r\n==================\r\n\r\n  * Fixed: set `filename` on cached templates [matthewleon]\r\n\r\n2.5.4 / 2012-01-02\r\n==================\r\n\r\n  * Fixed `express(1)` eol on 0.4.x. Closes #947\r\n\r\n2.5.3 / 2011-12-30\r\n==================\r\n\r\n  * Fixed `req.is()` when a charset is present\r\n\r\n2.5.2 / 2011-12-10\r\n==================\r\n\r\n  * Fixed: express(1) LF -> CRLF for windows\r\n\r\n2.5.1 / 2011-11-17\r\n==================\r\n\r\n  * Changed: updated connect to 1.8.x\r\n  * Removed sass.js support from express(1)\r\n\r\n2.5.0 / 2011-10-24\r\n==================\r\n\r\n  * Added ./routes dir for generated app by default\r\n  * Added npm install reminder to express(1) app gen\r\n  * Added 0.5.x support\r\n  * Removed `make test-cov` since it wont work with node 0.5.x\r\n  * Fixed express(1) public dir for windows. Closes #866\r\n\r\n2.4.7 / 2011-10-05\r\n==================\r\n\r\n  * Added mkdirp to express(1). Closes #795\r\n  * Added simple _json-config_ example\r\n  * Added  shorthand for the parsed request's pathname via `req.path`\r\n  * Changed connect dep to 1.7.x to fix npm issue...\r\n  * Fixed `res.redirect()` __HEAD__ support. [reported by xerox]\r\n  * Fixed `req.flash()`, only escape args\r\n  * Fixed absolute path checking on windows. Closes #829 [reported by andrewpmckenzie]\r\n\r\n2.4.6 / 2011-08-22\r\n==================\r\n\r\n  * Fixed multiple param callback regression. Closes #824 [reported by TroyGoode]\r\n\r\n2.4.5 / 2011-08-19\r\n==================\r\n\r\n  * Added support for routes to handle errors. Closes #809\r\n  * Added `app.routes.all()`. Closes #803\r\n  * Added \"basepath\" setting to work in conjunction with reverse proxies etc.\r\n  * Refactored `Route` to use a single array of callbacks\r\n  * Added support for multiple callbacks for `app.param()`. Closes #801\r\nCloses #805\r\n  * Changed: removed .call(self) for route callbacks\r\n  * Dependency: `qs >= 0.3.1`\r\n  * Fixed `res.redirect()` on windows due to `join()` usage. Closes #808\r\n\r\n2.4.4 / 2011-08-05\r\n==================\r\n\r\n  * Fixed `res.header()` intention of a set, even when `undefined`\r\n  * Fixed `*`, value no longer required\r\n  * Fixed `res.send(204)` support. Closes #771\r\n\r\n2.4.3 / 2011-07-14\r\n==================\r\n\r\n  * Added docs for `status` option special-case. Closes #739\r\n  * Fixed `options.filename`, exposing the view path to template engines\r\n\r\n2.4.2. / 2011-07-06\r\n==================\r\n\r\n  * Revert \"removed jsonp stripping\" for XSS\r\n\r\n2.4.1 / 2011-07-06\r\n==================\r\n\r\n  * Added `res.json()` JSONP support. Closes #737\r\n  * Added _extending-templates_ example. Closes #730\r\n  * Added \"strict routing\" setting for trailing slashes\r\n  * Added support for multiple envs in `app.configure()` calls. Closes #735\r\n  * Changed: `res.send()` using `res.json()`\r\n  * Changed: when cookie `path === null` don't default it\r\n  * Changed; default cookie path to \"home\" setting. Closes #731\r\n  * Removed _pids/logs_ creation from express(1)\r\n\r\n2.4.0 / 2011-06-28\r\n==================\r\n\r\n  * Added chainable `res.status(code)`\r\n  * Added `res.json()`, an explicit version of `res.send(obj)`\r\n  * Added simple web-service example\r\n\r\n2.3.12 / 2011-06-22\r\n==================\r\n\r\n  * \\#express is now on freenode! come join!\r\n  * Added `req.get(field, param)`\r\n  * Added links to Japanese documentation, thanks @hideyukisaito!\r\n  * Added; the `express(1)` generated app outputs the env\r\n  * Added `content-negotiation` example\r\n  * Dependency: connect >= 1.5.1 < 2.0.0\r\n  * Fixed view layout bug. Closes #720\r\n  * Fixed; ignore body on 304. Closes #701\r\n\r\n2.3.11 / 2011-06-04\r\n==================\r\n\r\n  * Added `npm test`\r\n  * Removed generation of dummy test file from `express(1)`\r\n  * Fixed; `express(1)` adds express as a dep\r\n  * Fixed; prune on `prepublish`\r\n\r\n2.3.10 / 2011-05-27\r\n==================\r\n\r\n  * Added `req.route`, exposing the current route\r\n  * Added _package.json_ generation support to `express(1)`\r\n  * Fixed call to `app.param()` function for optional params. Closes #682\r\n\r\n2.3.9 / 2011-05-25\r\n==================\r\n\r\n  * Fixed bug-ish with `../' in `res.partial()` calls\r\n\r\n2.3.8 / 2011-05-24\r\n==================\r\n\r\n  * Fixed `app.options()`\r\n\r\n2.3.7 / 2011-05-23\r\n==================\r\n\r\n  * Added route `Collection`, ex: `app.get('/user/:id').remove();`\r\n  * Added support for `app.param(fn)` to define param logic\r\n  * Removed `app.param()` support for callback with return value\r\n  * Removed module.parent check from express(1) generated app. Closes #670\r\n  * Refactored router. Closes #639\r\n\r\n2.3.6 / 2011-05-20\r\n==================\r\n\r\n  * Changed; using devDependencies instead of git submodules\r\n  * Fixed redis session example\r\n  * Fixed markdown example\r\n  * Fixed view caching, should not be enabled in development\r\n\r\n2.3.5 / 2011-05-20\r\n==================\r\n\r\n  * Added export `.view` as alias for `.View`\r\n\r\n2.3.4 / 2011-05-08\r\n==================\r\n\r\n  * Added `./examples/say`\r\n  * Fixed `res.sendfile()` bug preventing the transfer of files with spaces\r\n\r\n2.3.3 / 2011-05-03\r\n==================\r\n\r\n  * Added \"case sensitive routes\" option.\r\n  * Changed; split methods supported per rfc [slaskis]\r\n  * Fixed route-specific middleware when using the same callback function several times\r\n\r\n2.3.2 / 2011-04-27\r\n==================\r\n\r\n  * Fixed view hints\r\n\r\n2.3.1 / 2011-04-26\r\n==================\r\n\r\n  * Added `app.match()` as `app.match.all()`\r\n  * Added `app.lookup()` as `app.lookup.all()`\r\n  * Added `app.remove()` for `app.remove.all()`\r\n  * Added `app.remove.VERB()`\r\n  * Fixed template caching collision issue. Closes #644\r\n  * Moved router over from connect and started refactor\r\n\r\n2.3.0 / 2011-04-25\r\n==================\r\n\r\n  * Added options support to `res.clearCookie()`\r\n  * Added `res.helpers()` as alias of `res.locals()`\r\n  * Added; json defaults to UTF-8 with `res.send()`. Closes #632. [Daniel   * Dependency `connect >= 1.4.0`\r\n  * Changed; auto set Content-Type in res.attachement [Aaron Heckmann]\r\n  * Renamed \"cache views\" to \"view cache\". Closes #628\r\n  * Fixed caching of views when using several apps. Closes #637\r\n  * Fixed gotcha invoking `app.param()` callbacks once per route middleware.\r\nCloses #638\r\n  * Fixed partial lookup precedence. Closes #631\r\nShaw]\r\n\r\n2.2.2 / 2011-04-12\r\n==================\r\n\r\n  * Added second callback support for `res.download()` connection errors\r\n  * Fixed `filename` option passing to template engine\r\n\r\n2.2.1 / 2011-04-04\r\n==================\r\n\r\n  * Added `layout(path)` helper to change the layout within a view. Closes #610\r\n  * Fixed `partial()` collection object support.\r\n    Previously only anything with `.length` would work.\r\n    When `.length` is present one must still be aware of holes,\r\n    however now `{ collection: {foo: 'bar'}}` is valid, exposes\r\n    `keyInCollection` and `keysInCollection`.\r\n\r\n  * Performance improved with better view caching\r\n  * Removed `request` and `response` locals\r\n  * Changed; errorHandler page title is now `Express` instead of `Connect`\r\n\r\n2.2.0 / 2011-03-30\r\n==================\r\n\r\n  * Added `app.lookup.VERB()`, ex `app.lookup.put('/user/:id')`. Closes #606\r\n  * Added `app.match.VERB()`, ex `app.match.put('/user/12')`. Closes #606\r\n  * Added `app.VERB(path)` as alias of `app.lookup.VERB()`.\r\n  * Dependency `connect >= 1.2.0`\r\n\r\n2.1.1 / 2011-03-29\r\n==================\r\n\r\n  * Added; expose `err.view` object when failing to locate a view\r\n  * Fixed `res.partial()` call `next(err)` when no callback is given [reported by aheckmann]\r\n  * Fixed; `res.send(undefined)` responds with 204 [aheckmann]\r\n\r\n2.1.0 / 2011-03-24\r\n==================\r\n\r\n  * Added `<root>/_?<name>` partial lookup support. Closes #447\r\n  * Added `request`, `response`, and `app` local variables\r\n  * Added `settings` local variable, containing the app's settings\r\n  * Added `req.flash()` exception if `req.session` is not available\r\n  * Added `res.send(bool)` support (json response)\r\n  * Fixed stylus example for latest version\r\n  * Fixed; wrap try/catch around `res.render()`\r\n\r\n2.0.0 / 2011-03-17\r\n==================\r\n\r\n  * Fixed up index view path alternative.\r\n  * Changed; `res.locals()` without object returns the locals\r\n\r\n2.0.0rc3 / 2011-03-17\r\n==================\r\n\r\n  * Added `res.locals(obj)` to compliment `res.local(key, val)`\r\n  * Added `res.partial()` callback support\r\n  * Fixed recursive error reporting issue in `res.render()`\r\n\r\n2.0.0rc2 / 2011-03-17\r\n==================\r\n\r\n  * Changed; `partial()` \"locals\" are now optional\r\n  * Fixed `SlowBuffer` support. Closes #584 [reported by tyrda01]\r\n  * Fixed .filename view engine option [reported by drudge]\r\n  * Fixed blog example\r\n  * Fixed `{req,res}.app` reference when mounting [Ben Weaver]\r\n\r\n2.0.0rc / 2011-03-14\r\n==================\r\n\r\n  * Fixed; expose `HTTPSServer` constructor\r\n  * Fixed express(1) default test charset. Closes #579 [reported by secoif]\r\n  * Fixed; default charset to utf-8 instead of utf8 for lame IE [reported by NickP]\r\n\r\n2.0.0beta3 / 2011-03-09\r\n==================\r\n\r\n  * Added support for `res.contentType()` literal\r\n    The original `res.contentType('.json')`,\r\n    `res.contentType('application/json')`, and `res.contentType('json')`\r\n    will work now.\r\n  * Added `res.render()` status option support back\r\n  * Added charset option for `res.render()`\r\n  * Added `.charset` support (via connect 1.0.4)\r\n  * Added view resolution hints when in development and a lookup fails\r\n  * Added layout lookup support relative to the page view.\r\n    For example while rendering `./views/user/index.jade` if you create\r\n    `./views/user/layout.jade` it will be used in favour of the root layout.\r\n  * Fixed `res.redirect()`. RFC states absolute url [reported by unlink]\r\n  * Fixed; default `res.send()` string charset to utf8\r\n  * Removed `Partial` constructor (not currently used)\r\n\r\n2.0.0beta2 / 2011-03-07\r\n==================\r\n\r\n  * Added res.render() `.locals` support back to aid in migration process\r\n  * Fixed flash example\r\n\r\n2.0.0beta / 2011-03-03\r\n==================\r\n\r\n  * Added HTTPS support\r\n  * Added `res.cookie()` maxAge support\r\n  * Added `req.header()` _Referrer_ / _Referer_ special-case, either works\r\n  * Added mount support for `res.redirect()`, now respects the mount-point\r\n  * Added `union()` util, taking place of `merge(clone())` combo\r\n  * Added stylus support to express(1) generated app\r\n  * Added secret to session middleware used in examples and generated app\r\n  * Added `res.local(name, val)` for progressive view locals\r\n  * Added default param support to `req.param(name, default)`\r\n  * Added `app.disabled()` and `app.enabled()`\r\n  * Added `app.register()` support for omitting leading \".\", either works\r\n  * Added `res.partial()`, using the same interface as `partial()` within a view. Closes #539\r\n  * Added `app.param()` to map route params to async/sync logic\r\n  * Added; aliased `app.helpers()` as `app.locals()`. Closes #481\r\n  * Added extname with no leading \".\" support to `res.contentType()`\r\n  * Added `cache views` setting, defaulting to enabled in \"production\" env\r\n  * Added index file partial resolution, eg: partial('user') may try _views/user/index.jade_.\r\n  * Added `req.accepts()` support for extensions\r\n  * Changed; `res.download()` and `res.sendfile()` now utilize Connect's\r\n    static file server `connect.static.send()`.\r\n  * Changed; replaced `connect.utils.mime()` with npm _mime_ module\r\n  * Changed; allow `req.query` to be pre-defined (via middleware or other parent\r\n  * Changed view partial resolution, now relative to parent view\r\n  * Changed view engine signature. no longer `engine.render(str, options, callback)`, now `engine.compile(str, options) -> Function`, the returned function accepts `fn(locals)`.\r\n  * Fixed `req.param()` bug returning Array.prototype methods. Closes #552\r\n  * Fixed; using `Stream#pipe()` instead of `sys.pump()` in `res.sendfile()`\r\n  * Fixed; using _qs_ module instead of _querystring_\r\n  * Fixed; strip unsafe chars from jsonp callbacks\r\n  * Removed \"stream threshold\" setting\r\n\r\n1.0.8 / 2011-03-01\r\n==================\r\n\r\n  * Allow `req.query` to be pre-defined (via middleware or other parent app)\r\n  * \"connect\": \">= 0.5.0 < 1.0.0\". Closes #547\r\n  * Removed the long deprecated __EXPRESS_ENV__ support\r\n\r\n1.0.7 / 2011-02-07\r\n==================\r\n\r\n  * Fixed `render()` setting inheritance.\r\n    Mounted apps would not inherit \"view engine\"\r\n\r\n1.0.6 / 2011-02-07\r\n==================\r\n\r\n  * Fixed `view engine` setting bug when period is in dirname\r\n\r\n1.0.5 / 2011-02-05\r\n==================\r\n\r\n  * Added secret to generated app `session()` call\r\n\r\n1.0.4 / 2011-02-05\r\n==================\r\n\r\n  * Added `qs` dependency to _package.json_\r\n  * Fixed namespaced `require()`s for latest connect support\r\n\r\n1.0.3 / 2011-01-13\r\n==================\r\n\r\n  * Remove unsafe characters from JSONP callback names [Ryan Grove]\r\n\r\n1.0.2 / 2011-01-10\r\n==================\r\n\r\n  * Removed nested require, using `connect.router`\r\n\r\n1.0.1 / 2010-12-29\r\n==================\r\n\r\n  * Fixed for middleware stacked via `createServer()`\r\n    previously the `foo` middleware passed to `createServer(foo)`\r\n    would not have access to Express methods such as `res.send()`\r\n    or props like `req.query` etc.\r\n\r\n1.0.0 / 2010-11-16\r\n==================\r\n\r\n  * Added; deduce partial object names from the last segment.\r\n    For example by default `partial('forum/post', postObject)` will\r\n    give you the _post_ object, providing a meaningful default.\r\n  * Added http status code string representation to `res.redirect()` body\r\n  * Added; `res.redirect()` supporting _text/plain_ and _text/html_ via __Accept__.\r\n  * Added `req.is()` to aid in content negotiation\r\n  * Added partial local inheritance [suggested by masylum]. Closes #102\r\n    providing access to parent template locals.\r\n  * Added _-s, --session[s]_ flag to express(1) to add session related middleware\r\n  * Added _--template_ flag to express(1) to specify the\r\n    template engine to use.\r\n  * Added _--css_ flag to express(1) to specify the\r\n    stylesheet engine to use (or just plain css by default).\r\n  * Added `app.all()` support [thanks aheckmann]\r\n  * Added partial direct object support.\r\n    You may now `partial('user', user)` providing the \"user\" local,\r\n    vs previously `partial('user', { object: user })`.\r\n  * Added _route-separation_ example since many people question ways\r\n    to do this with CommonJS modules. Also view the _blog_ example for\r\n    an alternative.\r\n  * Performance; caching view path derived partial object names\r\n  * Fixed partial local inheritance precedence. [reported by Nick Poulden] Closes #454\r\n  * Fixed jsonp support; _text/javascript_ as per mailinglist discussion\r\n\r\n1.0.0rc4 / 2010-10-14\r\n==================\r\n\r\n  * Added _NODE_ENV_ support, _EXPRESS_ENV_ is deprecated and will be removed in 1.0.0\r\n  * Added route-middleware support (very helpful, see the [docs](http://expressjs.com/guide.html#Route-Middleware))\r\n  * Added _jsonp callback_ setting to enable/disable jsonp autowrapping [Dav Glass]\r\n  * Added callback query check on response.send to autowrap JSON objects for simple webservice implementations [Dav Glass]\r\n  * Added `partial()` support for array-like collections. Closes #434\r\n  * Added support for swappable querystring parsers\r\n  * Added session usage docs. Closes #443\r\n  * Added dynamic helper caching. Closes #439 [suggested by maritz]\r\n  * Added authentication example\r\n  * Added basic Range support to `res.sendfile()` (and `res.download()` etc)\r\n  * Changed; `express(1)` generated app using 2 spaces instead of 4\r\n  * Default env to \"development\" again [aheckmann]\r\n  * Removed _context_ option is no more, use \"scope\"\r\n  * Fixed; exposing _./support_ libs to examples so they can run without installs\r\n  * Fixed mvc example\r\n\r\n1.0.0rc3 / 2010-09-20\r\n==================\r\n\r\n  * Added confirmation for `express(1)` app generation. Closes #391\r\n  * Added extending of flash formatters via `app.flashFormatters`\r\n  * Added flash formatter support. Closes #411\r\n  * Added streaming support to `res.sendfile()` using `sys.pump()` when >= \"stream threshold\"\r\n  * Added _stream threshold_ setting for `res.sendfile()`\r\n  * Added `res.send()` __HEAD__ support\r\n  * Added `res.clearCookie()`\r\n  * Added `res.cookie()`\r\n  * Added `res.render()` headers option\r\n  * Added `res.redirect()` response bodies\r\n  * Added `res.render()` status option support. Closes #425 [thanks aheckmann]\r\n  * Fixed `res.sendfile()` responding with 403 on malicious path\r\n  * Fixed `res.download()` bug; when an error occurs remove _Content-Disposition_\r\n  * Fixed; mounted apps settings now inherit from parent app [aheckmann]\r\n  * Fixed; stripping Content-Length / Content-Type when 204\r\n  * Fixed `res.send()` 204. Closes #419\r\n  * Fixed multiple _Set-Cookie_ headers via `res.header()`. Closes #402\r\n  * Fixed bug messing with error handlers when `listenFD()` is called instead of `listen()`. [thanks guillermo]\r\n\r\n\r\n1.0.0rc2 / 2010-08-17\r\n==================\r\n\r\n  * Added `app.register()` for template engine mapping. Closes #390\r\n  * Added `res.render()` callback support as second argument (no options)\r\n  * Added callback support to `res.download()`\r\n  * Added callback support for `res.sendfile()`\r\n  * Added support for middleware access via `express.middlewareName()` vs `connect.middlewareName()`\r\n  * Added \"partials\" setting to docs\r\n  * Added default expresso tests to `express(1)` generated app. Closes #384\r\n  * Fixed `res.sendfile()` error handling, defer via `next()`\r\n  * Fixed `res.render()` callback when a layout is used [thanks guillermo]\r\n  * Fixed; `make install` creating ~/.node_libraries when not present\r\n  * Fixed issue preventing error handlers from being defined anywhere. Closes #387\r\n\r\n1.0.0rc / 2010-07-28\r\n==================\r\n\r\n  * Added mounted hook. Closes #369\r\n  * Added connect dependency to _package.json_\r\n\r\n  * Removed \"reload views\" setting and support code\r\n    development env never caches, production always caches.\r\n\r\n  * Removed _param_ in route callbacks, signature is now\r\n    simply (req, res, next), previously (req, res, params, next).\r\n    Use _req.params_ for path captures, _req.query_ for GET params.\r\n\r\n  * Fixed \"home\" setting\r\n  * Fixed middleware/router precedence issue. Closes #366\r\n  * Fixed; _configure()_ callbacks called immediately. Closes #368\r\n\r\n1.0.0beta2 / 2010-07-23\r\n==================\r\n\r\n  * Added more examples\r\n  * Added; exporting `Server` constructor\r\n  * Added `Server#helpers()` for view locals\r\n  * Added `Server#dynamicHelpers()` for dynamic view locals. Closes #349\r\n  * Added support for absolute view paths\r\n  * Added; _home_ setting defaults to `Server#route` for mounted apps. Closes #363\r\n  * Added Guillermo Rauch to the contributor list\r\n  * Added support for \"as\" for non-collection partials. Closes #341\r\n  * Fixed _install.sh_, ensuring _~/.node_libraries_ exists. Closes #362 [thanks jf]\r\n  * Fixed `res.render()` exceptions, now passed to `next()` when no callback is given [thanks guillermo]\r\n  * Fixed instanceof `Array` checks, now `Array.isArray()`\r\n  * Fixed express(1) expansion of public dirs. Closes #348\r\n  * Fixed middleware precedence. Closes #345\r\n  * Fixed view watcher, now async [thanks aheckmann]\r\n\r\n1.0.0beta / 2010-07-15\r\n==================\r\n\r\n  * Re-write\r\n    - much faster\r\n    - much lighter\r\n    - Check [ExpressJS.com](http://expressjs.com) for migration guide and updated docs\r\n\r\n0.14.0 / 2010-06-15\r\n==================\r\n\r\n  * Utilize relative requires\r\n  * Added Static bufferSize option [aheckmann]\r\n  * Fixed caching of view and partial subdirectories [aheckmann]\r\n  * Fixed mime.type() comments now that \".ext\" is not supported\r\n  * Updated haml submodule\r\n  * Updated class submodule\r\n  * Removed bin/express\r\n\r\n0.13.0 / 2010-06-01\r\n==================\r\n\r\n  * Added node v0.1.97 compatibility\r\n  * Added support for deleting cookies via Request#cookie('key', null)\r\n  * Updated haml submodule\r\n  * Fixed not-found page, now using charset utf-8\r\n  * Fixed show-exceptions page, now using charset utf-8\r\n  * Fixed view support due to fs.readFile Buffers\r\n  * Changed; mime.type() no longer accepts \".type\" due to node extname() changes\r\n\r\n0.12.0 / 2010-05-22\r\n==================\r\n\r\n  * Added node v0.1.96 compatibility\r\n  * Added view `helpers` export which act as additional local variables\r\n  * Updated haml submodule\r\n  * Changed ETag; removed inode, modified time only\r\n  * Fixed LF to CRLF for setting multiple cookies\r\n  * Fixed cookie compilation; values are now urlencoded\r\n  * Fixed cookies parsing; accepts quoted values and url escaped cookies\r\n\r\n0.11.0 / 2010-05-06\r\n==================\r\n\r\n  * Added support for layouts using different engines\r\n    - this.render('page.html.haml', { layout: 'super-cool-layout.html.ejs' })\r\n    - this.render('page.html.haml', { layout: 'foo' }) // assumes 'foo.html.haml'\r\n    - this.render('page.html.haml', { layout: false }) // no layout\r\n  * Updated ext submodule\r\n  * Updated haml submodule\r\n  * Fixed EJS partial support by passing along the context. Issue #307\r\n\r\n0.10.1 / 2010-05-03\r\n==================\r\n\r\n  * Fixed binary uploads.\r\n\r\n0.10.0 / 2010-04-30\r\n==================\r\n\r\n  * Added charset support via Request#charset (automatically assigned to 'UTF-8' when respond()'s\r\n    encoding is set to 'utf8' or 'utf-8').\r\n  * Added \"encoding\" option to Request#render(). Closes #299\r\n  * Added \"dump exceptions\" setting, which is enabled by default.\r\n  * Added simple ejs template engine support\r\n  * Added error response support for text/plain, application/json. Closes #297\r\n  * Added callback function param to Request#error()\r\n  * Added Request#sendHead()\r\n  * Added Request#stream()\r\n  * Added support for Request#respond(304, null) for empty response bodies\r\n  * Added ETag support to Request#sendfile()\r\n  * Added options to Request#sendfile(), passed to fs.createReadStream()\r\n  * Added filename arg to Request#download()\r\n  * Performance enhanced due to pre-reversing plugins so that plugins.reverse() is not called on each request\r\n  * Performance enhanced by preventing several calls to toLowerCase() in Router#match()\r\n  * Changed; Request#sendfile() now streams\r\n  * Changed; Renamed Request#halt() to Request#respond(). Closes #289\r\n  * Changed; Using sys.inspect() instead of JSON.encode() for error output\r\n  * Changed; run() returns the http.Server instance. Closes #298\r\n  * Changed; Defaulting Server#host to null (INADDR_ANY)\r\n  * Changed; Logger \"common\" format scale of 0.4f\r\n  * Removed Logger \"request\" format\r\n  * Fixed; Catching ENOENT in view caching, preventing error when \"views/partials\" is not found\r\n  * Fixed several issues with http client\r\n  * Fixed Logger Content-Length output\r\n  * Fixed bug preventing Opera from retaining the generated session id. Closes #292\r\n\r\n0.9.0 / 2010-04-14\r\n==================\r\n\r\n  * Added DSL level error() route support\r\n  * Added DSL level notFound() route support\r\n  * Added Request#error()\r\n  * Added Request#notFound()\r\n  * Added Request#render() callback function. Closes #258\r\n  * Added \"max upload size\" setting\r\n  * Added \"magic\" variables to collection partials (\\_\\_index\\_\\_, \\_\\_length\\_\\_, \\_\\_isFirst\\_\\_, \\_\\_isLast\\_\\_). Closes #254\r\n  * Added [haml.js](http://github.com/visionmedia/haml.js) submodule; removed haml-js\r\n  * Added callback function support to Request#halt() as 3rd/4th arg\r\n  * Added preprocessing of route param wildcards using param(). Closes #251\r\n  * Added view partial support (with collections etc.)\r\n  * Fixed bug preventing falsey params (such as ?page=0). Closes #286\r\n  * Fixed setting of multiple cookies. Closes #199\r\n  * Changed; view naming convention is now NAME.TYPE.ENGINE (for example page.html.haml)\r\n  * Changed; session cookie is now httpOnly\r\n  * Changed; Request is no longer global\r\n  * Changed; Event is no longer global\r\n  * Changed; \"sys\" module is no longer global\r\n  * Changed; moved Request#download to Static plugin where it belongs\r\n  * Changed; Request instance created before body parsing. Closes #262\r\n  * Changed; Pre-caching views in memory when \"cache view contents\" is enabled. Closes #253\r\n  * Changed; Pre-caching view partials in memory when \"cache view partials\" is enabled\r\n  * Updated support to node --version 0.1.90\r\n  * Updated dependencies\r\n  * Removed set(\"session cookie\") in favour of use(Session, { cookie: { ... }})\r\n  * Removed utils.mixin(); use Object#mergeDeep()\r\n\r\n0.8.0 / 2010-03-19\r\n==================\r\n\r\n  * Added coffeescript example app. Closes #242\r\n  * Changed; cache api now async friendly. Closes #240\r\n  * Removed deprecated 'express/static' support. Use 'express/plugins/static'\r\n\r\n0.7.6 / 2010-03-19\r\n==================\r\n\r\n  * Added Request#isXHR. Closes #229\r\n  * Added `make install` (for the executable)\r\n  * Added `express` executable for setting up simple app templates\r\n  * Added \"GET /public/*\" to Static plugin, defaulting to <root>/public\r\n  * Added Static plugin\r\n  * Fixed; Request#render() only calls cache.get() once\r\n  * Fixed; Namespacing View caches with \"view:\"\r\n  * Fixed; Namespacing Static caches with \"static:\"\r\n  * Fixed; Both example apps now use the Static plugin\r\n  * Fixed set(\"views\"). Closes #239\r\n  * Fixed missing space for combined log format\r\n  * Deprecated Request#sendfile() and 'express/static'\r\n  * Removed Server#running\r\n\r\n0.7.5 / 2010-03-16\r\n==================\r\n\r\n  * Added Request#flash() support without args, now returns all flashes\r\n  * Updated ext submodule\r\n\r\n0.7.4 / 2010-03-16\r\n==================\r\n\r\n  * Fixed session reaper\r\n  * Changed; class.js replacing js-oo Class implementation (quite a bit faster, no browser cruft)\r\n\r\n0.7.3 / 2010-03-16\r\n==================\r\n\r\n  * Added package.json\r\n  * Fixed requiring of haml / sass due to kiwi removal\r\n\r\n0.7.2 / 2010-03-16\r\n==================\r\n\r\n  * Fixed GIT submodules (HAH!)\r\n\r\n0.7.1 / 2010-03-16\r\n==================\r\n\r\n  * Changed; Express now using submodules again until a PM is adopted\r\n  * Changed; chat example using millisecond conversions from ext\r\n\r\n0.7.0 / 2010-03-15\r\n==================\r\n\r\n  * Added Request#pass() support (finds the next matching route, or the given path)\r\n  * Added Logger plugin (default \"common\" format replaces CommonLogger)\r\n  * Removed Profiler plugin\r\n  * Removed CommonLogger plugin\r\n\r\n0.6.0 / 2010-03-11\r\n==================\r\n\r\n  * Added seed.yml for kiwi package management support\r\n  * Added HTTP client query string support when method is GET. Closes #205\r\n\r\n  * Added support for arbitrary view engines.\r\n    For example \"foo.engine.html\" will now require('engine'),\r\n    the exports from this module are cached after the first require().\r\n\r\n  * Added async plugin support\r\n\r\n  * Removed usage of RESTful route funcs as http client\r\n    get() etc, use http.get() and friends\r\n\r\n  * Removed custom exceptions\r\n\r\n0.5.0 / 2010-03-10\r\n==================\r\n\r\n  * Added ext dependency (library of js extensions)\r\n  * Removed extname() / basename() utils. Use path module\r\n  * Removed toArray() util. Use arguments.values\r\n  * Removed escapeRegexp() util. Use RegExp.escape()\r\n  * Removed process.mixin() dependency. Use utils.mixin()\r\n  * Removed Collection\r\n  * Removed ElementCollection\r\n  * Shameless self promotion of ebook \"Advanced JavaScript\" (http://dev-mag.com)  ;)\r\n\r\n0.4.0 / 2010-02-11\r\n==================\r\n\r\n  * Added flash() example to sample upload app\r\n  * Added high level restful http client module (express/http)\r\n  * Changed; RESTful route functions double as HTTP clients. Closes #69\r\n  * Changed; throwing error when routes are added at runtime\r\n  * Changed; defaulting render() context to the current Request. Closes #197\r\n  * Updated haml submodule\r\n\r\n0.3.0 / 2010-02-11\r\n==================\r\n\r\n  * Updated haml / sass submodules. Closes #200\r\n  * Added flash message support. Closes #64\r\n  * Added accepts() now allows multiple args. fixes #117\r\n  * Added support for plugins to halt. Closes #189\r\n  * Added alternate layout support. Closes #119\r\n  * Removed Route#run(). Closes #188\r\n  * Fixed broken specs due to use(Cookie) missing\r\n\r\n0.2.1 / 2010-02-05\r\n==================\r\n\r\n  * Added \"plot\" format option for Profiler (for gnuplot processing)\r\n  * Added request number to Profiler plugin\r\n  * Fixed binary encoding for multipart file uploads, was previously defaulting to UTF8\r\n  * Fixed issue with routes not firing when not files are present. Closes #184\r\n  * Fixed process.Promise -> events.Promise\r\n\r\n0.2.0 / 2010-02-03\r\n==================\r\n\r\n  * Added parseParam() support for name[] etc. (allows for file inputs with \"multiple\" attr) Closes #180\r\n  * Added Both Cache and Session option \"reapInterval\" may be \"reapEvery\". Closes #174\r\n  * Added expiration support to cache api with reaper. Closes #133\r\n  * Added cache Store.Memory#reap()\r\n  * Added Cache; cache api now uses first class Cache instances\r\n  * Added abstract session Store. Closes #172\r\n  * Changed; cache Memory.Store#get() utilizing Collection\r\n  * Renamed MemoryStore -> Store.Memory\r\n  * Fixed use() of the same plugin several time will always use latest options. Closes #176\r\n\r\n0.1.0 / 2010-02-03\r\n==================\r\n\r\n  * Changed; Hooks (before / after) pass request as arg as well as evaluated in their context\r\n  * Updated node support to 0.1.27 Closes #169\r\n  * Updated dirname(__filename) -> __dirname\r\n  * Updated libxmljs support to v0.2.0\r\n  * Added session support with memory store / reaping\r\n  * Added quick uid() helper\r\n  * Added multi-part upload support\r\n  * Added Sass.js support / submodule\r\n  * Added production env caching view contents and static files\r\n  * Added static file caching. Closes #136\r\n  * Added cache plugin with memory stores\r\n  * Added support to StaticFile so that it works with non-textual files.\r\n  * Removed dirname() helper\r\n  * Removed several globals (now their modules must be required)\r\n\r\n0.0.2 / 2010-01-10\r\n==================\r\n\r\n  * Added view benchmarks; currently haml vs ejs\r\n  * Added Request#attachment() specs. Closes #116\r\n  * Added use of node's parseQuery() util. Closes #123\r\n  * Added `make init` for submodules\r\n  * Updated Haml\r\n  * Updated sample chat app to show messages on load\r\n  * Updated libxmljs parseString -> parseHtmlString\r\n  * Fixed `make init` to work with older versions of git\r\n  * Fixed specs can now run independent specs for those who can't build deps. Closes #127\r\n  * Fixed issues introduced by the node url module changes. Closes 126.\r\n  * Fixed two assertions failing due to Collection#keys() returning strings\r\n  * Fixed faulty Collection#toArray() spec due to keys() returning strings\r\n  * Fixed `make test` now builds libxmljs.node before testing\r\n\r\n0.0.1 / 2010-01-03\r\n==================\r\n\r\n  * Initial release\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/express/History.md b/node_modules/express/History.md
--- a/node_modules/express/History.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/express/History.md	(date 1753913035754)
@@ -1,3 +1,44 @@
+4.21.2 / 2024-11-06
+==========
+
+  * deps: path-to-regexp@0.1.12
+    - Fix backtracking protection
+  * deps: path-to-regexp@0.1.11
+    - Throws an error on invalid path values
+
+4.21.1 / 2024-10-08
+==========
+
+  * Backported a fix for [CVE-2024-47764](https://nvd.nist.gov/vuln/detail/CVE-2024-47764)
+
+
+4.21.0 / 2024-09-11
+==========
+
+  * Deprecate `res.location("back")` and `res.redirect("back")` magic string
+  * deps: serve-static@1.16.2
+    * includes send@0.19.0
+  * deps: finalhandler@1.3.1
+  * deps: qs@6.13.0
+
+4.20.0 / 2024-09-10
+==========
+  * deps: serve-static@0.16.0
+    * Remove link renderization in html while redirecting
+  * deps: send@0.19.0
+    * Remove link renderization in html while redirecting
+  * deps: body-parser@0.6.0
+    * add `depth` option to customize the depth level in the parser
+    * IMPORTANT: The default `depth` level for parsing URL-encoded data is now `32` (previously was `Infinity`)
+  * Remove link renderization in html while using `res.redirect`
+  * deps: path-to-regexp@0.1.10
+    - Adds support for named matching groups in the routes using a regex
+    - Adds backtracking protection to parameters without regexes defined
+  * deps: encodeurl@~2.0.0
+    - Removes encoding of `\`, `|`, and `^` to align better with URL spec
+  * Deprecate passing `options.maxAge` and `options.expires` to `res.clearCookie`
+    - Will be ignored in v5, clearCookie will set a cookie with an expires in the past to instruct clients to delete the cookie
+
 4.19.2 / 2024-03-25
 ==========
 
Index: node_modules/express/Readme.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>[![Express Logo](https://i.cloudup.com/zfY6lL7eFa-3000x3000.png)](http://expressjs.com/)\r\n\r\n  Fast, unopinionated, minimalist web framework for [Node.js](http://nodejs.org).\r\n\r\n  [![NPM Version][npm-version-image]][npm-url]\r\n  [![NPM Install Size][npm-install-size-image]][npm-install-size-url]\r\n  [![NPM Downloads][npm-downloads-image]][npm-downloads-url]\r\n\r\n```js\r\nconst express = require('express')\r\nconst app = express()\r\n\r\napp.get('/', function (req, res) {\r\n  res.send('Hello World')\r\n})\r\n\r\napp.listen(3000)\r\n```\r\n\r\n## Installation\r\n\r\nThis is a [Node.js](https://nodejs.org/en/) module available through the\r\n[npm registry](https://www.npmjs.com/).\r\n\r\nBefore installing, [download and install Node.js](https://nodejs.org/en/download/).\r\nNode.js 0.10 or higher is required.\r\n\r\nIf this is a brand new project, make sure to create a `package.json` first with\r\nthe [`npm init` command](https://docs.npmjs.com/creating-a-package-json-file).\r\n\r\nInstallation is done using the\r\n[`npm install` command](https://docs.npmjs.com/getting-started/installing-npm-packages-locally):\r\n\r\n```console\r\n$ npm install express\r\n```\r\n\r\nFollow [our installing guide](http://expressjs.com/en/starter/installing.html)\r\nfor more information.\r\n\r\n## Features\r\n\r\n  * Robust routing\r\n  * Focus on high performance\r\n  * Super-high test coverage\r\n  * HTTP helpers (redirection, caching, etc)\r\n  * View system supporting 14+ template engines\r\n  * Content negotiation\r\n  * Executable for generating applications quickly\r\n\r\n## Docs & Community\r\n\r\n  * [Website and Documentation](http://expressjs.com/) - [[website repo](https://github.com/expressjs/expressjs.com)]\r\n  * [#express](https://web.libera.chat/#express) on [Libera Chat](https://libera.chat) IRC\r\n  * [GitHub Organization](https://github.com/expressjs) for Official Middleware & Modules\r\n  * Visit the [Wiki](https://github.com/expressjs/express/wiki)\r\n  * [Google Group](https://groups.google.com/group/express-js) for discussion\r\n  * [Gitter](https://gitter.im/expressjs/express) for support and discussion\r\n\r\n**PROTIP** Be sure to read [Migrating from 3.x to 4.x](https://github.com/expressjs/express/wiki/Migrating-from-3.x-to-4.x) as well as [New features in 4.x](https://github.com/expressjs/express/wiki/New-features-in-4.x).\r\n\r\n## Quick Start\r\n\r\n  The quickest way to get started with express is to utilize the executable [`express(1)`](https://github.com/expressjs/generator) to generate an application as shown below:\r\n\r\n  Install the executable. The executable's major version will match Express's:\r\n\r\n```console\r\n$ npm install -g express-generator@4\r\n```\r\n\r\n  Create the app:\r\n\r\n```console\r\n$ express /tmp/foo && cd /tmp/foo\r\n```\r\n\r\n  Install dependencies:\r\n\r\n```console\r\n$ npm install\r\n```\r\n\r\n  Start the server:\r\n\r\n```console\r\n$ npm start\r\n```\r\n\r\n  View the website at: http://localhost:3000\r\n\r\n## Philosophy\r\n\r\n  The Express philosophy is to provide small, robust tooling for HTTP servers, making\r\n  it a great solution for single page applications, websites, hybrids, or public\r\n  HTTP APIs.\r\n\r\n  Express does not force you to use any specific ORM or template engine. With support for over\r\n  14 template engines via [Consolidate.js](https://github.com/tj/consolidate.js),\r\n  you can quickly craft your perfect framework.\r\n\r\n## Examples\r\n\r\n  To view the examples, clone the Express repo and install the dependencies:\r\n\r\n```console\r\n$ git clone https://github.com/expressjs/express.git --depth 1\r\n$ cd express\r\n$ npm install\r\n```\r\n\r\n  Then run whichever example you want:\r\n\r\n```console\r\n$ node examples/content-negotiation\r\n```\r\n\r\n## Contributing\r\n\r\n  [![Linux Build][github-actions-ci-image]][github-actions-ci-url]\r\n  [![Windows Build][appveyor-image]][appveyor-url]\r\n  [![Test Coverage][coveralls-image]][coveralls-url]\r\n\r\nThe Express.js project welcomes all constructive contributions. Contributions take many forms,\r\nfrom code for bug fixes and enhancements, to additions and fixes to documentation, additional\r\ntests, triaging incoming pull requests and issues, and more!\r\n\r\nSee the [Contributing Guide](Contributing.md) for more technical details on contributing.\r\n\r\n### Security Issues\r\n\r\nIf you discover a security vulnerability in Express, please see [Security Policies and Procedures](Security.md).\r\n\r\n### Running Tests\r\n\r\nTo run the test suite, first install the dependencies, then run `npm test`:\r\n\r\n```console\r\n$ npm install\r\n$ npm test\r\n```\r\n\r\n## People\r\n\r\nThe original author of Express is [TJ Holowaychuk](https://github.com/tj)\r\n\r\nThe current lead maintainer is [Douglas Christopher Wilson](https://github.com/dougwilson)\r\n\r\n[List of all contributors](https://github.com/expressjs/express/graphs/contributors)\r\n\r\n## License\r\n\r\n  [MIT](LICENSE)\r\n\r\n[appveyor-image]: https://badgen.net/appveyor/ci/dougwilson/express/master?label=windows\r\n[appveyor-url]: https://ci.appveyor.com/project/dougwilson/express\r\n[coveralls-image]: https://badgen.net/coveralls/c/github/expressjs/express/master\r\n[coveralls-url]: https://coveralls.io/r/expressjs/express?branch=master\r\n[github-actions-ci-image]: https://badgen.net/github/checks/expressjs/express/master?label=linux\r\n[github-actions-ci-url]: https://github.com/expressjs/express/actions/workflows/ci.yml\r\n[npm-downloads-image]: https://badgen.net/npm/dm/express\r\n[npm-downloads-url]: https://npmcharts.com/compare/express?minimal=true\r\n[npm-install-size-image]: https://badgen.net/packagephobia/install/express\r\n[npm-install-size-url]: https://packagephobia.com/result?p=express\r\n[npm-url]: https://npmjs.org/package/express\r\n[npm-version-image]: https://badgen.net/npm/v/express\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/express/Readme.md b/node_modules/express/Readme.md
--- a/node_modules/express/Readme.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/express/Readme.md	(date 1753913035756)
@@ -1,10 +1,29 @@
 [![Express Logo](https://i.cloudup.com/zfY6lL7eFa-3000x3000.png)](http://expressjs.com/)
 
-  Fast, unopinionated, minimalist web framework for [Node.js](http://nodejs.org).
+**Fast, unopinionated, minimalist web framework for [Node.js](http://nodejs.org).**
+
+**This project has a [Code of Conduct][].**
+
+## Table of contents
+
+* [Installation](#Installation)
+* [Features](#Features)
+* [Docs & Community](#docs--community)
+* [Quick Start](#Quick-Start)
+* [Running Tests](#Running-Tests)
+* [Philosophy](#Philosophy)
+* [Examples](#Examples)
+* [Contributing to Express](#Contributing)
+* [TC (Technical Committee)](#tc-technical-committee)
+* [Triagers](#triagers)
+* [License](#license)
+
 
-  [![NPM Version][npm-version-image]][npm-url]
-  [![NPM Install Size][npm-install-size-image]][npm-install-size-url]
-  [![NPM Downloads][npm-downloads-image]][npm-downloads-url]
+[![NPM Version][npm-version-image]][npm-url]
+[![NPM Install Size][npm-install-size-image]][npm-install-size-url]
+[![NPM Downloads][npm-downloads-image]][npm-downloads-url]
+[![OpenSSF Scorecard Badge][ossf-scorecard-badge]][ossf-scorecard-visualizer]
+
 
 ```js
 const express = require('express')
@@ -144,10 +163,82 @@
 
 The original author of Express is [TJ Holowaychuk](https://github.com/tj)
 
-The current lead maintainer is [Douglas Christopher Wilson](https://github.com/dougwilson)
-
 [List of all contributors](https://github.com/expressjs/express/graphs/contributors)
 
+### TC (Technical Committee)
+
+* [UlisesGascon](https://github.com/UlisesGascon) - **Ulises Gascón** (he/him)
+* [jonchurch](https://github.com/jonchurch) - **Jon Church**
+* [wesleytodd](https://github.com/wesleytodd) - **Wes Todd**
+* [LinusU](https://github.com/LinusU) - **Linus Unnebäck**
+* [blakeembrey](https://github.com/blakeembrey) - **Blake Embrey**
+* [sheplu](https://github.com/sheplu) - **Jean Burellier**
+* [crandmck](https://github.com/crandmck) - **Rand McKinney**
+* [ctcpip](https://github.com/ctcpip) - **Chris de Almeida**
+
+<details>
+<summary>TC emeriti members</summary>
+
+#### TC emeriti members
+
+  * [dougwilson](https://github.com/dougwilson) - **Douglas Wilson**
+  * [hacksparrow](https://github.com/hacksparrow) - **Hage Yaapa**
+  * [jonathanong](https://github.com/jonathanong) - **jongleberry**
+  * [niftylettuce](https://github.com/niftylettuce) - **niftylettuce**
+  * [troygoode](https://github.com/troygoode) - **Troy Goode**
+</details>
+
+
+### Triagers
+
+* [aravindvnair99](https://github.com/aravindvnair99) - **Aravind Nair**
+* [carpasse](https://github.com/carpasse) - **Carlos Serrano**
+* [CBID2](https://github.com/CBID2) - **Christine Belzie**
+* [enyoghasim](https://github.com/enyoghasim) - **David Enyoghasim**
+* [UlisesGascon](https://github.com/UlisesGascon) - **Ulises Gascón** (he/him)
+* [mertcanaltin](https://github.com/mertcanaltin) - **Mert Can Altin**
+* [0ss](https://github.com/0ss) - **Salah**
+* [import-brain](https://github.com/import-brain) - **Eric Cheng** (he/him)
+* [3imed-jaberi](https://github.com/3imed-jaberi) - **Imed Jaberi**
+* [dakshkhetan](https://github.com/dakshkhetan) - **Daksh Khetan** (he/him)
+* [lucasraziel](https://github.com/lucasraziel) - **Lucas Soares Do Rego**
+* [IamLizu](https://github.com/IamLizu) - **S M Mahmudul Hasan** (he/him)
+* [Sushmeet](https://github.com/Sushmeet) - **Sushmeet Sunger**
+
+<details>
+<summary>Triagers emeriti members</summary>
+
+#### Emeritus Triagers
+
+  * [AuggieH](https://github.com/AuggieH) - **Auggie Hudak**
+  * [G-Rath](https://github.com/G-Rath) - **Gareth Jones**
+  * [MohammadXroid](https://github.com/MohammadXroid) - **Mohammad Ayashi**
+  * [NawafSwe](https://github.com/NawafSwe) - **Nawaf Alsharqi**
+  * [NotMoni](https://github.com/NotMoni) - **Moni**
+  * [VigneshMurugan](https://github.com/VigneshMurugan) - **Vignesh Murugan**
+  * [davidmashe](https://github.com/davidmashe) - **David Ashe**
+  * [digitaIfabric](https://github.com/digitaIfabric) - **David**
+  * [e-l-i-s-e](https://github.com/e-l-i-s-e) - **Elise Bonner**
+  * [fed135](https://github.com/fed135) - **Frederic Charette**
+  * [firmanJS](https://github.com/firmanJS) - **Firman Abdul Hakim**
+  * [getspooky](https://github.com/getspooky) - **Yasser Ameur**
+  * [ghinks](https://github.com/ghinks) - **Glenn**
+  * [ghousemohamed](https://github.com/ghousemohamed) - **Ghouse Mohamed**
+  * [gireeshpunathil](https://github.com/gireeshpunathil) - **Gireesh Punathil**
+  * [jake32321](https://github.com/jake32321) - **Jake Reed**
+  * [jonchurch](https://github.com/jonchurch) - **Jon Church**
+  * [lekanikotun](https://github.com/lekanikotun) - **Troy Goode**
+  * [marsonya](https://github.com/marsonya) - **Lekan Ikotun**
+  * [mastermatt](https://github.com/mastermatt) - **Matt R. Wilson**
+  * [maxakuru](https://github.com/maxakuru) - **Max Edell**
+  * [mlrawlings](https://github.com/mlrawlings) - **Michael Rawlings**
+  * [rodion-arr](https://github.com/rodion-arr) - **Rodion Abdurakhimov**
+  * [sheplu](https://github.com/sheplu) - **Jean Burellier**
+  * [tarunyadav1](https://github.com/tarunyadav1) - **Tarun yadav**
+  * [tunniclm](https://github.com/tunniclm) - **Mike Tunnicliffe**
+</details>
+
+
 ## License
 
   [MIT](LICENSE)
@@ -164,3 +255,6 @@
 [npm-install-size-url]: https://packagephobia.com/result?p=express
 [npm-url]: https://npmjs.org/package/express
 [npm-version-image]: https://badgen.net/npm/v/express
+[ossf-scorecard-badge]: https://api.scorecard.dev/projects/github.com/expressjs/express/badge
+[ossf-scorecard-visualizer]: https://ossf.github.io/scorecard-visualizer/#/projects/github.com/expressjs/express
+[Code of Conduct]: https://github.com/expressjs/express/blob/master/Code-Of-Conduct.md
Index: node_modules/pg-cloudflare/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"pg-cloudflare\",\r\n  \"version\": \"1.1.1\",\r\n  \"description\": \"A socket implementation that can run on Cloudflare Workers using native TCP connections.\",\r\n  \"main\": \"dist/empty.js\",\r\n  \"types\": \"dist/index.d.ts\",\r\n  \"license\": \"MIT\",\r\n  \"devDependencies\": {\r\n    \"ts-node\": \"^8.5.4\",\r\n    \"typescript\": \"^4.0.3\"\r\n  },\r\n  \"exports\": {\r\n    \"workerd\": \"./dist/index.js\",\r\n    \"default\": \"./dist/empty.js\"\r\n  },\r\n  \"scripts\": {\r\n    \"build\": \"tsc\",\r\n    \"build:watch\": \"tsc --watch\",\r\n    \"prepublish\": \"yarn build\",\r\n    \"test\": \"echo e2e test in pg package\"\r\n  },\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git://github.com/brianc/node-postgres.git\",\r\n    \"directory\": \"packages/pg-cloudflare\"\r\n  },\r\n  \"files\": [\r\n    \"/dist/*{js,ts,map}\",\r\n    \"/src\"\r\n  ],\r\n  \"gitHead\": \"eaafac36dc8f4a13f1fecc9e3420d35559fd8e2b\"\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-cloudflare/package.json b/node_modules/pg-cloudflare/package.json
--- a/node_modules/pg-cloudflare/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-cloudflare/package.json	(date 1753913035353)
@@ -1,8 +1,8 @@
 {
   "name": "pg-cloudflare",
-  "version": "1.1.1",
+  "version": "1.2.7",
   "description": "A socket implementation that can run on Cloudflare Workers using native TCP connections.",
-  "main": "dist/empty.js",
+  "main": "dist/index.js",
   "types": "dist/index.d.ts",
   "license": "MIT",
   "devDependencies": {
@@ -10,8 +10,13 @@
     "typescript": "^4.0.3"
   },
   "exports": {
-    "workerd": "./dist/index.js",
-    "default": "./dist/empty.js"
+    ".": {
+      "workerd": {
+        "import": "./esm/index.mjs",
+        "require": "./dist/index.js"
+      },
+      "default": "./dist/empty.js"
+    }
   },
   "scripts": {
     "build": "tsc",
@@ -26,7 +31,8 @@
   },
   "files": [
     "/dist/*{js,ts,map}",
-    "/src"
+    "/src",
+    "/esm"
   ],
-  "gitHead": "eaafac36dc8f4a13f1fecc9e3420d35559fd8e2b"
+  "gitHead": "8f8e7315e8f7c1bb01e98fdb41c8c92585510782"
 }
Index: node_modules/pg-cloudflare/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># pg-cloudflare\r\n\r\nA socket implementation that can run on Cloudflare Workers using native TCP connections.\r\n\r\n## install\r\n\r\n```\r\nnpm i --save-dev pg-cloudflare\r\n```\r\n\r\n### license\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2023 Brian M. Carlson\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-cloudflare/README.md b/node_modules/pg-cloudflare/README.md
--- a/node_modules/pg-cloudflare/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-cloudflare/README.md	(date 1753913035356)
@@ -1,13 +1,92 @@
 # pg-cloudflare
 
-A socket implementation that can run on Cloudflare Workers using native TCP connections.
+`pg-cloudflare` makes it easier to take an existing package that relies on `tls` and `net`, and make it work in environments where only `connect()` is supported, such as Cloudflare Workers.
 
-## install
+`pg-cloudflare` wraps `connect()`, the [TCP Socket API](https://github.com/wintercg/proposal-sockets-api) proposed within WinterCG, and implemented in [Cloudflare Workers](https://developers.cloudflare.com/workers/runtime-apis/tcp-sockets/), and exposes an interface with methods similar to what the `net` and `tls` modules in Node.js expose. (ex: `net.connect(path[, options][, callback])`). This minimizes the number of changes needed in order to make an existing package work across JavaScript runtimes.
+
+## Installation
 
 ```
 npm i --save-dev pg-cloudflare
 ```
 
+The package uses conditional exports to support bundlers that don't know about
+`cloudflare:sockets`, so the consumer code by default imports an empty file. To
+enable the package, resolve to the `cloudflare` condition in your bundler's
+config. For example:
+
+- `webpack.config.js`
+  ```js
+  export default {
+    ...,
+    resolve: { conditionNames: [..., "workerd"] },
+    plugins: [
+      // ignore cloudflare:sockets imports
+      new webpack.IgnorePlugin({
+        resourceRegExp: /^cloudflare:sockets$/,
+      }),
+    ],
+  }
+  ```
+- `vite.config.js`
+
+  > [!NOTE]
+  > If you are using the [Cloudflare Vite plugin](https://www.npmjs.com/package/@cloudflare/vite-plugin) then the following configuration is not necessary.
+
+  ```js
+  export default defineConfig({
+    ...,
+    resolve: {
+      conditions: [..., "workerd"],
+    },
+    build: {
+      ...,
+      // don't try to bundle cloudflare:sockets
+      rollupOptions: {
+        external: [..., 'cloudflare:sockets'],
+      },
+    },
+  })
+  ```
+
+- `rollup.config.js`
+  ```js
+  export default defineConfig({
+    ...,
+    plugins: [..., nodeResolve({ exportConditions: [..., 'workerd'] })],
+    // don't try to bundle cloudflare:sockets
+    external: [..., 'cloudflare:sockets'],
+  })
+  ```
+- `esbuild.config.js`
+  ```js
+  await esbuild.build({
+    ...,
+    conditions: [..., 'workerd'],
+  })
+  ```
+
+The concrete examples can be found in `packages/pg-bundler-test`.
+
+## How to use conditionally, in non-Node.js environments
+
+As implemented in `pg` [here](https://github.com/brianc/node-postgres/commit/07553428e9c0eacf761a5d4541a3300ff7859578#diff-34588ad868ebcb232660aba7ee6a99d1e02f4bc93f73497d2688c3f074e60533R5-R13), a typical use case might look as follows, where in a Node.js environment the `net` module is used, while in a non-Node.js environment, where `net` is unavailable, `pg-cloudflare` is used instead, providing an equivalent interface:
+
+```js
+module.exports.getStream = function getStream(ssl = false) {
+  const net = require('net')
+  if (typeof net.Socket === 'function') {
+    return net.Socket()
+  }
+  const { CloudflareSocket } = require('pg-cloudflare')
+  return new CloudflareSocket(ssl)
+}
+```
+
+## Node.js implementation of the Socket API proposal
+
+If you're looking for a way to rely on `connect()` as the interface you use to interact with raw sockets, but need this interface to be available in a Node.js environment, [`@arrowood.dev/socket`](https://github.com/Ethan-Arrowood/socket) provides a Node.js implementation of the Socket API.
+
 ### license
 
 The MIT License (MIT)
Index: node_modules/express/lib/response.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*!\r\n * express\r\n * Copyright(c) 2009-2013 TJ Holowaychuk\r\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module dependencies.\r\n * @private\r\n */\r\n\r\nvar Buffer = require('safe-buffer').Buffer\r\nvar contentDisposition = require('content-disposition');\r\nvar createError = require('http-errors')\r\nvar deprecate = require('depd')('express');\r\nvar encodeUrl = require('encodeurl');\r\nvar escapeHtml = require('escape-html');\r\nvar http = require('http');\r\nvar isAbsolute = require('./utils').isAbsolute;\r\nvar onFinished = require('on-finished');\r\nvar path = require('path');\r\nvar statuses = require('statuses')\r\nvar merge = require('utils-merge');\r\nvar sign = require('cookie-signature').sign;\r\nvar normalizeType = require('./utils').normalizeType;\r\nvar normalizeTypes = require('./utils').normalizeTypes;\r\nvar setCharset = require('./utils').setCharset;\r\nvar cookie = require('cookie');\r\nvar send = require('send');\r\nvar extname = path.extname;\r\nvar mime = send.mime;\r\nvar resolve = path.resolve;\r\nvar vary = require('vary');\r\n\r\n/**\r\n * Response prototype.\r\n * @public\r\n */\r\n\r\nvar res = Object.create(http.ServerResponse.prototype)\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nmodule.exports = res\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar charsetRegExp = /;\\s*charset\\s*=/;\r\nvar schemaAndHostRegExp = /^(?:[a-zA-Z][a-zA-Z0-9+.-]*:)?\\/\\/[^\\\\\\/\\?]+/;\r\n\r\n/**\r\n * Set status `code`.\r\n *\r\n * @param {Number} code\r\n * @return {ServerResponse}\r\n * @public\r\n */\r\n\r\nres.status = function status(code) {\r\n  if ((typeof code === 'string' || Math.floor(code) !== code) && code > 99 && code < 1000) {\r\n    deprecate('res.status(' + JSON.stringify(code) + '): use res.status(' + Math.floor(code) + ') instead')\r\n  }\r\n  this.statusCode = code;\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set Link header field with the given `links`.\r\n *\r\n * Examples:\r\n *\r\n *    res.links({\r\n *      next: 'http://api.example.com/users?page=2',\r\n *      last: 'http://api.example.com/users?page=5'\r\n *    });\r\n *\r\n * @param {Object} links\r\n * @return {ServerResponse}\r\n * @public\r\n */\r\n\r\nres.links = function(links){\r\n  var link = this.get('Link') || '';\r\n  if (link) link += ', ';\r\n  return this.set('Link', link + Object.keys(links).map(function(rel){\r\n    return '<' + links[rel] + '>; rel=\"' + rel + '\"';\r\n  }).join(', '));\r\n};\r\n\r\n/**\r\n * Send a response.\r\n *\r\n * Examples:\r\n *\r\n *     res.send(Buffer.from('wahoo'));\r\n *     res.send({ some: 'json' });\r\n *     res.send('<p>some html</p>');\r\n *\r\n * @param {string|number|boolean|object|Buffer} body\r\n * @public\r\n */\r\n\r\nres.send = function send(body) {\r\n  var chunk = body;\r\n  var encoding;\r\n  var req = this.req;\r\n  var type;\r\n\r\n  // settings\r\n  var app = this.app;\r\n\r\n  // allow status / body\r\n  if (arguments.length === 2) {\r\n    // res.send(body, status) backwards compat\r\n    if (typeof arguments[0] !== 'number' && typeof arguments[1] === 'number') {\r\n      deprecate('res.send(body, status): Use res.status(status).send(body) instead');\r\n      this.statusCode = arguments[1];\r\n    } else {\r\n      deprecate('res.send(status, body): Use res.status(status).send(body) instead');\r\n      this.statusCode = arguments[0];\r\n      chunk = arguments[1];\r\n    }\r\n  }\r\n\r\n  // disambiguate res.send(status) and res.send(status, num)\r\n  if (typeof chunk === 'number' && arguments.length === 1) {\r\n    // res.send(status) will set status message as text string\r\n    if (!this.get('Content-Type')) {\r\n      this.type('txt');\r\n    }\r\n\r\n    deprecate('res.send(status): Use res.sendStatus(status) instead');\r\n    this.statusCode = chunk;\r\n    chunk = statuses.message[chunk]\r\n  }\r\n\r\n  switch (typeof chunk) {\r\n    // string defaulting to html\r\n    case 'string':\r\n      if (!this.get('Content-Type')) {\r\n        this.type('html');\r\n      }\r\n      break;\r\n    case 'boolean':\r\n    case 'number':\r\n    case 'object':\r\n      if (chunk === null) {\r\n        chunk = '';\r\n      } else if (Buffer.isBuffer(chunk)) {\r\n        if (!this.get('Content-Type')) {\r\n          this.type('bin');\r\n        }\r\n      } else {\r\n        return this.json(chunk);\r\n      }\r\n      break;\r\n  }\r\n\r\n  // write strings in utf-8\r\n  if (typeof chunk === 'string') {\r\n    encoding = 'utf8';\r\n    type = this.get('Content-Type');\r\n\r\n    // reflect this in content-type\r\n    if (typeof type === 'string') {\r\n      this.set('Content-Type', setCharset(type, 'utf-8'));\r\n    }\r\n  }\r\n\r\n  // determine if ETag should be generated\r\n  var etagFn = app.get('etag fn')\r\n  var generateETag = !this.get('ETag') && typeof etagFn === 'function'\r\n\r\n  // populate Content-Length\r\n  var len\r\n  if (chunk !== undefined) {\r\n    if (Buffer.isBuffer(chunk)) {\r\n      // get length of Buffer\r\n      len = chunk.length\r\n    } else if (!generateETag && chunk.length < 1000) {\r\n      // just calculate length when no ETag + small chunk\r\n      len = Buffer.byteLength(chunk, encoding)\r\n    } else {\r\n      // convert chunk to Buffer and calculate\r\n      chunk = Buffer.from(chunk, encoding)\r\n      encoding = undefined;\r\n      len = chunk.length\r\n    }\r\n\r\n    this.set('Content-Length', len);\r\n  }\r\n\r\n  // populate ETag\r\n  var etag;\r\n  if (generateETag && len !== undefined) {\r\n    if ((etag = etagFn(chunk, encoding))) {\r\n      this.set('ETag', etag);\r\n    }\r\n  }\r\n\r\n  // freshness\r\n  if (req.fresh) this.statusCode = 304;\r\n\r\n  // strip irrelevant headers\r\n  if (204 === this.statusCode || 304 === this.statusCode) {\r\n    this.removeHeader('Content-Type');\r\n    this.removeHeader('Content-Length');\r\n    this.removeHeader('Transfer-Encoding');\r\n    chunk = '';\r\n  }\r\n\r\n  // alter headers for 205\r\n  if (this.statusCode === 205) {\r\n    this.set('Content-Length', '0')\r\n    this.removeHeader('Transfer-Encoding')\r\n    chunk = ''\r\n  }\r\n\r\n  if (req.method === 'HEAD') {\r\n    // skip body for HEAD\r\n    this.end();\r\n  } else {\r\n    // respond\r\n    this.end(chunk, encoding);\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Send JSON response.\r\n *\r\n * Examples:\r\n *\r\n *     res.json(null);\r\n *     res.json({ user: 'tj' });\r\n *\r\n * @param {string|number|boolean|object} obj\r\n * @public\r\n */\r\n\r\nres.json = function json(obj) {\r\n  var val = obj;\r\n\r\n  // allow status / body\r\n  if (arguments.length === 2) {\r\n    // res.json(body, status) backwards compat\r\n    if (typeof arguments[1] === 'number') {\r\n      deprecate('res.json(obj, status): Use res.status(status).json(obj) instead');\r\n      this.statusCode = arguments[1];\r\n    } else {\r\n      deprecate('res.json(status, obj): Use res.status(status).json(obj) instead');\r\n      this.statusCode = arguments[0];\r\n      val = arguments[1];\r\n    }\r\n  }\r\n\r\n  // settings\r\n  var app = this.app;\r\n  var escape = app.get('json escape')\r\n  var replacer = app.get('json replacer');\r\n  var spaces = app.get('json spaces');\r\n  var body = stringify(val, replacer, spaces, escape)\r\n\r\n  // content-type\r\n  if (!this.get('Content-Type')) {\r\n    this.set('Content-Type', 'application/json');\r\n  }\r\n\r\n  return this.send(body);\r\n};\r\n\r\n/**\r\n * Send JSON response with JSONP callback support.\r\n *\r\n * Examples:\r\n *\r\n *     res.jsonp(null);\r\n *     res.jsonp({ user: 'tj' });\r\n *\r\n * @param {string|number|boolean|object} obj\r\n * @public\r\n */\r\n\r\nres.jsonp = function jsonp(obj) {\r\n  var val = obj;\r\n\r\n  // allow status / body\r\n  if (arguments.length === 2) {\r\n    // res.jsonp(body, status) backwards compat\r\n    if (typeof arguments[1] === 'number') {\r\n      deprecate('res.jsonp(obj, status): Use res.status(status).jsonp(obj) instead');\r\n      this.statusCode = arguments[1];\r\n    } else {\r\n      deprecate('res.jsonp(status, obj): Use res.status(status).jsonp(obj) instead');\r\n      this.statusCode = arguments[0];\r\n      val = arguments[1];\r\n    }\r\n  }\r\n\r\n  // settings\r\n  var app = this.app;\r\n  var escape = app.get('json escape')\r\n  var replacer = app.get('json replacer');\r\n  var spaces = app.get('json spaces');\r\n  var body = stringify(val, replacer, spaces, escape)\r\n  var callback = this.req.query[app.get('jsonp callback name')];\r\n\r\n  // content-type\r\n  if (!this.get('Content-Type')) {\r\n    this.set('X-Content-Type-Options', 'nosniff');\r\n    this.set('Content-Type', 'application/json');\r\n  }\r\n\r\n  // fixup callback\r\n  if (Array.isArray(callback)) {\r\n    callback = callback[0];\r\n  }\r\n\r\n  // jsonp\r\n  if (typeof callback === 'string' && callback.length !== 0) {\r\n    this.set('X-Content-Type-Options', 'nosniff');\r\n    this.set('Content-Type', 'text/javascript');\r\n\r\n    // restrict callback charset\r\n    callback = callback.replace(/[^\\[\\]\\w$.]/g, '');\r\n\r\n    if (body === undefined) {\r\n      // empty argument\r\n      body = ''\r\n    } else if (typeof body === 'string') {\r\n      // replace chars not allowed in JavaScript that are in JSON\r\n      body = body\r\n        .replace(/\\u2028/g, '\\\\u2028')\r\n        .replace(/\\u2029/g, '\\\\u2029')\r\n    }\r\n\r\n    // the /**/ is a specific security mitigation for \"Rosetta Flash JSONP abuse\"\r\n    // the typeof check is just to reduce client error noise\r\n    body = '/**/ typeof ' + callback + ' === \\'function\\' && ' + callback + '(' + body + ');';\r\n  }\r\n\r\n  return this.send(body);\r\n};\r\n\r\n/**\r\n * Send given HTTP status code.\r\n *\r\n * Sets the response status to `statusCode` and the body of the\r\n * response to the standard description from node's http.STATUS_CODES\r\n * or the statusCode number if no description.\r\n *\r\n * Examples:\r\n *\r\n *     res.sendStatus(200);\r\n *\r\n * @param {number} statusCode\r\n * @public\r\n */\r\n\r\nres.sendStatus = function sendStatus(statusCode) {\r\n  var body = statuses.message[statusCode] || String(statusCode)\r\n\r\n  this.statusCode = statusCode;\r\n  this.type('txt');\r\n\r\n  return this.send(body);\r\n};\r\n\r\n/**\r\n * Transfer the file at the given `path`.\r\n *\r\n * Automatically sets the _Content-Type_ response header field.\r\n * The callback `callback(err)` is invoked when the transfer is complete\r\n * or when an error occurs. Be sure to check `res.headersSent`\r\n * if you wish to attempt responding, as the header and some data\r\n * may have already been transferred.\r\n *\r\n * Options:\r\n *\r\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\r\n *   - `root`     root directory for relative filenames\r\n *   - `headers`  object of headers to serve with file\r\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\r\n *\r\n * Other options are passed along to `send`.\r\n *\r\n * Examples:\r\n *\r\n *  The following example illustrates how `res.sendFile()` may\r\n *  be used as an alternative for the `static()` middleware for\r\n *  dynamic situations. The code backing `res.sendFile()` is actually\r\n *  the same code, so HTTP cache support etc is identical.\r\n *\r\n *     app.get('/user/:uid/photos/:file', function(req, res){\r\n *       var uid = req.params.uid\r\n *         , file = req.params.file;\r\n *\r\n *       req.user.mayViewFilesFrom(uid, function(yes){\r\n *         if (yes) {\r\n *           res.sendFile('/uploads/' + uid + '/' + file);\r\n *         } else {\r\n *           res.send(403, 'Sorry! you cant see that.');\r\n *         }\r\n *       });\r\n *     });\r\n *\r\n * @public\r\n */\r\n\r\nres.sendFile = function sendFile(path, options, callback) {\r\n  var done = callback;\r\n  var req = this.req;\r\n  var res = this;\r\n  var next = req.next;\r\n  var opts = options || {};\r\n\r\n  if (!path) {\r\n    throw new TypeError('path argument is required to res.sendFile');\r\n  }\r\n\r\n  if (typeof path !== 'string') {\r\n    throw new TypeError('path must be a string to res.sendFile')\r\n  }\r\n\r\n  // support function as second arg\r\n  if (typeof options === 'function') {\r\n    done = options;\r\n    opts = {};\r\n  }\r\n\r\n  if (!opts.root && !isAbsolute(path)) {\r\n    throw new TypeError('path must be absolute or specify root to res.sendFile');\r\n  }\r\n\r\n  // create file stream\r\n  var pathname = encodeURI(path);\r\n  var file = send(req, pathname, opts);\r\n\r\n  // transfer\r\n  sendfile(res, file, opts, function (err) {\r\n    if (done) return done(err);\r\n    if (err && err.code === 'EISDIR') return next();\r\n\r\n    // next() all but write errors\r\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\r\n      next(err);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Transfer the file at the given `path`.\r\n *\r\n * Automatically sets the _Content-Type_ response header field.\r\n * The callback `callback(err)` is invoked when the transfer is complete\r\n * or when an error occurs. Be sure to check `res.headersSent`\r\n * if you wish to attempt responding, as the header and some data\r\n * may have already been transferred.\r\n *\r\n * Options:\r\n *\r\n *   - `maxAge`   defaulting to 0 (can be string converted by `ms`)\r\n *   - `root`     root directory for relative filenames\r\n *   - `headers`  object of headers to serve with file\r\n *   - `dotfiles` serve dotfiles, defaulting to false; can be `\"allow\"` to send them\r\n *\r\n * Other options are passed along to `send`.\r\n *\r\n * Examples:\r\n *\r\n *  The following example illustrates how `res.sendfile()` may\r\n *  be used as an alternative for the `static()` middleware for\r\n *  dynamic situations. The code backing `res.sendfile()` is actually\r\n *  the same code, so HTTP cache support etc is identical.\r\n *\r\n *     app.get('/user/:uid/photos/:file', function(req, res){\r\n *       var uid = req.params.uid\r\n *         , file = req.params.file;\r\n *\r\n *       req.user.mayViewFilesFrom(uid, function(yes){\r\n *         if (yes) {\r\n *           res.sendfile('/uploads/' + uid + '/' + file);\r\n *         } else {\r\n *           res.send(403, 'Sorry! you cant see that.');\r\n *         }\r\n *       });\r\n *     });\r\n *\r\n * @public\r\n */\r\n\r\nres.sendfile = function (path, options, callback) {\r\n  var done = callback;\r\n  var req = this.req;\r\n  var res = this;\r\n  var next = req.next;\r\n  var opts = options || {};\r\n\r\n  // support function as second arg\r\n  if (typeof options === 'function') {\r\n    done = options;\r\n    opts = {};\r\n  }\r\n\r\n  // create file stream\r\n  var file = send(req, path, opts);\r\n\r\n  // transfer\r\n  sendfile(res, file, opts, function (err) {\r\n    if (done) return done(err);\r\n    if (err && err.code === 'EISDIR') return next();\r\n\r\n    // next() all but write errors\r\n    if (err && err.code !== 'ECONNABORTED' && err.syscall !== 'write') {\r\n      next(err);\r\n    }\r\n  });\r\n};\r\n\r\nres.sendfile = deprecate.function(res.sendfile,\r\n  'res.sendfile: Use res.sendFile instead');\r\n\r\n/**\r\n * Transfer the file at the given `path` as an attachment.\r\n *\r\n * Optionally providing an alternate attachment `filename`,\r\n * and optional callback `callback(err)`. The callback is invoked\r\n * when the data transfer is complete, or when an error has\r\n * occurred. Be sure to check `res.headersSent` if you plan to respond.\r\n *\r\n * Optionally providing an `options` object to use with `res.sendFile()`.\r\n * This function will set the `Content-Disposition` header, overriding\r\n * any `Content-Disposition` header passed as header options in order\r\n * to set the attachment and filename.\r\n *\r\n * This method uses `res.sendFile()`.\r\n *\r\n * @public\r\n */\r\n\r\nres.download = function download (path, filename, options, callback) {\r\n  var done = callback;\r\n  var name = filename;\r\n  var opts = options || null\r\n\r\n  // support function as second or third arg\r\n  if (typeof filename === 'function') {\r\n    done = filename;\r\n    name = null;\r\n    opts = null\r\n  } else if (typeof options === 'function') {\r\n    done = options\r\n    opts = null\r\n  }\r\n\r\n  // support optional filename, where options may be in it's place\r\n  if (typeof filename === 'object' &&\r\n    (typeof options === 'function' || options === undefined)) {\r\n    name = null\r\n    opts = filename\r\n  }\r\n\r\n  // set Content-Disposition when file is sent\r\n  var headers = {\r\n    'Content-Disposition': contentDisposition(name || path)\r\n  };\r\n\r\n  // merge user-provided headers\r\n  if (opts && opts.headers) {\r\n    var keys = Object.keys(opts.headers)\r\n    for (var i = 0; i < keys.length; i++) {\r\n      var key = keys[i]\r\n      if (key.toLowerCase() !== 'content-disposition') {\r\n        headers[key] = opts.headers[key]\r\n      }\r\n    }\r\n  }\r\n\r\n  // merge user-provided options\r\n  opts = Object.create(opts)\r\n  opts.headers = headers\r\n\r\n  // Resolve the full path for sendFile\r\n  var fullPath = !opts.root\r\n    ? resolve(path)\r\n    : path\r\n\r\n  // send file\r\n  return this.sendFile(fullPath, opts, done)\r\n};\r\n\r\n/**\r\n * Set _Content-Type_ response header with `type` through `mime.lookup()`\r\n * when it does not contain \"/\", or set the Content-Type to `type` otherwise.\r\n *\r\n * Examples:\r\n *\r\n *     res.type('.html');\r\n *     res.type('html');\r\n *     res.type('json');\r\n *     res.type('application/json');\r\n *     res.type('png');\r\n *\r\n * @param {String} type\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.contentType =\r\nres.type = function contentType(type) {\r\n  var ct = type.indexOf('/') === -1\r\n    ? mime.lookup(type)\r\n    : type;\r\n\r\n  return this.set('Content-Type', ct);\r\n};\r\n\r\n/**\r\n * Respond to the Acceptable formats using an `obj`\r\n * of mime-type callbacks.\r\n *\r\n * This method uses `req.accepted`, an array of\r\n * acceptable types ordered by their quality values.\r\n * When \"Accept\" is not present the _first_ callback\r\n * is invoked, otherwise the first match is used. When\r\n * no match is performed the server responds with\r\n * 406 \"Not Acceptable\".\r\n *\r\n * Content-Type is set for you, however if you choose\r\n * you may alter this within the callback using `res.type()`\r\n * or `res.set('Content-Type', ...)`.\r\n *\r\n *    res.format({\r\n *      'text/plain': function(){\r\n *        res.send('hey');\r\n *      },\r\n *\r\n *      'text/html': function(){\r\n *        res.send('<p>hey</p>');\r\n *      },\r\n *\r\n *      'application/json': function () {\r\n *        res.send({ message: 'hey' });\r\n *      }\r\n *    });\r\n *\r\n * In addition to canonicalized MIME types you may\r\n * also use extnames mapped to these types:\r\n *\r\n *    res.format({\r\n *      text: function(){\r\n *        res.send('hey');\r\n *      },\r\n *\r\n *      html: function(){\r\n *        res.send('<p>hey</p>');\r\n *      },\r\n *\r\n *      json: function(){\r\n *        res.send({ message: 'hey' });\r\n *      }\r\n *    });\r\n *\r\n * By default Express passes an `Error`\r\n * with a `.status` of 406 to `next(err)`\r\n * if a match is not made. If you provide\r\n * a `.default` callback it will be invoked\r\n * instead.\r\n *\r\n * @param {Object} obj\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.format = function(obj){\r\n  var req = this.req;\r\n  var next = req.next;\r\n\r\n  var keys = Object.keys(obj)\r\n    .filter(function (v) { return v !== 'default' })\r\n\r\n  var key = keys.length > 0\r\n    ? req.accepts(keys)\r\n    : false;\r\n\r\n  this.vary(\"Accept\");\r\n\r\n  if (key) {\r\n    this.set('Content-Type', normalizeType(key).value);\r\n    obj[key](req, this, next);\r\n  } else if (obj.default) {\r\n    obj.default(req, this, next)\r\n  } else {\r\n    next(createError(406, {\r\n      types: normalizeTypes(keys).map(function (o) { return o.value })\r\n    }))\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set _Content-Disposition_ header to _attachment_ with optional `filename`.\r\n *\r\n * @param {String} filename\r\n * @return {ServerResponse}\r\n * @public\r\n */\r\n\r\nres.attachment = function attachment(filename) {\r\n  if (filename) {\r\n    this.type(extname(filename));\r\n  }\r\n\r\n  this.set('Content-Disposition', contentDisposition(filename));\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Append additional header `field` with value `val`.\r\n *\r\n * Example:\r\n *\r\n *    res.append('Link', ['<http://localhost/>', '<http://localhost:3000/>']);\r\n *    res.append('Set-Cookie', 'foo=bar; Path=/; HttpOnly');\r\n *    res.append('Warning', '199 Miscellaneous warning');\r\n *\r\n * @param {String} field\r\n * @param {String|Array} val\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.append = function append(field, val) {\r\n  var prev = this.get(field);\r\n  var value = val;\r\n\r\n  if (prev) {\r\n    // concat the new and prev vals\r\n    value = Array.isArray(prev) ? prev.concat(val)\r\n      : Array.isArray(val) ? [prev].concat(val)\r\n        : [prev, val]\r\n  }\r\n\r\n  return this.set(field, value);\r\n};\r\n\r\n/**\r\n * Set header `field` to `val`, or pass\r\n * an object of header fields.\r\n *\r\n * Examples:\r\n *\r\n *    res.set('Foo', ['bar', 'baz']);\r\n *    res.set('Accept', 'application/json');\r\n *    res.set({ Accept: 'text/plain', 'X-API-Key': 'tobi' });\r\n *\r\n * Aliased as `res.header()`.\r\n *\r\n * @param {String|Object} field\r\n * @param {String|Array} val\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.set =\r\nres.header = function header(field, val) {\r\n  if (arguments.length === 2) {\r\n    var value = Array.isArray(val)\r\n      ? val.map(String)\r\n      : String(val);\r\n\r\n    // add charset to content-type\r\n    if (field.toLowerCase() === 'content-type') {\r\n      if (Array.isArray(value)) {\r\n        throw new TypeError('Content-Type cannot be set to an Array');\r\n      }\r\n      if (!charsetRegExp.test(value)) {\r\n        var charset = mime.charsets.lookup(value.split(';')[0]);\r\n        if (charset) value += '; charset=' + charset.toLowerCase();\r\n      }\r\n    }\r\n\r\n    this.setHeader(field, value);\r\n  } else {\r\n    for (var key in field) {\r\n      this.set(key, field[key]);\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Get value for header `field`.\r\n *\r\n * @param {String} field\r\n * @return {String}\r\n * @public\r\n */\r\n\r\nres.get = function(field){\r\n  return this.getHeader(field);\r\n};\r\n\r\n/**\r\n * Clear cookie `name`.\r\n *\r\n * @param {String} name\r\n * @param {Object} [options]\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.clearCookie = function clearCookie(name, options) {\r\n  var opts = merge({ expires: new Date(1), path: '/' }, options);\r\n\r\n  return this.cookie(name, '', opts);\r\n};\r\n\r\n/**\r\n * Set cookie `name` to `value`, with the given `options`.\r\n *\r\n * Options:\r\n *\r\n *    - `maxAge`   max-age in milliseconds, converted to `expires`\r\n *    - `signed`   sign the cookie\r\n *    - `path`     defaults to \"/\"\r\n *\r\n * Examples:\r\n *\r\n *    // \"Remember Me\" for 15 minutes\r\n *    res.cookie('rememberme', '1', { expires: new Date(Date.now() + 900000), httpOnly: true });\r\n *\r\n *    // same as above\r\n *    res.cookie('rememberme', '1', { maxAge: 900000, httpOnly: true })\r\n *\r\n * @param {String} name\r\n * @param {String|Object} value\r\n * @param {Object} [options]\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.cookie = function (name, value, options) {\r\n  var opts = merge({}, options);\r\n  var secret = this.req.secret;\r\n  var signed = opts.signed;\r\n\r\n  if (signed && !secret) {\r\n    throw new Error('cookieParser(\"secret\") required for signed cookies');\r\n  }\r\n\r\n  var val = typeof value === 'object'\r\n    ? 'j:' + JSON.stringify(value)\r\n    : String(value);\r\n\r\n  if (signed) {\r\n    val = 's:' + sign(val, secret);\r\n  }\r\n\r\n  if (opts.maxAge != null) {\r\n    var maxAge = opts.maxAge - 0\r\n\r\n    if (!isNaN(maxAge)) {\r\n      opts.expires = new Date(Date.now() + maxAge)\r\n      opts.maxAge = Math.floor(maxAge / 1000)\r\n    }\r\n  }\r\n\r\n  if (opts.path == null) {\r\n    opts.path = '/';\r\n  }\r\n\r\n  this.append('Set-Cookie', cookie.serialize(name, String(val), opts));\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Set the location header to `url`.\r\n *\r\n * The given `url` can also be \"back\", which redirects\r\n * to the _Referrer_ or _Referer_ headers or \"/\".\r\n *\r\n * Examples:\r\n *\r\n *    res.location('/foo/bar').;\r\n *    res.location('http://example.com');\r\n *    res.location('../login');\r\n *\r\n * @param {String} url\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.location = function location(url) {\r\n  var loc;\r\n\r\n  // \"back\" is an alias for the referrer\r\n  if (url === 'back') {\r\n    loc = this.req.get('Referrer') || '/';\r\n  } else {\r\n    loc = String(url);\r\n  }\r\n\r\n  var m = schemaAndHostRegExp.exec(loc);\r\n  var pos = m ? m[0].length + 1 : 0;\r\n\r\n  // Only encode after host to avoid invalid encoding which can introduce\r\n  // vulnerabilities (e.g. `\\\\` to `%5C`).\r\n  loc = loc.slice(0, pos) + encodeUrl(loc.slice(pos));\r\n\r\n  return this.set('Location', loc);\r\n};\r\n\r\n/**\r\n * Redirect to the given `url` with optional response `status`\r\n * defaulting to 302.\r\n *\r\n * The resulting `url` is determined by `res.location()`, so\r\n * it will play nicely with mounted apps, relative paths,\r\n * `\"back\"` etc.\r\n *\r\n * Examples:\r\n *\r\n *    res.redirect('/foo/bar');\r\n *    res.redirect('http://example.com');\r\n *    res.redirect(301, 'http://example.com');\r\n *    res.redirect('../login'); // /blog/post/1 -> /blog/login\r\n *\r\n * @public\r\n */\r\n\r\nres.redirect = function redirect(url) {\r\n  var address = url;\r\n  var body;\r\n  var status = 302;\r\n\r\n  // allow status / url\r\n  if (arguments.length === 2) {\r\n    if (typeof arguments[0] === 'number') {\r\n      status = arguments[0];\r\n      address = arguments[1];\r\n    } else {\r\n      deprecate('res.redirect(url, status): Use res.redirect(status, url) instead');\r\n      status = arguments[1];\r\n    }\r\n  }\r\n\r\n  // Set location header\r\n  address = this.location(address).get('Location');\r\n\r\n  // Support text/{plain,html} by default\r\n  this.format({\r\n    text: function(){\r\n      body = statuses.message[status] + '. Redirecting to ' + address\r\n    },\r\n\r\n    html: function(){\r\n      var u = escapeHtml(address);\r\n      body = '<p>' + statuses.message[status] + '. Redirecting to <a href=\"' + u + '\">' + u + '</a></p>'\r\n    },\r\n\r\n    default: function(){\r\n      body = '';\r\n    }\r\n  });\r\n\r\n  // Respond\r\n  this.statusCode = status;\r\n  this.set('Content-Length', Buffer.byteLength(body));\r\n\r\n  if (this.req.method === 'HEAD') {\r\n    this.end();\r\n  } else {\r\n    this.end(body);\r\n  }\r\n};\r\n\r\n/**\r\n * Add `field` to Vary. If already present in the Vary set, then\r\n * this call is simply ignored.\r\n *\r\n * @param {Array|String} field\r\n * @return {ServerResponse} for chaining\r\n * @public\r\n */\r\n\r\nres.vary = function(field){\r\n  // checks for back-compat\r\n  if (!field || (Array.isArray(field) && !field.length)) {\r\n    deprecate('res.vary(): Provide a field name');\r\n    return this;\r\n  }\r\n\r\n  vary(this, field);\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Render `view` with the given `options` and optional callback `fn`.\r\n * When a callback function is given a response will _not_ be made\r\n * automatically, otherwise a response of _200_ and _text/html_ is given.\r\n *\r\n * Options:\r\n *\r\n *  - `cache`     boolean hinting to the engine it should cache\r\n *  - `filename`  filename of the view being rendered\r\n *\r\n * @public\r\n */\r\n\r\nres.render = function render(view, options, callback) {\r\n  var app = this.req.app;\r\n  var done = callback;\r\n  var opts = options || {};\r\n  var req = this.req;\r\n  var self = this;\r\n\r\n  // support callback function as second arg\r\n  if (typeof options === 'function') {\r\n    done = options;\r\n    opts = {};\r\n  }\r\n\r\n  // merge res.locals\r\n  opts._locals = self.locals;\r\n\r\n  // default callback to respond\r\n  done = done || function (err, str) {\r\n    if (err) return req.next(err);\r\n    self.send(str);\r\n  };\r\n\r\n  // render\r\n  app.render(view, opts, done);\r\n};\r\n\r\n// pipe the send file stream\r\nfunction sendfile(res, file, options, callback) {\r\n  var done = false;\r\n  var streaming;\r\n\r\n  // request aborted\r\n  function onaborted() {\r\n    if (done) return;\r\n    done = true;\r\n\r\n    var err = new Error('Request aborted');\r\n    err.code = 'ECONNABORTED';\r\n    callback(err);\r\n  }\r\n\r\n  // directory\r\n  function ondirectory() {\r\n    if (done) return;\r\n    done = true;\r\n\r\n    var err = new Error('EISDIR, read');\r\n    err.code = 'EISDIR';\r\n    callback(err);\r\n  }\r\n\r\n  // errors\r\n  function onerror(err) {\r\n    if (done) return;\r\n    done = true;\r\n    callback(err);\r\n  }\r\n\r\n  // ended\r\n  function onend() {\r\n    if (done) return;\r\n    done = true;\r\n    callback();\r\n  }\r\n\r\n  // file\r\n  function onfile() {\r\n    streaming = false;\r\n  }\r\n\r\n  // finished\r\n  function onfinish(err) {\r\n    if (err && err.code === 'ECONNRESET') return onaborted();\r\n    if (err) return onerror(err);\r\n    if (done) return;\r\n\r\n    setImmediate(function () {\r\n      if (streaming !== false && !done) {\r\n        onaborted();\r\n        return;\r\n      }\r\n\r\n      if (done) return;\r\n      done = true;\r\n      callback();\r\n    });\r\n  }\r\n\r\n  // streaming\r\n  function onstream() {\r\n    streaming = true;\r\n  }\r\n\r\n  file.on('directory', ondirectory);\r\n  file.on('end', onend);\r\n  file.on('error', onerror);\r\n  file.on('file', onfile);\r\n  file.on('stream', onstream);\r\n  onFinished(res, onfinish);\r\n\r\n  if (options.headers) {\r\n    // set headers on successful transfer\r\n    file.on('headers', function headers(res) {\r\n      var obj = options.headers;\r\n      var keys = Object.keys(obj);\r\n\r\n      for (var i = 0; i < keys.length; i++) {\r\n        var k = keys[i];\r\n        res.setHeader(k, obj[k]);\r\n      }\r\n    });\r\n  }\r\n\r\n  // pipe\r\n  file.pipe(res);\r\n}\r\n\r\n/**\r\n * Stringify JSON, like JSON.stringify, but v8 optimized, with the\r\n * ability to escape characters that can trigger HTML sniffing.\r\n *\r\n * @param {*} value\r\n * @param {function} replacer\r\n * @param {number} spaces\r\n * @param {boolean} escape\r\n * @returns {string}\r\n * @private\r\n */\r\n\r\nfunction stringify (value, replacer, spaces, escape) {\r\n  // v8 checks arguments.length for optimizing simple call\r\n  // https://bugs.chromium.org/p/v8/issues/detail?id=4730\r\n  var json = replacer || spaces\r\n    ? JSON.stringify(value, replacer, spaces)\r\n    : JSON.stringify(value);\r\n\r\n  if (escape && typeof json === 'string') {\r\n    json = json.replace(/[<>&]/g, function (c) {\r\n      switch (c.charCodeAt(0)) {\r\n        case 0x3c:\r\n          return '\\\\u003c'\r\n        case 0x3e:\r\n          return '\\\\u003e'\r\n        case 0x26:\r\n          return '\\\\u0026'\r\n        /* istanbul ignore next: unreachable default */\r\n        default:\r\n          return c\r\n      }\r\n    })\r\n  }\r\n\r\n  return json\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/express/lib/response.js b/node_modules/express/lib/response.js
--- a/node_modules/express/lib/response.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/express/lib/response.js	(date 1753913035734)
@@ -55,7 +55,6 @@
  */
 
 var charsetRegExp = /;\s*charset\s*=/;
-var schemaAndHostRegExp = /^(?:[a-zA-Z][a-zA-Z0-9+.-]*:)?\/\/[^\\\/\?]+/;
 
 /**
  * Set status `code`.
@@ -823,6 +822,14 @@
  */
 
 res.clearCookie = function clearCookie(name, options) {
+  if (options) {
+    if (options.maxAge) {
+      deprecate('res.clearCookie: Passing "options.maxAge" is deprecated. In v5.0.0 of Express, this option will be ignored, as res.clearCookie will automatically set cookies to expire immediately. Please update your code to omit this option.');
+    }
+    if (options.expires) {
+      deprecate('res.clearCookie: Passing "options.expires" is deprecated. In v5.0.0 of Express, this option will be ignored, as res.clearCookie will automatically set cookies to expire immediately. Please update your code to omit this option.');
+    }
+  }
   var opts = merge({ expires: new Date(1), path: '/' }, options);
 
   return this.cookie(name, '', opts);
@@ -909,19 +916,13 @@
 
   // "back" is an alias for the referrer
   if (url === 'back') {
+    deprecate('res.location("back"): use res.location(req.get("Referrer") || "/") and refer to https://dub.sh/security-redirect for best practices');
     loc = this.req.get('Referrer') || '/';
   } else {
     loc = String(url);
   }
 
-  var m = schemaAndHostRegExp.exec(loc);
-  var pos = m ? m[0].length + 1 : 0;
-
-  // Only encode after host to avoid invalid encoding which can introduce
-  // vulnerabilities (e.g. `\\` to `%5C`).
-  loc = loc.slice(0, pos) + encodeUrl(loc.slice(pos));
-
-  return this.set('Location', loc);
+  return this.set('Location', encodeUrl(loc));
 };
 
 /**
@@ -969,7 +970,7 @@
 
     html: function(){
       var u = escapeHtml(address);
-      body = '<p>' + statuses.message[status] + '. Redirecting to <a href="' + u + '">' + u + '</a></p>'
+      body = '<p>' + statuses.message[status] + '. Redirecting to ' + u + '</p>'
     },
 
     default: function(){
Index: node_modules/pg-cloudflare/src/index.ts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { SocketOptions, Socket, TlsOptions } from 'cloudflare:sockets'\r\nimport { EventEmitter } from 'events'\r\n\r\n/**\r\n * Wrapper around the Cloudflare built-in socket that can be used by the `Connection`.\r\n */\r\nexport class CloudflareSocket extends EventEmitter {\r\n  writable = false\r\n  destroyed = false\r\n\r\n  private _upgrading = false\r\n  private _upgraded = false\r\n  private _cfSocket: Socket | null = null\r\n  private _cfWriter: WritableStreamDefaultWriter | null = null\r\n  private _cfReader: ReadableStreamDefaultReader | null = null\r\n\r\n  constructor(readonly ssl: boolean) {\r\n    super()\r\n  }\r\n\r\n  setNoDelay() {\r\n    return this\r\n  }\r\n  setKeepAlive() {\r\n    return this\r\n  }\r\n  ref() {\r\n    return this\r\n  }\r\n  unref() {\r\n    return this\r\n  }\r\n\r\n  async connect(port: number, host: string, connectListener?: (...args: unknown[]) => void) {\r\n    try {\r\n      log('connecting')\r\n      if (connectListener) this.once('connect', connectListener)\r\n\r\n      const options: SocketOptions = this.ssl ? { secureTransport: 'starttls' } : {}\r\n      const { connect } = await import('cloudflare:sockets')\r\n      this._cfSocket = connect(`${host}:${port}`, options)\r\n      this._cfWriter = this._cfSocket.writable.getWriter()\r\n      this._addClosedHandler()\r\n\r\n      this._cfReader = this._cfSocket.readable.getReader()\r\n      if (this.ssl) {\r\n        this._listenOnce().catch((e) => this.emit('error', e))\r\n      } else {\r\n        this._listen().catch((e) => this.emit('error', e))\r\n      }\r\n\r\n      await this._cfWriter!.ready\r\n      log('socket ready')\r\n      this.writable = true\r\n      this.emit('connect')\r\n\r\n      return this\r\n    } catch (e) {\r\n      this.emit('error', e)\r\n    }\r\n  }\r\n\r\n  async _listen() {\r\n    while (true) {\r\n      log('awaiting receive from CF socket')\r\n      const { done, value } = await this._cfReader!.read()\r\n      log('CF socket received:', done, value)\r\n      if (done) {\r\n        log('done')\r\n        break\r\n      }\r\n      this.emit('data', Buffer.from(value))\r\n    }\r\n  }\r\n\r\n  async _listenOnce() {\r\n    log('awaiting first receive from CF socket')\r\n    const { done, value } = await this._cfReader!.read()\r\n    log('First CF socket received:', done, value)\r\n    this.emit('data', Buffer.from(value))\r\n  }\r\n\r\n  write(\r\n    data: Uint8Array | string,\r\n    encoding: BufferEncoding = 'utf8',\r\n    callback: (...args: unknown[]) => void = () => {}\r\n  ) {\r\n    if (data.length === 0) return callback()\r\n    if (typeof data === 'string') data = Buffer.from(data, encoding)\r\n\r\n    log('sending data direct:', data)\r\n    this._cfWriter!.write(data).then(\r\n      () => {\r\n        log('data sent')\r\n        callback()\r\n      },\r\n      (err) => {\r\n        log('send error', err)\r\n        callback(err)\r\n      }\r\n    )\r\n    return true\r\n  }\r\n\r\n  end(data = Buffer.alloc(0), encoding: BufferEncoding = 'utf8', callback: (...args: unknown[]) => void = () => {}) {\r\n    log('ending CF socket')\r\n    this.write(data, encoding, (err) => {\r\n      this._cfSocket!.close()\r\n      if (callback) callback(err)\r\n    })\r\n    return this\r\n  }\r\n\r\n  destroy(reason: string) {\r\n    log('destroying CF socket', reason)\r\n    this.destroyed = true\r\n    return this.end()\r\n  }\r\n\r\n  startTls(options: TlsOptions) {\r\n    if (this._upgraded) {\r\n      // Don't try to upgrade again.\r\n      this.emit('error', 'Cannot call `startTls()` more than once on a socket')\r\n      return\r\n    }\r\n    this._cfWriter!.releaseLock()\r\n    this._cfReader!.releaseLock()\r\n    this._upgrading = true\r\n    this._cfSocket = this._cfSocket!.startTls(options)\r\n    this._cfWriter = this._cfSocket.writable.getWriter()\r\n    this._cfReader = this._cfSocket.readable.getReader()\r\n    this._addClosedHandler()\r\n    this._listen().catch((e) => this.emit('error', e))\r\n  }\r\n\r\n  _addClosedHandler() {\r\n    this._cfSocket!.closed.then(() => {\r\n      if (!this._upgrading) {\r\n        log('CF socket closed')\r\n        this._cfSocket = null\r\n        this.emit('close')\r\n      } else {\r\n        this._upgrading = false\r\n        this._upgraded = true\r\n      }\r\n    }).catch((e) => this.emit('error', e))\r\n  }\r\n}\r\n\r\nconst debug = false\r\n\r\nfunction dump(data: unknown) {\r\n  if (data instanceof Uint8Array || data instanceof ArrayBuffer) {\r\n    const hex = Buffer.from(data).toString('hex')\r\n    const str = new TextDecoder().decode(data)\r\n    return `\\n>>> STR: \"${str.replace(/\\n/g, '\\\\n')}\"\\n>>> HEX: ${hex}\\n`\r\n  } else {\r\n    return data\r\n  }\r\n}\r\n\r\nfunction log(...args: unknown[]) {\r\n  debug && console.log(...args.map(dump))\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-cloudflare/src/index.ts b/node_modules/pg-cloudflare/src/index.ts
--- a/node_modules/pg-cloudflare/src/index.ts	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-cloudflare/src/index.ts	(date 1753913035362)
@@ -37,7 +37,8 @@
       if (connectListener) this.once('connect', connectListener)
 
       const options: SocketOptions = this.ssl ? { secureTransport: 'starttls' } : {}
-      const { connect } = await import('cloudflare:sockets')
+      const mod = await import('cloudflare:sockets')
+      const connect = mod.connect
       this._cfSocket = connect(`${host}:${port}`, options)
       this._cfWriter = this._cfSocket.writable.getWriter()
       this._addClosedHandler()
@@ -61,6 +62,7 @@
   }
 
   async _listen() {
+    // eslint-disable-next-line no-constant-condition
     while (true) {
       log('awaiting receive from CF socket')
       const { done, value } = await this._cfReader!.read()
Index: node_modules/pg-cloudflare/dist/empty.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"version\":3,\"file\":\"empty.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/empty.ts\"],\"names\":[],\"mappings\":\"AAAA,kFAAkF;AAClF,0CAA0C;AAC1C,eAAe,EAAE,CAAA\"}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-cloudflare/dist/empty.js.map b/node_modules/pg-cloudflare/dist/empty.js.map
--- a/node_modules/pg-cloudflare/dist/empty.js.map	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-cloudflare/dist/empty.js.map	(date 1753913035354)
@@ -1,1 +1,1 @@
-{"version":3,"file":"empty.js","sourceRoot":"","sources":["../src/empty.ts"],"names":[],"mappings":"AAAA,kFAAkF;AAClF,0CAA0C;AAC1C,eAAe,EAAE,CAAA"}
\ No newline at end of file
+{"version":3,"file":"empty.js","sourceRoot":"","sources":["../src/empty.ts"],"names":[],"mappings":";;AAAA,kFAAkF;AAClF,0CAA0C;AAC1C,kBAAe,EAAE,CAAA"}
\ No newline at end of file
Index: node_modules/pg-cloudflare/dist/index.js.map
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\"version\":3,\"file\":\"index.js\",\"sourceRoot\":\"\",\"sources\":[\"../src/index.ts\"],\"names\":[],\"mappings\":\"AACA,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAA;AAErC;;GAEG;AACH,MAAM,OAAO,gBAAiB,SAAQ,YAAY;IAUhD,YAAqB,GAAY;QAC/B,KAAK,EAAE,CAAA;QADY,QAAG,GAAH,GAAG,CAAS;QATjC,aAAQ,GAAG,KAAK,CAAA;QAChB,cAAS,GAAG,KAAK,CAAA;QAET,eAAU,GAAG,KAAK,CAAA;QAClB,cAAS,GAAG,KAAK,CAAA;QACjB,cAAS,GAAkB,IAAI,CAAA;QAC/B,cAAS,GAAuC,IAAI,CAAA;QACpD,cAAS,GAAuC,IAAI,CAAA;IAI5D,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAA;IACb,CAAC;IACD,YAAY;QACV,OAAO,IAAI,CAAA;IACb,CAAC;IACD,GAAG;QACD,OAAO,IAAI,CAAA;IACb,CAAC;IACD,KAAK;QACH,OAAO,IAAI,CAAA;IACb,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,IAAY,EAAE,IAAY,EAAE,eAA8C;QACtF,IAAI;YACF,GAAG,CAAC,YAAY,CAAC,CAAA;YACjB,IAAI,eAAe;gBAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,CAAC,CAAA;YAE1D,MAAM,OAAO,GAAkB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,eAAe,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA;YAC9E,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,MAAM,CAAC,oBAAoB,CAAC,CAAA;YACtD,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,GAAG,IAAI,IAAI,IAAI,EAAE,EAAE,OAAO,CAAC,CAAA;YACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAA;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAA;YAExB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAA;YACpD,IAAI,IAAI,CAAC,GAAG,EAAE;gBACZ,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;aACvD;iBAAM;gBACL,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;aACnD;YAED,MAAM,IAAI,CAAC,SAAU,CAAC,KAAK,CAAA;YAC3B,GAAG,CAAC,cAAc,CAAC,CAAA;YACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;YACpB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;YAEpB,OAAO,IAAI,CAAA;SACZ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAA;SACtB;IACH,CAAC;IAED,KAAK,CAAC,OAAO;QACX,OAAO,IAAI,EAAE;YACX,GAAG,CAAC,iCAAiC,CAAC,CAAA;YACtC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,SAAU,CAAC,IAAI,EAAE,CAAA;YACpD,GAAG,CAAC,qBAAqB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;YACvC,IAAI,IAAI,EAAE;gBACR,GAAG,CAAC,MAAM,CAAC,CAAA;gBACX,MAAK;aACN;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;SACtC;IACH,CAAC;IAED,KAAK,CAAC,WAAW;QACf,GAAG,CAAC,uCAAuC,CAAC,CAAA;QAC5C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,SAAU,CAAC,IAAI,EAAE,CAAA;QACpD,GAAG,CAAC,2BAA2B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;QAC7C,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;IACvC,CAAC;IAED,KAAK,CACH,IAAyB,EACzB,WAA2B,MAAM,EACjC,WAAyC,GAAG,EAAE,GAAE,CAAC;QAEjD,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,QAAQ,EAAE,CAAA;QACxC,IAAI,OAAO,IAAI,KAAK,QAAQ;YAAE,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;QAEhE,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAA;QACjC,IAAI,CAAC,SAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAC9B,GAAG,EAAE;YACH,GAAG,CAAC,WAAW,CAAC,CAAA;YAChB,QAAQ,EAAE,CAAA;QACZ,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,CAAA;YACtB,QAAQ,CAAC,GAAG,CAAC,CAAA;QACf,CAAC,CACF,CAAA;QACD,OAAO,IAAI,CAAA;IACb,CAAC;IAED,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,WAA2B,MAAM,EAAE,WAAyC,GAAG,EAAE,GAAE,CAAC;QAC9G,GAAG,CAAC,kBAAkB,CAAC,CAAA;QACvB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,GAAG,EAAE,EAAE;YACjC,IAAI,CAAC,SAAU,CAAC,KAAK,EAAE,CAAA;YACvB,IAAI,QAAQ;gBAAE,QAAQ,CAAC,GAAG,CAAC,CAAA;QAC7B,CAAC,CAAC,CAAA;QACF,OAAO,IAAI,CAAA;IACb,CAAC;IAED,OAAO,CAAC,MAAc;QACpB,GAAG,CAAC,sBAAsB,EAAE,MAAM,CAAC,CAAA;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;QACrB,OAAO,IAAI,CAAC,GAAG,EAAE,CAAA;IACnB,CAAC;IAED,QAAQ,CAAC,OAAmB;QAC1B,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,8BAA8B;YAC9B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,qDAAqD,CAAC,CAAA;YACzE,OAAM;SACP;QACD,IAAI,CAAC,SAAU,CAAC,WAAW,EAAE,CAAA;QAC7B,IAAI,CAAC,SAAU,CAAC,WAAW,EAAE,CAAA;QAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAA;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA;QAClD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAA;QACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAA;QACpD,IAAI,CAAC,iBAAiB,EAAE,CAAA;QACxB,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;IACpD,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,SAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE;YAC/B,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,GAAG,CAAC,kBAAkB,CAAC,CAAA;gBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;gBACrB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;aACnB;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,KAAK,CAAA;gBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;aACtB;QACH,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;IACxC,CAAC;CACF;AAED,MAAM,KAAK,GAAG,KAAK,CAAA;AAEnB,SAAS,IAAI,CAAC,IAAa;IACzB,IAAI,IAAI,YAAY,UAAU,IAAI,IAAI,YAAY,WAAW,EAAE;QAC7D,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;QAC7C,MAAM,GAAG,GAAG,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;QAC1C,OAAO,eAAe,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,eAAe,GAAG,IAAI,CAAA;KACtE;SAAM;QACL,OAAO,IAAI,CAAA;KACZ;AACH,CAAC;AAED,SAAS,GAAG,CAAC,GAAG,IAAe;IAC7B,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAA;AACzC,CAAC\"}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-cloudflare/dist/index.js.map b/node_modules/pg-cloudflare/dist/index.js.map
--- a/node_modules/pg-cloudflare/dist/index.js.map	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-cloudflare/dist/index.js.map	(date 1753913035355)
@@ -1,1 +1,1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAA;AAErC;;GAEG;AACH,MAAM,OAAO,gBAAiB,SAAQ,YAAY;IAUhD,YAAqB,GAAY;QAC/B,KAAK,EAAE,CAAA;QADY,QAAG,GAAH,GAAG,CAAS;QATjC,aAAQ,GAAG,KAAK,CAAA;QAChB,cAAS,GAAG,KAAK,CAAA;QAET,eAAU,GAAG,KAAK,CAAA;QAClB,cAAS,GAAG,KAAK,CAAA;QACjB,cAAS,GAAkB,IAAI,CAAA;QAC/B,cAAS,GAAuC,IAAI,CAAA;QACpD,cAAS,GAAuC,IAAI,CAAA;IAI5D,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAA;IACb,CAAC;IACD,YAAY;QACV,OAAO,IAAI,CAAA;IACb,CAAC;IACD,GAAG;QACD,OAAO,IAAI,CAAA;IACb,CAAC;IACD,KAAK;QACH,OAAO,IAAI,CAAA;IACb,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,IAAY,EAAE,IAAY,EAAE,eAA8C;QACtF,IAAI;YACF,GAAG,CAAC,YAAY,CAAC,CAAA;YACjB,IAAI,eAAe;gBAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,CAAC,CAAA;YAE1D,MAAM,OAAO,GAAkB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,eAAe,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA;YAC9E,MAAM,EAAE,OAAO,EAAE,GAAG,MAAM,MAAM,CAAC,oBAAoB,CAAC,CAAA;YACtD,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,GAAG,IAAI,IAAI,IAAI,EAAE,EAAE,OAAO,CAAC,CAAA;YACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAA;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAA;YAExB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAA;YACpD,IAAI,IAAI,CAAC,GAAG,EAAE;gBACZ,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;aACvD;iBAAM;gBACL,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;aACnD;YAED,MAAM,IAAI,CAAC,SAAU,CAAC,KAAK,CAAA;YAC3B,GAAG,CAAC,cAAc,CAAC,CAAA;YACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;YACpB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;YAEpB,OAAO,IAAI,CAAA;SACZ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAA;SACtB;IACH,CAAC;IAED,KAAK,CAAC,OAAO;QACX,OAAO,IAAI,EAAE;YACX,GAAG,CAAC,iCAAiC,CAAC,CAAA;YACtC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,SAAU,CAAC,IAAI,EAAE,CAAA;YACpD,GAAG,CAAC,qBAAqB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;YACvC,IAAI,IAAI,EAAE;gBACR,GAAG,CAAC,MAAM,CAAC,CAAA;gBACX,MAAK;aACN;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;SACtC;IACH,CAAC;IAED,KAAK,CAAC,WAAW;QACf,GAAG,CAAC,uCAAuC,CAAC,CAAA;QAC5C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,SAAU,CAAC,IAAI,EAAE,CAAA;QACpD,GAAG,CAAC,2BAA2B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;QAC7C,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;IACvC,CAAC;IAED,KAAK,CACH,IAAyB,EACzB,WAA2B,MAAM,EACjC,WAAyC,GAAG,EAAE,GAAE,CAAC;QAEjD,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,QAAQ,EAAE,CAAA;QACxC,IAAI,OAAO,IAAI,KAAK,QAAQ;YAAE,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;QAEhE,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAA;QACjC,IAAI,CAAC,SAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAC9B,GAAG,EAAE;YACH,GAAG,CAAC,WAAW,CAAC,CAAA;YAChB,QAAQ,EAAE,CAAA;QACZ,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,CAAA;YACtB,QAAQ,CAAC,GAAG,CAAC,CAAA;QACf,CAAC,CACF,CAAA;QACD,OAAO,IAAI,CAAA;IACb,CAAC;IAED,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,WAA2B,MAAM,EAAE,WAAyC,GAAG,EAAE,GAAE,CAAC;QAC9G,GAAG,CAAC,kBAAkB,CAAC,CAAA;QACvB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,GAAG,EAAE,EAAE;YACjC,IAAI,CAAC,SAAU,CAAC,KAAK,EAAE,CAAA;YACvB,IAAI,QAAQ;gBAAE,QAAQ,CAAC,GAAG,CAAC,CAAA;QAC7B,CAAC,CAAC,CAAA;QACF,OAAO,IAAI,CAAA;IACb,CAAC;IAED,OAAO,CAAC,MAAc;QACpB,GAAG,CAAC,sBAAsB,EAAE,MAAM,CAAC,CAAA;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;QACrB,OAAO,IAAI,CAAC,GAAG,EAAE,CAAA;IACnB,CAAC;IAED,QAAQ,CAAC,OAAmB;QAC1B,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,8BAA8B;YAC9B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,qDAAqD,CAAC,CAAA;YACzE,OAAM;SACP;QACD,IAAI,CAAC,SAAU,CAAC,WAAW,EAAE,CAAA;QAC7B,IAAI,CAAC,SAAU,CAAC,WAAW,EAAE,CAAA;QAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAA;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA;QAClD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAA;QACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAA;QACpD,IAAI,CAAC,iBAAiB,EAAE,CAAA;QACxB,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;IACpD,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,SAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE;YAC/B,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,GAAG,CAAC,kBAAkB,CAAC,CAAA;gBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;gBACrB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;aACnB;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,KAAK,CAAA;gBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;aACtB;QACH,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;IACxC,CAAC;CACF;AAED,MAAM,KAAK,GAAG,KAAK,CAAA;AAEnB,SAAS,IAAI,CAAC,IAAa;IACzB,IAAI,IAAI,YAAY,UAAU,IAAI,IAAI,YAAY,WAAW,EAAE;QAC7D,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;QAC7C,MAAM,GAAG,GAAG,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;QAC1C,OAAO,eAAe,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,eAAe,GAAG,IAAI,CAAA;KACtE;SAAM;QACL,OAAO,IAAI,CAAA;KACZ;AACH,CAAC;AAED,SAAS,GAAG,CAAC,GAAG,IAAe;IAC7B,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAA;AACzC,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":";;;AACA,mCAAqC;AAErC;;GAEG;AACH,MAAa,gBAAiB,SAAQ,qBAAY;IAUhD,YAAqB,GAAY;QAC/B,KAAK,EAAE,CAAA;QADY,QAAG,GAAH,GAAG,CAAS;QATjC,aAAQ,GAAG,KAAK,CAAA;QAChB,cAAS,GAAG,KAAK,CAAA;QAET,eAAU,GAAG,KAAK,CAAA;QAClB,cAAS,GAAG,KAAK,CAAA;QACjB,cAAS,GAAkB,IAAI,CAAA;QAC/B,cAAS,GAAuC,IAAI,CAAA;QACpD,cAAS,GAAuC,IAAI,CAAA;IAI5D,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAA;IACb,CAAC;IACD,YAAY;QACV,OAAO,IAAI,CAAA;IACb,CAAC;IACD,GAAG;QACD,OAAO,IAAI,CAAA;IACb,CAAC;IACD,KAAK;QACH,OAAO,IAAI,CAAA;IACb,CAAC;IAED,KAAK,CAAC,OAAO,CAAC,IAAY,EAAE,IAAY,EAAE,eAA8C;QACtF,IAAI;YACF,GAAG,CAAC,YAAY,CAAC,CAAA;YACjB,IAAI,eAAe;gBAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,eAAe,CAAC,CAAA;YAE1D,MAAM,OAAO,GAAkB,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,eAAe,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA;YAC9E,MAAM,GAAG,GAAG,MAAM,MAAM,CAAC,oBAAoB,CAAC,CAAA;YAC9C,MAAM,OAAO,GAAG,GAAG,CAAC,OAAO,CAAA;YAC3B,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,GAAG,IAAI,IAAI,IAAI,EAAE,EAAE,OAAO,CAAC,CAAA;YACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAA;YACpD,IAAI,CAAC,iBAAiB,EAAE,CAAA;YAExB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAA;YACpD,IAAI,IAAI,CAAC,GAAG,EAAE;gBACZ,IAAI,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;aACvD;iBAAM;gBACL,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;aACnD;YAED,MAAM,IAAI,CAAC,SAAU,CAAC,KAAK,CAAA;YAC3B,GAAG,CAAC,cAAc,CAAC,CAAA;YACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA;YACpB,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,CAAA;YAEpB,OAAO,IAAI,CAAA;SACZ;QAAC,OAAO,CAAC,EAAE;YACV,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAA;SACtB;IACH,CAAC;IAED,KAAK,CAAC,OAAO;QACX,iDAAiD;QACjD,OAAO,IAAI,EAAE;YACX,GAAG,CAAC,iCAAiC,CAAC,CAAA;YACtC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,SAAU,CAAC,IAAI,EAAE,CAAA;YACpD,GAAG,CAAC,qBAAqB,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;YACvC,IAAI,IAAI,EAAE;gBACR,GAAG,CAAC,MAAM,CAAC,CAAA;gBACX,MAAK;aACN;YACD,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;SACtC;IACH,CAAC;IAED,KAAK,CAAC,WAAW;QACf,GAAG,CAAC,uCAAuC,CAAC,CAAA;QAC5C,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,CAAC,SAAU,CAAC,IAAI,EAAE,CAAA;QACpD,GAAG,CAAC,2BAA2B,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;QAC7C,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAA;IACvC,CAAC;IAED,KAAK,CACH,IAAyB,EACzB,WAA2B,MAAM,EACjC,WAAyC,GAAG,EAAE,GAAE,CAAC;QAEjD,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC;YAAE,OAAO,QAAQ,EAAE,CAAA;QACxC,IAAI,OAAO,IAAI,KAAK,QAAQ;YAAE,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;QAEhE,GAAG,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAA;QACjC,IAAI,CAAC,SAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAC9B,GAAG,EAAE;YACH,GAAG,CAAC,WAAW,CAAC,CAAA;YAChB,QAAQ,EAAE,CAAA;QACZ,CAAC,EACD,CAAC,GAAG,EAAE,EAAE;YACN,GAAG,CAAC,YAAY,EAAE,GAAG,CAAC,CAAA;YACtB,QAAQ,CAAC,GAAG,CAAC,CAAA;QACf,CAAC,CACF,CAAA;QACD,OAAO,IAAI,CAAA;IACb,CAAC;IAED,GAAG,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,WAA2B,MAAM,EAAE,WAAyC,GAAG,EAAE,GAAE,CAAC;QAC9G,GAAG,CAAC,kBAAkB,CAAC,CAAA;QACvB,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC,GAAG,EAAE,EAAE;YACjC,IAAI,CAAC,SAAU,CAAC,KAAK,EAAE,CAAA;YACvB,IAAI,QAAQ;gBAAE,QAAQ,CAAC,GAAG,CAAC,CAAA;QAC7B,CAAC,CAAC,CAAA;QACF,OAAO,IAAI,CAAA;IACb,CAAC;IAED,OAAO,CAAC,MAAc;QACpB,GAAG,CAAC,sBAAsB,EAAE,MAAM,CAAC,CAAA;QACnC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;QACrB,OAAO,IAAI,CAAC,GAAG,EAAE,CAAA;IACnB,CAAC;IAED,QAAQ,CAAC,OAAmB;QAC1B,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,8BAA8B;YAC9B,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,qDAAqD,CAAC,CAAA;YACzE,OAAM;SACP;QACD,IAAI,CAAC,SAAU,CAAC,WAAW,EAAE,CAAA;QAC7B,IAAI,CAAC,SAAU,CAAC,WAAW,EAAE,CAAA;QAC7B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAA;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAA;QAClD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAA;QACpD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAA;QACpD,IAAI,CAAC,iBAAiB,EAAE,CAAA;QACxB,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;IACpD,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,SAAU,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE;YAC/B,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE;gBACpB,GAAG,CAAC,kBAAkB,CAAC,CAAA;gBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;gBACrB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;aACnB;iBAAM;gBACL,IAAI,CAAC,UAAU,GAAG,KAAK,CAAA;gBACvB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA;aACtB;QACH,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;IACxC,CAAC;CACF;AA/ID,4CA+IC;AAED,MAAM,KAAK,GAAG,KAAK,CAAA;AAEnB,SAAS,IAAI,CAAC,IAAa;IACzB,IAAI,IAAI,YAAY,UAAU,IAAI,IAAI,YAAY,WAAW,EAAE;QAC7D,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA;QAC7C,MAAM,GAAG,GAAG,IAAI,WAAW,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA;QAC1C,OAAO,eAAe,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,KAAK,CAAC,eAAe,GAAG,IAAI,CAAA;KACtE;SAAM;QACL,OAAO,IAAI,CAAA;KACZ;AACH,CAAC;AAED,SAAS,GAAG,CAAC,GAAG,IAAe;IAC7B,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAA;AACzC,CAAC"}
\ No newline at end of file
Index: node_modules/pg-cloudflare/dist/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { EventEmitter } from 'events';\r\n/**\r\n * Wrapper around the Cloudflare built-in socket that can be used by the `Connection`.\r\n */\r\nexport class CloudflareSocket extends EventEmitter {\r\n    constructor(ssl) {\r\n        super();\r\n        this.ssl = ssl;\r\n        this.writable = false;\r\n        this.destroyed = false;\r\n        this._upgrading = false;\r\n        this._upgraded = false;\r\n        this._cfSocket = null;\r\n        this._cfWriter = null;\r\n        this._cfReader = null;\r\n    }\r\n    setNoDelay() {\r\n        return this;\r\n    }\r\n    setKeepAlive() {\r\n        return this;\r\n    }\r\n    ref() {\r\n        return this;\r\n    }\r\n    unref() {\r\n        return this;\r\n    }\r\n    async connect(port, host, connectListener) {\r\n        try {\r\n            log('connecting');\r\n            if (connectListener)\r\n                this.once('connect', connectListener);\r\n            const options = this.ssl ? { secureTransport: 'starttls' } : {};\r\n            const { connect } = await import('cloudflare:sockets');\r\n            this._cfSocket = connect(`${host}:${port}`, options);\r\n            this._cfWriter = this._cfSocket.writable.getWriter();\r\n            this._addClosedHandler();\r\n            this._cfReader = this._cfSocket.readable.getReader();\r\n            if (this.ssl) {\r\n                this._listenOnce().catch((e) => this.emit('error', e));\r\n            }\r\n            else {\r\n                this._listen().catch((e) => this.emit('error', e));\r\n            }\r\n            await this._cfWriter.ready;\r\n            log('socket ready');\r\n            this.writable = true;\r\n            this.emit('connect');\r\n            return this;\r\n        }\r\n        catch (e) {\r\n            this.emit('error', e);\r\n        }\r\n    }\r\n    async _listen() {\r\n        while (true) {\r\n            log('awaiting receive from CF socket');\r\n            const { done, value } = await this._cfReader.read();\r\n            log('CF socket received:', done, value);\r\n            if (done) {\r\n                log('done');\r\n                break;\r\n            }\r\n            this.emit('data', Buffer.from(value));\r\n        }\r\n    }\r\n    async _listenOnce() {\r\n        log('awaiting first receive from CF socket');\r\n        const { done, value } = await this._cfReader.read();\r\n        log('First CF socket received:', done, value);\r\n        this.emit('data', Buffer.from(value));\r\n    }\r\n    write(data, encoding = 'utf8', callback = () => { }) {\r\n        if (data.length === 0)\r\n            return callback();\r\n        if (typeof data === 'string')\r\n            data = Buffer.from(data, encoding);\r\n        log('sending data direct:', data);\r\n        this._cfWriter.write(data).then(() => {\r\n            log('data sent');\r\n            callback();\r\n        }, (err) => {\r\n            log('send error', err);\r\n            callback(err);\r\n        });\r\n        return true;\r\n    }\r\n    end(data = Buffer.alloc(0), encoding = 'utf8', callback = () => { }) {\r\n        log('ending CF socket');\r\n        this.write(data, encoding, (err) => {\r\n            this._cfSocket.close();\r\n            if (callback)\r\n                callback(err);\r\n        });\r\n        return this;\r\n    }\r\n    destroy(reason) {\r\n        log('destroying CF socket', reason);\r\n        this.destroyed = true;\r\n        return this.end();\r\n    }\r\n    startTls(options) {\r\n        if (this._upgraded) {\r\n            // Don't try to upgrade again.\r\n            this.emit('error', 'Cannot call `startTls()` more than once on a socket');\r\n            return;\r\n        }\r\n        this._cfWriter.releaseLock();\r\n        this._cfReader.releaseLock();\r\n        this._upgrading = true;\r\n        this._cfSocket = this._cfSocket.startTls(options);\r\n        this._cfWriter = this._cfSocket.writable.getWriter();\r\n        this._cfReader = this._cfSocket.readable.getReader();\r\n        this._addClosedHandler();\r\n        this._listen().catch((e) => this.emit('error', e));\r\n    }\r\n    _addClosedHandler() {\r\n        this._cfSocket.closed.then(() => {\r\n            if (!this._upgrading) {\r\n                log('CF socket closed');\r\n                this._cfSocket = null;\r\n                this.emit('close');\r\n            }\r\n            else {\r\n                this._upgrading = false;\r\n                this._upgraded = true;\r\n            }\r\n        }).catch((e) => this.emit('error', e));\r\n    }\r\n}\r\nconst debug = false;\r\nfunction dump(data) {\r\n    if (data instanceof Uint8Array || data instanceof ArrayBuffer) {\r\n        const hex = Buffer.from(data).toString('hex');\r\n        const str = new TextDecoder().decode(data);\r\n        return `\\n>>> STR: \"${str.replace(/\\n/g, '\\\\n')}\"\\n>>> HEX: ${hex}\\n`;\r\n    }\r\n    else {\r\n        return data;\r\n    }\r\n}\r\nfunction log(...args) {\r\n    debug && console.log(...args.map(dump));\r\n}\r\n//# sourceMappingURL=index.js.map
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-cloudflare/dist/index.js b/node_modules/pg-cloudflare/dist/index.js
--- a/node_modules/pg-cloudflare/dist/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-cloudflare/dist/index.js	(date 1753913035351)
@@ -1,8 +1,11 @@
-import { EventEmitter } from 'events';
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
+exports.CloudflareSocket = void 0;
+const events_1 = require("events");
 /**
  * Wrapper around the Cloudflare built-in socket that can be used by the `Connection`.
  */
-export class CloudflareSocket extends EventEmitter {
+class CloudflareSocket extends events_1.EventEmitter {
     constructor(ssl) {
         super();
         this.ssl = ssl;
@@ -32,7 +35,8 @@
             if (connectListener)
                 this.once('connect', connectListener);
             const options = this.ssl ? { secureTransport: 'starttls' } : {};
-            const { connect } = await import('cloudflare:sockets');
+            const mod = await import('cloudflare:sockets');
+            const connect = mod.connect;
             this._cfSocket = connect(`${host}:${port}`, options);
             this._cfWriter = this._cfSocket.writable.getWriter();
             this._addClosedHandler();
@@ -54,6 +58,7 @@
         }
     }
     async _listen() {
+        // eslint-disable-next-line no-constant-condition
         while (true) {
             log('awaiting receive from CF socket');
             const { done, value } = await this._cfReader.read();
@@ -129,6 +134,7 @@
         }).catch((e) => this.emit('error', e));
     }
 }
+exports.CloudflareSocket = CloudflareSocket;
 const debug = false;
 function dump(data) {
     if (data instanceof Uint8Array || data instanceof ArrayBuffer) {
Index: node_modules/express/node_modules/cookie/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"cookie\",\r\n  \"description\": \"HTTP server cookie parsing and serialization\",\r\n  \"version\": \"0.6.0\",\r\n  \"author\": \"Roman Shtylman <shtylman@gmail.com>\",\r\n  \"contributors\": [\r\n    \"Douglas Christopher Wilson <doug@somethingdoug.com>\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"keywords\": [\r\n    \"cookie\",\r\n    \"cookies\"\r\n  ],\r\n  \"repository\": \"jshttp/cookie\",\r\n  \"devDependencies\": {\r\n    \"beautify-benchmark\": \"0.2.4\",\r\n    \"benchmark\": \"2.1.4\",\r\n    \"eslint\": \"8.53.0\",\r\n    \"eslint-plugin-markdown\": \"3.0.1\",\r\n    \"mocha\": \"10.2.0\",\r\n    \"nyc\": \"15.1.0\",\r\n    \"safe-buffer\": \"5.2.1\",\r\n    \"top-sites\": \"1.1.194\"\r\n  },\r\n  \"files\": [\r\n    \"HISTORY.md\",\r\n    \"LICENSE\",\r\n    \"README.md\",\r\n    \"SECURITY.md\",\r\n    \"index.js\"\r\n  ],\r\n  \"engines\": {\r\n    \"node\": \">= 0.6\"\r\n  },\r\n  \"scripts\": {\r\n    \"bench\": \"node benchmark/index.js\",\r\n    \"lint\": \"eslint .\",\r\n    \"test\": \"mocha --reporter spec --bail --check-leaks test/\",\r\n    \"test-ci\": \"nyc --reporter=lcov --reporter=text npm test\",\r\n    \"test-cov\": \"nyc --reporter=html --reporter=text npm test\",\r\n    \"update-bench\": \"node scripts/update-benchmark.js\",\r\n    \"version\": \"node scripts/version-history.js && git add HISTORY.md\"\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/express/node_modules/cookie/package.json b/node_modules/express/node_modules/cookie/package.json
--- a/node_modules/express/node_modules/cookie/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/express/node_modules/cookie/package.json	(date 1753913035871)
@@ -1,7 +1,7 @@
 {
   "name": "cookie",
   "description": "HTTP server cookie parsing and serialization",
-  "version": "0.6.0",
+  "version": "0.7.1",
   "author": "Roman Shtylman <shtylman@gmail.com>",
   "contributors": [
     "Douglas Christopher Wilson <doug@somethingdoug.com>"
@@ -29,6 +29,7 @@
     "SECURITY.md",
     "index.js"
   ],
+  "main": "index.js",
   "engines": {
     "node": ">= 0.6"
   },
@@ -38,7 +39,6 @@
     "test": "mocha --reporter spec --bail --check-leaks test/",
     "test-ci": "nyc --reporter=lcov --reporter=text npm test",
     "test-cov": "nyc --reporter=html --reporter=text npm test",
-    "update-bench": "node scripts/update-benchmark.js",
-    "version": "node scripts/version-history.js && git add HISTORY.md"
+    "update-bench": "node scripts/update-benchmark.js"
   }
 }
Index: node_modules/pg-cloudflare/dist/empty.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// This is an empty module that is served up when outside of a workerd environment\r\n// See the `exports` field in package.json\r\nexport default {};\r\n//# sourceMappingURL=empty.js.map
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg-cloudflare/dist/empty.js b/node_modules/pg-cloudflare/dist/empty.js
--- a/node_modules/pg-cloudflare/dist/empty.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg-cloudflare/dist/empty.js	(date 1753913035350)
@@ -1,4 +1,6 @@
+"use strict";
+Object.defineProperty(exports, "__esModule", { value: true });
 // This is an empty module that is served up when outside of a workerd environment
 // See the `exports` field in package.json
-export default {};
+exports.default = {};
 //# sourceMappingURL=empty.js.map
\ No newline at end of file
Index: node_modules/express/node_modules/cookie/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*!\r\n * cookie\r\n * Copyright(c) 2012-2014 Roman Shtylman\r\n * Copyright(c) 2015 Douglas Christopher Wilson\r\n * MIT Licensed\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Module exports.\r\n * @public\r\n */\r\n\r\nexports.parse = parse;\r\nexports.serialize = serialize;\r\n\r\n/**\r\n * Module variables.\r\n * @private\r\n */\r\n\r\nvar __toString = Object.prototype.toString\r\n\r\n/**\r\n * RegExp to match field-content in RFC 7230 sec 3.2\r\n *\r\n * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]\r\n * field-vchar   = VCHAR / obs-text\r\n * obs-text      = %x80-FF\r\n */\r\n\r\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\r\n\r\n/**\r\n * Parse a cookie header.\r\n *\r\n * Parse the given cookie header string into an object\r\n * The object has the various cookies as keys(names) => values\r\n *\r\n * @param {string} str\r\n * @param {object} [options]\r\n * @return {object}\r\n * @public\r\n */\r\n\r\nfunction parse(str, options) {\r\n  if (typeof str !== 'string') {\r\n    throw new TypeError('argument str must be a string');\r\n  }\r\n\r\n  var obj = {}\r\n  var opt = options || {};\r\n  var dec = opt.decode || decode;\r\n\r\n  var index = 0\r\n  while (index < str.length) {\r\n    var eqIdx = str.indexOf('=', index)\r\n\r\n    // no more cookie pairs\r\n    if (eqIdx === -1) {\r\n      break\r\n    }\r\n\r\n    var endIdx = str.indexOf(';', index)\r\n\r\n    if (endIdx === -1) {\r\n      endIdx = str.length\r\n    } else if (endIdx < eqIdx) {\r\n      // backtrack on prior semicolon\r\n      index = str.lastIndexOf(';', eqIdx - 1) + 1\r\n      continue\r\n    }\r\n\r\n    var key = str.slice(index, eqIdx).trim()\r\n\r\n    // only assign once\r\n    if (undefined === obj[key]) {\r\n      var val = str.slice(eqIdx + 1, endIdx).trim()\r\n\r\n      // quoted values\r\n      if (val.charCodeAt(0) === 0x22) {\r\n        val = val.slice(1, -1)\r\n      }\r\n\r\n      obj[key] = tryDecode(val, dec);\r\n    }\r\n\r\n    index = endIdx + 1\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Serialize data into a cookie header.\r\n *\r\n * Serialize the a name value pair into a cookie string suitable for\r\n * http headers. An optional options object specified cookie parameters.\r\n *\r\n * serialize('foo', 'bar', { httpOnly: true })\r\n *   => \"foo=bar; httpOnly\"\r\n *\r\n * @param {string} name\r\n * @param {string} val\r\n * @param {object} [options]\r\n * @return {string}\r\n * @public\r\n */\r\n\r\nfunction serialize(name, val, options) {\r\n  var opt = options || {};\r\n  var enc = opt.encode || encode;\r\n\r\n  if (typeof enc !== 'function') {\r\n    throw new TypeError('option encode is invalid');\r\n  }\r\n\r\n  if (!fieldContentRegExp.test(name)) {\r\n    throw new TypeError('argument name is invalid');\r\n  }\r\n\r\n  var value = enc(val);\r\n\r\n  if (value && !fieldContentRegExp.test(value)) {\r\n    throw new TypeError('argument val is invalid');\r\n  }\r\n\r\n  var str = name + '=' + value;\r\n\r\n  if (null != opt.maxAge) {\r\n    var maxAge = opt.maxAge - 0;\r\n\r\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\r\n      throw new TypeError('option maxAge is invalid')\r\n    }\r\n\r\n    str += '; Max-Age=' + Math.floor(maxAge);\r\n  }\r\n\r\n  if (opt.domain) {\r\n    if (!fieldContentRegExp.test(opt.domain)) {\r\n      throw new TypeError('option domain is invalid');\r\n    }\r\n\r\n    str += '; Domain=' + opt.domain;\r\n  }\r\n\r\n  if (opt.path) {\r\n    if (!fieldContentRegExp.test(opt.path)) {\r\n      throw new TypeError('option path is invalid');\r\n    }\r\n\r\n    str += '; Path=' + opt.path;\r\n  }\r\n\r\n  if (opt.expires) {\r\n    var expires = opt.expires\r\n\r\n    if (!isDate(expires) || isNaN(expires.valueOf())) {\r\n      throw new TypeError('option expires is invalid');\r\n    }\r\n\r\n    str += '; Expires=' + expires.toUTCString()\r\n  }\r\n\r\n  if (opt.httpOnly) {\r\n    str += '; HttpOnly';\r\n  }\r\n\r\n  if (opt.secure) {\r\n    str += '; Secure';\r\n  }\r\n\r\n  if (opt.partitioned) {\r\n    str += '; Partitioned'\r\n  }\r\n\r\n  if (opt.priority) {\r\n    var priority = typeof opt.priority === 'string'\r\n      ? opt.priority.toLowerCase()\r\n      : opt.priority\r\n\r\n    switch (priority) {\r\n      case 'low':\r\n        str += '; Priority=Low'\r\n        break\r\n      case 'medium':\r\n        str += '; Priority=Medium'\r\n        break\r\n      case 'high':\r\n        str += '; Priority=High'\r\n        break\r\n      default:\r\n        throw new TypeError('option priority is invalid')\r\n    }\r\n  }\r\n\r\n  if (opt.sameSite) {\r\n    var sameSite = typeof opt.sameSite === 'string'\r\n      ? opt.sameSite.toLowerCase() : opt.sameSite;\r\n\r\n    switch (sameSite) {\r\n      case true:\r\n        str += '; SameSite=Strict';\r\n        break;\r\n      case 'lax':\r\n        str += '; SameSite=Lax';\r\n        break;\r\n      case 'strict':\r\n        str += '; SameSite=Strict';\r\n        break;\r\n      case 'none':\r\n        str += '; SameSite=None';\r\n        break;\r\n      default:\r\n        throw new TypeError('option sameSite is invalid');\r\n    }\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n/**\r\n * URL-decode string value. Optimized to skip native call when no %.\r\n *\r\n * @param {string} str\r\n * @returns {string}\r\n */\r\n\r\nfunction decode (str) {\r\n  return str.indexOf('%') !== -1\r\n    ? decodeURIComponent(str)\r\n    : str\r\n}\r\n\r\n/**\r\n * URL-encode value.\r\n *\r\n * @param {string} val\r\n * @returns {string}\r\n */\r\n\r\nfunction encode (val) {\r\n  return encodeURIComponent(val)\r\n}\r\n\r\n/**\r\n * Determine if value is a Date.\r\n *\r\n * @param {*} val\r\n * @private\r\n */\r\n\r\nfunction isDate (val) {\r\n  return __toString.call(val) === '[object Date]' ||\r\n    val instanceof Date\r\n}\r\n\r\n/**\r\n * Try decoding a string using a decoding function.\r\n *\r\n * @param {string} str\r\n * @param {function} decode\r\n * @private\r\n */\r\n\r\nfunction tryDecode(str, decode) {\r\n  try {\r\n    return decode(str);\r\n  } catch (e) {\r\n    return str;\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/express/node_modules/cookie/index.js b/node_modules/express/node_modules/cookie/index.js
--- a/node_modules/express/node_modules/cookie/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/express/node_modules/cookie/index.js	(date 1753913035870)
@@ -23,14 +23,66 @@
 var __toString = Object.prototype.toString
 
 /**
- * RegExp to match field-content in RFC 7230 sec 3.2
+ * RegExp to match cookie-name in RFC 6265 sec 4.1.1
+ * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2
+ * which has been replaced by the token definition in RFC 7230 appendix B.
+ *
+ * cookie-name       = token
+ * token             = 1*tchar
+ * tchar             = "!" / "#" / "$" / "%" / "&" / "'" /
+ *                     "*" / "+" / "-" / "." / "^" / "_" /
+ *                     "`" / "|" / "~" / DIGIT / ALPHA
+ */
+
+var cookieNameRegExp = /^[!#$%&'*+\-.^_`|~0-9A-Za-z]+$/;
+
+/**
+ * RegExp to match cookie-value in RFC 6265 sec 4.1.1
+ *
+ * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )
+ * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E
+ *                     ; US-ASCII characters excluding CTLs,
+ *                     ; whitespace DQUOTE, comma, semicolon,
+ *                     ; and backslash
+ */
+
+var cookieValueRegExp = /^("?)[\u0021\u0023-\u002B\u002D-\u003A\u003C-\u005B\u005D-\u007E]*\1$/;
+
+/**
+ * RegExp to match domain-value in RFC 6265 sec 4.1.1
+ *
+ * domain-value      = <subdomain>
+ *                     ; defined in [RFC1034], Section 3.5, as
+ *                     ; enhanced by [RFC1123], Section 2.1
+ * <subdomain>       = <label> | <subdomain> "." <label>
+ * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]
+ *                     Labels must be 63 characters or less.
+ *                     'let-dig' not 'letter' in the first char, per RFC1123
+ * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>
+ * <let-dig-hyp>     = <let-dig> | "-"
+ * <let-dig>         = <letter> | <digit>
+ * <letter>          = any one of the 52 alphabetic characters A through Z in
+ *                     upper case and a through z in lower case
+ * <digit>           = any one of the ten digits 0 through 9
+ *
+ * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173
  *
- * field-content = field-vchar [ 1*( SP / HTAB ) field-vchar ]
- * field-vchar   = VCHAR / obs-text
- * obs-text      = %x80-FF
+ * > (Note that a leading %x2E ("."), if present, is ignored even though that
+ * character is not permitted, but a trailing %x2E ("."), if present, will
+ * cause the user agent to ignore the attribute.)
  */
 
-var fieldContentRegExp = /^[\u0009\u0020-\u007e\u0080-\u00ff]+$/;
+var domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;
+
+/**
+ * RegExp to match path-value in RFC 6265 sec 4.1.1
+ *
+ * path-value        = <any CHAR except CTLs or ";">
+ * CHAR              = %x01-7F
+ *                     ; defined in RFC 5234 appendix B.1
+ */
+
+var pathValueRegExp = /^[\u0020-\u003A\u003D-\u007E]*$/;
 
 /**
  * Parse a cookie header.
@@ -39,107 +91,128 @@
  * The object has the various cookies as keys(names) => values
  *
  * @param {string} str
- * @param {object} [options]
+ * @param {object} [opt]
  * @return {object}
  * @public
  */
 
-function parse(str, options) {
+function parse(str, opt) {
   if (typeof str !== 'string') {
     throw new TypeError('argument str must be a string');
   }
 
-  var obj = {}
-  var opt = options || {};
-  var dec = opt.decode || decode;
+  var obj = {};
+  var len = str.length;
+  // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.
+  if (len < 2) return obj;
 
-  var index = 0
-  while (index < str.length) {
-    var eqIdx = str.indexOf('=', index)
+  var dec = (opt && opt.decode) || decode;
+  var index = 0;
+  var eqIdx = 0;
+  var endIdx = 0;
 
-    // no more cookie pairs
-    if (eqIdx === -1) {
-      break
-    }
+  do {
+    eqIdx = str.indexOf('=', index);
+    if (eqIdx === -1) break; // No more cookie pairs.
 
-    var endIdx = str.indexOf(';', index)
+    endIdx = str.indexOf(';', index);
 
     if (endIdx === -1) {
-      endIdx = str.length
-    } else if (endIdx < eqIdx) {
+      endIdx = len;
+    } else if (eqIdx > endIdx) {
       // backtrack on prior semicolon
-      index = str.lastIndexOf(';', eqIdx - 1) + 1
-      continue
+      index = str.lastIndexOf(';', eqIdx - 1) + 1;
+      continue;
     }
 
-    var key = str.slice(index, eqIdx).trim()
+    var keyStartIdx = startIndex(str, index, eqIdx);
+    var keyEndIdx = endIndex(str, eqIdx, keyStartIdx);
+    var key = str.slice(keyStartIdx, keyEndIdx);
 
     // only assign once
-    if (undefined === obj[key]) {
-      var val = str.slice(eqIdx + 1, endIdx).trim()
+    if (!obj.hasOwnProperty(key)) {
+      var valStartIdx = startIndex(str, eqIdx + 1, endIdx);
+      var valEndIdx = endIndex(str, endIdx, valStartIdx);
 
-      // quoted values
-      if (val.charCodeAt(0) === 0x22) {
-        val = val.slice(1, -1)
+      if (str.charCodeAt(valStartIdx) === 0x22 /* " */ && str.charCodeAt(valEndIdx - 1) === 0x22 /* " */) {
+        valStartIdx++;
+        valEndIdx--;
       }
 
+      var val = str.slice(valStartIdx, valEndIdx);
       obj[key] = tryDecode(val, dec);
     }
 
     index = endIdx + 1
-  }
+  } while (index < len);
 
   return obj;
 }
 
+function startIndex(str, index, max) {
+  do {
+    var code = str.charCodeAt(index);
+    if (code !== 0x20 /*   */ && code !== 0x09 /* \t */) return index;
+  } while (++index < max);
+  return max;
+}
+
+function endIndex(str, index, min) {
+  while (index > min) {
+    var code = str.charCodeAt(--index);
+    if (code !== 0x20 /*   */ && code !== 0x09 /* \t */) return index + 1;
+  }
+  return min;
+}
+
 /**
  * Serialize data into a cookie header.
  *
- * Serialize the a name value pair into a cookie string suitable for
- * http headers. An optional options object specified cookie parameters.
+ * Serialize a name value pair into a cookie string suitable for
+ * http headers. An optional options object specifies cookie parameters.
  *
  * serialize('foo', 'bar', { httpOnly: true })
  *   => "foo=bar; httpOnly"
  *
  * @param {string} name
  * @param {string} val
- * @param {object} [options]
+ * @param {object} [opt]
  * @return {string}
  * @public
  */
 
-function serialize(name, val, options) {
-  var opt = options || {};
-  var enc = opt.encode || encode;
+function serialize(name, val, opt) {
+  var enc = (opt && opt.encode) || encodeURIComponent;
 
   if (typeof enc !== 'function') {
     throw new TypeError('option encode is invalid');
   }
 
-  if (!fieldContentRegExp.test(name)) {
+  if (!cookieNameRegExp.test(name)) {
     throw new TypeError('argument name is invalid');
   }
 
   var value = enc(val);
 
-  if (value && !fieldContentRegExp.test(value)) {
+  if (!cookieValueRegExp.test(value)) {
     throw new TypeError('argument val is invalid');
   }
 
   var str = name + '=' + value;
+  if (!opt) return str;
 
   if (null != opt.maxAge) {
-    var maxAge = opt.maxAge - 0;
+    var maxAge = Math.floor(opt.maxAge);
 
-    if (isNaN(maxAge) || !isFinite(maxAge)) {
+    if (!isFinite(maxAge)) {
       throw new TypeError('option maxAge is invalid')
     }
 
-    str += '; Max-Age=' + Math.floor(maxAge);
+    str += '; Max-Age=' + maxAge;
   }
 
   if (opt.domain) {
-    if (!fieldContentRegExp.test(opt.domain)) {
+    if (!domainValueRegExp.test(opt.domain)) {
       throw new TypeError('option domain is invalid');
     }
 
@@ -147,7 +220,7 @@
   }
 
   if (opt.path) {
-    if (!fieldContentRegExp.test(opt.path)) {
+    if (!pathValueRegExp.test(opt.path)) {
       throw new TypeError('option path is invalid');
     }
 
@@ -178,8 +251,7 @@
 
   if (opt.priority) {
     var priority = typeof opt.priority === 'string'
-      ? opt.priority.toLowerCase()
-      : opt.priority
+      ? opt.priority.toLowerCase() : opt.priority;
 
     switch (priority) {
       case 'low':
@@ -234,17 +306,6 @@
     : str
 }
 
-/**
- * URL-encode value.
- *
- * @param {string} val
- * @returns {string}
- */
-
-function encode (val) {
-  return encodeURIComponent(val)
-}
-
 /**
  * Determine if value is a Date.
  *
@@ -253,8 +314,7 @@
  */
 
 function isDate (val) {
-  return __toString.call(val) === '[object Date]' ||
-    val instanceof Date
+  return __toString.call(val) === '[object Date]';
 }
 
 /**
Index: node_modules/.package-lock.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"hotel-reservation\",\r\n  \"lockfileVersion\": 3,\r\n  \"requires\": true,\r\n  \"packages\": {\r\n    \"node_modules/abbrev\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==\",\r\n      \"dev\": true\r\n    },\r\n    \"node_modules/accepts\": {\r\n      \"version\": \"1.3.8\",\r\n      \"resolved\": \"https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz\",\r\n      \"integrity\": \"sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==\",\r\n      \"dependencies\": {\r\n        \"mime-types\": \"~2.1.34\",\r\n        \"negotiator\": \"0.6.3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/anymatch\": {\r\n      \"version\": \"3.1.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\r\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"normalize-path\": \"^3.0.0\",\r\n        \"picomatch\": \"^2.0.4\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 8\"\r\n      }\r\n    },\r\n    \"node_modules/array-flatten\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==\"\r\n    },\r\n    \"node_modules/balanced-match\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\r\n      \"dev\": true\r\n    },\r\n    \"node_modules/bcryptjs\": {\r\n      \"version\": \"2.4.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/bcryptjs/-/bcryptjs-2.4.3.tgz\",\r\n      \"integrity\": \"sha512-V/Hy/X9Vt7f3BbPJEi8BdVFMByHi+jNXrYkW3huaybV/kQ0KJg0Y6PkEMbn+zeT+i+SiKZ/HMqJGIIt4LZDqNQ==\"\r\n    },\r\n    \"node_modules/binary-extensions\": {\r\n      \"version\": \"2.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz\",\r\n      \"integrity\": \"sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==\",\r\n      \"dev\": true,\r\n      \"engines\": {\r\n        \"node\": \">=8\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\r\n      }\r\n    },\r\n    \"node_modules/body-parser\": {\r\n      \"version\": \"1.20.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/body-parser/-/body-parser-1.20.2.tgz\",\r\n      \"integrity\": \"sha512-ml9pReCu3M61kGlqoTm2umSXTlRTuGTx0bfYj+uIUKKYycG5NtSbeetV3faSU6R7ajOPw0g/J1PvK4qNy7s5bA==\",\r\n      \"dependencies\": {\r\n        \"bytes\": \"3.1.2\",\r\n        \"content-type\": \"~1.0.5\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"2.0.0\",\r\n        \"destroy\": \"1.2.0\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"iconv-lite\": \"0.4.24\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"qs\": \"6.11.0\",\r\n        \"raw-body\": \"2.5.2\",\r\n        \"type-is\": \"~1.6.18\",\r\n        \"unpipe\": \"1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\",\r\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\r\n      }\r\n    },\r\n    \"node_modules/brace-expansion\": {\r\n      \"version\": \"1.1.11\",\r\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz\",\r\n      \"integrity\": \"sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"balanced-match\": \"^1.0.0\",\r\n        \"concat-map\": \"0.0.1\"\r\n      }\r\n    },\r\n    \"node_modules/braces\": {\r\n      \"version\": \"3.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.2.tgz\",\r\n      \"integrity\": \"sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"fill-range\": \"^7.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8\"\r\n      }\r\n    },\r\n    \"node_modules/buffer-equal-constant-time\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/buffer-equal-constant-time/-/buffer-equal-constant-time-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA==\"\r\n    },\r\n    \"node_modules/bytes\": {\r\n      \"version\": \"3.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz\",\r\n      \"integrity\": \"sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/call-bind\": {\r\n      \"version\": \"1.0.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/call-bind/-/call-bind-1.0.7.tgz\",\r\n      \"integrity\": \"sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==\",\r\n      \"dependencies\": {\r\n        \"es-define-property\": \"^1.0.0\",\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"function-bind\": \"^1.1.2\",\r\n        \"get-intrinsic\": \"^1.2.4\",\r\n        \"set-function-length\": \"^1.2.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/chokidar\": {\r\n      \"version\": \"3.6.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz\",\r\n      \"integrity\": \"sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"anymatch\": \"~3.1.2\",\r\n        \"braces\": \"~3.0.2\",\r\n        \"glob-parent\": \"~5.1.2\",\r\n        \"is-binary-path\": \"~2.1.0\",\r\n        \"is-glob\": \"~4.0.1\",\r\n        \"normalize-path\": \"~3.0.0\",\r\n        \"readdirp\": \"~3.6.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 8.10.0\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://paulmillr.com/funding/\"\r\n      },\r\n      \"optionalDependencies\": {\r\n        \"fsevents\": \"~2.3.2\"\r\n      }\r\n    },\r\n    \"node_modules/concat-map\": {\r\n      \"version\": \"0.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz\",\r\n      \"integrity\": \"sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==\",\r\n      \"dev\": true\r\n    },\r\n    \"node_modules/content-disposition\": {\r\n      \"version\": \"0.5.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz\",\r\n      \"integrity\": \"sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==\",\r\n      \"dependencies\": {\r\n        \"safe-buffer\": \"5.2.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/content-type\": {\r\n      \"version\": \"1.0.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz\",\r\n      \"integrity\": \"sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/cookie\": {\r\n      \"version\": \"0.4.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.4.1.tgz\",\r\n      \"integrity\": \"sha512-ZwrFkGJxUR3EIoXtO+yVE69Eb7KlixbaeAWfBQB9vVsNn/o+Yw69gBWSSDK825hQNdN+wF8zELf3dFNl/kxkUA==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/cookie-parser\": {\r\n      \"version\": \"1.4.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie-parser/-/cookie-parser-1.4.6.tgz\",\r\n      \"integrity\": \"sha512-z3IzaNjdwUC2olLIB5/ITd0/setiaFMLYiZJle7xg5Fe9KWAceil7xszYfHHBtDFYLSgJduS2Ty0P1uJdPDJeA==\",\r\n      \"dependencies\": {\r\n        \"cookie\": \"0.4.1\",\r\n        \"cookie-signature\": \"1.0.6\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8.0\"\r\n      }\r\n    },\r\n    \"node_modules/cookie-signature\": {\r\n      \"version\": \"1.0.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz\",\r\n      \"integrity\": \"sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==\"\r\n    },\r\n    \"node_modules/cors\": {\r\n      \"version\": \"2.8.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/cors/-/cors-2.8.5.tgz\",\r\n      \"integrity\": \"sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==\",\r\n      \"dependencies\": {\r\n        \"object-assign\": \"^4\",\r\n        \"vary\": \"^1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.10\"\r\n      }\r\n    },\r\n    \"node_modules/debug\": {\r\n      \"version\": \"2.6.9\",\r\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-2.6.9.tgz\",\r\n      \"integrity\": \"sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==\",\r\n      \"dependencies\": {\r\n        \"ms\": \"2.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/define-data-property\": {\r\n      \"version\": \"1.1.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz\",\r\n      \"integrity\": \"sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==\",\r\n      \"dependencies\": {\r\n        \"es-define-property\": \"^1.0.0\",\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"gopd\": \"^1.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/depd\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/depd/-/depd-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/destroy\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\",\r\n        \"npm\": \"1.2.8000 || >= 1.4.16\"\r\n      }\r\n    },\r\n    \"node_modules/dotenv\": {\r\n      \"version\": \"16.4.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/dotenv/-/dotenv-16.4.5.tgz\",\r\n      \"integrity\": \"sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==\",\r\n      \"engines\": {\r\n        \"node\": \">=12\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://dotenvx.com\"\r\n      }\r\n    },\r\n    \"node_modules/doublylinked\": {\r\n      \"version\": \"2.5.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/doublylinked/-/doublylinked-2.5.4.tgz\",\r\n      \"integrity\": \"sha512-jBCKDnFkEHJRjQvYEl5N9VngRV8ypHgw6a52OK4VN57eV2r2rYvgOx9uABdY78INNoW7S6auULp+KBVm/jfYqw==\",\r\n      \"engines\": {\r\n        \"node\": \">= 10.0\"\r\n      }\r\n    },\r\n    \"node_modules/ecdsa-sig-formatter\": {\r\n      \"version\": \"1.0.11\",\r\n      \"resolved\": \"https://registry.npmjs.org/ecdsa-sig-formatter/-/ecdsa-sig-formatter-1.0.11.tgz\",\r\n      \"integrity\": \"sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==\",\r\n      \"dependencies\": {\r\n        \"safe-buffer\": \"^5.0.1\"\r\n      }\r\n    },\r\n    \"node_modules/ee-first\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==\"\r\n    },\r\n    \"node_modules/encodeurl\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/es-define-property\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz\",\r\n      \"integrity\": \"sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==\",\r\n      \"dependencies\": {\r\n        \"get-intrinsic\": \"^1.2.4\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/es-errors\": {\r\n      \"version\": \"1.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz\",\r\n      \"integrity\": \"sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/escape-html\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==\"\r\n    },\r\n    \"node_modules/etag\": {\r\n      \"version\": \"1.8.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/etag/-/etag-1.8.1.tgz\",\r\n      \"integrity\": \"sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/express\": {\r\n      \"version\": \"4.19.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/express/-/express-4.19.2.tgz\",\r\n      \"integrity\": \"sha512-5T6nhjsT+EOMzuck8JjBHARTHfMht0POzlA60WV2pMD3gyXw2LZnZ+ueGdNxG+0calOJcWKbpFcuzLZ91YWq9Q==\",\r\n      \"dependencies\": {\r\n        \"accepts\": \"~1.3.8\",\r\n        \"array-flatten\": \"1.1.1\",\r\n        \"body-parser\": \"1.20.2\",\r\n        \"content-disposition\": \"0.5.4\",\r\n        \"content-type\": \"~1.0.4\",\r\n        \"cookie\": \"0.6.0\",\r\n        \"cookie-signature\": \"1.0.6\",\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"2.0.0\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"etag\": \"~1.8.1\",\r\n        \"finalhandler\": \"1.2.0\",\r\n        \"fresh\": \"0.5.2\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"merge-descriptors\": \"1.0.1\",\r\n        \"methods\": \"~1.1.2\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"parseurl\": \"~1.3.3\",\r\n        \"path-to-regexp\": \"0.1.7\",\r\n        \"proxy-addr\": \"~2.0.7\",\r\n        \"qs\": \"6.11.0\",\r\n        \"range-parser\": \"~1.2.1\",\r\n        \"safe-buffer\": \"5.2.1\",\r\n        \"send\": \"0.18.0\",\r\n        \"serve-static\": \"1.15.0\",\r\n        \"setprototypeof\": \"1.2.0\",\r\n        \"statuses\": \"2.0.1\",\r\n        \"type-is\": \"~1.6.18\",\r\n        \"utils-merge\": \"1.0.1\",\r\n        \"vary\": \"~1.1.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/express/node_modules/cookie\": {\r\n      \"version\": \"0.6.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/cookie/-/cookie-0.6.0.tgz\",\r\n      \"integrity\": \"sha512-U71cyTamuh1CRNCfpGY6to28lxvNwPG4Guz/EVjgf3Jmzv0vlDp1atT9eS5dDjMYHucpHbWns6Lwf3BKz6svdw==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/fill-range\": {\r\n      \"version\": \"7.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz\",\r\n      \"integrity\": \"sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"to-regex-range\": \"^5.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8\"\r\n      }\r\n    },\r\n    \"node_modules/finalhandler\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/finalhandler/-/finalhandler-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-5uXcUVftlQMFnWC9qu/svkWv3GTd2PfUhK/3PLkYNAe7FbqJMt3515HaxE6eRL74GdsriiwujiawdaB1BpEISg==\",\r\n      \"dependencies\": {\r\n        \"debug\": \"2.6.9\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"parseurl\": \"~1.3.3\",\r\n        \"statuses\": \"2.0.1\",\r\n        \"unpipe\": \"~1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/forwarded\": {\r\n      \"version\": \"0.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz\",\r\n      \"integrity\": \"sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/fresh\": {\r\n      \"version\": \"0.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz\",\r\n      \"integrity\": \"sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/function-bind\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz\",\r\n      \"integrity\": \"sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==\",\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/get-intrinsic\": {\r\n      \"version\": \"1.2.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz\",\r\n      \"integrity\": \"sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==\",\r\n      \"dependencies\": {\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"function-bind\": \"^1.1.2\",\r\n        \"has-proto\": \"^1.0.1\",\r\n        \"has-symbols\": \"^1.0.3\",\r\n        \"hasown\": \"^2.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/glob-parent\": {\r\n      \"version\": \"5.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\r\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"is-glob\": \"^4.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 6\"\r\n      }\r\n    },\r\n    \"node_modules/gopd\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==\",\r\n      \"dependencies\": {\r\n        \"get-intrinsic\": \"^1.1.3\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/has-flag\": {\r\n      \"version\": \"3.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz\",\r\n      \"integrity\": \"sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==\",\r\n      \"dev\": true,\r\n      \"engines\": {\r\n        \"node\": \">=4\"\r\n      }\r\n    },\r\n    \"node_modules/has-property-descriptors\": {\r\n      \"version\": \"1.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz\",\r\n      \"integrity\": \"sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==\",\r\n      \"dependencies\": {\r\n        \"es-define-property\": \"^1.0.0\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/has-proto\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/has-symbols\": {\r\n      \"version\": \"1.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz\",\r\n      \"integrity\": \"sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/hasown\": {\r\n      \"version\": \"2.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz\",\r\n      \"integrity\": \"sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==\",\r\n      \"dependencies\": {\r\n        \"function-bind\": \"^1.1.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/http-errors\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==\",\r\n      \"dependencies\": {\r\n        \"depd\": \"2.0.0\",\r\n        \"inherits\": \"2.0.4\",\r\n        \"setprototypeof\": \"1.2.0\",\r\n        \"statuses\": \"2.0.1\",\r\n        \"toidentifier\": \"1.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/http-status-codes\": {\r\n      \"version\": \"2.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/http-status-codes/-/http-status-codes-2.3.0.tgz\",\r\n      \"integrity\": \"sha512-RJ8XvFvpPM/Dmc5SV+dC4y5PCeOhT3x1Hq0NU3rjGeg5a/CqlhZ7uudknPwZFz4aeAXDcbAyaeP7GAo9lvngtA==\"\r\n    },\r\n    \"node_modules/iconv-lite\": {\r\n      \"version\": \"0.4.24\",\r\n      \"resolved\": \"https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz\",\r\n      \"integrity\": \"sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==\",\r\n      \"dependencies\": {\r\n        \"safer-buffer\": \">= 2.1.2 < 3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/ignore-by-default\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA==\",\r\n      \"dev\": true\r\n    },\r\n    \"node_modules/inherits\": {\r\n      \"version\": \"2.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\r\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\"\r\n    },\r\n    \"node_modules/ipaddr.js\": {\r\n      \"version\": \"1.9.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz\",\r\n      \"integrity\": \"sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.10\"\r\n      }\r\n    },\r\n    \"node_modules/is-binary-path\": {\r\n      \"version\": \"2.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\r\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"binary-extensions\": \"^2.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8\"\r\n      }\r\n    },\r\n    \"node_modules/is-extglob\": {\r\n      \"version\": \"2.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\r\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\r\n      \"dev\": true,\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/is-glob\": {\r\n      \"version\": \"4.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\r\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"is-extglob\": \"^2.1.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/is-number\": {\r\n      \"version\": \"7.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\r\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\r\n      \"dev\": true,\r\n      \"engines\": {\r\n        \"node\": \">=0.12.0\"\r\n      }\r\n    },\r\n    \"node_modules/jsonwebtoken\": {\r\n      \"version\": \"9.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-9.0.2.tgz\",\r\n      \"integrity\": \"sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==\",\r\n      \"dependencies\": {\r\n        \"jws\": \"^3.2.2\",\r\n        \"lodash.includes\": \"^4.3.0\",\r\n        \"lodash.isboolean\": \"^3.0.3\",\r\n        \"lodash.isinteger\": \"^4.0.4\",\r\n        \"lodash.isnumber\": \"^3.0.3\",\r\n        \"lodash.isplainobject\": \"^4.0.6\",\r\n        \"lodash.isstring\": \"^4.0.1\",\r\n        \"lodash.once\": \"^4.0.0\",\r\n        \"ms\": \"^2.1.1\",\r\n        \"semver\": \"^7.5.4\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=12\",\r\n        \"npm\": \">=6\"\r\n      }\r\n    },\r\n    \"node_modules/jsonwebtoken/node_modules/ms\": {\r\n      \"version\": \"2.1.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\r\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\"\r\n    },\r\n    \"node_modules/jwa\": {\r\n      \"version\": \"1.4.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/jwa/-/jwa-1.4.1.tgz\",\r\n      \"integrity\": \"sha512-qiLX/xhEEFKUAJ6FiBMbes3w9ATzyk5W7Hvzpa/SLYdxNtng+gcurvrI7TbACjIXlsJyr05/S1oUhZrc63evQA==\",\r\n      \"dependencies\": {\r\n        \"buffer-equal-constant-time\": \"1.0.1\",\r\n        \"ecdsa-sig-formatter\": \"1.0.11\",\r\n        \"safe-buffer\": \"^5.0.1\"\r\n      }\r\n    },\r\n    \"node_modules/jws\": {\r\n      \"version\": \"3.2.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/jws/-/jws-3.2.2.tgz\",\r\n      \"integrity\": \"sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==\",\r\n      \"dependencies\": {\r\n        \"jwa\": \"^1.4.1\",\r\n        \"safe-buffer\": \"^5.0.1\"\r\n      }\r\n    },\r\n    \"node_modules/lightning-pool\": {\r\n      \"version\": \"4.2.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/lightning-pool/-/lightning-pool-4.2.2.tgz\",\r\n      \"integrity\": \"sha512-KW0Df0IbjNLxy5wAsdErTKYtHGwefLRQseHNksEctyaL7gtRwJT0nqLa2uiRdNYDwKSnZtqOjSjUNtfxmfH1qw==\",\r\n      \"dependencies\": {\r\n        \"doublylinked\": \"^2.5.3\",\r\n        \"putil-promisify\": \"^1.10.1\"\r\n      }\r\n    },\r\n    \"node_modules/lodash.includes\": {\r\n      \"version\": \"4.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/lodash.includes/-/lodash.includes-4.3.0.tgz\",\r\n      \"integrity\": \"sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w==\"\r\n    },\r\n    \"node_modules/lodash.isboolean\": {\r\n      \"version\": \"3.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/lodash.isboolean/-/lodash.isboolean-3.0.3.tgz\",\r\n      \"integrity\": \"sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg==\"\r\n    },\r\n    \"node_modules/lodash.isinteger\": {\r\n      \"version\": \"4.0.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/lodash.isinteger/-/lodash.isinteger-4.0.4.tgz\",\r\n      \"integrity\": \"sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA==\"\r\n    },\r\n    \"node_modules/lodash.isnumber\": {\r\n      \"version\": \"3.0.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/lodash.isnumber/-/lodash.isnumber-3.0.3.tgz\",\r\n      \"integrity\": \"sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw==\"\r\n    },\r\n    \"node_modules/lodash.isplainobject\": {\r\n      \"version\": \"4.0.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz\",\r\n      \"integrity\": \"sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==\"\r\n    },\r\n    \"node_modules/lodash.isstring\": {\r\n      \"version\": \"4.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz\",\r\n      \"integrity\": \"sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==\"\r\n    },\r\n    \"node_modules/lodash.once\": {\r\n      \"version\": \"4.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz\",\r\n      \"integrity\": \"sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg==\"\r\n    },\r\n    \"node_modules/media-typer\": {\r\n      \"version\": \"0.3.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz\",\r\n      \"integrity\": \"sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/merge-descriptors\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-cCi6g3/Zr1iqQi6ySbseM1Xvooa98N0w31jzUYrXPX2xqObmFGHJ0tQ5u74H3mVh7wLouTseZyYIq39g8cNp1w==\"\r\n    },\r\n    \"node_modules/methods\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/methods/-/methods-1.1.2.tgz\",\r\n      \"integrity\": \"sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/mime\": {\r\n      \"version\": \"1.6.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime/-/mime-1.6.0.tgz\",\r\n      \"integrity\": \"sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==\",\r\n      \"bin\": {\r\n        \"mime\": \"cli.js\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=4\"\r\n      }\r\n    },\r\n    \"node_modules/mime-db\": {\r\n      \"version\": \"1.52.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz\",\r\n      \"integrity\": \"sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/mime-types\": {\r\n      \"version\": \"2.1.35\",\r\n      \"resolved\": \"https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz\",\r\n      \"integrity\": \"sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==\",\r\n      \"dependencies\": {\r\n        \"mime-db\": \"1.52.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/minimatch\": {\r\n      \"version\": \"3.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz\",\r\n      \"integrity\": \"sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"brace-expansion\": \"^1.1.7\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \"*\"\r\n      }\r\n    },\r\n    \"node_modules/ms\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==\"\r\n    },\r\n    \"node_modules/negotiator\": {\r\n      \"version\": \"0.6.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz\",\r\n      \"integrity\": \"sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/nodemon\": {\r\n      \"version\": \"3.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/nodemon/-/nodemon-3.1.0.tgz\",\r\n      \"integrity\": \"sha512-xqlktYlDMCepBJd43ZQhjWwMw2obW/JRvkrLxq5RCNcuDDX1DbcPT+qT1IlIIdf+DhnWs90JpTMe+Y5KxOchvA==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"chokidar\": \"^3.5.2\",\r\n        \"debug\": \"^4\",\r\n        \"ignore-by-default\": \"^1.0.1\",\r\n        \"minimatch\": \"^3.1.2\",\r\n        \"pstree.remy\": \"^1.1.8\",\r\n        \"semver\": \"^7.5.3\",\r\n        \"simple-update-notifier\": \"^2.0.0\",\r\n        \"supports-color\": \"^5.5.0\",\r\n        \"touch\": \"^3.1.0\",\r\n        \"undefsafe\": \"^2.0.5\"\r\n      },\r\n      \"bin\": {\r\n        \"nodemon\": \"bin/nodemon.js\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=10\"\r\n      },\r\n      \"funding\": {\r\n        \"type\": \"opencollective\",\r\n        \"url\": \"https://opencollective.com/nodemon\"\r\n      }\r\n    },\r\n    \"node_modules/nodemon/node_modules/debug\": {\r\n      \"version\": \"4.3.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\r\n      \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"ms\": \"2.1.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=6.0\"\r\n      },\r\n      \"peerDependenciesMeta\": {\r\n        \"supports-color\": {\r\n          \"optional\": true\r\n        }\r\n      }\r\n    },\r\n    \"node_modules/nodemon/node_modules/ms\": {\r\n      \"version\": \"2.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\r\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\r\n      \"dev\": true\r\n    },\r\n    \"node_modules/nopt\": {\r\n      \"version\": \"1.0.10\",\r\n      \"resolved\": \"https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz\",\r\n      \"integrity\": \"sha512-NWmpvLSqUrgrAC9HCuxEvb+PSloHpqVu+FqcO4eeF2h5qYRhA7ev6KvelyQAKtegUbC6RypJnlEOhd8vloNKYg==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"abbrev\": \"1\"\r\n      },\r\n      \"bin\": {\r\n        \"nopt\": \"bin/nopt.js\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \"*\"\r\n      }\r\n    },\r\n    \"node_modules/normalize-path\": {\r\n      \"version\": \"3.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\r\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\r\n      \"dev\": true,\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/object-assign\": {\r\n      \"version\": \"4.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz\",\r\n      \"integrity\": \"sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/object-inspect\": {\r\n      \"version\": \"1.13.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.1.tgz\",\r\n      \"integrity\": \"sha512-5qoj1RUiKOMsCCNLV1CBiPYE10sziTsnmNxkAI/rZhiD63CF7IqdFGC/XzjWjpSgLf0LxXX3bDFIh0E18f6UhQ==\",\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/obuf\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/obuf/-/obuf-1.1.2.tgz\",\r\n      \"integrity\": \"sha512-PX1wu0AmAdPqOL1mWhqmlOd8kOIZQwGZw6rh7uby9fTc5lhaOWFLX3I6R1hrF9k3zUY40e6igsLGkDXK92LJNg==\"\r\n    },\r\n    \"node_modules/on-finished\": {\r\n      \"version\": \"2.4.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz\",\r\n      \"integrity\": \"sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==\",\r\n      \"dependencies\": {\r\n        \"ee-first\": \"1.1.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/parseurl\": {\r\n      \"version\": \"1.3.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz\",\r\n      \"integrity\": \"sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/path-to-regexp\": {\r\n      \"version\": \"0.1.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz\",\r\n      \"integrity\": \"sha512-5DFkuoqlv1uYQKxy8omFBeJPQcdoE07Kv2sferDCrAq1ohOU+MSDswDIbnx3YAM60qIOnYa53wBhXW0EbMonrQ==\"\r\n    },\r\n    \"node_modules/pg\": {\r\n      \"version\": \"8.11.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/pg/-/pg-8.11.5.tgz\",\r\n      \"integrity\": \"sha512-jqgNHSKL5cbDjFlHyYsCXmQDrfIX/3RsNwYqpd4N0Kt8niLuNoRNH+aazv6cOd43gPh9Y4DjQCtb+X0MH0Hvnw==\",\r\n      \"dependencies\": {\r\n        \"pg-connection-string\": \"^2.6.4\",\r\n        \"pg-pool\": \"^3.6.2\",\r\n        \"pg-protocol\": \"^1.6.1\",\r\n        \"pg-types\": \"^2.1.0\",\r\n        \"pgpass\": \"1.x\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 8.0.0\"\r\n      },\r\n      \"optionalDependencies\": {\r\n        \"pg-cloudflare\": \"^1.1.1\"\r\n      },\r\n      \"peerDependencies\": {\r\n        \"pg-native\": \">=3.0.1\"\r\n      },\r\n      \"peerDependenciesMeta\": {\r\n        \"pg-native\": {\r\n          \"optional\": true\r\n        }\r\n      }\r\n    },\r\n    \"node_modules/pg-cloudflare\": {\r\n      \"version\": \"1.1.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/pg-cloudflare/-/pg-cloudflare-1.1.1.tgz\",\r\n      \"integrity\": \"sha512-xWPagP/4B6BgFO+EKz3JONXv3YDgvkbVrGw2mTo3D6tVDQRh1e7cqVGvyR3BE+eQgAvx1XhW/iEASj4/jCWl3Q==\",\r\n      \"optional\": true\r\n    },\r\n    \"node_modules/pg-connection-string\": {\r\n      \"version\": \"2.6.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/pg-connection-string/-/pg-connection-string-2.6.4.tgz\",\r\n      \"integrity\": \"sha512-v+Z7W/0EO707aNMaAEfiGnGL9sxxumwLl2fJvCQtMn9Fxsg+lPpPkdcyBSv/KFgpGdYkMfn+EI1Or2EHjpgLCA==\"\r\n    },\r\n    \"node_modules/pg-int8\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/pg-int8/-/pg-int8-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==\",\r\n      \"engines\": {\r\n        \"node\": \">=4.0.0\"\r\n      }\r\n    },\r\n    \"node_modules/pg-pool\": {\r\n      \"version\": \"3.6.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/pg-pool/-/pg-pool-3.6.2.tgz\",\r\n      \"integrity\": \"sha512-Htjbg8BlwXqSBQ9V8Vjtc+vzf/6fVUuak/3/XXKA9oxZprwW3IMDQTGHP+KDmVL7rtd+R1QjbnCFPuTHm3G4hg==\",\r\n      \"peerDependencies\": {\r\n        \"pg\": \">=8.0\"\r\n      }\r\n    },\r\n    \"node_modules/pg-protocol\": {\r\n      \"version\": \"1.6.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/pg-protocol/-/pg-protocol-1.6.1.tgz\",\r\n      \"integrity\": \"sha512-jPIlvgoD63hrEuihvIg+tJhoGjUsLPn6poJY9N5CnlPd91c2T18T/9zBtLxZSb1EhYxBRoZJtzScCaWlYLtktg==\"\r\n    },\r\n    \"node_modules/pg-types\": {\r\n      \"version\": \"2.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/pg-types/-/pg-types-2.2.0.tgz\",\r\n      \"integrity\": \"sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==\",\r\n      \"dependencies\": {\r\n        \"pg-int8\": \"1.0.1\",\r\n        \"postgres-array\": \"~2.0.0\",\r\n        \"postgres-bytea\": \"~1.0.0\",\r\n        \"postgres-date\": \"~1.0.4\",\r\n        \"postgres-interval\": \"^1.1.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=4\"\r\n      }\r\n    },\r\n    \"node_modules/pgpass\": {\r\n      \"version\": \"1.0.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/pgpass/-/pgpass-1.0.5.tgz\",\r\n      \"integrity\": \"sha512-FdW9r/jQZhSeohs1Z3sI1yxFQNFvMcnmfuj4WBMUTxOrAyLMaTcE1aAMBiTlbMNaXvBCQuVi0R7hd8udDSP7ug==\",\r\n      \"dependencies\": {\r\n        \"split2\": \"^4.1.0\"\r\n      }\r\n    },\r\n    \"node_modules/picomatch\": {\r\n      \"version\": \"2.3.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\r\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\r\n      \"dev\": true,\r\n      \"engines\": {\r\n        \"node\": \">=8.6\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\r\n      }\r\n    },\r\n    \"node_modules/postgres\": {\r\n      \"version\": \"3.4.4\",\r\n      \"resolved\": \"https://registry.npmjs.org/postgres/-/postgres-3.4.4.tgz\",\r\n      \"integrity\": \"sha512-IbyN+9KslkqcXa8AO9fxpk97PA4pzewvpi2B3Dwy9u4zpV32QicaEdgmF3eSQUzdRk7ttDHQejNgAEr4XoeH4A==\",\r\n      \"engines\": {\r\n        \"node\": \">=12\"\r\n      },\r\n      \"funding\": {\r\n        \"type\": \"individual\",\r\n        \"url\": \"https://github.com/sponsors/porsager\"\r\n      }\r\n    },\r\n    \"node_modules/postgres-array\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/postgres-array/-/postgres-array-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-VpZrUqU5A69eQyW2c5CA1jtLecCsN2U/bD6VilrFDWq5+5UIEVO7nazS3TEcHf1zuPYO/sqGvUvW62g86RXZuA==\",\r\n      \"engines\": {\r\n        \"node\": \">=4\"\r\n      }\r\n    },\r\n    \"node_modules/postgres-bytea\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-1.0.0.tgz\",\r\n      \"integrity\": \"sha512-xy3pmLuQqRBZBXDULy7KbaitYqLcmxigw14Q5sj8QBVLqEwXfeybIKVWiqAXTlcvdvb0+xkOtDbfQMOf4lST1w==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/postgres-date\": {\r\n      \"version\": \"1.0.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/postgres-date/-/postgres-date-1.0.7.tgz\",\r\n      \"integrity\": \"sha512-suDmjLVQg78nMK2UZ454hAG+OAW+HQPZ6n++TNDUX+L0+uUlLywnoxJKDou51Zm+zTCjrCl0Nq6J9C5hP9vK/Q==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/postgres-interval\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/postgres-interval/-/postgres-interval-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==\",\r\n      \"dependencies\": {\r\n        \"xtend\": \"^4.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/postgresql-client\": {\r\n      \"version\": \"2.11.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/postgresql-client/-/postgresql-client-2.11.0.tgz\",\r\n      \"integrity\": \"sha512-QSPHcWVaiBG+JyASaDojOXvhRmsc2n8j2COdIjUDENFAtFls16Zy240asY2ENzZRQJUMAA8vpR8w4SAdI8jdbw==\",\r\n      \"dependencies\": {\r\n        \"doublylinked\": \"^2.5.4\",\r\n        \"lightning-pool\": \"^4.2.2\",\r\n        \"postgres-bytea\": \"^3.0.0\",\r\n        \"power-tasks\": \"^1.7.3\",\r\n        \"putil-merge\": \"^3.12.1\",\r\n        \"putil-promisify\": \"^1.10.1\",\r\n        \"putil-varhelpers\": \"^1.6.5\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=16.0\"\r\n      }\r\n    },\r\n    \"node_modules/postgresql-client/node_modules/postgres-bytea\": {\r\n      \"version\": \"3.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-3.0.0.tgz\",\r\n      \"integrity\": \"sha512-CNd4jim9RFPkObHSjVHlVrxoVQXz7quwNFpz7RY1okNNme49+sVyiTvTRobiLV548Hx/hb1BG+iE7h9493WzFw==\",\r\n      \"dependencies\": {\r\n        \"obuf\": \"~1.1.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 6\"\r\n      }\r\n    },\r\n    \"node_modules/power-tasks\": {\r\n      \"version\": \"1.7.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/power-tasks/-/power-tasks-1.7.3.tgz\",\r\n      \"integrity\": \"sha512-EnkjLfaX4PxFYHbUWyWzlE4I8SgctaW9jx4qQXrVRoELlqBXrxIMtuhHzRwsHv2qs1tO7efOcZa6/wDCdCjRfA==\",\r\n      \"dependencies\": {\r\n        \"doublylinked\": \"^2.5.4\",\r\n        \"strict-typed-events\": \"^2.3.3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=16.0\"\r\n      }\r\n    },\r\n    \"node_modules/proxy-addr\": {\r\n      \"version\": \"2.0.7\",\r\n      \"resolved\": \"https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz\",\r\n      \"integrity\": \"sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==\",\r\n      \"dependencies\": {\r\n        \"forwarded\": \"0.2.0\",\r\n        \"ipaddr.js\": \"1.9.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.10\"\r\n      }\r\n    },\r\n    \"node_modules/pstree.remy\": {\r\n      \"version\": \"1.1.8\",\r\n      \"resolved\": \"https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz\",\r\n      \"integrity\": \"sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==\",\r\n      \"dev\": true\r\n    },\r\n    \"node_modules/putil-merge\": {\r\n      \"version\": \"3.12.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/putil-merge/-/putil-merge-3.12.1.tgz\",\r\n      \"integrity\": \"sha512-4clPyRkJPrd5zl98AP7I3JamyXbx0ixe2CnfvGwoTyWSr7Kslcv8weoKjfU4BMBifkWIRL54l4OrNe97pYcDwQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 10.0\"\r\n      }\r\n    },\r\n    \"node_modules/putil-promisify\": {\r\n      \"version\": \"1.10.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/putil-promisify/-/putil-promisify-1.10.1.tgz\",\r\n      \"integrity\": \"sha512-1jm0egJNrj5eBDRj15Cg08RNHDV91OVEHeeYjAFRcs663PXxFokndxcJAGbaO6CSErCTp8eTgC8vuOF+fvXIAA==\",\r\n      \"engines\": {\r\n        \"node\": \">= 14.0\"\r\n      }\r\n    },\r\n    \"node_modules/putil-varhelpers\": {\r\n      \"version\": \"1.6.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/putil-varhelpers/-/putil-varhelpers-1.6.5.tgz\",\r\n      \"integrity\": \"sha512-kyu+lE5xkc65ScgaIi6rNONLXeS7jGBxl1I0rzHVsFGAAQ45D/VkuEev+t09PFB943F+CqdWFLczH6ePk5TPAA==\",\r\n      \"engines\": {\r\n        \"node\": \">= 6.0\"\r\n      }\r\n    },\r\n    \"node_modules/qs\": {\r\n      \"version\": \"6.11.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/qs/-/qs-6.11.0.tgz\",\r\n      \"integrity\": \"sha512-MvjoMCJwEarSbUYk5O+nmoSzSutSsTwF85zcHPQ9OrlFoZOYIjaqBAJIqIXjptyD5vThxGq52Xu/MaJzRkIk4Q==\",\r\n      \"dependencies\": {\r\n        \"side-channel\": \"^1.0.4\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=0.6\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/range-parser\": {\r\n      \"version\": \"1.2.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz\",\r\n      \"integrity\": \"sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/raw-body\": {\r\n      \"version\": \"2.5.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz\",\r\n      \"integrity\": \"sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==\",\r\n      \"dependencies\": {\r\n        \"bytes\": \"3.1.2\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"iconv-lite\": \"0.4.24\",\r\n        \"unpipe\": \"1.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/readdirp\": {\r\n      \"version\": \"3.6.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\r\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"picomatch\": \"^2.2.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8.10.0\"\r\n      }\r\n    },\r\n    \"node_modules/router\": {\r\n      \"version\": \"1.3.8\",\r\n      \"resolved\": \"https://registry.npmjs.org/router/-/router-1.3.8.tgz\",\r\n      \"integrity\": \"sha512-461UFH44NtSfIlS83PUg2N7OZo86BC/kB3dY77gJdsODsBhhw7+2uE0tzTINxrY9CahCUVk1VhpWCA5i1yoIEg==\",\r\n      \"dependencies\": {\r\n        \"array-flatten\": \"3.0.0\",\r\n        \"debug\": \"2.6.9\",\r\n        \"methods\": \"~1.1.2\",\r\n        \"parseurl\": \"~1.3.3\",\r\n        \"path-to-regexp\": \"0.1.7\",\r\n        \"setprototypeof\": \"1.2.0\",\r\n        \"utils-merge\": \"1.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/router/node_modules/array-flatten\": {\r\n      \"version\": \"3.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/array-flatten/-/array-flatten-3.0.0.tgz\",\r\n      \"integrity\": \"sha512-zPMVc3ZYlGLNk4mpK1NzP2wg0ml9t7fUgDsayR5Y5rSzxQilzR9FGu/EH2jQOcKSAeAfWeylyW8juy3OkWRvNA==\"\r\n    },\r\n    \"node_modules/safe-buffer\": {\r\n      \"version\": \"5.2.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\r\n      \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\r\n      \"funding\": [\r\n        {\r\n          \"type\": \"github\",\r\n          \"url\": \"https://github.com/sponsors/feross\"\r\n        },\r\n        {\r\n          \"type\": \"patreon\",\r\n          \"url\": \"https://www.patreon.com/feross\"\r\n        },\r\n        {\r\n          \"type\": \"consulting\",\r\n          \"url\": \"https://feross.org/support\"\r\n        }\r\n      ]\r\n    },\r\n    \"node_modules/safer-buffer\": {\r\n      \"version\": \"2.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz\",\r\n      \"integrity\": \"sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==\"\r\n    },\r\n    \"node_modules/semver\": {\r\n      \"version\": \"7.6.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.6.2.tgz\",\r\n      \"integrity\": \"sha512-FNAIBWCx9qcRhoHcgcJ0gvU7SN1lYU2ZXuSfl04bSC5OpvDHFyJCjdNHomPXxjQlCBU67YW64PzY7/VIEH7F2w==\",\r\n      \"bin\": {\r\n        \"semver\": \"bin/semver.js\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=10\"\r\n      }\r\n    },\r\n    \"node_modules/send\": {\r\n      \"version\": \"0.18.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/send/-/send-0.18.0.tgz\",\r\n      \"integrity\": \"sha512-qqWzuOjSFOuqPjFe4NOsMLafToQQwBSOEpS+FwEt3A2V3vKubTquT3vmLTQpFgMXp8AlFWFuP1qKaJZOtPpVXg==\",\r\n      \"dependencies\": {\r\n        \"debug\": \"2.6.9\",\r\n        \"depd\": \"2.0.0\",\r\n        \"destroy\": \"1.2.0\",\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"etag\": \"~1.8.1\",\r\n        \"fresh\": \"0.5.2\",\r\n        \"http-errors\": \"2.0.0\",\r\n        \"mime\": \"1.6.0\",\r\n        \"ms\": \"2.1.3\",\r\n        \"on-finished\": \"2.4.1\",\r\n        \"range-parser\": \"~1.2.1\",\r\n        \"statuses\": \"2.0.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8.0\"\r\n      }\r\n    },\r\n    \"node_modules/send/node_modules/ms\": {\r\n      \"version\": \"2.1.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\r\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\"\r\n    },\r\n    \"node_modules/serve-static\": {\r\n      \"version\": \"1.15.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/serve-static/-/serve-static-1.15.0.tgz\",\r\n      \"integrity\": \"sha512-XGuRDNjXUijsUL0vl6nSD7cwURuzEgglbOaFuZM9g3kwDXOWVTck0jLzjPzGD+TazWbboZYu52/9/XPdUgne9g==\",\r\n      \"dependencies\": {\r\n        \"encodeurl\": \"~1.0.2\",\r\n        \"escape-html\": \"~1.0.3\",\r\n        \"parseurl\": \"~1.3.3\",\r\n        \"send\": \"0.18.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.8.0\"\r\n      }\r\n    },\r\n    \"node_modules/set-function-length\": {\r\n      \"version\": \"1.2.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz\",\r\n      \"integrity\": \"sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==\",\r\n      \"dependencies\": {\r\n        \"define-data-property\": \"^1.1.4\",\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"function-bind\": \"^1.1.2\",\r\n        \"get-intrinsic\": \"^1.2.4\",\r\n        \"gopd\": \"^1.0.1\",\r\n        \"has-property-descriptors\": \"^1.0.2\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      }\r\n    },\r\n    \"node_modules/setprototypeof\": {\r\n      \"version\": \"1.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz\",\r\n      \"integrity\": \"sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==\"\r\n    },\r\n    \"node_modules/side-channel\": {\r\n      \"version\": \"1.0.6\",\r\n      \"resolved\": \"https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz\",\r\n      \"integrity\": \"sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==\",\r\n      \"dependencies\": {\r\n        \"call-bind\": \"^1.0.7\",\r\n        \"es-errors\": \"^1.3.0\",\r\n        \"get-intrinsic\": \"^1.2.4\",\r\n        \"object-inspect\": \"^1.13.1\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.4\"\r\n      },\r\n      \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n      }\r\n    },\r\n    \"node_modules/simple-update-notifier\": {\r\n      \"version\": \"2.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-2.0.0.tgz\",\r\n      \"integrity\": \"sha512-a2B9Y0KlNXl9u/vsW6sTIu9vGEpfKu2wRV6l1H3XEas/0gUIzGzBoP/IouTcUQbm9JWZLH3COxyn03TYlFax6w==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"semver\": \"^7.5.3\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=10\"\r\n      }\r\n    },\r\n    \"node_modules/split2\": {\r\n      \"version\": \"4.2.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/split2/-/split2-4.2.0.tgz\",\r\n      \"integrity\": \"sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 10.x\"\r\n      }\r\n    },\r\n    \"node_modules/statuses\": {\r\n      \"version\": \"2.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz\",\r\n      \"integrity\": \"sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/strict-typed-events\": {\r\n      \"version\": \"2.3.3\",\r\n      \"resolved\": \"https://registry.npmjs.org/strict-typed-events/-/strict-typed-events-2.3.3.tgz\",\r\n      \"integrity\": \"sha512-Vc8/N5giCVpO2n5BCskqDD9ns7RkdEq0pFd4yQk1ROULusJDbjORNvbtyEPxxK7Xqn9/NdW8XHLxv/PvUTgFsA==\",\r\n      \"dependencies\": {\r\n        \"putil-promisify\": \"^1.10.1\",\r\n        \"ts-gems\": \"^3.1.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=16.0\"\r\n      }\r\n    },\r\n    \"node_modules/supports-color\": {\r\n      \"version\": \"5.5.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz\",\r\n      \"integrity\": \"sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"has-flag\": \"^3.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=4\"\r\n      }\r\n    },\r\n    \"node_modules/to-regex-range\": {\r\n      \"version\": \"5.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\r\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"is-number\": \"^7.0.0\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">=8.0\"\r\n      }\r\n    },\r\n    \"node_modules/toidentifier\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.6\"\r\n      }\r\n    },\r\n    \"node_modules/touch\": {\r\n      \"version\": \"3.1.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/touch/-/touch-3.1.0.tgz\",\r\n      \"integrity\": \"sha512-WBx8Uy5TLtOSRtIq+M03/sKDrXCLHxwDcquSP2c43Le03/9serjQBIztjRz6FkJez9D/hleyAXTBGLwwZUw9lA==\",\r\n      \"dev\": true,\r\n      \"dependencies\": {\r\n        \"nopt\": \"~1.0.10\"\r\n      },\r\n      \"bin\": {\r\n        \"nodetouch\": \"bin/nodetouch.js\"\r\n      }\r\n    },\r\n    \"node_modules/ts-gems\": {\r\n      \"version\": \"3.4.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/ts-gems/-/ts-gems-3.4.0.tgz\",\r\n      \"integrity\": \"sha512-RM1TN7GRmweAdNXNM89S4tLz+Ur3HslR4ePYND6RBhRzxsiUOnfVFyTey01+9YUs8Vhxb/OsO6rHlu5xJGzBXw==\"\r\n    },\r\n    \"node_modules/type-is\": {\r\n      \"version\": \"1.6.18\",\r\n      \"resolved\": \"https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz\",\r\n      \"integrity\": \"sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==\",\r\n      \"dependencies\": {\r\n        \"media-typer\": \"0.3.0\",\r\n        \"mime-types\": \"~2.1.24\"\r\n      },\r\n      \"engines\": {\r\n        \"node\": \">= 0.6\"\r\n      }\r\n    },\r\n    \"node_modules/undefsafe\": {\r\n      \"version\": \"2.0.5\",\r\n      \"resolved\": \"https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz\",\r\n      \"integrity\": \"sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA==\",\r\n      \"dev\": true\r\n    },\r\n    \"node_modules/unpipe\": {\r\n      \"version\": \"1.0.0\",\r\n      \"resolved\": \"https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz\",\r\n      \"integrity\": \"sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/utils-merge\": {\r\n      \"version\": \"1.0.1\",\r\n      \"resolved\": \"https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz\",\r\n      \"integrity\": \"sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.4.0\"\r\n      }\r\n    },\r\n    \"node_modules/vary\": {\r\n      \"version\": \"1.1.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/vary/-/vary-1.1.2.tgz\",\r\n      \"integrity\": \"sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==\",\r\n      \"engines\": {\r\n        \"node\": \">= 0.8\"\r\n      }\r\n    },\r\n    \"node_modules/xtend\": {\r\n      \"version\": \"4.0.2\",\r\n      \"resolved\": \"https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz\",\r\n      \"integrity\": \"sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==\",\r\n      \"engines\": {\r\n        \"node\": \">=0.4\"\r\n      }\r\n    }\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/.package-lock.json b/node_modules/.package-lock.json
--- a/node_modules/.package-lock.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/.package-lock.json	(date 1754071493472)
@@ -3,16 +3,23 @@
   "lockfileVersion": 3,
   "requires": true,
   "packages": {
-    "node_modules/abbrev": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/abbrev/-/abbrev-1.1.1.tgz",
-      "integrity": "sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==",
-      "dev": true
+    "node_modules/@jsopen/objects": {
+      "version": "1.6.3",
+      "resolved": "https://registry.npmjs.org/@jsopen/objects/-/objects-1.6.3.tgz",
+      "integrity": "sha512-LNtPollREyfKNqE8GwCxjt4nyi7UuWqHxDbmCYwFzTCmAeFguAAyiLarw81kE2szoRCJzHZDkyEsfY5XyzhPTA==",
+      "license": "MIT",
+      "dependencies": {
+        "tslib": "^2.8.1"
+      },
+      "engines": {
+        "node": ">= 16.0"
+      }
     },
     "node_modules/accepts": {
       "version": "1.3.8",
       "resolved": "https://registry.npmjs.org/accepts/-/accepts-1.3.8.tgz",
       "integrity": "sha512-PYAthTa2m2VKxuvSD3DPC/Gy+U+sOA1LAuT8mkmRuvw+NACSaeXEQ+NHcVF7rONl6qcaxV3Uuemwawk+7+SJLw==",
+      "license": "MIT",
       "dependencies": {
         "mime-types": "~2.1.34",
         "negotiator": "0.6.3"
@@ -26,6 +33,7 @@
       "resolved": "https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz",
       "integrity": "sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==",
       "dev": true,
+      "license": "ISC",
       "dependencies": {
         "normalize-path": "^3.0.0",
         "picomatch": "^2.0.4"
@@ -34,27 +42,51 @@
         "node": ">= 8"
       }
     },
+    "node_modules/append-field": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/append-field/-/append-field-1.0.0.tgz",
+      "integrity": "sha512-klpgFSWLW1ZEs8svjfb7g4qWY0YS5imI82dTg+QahUvJ8YqAY0P10Uk8tTyh9ZGuYEZEMaeJYCF5BFuX552hsw==",
+      "license": "MIT"
+    },
     "node_modules/array-flatten": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-1.1.1.tgz",
-      "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg=="
+      "integrity": "sha512-PCVAQswWemu6UdxsDFFX/+gVeYqKAod3D3UVm91jHwynguOwAvYPhx8nNlM++NqRcK6CxxpUafjmhIdKiHibqg==",
+      "license": "MIT"
     },
     "node_modules/balanced-match": {
       "version": "1.0.2",
       "resolved": "https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz",
       "integrity": "sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==",
-      "dev": true
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/bcrypt": {
+      "version": "6.0.0",
+      "resolved": "https://registry.npmjs.org/bcrypt/-/bcrypt-6.0.0.tgz",
+      "integrity": "sha512-cU8v/EGSrnH+HnxV2z0J7/blxH8gq7Xh2JFT6Aroax7UohdmiJJlxApMxtKfuI7z68NvvVcmR78k2LbT6efhRg==",
+      "hasInstallScript": true,
+      "license": "MIT",
+      "dependencies": {
+        "node-addon-api": "^8.3.0",
+        "node-gyp-build": "^4.8.4"
+      },
+      "engines": {
+        "node": ">= 18"
+      }
     },
     "node_modules/bcryptjs": {
       "version": "2.4.3",
       "resolved": "https://registry.npmjs.org/bcryptjs/-/bcryptjs-2.4.3.tgz",
-      "integrity": "sha512-V/Hy/X9Vt7f3BbPJEi8BdVFMByHi+jNXrYkW3huaybV/kQ0KJg0Y6PkEMbn+zeT+i+SiKZ/HMqJGIIt4LZDqNQ=="
+      "integrity": "sha512-V/Hy/X9Vt7f3BbPJEi8BdVFMByHi+jNXrYkW3huaybV/kQ0KJg0Y6PkEMbn+zeT+i+SiKZ/HMqJGIIt4LZDqNQ==",
+      "license": "MIT"
     },
     "node_modules/binary-extensions": {
       "version": "2.3.0",
       "resolved": "https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.3.0.tgz",
       "integrity": "sha512-Ceh+7ox5qe7LJuLHoY0feh3pHuUDHAcRUeyL2VYghZwfpkNIy/+8Ocg0a3UuSoYzavmylwuLWQOf3hl0jjMMIw==",
       "dev": true,
+      "license": "MIT",
       "engines": {
         "node": ">=8"
       },
@@ -63,9 +95,10 @@
       }
     },
     "node_modules/body-parser": {
-      "version": "1.20.2",
-      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.2.tgz",
-      "integrity": "sha512-ml9pReCu3M61kGlqoTm2umSXTlRTuGTx0bfYj+uIUKKYycG5NtSbeetV3faSU6R7ajOPw0g/J1PvK4qNy7s5bA==",
+      "version": "1.20.3",
+      "resolved": "https://registry.npmjs.org/body-parser/-/body-parser-1.20.3.tgz",
+      "integrity": "sha512-7rAxByjUMqQ3/bHJy7D6OGXvx/MMc4IqBn/X0fcM1QUcAItpZrBEYhWGem+tzXH90c+G01ypMcYJBO9Y30203g==",
+      "license": "MIT",
       "dependencies": {
         "bytes": "3.1.2",
         "content-type": "~1.0.5",
@@ -75,7 +108,7 @@
         "http-errors": "2.0.0",
         "iconv-lite": "0.4.24",
         "on-finished": "2.4.1",
-        "qs": "6.11.0",
+        "qs": "6.13.0",
         "raw-body": "2.5.2",
         "type-is": "~1.6.18",
         "unpipe": "1.0.0"
@@ -86,22 +119,24 @@
       }
     },
     "node_modules/brace-expansion": {
-      "version": "1.1.11",
-      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.11.tgz",
-      "integrity": "sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==",
+      "version": "1.1.12",
+      "resolved": "https://registry.npmjs.org/brace-expansion/-/brace-expansion-1.1.12.tgz",
+      "integrity": "sha512-9T9UjW3r0UW5c1Q7GTwllptXwhvYmEzFhzMfZ9H7FQWt+uZePjZPjBP/W1ZEyZ1twGWom5/56TF4lPcqjnDHcg==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "balanced-match": "^1.0.0",
         "concat-map": "0.0.1"
       }
     },
     "node_modules/braces": {
-      "version": "3.0.2",
-      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.2.tgz",
-      "integrity": "sha512-b8um+L1RzM3WDSzvhm6gIz1yfTbBt6YTlcEKAvsmqCZZFw46z626lVj9j1yEPW33H5H+lBQpZMP1k8l+78Ha0A==",
+      "version": "3.0.3",
+      "resolved": "https://registry.npmjs.org/braces/-/braces-3.0.3.tgz",
+      "integrity": "sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
-        "fill-range": "^7.0.1"
+        "fill-range": "^7.1.1"
       },
       "engines": {
         "node": ">=8"
@@ -110,26 +145,56 @@
     "node_modules/buffer-equal-constant-time": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/buffer-equal-constant-time/-/buffer-equal-constant-time-1.0.1.tgz",
-      "integrity": "sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA=="
+      "integrity": "sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA==",
+      "license": "BSD-3-Clause"
+    },
+    "node_modules/buffer-from": {
+      "version": "1.1.2",
+      "resolved": "https://registry.npmjs.org/buffer-from/-/buffer-from-1.1.2.tgz",
+      "integrity": "sha512-E+XQCRwSbaaiChtv6k6Dwgc+bx+Bs6vuKJHHl5kox/BaKbhiXzqQOwK4cO22yElGp2OCmjwVhT3HmxgyPGnJfQ==",
+      "license": "MIT"
+    },
+    "node_modules/busboy": {
+      "version": "1.6.0",
+      "resolved": "https://registry.npmjs.org/busboy/-/busboy-1.6.0.tgz",
+      "integrity": "sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==",
+      "dependencies": {
+        "streamsearch": "^1.1.0"
+      },
+      "engines": {
+        "node": ">=10.16.0"
+      }
     },
     "node_modules/bytes": {
       "version": "3.1.2",
       "resolved": "https://registry.npmjs.org/bytes/-/bytes-3.1.2.tgz",
       "integrity": "sha512-/Nf7TyzTx6S3yRJObOAV7956r8cr2+Oj8AC5dt8wSP3BQAoeX58NoHyCU8P8zGkNXStjTSi6fzO6F0pBdcYbEg==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.8"
       }
     },
-    "node_modules/call-bind": {
-      "version": "1.0.7",
-      "resolved": "https://registry.npmjs.org/call-bind/-/call-bind-1.0.7.tgz",
-      "integrity": "sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==",
+    "node_modules/call-bind-apply-helpers": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/call-bind-apply-helpers/-/call-bind-apply-helpers-1.0.2.tgz",
+      "integrity": "sha512-Sp1ablJ0ivDkSzjcaJdxEunN5/XvksFJ2sMBFfq6x0ryhQV/2b/KwFe21cMpmHtPOSij8K99/wSfoEuTObmuMQ==",
+      "license": "MIT",
       "dependencies": {
-        "es-define-property": "^1.0.0",
         "es-errors": "^1.3.0",
-        "function-bind": "^1.1.2",
-        "get-intrinsic": "^1.2.4",
-        "set-function-length": "^1.2.1"
+        "function-bind": "^1.1.2"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/call-bound": {
+      "version": "1.0.4",
+      "resolved": "https://registry.npmjs.org/call-bound/-/call-bound-1.0.4.tgz",
+      "integrity": "sha512-+ys997U96po4Kx/ABpBCqhA9EuxJaQWDQg7295H4hBphv3IZg0boBKuwYpt4YXp6MZ5AmZQnU/tyMTlRpaSejg==",
+      "license": "MIT",
+      "dependencies": {
+        "call-bind-apply-helpers": "^1.0.2",
+        "get-intrinsic": "^1.3.0"
       },
       "engines": {
         "node": ">= 0.4"
@@ -143,6 +208,7 @@
       "resolved": "https://registry.npmjs.org/chokidar/-/chokidar-3.6.0.tgz",
       "integrity": "sha512-7VT13fmjotKpGipCW9JEQAusEPE+Ei8nl6/g4FBAmIm0GOOLMua9NDDo/DWp0ZAxCr3cPq5ZpBqmPAQgDda2Pw==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "anymatch": "~3.1.2",
         "braces": "~3.0.2",
@@ -166,12 +232,29 @@
       "version": "0.0.1",
       "resolved": "https://registry.npmjs.org/concat-map/-/concat-map-0.0.1.tgz",
       "integrity": "sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==",
-      "dev": true
+      "dev": true,
+      "license": "MIT"
+    },
+    "node_modules/concat-stream": {
+      "version": "1.6.2",
+      "resolved": "https://registry.npmjs.org/concat-stream/-/concat-stream-1.6.2.tgz",
+      "integrity": "sha512-27HBghJxjiZtIk3Ycvn/4kbJk/1uZuJFfuPEns6LaEvpvG1f0hTea8lilrouyo9mVc2GWdcEZ8OLoGmSADlrCw==",
+      "engines": [
+        "node >= 0.8"
+      ],
+      "license": "MIT",
+      "dependencies": {
+        "buffer-from": "^1.0.0",
+        "inherits": "^2.0.3",
+        "readable-stream": "^2.2.2",
+        "typedarray": "^0.0.6"
+      }
     },
     "node_modules/content-disposition": {
       "version": "0.5.4",
       "resolved": "https://registry.npmjs.org/content-disposition/-/content-disposition-0.5.4.tgz",
       "integrity": "sha512-FveZTNuGw04cxlAiWbzi6zTAL/lhehaWbTtgluJh4/E95DqMwTmha3KZN1aAWA8cFIhHzMZUvLevkw5Rqk+tSQ==",
+      "license": "MIT",
       "dependencies": {
         "safe-buffer": "5.2.1"
       },
@@ -183,24 +266,27 @@
       "version": "1.0.5",
       "resolved": "https://registry.npmjs.org/content-type/-/content-type-1.0.5.tgz",
       "integrity": "sha512-nTjqfcBFEipKdXCv4YDQWCfmcLZKm81ldF0pAopTvyrFGVbcR6P/VAAd5G7N+0tTr8QqiU0tFadD6FK4NtJwOA==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
     },
     "node_modules/cookie": {
-      "version": "0.4.1",
-      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.4.1.tgz",
-      "integrity": "sha512-ZwrFkGJxUR3EIoXtO+yVE69Eb7KlixbaeAWfBQB9vVsNn/o+Yw69gBWSSDK825hQNdN+wF8zELf3dFNl/kxkUA==",
+      "version": "0.7.2",
+      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.2.tgz",
+      "integrity": "sha512-yki5XnKuf750l50uGTllt6kKILY4nQ1eNIQatoXEByZ5dWgnKqbnqmTrBE5B4N7lrMJKQ2ytWMiTO2o0v6Ew/w==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
     },
     "node_modules/cookie-parser": {
-      "version": "1.4.6",
-      "resolved": "https://registry.npmjs.org/cookie-parser/-/cookie-parser-1.4.6.tgz",
-      "integrity": "sha512-z3IzaNjdwUC2olLIB5/ITd0/setiaFMLYiZJle7xg5Fe9KWAceil7xszYfHHBtDFYLSgJduS2Ty0P1uJdPDJeA==",
+      "version": "1.4.7",
+      "resolved": "https://registry.npmjs.org/cookie-parser/-/cookie-parser-1.4.7.tgz",
+      "integrity": "sha512-nGUvgXnotP3BsjiLX2ypbQnWoGUPIIfHQNZkkC668ntrzGWEZVW70HDEB1qnNGMicPje6EttlIgzo51YSwNQGw==",
+      "license": "MIT",
       "dependencies": {
-        "cookie": "0.4.1",
+        "cookie": "0.7.2",
         "cookie-signature": "1.0.6"
       },
       "engines": {
@@ -210,12 +296,20 @@
     "node_modules/cookie-signature": {
       "version": "1.0.6",
       "resolved": "https://registry.npmjs.org/cookie-signature/-/cookie-signature-1.0.6.tgz",
-      "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ=="
+      "integrity": "sha512-QADzlaHc8icV8I7vbaJXJwod9HWYp8uCqf1xa4OfNu1T7JVxQIrUgOWtHdNDtPiywmFbiS12VjotIXLrKM3orQ==",
+      "license": "MIT"
+    },
+    "node_modules/core-util-is": {
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/core-util-is/-/core-util-is-1.0.3.tgz",
+      "integrity": "sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==",
+      "license": "MIT"
     },
     "node_modules/cors": {
       "version": "2.8.5",
       "resolved": "https://registry.npmjs.org/cors/-/cors-2.8.5.tgz",
       "integrity": "sha512-KIHbLJqu73RGr/hnbrO9uBeixNGuvSQjul/jdFvS/KFSIH1hWVd1ng7zOHx+YrEfInLG7q4n6GHQ9cDtxv/P6g==",
+      "license": "MIT",
       "dependencies": {
         "object-assign": "^4",
         "vary": "^1"
@@ -228,30 +322,16 @@
       "version": "2.6.9",
       "resolved": "https://registry.npmjs.org/debug/-/debug-2.6.9.tgz",
       "integrity": "sha512-bC7ElrdJaJnPbAP+1EotYvqZsb3ecl5wi6Bfi6BJTUcNowp6cvspg0jXznRTKDjm/E7AdgFBVeAPVMNcKGsHMA==",
+      "license": "MIT",
       "dependencies": {
         "ms": "2.0.0"
       }
     },
-    "node_modules/define-data-property": {
-      "version": "1.1.4",
-      "resolved": "https://registry.npmjs.org/define-data-property/-/define-data-property-1.1.4.tgz",
-      "integrity": "sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==",
-      "dependencies": {
-        "es-define-property": "^1.0.0",
-        "es-errors": "^1.3.0",
-        "gopd": "^1.0.1"
-      },
-      "engines": {
-        "node": ">= 0.4"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/ljharb"
-      }
-    },
     "node_modules/depd": {
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/depd/-/depd-2.0.0.tgz",
       "integrity": "sha512-g7nH6P6dyDioJogAAGprGpCtVImJhpPk/roCzdb3fIh61/s/nPsfR6onyMwkCAR/OlC3yBC0lESvUoQEAssIrw==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.8"
       }
@@ -260,15 +340,17 @@
       "version": "1.2.0",
       "resolved": "https://registry.npmjs.org/destroy/-/destroy-1.2.0.tgz",
       "integrity": "sha512-2sJGJTaXIIaR1w4iJSNoN0hnMY7Gpc/n8D4qSCJw8QqFWXf7cuAgnEHxBpweaVcPevC2l3KpjYCx3NypQQgaJg==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.8",
         "npm": "1.2.8000 || >= 1.4.16"
       }
     },
     "node_modules/dotenv": {
-      "version": "16.4.5",
-      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-16.4.5.tgz",
-      "integrity": "sha512-ZmdL2rui+eB2YwhsWzjInR8LldtZHGDoQ1ugH85ppHKwpUHL7j7rN0Ti9NCnGiQbhaZ11FpR+7ao1dNsmduNUg==",
+      "version": "16.6.1",
+      "resolved": "https://registry.npmjs.org/dotenv/-/dotenv-16.6.1.tgz",
+      "integrity": "sha512-uBq4egWHTcTt33a72vpSG0z3HnPuIl6NqYcTrKEg2azoEyl2hpW0zqlxysq2pK9HlDIHyHyakeYaYnSAwd8bow==",
+      "license": "BSD-2-Clause",
       "engines": {
         "node": ">=12"
       },
@@ -277,17 +359,33 @@
       }
     },
     "node_modules/doublylinked": {
-      "version": "2.5.4",
-      "resolved": "https://registry.npmjs.org/doublylinked/-/doublylinked-2.5.4.tgz",
-      "integrity": "sha512-jBCKDnFkEHJRjQvYEl5N9VngRV8ypHgw6a52OK4VN57eV2r2rYvgOx9uABdY78INNoW7S6auULp+KBVm/jfYqw==",
+      "version": "2.5.6",
+      "resolved": "https://registry.npmjs.org/doublylinked/-/doublylinked-2.5.6.tgz",
+      "integrity": "sha512-oskbNBycNHjQ0Zg/5DMYiqFnSeblM2BSc2Ehu5+PyBay0ESlullPp0YEjlwtG3QtN4Fb7hC9USJqNyTMftl/1A==",
+      "license": "MIT",
       "engines": {
-        "node": ">= 10.0"
+        "node": ">= 16.0"
+      }
+    },
+    "node_modules/dunder-proto": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/dunder-proto/-/dunder-proto-1.0.1.tgz",
+      "integrity": "sha512-KIN/nDJBQRcXw0MLVhZE9iQHmG68qAVIBg9CqmUYjmQIhgij9U5MFvrqkUL5FbtyyzZuOeOt0zdeRe4UY7ct+A==",
+      "license": "MIT",
+      "dependencies": {
+        "call-bind-apply-helpers": "^1.0.1",
+        "es-errors": "^1.3.0",
+        "gopd": "^1.2.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
       }
     },
     "node_modules/ecdsa-sig-formatter": {
       "version": "1.0.11",
       "resolved": "https://registry.npmjs.org/ecdsa-sig-formatter/-/ecdsa-sig-formatter-1.0.11.tgz",
       "integrity": "sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==",
+      "license": "Apache-2.0",
       "dependencies": {
         "safe-buffer": "^5.0.1"
       }
@@ -295,23 +393,23 @@
     "node_modules/ee-first": {
       "version": "1.1.1",
       "resolved": "https://registry.npmjs.org/ee-first/-/ee-first-1.1.1.tgz",
-      "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow=="
+      "integrity": "sha512-WMwm9LhRUo+WUaRN+vRuETqG89IgZphVSNkdFgeb6sS/E4OrDIN7t48CAewSHXc6C8lefD8KKfr5vY61brQlow==",
+      "license": "MIT"
     },
     "node_modules/encodeurl": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
-      "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==",
+      "version": "2.0.0",
+      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-2.0.0.tgz",
+      "integrity": "sha512-Q0n9HRi4m6JuGIV1eFlmvJB7ZEVxu93IrMyiMsGC0lrMJMWzRgx6WGquyfQgZVb31vhGgXnfmPNNXmxnOkRBrg==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.8"
       }
     },
     "node_modules/es-define-property": {
-      "version": "1.0.0",
-      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.0.tgz",
-      "integrity": "sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==",
-      "dependencies": {
-        "get-intrinsic": "^1.2.4"
-      },
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/es-define-property/-/es-define-property-1.0.1.tgz",
+      "integrity": "sha512-e3nRfgfUZ4rNGL232gUgX06QNyyez04KdjFrF+LTRoOXmrOgFKDg4BCdsjW8EnT69eqdYGmRpJwiPVYNrCaW3g==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.4"
       }
@@ -320,6 +418,19 @@
       "version": "1.3.0",
       "resolved": "https://registry.npmjs.org/es-errors/-/es-errors-1.3.0.tgz",
       "integrity": "sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
+    "node_modules/es-object-atoms": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/es-object-atoms/-/es-object-atoms-1.1.1.tgz",
+      "integrity": "sha512-FGgH2h8zKNim9ljj7dankFPcICIK9Cp5bm+c2gQSYePhpaG5+esrLODihIorn+Pe6FGJzWhXQotPv73jTaldXA==",
+      "license": "MIT",
+      "dependencies": {
+        "es-errors": "^1.3.0"
+      },
       "engines": {
         "node": ">= 0.4"
       }
@@ -327,47 +438,50 @@
     "node_modules/escape-html": {
       "version": "1.0.3",
       "resolved": "https://registry.npmjs.org/escape-html/-/escape-html-1.0.3.tgz",
-      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow=="
+      "integrity": "sha512-NiSupZ4OeuGwr68lGIeym/ksIZMJodUGOSCZ/FSnTxcrekbvqrgdUxlJOMpijaKZVjAJrWrGs/6Jy8OMuyj9ow==",
+      "license": "MIT"
     },
     "node_modules/etag": {
       "version": "1.8.1",
       "resolved": "https://registry.npmjs.org/etag/-/etag-1.8.1.tgz",
       "integrity": "sha512-aIL5Fx7mawVa300al2BnEE4iNvo1qETxLrPI/o05L7z6go7fCw1J6EQmbK4FmJ2AS7kgVF/KEZWufBfdClMcPg==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
     },
     "node_modules/express": {
-      "version": "4.19.2",
-      "resolved": "https://registry.npmjs.org/express/-/express-4.19.2.tgz",
-      "integrity": "sha512-5T6nhjsT+EOMzuck8JjBHARTHfMht0POzlA60WV2pMD3gyXw2LZnZ+ueGdNxG+0calOJcWKbpFcuzLZ91YWq9Q==",
+      "version": "4.21.2",
+      "resolved": "https://registry.npmjs.org/express/-/express-4.21.2.tgz",
+      "integrity": "sha512-28HqgMZAmih1Czt9ny7qr6ek2qddF4FclbMzwhCREB6OFfH+rXAnuNCwo1/wFvrtbgsQDb4kSbX9de9lFbrXnA==",
+      "license": "MIT",
       "dependencies": {
         "accepts": "~1.3.8",
         "array-flatten": "1.1.1",
-        "body-parser": "1.20.2",
+        "body-parser": "1.20.3",
         "content-disposition": "0.5.4",
         "content-type": "~1.0.4",
-        "cookie": "0.6.0",
+        "cookie": "0.7.1",
         "cookie-signature": "1.0.6",
         "debug": "2.6.9",
         "depd": "2.0.0",
-        "encodeurl": "~1.0.2",
+        "encodeurl": "~2.0.0",
         "escape-html": "~1.0.3",
         "etag": "~1.8.1",
-        "finalhandler": "1.2.0",
+        "finalhandler": "1.3.1",
         "fresh": "0.5.2",
         "http-errors": "2.0.0",
-        "merge-descriptors": "1.0.1",
+        "merge-descriptors": "1.0.3",
         "methods": "~1.1.2",
         "on-finished": "2.4.1",
         "parseurl": "~1.3.3",
-        "path-to-regexp": "0.1.7",
+        "path-to-regexp": "0.1.12",
         "proxy-addr": "~2.0.7",
-        "qs": "6.11.0",
+        "qs": "6.13.0",
         "range-parser": "~1.2.1",
         "safe-buffer": "5.2.1",
-        "send": "0.18.0",
-        "serve-static": "1.15.0",
+        "send": "0.19.0",
+        "serve-static": "1.16.2",
         "setprototypeof": "1.2.0",
         "statuses": "2.0.1",
         "type-is": "~1.6.18",
@@ -376,21 +490,27 @@
       },
       "engines": {
         "node": ">= 0.10.0"
+      },
+      "funding": {
+        "type": "opencollective",
+        "url": "https://opencollective.com/express"
       }
     },
     "node_modules/express/node_modules/cookie": {
-      "version": "0.6.0",
-      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.6.0.tgz",
-      "integrity": "sha512-U71cyTamuh1CRNCfpGY6to28lxvNwPG4Guz/EVjgf3Jmzv0vlDp1atT9eS5dDjMYHucpHbWns6Lwf3BKz6svdw==",
+      "version": "0.7.1",
+      "resolved": "https://registry.npmjs.org/cookie/-/cookie-0.7.1.tgz",
+      "integrity": "sha512-6DnInpx7SJ2AK3+CTUE/ZM0vWTUboZCegxhC2xiIydHR9jNuTAASBrfEpHhiGOZw/nX51bHt6YQl8jsGo4y/0w==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
     },
     "node_modules/fill-range": {
-      "version": "7.0.1",
-      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.0.1.tgz",
-      "integrity": "sha512-qOo9F+dMUmC2Lcb4BbVvnKJxTPjCm+RRpe4gDuGrzkL7mEVl/djYSu2OdQ2Pa302N4oqkSg9ir6jaLWJ2USVpQ==",
+      "version": "7.1.1",
+      "resolved": "https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz",
+      "integrity": "sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "to-regex-range": "^5.0.1"
       },
@@ -399,12 +519,13 @@
       }
     },
     "node_modules/finalhandler": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.2.0.tgz",
-      "integrity": "sha512-5uXcUVftlQMFnWC9qu/svkWv3GTd2PfUhK/3PLkYNAe7FbqJMt3515HaxE6eRL74GdsriiwujiawdaB1BpEISg==",
+      "version": "1.3.1",
+      "resolved": "https://registry.npmjs.org/finalhandler/-/finalhandler-1.3.1.tgz",
+      "integrity": "sha512-6BN9trH7bp3qvnrRyzsBz+g3lZxTNZTbVO2EV1CS0WIcDbawYVdYvGflME/9QP0h0pYlCDBCTjYa9nZzMDpyxQ==",
+      "license": "MIT",
       "dependencies": {
         "debug": "2.6.9",
-        "encodeurl": "~1.0.2",
+        "encodeurl": "~2.0.0",
         "escape-html": "~1.0.3",
         "on-finished": "2.4.1",
         "parseurl": "~1.3.3",
@@ -419,6 +540,7 @@
       "version": "0.2.0",
       "resolved": "https://registry.npmjs.org/forwarded/-/forwarded-0.2.0.tgz",
       "integrity": "sha512-buRG0fpBtRHSTCOASe6hD258tEubFoRLb4ZNA6NxMVHNw2gOcwHo9wyablzMzOA5z9xA9L1KNjk/Nt6MT9aYow==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
@@ -427,6 +549,7 @@
       "version": "0.5.2",
       "resolved": "https://registry.npmjs.org/fresh/-/fresh-0.5.2.tgz",
       "integrity": "sha512-zJ2mQYM18rEFOudeV4GShTGIQ7RbzA7ozbU9I/XBpm7kqgMywgmylMwXHxZJmkVoYkna9d2pVXVXPdYTP9ej8Q==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
@@ -435,20 +558,27 @@
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/function-bind/-/function-bind-1.1.2.tgz",
       "integrity": "sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==",
+      "license": "MIT",
       "funding": {
         "url": "https://github.com/sponsors/ljharb"
       }
     },
     "node_modules/get-intrinsic": {
-      "version": "1.2.4",
-      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.2.4.tgz",
-      "integrity": "sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==",
+      "version": "1.3.0",
+      "resolved": "https://registry.npmjs.org/get-intrinsic/-/get-intrinsic-1.3.0.tgz",
+      "integrity": "sha512-9fSjSaos/fRIVIp+xSJlE6lfwhES7LNtKaCBIamHsjr2na1BiABJPo0mOjjz8GJDURarmCPGqaiVg5mfjb98CQ==",
+      "license": "MIT",
       "dependencies": {
+        "call-bind-apply-helpers": "^1.0.2",
+        "es-define-property": "^1.0.1",
         "es-errors": "^1.3.0",
+        "es-object-atoms": "^1.1.1",
         "function-bind": "^1.1.2",
-        "has-proto": "^1.0.1",
-        "has-symbols": "^1.0.3",
-        "hasown": "^2.0.0"
+        "get-proto": "^1.0.1",
+        "gopd": "^1.2.0",
+        "has-symbols": "^1.1.0",
+        "hasown": "^2.0.2",
+        "math-intrinsics": "^1.1.0"
       },
       "engines": {
         "node": ">= 0.4"
@@ -457,11 +587,25 @@
         "url": "https://github.com/sponsors/ljharb"
       }
     },
+    "node_modules/get-proto": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/get-proto/-/get-proto-1.0.1.tgz",
+      "integrity": "sha512-sTSfBjoXBp89JvIKIefqw7U2CCebsc74kiY6awiGogKtoSGbgjYE/G/+l9sF3MWFPNc9IcoOC4ODfKHfxFmp0g==",
+      "license": "MIT",
+      "dependencies": {
+        "dunder-proto": "^1.0.1",
+        "es-object-atoms": "^1.0.0"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      }
+    },
     "node_modules/glob-parent": {
       "version": "5.1.2",
       "resolved": "https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz",
       "integrity": "sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==",
       "dev": true,
+      "license": "ISC",
       "dependencies": {
         "is-glob": "^4.0.1"
       },
@@ -470,11 +614,12 @@
       }
     },
     "node_modules/gopd": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.0.1.tgz",
-      "integrity": "sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==",
-      "dependencies": {
-        "get-intrinsic": "^1.1.3"
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/gopd/-/gopd-1.2.0.tgz",
+      "integrity": "sha512-ZUKRh6/kUFoAiTAtTYPZJ3hw9wNxx+BIBOijnlG9PnrJsCcSjs1wyyD6vJpaYtgnzDrKYRSqf3OO6Rfa93xsRg==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
       },
       "funding": {
         "url": "https://github.com/sponsors/ljharb"
@@ -485,36 +630,16 @@
       "resolved": "https://registry.npmjs.org/has-flag/-/has-flag-3.0.0.tgz",
       "integrity": "sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==",
       "dev": true,
+      "license": "MIT",
       "engines": {
         "node": ">=4"
       }
     },
-    "node_modules/has-property-descriptors": {
-      "version": "1.0.2",
-      "resolved": "https://registry.npmjs.org/has-property-descriptors/-/has-property-descriptors-1.0.2.tgz",
-      "integrity": "sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==",
-      "dependencies": {
-        "es-define-property": "^1.0.0"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/ljharb"
-      }
-    },
-    "node_modules/has-proto": {
-      "version": "1.0.3",
-      "resolved": "https://registry.npmjs.org/has-proto/-/has-proto-1.0.3.tgz",
-      "integrity": "sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==",
-      "engines": {
-        "node": ">= 0.4"
-      },
-      "funding": {
-        "url": "https://github.com/sponsors/ljharb"
-      }
-    },
     "node_modules/has-symbols": {
-      "version": "1.0.3",
-      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.0.3.tgz",
-      "integrity": "sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==",
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/has-symbols/-/has-symbols-1.1.0.tgz",
+      "integrity": "sha512-1cDNdwJ2Jaohmb3sg4OmKaMBwuC48sYni5HUw2DvsC8LjGTLK9h+eb1X6RyuOHe4hT0ULCW68iomhjUoKUqlPQ==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.4"
       },
@@ -526,6 +651,7 @@
       "version": "2.0.2",
       "resolved": "https://registry.npmjs.org/hasown/-/hasown-2.0.2.tgz",
       "integrity": "sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==",
+      "license": "MIT",
       "dependencies": {
         "function-bind": "^1.1.2"
       },
@@ -537,6 +663,7 @@
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/http-errors/-/http-errors-2.0.0.tgz",
       "integrity": "sha512-FtwrG/euBzaEjYeRqOgly7G0qviiXoJWnvEH2Z1plBdXgbyjv34pHTSb9zoeHMyDy33+DWy5Wt9Wo+TURtOYSQ==",
+      "license": "MIT",
       "dependencies": {
         "depd": "2.0.0",
         "inherits": "2.0.4",
@@ -551,12 +678,14 @@
     "node_modules/http-status-codes": {
       "version": "2.3.0",
       "resolved": "https://registry.npmjs.org/http-status-codes/-/http-status-codes-2.3.0.tgz",
-      "integrity": "sha512-RJ8XvFvpPM/Dmc5SV+dC4y5PCeOhT3x1Hq0NU3rjGeg5a/CqlhZ7uudknPwZFz4aeAXDcbAyaeP7GAo9lvngtA=="
+      "integrity": "sha512-RJ8XvFvpPM/Dmc5SV+dC4y5PCeOhT3x1Hq0NU3rjGeg5a/CqlhZ7uudknPwZFz4aeAXDcbAyaeP7GAo9lvngtA==",
+      "license": "MIT"
     },
     "node_modules/iconv-lite": {
       "version": "0.4.24",
       "resolved": "https://registry.npmjs.org/iconv-lite/-/iconv-lite-0.4.24.tgz",
       "integrity": "sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==",
+      "license": "MIT",
       "dependencies": {
         "safer-buffer": ">= 2.1.2 < 3"
       },
@@ -568,17 +697,20 @@
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/ignore-by-default/-/ignore-by-default-1.0.1.tgz",
       "integrity": "sha512-Ius2VYcGNk7T90CppJqcIkS5ooHUZyIQK+ClZfMfMNFEF9VSE73Fq+906u/CWu92x4gzZMWOwfFYckPObzdEbA==",
-      "dev": true
+      "dev": true,
+      "license": "ISC"
     },
     "node_modules/inherits": {
       "version": "2.0.4",
       "resolved": "https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz",
-      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ=="
+      "integrity": "sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==",
+      "license": "ISC"
     },
     "node_modules/ipaddr.js": {
       "version": "1.9.1",
       "resolved": "https://registry.npmjs.org/ipaddr.js/-/ipaddr.js-1.9.1.tgz",
       "integrity": "sha512-0KI/607xoxSToH7GjN1FfSbLoU0+btTicjsQSWQlh/hZykN8KpmMf7uYwPW3R+akZ6R/w18ZlXSHBYXiYUPO3g==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.10"
       }
@@ -588,6 +720,7 @@
       "resolved": "https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz",
       "integrity": "sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "binary-extensions": "^2.0.0"
       },
@@ -600,6 +733,7 @@
       "resolved": "https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz",
       "integrity": "sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==",
       "dev": true,
+      "license": "MIT",
       "engines": {
         "node": ">=0.10.0"
       }
@@ -609,6 +743,7 @@
       "resolved": "https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz",
       "integrity": "sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "is-extglob": "^2.1.1"
       },
@@ -621,14 +756,22 @@
       "resolved": "https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz",
       "integrity": "sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==",
       "dev": true,
+      "license": "MIT",
       "engines": {
         "node": ">=0.12.0"
       }
     },
+    "node_modules/isarray": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/isarray/-/isarray-1.0.0.tgz",
+      "integrity": "sha512-VLghIWNM6ELQzo7zwmcg0NmTVyWKYjvIeM83yjp0wRDTmUnrM678fQbcKBo6n2CJEF0szoG//ytg+TKla89ALQ==",
+      "license": "MIT"
+    },
     "node_modules/jsonwebtoken": {
       "version": "9.0.2",
       "resolved": "https://registry.npmjs.org/jsonwebtoken/-/jsonwebtoken-9.0.2.tgz",
       "integrity": "sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==",
+      "license": "MIT",
       "dependencies": {
         "jws": "^3.2.2",
         "lodash.includes": "^4.3.0",
@@ -649,14 +792,16 @@
     "node_modules/jsonwebtoken/node_modules/ms": {
       "version": "2.1.3",
       "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
-      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="
+      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
+      "license": "MIT"
     },
     "node_modules/jwa": {
-      "version": "1.4.1",
-      "resolved": "https://registry.npmjs.org/jwa/-/jwa-1.4.1.tgz",
-      "integrity": "sha512-qiLX/xhEEFKUAJ6FiBMbes3w9ATzyk5W7Hvzpa/SLYdxNtng+gcurvrI7TbACjIXlsJyr05/S1oUhZrc63evQA==",
+      "version": "1.4.2",
+      "resolved": "https://registry.npmjs.org/jwa/-/jwa-1.4.2.tgz",
+      "integrity": "sha512-eeH5JO+21J78qMvTIDdBXidBd6nG2kZjg5Ohz/1fpa28Z4CcsWUzJ1ZZyFq/3z3N17aZy+ZuBoHljASbL1WfOw==",
+      "license": "MIT",
       "dependencies": {
-        "buffer-equal-constant-time": "1.0.1",
+        "buffer-equal-constant-time": "^1.0.1",
         "ecdsa-sig-formatter": "1.0.11",
         "safe-buffer": "^5.0.1"
       }
@@ -665,72 +810,97 @@
       "version": "3.2.2",
       "resolved": "https://registry.npmjs.org/jws/-/jws-3.2.2.tgz",
       "integrity": "sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==",
+      "license": "MIT",
       "dependencies": {
         "jwa": "^1.4.1",
         "safe-buffer": "^5.0.1"
       }
     },
     "node_modules/lightning-pool": {
-      "version": "4.2.2",
-      "resolved": "https://registry.npmjs.org/lightning-pool/-/lightning-pool-4.2.2.tgz",
-      "integrity": "sha512-KW0Df0IbjNLxy5wAsdErTKYtHGwefLRQseHNksEctyaL7gtRwJT0nqLa2uiRdNYDwKSnZtqOjSjUNtfxmfH1qw==",
+      "version": "4.11.1",
+      "resolved": "https://registry.npmjs.org/lightning-pool/-/lightning-pool-4.11.1.tgz",
+      "integrity": "sha512-I/+aDkeFvKrdC204UcGbLuVTmGaSBP6F2VtWLuFtHCn0/bzuYKpei8Z+P4+HYE3lmJdGfNHVFjLeYLQaxmpymQ==",
+      "license": "MIT",
       "dependencies": {
-        "doublylinked": "^2.5.3",
-        "putil-promisify": "^1.10.1"
+        "doublylinked": "^2.5.6",
+        "putil-promisify": "^1.10.1",
+        "tslib": "^2.8.1"
       }
     },
     "node_modules/lodash.includes": {
       "version": "4.3.0",
       "resolved": "https://registry.npmjs.org/lodash.includes/-/lodash.includes-4.3.0.tgz",
-      "integrity": "sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w=="
+      "integrity": "sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w==",
+      "license": "MIT"
     },
     "node_modules/lodash.isboolean": {
       "version": "3.0.3",
       "resolved": "https://registry.npmjs.org/lodash.isboolean/-/lodash.isboolean-3.0.3.tgz",
-      "integrity": "sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg=="
+      "integrity": "sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg==",
+      "license": "MIT"
     },
     "node_modules/lodash.isinteger": {
       "version": "4.0.4",
       "resolved": "https://registry.npmjs.org/lodash.isinteger/-/lodash.isinteger-4.0.4.tgz",
-      "integrity": "sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA=="
+      "integrity": "sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA==",
+      "license": "MIT"
     },
     "node_modules/lodash.isnumber": {
       "version": "3.0.3",
       "resolved": "https://registry.npmjs.org/lodash.isnumber/-/lodash.isnumber-3.0.3.tgz",
-      "integrity": "sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw=="
+      "integrity": "sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw==",
+      "license": "MIT"
     },
     "node_modules/lodash.isplainobject": {
       "version": "4.0.6",
       "resolved": "https://registry.npmjs.org/lodash.isplainobject/-/lodash.isplainobject-4.0.6.tgz",
-      "integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA=="
+      "integrity": "sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==",
+      "license": "MIT"
     },
     "node_modules/lodash.isstring": {
       "version": "4.0.1",
       "resolved": "https://registry.npmjs.org/lodash.isstring/-/lodash.isstring-4.0.1.tgz",
-      "integrity": "sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw=="
+      "integrity": "sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==",
+      "license": "MIT"
     },
     "node_modules/lodash.once": {
       "version": "4.1.1",
       "resolved": "https://registry.npmjs.org/lodash.once/-/lodash.once-4.1.1.tgz",
-      "integrity": "sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg=="
+      "integrity": "sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg==",
+      "license": "MIT"
+    },
+    "node_modules/math-intrinsics": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/math-intrinsics/-/math-intrinsics-1.1.0.tgz",
+      "integrity": "sha512-/IXtbwEk5HTPyEwyKX6hGkYXxM9nbj64B+ilVJnC/R6B0pH5G4V3b0pVbL7DBj4tkhBAppbQUlf6F6Xl9LHu1g==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      }
     },
     "node_modules/media-typer": {
       "version": "0.3.0",
       "resolved": "https://registry.npmjs.org/media-typer/-/media-typer-0.3.0.tgz",
       "integrity": "sha512-dq+qelQ9akHpcOl/gUVRTxVIOkAJ1wR3QAvb4RsVjS8oVoFjDGTc679wJYmUmknUF5HwMLOgb5O+a3KxfWapPQ==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
     },
     "node_modules/merge-descriptors": {
-      "version": "1.0.1",
-      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.1.tgz",
-      "integrity": "sha512-cCi6g3/Zr1iqQi6ySbseM1Xvooa98N0w31jzUYrXPX2xqObmFGHJ0tQ5u74H3mVh7wLouTseZyYIq39g8cNp1w=="
+      "version": "1.0.3",
+      "resolved": "https://registry.npmjs.org/merge-descriptors/-/merge-descriptors-1.0.3.tgz",
+      "integrity": "sha512-gaNvAS7TZ897/rVaZ0nMtAyxNyi/pdbjbAwUpFQpN70GqnVfOiXpeUUMKRBmzXaSQ8DdTX4/0ms62r2K+hE6mQ==",
+      "license": "MIT",
+      "funding": {
+        "url": "https://github.com/sponsors/sindresorhus"
+      }
     },
     "node_modules/methods": {
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/methods/-/methods-1.1.2.tgz",
       "integrity": "sha512-iclAHeNqNm68zFtnZ0e+1L2yUIdvzNoauKU4WBA3VvH/vPFieF7qfRlwUZU+DA9P9bPXIS90ulxoUoCH23sV2w==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
@@ -739,6 +909,7 @@
       "version": "1.6.0",
       "resolved": "https://registry.npmjs.org/mime/-/mime-1.6.0.tgz",
       "integrity": "sha512-x0Vn8spI+wuJ1O6S7gnbaQg8Pxh4NNHb7KSINmEWKiPE4RKOplvijn+NkmYmmRgP68mc70j2EbeTFRsrswaQeg==",
+      "license": "MIT",
       "bin": {
         "mime": "cli.js"
       },
@@ -750,6 +921,7 @@
       "version": "1.52.0",
       "resolved": "https://registry.npmjs.org/mime-db/-/mime-db-1.52.0.tgz",
       "integrity": "sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
@@ -758,6 +930,7 @@
       "version": "2.1.35",
       "resolved": "https://registry.npmjs.org/mime-types/-/mime-types-2.1.35.tgz",
       "integrity": "sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==",
+      "license": "MIT",
       "dependencies": {
         "mime-db": "1.52.0"
       },
@@ -770,6 +943,7 @@
       "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
       "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
       "dev": true,
+      "license": "ISC",
       "dependencies": {
         "brace-expansion": "^1.1.7"
       },
@@ -777,24 +951,87 @@
         "node": "*"
       }
     },
+    "node_modules/minimist": {
+      "version": "1.2.8",
+      "resolved": "https://registry.npmjs.org/minimist/-/minimist-1.2.8.tgz",
+      "integrity": "sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==",
+      "license": "MIT",
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/mkdirp": {
+      "version": "0.5.6",
+      "resolved": "https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.6.tgz",
+      "integrity": "sha512-FP+p8RB8OWpF3YZBCrP5gtADmtXApB5AMLn+vdyA+PyxCjrCs00mjyUozssO33cwDeT3wNGdLxJ5M//YqtHAJw==",
+      "license": "MIT",
+      "dependencies": {
+        "minimist": "^1.2.6"
+      },
+      "bin": {
+        "mkdirp": "bin/cmd.js"
+      }
+    },
     "node_modules/ms": {
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/ms/-/ms-2.0.0.tgz",
-      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A=="
+      "integrity": "sha512-Tpp60P6IUJDTuOq/5Z8cdskzJujfwqfOTkrwIwj7IRISpnkJnT6SyJ4PCPnGMoFjC9ddhal5KVIYtAt97ix05A==",
+      "license": "MIT"
+    },
+    "node_modules/multer": {
+      "version": "1.4.5-lts.2",
+      "resolved": "https://registry.npmjs.org/multer/-/multer-1.4.5-lts.2.tgz",
+      "integrity": "sha512-VzGiVigcG9zUAoCNU+xShztrlr1auZOlurXynNvO9GiWD1/mTBbUljOKY+qMeazBqXgRnjzeEgJI/wyjJUHg9A==",
+      "deprecated": "Multer 1.x is impacted by a number of vulnerabilities, which have been patched in 2.x. You should upgrade to the latest 2.x version.",
+      "license": "MIT",
+      "dependencies": {
+        "append-field": "^1.0.0",
+        "busboy": "^1.0.0",
+        "concat-stream": "^1.5.2",
+        "mkdirp": "^0.5.4",
+        "object-assign": "^4.1.1",
+        "type-is": "^1.6.4",
+        "xtend": "^4.0.0"
+      },
+      "engines": {
+        "node": ">= 6.0.0"
+      }
     },
     "node_modules/negotiator": {
       "version": "0.6.3",
       "resolved": "https://registry.npmjs.org/negotiator/-/negotiator-0.6.3.tgz",
       "integrity": "sha512-+EUsqGPLsM+j/zdChZjsnX51g4XrHFOIXwfnCVPGlQk/k5giakcKsuxCObBRu6DSm9opw/O6slWbJdghQM4bBg==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
     },
+    "node_modules/node-addon-api": {
+      "version": "8.5.0",
+      "resolved": "https://registry.npmjs.org/node-addon-api/-/node-addon-api-8.5.0.tgz",
+      "integrity": "sha512-/bRZty2mXUIFY/xU5HLvveNHlswNJej+RnxBjOMkidWfwZzgTbPG1E3K5TOxRLOR+5hX7bSofy8yf1hZevMS8A==",
+      "license": "MIT",
+      "engines": {
+        "node": "^18 || ^20 || >= 21"
+      }
+    },
+    "node_modules/node-gyp-build": {
+      "version": "4.8.4",
+      "resolved": "https://registry.npmjs.org/node-gyp-build/-/node-gyp-build-4.8.4.tgz",
+      "integrity": "sha512-LA4ZjwlnUblHVgq0oBF3Jl/6h/Nvs5fzBLwdEF4nuxnFdsfajde4WfxtJr3CaiH+F6ewcIB/q4jQ4UzPyid+CQ==",
+      "license": "MIT",
+      "bin": {
+        "node-gyp-build": "bin.js",
+        "node-gyp-build-optional": "optional.js",
+        "node-gyp-build-test": "build-test.js"
+      }
+    },
     "node_modules/nodemon": {
-      "version": "3.1.0",
-      "resolved": "https://registry.npmjs.org/nodemon/-/nodemon-3.1.0.tgz",
-      "integrity": "sha512-xqlktYlDMCepBJd43ZQhjWwMw2obW/JRvkrLxq5RCNcuDDX1DbcPT+qT1IlIIdf+DhnWs90JpTMe+Y5KxOchvA==",
+      "version": "3.1.10",
+      "resolved": "https://registry.npmjs.org/nodemon/-/nodemon-3.1.10.tgz",
+      "integrity": "sha512-WDjw3pJ0/0jMFmyNDp3gvY2YizjLmmOUQo6DEBY+JgdvW/yQ9mEeSw6H5ythl5Ny2ytb7f9C2nIbjSxMNzbJXw==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "chokidar": "^3.5.2",
         "debug": "^4",
@@ -819,12 +1056,13 @@
       }
     },
     "node_modules/nodemon/node_modules/debug": {
-      "version": "4.3.4",
-      "resolved": "https://registry.npmjs.org/debug/-/debug-4.3.4.tgz",
-      "integrity": "sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==",
+      "version": "4.4.1",
+      "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.1.tgz",
+      "integrity": "sha512-KcKCqiftBJcZr++7ykoDIEwSa3XWowTfNPo92BYxjXiyYEVrUQh2aLyhxBCwww+heortUFxEJYcRzosstTEBYQ==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
-        "ms": "2.1.2"
+        "ms": "^2.1.3"
       },
       "engines": {
         "node": ">=6.0"
@@ -836,31 +1074,18 @@
       }
     },
     "node_modules/nodemon/node_modules/ms": {
-      "version": "2.1.2",
-      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.2.tgz",
-      "integrity": "sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==",
-      "dev": true
-    },
-    "node_modules/nopt": {
-      "version": "1.0.10",
-      "resolved": "https://registry.npmjs.org/nopt/-/nopt-1.0.10.tgz",
-      "integrity": "sha512-NWmpvLSqUrgrAC9HCuxEvb+PSloHpqVu+FqcO4eeF2h5qYRhA7ev6KvelyQAKtegUbC6RypJnlEOhd8vloNKYg==",
+      "version": "2.1.3",
+      "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
+      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
       "dev": true,
-      "dependencies": {
-        "abbrev": "1"
-      },
-      "bin": {
-        "nopt": "bin/nopt.js"
-      },
-      "engines": {
-        "node": "*"
-      }
+      "license": "MIT"
     },
     "node_modules/normalize-path": {
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz",
       "integrity": "sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==",
       "dev": true,
+      "license": "MIT",
       "engines": {
         "node": ">=0.10.0"
       }
@@ -869,14 +1094,19 @@
       "version": "4.1.1",
       "resolved": "https://registry.npmjs.org/object-assign/-/object-assign-4.1.1.tgz",
       "integrity": "sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==",
+      "license": "MIT",
       "engines": {
         "node": ">=0.10.0"
       }
     },
     "node_modules/object-inspect": {
-      "version": "1.13.1",
-      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.1.tgz",
-      "integrity": "sha512-5qoj1RUiKOMsCCNLV1CBiPYE10sziTsnmNxkAI/rZhiD63CF7IqdFGC/XzjWjpSgLf0LxXX3bDFIh0E18f6UhQ==",
+      "version": "1.13.4",
+      "resolved": "https://registry.npmjs.org/object-inspect/-/object-inspect-1.13.4.tgz",
+      "integrity": "sha512-W67iLl4J2EXEGTbfeHCffrjDfitvLANg0UlX3wFUUSTx92KXRFegMHUVgSqE+wvhAbi4WqjGg9czysTV2Epbew==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.4"
+      },
       "funding": {
         "url": "https://github.com/sponsors/ljharb"
       }
@@ -884,12 +1114,14 @@
     "node_modules/obuf": {
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/obuf/-/obuf-1.1.2.tgz",
-      "integrity": "sha512-PX1wu0AmAdPqOL1mWhqmlOd8kOIZQwGZw6rh7uby9fTc5lhaOWFLX3I6R1hrF9k3zUY40e6igsLGkDXK92LJNg=="
+      "integrity": "sha512-PX1wu0AmAdPqOL1mWhqmlOd8kOIZQwGZw6rh7uby9fTc5lhaOWFLX3I6R1hrF9k3zUY40e6igsLGkDXK92LJNg==",
+      "license": "MIT"
     },
     "node_modules/on-finished": {
       "version": "2.4.1",
       "resolved": "https://registry.npmjs.org/on-finished/-/on-finished-2.4.1.tgz",
       "integrity": "sha512-oVlzkg3ENAhCk2zdv7IJwd/QUD4z2RxRwpkcGY8psCVcCYZNq4wYnVWALHM+brtuJjePWiYF/ClmuDr8Ch5+kg==",
+      "license": "MIT",
       "dependencies": {
         "ee-first": "1.1.1"
       },
@@ -901,31 +1133,34 @@
       "version": "1.3.3",
       "resolved": "https://registry.npmjs.org/parseurl/-/parseurl-1.3.3.tgz",
       "integrity": "sha512-CiyeOxFT/JZyN5m0z9PfXw4SCBJ6Sygz1Dpl0wqjlhDEGGBP1GnsUVEL0p63hoG1fcj3fHynXi9NYO4nWOL+qQ==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.8"
       }
     },
     "node_modules/path-to-regexp": {
-      "version": "0.1.7",
-      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",
-      "integrity": "sha512-5DFkuoqlv1uYQKxy8omFBeJPQcdoE07Kv2sferDCrAq1ohOU+MSDswDIbnx3YAM60qIOnYa53wBhXW0EbMonrQ=="
+      "version": "0.1.12",
+      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.12.tgz",
+      "integrity": "sha512-RA1GjUVMnvYFxuqovrEqZoxxW5NUZqbwKtYz/Tt7nXerk0LbLblQmrsgdeOxV5SFHf0UDggjS/bSeOZwt1pmEQ==",
+      "license": "MIT"
     },
     "node_modules/pg": {
-      "version": "8.11.5",
-      "resolved": "https://registry.npmjs.org/pg/-/pg-8.11.5.tgz",
-      "integrity": "sha512-jqgNHSKL5cbDjFlHyYsCXmQDrfIX/3RsNwYqpd4N0Kt8niLuNoRNH+aazv6cOd43gPh9Y4DjQCtb+X0MH0Hvnw==",
+      "version": "8.16.3",
+      "resolved": "https://registry.npmjs.org/pg/-/pg-8.16.3.tgz",
+      "integrity": "sha512-enxc1h0jA/aq5oSDMvqyW3q89ra6XIIDZgCX9vkMrnz5DFTw/Ny3Li2lFQ+pt3L6MCgm/5o2o8HW9hiJji+xvw==",
+      "license": "MIT",
       "dependencies": {
-        "pg-connection-string": "^2.6.4",
-        "pg-pool": "^3.6.2",
-        "pg-protocol": "^1.6.1",
-        "pg-types": "^2.1.0",
-        "pgpass": "1.x"
+        "pg-connection-string": "^2.9.1",
+        "pg-pool": "^3.10.1",
+        "pg-protocol": "^1.10.3",
+        "pg-types": "2.2.0",
+        "pgpass": "1.0.5"
       },
       "engines": {
-        "node": ">= 8.0.0"
+        "node": ">= 16.0.0"
       },
       "optionalDependencies": {
-        "pg-cloudflare": "^1.1.1"
+        "pg-cloudflare": "^1.2.7"
       },
       "peerDependencies": {
         "pg-native": ">=3.0.1"
@@ -937,41 +1172,47 @@
       }
     },
     "node_modules/pg-cloudflare": {
-      "version": "1.1.1",
-      "resolved": "https://registry.npmjs.org/pg-cloudflare/-/pg-cloudflare-1.1.1.tgz",
-      "integrity": "sha512-xWPagP/4B6BgFO+EKz3JONXv3YDgvkbVrGw2mTo3D6tVDQRh1e7cqVGvyR3BE+eQgAvx1XhW/iEASj4/jCWl3Q==",
+      "version": "1.2.7",
+      "resolved": "https://registry.npmjs.org/pg-cloudflare/-/pg-cloudflare-1.2.7.tgz",
+      "integrity": "sha512-YgCtzMH0ptvZJslLM1ffsY4EuGaU0cx4XSdXLRFae8bPP4dS5xL1tNB3k2o/N64cHJpwU7dxKli/nZ2lUa5fLg==",
+      "license": "MIT",
       "optional": true
     },
     "node_modules/pg-connection-string": {
-      "version": "2.6.4",
-      "resolved": "https://registry.npmjs.org/pg-connection-string/-/pg-connection-string-2.6.4.tgz",
-      "integrity": "sha512-v+Z7W/0EO707aNMaAEfiGnGL9sxxumwLl2fJvCQtMn9Fxsg+lPpPkdcyBSv/KFgpGdYkMfn+EI1Or2EHjpgLCA=="
+      "version": "2.9.1",
+      "resolved": "https://registry.npmjs.org/pg-connection-string/-/pg-connection-string-2.9.1.tgz",
+      "integrity": "sha512-nkc6NpDcvPVpZXxrreI/FOtX3XemeLl8E0qFr6F2Lrm/I8WOnaWNhIPK2Z7OHpw7gh5XJThi6j6ppgNoaT1w4w==",
+      "license": "MIT"
     },
     "node_modules/pg-int8": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/pg-int8/-/pg-int8-1.0.1.tgz",
       "integrity": "sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==",
+      "license": "ISC",
       "engines": {
         "node": ">=4.0.0"
       }
     },
     "node_modules/pg-pool": {
-      "version": "3.6.2",
-      "resolved": "https://registry.npmjs.org/pg-pool/-/pg-pool-3.6.2.tgz",
-      "integrity": "sha512-Htjbg8BlwXqSBQ9V8Vjtc+vzf/6fVUuak/3/XXKA9oxZprwW3IMDQTGHP+KDmVL7rtd+R1QjbnCFPuTHm3G4hg==",
+      "version": "3.10.1",
+      "resolved": "https://registry.npmjs.org/pg-pool/-/pg-pool-3.10.1.tgz",
+      "integrity": "sha512-Tu8jMlcX+9d8+QVzKIvM/uJtp07PKr82IUOYEphaWcoBhIYkoHpLXN3qO59nAI11ripznDsEzEv8nUxBVWajGg==",
+      "license": "MIT",
       "peerDependencies": {
         "pg": ">=8.0"
       }
     },
     "node_modules/pg-protocol": {
-      "version": "1.6.1",
-      "resolved": "https://registry.npmjs.org/pg-protocol/-/pg-protocol-1.6.1.tgz",
-      "integrity": "sha512-jPIlvgoD63hrEuihvIg+tJhoGjUsLPn6poJY9N5CnlPd91c2T18T/9zBtLxZSb1EhYxBRoZJtzScCaWlYLtktg=="
+      "version": "1.10.3",
+      "resolved": "https://registry.npmjs.org/pg-protocol/-/pg-protocol-1.10.3.tgz",
+      "integrity": "sha512-6DIBgBQaTKDJyxnXaLiLR8wBpQQcGWuAESkRBX/t6OwA8YsqP+iVSiond2EDy6Y/dsGk8rh/jtax3js5NeV7JQ==",
+      "license": "MIT"
     },
     "node_modules/pg-types": {
       "version": "2.2.0",
       "resolved": "https://registry.npmjs.org/pg-types/-/pg-types-2.2.0.tgz",
       "integrity": "sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==",
+      "license": "MIT",
       "dependencies": {
         "pg-int8": "1.0.1",
         "postgres-array": "~2.0.0",
@@ -987,6 +1228,7 @@
       "version": "1.0.5",
       "resolved": "https://registry.npmjs.org/pgpass/-/pgpass-1.0.5.tgz",
       "integrity": "sha512-FdW9r/jQZhSeohs1Z3sI1yxFQNFvMcnmfuj4WBMUTxOrAyLMaTcE1aAMBiTlbMNaXvBCQuVi0R7hd8udDSP7ug==",
+      "license": "MIT",
       "dependencies": {
         "split2": "^4.1.0"
       }
@@ -996,6 +1238,7 @@
       "resolved": "https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz",
       "integrity": "sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==",
       "dev": true,
+      "license": "MIT",
       "engines": {
         "node": ">=8.6"
       },
@@ -1003,10 +1246,42 @@
         "url": "https://github.com/sponsors/jonschlinkert"
       }
     },
+    "node_modules/postgrejs": {
+      "version": "2.22.4",
+      "resolved": "https://registry.npmjs.org/postgrejs/-/postgrejs-2.22.4.tgz",
+      "integrity": "sha512-ZtHefKDn7U+0hodDYtApzX/tktZ2O4kK+M5Q0PdUaOziNQoid7O0sWlxGIXzn7/ruHKsGi8DFvm9hTvptVX27w==",
+      "license": "MIT",
+      "dependencies": {
+        "@jsopen/objects": "^1.5.2",
+        "doublylinked": "^2.5.6",
+        "lightning-pool": "^4.10.1",
+        "postgres-bytea": "^3.0.0",
+        "power-tasks": "^1.11.0",
+        "putil-promisify": "^1.10.1",
+        "putil-varhelpers": "^1.6.5",
+        "tslib": "^2.8.1"
+      },
+      "engines": {
+        "node": ">=16.0"
+      }
+    },
+    "node_modules/postgrejs/node_modules/postgres-bytea": {
+      "version": "3.0.0",
+      "resolved": "https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-3.0.0.tgz",
+      "integrity": "sha512-CNd4jim9RFPkObHSjVHlVrxoVQXz7quwNFpz7RY1okNNme49+sVyiTvTRobiLV548Hx/hb1BG+iE7h9493WzFw==",
+      "license": "MIT",
+      "dependencies": {
+        "obuf": "~1.1.2"
+      },
+      "engines": {
+        "node": ">= 6"
+      }
+    },
     "node_modules/postgres": {
-      "version": "3.4.4",
-      "resolved": "https://registry.npmjs.org/postgres/-/postgres-3.4.4.tgz",
-      "integrity": "sha512-IbyN+9KslkqcXa8AO9fxpk97PA4pzewvpi2B3Dwy9u4zpV32QicaEdgmF3eSQUzdRk7ttDHQejNgAEr4XoeH4A==",
+      "version": "3.4.7",
+      "resolved": "https://registry.npmjs.org/postgres/-/postgres-3.4.7.tgz",
+      "integrity": "sha512-Jtc2612XINuBjIl/QTWsV5UvE8UHuNblcO3vVADSrKsrc6RqGX6lOW1cEo3CM2v0XG4Nat8nI+YM7/f26VxXLw==",
+      "license": "Unlicense",
       "engines": {
         "node": ">=12"
       },
@@ -1019,6 +1294,7 @@
       "version": "2.0.0",
       "resolved": "https://registry.npmjs.org/postgres-array/-/postgres-array-2.0.0.tgz",
       "integrity": "sha512-VpZrUqU5A69eQyW2c5CA1jtLecCsN2U/bD6VilrFDWq5+5UIEVO7nazS3TEcHf1zuPYO/sqGvUvW62g86RXZuA==",
+      "license": "MIT",
       "engines": {
         "node": ">=4"
       }
@@ -1027,6 +1303,7 @@
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-1.0.0.tgz",
       "integrity": "sha512-xy3pmLuQqRBZBXDULy7KbaitYqLcmxigw14Q5sj8QBVLqEwXfeybIKVWiqAXTlcvdvb0+xkOtDbfQMOf4lST1w==",
+      "license": "MIT",
       "engines": {
         "node": ">=0.10.0"
       }
@@ -1035,6 +1312,7 @@
       "version": "1.0.7",
       "resolved": "https://registry.npmjs.org/postgres-date/-/postgres-date-1.0.7.tgz",
       "integrity": "sha512-suDmjLVQg78nMK2UZ454hAG+OAW+HQPZ6n++TNDUX+L0+uUlLywnoxJKDou51Zm+zTCjrCl0Nq6J9C5hP9vK/Q==",
+      "license": "MIT",
       "engines": {
         "node": ">=0.10.0"
       }
@@ -1043,6 +1321,7 @@
       "version": "1.2.0",
       "resolved": "https://registry.npmjs.org/postgres-interval/-/postgres-interval-1.2.0.tgz",
       "integrity": "sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==",
+      "license": "MIT",
       "dependencies": {
         "xtend": "^4.0.0"
       },
@@ -1051,49 +1330,43 @@
       }
     },
     "node_modules/postgresql-client": {
-      "version": "2.11.0",
-      "resolved": "https://registry.npmjs.org/postgresql-client/-/postgresql-client-2.11.0.tgz",
-      "integrity": "sha512-QSPHcWVaiBG+JyASaDojOXvhRmsc2n8j2COdIjUDENFAtFls16Zy240asY2ENzZRQJUMAA8vpR8w4SAdI8jdbw==",
+      "version": "2.13.0",
+      "resolved": "https://registry.npmjs.org/postgresql-client/-/postgresql-client-2.13.0.tgz",
+      "integrity": "sha512-GOSQstAJiHeIwXrvARCp0y7PMwfzf+Egg0KOn1MiggykvQFr4OO8FyT0x7Yc3hcPL4iLk47z9KeAbbdVCqTP0g==",
+      "deprecated": "Package name 'postgresql-client' has been changed to 'postgrejs'. Please consider to update dependencies in your package.json",
+      "license": "MIT",
       "dependencies": {
-        "doublylinked": "^2.5.4",
-        "lightning-pool": "^4.2.2",
-        "postgres-bytea": "^3.0.0",
-        "power-tasks": "^1.7.3",
-        "putil-merge": "^3.12.1",
-        "putil-promisify": "^1.10.1",
-        "putil-varhelpers": "^1.6.5"
+        "postgrejs": "^2.15.1"
       },
       "engines": {
         "node": ">=16.0"
       }
     },
-    "node_modules/postgresql-client/node_modules/postgres-bytea": {
-      "version": "3.0.0",
-      "resolved": "https://registry.npmjs.org/postgres-bytea/-/postgres-bytea-3.0.0.tgz",
-      "integrity": "sha512-CNd4jim9RFPkObHSjVHlVrxoVQXz7quwNFpz7RY1okNNme49+sVyiTvTRobiLV548Hx/hb1BG+iE7h9493WzFw==",
-      "dependencies": {
-        "obuf": "~1.1.2"
-      },
-      "engines": {
-        "node": ">= 6"
-      }
-    },
     "node_modules/power-tasks": {
-      "version": "1.7.3",
-      "resolved": "https://registry.npmjs.org/power-tasks/-/power-tasks-1.7.3.tgz",
-      "integrity": "sha512-EnkjLfaX4PxFYHbUWyWzlE4I8SgctaW9jx4qQXrVRoELlqBXrxIMtuhHzRwsHv2qs1tO7efOcZa6/wDCdCjRfA==",
+      "version": "1.11.0",
+      "resolved": "https://registry.npmjs.org/power-tasks/-/power-tasks-1.11.0.tgz",
+      "integrity": "sha512-UAVmqOw4miD+BW4gBrL1KJb24akTUfy1XglIFB7domD7Wyj0eQAyK9F9PnYYiw1pVLoyy3L+HfCYWwN2sMwCzg==",
+      "license": "MIT",
       "dependencies": {
         "doublylinked": "^2.5.4",
-        "strict-typed-events": "^2.3.3"
+        "strict-typed-events": "^2.8.0",
+        "tslib": "^2.6.3"
       },
       "engines": {
         "node": ">=16.0"
       }
     },
+    "node_modules/process-nextick-args": {
+      "version": "2.0.1",
+      "resolved": "https://registry.npmjs.org/process-nextick-args/-/process-nextick-args-2.0.1.tgz",
+      "integrity": "sha512-3ouUOpQhtgrbOa17J7+uxOTpITYWaGP7/AhoR3+A+/1e9skrzelGi/dXzEYyvbxubEF6Wn2ypscTKiKJFFn1ag==",
+      "license": "MIT"
+    },
     "node_modules/proxy-addr": {
       "version": "2.0.7",
       "resolved": "https://registry.npmjs.org/proxy-addr/-/proxy-addr-2.0.7.tgz",
       "integrity": "sha512-llQsMLSUDUPT44jdrU/O37qlnifitDP+ZwrmmZcoSKyLKvtZxpyV0n2/bD/N4tBAAZ/gJEdZU7KMraoK1+XYAg==",
+      "license": "MIT",
       "dependencies": {
         "forwarded": "0.2.0",
         "ipaddr.js": "1.9.1"
@@ -1106,20 +1379,14 @@
       "version": "1.1.8",
       "resolved": "https://registry.npmjs.org/pstree.remy/-/pstree.remy-1.1.8.tgz",
       "integrity": "sha512-77DZwxQmxKnu3aR542U+X8FypNzbfJ+C5XQDk3uWjWxn6151aIMGthWYRXTqT1E5oJvg+ljaa2OJi+VfvCOQ8w==",
-      "dev": true
-    },
-    "node_modules/putil-merge": {
-      "version": "3.12.1",
-      "resolved": "https://registry.npmjs.org/putil-merge/-/putil-merge-3.12.1.tgz",
-      "integrity": "sha512-4clPyRkJPrd5zl98AP7I3JamyXbx0ixe2CnfvGwoTyWSr7Kslcv8weoKjfU4BMBifkWIRL54l4OrNe97pYcDwQ==",
-      "engines": {
-        "node": ">= 10.0"
-      }
+      "dev": true,
+      "license": "MIT"
     },
     "node_modules/putil-promisify": {
       "version": "1.10.1",
       "resolved": "https://registry.npmjs.org/putil-promisify/-/putil-promisify-1.10.1.tgz",
       "integrity": "sha512-1jm0egJNrj5eBDRj15Cg08RNHDV91OVEHeeYjAFRcs663PXxFokndxcJAGbaO6CSErCTp8eTgC8vuOF+fvXIAA==",
+      "license": "MIT",
       "engines": {
         "node": ">= 14.0"
       }
@@ -1128,16 +1395,18 @@
       "version": "1.6.5",
       "resolved": "https://registry.npmjs.org/putil-varhelpers/-/putil-varhelpers-1.6.5.tgz",
       "integrity": "sha512-kyu+lE5xkc65ScgaIi6rNONLXeS7jGBxl1I0rzHVsFGAAQ45D/VkuEev+t09PFB943F+CqdWFLczH6ePk5TPAA==",
+      "license": "MIT",
       "engines": {
         "node": ">= 6.0"
       }
     },
     "node_modules/qs": {
-      "version": "6.11.0",
-      "resolved": "https://registry.npmjs.org/qs/-/qs-6.11.0.tgz",
-      "integrity": "sha512-MvjoMCJwEarSbUYk5O+nmoSzSutSsTwF85zcHPQ9OrlFoZOYIjaqBAJIqIXjptyD5vThxGq52Xu/MaJzRkIk4Q==",
+      "version": "6.13.0",
+      "resolved": "https://registry.npmjs.org/qs/-/qs-6.13.0.tgz",
+      "integrity": "sha512-+38qI9SOr8tfZ4QmJNplMUxqjbe7LKvvZgWdExBOmd+egZTtjLB67Gu0HRX3u/XOq7UU2Nx6nsjvS16Z9uwfpg==",
+      "license": "BSD-3-Clause",
       "dependencies": {
-        "side-channel": "^1.0.4"
+        "side-channel": "^1.0.6"
       },
       "engines": {
         "node": ">=0.6"
@@ -1150,6 +1419,7 @@
       "version": "1.2.1",
       "resolved": "https://registry.npmjs.org/range-parser/-/range-parser-1.2.1.tgz",
       "integrity": "sha512-Hrgsx+orqoygnmhFbKaHE6c296J+HTAQXoxEF6gNupROmmGJRoyzfG3ccAveqCBrwr/2yxQ5BVd/GTl5agOwSg==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.6"
       }
@@ -1158,6 +1428,7 @@
       "version": "2.5.2",
       "resolved": "https://registry.npmjs.org/raw-body/-/raw-body-2.5.2.tgz",
       "integrity": "sha512-8zGqypfENjCIqGhgXToC8aB2r7YrBX+AQAfIPs/Mlk+BtPTztOvTS01NRW/3Eh60J+a48lt8qsCzirQ6loCVfA==",
+      "license": "MIT",
       "dependencies": {
         "bytes": "3.1.2",
         "http-errors": "2.0.0",
@@ -1168,11 +1439,33 @@
         "node": ">= 0.8"
       }
     },
+    "node_modules/readable-stream": {
+      "version": "2.3.8",
+      "resolved": "https://registry.npmjs.org/readable-stream/-/readable-stream-2.3.8.tgz",
+      "integrity": "sha512-8p0AUk4XODgIewSi0l8Epjs+EVnWiK7NoDIEGU0HhE7+ZyY8D1IMY7odu5lRrFXGg71L15KG8QrPmum45RTtdA==",
+      "license": "MIT",
+      "dependencies": {
+        "core-util-is": "~1.0.0",
+        "inherits": "~2.0.3",
+        "isarray": "~1.0.0",
+        "process-nextick-args": "~2.0.0",
+        "safe-buffer": "~5.1.1",
+        "string_decoder": "~1.1.1",
+        "util-deprecate": "~1.0.1"
+      }
+    },
+    "node_modules/readable-stream/node_modules/safe-buffer": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
+      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
+      "license": "MIT"
+    },
     "node_modules/readdirp": {
       "version": "3.6.0",
       "resolved": "https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz",
       "integrity": "sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "picomatch": "^2.2.1"
       },
@@ -1184,6 +1477,7 @@
       "version": "1.3.8",
       "resolved": "https://registry.npmjs.org/router/-/router-1.3.8.tgz",
       "integrity": "sha512-461UFH44NtSfIlS83PUg2N7OZo86BC/kB3dY77gJdsODsBhhw7+2uE0tzTINxrY9CahCUVk1VhpWCA5i1yoIEg==",
+      "license": "MIT",
       "dependencies": {
         "array-flatten": "3.0.0",
         "debug": "2.6.9",
@@ -1200,7 +1494,14 @@
     "node_modules/router/node_modules/array-flatten": {
       "version": "3.0.0",
       "resolved": "https://registry.npmjs.org/array-flatten/-/array-flatten-3.0.0.tgz",
-      "integrity": "sha512-zPMVc3ZYlGLNk4mpK1NzP2wg0ml9t7fUgDsayR5Y5rSzxQilzR9FGu/EH2jQOcKSAeAfWeylyW8juy3OkWRvNA=="
+      "integrity": "sha512-zPMVc3ZYlGLNk4mpK1NzP2wg0ml9t7fUgDsayR5Y5rSzxQilzR9FGu/EH2jQOcKSAeAfWeylyW8juy3OkWRvNA==",
+      "license": "MIT"
+    },
+    "node_modules/router/node_modules/path-to-regexp": {
+      "version": "0.1.7",
+      "resolved": "https://registry.npmjs.org/path-to-regexp/-/path-to-regexp-0.1.7.tgz",
+      "integrity": "sha512-5DFkuoqlv1uYQKxy8omFBeJPQcdoE07Kv2sferDCrAq1ohOU+MSDswDIbnx3YAM60qIOnYa53wBhXW0EbMonrQ==",
+      "license": "MIT"
     },
     "node_modules/safe-buffer": {
       "version": "5.2.1",
@@ -1219,17 +1520,20 @@
           "type": "consulting",
           "url": "https://feross.org/support"
         }
-      ]
+      ],
+      "license": "MIT"
     },
     "node_modules/safer-buffer": {
       "version": "2.1.2",
       "resolved": "https://registry.npmjs.org/safer-buffer/-/safer-buffer-2.1.2.tgz",
-      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg=="
+      "integrity": "sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==",
+      "license": "MIT"
     },
     "node_modules/semver": {
-      "version": "7.6.2",
-      "resolved": "https://registry.npmjs.org/semver/-/semver-7.6.2.tgz",
-      "integrity": "sha512-FNAIBWCx9qcRhoHcgcJ0gvU7SN1lYU2ZXuSfl04bSC5OpvDHFyJCjdNHomPXxjQlCBU67YW64PzY7/VIEH7F2w==",
+      "version": "7.7.2",
+      "resolved": "https://registry.npmjs.org/semver/-/semver-7.7.2.tgz",
+      "integrity": "sha512-RF0Fw+rO5AMf9MAyaRXI4AV0Ulj5lMHqVxxdSgiVbixSCXoEmmX/jk0CuJw4+3SqroYO9VoUh+HcuJivvtJemA==",
+      "license": "ISC",
       "bin": {
         "semver": "bin/semver.js"
       },
@@ -1238,9 +1542,10 @@
       }
     },
     "node_modules/send": {
-      "version": "0.18.0",
-      "resolved": "https://registry.npmjs.org/send/-/send-0.18.0.tgz",
-      "integrity": "sha512-qqWzuOjSFOuqPjFe4NOsMLafToQQwBSOEpS+FwEt3A2V3vKubTquT3vmLTQpFgMXp8AlFWFuP1qKaJZOtPpVXg==",
+      "version": "0.19.0",
+      "resolved": "https://registry.npmjs.org/send/-/send-0.19.0.tgz",
+      "integrity": "sha512-dW41u5VfLXu8SJh5bwRmyYUbAoSB3c9uQh6L8h/KtsFREPWpbX1lrljJo186Jc4nmci/sGUZ9a0a0J2zgfq2hw==",
+      "license": "MIT",
       "dependencies": {
         "debug": "2.6.9",
         "depd": "2.0.0",
@@ -1260,55 +1565,106 @@
         "node": ">= 0.8.0"
       }
     },
+    "node_modules/send/node_modules/encodeurl": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/encodeurl/-/encodeurl-1.0.2.tgz",
+      "integrity": "sha512-TPJXq8JqFaVYm2CWmPvnP2Iyo4ZSM7/QKcSmuMLDObfpH5fi7RUGmd/rTDf+rut/saiDiQEeVTNgAmJEdAOx0w==",
+      "license": "MIT",
+      "engines": {
+        "node": ">= 0.8"
+      }
+    },
     "node_modules/send/node_modules/ms": {
       "version": "2.1.3",
       "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
-      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA=="
+      "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
+      "license": "MIT"
     },
     "node_modules/serve-static": {
-      "version": "1.15.0",
-      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.15.0.tgz",
-      "integrity": "sha512-XGuRDNjXUijsUL0vl6nSD7cwURuzEgglbOaFuZM9g3kwDXOWVTck0jLzjPzGD+TazWbboZYu52/9/XPdUgne9g==",
+      "version": "1.16.2",
+      "resolved": "https://registry.npmjs.org/serve-static/-/serve-static-1.16.2.tgz",
+      "integrity": "sha512-VqpjJZKadQB/PEbEwvFdO43Ax5dFBZ2UECszz8bQ7pi7wt//PWe1P6MN7eCnjsatYtBT6EuiClbjSWP2WrIoTw==",
+      "license": "MIT",
       "dependencies": {
-        "encodeurl": "~1.0.2",
+        "encodeurl": "~2.0.0",
         "escape-html": "~1.0.3",
         "parseurl": "~1.3.3",
-        "send": "0.18.0"
+        "send": "0.19.0"
       },
       "engines": {
         "node": ">= 0.8.0"
       }
     },
-    "node_modules/set-function-length": {
-      "version": "1.2.2",
-      "resolved": "https://registry.npmjs.org/set-function-length/-/set-function-length-1.2.2.tgz",
-      "integrity": "sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==",
+    "node_modules/setprototypeof": {
+      "version": "1.2.0",
+      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
+      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw==",
+      "license": "ISC"
+    },
+    "node_modules/side-channel": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.1.0.tgz",
+      "integrity": "sha512-ZX99e6tRweoUXqR+VBrslhda51Nh5MTQwou5tnUDgbtyM0dBgmhEDtWGP/xbKn6hqfPRHujUNwz5fy/wbbhnpw==",
+      "license": "MIT",
       "dependencies": {
-        "define-data-property": "^1.1.4",
         "es-errors": "^1.3.0",
-        "function-bind": "^1.1.2",
-        "get-intrinsic": "^1.2.4",
-        "gopd": "^1.0.1",
-        "has-property-descriptors": "^1.0.2"
+        "object-inspect": "^1.13.3",
+        "side-channel-list": "^1.0.0",
+        "side-channel-map": "^1.0.1",
+        "side-channel-weakmap": "^1.0.2"
       },
       "engines": {
         "node": ">= 0.4"
-      }
-    },
-    "node_modules/setprototypeof": {
-      "version": "1.2.0",
-      "resolved": "https://registry.npmjs.org/setprototypeof/-/setprototypeof-1.2.0.tgz",
-      "integrity": "sha512-E5LDX7Wrp85Kil5bhZv46j8jOeboKq5JMmYM3gVGdGH8xFpPWXUMsNrlODCrkoxMEeNi/XZIwuRvY4XNwYMJpw=="
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
     },
-    "node_modules/side-channel": {
-      "version": "1.0.6",
-      "resolved": "https://registry.npmjs.org/side-channel/-/side-channel-1.0.6.tgz",
-      "integrity": "sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==",
+    "node_modules/side-channel-list": {
+      "version": "1.0.0",
+      "resolved": "https://registry.npmjs.org/side-channel-list/-/side-channel-list-1.0.0.tgz",
+      "integrity": "sha512-FCLHtRD/gnpCiCHEiJLOwdmFP+wzCmDEkc9y7NsYxeF4u7Btsn1ZuwgwJGxImImHicJArLP4R0yX4c2KCrMrTA==",
+      "license": "MIT",
       "dependencies": {
-        "call-bind": "^1.0.7",
         "es-errors": "^1.3.0",
-        "get-intrinsic": "^1.2.4",
-        "object-inspect": "^1.13.1"
+        "object-inspect": "^1.13.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/side-channel-map": {
+      "version": "1.0.1",
+      "resolved": "https://registry.npmjs.org/side-channel-map/-/side-channel-map-1.0.1.tgz",
+      "integrity": "sha512-VCjCNfgMsby3tTdo02nbjtM/ewra6jPHmpThenkTYh8pG9ucZ/1P8So4u4FGBek/BjpOVsDCMoLA/iuBKIFXRA==",
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.5",
+        "object-inspect": "^1.13.3"
+      },
+      "engines": {
+        "node": ">= 0.4"
+      },
+      "funding": {
+        "url": "https://github.com/sponsors/ljharb"
+      }
+    },
+    "node_modules/side-channel-weakmap": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/side-channel-weakmap/-/side-channel-weakmap-1.0.2.tgz",
+      "integrity": "sha512-WPS/HvHQTYnHisLo9McqBHOJk2FkHO/tlpvldyrnem4aeQp4hai3gythswg6p01oSoTl58rcpiFAjF2br2Ak2A==",
+      "license": "MIT",
+      "dependencies": {
+        "call-bound": "^1.0.2",
+        "es-errors": "^1.3.0",
+        "get-intrinsic": "^1.2.5",
+        "object-inspect": "^1.13.3",
+        "side-channel-map": "^1.0.1"
       },
       "engines": {
         "node": ">= 0.4"
@@ -1322,6 +1678,7 @@
       "resolved": "https://registry.npmjs.org/simple-update-notifier/-/simple-update-notifier-2.0.0.tgz",
       "integrity": "sha512-a2B9Y0KlNXl9u/vsW6sTIu9vGEpfKu2wRV6l1H3XEas/0gUIzGzBoP/IouTcUQbm9JWZLH3COxyn03TYlFax6w==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "semver": "^7.5.3"
       },
@@ -1333,6 +1690,7 @@
       "version": "4.2.0",
       "resolved": "https://registry.npmjs.org/split2/-/split2-4.2.0.tgz",
       "integrity": "sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==",
+      "license": "ISC",
       "engines": {
         "node": ">= 10.x"
       }
@@ -1341,27 +1699,54 @@
       "version": "2.0.1",
       "resolved": "https://registry.npmjs.org/statuses/-/statuses-2.0.1.tgz",
       "integrity": "sha512-RwNA9Z/7PrK06rYLIzFMlaF+l73iwpzsqRIFgbMLbTcLD6cOao82TaWefPXQvB2fOC4AjuYSEndS7N/mTCbkdQ==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.8"
       }
     },
+    "node_modules/streamsearch": {
+      "version": "1.1.0",
+      "resolved": "https://registry.npmjs.org/streamsearch/-/streamsearch-1.1.0.tgz",
+      "integrity": "sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==",
+      "engines": {
+        "node": ">=10.0.0"
+      }
+    },
     "node_modules/strict-typed-events": {
-      "version": "2.3.3",
-      "resolved": "https://registry.npmjs.org/strict-typed-events/-/strict-typed-events-2.3.3.tgz",
-      "integrity": "sha512-Vc8/N5giCVpO2n5BCskqDD9ns7RkdEq0pFd4yQk1ROULusJDbjORNvbtyEPxxK7Xqn9/NdW8XHLxv/PvUTgFsA==",
+      "version": "2.8.0",
+      "resolved": "https://registry.npmjs.org/strict-typed-events/-/strict-typed-events-2.8.0.tgz",
+      "integrity": "sha512-mDCPe06HIzzDliG09N9ypPvx2nDgAFl3IDJe8NNCoViDWYh0E98+02WJdZnUSFWiUphaRbUDbDksg/SgiaEBDA==",
+      "license": "MIT",
       "dependencies": {
         "putil-promisify": "^1.10.1",
-        "ts-gems": "^3.1.0"
+        "ts-gems": "^3.5.0",
+        "tslib": "^2.6.3"
       },
       "engines": {
         "node": ">=16.0"
       }
     },
+    "node_modules/string_decoder": {
+      "version": "1.1.1",
+      "resolved": "https://registry.npmjs.org/string_decoder/-/string_decoder-1.1.1.tgz",
+      "integrity": "sha512-n/ShnvDi6FHbbVfviro+WojiFzv+s8MPMHBczVePfUpDJLwoLT0ht1l4YwBCbi8pJAveEEdnkHyPyTP/mzRfwg==",
+      "license": "MIT",
+      "dependencies": {
+        "safe-buffer": "~5.1.0"
+      }
+    },
+    "node_modules/string_decoder/node_modules/safe-buffer": {
+      "version": "5.1.2",
+      "resolved": "https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.1.2.tgz",
+      "integrity": "sha512-Gd2UZBJDkXlY7GbJxfsE8/nvKkUEU1G38c1siN6QP6a9PT9MmHB8GnpscSmMJSoF8LOIrt8ud/wPtojys4G6+g==",
+      "license": "MIT"
+    },
     "node_modules/supports-color": {
       "version": "5.5.0",
       "resolved": "https://registry.npmjs.org/supports-color/-/supports-color-5.5.0.tgz",
       "integrity": "sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "has-flag": "^3.0.0"
       },
@@ -1374,6 +1759,7 @@
       "resolved": "https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz",
       "integrity": "sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==",
       "dev": true,
+      "license": "MIT",
       "dependencies": {
         "is-number": "^7.0.0"
       },
@@ -1385,31 +1771,38 @@
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/toidentifier/-/toidentifier-1.0.1.tgz",
       "integrity": "sha512-o5sSPKEkg/DIQNmH43V0/uerLrpzVedkUh8tGNvaeXpfpuwjKenlSox/2O/BTlZUtEe+JG7s5YhEz608PlAHRA==",
+      "license": "MIT",
       "engines": {
         "node": ">=0.6"
       }
     },
     "node_modules/touch": {
-      "version": "3.1.0",
-      "resolved": "https://registry.npmjs.org/touch/-/touch-3.1.0.tgz",
-      "integrity": "sha512-WBx8Uy5TLtOSRtIq+M03/sKDrXCLHxwDcquSP2c43Le03/9serjQBIztjRz6FkJez9D/hleyAXTBGLwwZUw9lA==",
+      "version": "3.1.1",
+      "resolved": "https://registry.npmjs.org/touch/-/touch-3.1.1.tgz",
+      "integrity": "sha512-r0eojU4bI8MnHr8c5bNo7lJDdI2qXlWWJk6a9EAFG7vbhTjElYhBVS3/miuE0uOuoLdb8Mc/rVfsmm6eo5o9GA==",
       "dev": true,
-      "dependencies": {
-        "nopt": "~1.0.10"
-      },
+      "license": "ISC",
       "bin": {
         "nodetouch": "bin/nodetouch.js"
       }
     },
     "node_modules/ts-gems": {
-      "version": "3.4.0",
-      "resolved": "https://registry.npmjs.org/ts-gems/-/ts-gems-3.4.0.tgz",
-      "integrity": "sha512-RM1TN7GRmweAdNXNM89S4tLz+Ur3HslR4ePYND6RBhRzxsiUOnfVFyTey01+9YUs8Vhxb/OsO6rHlu5xJGzBXw=="
+      "version": "3.11.3",
+      "resolved": "https://registry.npmjs.org/ts-gems/-/ts-gems-3.11.3.tgz",
+      "integrity": "sha512-zEAkPUvP9L7f6SmzXq3mtKnRr6nbWt2vMdGl2NO0b1stHFFtKcmNxZKLHyv5889gOp3InI4ki2WaZAtz85OJBg==",
+      "license": "MIT"
+    },
+    "node_modules/tslib": {
+      "version": "2.8.1",
+      "resolved": "https://registry.npmjs.org/tslib/-/tslib-2.8.1.tgz",
+      "integrity": "sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==",
+      "license": "0BSD"
     },
     "node_modules/type-is": {
       "version": "1.6.18",
       "resolved": "https://registry.npmjs.org/type-is/-/type-is-1.6.18.tgz",
       "integrity": "sha512-TkRKr9sUTxEH8MdfuCSP7VizJyzRNMjj2J2do2Jr3Kym598JVdEksuzPQCnlFPW4ky9Q+iA+ma9BGm06XQBy8g==",
+      "license": "MIT",
       "dependencies": {
         "media-typer": "0.3.0",
         "mime-types": "~2.1.24"
@@ -1418,24 +1811,39 @@
         "node": ">= 0.6"
       }
     },
+    "node_modules/typedarray": {
+      "version": "0.0.6",
+      "resolved": "https://registry.npmjs.org/typedarray/-/typedarray-0.0.6.tgz",
+      "integrity": "sha512-/aCDEGatGvZ2BIk+HmLf4ifCJFwvKFNb9/JeZPMulfgFracn9QFcAf5GO8B/mweUjSoblS5In0cWhqpfs/5PQA==",
+      "license": "MIT"
+    },
     "node_modules/undefsafe": {
       "version": "2.0.5",
       "resolved": "https://registry.npmjs.org/undefsafe/-/undefsafe-2.0.5.tgz",
       "integrity": "sha512-WxONCrssBM8TSPRqN5EmsjVrsv4A8X12J4ArBiiayv3DyyG3ZlIg6yysuuSYdZsVz3TKcTg2fd//Ujd4CHV1iA==",
-      "dev": true
+      "dev": true,
+      "license": "MIT"
     },
     "node_modules/unpipe": {
       "version": "1.0.0",
       "resolved": "https://registry.npmjs.org/unpipe/-/unpipe-1.0.0.tgz",
       "integrity": "sha512-pjy2bYhSsufwWlKwPc+l3cN7+wuJlK6uz0YdJEOlQDbl6jo/YlPi4mb8agUkVC8BF7V8NuzeyPNqRksA3hztKQ==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.8"
       }
     },
+    "node_modules/util-deprecate": {
+      "version": "1.0.2",
+      "resolved": "https://registry.npmjs.org/util-deprecate/-/util-deprecate-1.0.2.tgz",
+      "integrity": "sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==",
+      "license": "MIT"
+    },
     "node_modules/utils-merge": {
       "version": "1.0.1",
       "resolved": "https://registry.npmjs.org/utils-merge/-/utils-merge-1.0.1.tgz",
       "integrity": "sha512-pMZTvIkT1d+TFGvDOqodOclx0QWkkgi6Tdoa8gC8ffGAAqz9pzPTZWAybbsHHoED/ztMtkv/VoYTYyShUn81hA==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.4.0"
       }
@@ -1444,6 +1852,7 @@
       "version": "1.1.2",
       "resolved": "https://registry.npmjs.org/vary/-/vary-1.1.2.tgz",
       "integrity": "sha512-BNGbWLfd0eUPabhkXUVm0j8uuvREyTh5ovRa/dyow/BqAbZJyC+5fU+IzQOzmAKzYqYRAISoRhdQr3eIZ/PXqg==",
+      "license": "MIT",
       "engines": {
         "node": ">= 0.8"
       }
@@ -1452,6 +1861,7 @@
       "version": "4.0.2",
       "resolved": "https://registry.npmjs.org/xtend/-/xtend-4.0.2.tgz",
       "integrity": "sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==",
+      "license": "MIT",
       "engines": {
         "node": ">=0.4"
       }
Index: node_modules/lightning-pool/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># lightning-pool\r\n\r\n[![NPM Version][npm-image]][npm-url]\r\n[![NPM Downloads][downloads-image]][downloads-url]\r\n[![CircleCI][circleci-image]][circleci-url]\r\n[![Test Coverage][coveralls-image]][coveralls-url]\r\n\r\n## About\r\n\r\nHigh performance resource pool written with TypeScript.\r\n\r\n - The fastest Resource Pool implementation for JavaScript ever! Check out [benchmark](BANCHMARK.md) results\r\n - Advanced configuration options, suits for enterprise level applications\r\n - Configuration can be changed while pool running\r\n - Promise based factory supported\r\n - Supports validation and resource reset\r\n - Fully tested. (%100 coverage)\r\n\r\n## Installation\r\n\r\n  - `npm install lightning-pool --save`\r\n\r\n## Example\r\n\r\n```ts\r\nimport {Pool} from 'lightning-pool';\r\nimport dbDriver from 'some-db-driver';\r\n\r\n/**\r\n * Step 1 - Create a factory object\r\n */\r\nconst factory = {\r\n    create: async function(opts) {\r\n        const client = await DbDriver.createClient();\r\n        return client;\r\n    },\r\n    destroy: async function(client) {  \r\n       await client.close();       \r\n    },\r\n    reset: async function(client){   \r\n       await client.rollback();       \r\n    },\r\n    validate: async function(client) {\r\n       await client.query('select 1');       \r\n    }    \r\n};\r\n\r\n/**\r\n * Step 2 - Create a the pool object\r\n */\r\nconst pool = new Pool(factory, {  \r\n    max: 10,    // maximum size of the pool\r\n    min: 2,     // minimum size of the pool\r\n    minIdle: 2  // minimum idle resources\r\n});\r\n\r\n/**\r\n * Step 3 - Use pool in your code to acquire/release resources\r\n */\r\n// acquire connection - Promise is resolved\r\nconst client = await pool.acquire();\r\n// once a resource becomes available\r\n// Use resource\r\nawait client.query(\"select * from foo\");\r\n// return object back to pool\r\nawait pool.release(client);\r\n\r\n/**\r\n * Step 4 - Shutdown pool (optional)\r\n * Call close(force) when you need to shutdown the pool\r\n */\r\n\r\n// Wait for active resource for 5 sec than force shutdown\r\nawait pool.close(5000);\r\n```\r\n\r\n## Documentation\r\n\r\n### Creating a `Pool` instance\r\n\r\nlightning-pool module exports createPool() method and Pool class. Both can be used to instantiate a Pool. \r\n\r\n```ts\r\nimport {createPool} from 'lightning-pool';\r\nconst pool = createPool(factory, options);\r\n```\r\n\r\n```ts\r\nimport {Pool} from 'lightning-pool';\r\nconst pool = new Pool(factory, options);\r\n```\r\n\r\n#### factory\r\n\r\nCan be any object/instance with the following properties:\r\n\r\n- `create` : The function that the `Pool` will call when it needs a new resource. It should return a `Promise<resouce>`.\r\n- `destroy` : The function that the `Pool` will call when it wants to destroy a `resource`. It should accept first argument as `resource`,  where `resource` is whatever factory.create made. It should return a `Promise<>`.    \r\n- `reset` (optional) : The function that the `Pool` will call before any `resource` back to the `Pool`. It should accept first argument as `resource`,  where `resource` is whatever factory.create made. It should return a `Promise<>`. `Pool` will destroy and remove the resource from the `Pool` on any error.\r\n- `validate` (optional) : The function that the `Pool` will call when any resource needs to be validated. It should accept first argument as `resource`,  where `resource` is whatever factory.create made. It should return a `Promise<>`. `Pool` will destroy and remove the resource from the `Pool` on any error.\r\n\r\n#### options\r\n- `acquireMaxRetries`: Maximum number that `Pool` will try to create a resource before returning the error. (Default 0)\r\n- `acquireRetryWait`: Time in millis that `Pool` will wait after each tries. (Default 2000) \r\n- `acquireTimeoutMillis`: Time in millis an acquire call will wait for a resource before timing out. (Default 0 - no limit) \r\n- `fifo`: If true resources will be allocated first-in-first-out order. resources will be allocated last-in-first-out order. (Default true)\r\n- `idleTimeoutMillis`: The minimum amount of time in millis that an `resource` may sit idle in the `Pool`. (Default 30000) \r\n- `houseKeepInterval`: Time period in millis that `Pool` will make a cleanup. (Default 1000) \r\n- `min`: Minimum number of resources that `Pool` will keep. (Default 0)\r\n- `minIdle`: Minimum number of resources that `Pool` will keep in idle state. (Default 0)\r\n- `max`: Maximum number of resources that `Pool` will create. (Default 10)\r\n- `maxQueue`: Maximum number of request that `Pool` will accept. (Default 1000)\r\n- `resetOnReturn`: If true `Pool` will call `reset()` function of factory before moving it idle state. (Default true)\r\n- `validation`: If true `Pool` will call `validation()` function of factory when it needs it. If false, `validation()` never been called. (Default true)\r\n\r\n### Methods\r\n\r\n#### Pool.prototype.acquire()\r\n\r\nAcquires a `resource` from the `Pool` or create a new one.\r\n\r\n##### Usage\r\n\r\n`pool.acquire()`\r\n\r\n- *Returns*: A Promise\r\n\r\n\r\n```js\r\nvar promise = pool.acquire();\r\npromise.then(resource => {\r\n  // Do what ever you want with resource\r\n}).catch(err =>{\r\n  // Handle Error  \r\n});\r\n```\r\n\r\n#### Pool.prototype.isAcquired()\r\n\r\nReturns if a resource has been acquired from the `Pool` and not yet released or destroyed.\r\n\r\n##### Usage\r\n\r\n`pool.isAcquired(resource)`\r\n\r\n- `resource`: A previously acquired resource\r\n- *Returns*: True if the resource is acquired, else False\r\n\r\n```js\r\nif (pool.isAcquired(resource)) {\r\n  // Do any thing\r\n}\r\n```\r\n\r\n\r\n\r\n#### Pool.prototype.includes()\r\n\r\nReturns if the `Pool` contains a resource\r\n\r\n##### Usage\r\n\r\n`pool.includes(resource)`\r\n\r\n- `resource`: A resource object\r\n- *Returns*: True if the resource is in the `Pool`, else False\r\n\r\n```js\r\nif (pool.includes(resource)) {\r\n  // Do any thing\r\n}\r\n```\r\n\r\n\r\n\r\n#### Pool.prototype.release()\r\n\r\nReleases an allocated `resource` and let it back to pool.\r\n\r\n##### Usage\r\n\r\n`pool.release(resource)`\r\n\r\n- `resource`: A previously acquired resource\r\n- *Returns*: undefined\r\n\r\n```js\r\npool.release(resource);\r\n```\r\n\r\n\r\n\r\n\r\n#### Pool.prototype.destroy()\r\n\r\nReleases, destroys and removes any `resource` from `Pool`.\r\n\r\n##### Usage\r\n\r\n`pool.destroy(resource)`\r\n\r\n- `resource`: A previously acquired resource\r\n- *Returns*: undefined\r\n\r\n```js\r\npool.destroy(resource);\r\n```\r\n\r\n\r\n\r\n\r\n#### Pool.prototype.start()\r\n\r\nStarts the `Pool` and begins creating of resources, starts house keeping and any other internal logic.\r\n\r\n*Note: This method is not need to be called. `Pool` instance will automatically be started when acquire() method is called*  \r\n\r\n##### Usage\r\n\r\n`pool.start()`\r\n\r\n- *Returns*: undefined\r\n\r\n\r\n```js\r\npool.start();\r\n```\r\n\r\n\r\n\r\n#### Pool.prototype.close()\r\n\r\nShuts down the `Pool` and destroys all resources.  \r\n\r\n##### Usage\r\n\r\n`close(callback: Callback): void;`\r\n`close(terminateWait: number, callback?: Callback): Promise<void>;`\r\n`close(force: boolean, callback?: Callback): void;`\r\n\r\n- `force`: If true, `Pool` will immediately destroy resources instead of waiting to be released\r\n- `terminateWait`: If specified, `Pool` will wait for active resources to release\r\n- `callback`: If specified, callback will be called after close. If not specified a promise returns.\r\n\r\n\r\n```js\r\nvar promise = pool.close();\r\npromise.then(() => {\r\n  console.log('Pool has been shut down') \r\n}).catch(err => {\r\n  console.error(err);  \r\n});\r\n```\r\n\r\n### Properties\r\n\r\n\r\n- `acquired` (Number): Returns number of acquired resources.\r\n- `available` (Number): Returns number of idle resources.\r\n- `creating` (Number): Returns number of resources currently been created.\r\n- `pending` (Number): Returns number of acquire request waits in the `Pool` queue.\r\n- `size` (Number): Returns number of total resources.\r\n- `state` (PoolState): Returns current state of the `Pool`.\r\n- `options` (PoolOptions): Returns object instance that holds configuration properties\r\n    - `acquireMaxRetries` (Get/Set): Maximum number that `Pool` will try to create a resource before returning the error. (Default 0)\r\n    - `acquireRetryWait` (Get/Set): Time in millis that `Pool` will wait after each tries. (Default 2000) \r\n    - `acquireTimeoutMillis` (Get/Set): Time in millis an acquire call will wait for a resource before timing out. (Default 0 - no limit) \r\n    - `fifo` (Get/Set): If true resources will be allocated first-in-first-out order. resources will be allocated last-in-first-out order. (Default true)\r\n    - `idleTimeoutMillis` (Get/Set): The minimum amount of time in millis that an `resource` may sit idle in the `Pool`. (Default 30000) \r\n    - `houseKeepInterval` (Get/Set): Time period in millis that `Pool` will make a cleanup. (Default 1000) \r\n    - `min` (Get/Set): Minimum number of resources that `Pool` will keep. (Default 0)\r\n    - `minIdle` (Get/Set): Minimum number of resources that `Pool` will keep in idle state. (Default 0)\r\n    - `max` (Get/Set): Maximum number of resources that `Pool` will create. (Default 10)\r\n    - `maxQueue` (Get/Set): Maximum number of request that `Pool` will acceps. (Default 1000)\r\n    - `resetOnReturn` (Get/Set): If true `Pool` will call `reset()` function of factory before moving it idle state. (Default true)\r\n    - `validation` (Get/Set): If true `Pool` will call `validation()` function of factory when it needs it. If false, `validation()` never been called. (Default true)    \r\n\r\n### Events\r\n\r\nPool derives from EventEmitter and produce the following events:\r\n\r\n- `acquire`: Emitted when a resource acquired.\r\n    \r\n```js\r\npool.on('acquire', function(resource){\r\n  //....\r\n})\r\n```    \r\n    \r\n- `create`: Emitted when a new resource is added to the `Pool`.\r\n```js\r\npool.on('create', function(resource){\r\n  //....\r\n})\r\n```    \r\n\r\n- `create-error`: Emitted when a factory.create informs any error.\r\n```js\r\npool.on('create-error', function(error){\r\n  //Log stuff maybe\r\n})\r\n```    \r\n\r\n- `destroy`: Emitted when a resource is destroyed and removed from the `Pool`.\r\n- `destroy-error`: Emitted when a factory.destroy informs any error.\r\n```js\r\npool.on('destroy-error', function(error, resource){\r\n  //Log stuff maybe\r\n})\r\n```    \r\n\r\n- `return`: Emitted when an acquired resource returns to the `Pool`.\r\n```js\r\npool.on('start', function(resource){\r\n  //...\r\n})\r\n```    \r\n\r\n\r\n- `start`: Emitted when the `Pool` started.\r\n```js\r\npool.on('start', function(){\r\n  //...\r\n})\r\n```    \r\n\r\n- `closing`: Emitted when before closing the `Pool`.\r\n```js\r\npool.on('closing', function(){\r\n  //...\r\n})\r\n```    \r\n\r\n\r\n- `close`: Emitted when after closing the `Pool`.\r\n```js\r\npool.on('close', function(){\r\n  //...\r\n})\r\n```    \r\n\r\n- `validate-error`: Emitted when a factory.validate informs any error.\r\n```js\r\npool.on('validate-error', function(error, resource){\r\n  //Log stuff maybe\r\n})\r\n```    \r\n\r\n## PoolState enum\r\n\r\nPool.PoolState (Number): \r\n\r\n- IDLE: 0,     // Pool has not been started\r\n  \r\n- STARTED: 1,  // Pool has been started\r\n  \r\n- CLOSING: 2, // Pool shutdown in progress\r\n  \r\n- CLOSED: 3   // Pool has been shut down\r\n  \r\n\r\n\r\n## Node Compatibility\r\n\r\n  - node `>= 16.0`;\r\n  \r\n### License\r\n[MIT](LICENSE)\r\n\r\n[npm-image]: https://img.shields.io/npm/v/lightning-pool.svg\r\n[npm-url]: https://npmjs.org/package/lightning-pool\r\n[circleci-image]: https://circleci.com/gh/panates/lightning-pool/tree/master.svg?style=shield\r\n[circleci-url]: https://circleci.com/gh/panates/lightning-pool/tree/master\r\n[coveralls-image]: https://img.shields.io/coveralls/panates/lightning-pool/master.svg\r\n[coveralls-url]: https://coveralls.io/r/panates/lightning-pool\r\n[downloads-image]: https://img.shields.io/npm/dm/lightning-pool.svg\r\n[downloads-url]: https://npmjs.org/package/lightning-pool\r\n[gitter-image]: https://badges.gitter.im/panates/lightning-pool.svg\r\n[gitter-url]: https://gitter.im/panates/lightning-pool?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\r\n[dependencies-image]: https://david-dm.org/panates/lightning-pool/status.svg\r\n[dependencies-url]:https://david-dm.org/panates/lightning-pool\r\n[devdependencies-image]: https://david-dm.org/panates/lightning-pool/dev-status.svg\r\n[devdependencies-url]:https://david-dm.org/panates/lightning-pool?type=dev\r\n[quality-image]: http://npm.packagequality.com/shield/lightning-pool.png\r\n[quality-url]: http://packagequality.com/#?package=lightning-pool\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/lightning-pool/README.md b/node_modules/lightning-pool/README.md
--- a/node_modules/lightning-pool/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/lightning-pool/README.md	(date 1753913035677)
@@ -2,7 +2,7 @@
 
 [![NPM Version][npm-image]][npm-url]
 [![NPM Downloads][downloads-image]][downloads-url]
-[![CircleCI][circleci-image]][circleci-url]
+[![CI Tests][ci-test-image]][ci-test-url]
 [![Test Coverage][coveralls-image]][coveralls-url]
 
 ## About
@@ -54,6 +54,8 @@
     minIdle: 2  // minimum idle resources
 });
 
+pool.start();
+
 /**
  * Step 3 - Use pool in your code to acquire/release resources
  */
@@ -121,7 +123,13 @@
 
 ##### Usage
 
-`pool.acquire()`
+`pool.acquire(): Promise<any>`
+
+`pool.acquire(factoryCreateOptions: any): Promise<any>`
+
+`pool.acquire(callback:Callback): Promise<any>`
+
+`pool.acquire(factoryCreateOptions?: any, callback:Callback): Promise<any>`
 
 - *Returns*: A Promise
 
@@ -369,8 +377,8 @@
 
 [npm-image]: https://img.shields.io/npm/v/lightning-pool.svg
 [npm-url]: https://npmjs.org/package/lightning-pool
-[circleci-image]: https://circleci.com/gh/panates/lightning-pool/tree/master.svg?style=shield
-[circleci-url]: https://circleci.com/gh/panates/lightning-pool/tree/master
+[ci-test-image]: https://github.com/panates/lightning-pool/actions/workflows/test.yml/badge.svg
+[ci-test-url]: https://github.com/panates/lightning-pool/actions/workflows/test.yml
 [coveralls-image]: https://img.shields.io/coveralls/panates/lightning-pool/master.svg
 [coveralls-url]: https://coveralls.io/r/panates/lightning-pool
 [downloads-image]: https://img.shields.io/npm/dm/lightning-pool.svg
Index: node_modules/lightning-pool/cjs/pool.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Pool = void 0;\r\nconst doublylinked_1 = __importDefault(require(\"doublylinked\"));\r\nconst events_1 = require(\"events\");\r\nconst putil_promisify_1 = __importDefault(require(\"putil-promisify\"));\r\nconst abort_error_js_1 = require(\"./abort-error.js\");\r\nconst definitions_js_1 = require(\"./definitions.js\");\r\nconst pool_options_js_1 = require(\"./pool-options.js\");\r\nconst pool_request_js_1 = require(\"./pool-request.js\");\r\nconst resource_item_js_1 = require(\"./resource-item.js\");\r\nclass Pool extends events_1.EventEmitter {\r\n    constructor(factory, config) {\r\n        super();\r\n        this._requestQueue = new doublylinked_1.default();\r\n        this._allResources = new Map();\r\n        this._acquiredResources = new doublylinked_1.default();\r\n        this._idleResources = new doublylinked_1.default();\r\n        this._creating = 0;\r\n        this._requestsProcessing = 0;\r\n        this._state = definitions_js_1.PoolState.IDLE;\r\n        if (typeof factory !== 'object')\r\n            throw new TypeError('You must provide `factory` object');\r\n        if (typeof factory.create !== 'function')\r\n            throw new TypeError('factory.create must be a function');\r\n        if (typeof factory.destroy !== 'function')\r\n            throw new TypeError('factory.destroy must be a function');\r\n        if (factory.validate && typeof factory.validate !== 'function')\r\n            throw new TypeError('factory.validate can be a function');\r\n        if (factory.reset && typeof factory.reset !== 'function')\r\n            throw new TypeError('factory.reset can be a function');\r\n        const opts = this._options = new pool_options_js_1.PoolOptions(this);\r\n        opts.on('change', (prop, val) => {\r\n            if (prop === 'houseKeepInterval')\r\n                this._setHouseKeep(val);\r\n            if (prop === 'min' || prop === 'minIdle')\r\n                this._ensureMin();\r\n        });\r\n        if (config)\r\n            this.options.assign(config);\r\n        this._factory = factory;\r\n    }\r\n    /**\r\n     * Returns Pool options\r\n     */\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    /**\r\n     * Returns number of resources that are currently acquired\r\n     */\r\n    get acquired() {\r\n        return this._acquiredResources.length;\r\n    }\r\n    /**\r\n     * Returns number of unused resources in the pool\r\n     */\r\n    get available() {\r\n        return this._idleResources.length;\r\n    }\r\n    /**\r\n     * Returns number of resources currently creating\r\n     */\r\n    get creating() {\r\n        return this._creating;\r\n    }\r\n    /**\r\n     * Returns number of callers waiting to acquire a resource\r\n     */\r\n    get pending() {\r\n        return this._requestQueue.length + this._requestsProcessing;\r\n    }\r\n    /**\r\n     * Returns number of resources in the pool\r\n     * regardless of whether they are idle or in use\r\n     */\r\n    get size() {\r\n        return this._allResources.size;\r\n    }\r\n    /**\r\n     * Returns state of the pool\r\n     */\r\n    get state() {\r\n        return this._state;\r\n    }\r\n    /**\r\n     * Starts the pool and begins creating of resources, starts house keeping and any other internal logic.\r\n     * Note: This method is not need to be called. Pool instance will automatically be started when acquire() method is called\r\n     */\r\n    start() {\r\n        if (this._state === definitions_js_1.PoolState.STARTED)\r\n            return;\r\n        if (this._state >= definitions_js_1.PoolState.CLOSING)\r\n            throw new Error('Closed pool can not be started again');\r\n        this._state = definitions_js_1.PoolState.STARTED;\r\n        this._setHouseKeep(this.options.houseKeepInterval);\r\n        this._ensureMin();\r\n        this.emit('start');\r\n    }\r\n    close(arg0, arg1) {\r\n        let terminateWait = Infinity;\r\n        let callback;\r\n        if (typeof arg0 === 'function')\r\n            callback = arg0;\r\n        else {\r\n            terminateWait = typeof arg0 === 'number' ? arg0 :\r\n                (!!arg0 ? 0 : Infinity);\r\n            callback = arg1;\r\n        }\r\n        if (!callback)\r\n            return putil_promisify_1.default.fromCallback(cb => this.close(terminateWait, cb));\r\n        if (this._state === definitions_js_1.PoolState.CLOSED || this._state === definitions_js_1.PoolState.IDLE)\r\n            return callback();\r\n        if (this._state === definitions_js_1.PoolState.CLOSING) {\r\n            this.once('close', callback);\r\n            return;\r\n        }\r\n        this.emit('closing');\r\n        if (this._houseKeepTimer)\r\n            clearTimeout(this._houseKeepTimer);\r\n        this._state = definitions_js_1.PoolState.CLOSING;\r\n        this._requestQueue.forEach(t => t.stopTimout());\r\n        this._requestQueue = new doublylinked_1.default();\r\n        this._requestsProcessing = 0;\r\n        if (terminateWait <= 0) {\r\n            this._acquiredResources.forEach(t => this.destroy(t.resource));\r\n        }\r\n        else {\r\n            const startTime = Date.now();\r\n            this._closeWaitTimer = setInterval(() => {\r\n                if (!this._allResources.size) {\r\n                    clearInterval(this._closeWaitTimer);\r\n                    this._closeWaitTimer = undefined;\r\n                    return;\r\n                }\r\n                if (Date.now() > startTime + terminateWait) {\r\n                    clearInterval(this._closeWaitTimer);\r\n                    this._closeWaitTimer = undefined;\r\n                    this._acquiredResources.forEach(t => this.release(t.resource));\r\n                    this.emit('terminate');\r\n                }\r\n            }, 50);\r\n        }\r\n        this._setHouseKeep(5);\r\n        this.once('close', callback);\r\n    }\r\n    closeAsync(arg0) {\r\n        return putil_promisify_1.default.fromCallback(cb => this.close(arg0, cb));\r\n    }\r\n    acquire(arg0) {\r\n        if (!arg0)\r\n            return putil_promisify_1.default.fromCallback(cb => this.acquire(cb));\r\n        const callback = arg0;\r\n        try {\r\n            this.start();\r\n        }\r\n        catch (e) {\r\n            return callback(e);\r\n        }\r\n        if (this.options.maxQueue && this.pending >= this.options.maxQueue)\r\n            return callback(new Error('Pool queue is full'));\r\n        this._requestQueue.push(new pool_request_js_1.PoolRequest(this, callback));\r\n        this._processNextRequest();\r\n    }\r\n    /**\r\n     * Releases an allocated `resource` and let it back to pool.\r\n     */\r\n    release(resource, callback) {\r\n        const item = this._allResources.get(resource);\r\n        if (item && item.state !== definitions_js_1.ResourceState.IDLE)\r\n            this._itemSetIdle(item, callback);\r\n        this._processNextRequest();\r\n    }\r\n    /**\r\n     * Async version of release().\r\n     */\r\n    releaseAsync(resource) {\r\n        return putil_promisify_1.default.fromCallback(cb => this.release(resource, cb));\r\n    }\r\n    /**\r\n     * Releases, destroys and removes any `resource` from `Pool`.\r\n     */\r\n    destroy(resource, callback) {\r\n        try {\r\n            const item = this._allResources.get(resource);\r\n            if (item)\r\n                this._itemDestroy(item, callback);\r\n            else if (callback)\r\n                callback();\r\n        }\r\n        finally {\r\n            this._processNextRequest();\r\n        }\r\n    }\r\n    /**\r\n     * Async version of destroy().\r\n     */\r\n    destroyAsync(resource) {\r\n        return putil_promisify_1.default.fromCallback(cb => this.destroy(resource, cb));\r\n    }\r\n    /**\r\n     * Returns if a `resource` has been acquired from the pool and not yet released or destroyed.\r\n     */\r\n    isAcquired(resource) {\r\n        const item = this._allResources.get(resource);\r\n        return !!(item && item.acquiredNode);\r\n    }\r\n    /**\r\n     * Returns if the pool contains a `resource`\r\n     */\r\n    includes(resource) {\r\n        return this._allResources.has(resource);\r\n    }\r\n    _processNextRequest() {\r\n        if (this._state !== definitions_js_1.PoolState.STARTED ||\r\n            this._requestsProcessing >= this.options.max - this.acquired)\r\n            return;\r\n        const request = this._requestQueue.shift();\r\n        if (!request)\r\n            return;\r\n        this._requestsProcessing++;\r\n        const handleCallback = (err, item) => {\r\n            this._requestsProcessing--;\r\n            request.stopTimout();\r\n            try {\r\n                if (item) {\r\n                    /* istanbul ignore next : Hard to simulate */\r\n                    if (this._state !== definitions_js_1.PoolState.STARTED) {\r\n                        this._itemDestroy(item);\r\n                        return;\r\n                    }\r\n                    this._itemSetAcquired(item);\r\n                    this._ensureMin();\r\n                    request.callback(undefined, item.resource);\r\n                    this.emit('acquire', item.resource);\r\n                }\r\n                else\r\n                    request.callback(err);\r\n            }\r\n            catch (ignored) {\r\n                // ignored\r\n            }\r\n            this._processNextRequest();\r\n        };\r\n        const item = this._idleResources.shift();\r\n        if (item) {\r\n            /* Validate resource */\r\n            if (this.options.validation && this._factory.validate) {\r\n                this._itemValidate(item, (err) => {\r\n                    /* Destroy resource on validation error */\r\n                    if (err) {\r\n                        this._itemDestroy(item);\r\n                        this.emit('validate-error', err, item.resource);\r\n                        this._requestsProcessing--;\r\n                        this._requestQueue.unshift(request);\r\n                        this._processNextRequest();\r\n                    }\r\n                    else\r\n                        handleCallback(undefined, item);\r\n                });\r\n                return;\r\n            }\r\n            return handleCallback(undefined, item);\r\n        }\r\n        /** There is no idle resource. We need to create new one **/\r\n        this._createResource(request, handleCallback);\r\n    }\r\n    emit(event, ...args) {\r\n        // Prevents errors while calling emit()\r\n        try {\r\n            return super.emit(event, ...args);\r\n        }\r\n        catch (e) {\r\n            return true;\r\n        }\r\n    }\r\n    /**\r\n     * Creates new resource\r\n     */\r\n    _createResource(request, callback) {\r\n        const maxRetries = this.options.acquireMaxRetries;\r\n        let tries = 0;\r\n        this._creating++;\r\n        const handleCallback = (err, obj) => {\r\n            if (request && request.timedOut)\r\n                return;\r\n            if (err || !obj) {\r\n                tries++;\r\n                this.emit('error', err, {\r\n                    requestTime: request ? request.created : Date.now(),\r\n                    tries,\r\n                    maxRetries: this.options.acquireMaxRetries\r\n                });\r\n                if (err instanceof abort_error_js_1.AbortError || tries >= maxRetries) {\r\n                    this._creating--;\r\n                    return callback && callback(err);\r\n                }\r\n                return setTimeout(() => tryCreate(), this.options.acquireRetryWait);\r\n            }\r\n            this._creating--;\r\n            if (this._allResources.has(obj))\r\n                return callback &&\r\n                    callback(new Error('Factory error. Resource already in pool'));\r\n            const item = new resource_item_js_1.ResourceItem(obj);\r\n            this._itemSetIdle(item);\r\n            this._allResources.set(obj, item);\r\n            if (callback)\r\n                callback(undefined, item);\r\n            this.emit('create', obj);\r\n        };\r\n        const tryCreate = () => {\r\n            try {\r\n                const o = this._factory.create({ tries, maxRetries });\r\n                /* istanbul ignore next */\r\n                if (!o)\r\n                    return handleCallback(new abort_error_js_1.AbortError('Factory returned no resource'));\r\n                putil_promisify_1.default.await(o, handleCallback);\r\n            }\r\n            catch (e) {\r\n                handleCallback(e);\r\n            }\r\n        };\r\n        tryCreate();\r\n    }\r\n    _setHouseKeep(ms) {\r\n        if (this._houseKeepTimer)\r\n            clearInterval(this._houseKeepTimer);\r\n        this._houseKeepTimer = undefined;\r\n        if (ms > 0 && this.state === definitions_js_1.PoolState.STARTED || this.state === definitions_js_1.PoolState.CLOSING)\r\n            this._houseKeepTimer = setInterval(() => this._houseKeep(), ms);\r\n    }\r\n    _houseKeep() {\r\n        const isClosing = this._state === definitions_js_1.PoolState.CLOSING;\r\n        const now = Date.now();\r\n        let m = this._allResources.size - this.options.min;\r\n        let n = this._idleResources.length - this.options.minIdle;\r\n        if (isClosing || (m > 0 && n > 0)) {\r\n            this._idleResources.every((item) => {\r\n                if (isClosing ||\r\n                    item.idleTime + this.options.idleTimeoutMillis < now) {\r\n                    this._itemDestroy(item);\r\n                    return isClosing || !!((--n) && (--m));\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n        if (isClosing) {\r\n            /* Check again 5 ms later */\r\n            if (this._allResources.size)\r\n                return;\r\n            clearInterval(this._houseKeepTimer);\r\n            this._state = definitions_js_1.PoolState.CLOSED;\r\n            this._requestsProcessing = 0;\r\n            this.emit('close');\r\n        }\r\n    }\r\n    _ensureMin() {\r\n        process.nextTick(() => {\r\n            let k = Math.max(this.options.min - this._allResources.size, this.options.minIdle - this._idleResources.length) - this.creating;\r\n            while (k-- > 0)\r\n                this._createResource();\r\n        });\r\n    }\r\n    _itemSetAcquired(item) {\r\n        if (item.state !== definitions_js_1.ResourceState.ACQUIRED) {\r\n            this._itemDetach(item);\r\n            item.state = definitions_js_1.ResourceState.ACQUIRED;\r\n            this._acquiredResources.push(item);\r\n            item.acquiredNode = this._acquiredResources.tail;\r\n        }\r\n    }\r\n    _itemDetach(item) {\r\n        switch (item.state) {\r\n            case definitions_js_1.ResourceState.IDLE:\r\n                item.idleTime = 0;\r\n                /* istanbul ignore next*/\r\n                if (item.idleNode)\r\n                    item.idleNode.remove();\r\n                item.idleNode = undefined;\r\n                break;\r\n            case definitions_js_1.ResourceState.ACQUIRED:\r\n            case definitions_js_1.ResourceState.VALIDATION:\r\n                /* istanbul ignore next*/\r\n                if (item.acquiredNode)\r\n                    item.acquiredNode.remove();\r\n                item.acquiredNode = undefined;\r\n                break;\r\n        }\r\n    }\r\n    _itemSetIdle(item, callback) {\r\n        const isAcquired = item.state === definitions_js_1.ResourceState.ACQUIRED;\r\n        const handleCallback = (err) => {\r\n            if (err)\r\n                return this._itemDestroy(item, callback);\r\n            this._itemDetach(item);\r\n            item.idleTime = Date.now();\r\n            item.state = definitions_js_1.ResourceState.IDLE;\r\n            if (this.options.fifo) {\r\n                this._idleResources.push(item);\r\n                item.idleNode = this._idleResources.tail;\r\n            }\r\n            else {\r\n                this._idleResources.unshift(item);\r\n                item.idleNode = this._idleResources.head;\r\n            }\r\n            if (isAcquired)\r\n                this.emit('return', item.resource);\r\n            if (callback)\r\n                callback();\r\n            // noinspection JSAccessibilityCheck\r\n            this._processNextRequest();\r\n        };\r\n        if (isAcquired && this._factory.reset) {\r\n            try {\r\n                const o = this._factory.reset(item.resource);\r\n                putil_promisify_1.default.await(o, handleCallback);\r\n            }\r\n            catch (e) {\r\n                handleCallback(e);\r\n            }\r\n        }\r\n        else\r\n            handleCallback();\r\n    }\r\n    _itemDestroy(item, callback) {\r\n        this._itemDetach(item);\r\n        const handleCallback = (err) => {\r\n            if (err) {\r\n                this.emit('destroy-error', err, item.resource);\r\n                /* istanbul ignore next */\r\n                return callback && callback(err);\r\n            }\r\n            this.emit('destroy', item.resource);\r\n            item.destroyed = true;\r\n            if (callback)\r\n                callback();\r\n        };\r\n        try {\r\n            this._allResources.delete(item.resource);\r\n            this._processNextRequest();\r\n            const o = this._factory.destroy(item.resource);\r\n            putil_promisify_1.default.await(o, handleCallback);\r\n        }\r\n        catch (e) {\r\n            handleCallback(e);\r\n        }\r\n    }\r\n    _itemValidate(item, callback) {\r\n        item.state = definitions_js_1.ResourceState.VALIDATION;\r\n        try {\r\n            const o = this._factory.validate?.(item.resource);\r\n            // @ts-ignore\r\n            putil_promisify_1.default.await(o, callback);\r\n        }\r\n        catch (e) {\r\n            if (callback)\r\n                callback(e);\r\n        }\r\n    }\r\n}\r\nexports.Pool = Pool;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/lightning-pool/cjs/pool.js b/node_modules/lightning-pool/cjs/pool.js
--- a/node_modules/lightning-pool/cjs/pool.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/lightning-pool/cjs/pool.js	(date 1753913035669)
@@ -1,14 +1,12 @@
 "use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.Pool = void 0;
-const doublylinked_1 = __importDefault(require("doublylinked"));
+const tslib_1 = require("tslib");
+const doublylinked_1 = tslib_1.__importDefault(require("doublylinked"));
 const events_1 = require("events");
-const putil_promisify_1 = __importDefault(require("putil-promisify"));
+const putil_promisify_1 = tslib_1.__importDefault(require("putil-promisify"));
 const abort_error_js_1 = require("./abort-error.js");
-const definitions_js_1 = require("./definitions.js");
+const constants_js_1 = require("./constants.js");
 const pool_options_js_1 = require("./pool-options.js");
 const pool_request_js_1 = require("./pool-request.js");
 const resource_item_js_1 = require("./resource-item.js");
@@ -21,26 +19,31 @@
         this._idleResources = new doublylinked_1.default();
         this._creating = 0;
         this._requestsProcessing = 0;
-        this._state = definitions_js_1.PoolState.IDLE;
-        if (typeof factory !== 'object')
+        this._state = constants_js_1.PoolState.IDLE;
+        if (typeof factory !== 'object') {
             throw new TypeError('You must provide `factory` object');
-        if (typeof factory.create !== 'function')
+        }
+        if (typeof factory.create !== 'function') {
             throw new TypeError('factory.create must be a function');
-        if (typeof factory.destroy !== 'function')
+        }
+        if (typeof factory.destroy !== 'function') {
             throw new TypeError('factory.destroy must be a function');
-        if (factory.validate && typeof factory.validate !== 'function')
+        }
+        if (factory.validate && typeof factory.validate !== 'function') {
             throw new TypeError('factory.validate can be a function');
-        if (factory.reset && typeof factory.reset !== 'function')
+        }
+        if (factory.reset && typeof factory.reset !== 'function') {
             throw new TypeError('factory.reset can be a function');
-        const opts = this._options = new pool_options_js_1.PoolOptions(this);
+        }
+        const opts = (this._options = new pool_options_js_1.PoolOptions(this));
+        if (config)
+            this.options.assign(config);
         opts.on('change', (prop, val) => {
             if (prop === 'houseKeepInterval')
                 this._setHouseKeep(val);
             if (prop === 'min' || prop === 'minIdle')
                 this._ensureMin();
         });
-        if (config)
-            this.options.assign(config);
         this._factory = factory;
     }
     /**
@@ -91,11 +94,12 @@
      * Note: This method is not need to be called. Pool instance will automatically be started when acquire() method is called
      */
     start() {
-        if (this._state === definitions_js_1.PoolState.STARTED)
+        if (this._state === constants_js_1.PoolState.STARTED)
             return;
-        if (this._state >= definitions_js_1.PoolState.CLOSING)
+        if (this._state >= constants_js_1.PoolState.CLOSING) {
             throw new Error('Closed pool can not be started again');
-        this._state = definitions_js_1.PoolState.STARTED;
+        }
+        this._state = constants_js_1.PoolState.STARTED;
         this._setHouseKeep(this.options.houseKeepInterval);
         this._ensureMin();
         this.emit('start');
@@ -106,22 +110,23 @@
         if (typeof arg0 === 'function')
             callback = arg0;
         else {
-            terminateWait = typeof arg0 === 'number' ? arg0 :
-                (!!arg0 ? 0 : Infinity);
+            terminateWait = typeof arg0 === 'number' ? arg0 : arg0 ? 0 : Infinity;
             callback = arg1;
         }
-        if (!callback)
+        if (!callback) {
             return putil_promisify_1.default.fromCallback(cb => this.close(terminateWait, cb));
-        if (this._state === definitions_js_1.PoolState.CLOSED || this._state === definitions_js_1.PoolState.IDLE)
+        }
+        if (this._state === constants_js_1.PoolState.CLOSED || this._state === constants_js_1.PoolState.IDLE) {
             return callback();
-        if (this._state === definitions_js_1.PoolState.CLOSING) {
+        }
+        if (this._state === constants_js_1.PoolState.CLOSING) {
             this.once('close', callback);
             return;
         }
         this.emit('closing');
         if (this._houseKeepTimer)
             clearTimeout(this._houseKeepTimer);
-        this._state = definitions_js_1.PoolState.CLOSING;
+        this._state = constants_js_1.PoolState.CLOSING;
         this._requestQueue.forEach(t => t.stopTimout());
         this._requestQueue = new doublylinked_1.default();
         this._requestsProcessing = 0;
@@ -150,18 +155,18 @@
     closeAsync(arg0) {
         return putil_promisify_1.default.fromCallback(cb => this.close(arg0, cb));
     }
-    acquire(arg0) {
-        if (!arg0)
+    acquire(callback) {
+        if (!callback)
             return putil_promisify_1.default.fromCallback(cb => this.acquire(cb));
-        const callback = arg0;
         try {
             this.start();
         }
         catch (e) {
             return callback(e);
         }
-        if (this.options.maxQueue && this.pending >= this.options.maxQueue)
+        if (this.options.maxQueue && this.pending >= this.options.maxQueue) {
             return callback(new Error('Pool queue is full'));
+        }
         this._requestQueue.push(new pool_request_js_1.PoolRequest(this, callback));
         this._processNextRequest();
     }
@@ -170,8 +175,9 @@
      */
     release(resource, callback) {
         const item = this._allResources.get(resource);
-        if (item && item.state !== definitions_js_1.ResourceState.IDLE)
+        if (item && item.state !== constants_js_1.ResourceState.IDLE) {
             this._itemSetIdle(item, callback);
+        }
         this._processNextRequest();
     }
     /**
@@ -215,9 +221,10 @@
         return this._allResources.has(resource);
     }
     _processNextRequest() {
-        if (this._state !== definitions_js_1.PoolState.STARTED ||
-            this._requestsProcessing >= this.options.max - this.acquired)
+        if (this._state !== constants_js_1.PoolState.STARTED ||
+            this._requestsProcessing >= this.options.max - this.acquired) {
             return;
+        }
         const request = this._requestQueue.shift();
         if (!request)
             return;
@@ -228,7 +235,7 @@
             try {
                 if (item) {
                     /* istanbul ignore next : Hard to simulate */
-                    if (this._state !== definitions_js_1.PoolState.STARTED) {
+                    if (this._state !== constants_js_1.PoolState.STARTED) {
                         this._itemDestroy(item);
                         return;
                     }
@@ -240,7 +247,7 @@
                 else
                     request.callback(err);
             }
-            catch (ignored) {
+            catch {
                 // ignored
             }
             this._processNextRequest();
@@ -249,9 +256,9 @@
         if (item) {
             /* Validate resource */
             if (this.options.validation && this._factory.validate) {
-                this._itemValidate(item, (err) => {
+                this._itemValidate(item, (err, result) => {
                     /* Destroy resource on validation error */
-                    if (err) {
+                    if (err || result === false) {
                         this._itemDestroy(item);
                         this.emit('validate-error', err, item.resource);
                         this._requestsProcessing--;
@@ -273,7 +280,7 @@
         try {
             return super.emit(event, ...args);
         }
-        catch (e) {
+        catch {
             return true;
         }
     }
@@ -292,7 +299,7 @@
                 this.emit('error', err, {
                     requestTime: request ? request.created : Date.now(),
                     tries,
-                    maxRetries: this.options.acquireMaxRetries
+                    maxRetries: this.options.acquireMaxRetries,
                 });
                 if (err instanceof abort_error_js_1.AbortError || tries >= maxRetries) {
                     this._creating--;
@@ -301,9 +308,10 @@
                 return setTimeout(() => tryCreate(), this.options.acquireRetryWait);
             }
             this._creating--;
-            if (this._allResources.has(obj))
-                return callback &&
-                    callback(new Error('Factory error. Resource already in pool'));
+            if (this._allResources.has(obj)) {
+                return (callback &&
+                    callback(new Error('Factory error. Resource already in pool')));
+            }
             const item = new resource_item_js_1.ResourceItem(obj);
             this._itemSetIdle(item);
             this._allResources.set(obj, item);
@@ -315,8 +323,9 @@
             try {
                 const o = this._factory.create({ tries, maxRetries });
                 /* istanbul ignore next */
-                if (!o)
+                if (!o) {
                     return handleCallback(new abort_error_js_1.AbortError('Factory returned no resource'));
+                }
                 putil_promisify_1.default.await(o, handleCallback);
             }
             catch (e) {
@@ -329,20 +338,21 @@
         if (this._houseKeepTimer)
             clearInterval(this._houseKeepTimer);
         this._houseKeepTimer = undefined;
-        if (ms > 0 && this.state === definitions_js_1.PoolState.STARTED || this.state === definitions_js_1.PoolState.CLOSING)
+        if ((ms > 0 && this.state === constants_js_1.PoolState.STARTED) ||
+            this.state === constants_js_1.PoolState.CLOSING) {
             this._houseKeepTimer = setInterval(() => this._houseKeep(), ms);
+        }
     }
     _houseKeep() {
-        const isClosing = this._state === definitions_js_1.PoolState.CLOSING;
+        const isClosing = this._state === constants_js_1.PoolState.CLOSING;
         const now = Date.now();
         let m = this._allResources.size - this.options.min;
         let n = this._idleResources.length - this.options.minIdle;
         if (isClosing || (m > 0 && n > 0)) {
             this._idleResources.every((item) => {
-                if (isClosing ||
-                    item.idleTime + this.options.idleTimeoutMillis < now) {
+                if (isClosing || item.idleTime + this.options.idleTimeoutMillis < now) {
                     this._itemDestroy(item);
-                    return isClosing || !!((--n) && (--m));
+                    return isClosing || !!(--n && --m);
                 }
                 return false;
             });
@@ -352,7 +362,7 @@
             if (this._allResources.size)
                 return;
             clearInterval(this._houseKeepTimer);
-            this._state = definitions_js_1.PoolState.CLOSED;
+            this._state = constants_js_1.PoolState.CLOSED;
             this._requestsProcessing = 0;
             this.emit('close');
         }
@@ -365,39 +375,41 @@
         });
     }
     _itemSetAcquired(item) {
-        if (item.state !== definitions_js_1.ResourceState.ACQUIRED) {
+        if (item.state !== constants_js_1.ResourceState.ACQUIRED) {
             this._itemDetach(item);
-            item.state = definitions_js_1.ResourceState.ACQUIRED;
+            item.state = constants_js_1.ResourceState.ACQUIRED;
             this._acquiredResources.push(item);
             item.acquiredNode = this._acquiredResources.tail;
         }
     }
     _itemDetach(item) {
         switch (item.state) {
-            case definitions_js_1.ResourceState.IDLE:
+            case constants_js_1.ResourceState.IDLE:
                 item.idleTime = 0;
                 /* istanbul ignore next*/
                 if (item.idleNode)
                     item.idleNode.remove();
                 item.idleNode = undefined;
                 break;
-            case definitions_js_1.ResourceState.ACQUIRED:
-            case definitions_js_1.ResourceState.VALIDATION:
+            case constants_js_1.ResourceState.ACQUIRED:
+            case constants_js_1.ResourceState.VALIDATION:
                 /* istanbul ignore next*/
                 if (item.acquiredNode)
                     item.acquiredNode.remove();
                 item.acquiredNode = undefined;
                 break;
+            default:
+                break;
         }
     }
     _itemSetIdle(item, callback) {
-        const isAcquired = item.state === definitions_js_1.ResourceState.ACQUIRED;
+        const isAcquired = item.state === constants_js_1.ResourceState.ACQUIRED;
         const handleCallback = (err) => {
             if (err)
                 return this._itemDestroy(item, callback);
             this._itemDetach(item);
             item.idleTime = Date.now();
-            item.state = definitions_js_1.ResourceState.IDLE;
+            item.state = constants_js_1.ResourceState.IDLE;
             if (this.options.fifo) {
                 this._idleResources.push(item);
                 item.idleNode = this._idleResources.tail;
@@ -428,36 +440,35 @@
     _itemDestroy(item, callback) {
         this._itemDetach(item);
         const handleCallback = (err) => {
-            if (err) {
+            item.destroyed = true;
+            this._allResources.delete(item.resource);
+            if (err)
                 this.emit('destroy-error', err, item.resource);
-                /* istanbul ignore next */
-                return callback && callback(err);
-            }
-            this.emit('destroy', item.resource);
-            item.destroyed = true;
+            else
+                this.emit('destroy', item.resource);
             if (callback)
-                callback();
+                callback(err);
         };
         try {
-            this._allResources.delete(item.resource);
-            this._processNextRequest();
             const o = this._factory.destroy(item.resource);
             putil_promisify_1.default.await(o, handleCallback);
         }
         catch (e) {
             handleCallback(e);
         }
+        finally {
+            this._processNextRequest();
+        }
     }
     _itemValidate(item, callback) {
-        item.state = definitions_js_1.ResourceState.VALIDATION;
+        item.state = constants_js_1.ResourceState.VALIDATION;
         try {
             const o = this._factory.validate?.(item.resource);
             // @ts-ignore
             putil_promisify_1.default.await(o, callback);
         }
         catch (e) {
-            if (callback)
-                callback(e);
+            callback?.(e);
         }
     }
 }
Index: node_modules/lightning-pool/cjs/pool-options.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PoolOptions = void 0;\r\nconst events_1 = require(\"events\");\r\nconst defaultValues = {\r\n    acquireMaxRetries: 0,\r\n    acquireRetryWait: 2000,\r\n    acquireTimeoutMillis: 0,\r\n    fifo: true,\r\n    idleTimeoutMillis: 30000,\r\n    houseKeepInterval: 1000,\r\n    min: 0,\r\n    minIdle: 0,\r\n    max: 10,\r\n    maxQueue: 1000,\r\n    validation: true\r\n};\r\nclass PoolOptions extends events_1.EventEmitter {\r\n    constructor(pool) {\r\n        super();\r\n        this.pool = pool;\r\n        this._acquireMaxRetries = defaultValues.acquireMaxRetries;\r\n        this._acquireRetryWait = defaultValues.acquireRetryWait;\r\n        this._acquireTimeoutMillis = defaultValues.acquireTimeoutMillis;\r\n        this._fifo = defaultValues.fifo;\r\n        this._idleTimeoutMillis = defaultValues.idleTimeoutMillis;\r\n        this._houseKeepInterval = defaultValues.houseKeepInterval;\r\n        this._min = defaultValues.min;\r\n        this._minIdle = defaultValues.minIdle;\r\n        this._max = defaultValues.max;\r\n        this._maxQueue = defaultValues.maxQueue;\r\n        this._validation = defaultValues.validation;\r\n        this.pool = pool;\r\n    }\r\n    get acquireMaxRetries() {\r\n        return this._acquireMaxRetries;\r\n    }\r\n    set acquireMaxRetries(val) {\r\n        this._acquireMaxRetries = val >= 0 ? val : defaultValues.acquireMaxRetries;\r\n        this.emit('change', 'acquireMaxRetries', this._acquireMaxRetries);\r\n    }\r\n    get acquireRetryWait() {\r\n        return this._acquireRetryWait;\r\n    }\r\n    set acquireRetryWait(val) {\r\n        this._acquireRetryWait = val >= 0 ? val : defaultValues.acquireRetryWait;\r\n        this.emit('change', 'acquireRetryWait', this._acquireRetryWait);\r\n    }\r\n    get acquireTimeoutMillis() {\r\n        return this._acquireTimeoutMillis;\r\n    }\r\n    set acquireTimeoutMillis(val) {\r\n        this._acquireTimeoutMillis = val >= 0 ? val : defaultValues.acquireTimeoutMillis;\r\n        this.emit('change', 'acquireTimeoutMillis', this._acquireTimeoutMillis);\r\n    }\r\n    get fifo() {\r\n        return this._fifo;\r\n    }\r\n    set fifo(val) {\r\n        // noinspection PointlessBooleanExpressionJS\r\n        this._fifo = !!val;\r\n        this.emit('change', 'fifo', this.fifo);\r\n    }\r\n    get idleTimeoutMillis() {\r\n        return this._idleTimeoutMillis;\r\n    }\r\n    set idleTimeoutMillis(val) {\r\n        this._idleTimeoutMillis = val >= 0 ? val : defaultValues.idleTimeoutMillis;\r\n        this.emit('change', 'idleTimeoutMillis', this._idleTimeoutMillis);\r\n    }\r\n    get houseKeepInterval() {\r\n        return this._houseKeepInterval;\r\n    }\r\n    set houseKeepInterval(val) {\r\n        this._houseKeepInterval = val >= 0 ? val : defaultValues.houseKeepInterval;\r\n        this.emit('change', 'houseKeepInterval', this._houseKeepInterval);\r\n    }\r\n    get min() {\r\n        return this._min;\r\n    }\r\n    set min(val) {\r\n        this._min = val >= 0 ? val : defaultValues.min;\r\n        if (this._min > this._max)\r\n            this._max = this._min;\r\n        this.emit('change', 'min', this._min);\r\n    }\r\n    get minIdle() {\r\n        return this._minIdle;\r\n    }\r\n    set minIdle(val) {\r\n        this._minIdle = val >= 0 ? val : defaultValues.minIdle;\r\n        this.emit('change', 'minIdle', this.minIdle);\r\n    }\r\n    get max() {\r\n        return this._max;\r\n    }\r\n    set max(val) {\r\n        this._max = val >= 0 ? Math.max(val, 1) : defaultValues.max;\r\n        if (this._min > this._max)\r\n            this._min = this._max;\r\n        this.emit('change', 'max', this._max);\r\n    }\r\n    get maxQueue() {\r\n        return this._maxQueue;\r\n    }\r\n    set maxQueue(val) {\r\n        this._maxQueue = val >= 0 ? Math.max(val, 1) : defaultValues.maxQueue;\r\n        this.emit('change', 'maxQueue', this._maxQueue);\r\n    }\r\n    get validation() {\r\n        return this._validation;\r\n    }\r\n    set validation(val) {\r\n        // noinspection PointlessBooleanExpressionJS\r\n        this._validation = !!val;\r\n        this.emit('change', 'validation', this._validation);\r\n    }\r\n    assign(values) {\r\n        const proto = Object.getPrototypeOf(this);\r\n        for (const k of Object.keys(values)) {\r\n            const desc = Object.getOwnPropertyDescriptor(proto, k);\r\n            if (desc && desc.set)\r\n                this[k] = values[k];\r\n        }\r\n    }\r\n}\r\nexports.PoolOptions = PoolOptions;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/lightning-pool/cjs/pool-options.js b/node_modules/lightning-pool/cjs/pool-options.js
--- a/node_modules/lightning-pool/cjs/pool-options.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/lightning-pool/cjs/pool-options.js	(date 1753913035661)
@@ -13,7 +13,7 @@
     minIdle: 0,
     max: 10,
     maxQueue: 1000,
-    validation: true
+    validation: true,
 };
 class PoolOptions extends events_1.EventEmitter {
     constructor(pool) {
@@ -50,7 +50,8 @@
         return this._acquireTimeoutMillis;
     }
     set acquireTimeoutMillis(val) {
-        this._acquireTimeoutMillis = val >= 0 ? val : defaultValues.acquireTimeoutMillis;
+        this._acquireTimeoutMillis =
+            val >= 0 ? val : defaultValues.acquireTimeoutMillis;
         this.emit('change', 'acquireTimeoutMillis', this._acquireTimeoutMillis);
     }
     get fifo() {
Index: node_modules/lightning-pool/cjs/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.createPool = void 0;\r\nconst pool_js_1 = require(\"./pool.js\");\r\n__exportStar(require(\"./definitions.js\"), exports);\r\n__exportStar(require(\"./pool.js\"), exports);\r\n__exportStar(require(\"./abort-error.js\"), exports);\r\nfunction createPool(factory, config) {\r\n    return new pool_js_1.Pool(factory, config);\r\n}\r\nexports.createPool = createPool;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/lightning-pool/cjs/index.js b/node_modules/lightning-pool/cjs/index.js
--- a/node_modules/lightning-pool/cjs/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/lightning-pool/cjs/index.js	(date 1753913035658)
@@ -1,25 +1,12 @@
 "use strict";
-var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    var desc = Object.getOwnPropertyDescriptor(m, k);
-    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
-      desc = { enumerable: true, get: function() { return m[k]; } };
-    }
-    Object.defineProperty(o, k2, desc);
-}) : (function(o, m, k, k2) {
-    if (k2 === undefined) k2 = k;
-    o[k2] = m[k];
-}));
-var __exportStar = (this && this.__exportStar) || function(m, exports) {
-    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
-};
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.createPool = void 0;
+exports.createPool = createPool;
+const tslib_1 = require("tslib");
 const pool_js_1 = require("./pool.js");
-__exportStar(require("./definitions.js"), exports);
-__exportStar(require("./pool.js"), exports);
-__exportStar(require("./abort-error.js"), exports);
+tslib_1.__exportStar(require("./abort-error.js"), exports);
+tslib_1.__exportStar(require("./constants.js"), exports);
+tslib_1.__exportStar(require("./pool.js"), exports);
+tslib_1.__exportStar(require("./types.js"), exports);
 function createPool(factory, config) {
     return new pool_js_1.Pool(factory, config);
 }
-exports.createPool = createPool;
Index: node_modules/pg/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n  \"name\": \"pg\",\r\n  \"version\": \"8.11.5\",\r\n  \"description\": \"PostgreSQL client - pure javascript & libpq with the same API\",\r\n  \"keywords\": [\r\n    \"database\",\r\n    \"libpq\",\r\n    \"pg\",\r\n    \"postgre\",\r\n    \"postgres\",\r\n    \"postgresql\",\r\n    \"rdbms\"\r\n  ],\r\n  \"homepage\": \"https://github.com/brianc/node-postgres\",\r\n  \"repository\": {\r\n    \"type\": \"git\",\r\n    \"url\": \"git://github.com/brianc/node-postgres.git\",\r\n    \"directory\": \"packages/pg\"\r\n  },\r\n  \"author\": \"Brian Carlson <brian.m.carlson@gmail.com>\",\r\n  \"main\": \"./lib\",\r\n  \"dependencies\": {\r\n    \"pg-connection-string\": \"^2.6.4\",\r\n    \"pg-pool\": \"^3.6.2\",\r\n    \"pg-protocol\": \"^1.6.1\",\r\n    \"pg-types\": \"^2.1.0\",\r\n    \"pgpass\": \"1.x\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@cloudflare/workers-types\": \"^4.20230404.0\",\r\n    \"async\": \"2.6.4\",\r\n    \"bluebird\": \"3.5.2\",\r\n    \"co\": \"4.6.0\",\r\n    \"pg-copy-streams\": \"0.3.0\",\r\n    \"typescript\": \"^4.0.3\",\r\n    \"workerd\": \"^1.20230419.0\",\r\n    \"wrangler\": \"^2.16.0\"\r\n  },\r\n  \"optionalDependencies\": {\r\n    \"pg-cloudflare\": \"^1.1.1\"\r\n  },\r\n  \"peerDependencies\": {\r\n    \"pg-native\": \">=3.0.1\"\r\n  },\r\n  \"peerDependenciesMeta\": {\r\n    \"pg-native\": {\r\n      \"optional\": true\r\n    }\r\n  },\r\n  \"scripts\": {\r\n    \"test\": \"make test-all\"\r\n  },\r\n  \"files\": [\r\n    \"lib\",\r\n    \"SPONSORS.md\"\r\n  ],\r\n  \"license\": \"MIT\",\r\n  \"engines\": {\r\n    \"node\": \">= 8.0.0\"\r\n  },\r\n  \"gitHead\": \"a37a93bf7990220517a40cf16b8e72d4c3e6cef5\"\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg/package.json b/node_modules/pg/package.json
--- a/node_modules/pg/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg/package.json	(date 1753913035455)
@@ -1,6 +1,6 @@
 {
   "name": "pg",
-  "version": "8.11.5",
+  "version": "8.16.3",
   "description": "PostgreSQL client - pure javascript & libpq with the same API",
   "keywords": [
     "database",
@@ -19,25 +19,38 @@
   },
   "author": "Brian Carlson <brian.m.carlson@gmail.com>",
   "main": "./lib",
+  "exports": {
+    ".": {
+      "import": "./esm/index.mjs",
+      "require": "./lib/index.js",
+      "default": "./lib/index.js"
+    },
+    "./package.json": {
+      "default": "./package.json"
+    },
+    "./lib/*": "./lib/*.js",
+    "./lib/*.js": "./lib/*.js"
+  },
   "dependencies": {
-    "pg-connection-string": "^2.6.4",
-    "pg-pool": "^3.6.2",
-    "pg-protocol": "^1.6.1",
-    "pg-types": "^2.1.0",
-    "pgpass": "1.x"
+    "pg-connection-string": "^2.9.1",
+    "pg-pool": "^3.10.1",
+    "pg-protocol": "^1.10.3",
+    "pg-types": "2.2.0",
+    "pgpass": "1.0.5"
   },
   "devDependencies": {
+    "@cloudflare/vitest-pool-workers": "0.8.23",
     "@cloudflare/workers-types": "^4.20230404.0",
     "async": "2.6.4",
-    "bluebird": "3.5.2",
+    "bluebird": "3.7.2",
     "co": "4.6.0",
     "pg-copy-streams": "0.3.0",
     "typescript": "^4.0.3",
-    "workerd": "^1.20230419.0",
-    "wrangler": "^2.16.0"
+    "vitest": "~3.0.9",
+    "wrangler": "^3.x"
   },
   "optionalDependencies": {
-    "pg-cloudflare": "^1.1.1"
+    "pg-cloudflare": "^1.2.7"
   },
   "peerDependencies": {
     "pg-native": ">=3.0.1"
@@ -52,11 +65,12 @@
   },
   "files": [
     "lib",
+    "esm",
     "SPONSORS.md"
   ],
   "license": "MIT",
   "engines": {
-    "node": ">= 8.0.0"
+    "node": ">= 16.0.0"
   },
-  "gitHead": "a37a93bf7990220517a40cf16b8e72d4c3e6cef5"
+  "gitHead": "8f8e7315e8f7c1bb01e98fdb41c8c92585510782"
 }
Index: node_modules/lightning-pool/cjs/resource-item.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ResourceItem = void 0;\r\nconst definitions_js_1 = require(\"./definitions.js\");\r\nclass ResourceItem {\r\n    constructor(resource) {\r\n        this.state = definitions_js_1.ResourceState.IDLE;\r\n        this.idleTime = 0;\r\n        this.destroyed = false;\r\n        this.resource = resource;\r\n    }\r\n}\r\nexports.ResourceItem = ResourceItem;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/lightning-pool/cjs/resource-item.js b/node_modules/lightning-pool/cjs/resource-item.js
--- a/node_modules/lightning-pool/cjs/resource-item.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/lightning-pool/cjs/resource-item.js	(date 1753913035671)
@@ -1,10 +1,10 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.ResourceItem = void 0;
-const definitions_js_1 = require("./definitions.js");
+const constants_js_1 = require("./constants.js");
 class ResourceItem {
     constructor(resource) {
-        this.state = definitions_js_1.ResourceState.IDLE;
+        this.state = constants_js_1.ResourceState.IDLE;
         this.idleTime = 0;
         this.destroyed = false;
         this.resource = resource;
Index: node_modules/lightning-pool/cjs/pool-request.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PoolRequest = void 0;\r\n// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nfunction noop() {\r\n}\r\nclass PoolRequest {\r\n    constructor(pool, callback) {\r\n        this.timedOut = false;\r\n        this.created = Date.now();\r\n        this.callback = callback || noop;\r\n        if (pool.options.acquireTimeoutMillis) {\r\n            this.timeoutHandle = setTimeout(() => {\r\n                this.timedOut = true;\r\n                this.stopTimout();\r\n                pool.emit('request-timeout');\r\n                this.callback(new Error('Request timed out'));\r\n            }, pool.options.acquireTimeoutMillis);\r\n        }\r\n    }\r\n    stopTimout() {\r\n        if (this.timeoutHandle)\r\n            clearTimeout(this.timeoutHandle);\r\n    }\r\n}\r\nexports.PoolRequest = PoolRequest;\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/lightning-pool/cjs/pool-request.js b/node_modules/lightning-pool/cjs/pool-request.js
--- a/node_modules/lightning-pool/cjs/pool-request.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/lightning-pool/cjs/pool-request.js	(date 1753913035665)
@@ -1,14 +1,13 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.PoolRequest = void 0;
-// eslint-disable-next-line @typescript-eslint/no-empty-function
-function noop() {
-}
+function noop() { }
 class PoolRequest {
-    constructor(pool, callback) {
+    constructor(pool, callback, options) {
         this.timedOut = false;
         this.created = Date.now();
         this.callback = callback || noop;
+        this.options = options;
         if (pool.options.acquireTimeoutMillis) {
             this.timeoutHandle = setTimeout(() => {
                 this.timedOut = true;
Index: node_modules/pg/lib/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict'\r\n\r\nvar Client = require('./client')\r\nvar defaults = require('./defaults')\r\nvar Connection = require('./connection')\r\nvar Pool = require('pg-pool')\r\nconst { DatabaseError } = require('pg-protocol')\r\nconst { escapeIdentifier, escapeLiteral } = require('./utils')\r\n\r\nconst poolFactory = (Client) => {\r\n  return class BoundPool extends Pool {\r\n    constructor(options) {\r\n      super(options, Client)\r\n    }\r\n  }\r\n}\r\n\r\nvar PG = function (clientConstructor) {\r\n  this.defaults = defaults\r\n  this.Client = clientConstructor\r\n  this.Query = this.Client.Query\r\n  this.Pool = poolFactory(this.Client)\r\n  this._pools = []\r\n  this.Connection = Connection\r\n  this.types = require('pg-types')\r\n  this.DatabaseError = DatabaseError\r\n  this.escapeIdentifier = escapeIdentifier\r\n  this.escapeLiteral = escapeLiteral\r\n}\r\n\r\nif (typeof process.env.NODE_PG_FORCE_NATIVE !== 'undefined') {\r\n  module.exports = new PG(require('./native'))\r\n} else {\r\n  module.exports = new PG(Client)\r\n\r\n  // lazy require native module...the native module may not have installed\r\n  Object.defineProperty(module.exports, 'native', {\r\n    configurable: true,\r\n    enumerable: false,\r\n    get() {\r\n      var native = null\r\n      try {\r\n        native = new PG(require('./native'))\r\n      } catch (err) {\r\n        if (err.code !== 'MODULE_NOT_FOUND') {\r\n          throw err\r\n        }\r\n      }\r\n\r\n      // overwrite module.exports.native so that getter is never called again\r\n      Object.defineProperty(module.exports, 'native', {\r\n        value: native,\r\n      })\r\n\r\n      return native\r\n    },\r\n  })\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg/lib/index.js b/node_modules/pg/lib/index.js
--- a/node_modules/pg/lib/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg/lib/index.js	(date 1753913035430)
@@ -1,9 +1,12 @@
 'use strict'
 
-var Client = require('./client')
-var defaults = require('./defaults')
-var Connection = require('./connection')
-var Pool = require('pg-pool')
+const Client = require('./client')
+const defaults = require('./defaults')
+const Connection = require('./connection')
+const Result = require('./result')
+const utils = require('./utils')
+const Pool = require('pg-pool')
+const TypeOverrides = require('./type-overrides')
 const { DatabaseError } = require('pg-protocol')
 const { escapeIdentifier, escapeLiteral } = require('./utils')
 
@@ -15,7 +18,7 @@
   }
 }
 
-var PG = function (clientConstructor) {
+const PG = function (clientConstructor) {
   this.defaults = defaults
   this.Client = clientConstructor
   this.Query = this.Client.Query
@@ -24,8 +27,11 @@
   this.Connection = Connection
   this.types = require('pg-types')
   this.DatabaseError = DatabaseError
+  this.TypeOverrides = TypeOverrides
   this.escapeIdentifier = escapeIdentifier
   this.escapeLiteral = escapeLiteral
+  this.Result = Result
+  this.utils = utils
 }
 
 if (typeof process.env.NODE_PG_FORCE_NATIVE !== 'undefined') {
@@ -38,7 +44,7 @@
     configurable: true,
     enumerable: false,
     get() {
-      var native = null
+      let native = null
       try {
         native = new PG(require('./native'))
       } catch (err) {
Index: node_modules/pg/lib/type-overrides.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict'\r\n\r\nvar types = require('pg-types')\r\n\r\nfunction TypeOverrides(userTypes) {\r\n  this._types = userTypes || types\r\n  this.text = {}\r\n  this.binary = {}\r\n}\r\n\r\nTypeOverrides.prototype.getOverrides = function (format) {\r\n  switch (format) {\r\n    case 'text':\r\n      return this.text\r\n    case 'binary':\r\n      return this.binary\r\n    default:\r\n      return {}\r\n  }\r\n}\r\n\r\nTypeOverrides.prototype.setTypeParser = function (oid, format, parseFn) {\r\n  if (typeof format === 'function') {\r\n    parseFn = format\r\n    format = 'text'\r\n  }\r\n  this.getOverrides(format)[oid] = parseFn\r\n}\r\n\r\nTypeOverrides.prototype.getTypeParser = function (oid, format) {\r\n  format = format || 'text'\r\n  return this.getOverrides(format)[oid] || this._types.getTypeParser(oid, format)\r\n}\r\n\r\nmodule.exports = TypeOverrides\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg/lib/type-overrides.js b/node_modules/pg/lib/type-overrides.js
--- a/node_modules/pg/lib/type-overrides.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg/lib/type-overrides.js	(date 1753913035449)
@@ -1,6 +1,6 @@
 'use strict'
 
-var types = require('pg-types')
+const types = require('pg-types')
 
 function TypeOverrides(userTypes) {
   this._types = userTypes || types
Index: node_modules/lightning-pool/esm/pool.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import DoublyLinked from 'doublylinked';\r\nimport { EventEmitter } from 'events';\r\nimport promisify from 'putil-promisify';\r\nimport { AbortError } from './abort-error.js';\r\nimport { PoolState, ResourceState } from './definitions.js';\r\nimport { PoolOptions } from './pool-options.js';\r\nimport { PoolRequest } from './pool-request.js';\r\nimport { ResourceItem } from './resource-item.js';\r\nexport class Pool extends EventEmitter {\r\n    constructor(factory, config) {\r\n        super();\r\n        this._requestQueue = new DoublyLinked();\r\n        this._allResources = new Map();\r\n        this._acquiredResources = new DoublyLinked();\r\n        this._idleResources = new DoublyLinked();\r\n        this._creating = 0;\r\n        this._requestsProcessing = 0;\r\n        this._state = PoolState.IDLE;\r\n        if (typeof factory !== 'object')\r\n            throw new TypeError('You must provide `factory` object');\r\n        if (typeof factory.create !== 'function')\r\n            throw new TypeError('factory.create must be a function');\r\n        if (typeof factory.destroy !== 'function')\r\n            throw new TypeError('factory.destroy must be a function');\r\n        if (factory.validate && typeof factory.validate !== 'function')\r\n            throw new TypeError('factory.validate can be a function');\r\n        if (factory.reset && typeof factory.reset !== 'function')\r\n            throw new TypeError('factory.reset can be a function');\r\n        const opts = this._options = new PoolOptions(this);\r\n        opts.on('change', (prop, val) => {\r\n            if (prop === 'houseKeepInterval')\r\n                this._setHouseKeep(val);\r\n            if (prop === 'min' || prop === 'minIdle')\r\n                this._ensureMin();\r\n        });\r\n        if (config)\r\n            this.options.assign(config);\r\n        this._factory = factory;\r\n    }\r\n    /**\r\n     * Returns Pool options\r\n     */\r\n    get options() {\r\n        return this._options;\r\n    }\r\n    /**\r\n     * Returns number of resources that are currently acquired\r\n     */\r\n    get acquired() {\r\n        return this._acquiredResources.length;\r\n    }\r\n    /**\r\n     * Returns number of unused resources in the pool\r\n     */\r\n    get available() {\r\n        return this._idleResources.length;\r\n    }\r\n    /**\r\n     * Returns number of resources currently creating\r\n     */\r\n    get creating() {\r\n        return this._creating;\r\n    }\r\n    /**\r\n     * Returns number of callers waiting to acquire a resource\r\n     */\r\n    get pending() {\r\n        return this._requestQueue.length + this._requestsProcessing;\r\n    }\r\n    /**\r\n     * Returns number of resources in the pool\r\n     * regardless of whether they are idle or in use\r\n     */\r\n    get size() {\r\n        return this._allResources.size;\r\n    }\r\n    /**\r\n     * Returns state of the pool\r\n     */\r\n    get state() {\r\n        return this._state;\r\n    }\r\n    /**\r\n     * Starts the pool and begins creating of resources, starts house keeping and any other internal logic.\r\n     * Note: This method is not need to be called. Pool instance will automatically be started when acquire() method is called\r\n     */\r\n    start() {\r\n        if (this._state === PoolState.STARTED)\r\n            return;\r\n        if (this._state >= PoolState.CLOSING)\r\n            throw new Error('Closed pool can not be started again');\r\n        this._state = PoolState.STARTED;\r\n        this._setHouseKeep(this.options.houseKeepInterval);\r\n        this._ensureMin();\r\n        this.emit('start');\r\n    }\r\n    close(arg0, arg1) {\r\n        let terminateWait = Infinity;\r\n        let callback;\r\n        if (typeof arg0 === 'function')\r\n            callback = arg0;\r\n        else {\r\n            terminateWait = typeof arg0 === 'number' ? arg0 :\r\n                (!!arg0 ? 0 : Infinity);\r\n            callback = arg1;\r\n        }\r\n        if (!callback)\r\n            return promisify.fromCallback(cb => this.close(terminateWait, cb));\r\n        if (this._state === PoolState.CLOSED || this._state === PoolState.IDLE)\r\n            return callback();\r\n        if (this._state === PoolState.CLOSING) {\r\n            this.once('close', callback);\r\n            return;\r\n        }\r\n        this.emit('closing');\r\n        if (this._houseKeepTimer)\r\n            clearTimeout(this._houseKeepTimer);\r\n        this._state = PoolState.CLOSING;\r\n        this._requestQueue.forEach(t => t.stopTimout());\r\n        this._requestQueue = new DoublyLinked();\r\n        this._requestsProcessing = 0;\r\n        if (terminateWait <= 0) {\r\n            this._acquiredResources.forEach(t => this.destroy(t.resource));\r\n        }\r\n        else {\r\n            const startTime = Date.now();\r\n            this._closeWaitTimer = setInterval(() => {\r\n                if (!this._allResources.size) {\r\n                    clearInterval(this._closeWaitTimer);\r\n                    this._closeWaitTimer = undefined;\r\n                    return;\r\n                }\r\n                if (Date.now() > startTime + terminateWait) {\r\n                    clearInterval(this._closeWaitTimer);\r\n                    this._closeWaitTimer = undefined;\r\n                    this._acquiredResources.forEach(t => this.release(t.resource));\r\n                    this.emit('terminate');\r\n                }\r\n            }, 50);\r\n        }\r\n        this._setHouseKeep(5);\r\n        this.once('close', callback);\r\n    }\r\n    closeAsync(arg0) {\r\n        return promisify.fromCallback(cb => this.close(arg0, cb));\r\n    }\r\n    acquire(arg0) {\r\n        if (!arg0)\r\n            return promisify.fromCallback(cb => this.acquire(cb));\r\n        const callback = arg0;\r\n        try {\r\n            this.start();\r\n        }\r\n        catch (e) {\r\n            return callback(e);\r\n        }\r\n        if (this.options.maxQueue && this.pending >= this.options.maxQueue)\r\n            return callback(new Error('Pool queue is full'));\r\n        this._requestQueue.push(new PoolRequest(this, callback));\r\n        this._processNextRequest();\r\n    }\r\n    /**\r\n     * Releases an allocated `resource` and let it back to pool.\r\n     */\r\n    release(resource, callback) {\r\n        const item = this._allResources.get(resource);\r\n        if (item && item.state !== ResourceState.IDLE)\r\n            this._itemSetIdle(item, callback);\r\n        this._processNextRequest();\r\n    }\r\n    /**\r\n     * Async version of release().\r\n     */\r\n    releaseAsync(resource) {\r\n        return promisify.fromCallback(cb => this.release(resource, cb));\r\n    }\r\n    /**\r\n     * Releases, destroys and removes any `resource` from `Pool`.\r\n     */\r\n    destroy(resource, callback) {\r\n        try {\r\n            const item = this._allResources.get(resource);\r\n            if (item)\r\n                this._itemDestroy(item, callback);\r\n            else if (callback)\r\n                callback();\r\n        }\r\n        finally {\r\n            this._processNextRequest();\r\n        }\r\n    }\r\n    /**\r\n     * Async version of destroy().\r\n     */\r\n    destroyAsync(resource) {\r\n        return promisify.fromCallback(cb => this.destroy(resource, cb));\r\n    }\r\n    /**\r\n     * Returns if a `resource` has been acquired from the pool and not yet released or destroyed.\r\n     */\r\n    isAcquired(resource) {\r\n        const item = this._allResources.get(resource);\r\n        return !!(item && item.acquiredNode);\r\n    }\r\n    /**\r\n     * Returns if the pool contains a `resource`\r\n     */\r\n    includes(resource) {\r\n        return this._allResources.has(resource);\r\n    }\r\n    _processNextRequest() {\r\n        if (this._state !== PoolState.STARTED ||\r\n            this._requestsProcessing >= this.options.max - this.acquired)\r\n            return;\r\n        const request = this._requestQueue.shift();\r\n        if (!request)\r\n            return;\r\n        this._requestsProcessing++;\r\n        const handleCallback = (err, item) => {\r\n            this._requestsProcessing--;\r\n            request.stopTimout();\r\n            try {\r\n                if (item) {\r\n                    /* istanbul ignore next : Hard to simulate */\r\n                    if (this._state !== PoolState.STARTED) {\r\n                        this._itemDestroy(item);\r\n                        return;\r\n                    }\r\n                    this._itemSetAcquired(item);\r\n                    this._ensureMin();\r\n                    request.callback(undefined, item.resource);\r\n                    this.emit('acquire', item.resource);\r\n                }\r\n                else\r\n                    request.callback(err);\r\n            }\r\n            catch (ignored) {\r\n                // ignored\r\n            }\r\n            this._processNextRequest();\r\n        };\r\n        const item = this._idleResources.shift();\r\n        if (item) {\r\n            /* Validate resource */\r\n            if (this.options.validation && this._factory.validate) {\r\n                this._itemValidate(item, (err) => {\r\n                    /* Destroy resource on validation error */\r\n                    if (err) {\r\n                        this._itemDestroy(item);\r\n                        this.emit('validate-error', err, item.resource);\r\n                        this._requestsProcessing--;\r\n                        this._requestQueue.unshift(request);\r\n                        this._processNextRequest();\r\n                    }\r\n                    else\r\n                        handleCallback(undefined, item);\r\n                });\r\n                return;\r\n            }\r\n            return handleCallback(undefined, item);\r\n        }\r\n        /** There is no idle resource. We need to create new one **/\r\n        this._createResource(request, handleCallback);\r\n    }\r\n    emit(event, ...args) {\r\n        // Prevents errors while calling emit()\r\n        try {\r\n            return super.emit(event, ...args);\r\n        }\r\n        catch (e) {\r\n            return true;\r\n        }\r\n    }\r\n    /**\r\n     * Creates new resource\r\n     */\r\n    _createResource(request, callback) {\r\n        const maxRetries = this.options.acquireMaxRetries;\r\n        let tries = 0;\r\n        this._creating++;\r\n        const handleCallback = (err, obj) => {\r\n            if (request && request.timedOut)\r\n                return;\r\n            if (err || !obj) {\r\n                tries++;\r\n                this.emit('error', err, {\r\n                    requestTime: request ? request.created : Date.now(),\r\n                    tries,\r\n                    maxRetries: this.options.acquireMaxRetries\r\n                });\r\n                if (err instanceof AbortError || tries >= maxRetries) {\r\n                    this._creating--;\r\n                    return callback && callback(err);\r\n                }\r\n                return setTimeout(() => tryCreate(), this.options.acquireRetryWait);\r\n            }\r\n            this._creating--;\r\n            if (this._allResources.has(obj))\r\n                return callback &&\r\n                    callback(new Error('Factory error. Resource already in pool'));\r\n            const item = new ResourceItem(obj);\r\n            this._itemSetIdle(item);\r\n            this._allResources.set(obj, item);\r\n            if (callback)\r\n                callback(undefined, item);\r\n            this.emit('create', obj);\r\n        };\r\n        const tryCreate = () => {\r\n            try {\r\n                const o = this._factory.create({ tries, maxRetries });\r\n                /* istanbul ignore next */\r\n                if (!o)\r\n                    return handleCallback(new AbortError('Factory returned no resource'));\r\n                promisify.await(o, handleCallback);\r\n            }\r\n            catch (e) {\r\n                handleCallback(e);\r\n            }\r\n        };\r\n        tryCreate();\r\n    }\r\n    _setHouseKeep(ms) {\r\n        if (this._houseKeepTimer)\r\n            clearInterval(this._houseKeepTimer);\r\n        this._houseKeepTimer = undefined;\r\n        if (ms > 0 && this.state === PoolState.STARTED || this.state === PoolState.CLOSING)\r\n            this._houseKeepTimer = setInterval(() => this._houseKeep(), ms);\r\n    }\r\n    _houseKeep() {\r\n        const isClosing = this._state === PoolState.CLOSING;\r\n        const now = Date.now();\r\n        let m = this._allResources.size - this.options.min;\r\n        let n = this._idleResources.length - this.options.minIdle;\r\n        if (isClosing || (m > 0 && n > 0)) {\r\n            this._idleResources.every((item) => {\r\n                if (isClosing ||\r\n                    item.idleTime + this.options.idleTimeoutMillis < now) {\r\n                    this._itemDestroy(item);\r\n                    return isClosing || !!((--n) && (--m));\r\n                }\r\n                return false;\r\n            });\r\n        }\r\n        if (isClosing) {\r\n            /* Check again 5 ms later */\r\n            if (this._allResources.size)\r\n                return;\r\n            clearInterval(this._houseKeepTimer);\r\n            this._state = PoolState.CLOSED;\r\n            this._requestsProcessing = 0;\r\n            this.emit('close');\r\n        }\r\n    }\r\n    _ensureMin() {\r\n        process.nextTick(() => {\r\n            let k = Math.max(this.options.min - this._allResources.size, this.options.minIdle - this._idleResources.length) - this.creating;\r\n            while (k-- > 0)\r\n                this._createResource();\r\n        });\r\n    }\r\n    _itemSetAcquired(item) {\r\n        if (item.state !== ResourceState.ACQUIRED) {\r\n            this._itemDetach(item);\r\n            item.state = ResourceState.ACQUIRED;\r\n            this._acquiredResources.push(item);\r\n            item.acquiredNode = this._acquiredResources.tail;\r\n        }\r\n    }\r\n    _itemDetach(item) {\r\n        switch (item.state) {\r\n            case ResourceState.IDLE:\r\n                item.idleTime = 0;\r\n                /* istanbul ignore next*/\r\n                if (item.idleNode)\r\n                    item.idleNode.remove();\r\n                item.idleNode = undefined;\r\n                break;\r\n            case ResourceState.ACQUIRED:\r\n            case ResourceState.VALIDATION:\r\n                /* istanbul ignore next*/\r\n                if (item.acquiredNode)\r\n                    item.acquiredNode.remove();\r\n                item.acquiredNode = undefined;\r\n                break;\r\n        }\r\n    }\r\n    _itemSetIdle(item, callback) {\r\n        const isAcquired = item.state === ResourceState.ACQUIRED;\r\n        const handleCallback = (err) => {\r\n            if (err)\r\n                return this._itemDestroy(item, callback);\r\n            this._itemDetach(item);\r\n            item.idleTime = Date.now();\r\n            item.state = ResourceState.IDLE;\r\n            if (this.options.fifo) {\r\n                this._idleResources.push(item);\r\n                item.idleNode = this._idleResources.tail;\r\n            }\r\n            else {\r\n                this._idleResources.unshift(item);\r\n                item.idleNode = this._idleResources.head;\r\n            }\r\n            if (isAcquired)\r\n                this.emit('return', item.resource);\r\n            if (callback)\r\n                callback();\r\n            // noinspection JSAccessibilityCheck\r\n            this._processNextRequest();\r\n        };\r\n        if (isAcquired && this._factory.reset) {\r\n            try {\r\n                const o = this._factory.reset(item.resource);\r\n                promisify.await(o, handleCallback);\r\n            }\r\n            catch (e) {\r\n                handleCallback(e);\r\n            }\r\n        }\r\n        else\r\n            handleCallback();\r\n    }\r\n    _itemDestroy(item, callback) {\r\n        this._itemDetach(item);\r\n        const handleCallback = (err) => {\r\n            if (err) {\r\n                this.emit('destroy-error', err, item.resource);\r\n                /* istanbul ignore next */\r\n                return callback && callback(err);\r\n            }\r\n            this.emit('destroy', item.resource);\r\n            item.destroyed = true;\r\n            if (callback)\r\n                callback();\r\n        };\r\n        try {\r\n            this._allResources.delete(item.resource);\r\n            this._processNextRequest();\r\n            const o = this._factory.destroy(item.resource);\r\n            promisify.await(o, handleCallback);\r\n        }\r\n        catch (e) {\r\n            handleCallback(e);\r\n        }\r\n    }\r\n    _itemValidate(item, callback) {\r\n        item.state = ResourceState.VALIDATION;\r\n        try {\r\n            const o = this._factory.validate?.(item.resource);\r\n            // @ts-ignore\r\n            promisify.await(o, callback);\r\n        }\r\n        catch (e) {\r\n            if (callback)\r\n                callback(e);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/lightning-pool/esm/pool.js b/node_modules/lightning-pool/esm/pool.js
--- a/node_modules/lightning-pool/esm/pool.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/lightning-pool/esm/pool.js	(date 1753913035670)
@@ -2,7 +2,7 @@
 import { EventEmitter } from 'events';
 import promisify from 'putil-promisify';
 import { AbortError } from './abort-error.js';
-import { PoolState, ResourceState } from './definitions.js';
+import { PoolState, ResourceState } from './constants.js';
 import { PoolOptions } from './pool-options.js';
 import { PoolRequest } from './pool-request.js';
 import { ResourceItem } from './resource-item.js';
@@ -16,25 +16,30 @@
         this._creating = 0;
         this._requestsProcessing = 0;
         this._state = PoolState.IDLE;
-        if (typeof factory !== 'object')
+        if (typeof factory !== 'object') {
             throw new TypeError('You must provide `factory` object');
-        if (typeof factory.create !== 'function')
+        }
+        if (typeof factory.create !== 'function') {
             throw new TypeError('factory.create must be a function');
-        if (typeof factory.destroy !== 'function')
+        }
+        if (typeof factory.destroy !== 'function') {
             throw new TypeError('factory.destroy must be a function');
-        if (factory.validate && typeof factory.validate !== 'function')
+        }
+        if (factory.validate && typeof factory.validate !== 'function') {
             throw new TypeError('factory.validate can be a function');
-        if (factory.reset && typeof factory.reset !== 'function')
+        }
+        if (factory.reset && typeof factory.reset !== 'function') {
             throw new TypeError('factory.reset can be a function');
-        const opts = this._options = new PoolOptions(this);
+        }
+        const opts = (this._options = new PoolOptions(this));
+        if (config)
+            this.options.assign(config);
         opts.on('change', (prop, val) => {
             if (prop === 'houseKeepInterval')
                 this._setHouseKeep(val);
             if (prop === 'min' || prop === 'minIdle')
                 this._ensureMin();
         });
-        if (config)
-            this.options.assign(config);
         this._factory = factory;
     }
     /**
@@ -87,8 +92,9 @@
     start() {
         if (this._state === PoolState.STARTED)
             return;
-        if (this._state >= PoolState.CLOSING)
+        if (this._state >= PoolState.CLOSING) {
             throw new Error('Closed pool can not be started again');
+        }
         this._state = PoolState.STARTED;
         this._setHouseKeep(this.options.houseKeepInterval);
         this._ensureMin();
@@ -100,14 +106,15 @@
         if (typeof arg0 === 'function')
             callback = arg0;
         else {
-            terminateWait = typeof arg0 === 'number' ? arg0 :
-                (!!arg0 ? 0 : Infinity);
+            terminateWait = typeof arg0 === 'number' ? arg0 : arg0 ? 0 : Infinity;
             callback = arg1;
         }
-        if (!callback)
+        if (!callback) {
             return promisify.fromCallback(cb => this.close(terminateWait, cb));
-        if (this._state === PoolState.CLOSED || this._state === PoolState.IDLE)
+        }
+        if (this._state === PoolState.CLOSED || this._state === PoolState.IDLE) {
             return callback();
+        }
         if (this._state === PoolState.CLOSING) {
             this.once('close', callback);
             return;
@@ -144,18 +151,18 @@
     closeAsync(arg0) {
         return promisify.fromCallback(cb => this.close(arg0, cb));
     }
-    acquire(arg0) {
-        if (!arg0)
+    acquire(callback) {
+        if (!callback)
             return promisify.fromCallback(cb => this.acquire(cb));
-        const callback = arg0;
         try {
             this.start();
         }
         catch (e) {
             return callback(e);
         }
-        if (this.options.maxQueue && this.pending >= this.options.maxQueue)
+        if (this.options.maxQueue && this.pending >= this.options.maxQueue) {
             return callback(new Error('Pool queue is full'));
+        }
         this._requestQueue.push(new PoolRequest(this, callback));
         this._processNextRequest();
     }
@@ -164,8 +171,9 @@
      */
     release(resource, callback) {
         const item = this._allResources.get(resource);
-        if (item && item.state !== ResourceState.IDLE)
+        if (item && item.state !== ResourceState.IDLE) {
             this._itemSetIdle(item, callback);
+        }
         this._processNextRequest();
     }
     /**
@@ -210,8 +218,9 @@
     }
     _processNextRequest() {
         if (this._state !== PoolState.STARTED ||
-            this._requestsProcessing >= this.options.max - this.acquired)
+            this._requestsProcessing >= this.options.max - this.acquired) {
             return;
+        }
         const request = this._requestQueue.shift();
         if (!request)
             return;
@@ -234,7 +243,7 @@
                 else
                     request.callback(err);
             }
-            catch (ignored) {
+            catch {
                 // ignored
             }
             this._processNextRequest();
@@ -243,9 +252,9 @@
         if (item) {
             /* Validate resource */
             if (this.options.validation && this._factory.validate) {
-                this._itemValidate(item, (err) => {
+                this._itemValidate(item, (err, result) => {
                     /* Destroy resource on validation error */
-                    if (err) {
+                    if (err || result === false) {
                         this._itemDestroy(item);
                         this.emit('validate-error', err, item.resource);
                         this._requestsProcessing--;
@@ -267,7 +276,7 @@
         try {
             return super.emit(event, ...args);
         }
-        catch (e) {
+        catch {
             return true;
         }
     }
@@ -286,7 +295,7 @@
                 this.emit('error', err, {
                     requestTime: request ? request.created : Date.now(),
                     tries,
-                    maxRetries: this.options.acquireMaxRetries
+                    maxRetries: this.options.acquireMaxRetries,
                 });
                 if (err instanceof AbortError || tries >= maxRetries) {
                     this._creating--;
@@ -295,9 +304,10 @@
                 return setTimeout(() => tryCreate(), this.options.acquireRetryWait);
             }
             this._creating--;
-            if (this._allResources.has(obj))
-                return callback &&
-                    callback(new Error('Factory error. Resource already in pool'));
+            if (this._allResources.has(obj)) {
+                return (callback &&
+                    callback(new Error('Factory error. Resource already in pool')));
+            }
             const item = new ResourceItem(obj);
             this._itemSetIdle(item);
             this._allResources.set(obj, item);
@@ -309,8 +319,9 @@
             try {
                 const o = this._factory.create({ tries, maxRetries });
                 /* istanbul ignore next */
-                if (!o)
+                if (!o) {
                     return handleCallback(new AbortError('Factory returned no resource'));
+                }
                 promisify.await(o, handleCallback);
             }
             catch (e) {
@@ -323,8 +334,10 @@
         if (this._houseKeepTimer)
             clearInterval(this._houseKeepTimer);
         this._houseKeepTimer = undefined;
-        if (ms > 0 && this.state === PoolState.STARTED || this.state === PoolState.CLOSING)
+        if ((ms > 0 && this.state === PoolState.STARTED) ||
+            this.state === PoolState.CLOSING) {
             this._houseKeepTimer = setInterval(() => this._houseKeep(), ms);
+        }
     }
     _houseKeep() {
         const isClosing = this._state === PoolState.CLOSING;
@@ -333,10 +346,9 @@
         let n = this._idleResources.length - this.options.minIdle;
         if (isClosing || (m > 0 && n > 0)) {
             this._idleResources.every((item) => {
-                if (isClosing ||
-                    item.idleTime + this.options.idleTimeoutMillis < now) {
+                if (isClosing || item.idleTime + this.options.idleTimeoutMillis < now) {
                     this._itemDestroy(item);
-                    return isClosing || !!((--n) && (--m));
+                    return isClosing || !!(--n && --m);
                 }
                 return false;
             });
@@ -382,6 +394,8 @@
                     item.acquiredNode.remove();
                 item.acquiredNode = undefined;
                 break;
+            default:
+                break;
         }
     }
     _itemSetIdle(item, callback) {
@@ -422,25 +436,25 @@
     _itemDestroy(item, callback) {
         this._itemDetach(item);
         const handleCallback = (err) => {
-            if (err) {
+            item.destroyed = true;
+            this._allResources.delete(item.resource);
+            if (err)
                 this.emit('destroy-error', err, item.resource);
-                /* istanbul ignore next */
-                return callback && callback(err);
-            }
-            this.emit('destroy', item.resource);
-            item.destroyed = true;
+            else
+                this.emit('destroy', item.resource);
             if (callback)
-                callback();
+                callback(err);
         };
         try {
-            this._allResources.delete(item.resource);
-            this._processNextRequest();
             const o = this._factory.destroy(item.resource);
             promisify.await(o, handleCallback);
         }
         catch (e) {
             handleCallback(e);
         }
+        finally {
+            this._processNextRequest();
+        }
     }
     _itemValidate(item, callback) {
         item.state = ResourceState.VALIDATION;
@@ -450,8 +464,7 @@
             promisify.await(o, callback);
         }
         catch (e) {
-            if (callback)
-                callback(e);
+            callback?.(e);
         }
     }
 }
Index: node_modules/pg/lib/client.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict'\r\n\r\nvar EventEmitter = require('events').EventEmitter\r\nvar utils = require('./utils')\r\nvar sasl = require('./crypto/sasl')\r\nvar TypeOverrides = require('./type-overrides')\r\n\r\nvar ConnectionParameters = require('./connection-parameters')\r\nvar Query = require('./query')\r\nvar defaults = require('./defaults')\r\nvar Connection = require('./connection')\r\nconst crypto = require('./crypto/utils')\r\n\r\nclass Client extends EventEmitter {\r\n  constructor(config) {\r\n    super()\r\n\r\n    this.connectionParameters = new ConnectionParameters(config)\r\n    this.user = this.connectionParameters.user\r\n    this.database = this.connectionParameters.database\r\n    this.port = this.connectionParameters.port\r\n    this.host = this.connectionParameters.host\r\n\r\n    // \"hiding\" the password so it doesn't show up in stack traces\r\n    // or if the client is console.logged\r\n    Object.defineProperty(this, 'password', {\r\n      configurable: true,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: this.connectionParameters.password,\r\n    })\r\n\r\n    this.replication = this.connectionParameters.replication\r\n\r\n    var c = config || {}\r\n\r\n    this._Promise = c.Promise || global.Promise\r\n    this._types = new TypeOverrides(c.types)\r\n    this._ending = false\r\n    this._ended = false\r\n    this._connecting = false\r\n    this._connected = false\r\n    this._connectionError = false\r\n    this._queryable = true\r\n\r\n    this.connection =\r\n      c.connection ||\r\n      new Connection({\r\n        stream: c.stream,\r\n        ssl: this.connectionParameters.ssl,\r\n        keepAlive: c.keepAlive || false,\r\n        keepAliveInitialDelayMillis: c.keepAliveInitialDelayMillis || 0,\r\n        encoding: this.connectionParameters.client_encoding || 'utf8',\r\n      })\r\n    this.queryQueue = []\r\n    this.binary = c.binary || defaults.binary\r\n    this.processID = null\r\n    this.secretKey = null\r\n    this.ssl = this.connectionParameters.ssl || false\r\n    // As with Password, make SSL->Key (the private key) non-enumerable.\r\n    // It won't show up in stack traces\r\n    // or if the client is console.logged\r\n    if (this.ssl && this.ssl.key) {\r\n      Object.defineProperty(this.ssl, 'key', {\r\n        enumerable: false,\r\n      })\r\n    }\r\n\r\n    this._connectionTimeoutMillis = c.connectionTimeoutMillis || 0\r\n  }\r\n\r\n  _errorAllQueries(err) {\r\n    const enqueueError = (query) => {\r\n      process.nextTick(() => {\r\n        query.handleError(err, this.connection)\r\n      })\r\n    }\r\n\r\n    if (this.activeQuery) {\r\n      enqueueError(this.activeQuery)\r\n      this.activeQuery = null\r\n    }\r\n\r\n    this.queryQueue.forEach(enqueueError)\r\n    this.queryQueue.length = 0\r\n  }\r\n\r\n  _connect(callback) {\r\n    var self = this\r\n    var con = this.connection\r\n    this._connectionCallback = callback\r\n\r\n    if (this._connecting || this._connected) {\r\n      const err = new Error('Client has already been connected. You cannot reuse a client.')\r\n      process.nextTick(() => {\r\n        callback(err)\r\n      })\r\n      return\r\n    }\r\n    this._connecting = true\r\n\r\n    this.connectionTimeoutHandle\r\n    if (this._connectionTimeoutMillis > 0) {\r\n      this.connectionTimeoutHandle = setTimeout(() => {\r\n        con._ending = true\r\n        con.stream.destroy(new Error('timeout expired'))\r\n      }, this._connectionTimeoutMillis)\r\n    }\r\n\r\n    if (this.host && this.host.indexOf('/') === 0) {\r\n      con.connect(this.host + '/.s.PGSQL.' + this.port)\r\n    } else {\r\n      con.connect(this.port, this.host)\r\n    }\r\n\r\n    // once connection is established send startup message\r\n    con.on('connect', function () {\r\n      if (self.ssl) {\r\n        con.requestSsl()\r\n      } else {\r\n        con.startup(self.getStartupConf())\r\n      }\r\n    })\r\n\r\n    con.on('sslconnect', function () {\r\n      con.startup(self.getStartupConf())\r\n    })\r\n\r\n    this._attachListeners(con)\r\n\r\n    con.once('end', () => {\r\n      const error = this._ending ? new Error('Connection terminated') : new Error('Connection terminated unexpectedly')\r\n\r\n      clearTimeout(this.connectionTimeoutHandle)\r\n      this._errorAllQueries(error)\r\n      this._ended = true\r\n\r\n      if (!this._ending) {\r\n        // if the connection is ended without us calling .end()\r\n        // on this client then we have an unexpected disconnection\r\n        // treat this as an error unless we've already emitted an error\r\n        // during connection.\r\n        if (this._connecting && !this._connectionError) {\r\n          if (this._connectionCallback) {\r\n            this._connectionCallback(error)\r\n          } else {\r\n            this._handleErrorEvent(error)\r\n          }\r\n        } else if (!this._connectionError) {\r\n          this._handleErrorEvent(error)\r\n        }\r\n      }\r\n\r\n      process.nextTick(() => {\r\n        this.emit('end')\r\n      })\r\n    })\r\n  }\r\n\r\n  connect(callback) {\r\n    if (callback) {\r\n      this._connect(callback)\r\n      return\r\n    }\r\n\r\n    return new this._Promise((resolve, reject) => {\r\n      this._connect((error) => {\r\n        if (error) {\r\n          reject(error)\r\n        } else {\r\n          resolve()\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  _attachListeners(con) {\r\n    // password request handling\r\n    con.on('authenticationCleartextPassword', this._handleAuthCleartextPassword.bind(this))\r\n    // password request handling\r\n    con.on('authenticationMD5Password', this._handleAuthMD5Password.bind(this))\r\n    // password request handling (SASL)\r\n    con.on('authenticationSASL', this._handleAuthSASL.bind(this))\r\n    con.on('authenticationSASLContinue', this._handleAuthSASLContinue.bind(this))\r\n    con.on('authenticationSASLFinal', this._handleAuthSASLFinal.bind(this))\r\n    con.on('backendKeyData', this._handleBackendKeyData.bind(this))\r\n    con.on('error', this._handleErrorEvent.bind(this))\r\n    con.on('errorMessage', this._handleErrorMessage.bind(this))\r\n    con.on('readyForQuery', this._handleReadyForQuery.bind(this))\r\n    con.on('notice', this._handleNotice.bind(this))\r\n    con.on('rowDescription', this._handleRowDescription.bind(this))\r\n    con.on('dataRow', this._handleDataRow.bind(this))\r\n    con.on('portalSuspended', this._handlePortalSuspended.bind(this))\r\n    con.on('emptyQuery', this._handleEmptyQuery.bind(this))\r\n    con.on('commandComplete', this._handleCommandComplete.bind(this))\r\n    con.on('parseComplete', this._handleParseComplete.bind(this))\r\n    con.on('copyInResponse', this._handleCopyInResponse.bind(this))\r\n    con.on('copyData', this._handleCopyData.bind(this))\r\n    con.on('notification', this._handleNotification.bind(this))\r\n  }\r\n\r\n  // TODO(bmc): deprecate pgpass \"built in\" integration since this.password can be a function\r\n  // it can be supplied by the user if required - this is a breaking change!\r\n  _checkPgPass(cb) {\r\n    const con = this.connection\r\n    if (typeof this.password === 'function') {\r\n      this._Promise\r\n        .resolve()\r\n        .then(() => this.password())\r\n        .then((pass) => {\r\n          if (pass !== undefined) {\r\n            if (typeof pass !== 'string') {\r\n              con.emit('error', new TypeError('Password must be a string'))\r\n              return\r\n            }\r\n            this.connectionParameters.password = this.password = pass\r\n          } else {\r\n            this.connectionParameters.password = this.password = null\r\n          }\r\n          cb()\r\n        })\r\n        .catch((err) => {\r\n          con.emit('error', err)\r\n        })\r\n    } else if (this.password !== null) {\r\n      cb()\r\n    } else {\r\n      try {\r\n        const pgPass = require('pgpass')\r\n        pgPass(this.connectionParameters, (pass) => {\r\n          if (undefined !== pass) {\r\n            this.connectionParameters.password = this.password = pass\r\n          }\r\n          cb()\r\n        })\r\n      } catch (e) {\r\n        this.emit('error', e)\r\n      }\r\n    }\r\n  }\r\n\r\n  _handleAuthCleartextPassword(msg) {\r\n    this._checkPgPass(() => {\r\n      this.connection.password(this.password)\r\n    })\r\n  }\r\n\r\n  _handleAuthMD5Password(msg) {\r\n    this._checkPgPass(async () => {\r\n      try {\r\n        const hashedPassword = await crypto.postgresMd5PasswordHash(this.user, this.password, msg.salt)\r\n        this.connection.password(hashedPassword)\r\n      } catch (e) {\r\n        this.emit('error', e)\r\n      }\r\n    })\r\n  }\r\n\r\n  _handleAuthSASL(msg) {\r\n    this._checkPgPass(() => {\r\n      try {\r\n        this.saslSession = sasl.startSession(msg.mechanisms)\r\n        this.connection.sendSASLInitialResponseMessage(this.saslSession.mechanism, this.saslSession.response)\r\n      } catch (err) {\r\n        this.connection.emit('error', err)\r\n      }\r\n    })\r\n  }\r\n\r\n  async _handleAuthSASLContinue(msg) {\r\n    try {\r\n      await sasl.continueSession(this.saslSession, this.password, msg.data)\r\n      this.connection.sendSCRAMClientFinalMessage(this.saslSession.response)\r\n    } catch (err) {\r\n      this.connection.emit('error', err)\r\n    }\r\n  }\r\n\r\n  _handleAuthSASLFinal(msg) {\r\n    try {\r\n      sasl.finalizeSession(this.saslSession, msg.data)\r\n      this.saslSession = null\r\n    } catch (err) {\r\n      this.connection.emit('error', err)\r\n    }\r\n  }\r\n\r\n  _handleBackendKeyData(msg) {\r\n    this.processID = msg.processID\r\n    this.secretKey = msg.secretKey\r\n  }\r\n\r\n  _handleReadyForQuery(msg) {\r\n    if (this._connecting) {\r\n      this._connecting = false\r\n      this._connected = true\r\n      clearTimeout(this.connectionTimeoutHandle)\r\n\r\n      // process possible callback argument to Client#connect\r\n      if (this._connectionCallback) {\r\n        this._connectionCallback(null, this)\r\n        // remove callback for proper error handling\r\n        // after the connect event\r\n        this._connectionCallback = null\r\n      }\r\n      this.emit('connect')\r\n    }\r\n    const { activeQuery } = this\r\n    this.activeQuery = null\r\n    this.readyForQuery = true\r\n    if (activeQuery) {\r\n      activeQuery.handleReadyForQuery(this.connection)\r\n    }\r\n    this._pulseQueryQueue()\r\n  }\r\n\r\n  // if we receieve an error event or error message\r\n  // during the connection process we handle it here\r\n  _handleErrorWhileConnecting(err) {\r\n    if (this._connectionError) {\r\n      // TODO(bmc): this is swallowing errors - we shouldn't do this\r\n      return\r\n    }\r\n    this._connectionError = true\r\n    clearTimeout(this.connectionTimeoutHandle)\r\n    if (this._connectionCallback) {\r\n      return this._connectionCallback(err)\r\n    }\r\n    this.emit('error', err)\r\n  }\r\n\r\n  // if we're connected and we receive an error event from the connection\r\n  // this means the socket is dead - do a hard abort of all queries and emit\r\n  // the socket error on the client as well\r\n  _handleErrorEvent(err) {\r\n    if (this._connecting) {\r\n      return this._handleErrorWhileConnecting(err)\r\n    }\r\n    this._queryable = false\r\n    this._errorAllQueries(err)\r\n    this.emit('error', err)\r\n  }\r\n\r\n  // handle error messages from the postgres backend\r\n  _handleErrorMessage(msg) {\r\n    if (this._connecting) {\r\n      return this._handleErrorWhileConnecting(msg)\r\n    }\r\n    const activeQuery = this.activeQuery\r\n\r\n    if (!activeQuery) {\r\n      this._handleErrorEvent(msg)\r\n      return\r\n    }\r\n\r\n    this.activeQuery = null\r\n    activeQuery.handleError(msg, this.connection)\r\n  }\r\n\r\n  _handleRowDescription(msg) {\r\n    // delegate rowDescription to active query\r\n    this.activeQuery.handleRowDescription(msg)\r\n  }\r\n\r\n  _handleDataRow(msg) {\r\n    // delegate dataRow to active query\r\n    this.activeQuery.handleDataRow(msg)\r\n  }\r\n\r\n  _handlePortalSuspended(msg) {\r\n    // delegate portalSuspended to active query\r\n    this.activeQuery.handlePortalSuspended(this.connection)\r\n  }\r\n\r\n  _handleEmptyQuery(msg) {\r\n    // delegate emptyQuery to active query\r\n    this.activeQuery.handleEmptyQuery(this.connection)\r\n  }\r\n\r\n  _handleCommandComplete(msg) {\r\n    // delegate commandComplete to active query\r\n    this.activeQuery.handleCommandComplete(msg, this.connection)\r\n  }\r\n\r\n  _handleParseComplete(msg) {\r\n    // if a prepared statement has a name and properly parses\r\n    // we track that its already been executed so we don't parse\r\n    // it again on the same client\r\n    if (this.activeQuery.name) {\r\n      this.connection.parsedStatements[this.activeQuery.name] = this.activeQuery.text\r\n    }\r\n  }\r\n\r\n  _handleCopyInResponse(msg) {\r\n    this.activeQuery.handleCopyInResponse(this.connection)\r\n  }\r\n\r\n  _handleCopyData(msg) {\r\n    this.activeQuery.handleCopyData(msg, this.connection)\r\n  }\r\n\r\n  _handleNotification(msg) {\r\n    this.emit('notification', msg)\r\n  }\r\n\r\n  _handleNotice(msg) {\r\n    this.emit('notice', msg)\r\n  }\r\n\r\n  getStartupConf() {\r\n    var params = this.connectionParameters\r\n\r\n    var data = {\r\n      user: params.user,\r\n      database: params.database,\r\n    }\r\n\r\n    var appName = params.application_name || params.fallback_application_name\r\n    if (appName) {\r\n      data.application_name = appName\r\n    }\r\n    if (params.replication) {\r\n      data.replication = '' + params.replication\r\n    }\r\n    if (params.statement_timeout) {\r\n      data.statement_timeout = String(parseInt(params.statement_timeout, 10))\r\n    }\r\n    if (params.lock_timeout) {\r\n      data.lock_timeout = String(parseInt(params.lock_timeout, 10))\r\n    }\r\n    if (params.idle_in_transaction_session_timeout) {\r\n      data.idle_in_transaction_session_timeout = String(parseInt(params.idle_in_transaction_session_timeout, 10))\r\n    }\r\n    if (params.options) {\r\n      data.options = params.options\r\n    }\r\n\r\n    return data\r\n  }\r\n\r\n  cancel(client, query) {\r\n    if (client.activeQuery === query) {\r\n      var con = this.connection\r\n\r\n      if (this.host && this.host.indexOf('/') === 0) {\r\n        con.connect(this.host + '/.s.PGSQL.' + this.port)\r\n      } else {\r\n        con.connect(this.port, this.host)\r\n      }\r\n\r\n      // once connection is established send cancel message\r\n      con.on('connect', function () {\r\n        con.cancel(client.processID, client.secretKey)\r\n      })\r\n    } else if (client.queryQueue.indexOf(query) !== -1) {\r\n      client.queryQueue.splice(client.queryQueue.indexOf(query), 1)\r\n    }\r\n  }\r\n\r\n  setTypeParser(oid, format, parseFn) {\r\n    return this._types.setTypeParser(oid, format, parseFn)\r\n  }\r\n\r\n  getTypeParser(oid, format) {\r\n    return this._types.getTypeParser(oid, format)\r\n  }\r\n\r\n  // escapeIdentifier and escapeLiteral moved to utility functions & exported\r\n  // on PG\r\n  // re-exported here for backwards compatibility\r\n  escapeIdentifier(str) {\r\n    return utils.escapeIdentifier(str)\r\n  }\r\n\r\n  escapeLiteral(str) {\r\n    return utils.escapeLiteral(str)\r\n  }\r\n\r\n  _pulseQueryQueue() {\r\n    if (this.readyForQuery === true) {\r\n      this.activeQuery = this.queryQueue.shift()\r\n      if (this.activeQuery) {\r\n        this.readyForQuery = false\r\n        this.hasExecuted = true\r\n\r\n        const queryError = this.activeQuery.submit(this.connection)\r\n        if (queryError) {\r\n          process.nextTick(() => {\r\n            this.activeQuery.handleError(queryError, this.connection)\r\n            this.readyForQuery = true\r\n            this._pulseQueryQueue()\r\n          })\r\n        }\r\n      } else if (this.hasExecuted) {\r\n        this.activeQuery = null\r\n        this.emit('drain')\r\n      }\r\n    }\r\n  }\r\n\r\n  query(config, values, callback) {\r\n    // can take in strings, config object or query object\r\n    var query\r\n    var result\r\n    var readTimeout\r\n    var readTimeoutTimer\r\n    var queryCallback\r\n\r\n    if (config === null || config === undefined) {\r\n      throw new TypeError('Client was passed a null or undefined query')\r\n    } else if (typeof config.submit === 'function') {\r\n      readTimeout = config.query_timeout || this.connectionParameters.query_timeout\r\n      result = query = config\r\n      if (typeof values === 'function') {\r\n        query.callback = query.callback || values\r\n      }\r\n    } else {\r\n      readTimeout = this.connectionParameters.query_timeout\r\n      query = new Query(config, values, callback)\r\n      if (!query.callback) {\r\n        result = new this._Promise((resolve, reject) => {\r\n          query.callback = (err, res) => (err ? reject(err) : resolve(res))\r\n        }).catch((err) => {\r\n          // replace the stack trace that leads to `TCP.onStreamRead` with one that leads back to the\r\n          // application that created the query\r\n          Error.captureStackTrace(err)\r\n          throw err\r\n        })\r\n      }\r\n    }\r\n\r\n    if (readTimeout) {\r\n      queryCallback = query.callback\r\n\r\n      readTimeoutTimer = setTimeout(() => {\r\n        var error = new Error('Query read timeout')\r\n\r\n        process.nextTick(() => {\r\n          query.handleError(error, this.connection)\r\n        })\r\n\r\n        queryCallback(error)\r\n\r\n        // we already returned an error,\r\n        // just do nothing if query completes\r\n        query.callback = () => {}\r\n\r\n        // Remove from queue\r\n        var index = this.queryQueue.indexOf(query)\r\n        if (index > -1) {\r\n          this.queryQueue.splice(index, 1)\r\n        }\r\n\r\n        this._pulseQueryQueue()\r\n      }, readTimeout)\r\n\r\n      query.callback = (err, res) => {\r\n        clearTimeout(readTimeoutTimer)\r\n        queryCallback(err, res)\r\n      }\r\n    }\r\n\r\n    if (this.binary && !query.binary) {\r\n      query.binary = true\r\n    }\r\n\r\n    if (query._result && !query._result._types) {\r\n      query._result._types = this._types\r\n    }\r\n\r\n    if (!this._queryable) {\r\n      process.nextTick(() => {\r\n        query.handleError(new Error('Client has encountered a connection error and is not queryable'), this.connection)\r\n      })\r\n      return result\r\n    }\r\n\r\n    if (this._ending) {\r\n      process.nextTick(() => {\r\n        query.handleError(new Error('Client was closed and is not queryable'), this.connection)\r\n      })\r\n      return result\r\n    }\r\n\r\n    this.queryQueue.push(query)\r\n    this._pulseQueryQueue()\r\n    return result\r\n  }\r\n\r\n  ref() {\r\n    this.connection.ref()\r\n  }\r\n\r\n  unref() {\r\n    this.connection.unref()\r\n  }\r\n\r\n  end(cb) {\r\n    this._ending = true\r\n\r\n    // if we have never connected, then end is a noop, callback immediately\r\n    if (!this.connection._connecting || this._ended) {\r\n      if (cb) {\r\n        cb()\r\n      } else {\r\n        return this._Promise.resolve()\r\n      }\r\n    }\r\n\r\n    if (this.activeQuery || !this._queryable) {\r\n      // if we have an active query we need to force a disconnect\r\n      // on the socket - otherwise a hung query could block end forever\r\n      this.connection.stream.destroy()\r\n    } else {\r\n      this.connection.end()\r\n    }\r\n\r\n    if (cb) {\r\n      this.connection.once('end', cb)\r\n    } else {\r\n      return new this._Promise((resolve) => {\r\n        this.connection.once('end', resolve)\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n// expose a Query constructor\r\nClient.Query = Query\r\n\r\nmodule.exports = Client\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg/lib/client.js b/node_modules/pg/lib/client.js
--- a/node_modules/pg/lib/client.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg/lib/client.js	(date 1753913035426)
@@ -1,14 +1,14 @@
 'use strict'
 
-var EventEmitter = require('events').EventEmitter
-var utils = require('./utils')
-var sasl = require('./crypto/sasl')
-var TypeOverrides = require('./type-overrides')
+const EventEmitter = require('events').EventEmitter
+const utils = require('./utils')
+const sasl = require('./crypto/sasl')
+const TypeOverrides = require('./type-overrides')
 
-var ConnectionParameters = require('./connection-parameters')
-var Query = require('./query')
-var defaults = require('./defaults')
-var Connection = require('./connection')
+const ConnectionParameters = require('./connection-parameters')
+const Query = require('./query')
+const defaults = require('./defaults')
+const Connection = require('./connection')
 const crypto = require('./crypto/utils')
 
 class Client extends EventEmitter {
@@ -32,7 +32,7 @@
 
     this.replication = this.connectionParameters.replication
 
-    var c = config || {}
+    const c = config || {}
 
     this._Promise = c.Promise || global.Promise
     this._types = new TypeOverrides(c.types)
@@ -43,6 +43,7 @@
     this._connectionError = false
     this._queryable = true
 
+    this.enableChannelBinding = Boolean(c.enableChannelBinding) // set true to use SCRAM-SHA-256-PLUS when offered
     this.connection =
       c.connection ||
       new Connection({
@@ -86,8 +87,8 @@
   }
 
   _connect(callback) {
-    var self = this
-    var con = this.connection
+    const self = this
+    const con = this.connection
     this._connectionCallback = callback
 
     if (this._connecting || this._connected) {
@@ -99,12 +100,15 @@
     }
     this._connecting = true
 
-    this.connectionTimeoutHandle
     if (this._connectionTimeoutMillis > 0) {
       this.connectionTimeoutHandle = setTimeout(() => {
         con._ending = true
         con.stream.destroy(new Error('timeout expired'))
       }, this._connectionTimeoutMillis)
+
+      if (this.connectionTimeoutHandle.unref) {
+        this.connectionTimeoutHandle.unref()
+      }
     }
 
     if (this.host && this.host.indexOf('/') === 0) {
@@ -259,7 +263,7 @@
   _handleAuthSASL(msg) {
     this._checkPgPass(() => {
       try {
-        this.saslSession = sasl.startSession(msg.mechanisms)
+        this.saslSession = sasl.startSession(msg.mechanisms, this.enableChannelBinding && this.connection.stream)
         this.connection.sendSASLInitialResponseMessage(this.saslSession.mechanism, this.saslSession.response)
       } catch (err) {
         this.connection.emit('error', err)
@@ -269,7 +273,12 @@
 
   async _handleAuthSASLContinue(msg) {
     try {
-      await sasl.continueSession(this.saslSession, this.password, msg.data)
+      await sasl.continueSession(
+        this.saslSession,
+        this.password,
+        msg.data,
+        this.enableChannelBinding && this.connection.stream
+      )
       this.connection.sendSCRAMClientFinalMessage(this.saslSession.response)
     } catch (err) {
       this.connection.emit('error', err)
@@ -314,7 +323,7 @@
     this._pulseQueryQueue()
   }
 
-  // if we receieve an error event or error message
+  // if we receive an error event or error message
   // during the connection process we handle it here
   _handleErrorWhileConnecting(err) {
     if (this._connectionError) {
@@ -378,11 +387,21 @@
   }
 
   _handleCommandComplete(msg) {
+    if (this.activeQuery == null) {
+      const error = new Error('Received unexpected commandComplete message from backend.')
+      this._handleErrorEvent(error)
+      return
+    }
     // delegate commandComplete to active query
     this.activeQuery.handleCommandComplete(msg, this.connection)
   }
 
-  _handleParseComplete(msg) {
+  _handleParseComplete() {
+    if (this.activeQuery == null) {
+      const error = new Error('Received unexpected parseComplete message from backend.')
+      this._handleErrorEvent(error)
+      return
+    }
     // if a prepared statement has a name and properly parses
     // we track that its already been executed so we don't parse
     // it again on the same client
@@ -408,14 +427,14 @@
   }
 
   getStartupConf() {
-    var params = this.connectionParameters
+    const params = this.connectionParameters
 
-    var data = {
+    const data = {
       user: params.user,
       database: params.database,
     }
 
-    var appName = params.application_name || params.fallback_application_name
+    const appName = params.application_name || params.fallback_application_name
     if (appName) {
       data.application_name = appName
     }
@@ -440,7 +459,7 @@
 
   cancel(client, query) {
     if (client.activeQuery === query) {
-      var con = this.connection
+      const con = this.connection
 
       if (this.host && this.host.indexOf('/') === 0) {
         con.connect(this.host + '/.s.PGSQL.' + this.port)
@@ -500,11 +519,11 @@
 
   query(config, values, callback) {
     // can take in strings, config object or query object
-    var query
-    var result
-    var readTimeout
-    var readTimeoutTimer
-    var queryCallback
+    let query
+    let result
+    let readTimeout
+    let readTimeoutTimer
+    let queryCallback
 
     if (config === null || config === undefined) {
       throw new TypeError('Client was passed a null or undefined query')
@@ -515,7 +534,7 @@
         query.callback = query.callback || values
       }
     } else {
-      readTimeout = this.connectionParameters.query_timeout
+      readTimeout = config.query_timeout || this.connectionParameters.query_timeout
       query = new Query(config, values, callback)
       if (!query.callback) {
         result = new this._Promise((resolve, reject) => {
@@ -533,7 +552,7 @@
       queryCallback = query.callback
 
       readTimeoutTimer = setTimeout(() => {
-        var error = new Error('Query read timeout')
+        const error = new Error('Query read timeout')
 
         process.nextTick(() => {
           query.handleError(error, this.connection)
@@ -546,7 +565,7 @@
         query.callback = () => {}
 
         // Remove from queue
-        var index = this.queryQueue.indexOf(query)
+        const index = this.queryQueue.indexOf(query)
         if (index > -1) {
           this.queryQueue.splice(index, 1)
         }
Index: node_modules/pg/lib/stream.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/**\r\n * Get a socket stream compatible with the current runtime environment.\r\n * @returns {Duplex}\r\n */\r\nmodule.exports.getStream = function getStream(ssl) {\r\n  const net = require('net')\r\n  if (typeof net.Socket === 'function') {\r\n    return new net.Socket()\r\n  } else {\r\n    const { CloudflareSocket } = require('pg-cloudflare')\r\n    return new CloudflareSocket(ssl)\r\n  }\r\n}\r\n\r\n/**\r\n * Get a TLS secured socket, compatible with the current environment,\r\n * using the socket and other settings given in `options`.\r\n * @returns {Duplex}\r\n */\r\nmodule.exports.getSecureStream = function getSecureStream(options) {\r\n  var tls = require('tls')\r\n  if (tls.connect) {\r\n    return tls.connect(options)\r\n  } else {\r\n    options.socket.startTls(options)\r\n    return options.socket\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg/lib/stream.js b/node_modules/pg/lib/stream.js
--- a/node_modules/pg/lib/stream.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg/lib/stream.js	(date 1753913035448)
@@ -1,28 +1,83 @@
-/**
- * Get a socket stream compatible with the current runtime environment.
- * @returns {Duplex}
- */
-module.exports.getStream = function getStream(ssl) {
-  const net = require('net')
-  if (typeof net.Socket === 'function') {
-    return new net.Socket()
-  } else {
-    const { CloudflareSocket } = require('pg-cloudflare')
-    return new CloudflareSocket(ssl)
-  }
-}
-
-/**
- * Get a TLS secured socket, compatible with the current environment,
- * using the socket and other settings given in `options`.
- * @returns {Duplex}
+const { getStream, getSecureStream } = getStreamFuncs()
+
+module.exports = {
+  /**
+   * Get a socket stream compatible with the current runtime environment.
+   * @returns {Duplex}
+   */
+  getStream,
+  /**
+   * Get a TLS secured socket, compatible with the current environment,
+   * using the socket and other settings given in `options`.
+   * @returns {Duplex}
+   */
+  getSecureStream,
+}
+
+/**
+ * The stream functions that work in Node.js
  */
-module.exports.getSecureStream = function getSecureStream(options) {
-  var tls = require('tls')
-  if (tls.connect) {
+function getNodejsStreamFuncs() {
+  function getStream(ssl) {
+    const net = require('net')
+    return new net.Socket()
+  }
+
+  function getSecureStream(options) {
+    const tls = require('tls')
     return tls.connect(options)
-  } else {
+  }
+  return {
+    getStream,
+    getSecureStream,
+  }
+}
+
+/**
+ * The stream functions that work in Cloudflare Workers
+ */
+function getCloudflareStreamFuncs() {
+  function getStream(ssl) {
+    const { CloudflareSocket } = require('pg-cloudflare')
+    return new CloudflareSocket(ssl)
+  }
+
+  function getSecureStream(options) {
     options.socket.startTls(options)
     return options.socket
   }
+  return {
+    getStream,
+    getSecureStream,
+  }
+}
+
+/**
+ * Are we running in a Cloudflare Worker?
+ *
+ * @returns true if the code is currently running inside a Cloudflare Worker.
+ */
+function isCloudflareRuntime() {
+  // Since 2022-03-21 the `global_navigator` compatibility flag is on for Cloudflare Workers
+  // which means that `navigator.userAgent` will be defined.
+  // eslint-disable-next-line no-undef
+  if (typeof navigator === 'object' && navigator !== null && typeof navigator.userAgent === 'string') {
+    // eslint-disable-next-line no-undef
+    return navigator.userAgent === 'Cloudflare-Workers'
+  }
+  // In case `navigator` or `navigator.userAgent` is not defined then try a more sneaky approach
+  if (typeof Response === 'function') {
+    const resp = new Response(null, { cf: { thing: true } })
+    if (typeof resp.cf === 'object' && resp.cf !== null && resp.cf.thing) {
+      return true
+    }
+  }
+  return false
+}
+
+function getStreamFuncs() {
+  if (isCloudflareRuntime()) {
+    return getCloudflareStreamFuncs()
+  }
+  return getNodejsStreamFuncs()
 }
Index: node_modules/lightning-pool/esm/pool-options.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { EventEmitter } from 'events';\r\nconst defaultValues = {\r\n    acquireMaxRetries: 0,\r\n    acquireRetryWait: 2000,\r\n    acquireTimeoutMillis: 0,\r\n    fifo: true,\r\n    idleTimeoutMillis: 30000,\r\n    houseKeepInterval: 1000,\r\n    min: 0,\r\n    minIdle: 0,\r\n    max: 10,\r\n    maxQueue: 1000,\r\n    validation: true\r\n};\r\nexport class PoolOptions extends EventEmitter {\r\n    constructor(pool) {\r\n        super();\r\n        this.pool = pool;\r\n        this._acquireMaxRetries = defaultValues.acquireMaxRetries;\r\n        this._acquireRetryWait = defaultValues.acquireRetryWait;\r\n        this._acquireTimeoutMillis = defaultValues.acquireTimeoutMillis;\r\n        this._fifo = defaultValues.fifo;\r\n        this._idleTimeoutMillis = defaultValues.idleTimeoutMillis;\r\n        this._houseKeepInterval = defaultValues.houseKeepInterval;\r\n        this._min = defaultValues.min;\r\n        this._minIdle = defaultValues.minIdle;\r\n        this._max = defaultValues.max;\r\n        this._maxQueue = defaultValues.maxQueue;\r\n        this._validation = defaultValues.validation;\r\n        this.pool = pool;\r\n    }\r\n    get acquireMaxRetries() {\r\n        return this._acquireMaxRetries;\r\n    }\r\n    set acquireMaxRetries(val) {\r\n        this._acquireMaxRetries = val >= 0 ? val : defaultValues.acquireMaxRetries;\r\n        this.emit('change', 'acquireMaxRetries', this._acquireMaxRetries);\r\n    }\r\n    get acquireRetryWait() {\r\n        return this._acquireRetryWait;\r\n    }\r\n    set acquireRetryWait(val) {\r\n        this._acquireRetryWait = val >= 0 ? val : defaultValues.acquireRetryWait;\r\n        this.emit('change', 'acquireRetryWait', this._acquireRetryWait);\r\n    }\r\n    get acquireTimeoutMillis() {\r\n        return this._acquireTimeoutMillis;\r\n    }\r\n    set acquireTimeoutMillis(val) {\r\n        this._acquireTimeoutMillis = val >= 0 ? val : defaultValues.acquireTimeoutMillis;\r\n        this.emit('change', 'acquireTimeoutMillis', this._acquireTimeoutMillis);\r\n    }\r\n    get fifo() {\r\n        return this._fifo;\r\n    }\r\n    set fifo(val) {\r\n        // noinspection PointlessBooleanExpressionJS\r\n        this._fifo = !!val;\r\n        this.emit('change', 'fifo', this.fifo);\r\n    }\r\n    get idleTimeoutMillis() {\r\n        return this._idleTimeoutMillis;\r\n    }\r\n    set idleTimeoutMillis(val) {\r\n        this._idleTimeoutMillis = val >= 0 ? val : defaultValues.idleTimeoutMillis;\r\n        this.emit('change', 'idleTimeoutMillis', this._idleTimeoutMillis);\r\n    }\r\n    get houseKeepInterval() {\r\n        return this._houseKeepInterval;\r\n    }\r\n    set houseKeepInterval(val) {\r\n        this._houseKeepInterval = val >= 0 ? val : defaultValues.houseKeepInterval;\r\n        this.emit('change', 'houseKeepInterval', this._houseKeepInterval);\r\n    }\r\n    get min() {\r\n        return this._min;\r\n    }\r\n    set min(val) {\r\n        this._min = val >= 0 ? val : defaultValues.min;\r\n        if (this._min > this._max)\r\n            this._max = this._min;\r\n        this.emit('change', 'min', this._min);\r\n    }\r\n    get minIdle() {\r\n        return this._minIdle;\r\n    }\r\n    set minIdle(val) {\r\n        this._minIdle = val >= 0 ? val : defaultValues.minIdle;\r\n        this.emit('change', 'minIdle', this.minIdle);\r\n    }\r\n    get max() {\r\n        return this._max;\r\n    }\r\n    set max(val) {\r\n        this._max = val >= 0 ? Math.max(val, 1) : defaultValues.max;\r\n        if (this._min > this._max)\r\n            this._min = this._max;\r\n        this.emit('change', 'max', this._max);\r\n    }\r\n    get maxQueue() {\r\n        return this._maxQueue;\r\n    }\r\n    set maxQueue(val) {\r\n        this._maxQueue = val >= 0 ? Math.max(val, 1) : defaultValues.maxQueue;\r\n        this.emit('change', 'maxQueue', this._maxQueue);\r\n    }\r\n    get validation() {\r\n        return this._validation;\r\n    }\r\n    set validation(val) {\r\n        // noinspection PointlessBooleanExpressionJS\r\n        this._validation = !!val;\r\n        this.emit('change', 'validation', this._validation);\r\n    }\r\n    assign(values) {\r\n        const proto = Object.getPrototypeOf(this);\r\n        for (const k of Object.keys(values)) {\r\n            const desc = Object.getOwnPropertyDescriptor(proto, k);\r\n            if (desc && desc.set)\r\n                this[k] = values[k];\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/lightning-pool/esm/pool-options.js b/node_modules/lightning-pool/esm/pool-options.js
--- a/node_modules/lightning-pool/esm/pool-options.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/lightning-pool/esm/pool-options.js	(date 1753913035663)
@@ -10,7 +10,7 @@
     minIdle: 0,
     max: 10,
     maxQueue: 1000,
-    validation: true
+    validation: true,
 };
 export class PoolOptions extends EventEmitter {
     constructor(pool) {
@@ -47,7 +47,8 @@
         return this._acquireTimeoutMillis;
     }
     set acquireTimeoutMillis(val) {
-        this._acquireTimeoutMillis = val >= 0 ? val : defaultValues.acquireTimeoutMillis;
+        this._acquireTimeoutMillis =
+            val >= 0 ? val : defaultValues.acquireTimeoutMillis;
         this.emit('change', 'acquireTimeoutMillis', this._acquireTimeoutMillis);
     }
     get fifo() {
Index: node_modules/pg/lib/query.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict'\r\n\r\nconst { EventEmitter } = require('events')\r\n\r\nconst Result = require('./result')\r\nconst utils = require('./utils')\r\n\r\nclass Query extends EventEmitter {\r\n  constructor(config, values, callback) {\r\n    super()\r\n\r\n    config = utils.normalizeQueryConfig(config, values, callback)\r\n\r\n    this.text = config.text\r\n    this.values = config.values\r\n    this.rows = config.rows\r\n    this.types = config.types\r\n    this.name = config.name\r\n    this.binary = config.binary\r\n    // use unique portal name each time\r\n    this.portal = config.portal || ''\r\n    this.callback = config.callback\r\n    this._rowMode = config.rowMode\r\n    if (process.domain && config.callback) {\r\n      this.callback = process.domain.bind(config.callback)\r\n    }\r\n    this._result = new Result(this._rowMode, this.types)\r\n\r\n    // potential for multiple results\r\n    this._results = this._result\r\n    this._canceledDueToError = false\r\n  }\r\n\r\n  requiresPreparation() {\r\n    // named queries must always be prepared\r\n    if (this.name) {\r\n      return true\r\n    }\r\n    // always prepare if there are max number of rows expected per\r\n    // portal execution\r\n    if (this.rows) {\r\n      return true\r\n    }\r\n    // don't prepare empty text queries\r\n    if (!this.text) {\r\n      return false\r\n    }\r\n    // prepare if there are values\r\n    if (!this.values) {\r\n      return false\r\n    }\r\n    return this.values.length > 0\r\n  }\r\n\r\n  _checkForMultirow() {\r\n    // if we already have a result with a command property\r\n    // then we've already executed one query in a multi-statement simple query\r\n    // turn our results into an array of results\r\n    if (this._result.command) {\r\n      if (!Array.isArray(this._results)) {\r\n        this._results = [this._result]\r\n      }\r\n      this._result = new Result(this._rowMode, this.types)\r\n      this._results.push(this._result)\r\n    }\r\n  }\r\n\r\n  // associates row metadata from the supplied\r\n  // message with this query object\r\n  // metadata used when parsing row results\r\n  handleRowDescription(msg) {\r\n    this._checkForMultirow()\r\n    this._result.addFields(msg.fields)\r\n    this._accumulateRows = this.callback || !this.listeners('row').length\r\n  }\r\n\r\n  handleDataRow(msg) {\r\n    let row\r\n\r\n    if (this._canceledDueToError) {\r\n      return\r\n    }\r\n\r\n    try {\r\n      row = this._result.parseRow(msg.fields)\r\n    } catch (err) {\r\n      this._canceledDueToError = err\r\n      return\r\n    }\r\n\r\n    this.emit('row', row, this._result)\r\n    if (this._accumulateRows) {\r\n      this._result.addRow(row)\r\n    }\r\n  }\r\n\r\n  handleCommandComplete(msg, connection) {\r\n    this._checkForMultirow()\r\n    this._result.addCommandComplete(msg)\r\n    // need to sync after each command complete of a prepared statement\r\n    // if we were using a row count which results in multiple calls to _getRows\r\n    if (this.rows) {\r\n      connection.sync()\r\n    }\r\n  }\r\n\r\n  // if a named prepared statement is created with empty query text\r\n  // the backend will send an emptyQuery message but *not* a command complete message\r\n  // since we pipeline sync immediately after execute we don't need to do anything here\r\n  // unless we have rows specified, in which case we did not pipeline the intial sync call\r\n  handleEmptyQuery(connection) {\r\n    if (this.rows) {\r\n      connection.sync()\r\n    }\r\n  }\r\n\r\n  handleError(err, connection) {\r\n    // need to sync after error during a prepared statement\r\n    if (this._canceledDueToError) {\r\n      err = this._canceledDueToError\r\n      this._canceledDueToError = false\r\n    }\r\n    // if callback supplied do not emit error event as uncaught error\r\n    // events will bubble up to node process\r\n    if (this.callback) {\r\n      return this.callback(err)\r\n    }\r\n    this.emit('error', err)\r\n  }\r\n\r\n  handleReadyForQuery(con) {\r\n    if (this._canceledDueToError) {\r\n      return this.handleError(this._canceledDueToError, con)\r\n    }\r\n    if (this.callback) {\r\n      try {\r\n        this.callback(null, this._results)\r\n      } catch (err) {\r\n        process.nextTick(() => {\r\n          throw err\r\n        })\r\n      }\r\n    }\r\n    this.emit('end', this._results)\r\n  }\r\n\r\n  submit(connection) {\r\n    if (typeof this.text !== 'string' && typeof this.name !== 'string') {\r\n      return new Error('A query must have either text or a name. Supplying neither is unsupported.')\r\n    }\r\n    const previous = connection.parsedStatements[this.name]\r\n    if (this.text && previous && this.text !== previous) {\r\n      return new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`)\r\n    }\r\n    if (this.values && !Array.isArray(this.values)) {\r\n      return new Error('Query values must be an array')\r\n    }\r\n    if (this.requiresPreparation()) {\r\n      this.prepare(connection)\r\n    } else {\r\n      connection.query(this.text)\r\n    }\r\n    return null\r\n  }\r\n\r\n  hasBeenParsed(connection) {\r\n    return this.name && connection.parsedStatements[this.name]\r\n  }\r\n\r\n  handlePortalSuspended(connection) {\r\n    this._getRows(connection, this.rows)\r\n  }\r\n\r\n  _getRows(connection, rows) {\r\n    connection.execute({\r\n      portal: this.portal,\r\n      rows: rows,\r\n    })\r\n    // if we're not reading pages of rows send the sync command\r\n    // to indicate the pipeline is finished\r\n    if (!rows) {\r\n      connection.sync()\r\n    } else {\r\n      // otherwise flush the call out to read more rows\r\n      connection.flush()\r\n    }\r\n  }\r\n\r\n  // http://developer.postgresql.org/pgdocs/postgres/protocol-flow.html#PROTOCOL-FLOW-EXT-QUERY\r\n  prepare(connection) {\r\n    // TODO refactor this poor encapsulation\r\n    if (!this.hasBeenParsed(connection)) {\r\n      connection.parse({\r\n        text: this.text,\r\n        name: this.name,\r\n        types: this.types,\r\n      })\r\n    }\r\n\r\n    // because we're mapping user supplied values to\r\n    // postgres wire protocol compatible values it could\r\n    // throw an exception, so try/catch this section\r\n    try {\r\n      connection.bind({\r\n        portal: this.portal,\r\n        statement: this.name,\r\n        values: this.values,\r\n        binary: this.binary,\r\n        valueMapper: utils.prepareValue,\r\n      })\r\n    } catch (err) {\r\n      this.handleError(err, connection)\r\n      return\r\n    }\r\n\r\n    connection.describe({\r\n      type: 'P',\r\n      name: this.portal || '',\r\n    })\r\n\r\n    this._getRows(connection, this.rows)\r\n  }\r\n\r\n  handleCopyInResponse(connection) {\r\n    connection.sendCopyFail('No source stream defined')\r\n  }\r\n\r\n  // eslint-disable-next-line no-unused-vars\r\n  handleCopyData(msg, connection) {\r\n    // noop\r\n  }\r\n}\r\n\r\nmodule.exports = Query\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg/lib/query.js b/node_modules/pg/lib/query.js
--- a/node_modules/pg/lib/query.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg/lib/query.js	(date 1753913035433)
@@ -16,6 +16,7 @@
     this.rows = config.rows
     this.types = config.types
     this.name = config.name
+    this.queryMode = config.queryMode
     this.binary = config.binary
     // use unique portal name each time
     this.portal = config.portal || ''
@@ -32,6 +33,10 @@
   }
 
   requiresPreparation() {
+    if (this.queryMode === 'extended') {
+      return true
+    }
+
     // named queries must always be prepared
     if (this.name) {
       return true
@@ -60,7 +65,7 @@
       if (!Array.isArray(this._results)) {
         this._results = [this._result]
       }
-      this._result = new Result(this._rowMode, this.types)
+      this._result = new Result(this._rowMode, this._result._types)
       this._results.push(this._result)
     }
   }
@@ -107,7 +112,7 @@
   // if a named prepared statement is created with empty query text
   // the backend will send an emptyQuery message but *not* a command complete message
   // since we pipeline sync immediately after execute we don't need to do anything here
-  // unless we have rows specified, in which case we did not pipeline the intial sync call
+  // unless we have rows specified, in which case we did not pipeline the initial sync call
   handleEmptyQuery(connection) {
     if (this.rows) {
       connection.sync()
@@ -156,7 +161,21 @@
       return new Error('Query values must be an array')
     }
     if (this.requiresPreparation()) {
-      this.prepare(connection)
+      // If we're using the extended query protocol we fire off several separate commands
+      // to the backend. On some versions of node & some operating system versions
+      // the network stack writes each message separately instead of buffering them together
+      // causing the client & network to send more slowly. Corking & uncorking the stream
+      // allows node to buffer up the messages internally before sending them all off at once.
+      // note: we're checking for existence of cork/uncork because some versions of streams
+      // might not have this (cloudflare?)
+      connection.stream.cork && connection.stream.cork()
+      try {
+        this.prepare(connection)
+      } finally {
+        // while unlikely for this.prepare to throw, if it does & we don't uncork this stream
+        // this client becomes unresponsive, so put in finally block "just in case"
+        connection.stream.uncork && connection.stream.uncork()
+      }
     } else {
       connection.query(this.text)
     }
@@ -225,7 +244,6 @@
     connection.sendCopyFail('No source stream defined')
   }
 
-  // eslint-disable-next-line no-unused-vars
   handleCopyData(msg, connection) {
     // noop
   }
Index: node_modules/lightning-pool/esm/index.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { Pool } from './pool.js';\r\nexport * from './definitions.js';\r\nexport * from './pool.js';\r\nexport * from './abort-error.js';\r\nexport function createPool(factory, config) {\r\n    return new Pool(factory, config);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/lightning-pool/esm/index.js b/node_modules/lightning-pool/esm/index.js
--- a/node_modules/lightning-pool/esm/index.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/lightning-pool/esm/index.js	(date 1753913035660)
@@ -1,7 +1,8 @@
 import { Pool } from './pool.js';
-export * from './definitions.js';
-export * from './pool.js';
 export * from './abort-error.js';
+export * from './constants.js';
+export * from './pool.js';
+export * from './types.js';
 export function createPool(factory, config) {
     return new Pool(factory, config);
 }
Index: node_modules/nodemon/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><p align=\"center\">\r\n  <a href=\"https://nodemon.io/\"><img src=\"https://user-images.githubusercontent.com/13700/35731649-652807e8-080e-11e8-88fd-1b2f6d553b2d.png\" alt=\"Nodemon Logo\"></a>\r\n</p>\r\n\r\n# nodemon\r\n\r\nnodemon is a tool that helps develop Node.js based applications by automatically restarting the node application when file changes in the directory are detected.\r\n\r\nnodemon does **not** require *any* additional changes to your code or method of development. nodemon is a replacement wrapper for `node`. To use `nodemon`, replace the word `node` on the command line when executing your script.\r\n\r\n[![NPM version](https://badge.fury.io/js/nodemon.svg)](https://npmjs.org/package/nodemon)\r\n[![Backers on Open Collective](https://opencollective.com/nodemon/backers/badge.svg)](#backers) [![Sponsors on Open Collective](https://opencollective.com/nodemon/sponsors/badge.svg)](#sponsors)\r\n\r\n# Installation\r\n\r\nEither through cloning with git or by using [npm](http://npmjs.org) (the recommended way):\r\n\r\n```bash\r\nnpm install -g nodemon # or using yarn: yarn global add nodemon\r\n```\r\n\r\nAnd nodemon will be installed globally to your system path.\r\n\r\nYou can also install nodemon as a development dependency:\r\n\r\n```bash\r\nnpm install --save-dev nodemon # or using yarn: yarn add nodemon -D\r\n```\r\n\r\nWith a local installation, nodemon will not be available in your system path or you can't use it directly from the command line. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as `npm start`) or using `npx nodemon`.\r\n\r\n# Usage\r\n\r\nnodemon wraps your application, so you can pass all the arguments you would normally pass to your app:\r\n\r\n```bash\r\nnodemon [your node app]\r\n```\r\n\r\nFor CLI options, use the `-h` (or `--help`) argument:\r\n\r\n```bash\r\nnodemon -h\r\n```\r\n\r\nUsing nodemon is simple, if my application accepted a host and port as the arguments, I would start it as so:\r\n\r\n```bash\r\nnodemon ./server.js localhost 8080\r\n```\r\n\r\nAny output from this script is prefixed with `[nodemon]`, otherwise all output from your application, errors included, will be echoed out as expected.\r\n\r\nYou can also pass the `inspect` flag to node through the command line as you would normally:\r\n\r\n```bash\r\nnodemon --inspect ./server.js 80\r\n```\r\n\r\nIf you have a `package.json` file for your app, you can omit the main script entirely and nodemon will read the `package.json` for the `main` property and use that value as the app ([ref](https://github.com/remy/nodemon/issues/14)).\r\n\r\nnodemon will also search for the `scripts.start` property in `package.json` (as of nodemon 1.1.x).\r\n\r\nAlso check out the [FAQ](https://github.com/remy/nodemon/blob/master/faq.md) or [issues](https://github.com/remy/nodemon/issues) for nodemon.\r\n\r\n## Automatic re-running\r\n\r\nnodemon was originally written to restart hanging processes such as web servers, but now supports apps that cleanly exit. If your script exits cleanly, nodemon will continue to monitor the directory (or directories) and restart the script if there are any changes.\r\n\r\n## Manual restarting\r\n\r\nWhilst nodemon is running, if you need to manually restart your application, instead of stopping and restart nodemon, you can type `rs` with a carriage return, and nodemon will restart your process.\r\n\r\n## Config files\r\n\r\nnodemon supports local and global configuration files. These are usually named `nodemon.json` and can be located in the current working directory or in your home directory. An alternative local configuration file can be specified with the `--config <file>` option.\r\n\r\nThe specificity is as follows, so that a command line argument will always override the config file settings:\r\n\r\n- command line arguments\r\n- local config\r\n- global config\r\n\r\nA config file can take any of the command line arguments as JSON key values, for example:\r\n\r\n```json\r\n{\r\n  \"verbose\": true,\r\n  \"ignore\": [\"*.test.js\", \"**/fixtures/**\"],\r\n  \"execMap\": {\r\n    \"rb\": \"ruby\",\r\n    \"pde\": \"processing --sketch={{pwd}} --run\"\r\n  }\r\n}\r\n```\r\n\r\nThe above `nodemon.json` file might be my global config so that I have support for ruby files and processing files, and I can run `nodemon demo.pde` and nodemon will automatically know how to run the script even though out of the box support for processing scripts.\r\n\r\nA further example of options can be seen in [sample-nodemon.md](https://github.com/remy/nodemon/blob/master/doc/sample-nodemon.md)\r\n\r\n### package.json\r\n\r\nIf you want to keep all your package configurations in one place, nodemon supports using `package.json` for configuration.\r\nSpecify the config in the same format as you would for a config file but under `nodemonConfig` in the `package.json` file, for example, take the following `package.json`:\r\n\r\n```json\r\n{\r\n  \"name\": \"nodemon\",\r\n  \"homepage\": \"http://nodemon.io\",\r\n  \"...\": \"... other standard package.json values\",\r\n  \"nodemonConfig\": {\r\n    \"ignore\": [\"**/test/**\", \"**/docs/**\"],\r\n    \"delay\": 2500\r\n  }\r\n}\r\n```\r\n\r\nNote that if you specify a `--config` file or provide a local `nodemon.json` any `package.json` config is ignored.\r\n\r\n*This section needs better documentation, but for now you can also see `nodemon --help config` ([also here](https://github.com/remy/nodemon/blob/master/doc/cli/config.txt))*.\r\n\r\n## Using nodemon as a module\r\n\r\nPlease see [doc/requireable.md](doc/requireable.md)\r\n\r\n## Using nodemon as child process\r\n\r\nPlease see [doc/events.md](doc/events.md#Using_nodemon_as_child_process)\r\n\r\n## Running non-node scripts\r\n\r\nnodemon can also be used to execute and monitor other programs. nodemon will read the file extension of the script being run and monitor that extension instead of `.js` if there's no `nodemon.json`:\r\n\r\n```bash\r\nnodemon --exec \"python -v\" ./app.py\r\n```\r\n\r\nNow nodemon will run `app.py` with python in verbose mode (note that if you're not passing args to the exec program, you don't need the quotes), and look for new or modified files with the `.py` extension.\r\n\r\n### Default executables\r\n\r\nUsing the `nodemon.json` config file, you can define your own default executables using the `execMap` property. This is particularly useful if you're working with a language that isn't supported by default by nodemon.\r\n\r\nTo add support for nodemon to know about the `.pl` extension (for Perl), the `nodemon.json` file would add:\r\n\r\n```json\r\n{\r\n  \"execMap\": {\r\n    \"pl\": \"perl\"\r\n  }\r\n}\r\n```\r\n\r\nNow running the following, nodemon will know to use `perl` as the executable:\r\n\r\n```bash\r\nnodemon script.pl\r\n```\r\n\r\nIt's generally recommended to use the global `nodemon.json` to add your own `execMap` options. However, if there's a common default that's missing, this can be merged in to the project so that nodemon supports it by default, by changing [default.js](https://github.com/remy/nodemon/blob/master/lib/config/defaults.js) and sending a pull request.\r\n\r\n## Monitoring multiple directories\r\n\r\nBy default nodemon monitors the current working directory. If you want to take control of that option, use the `--watch` option to add specific paths:\r\n\r\n```bash\r\nnodemon --watch app --watch libs app/server.js\r\n```\r\n\r\nNow nodemon will only restart if there are changes in the `./app` or `./libs` directory. By default nodemon will traverse sub-directories, so there's no need in explicitly including sub-directories.\r\n\r\nNodemon also supports unix globbing, e.g `--watch './lib/*'`. The globbing pattern must be quoted. For advanced globbing, [see `picomatch` documentation](https://github.com/micromatch/picomatch#advanced-globbing), the library that nodemon uses through `chokidar` (which in turn uses it through `anymatch`).\r\n\r\n## Specifying extension watch list\r\n\r\nBy default, nodemon looks for files with the `.js`, `.mjs`, `.coffee`, `.litcoffee`, and `.json` extensions. If you use the `--exec` option and monitor `app.py` nodemon will monitor files with the extension of `.py`. However, you can specify your own list with the `-e` (or `--ext`) switch like so:\r\n\r\n```bash\r\nnodemon -e js,pug\r\n```\r\n\r\nNow nodemon will restart on any changes to files in the directory (or subdirectories) with the extensions `.js`, `.pug`.\r\n\r\n## Ignoring files\r\n\r\nBy default, nodemon will only restart when a `.js` JavaScript file changes. In some cases you will want to ignore some specific files, directories or file patterns, to prevent nodemon from prematurely restarting your application.\r\n\r\nThis can be done via the command line:\r\n\r\n```bash\r\nnodemon --ignore lib/ --ignore tests/\r\n```\r\n\r\nOr specific files can be ignored:\r\n\r\n```bash\r\nnodemon --ignore lib/app.js\r\n```\r\n\r\nPatterns can also be ignored (but be sure to quote the arguments):\r\n\r\n```bash\r\nnodemon --ignore 'lib/*.js'\r\n```\r\n\r\n**Important** the ignore rules are patterns matched to the full absolute path, and this determines how many files are monitored. If using a wild card glob pattern, it needs to be used as `**` or omitted entirely. For example, `nodemon --ignore '**/test/**'` will work, whereas `--ignore '*/test/*'` will not.\r\n\r\nNote that by default, nodemon will ignore the `.git`, `node_modules`, `bower_components`, `.nyc_output`, `coverage` and `.sass-cache` directories and *add* your ignored patterns to the list. If you want to indeed watch a directory like `node_modules`, you need to [override the underlying default ignore rules](https://github.com/remy/nodemon/blob/master/faq.md#overriding-the-underlying-default-ignore-rules).\r\n\r\n## Application isn't restarting\r\n\r\nIn some networked environments (such as a container running nodemon reading across a mounted drive), you will need to use the `legacyWatch: true` which enables Chokidar's polling.\r\n\r\nVia the CLI, use either `--legacy-watch` or `-L` for short:\r\n\r\n```bash\r\nnodemon -L\r\n```\r\n\r\nThough this should be a last resort as it will poll every file it can find.\r\n\r\n## Delaying restarting\r\n\r\nIn some situations, you may want to wait until a number of files have changed. The timeout before checking for new file changes is 1 second. If you're uploading a number of files and it's taking some number of seconds, this could cause your app to restart multiple times unnecessarily.\r\n\r\nTo add an extra throttle, or delay restarting, use the `--delay` command:\r\n\r\n```bash\r\nnodemon --delay 10 server.js\r\n```\r\n\r\nFor more precision, milliseconds can be specified.  Either as a float:\r\n\r\n```bash\r\nnodemon --delay 2.5 server.js\r\n```\r\n\r\nOr using the time specifier (ms):\r\n\r\n```bash\r\nnodemon --delay 2500ms server.js\r\n```\r\n\r\nThe delay figure is number of seconds (or milliseconds, if specified) to delay before restarting. So nodemon will only restart your app the given number of seconds after the *last* file change.\r\n\r\nIf you are setting this value in `nodemon.json`, the value will always be interpreted in milliseconds. E.g., the following are equivalent:\r\n\r\n```bash\r\nnodemon --delay 2.5\r\n\r\n{\r\n  \"delay\": 2500\r\n}\r\n```\r\n\r\n## Gracefully reloading down your script\r\n\r\nIt is possible to have nodemon send any signal that you specify to your application.\r\n\r\n```bash\r\nnodemon --signal SIGHUP server.js\r\n```\r\n\r\nYour application can handle the signal as follows.\r\n\r\n```js\r\nprocess.once(\"SIGHUP\", function () {\r\n  reloadSomeConfiguration();\r\n})\r\n```\r\n\r\nPlease note that nodemon will send this signal to every process in the process tree.\r\n\r\nIf you are using `cluster`, then each workers (as well as the master) will receive the signal. If you wish to terminate all workers on receiving a `SIGHUP`, a common pattern is to catch the `SIGHUP` in the master, and forward `SIGTERM` to all workers, while ensuring that all workers ignore `SIGHUP`.\r\n\r\n```js\r\nif (cluster.isMaster) {\r\n  process.on(\"SIGHUP\", function () {\r\n    for (const worker of Object.values(cluster.workers)) {\r\n      worker.process.kill(\"SIGTERM\");\r\n    }\r\n  });\r\n} else {\r\n  process.on(\"SIGHUP\", function() {})\r\n}\r\n```\r\n\r\n## Controlling shutdown of your script\r\n\r\nnodemon sends a kill signal to your application when it sees a file update. If you need to clean up on shutdown inside your script you can capture the kill signal and handle it yourself.\r\n\r\nThe following example will listen once for the `SIGUSR2` signal (used by nodemon to restart), run the clean up process and then kill itself for nodemon to continue control:\r\n\r\n```js\r\nprocess.once('SIGUSR2', function () {\r\n  gracefulShutdown(function () {\r\n    process.kill(process.pid, 'SIGUSR2');\r\n  });\r\n});\r\n```\r\n\r\nNote that the `process.kill` is *only* called once your shutdown jobs are complete. Hat tip to [Benjie Gillam](http://www.benjiegillam.com/2011/08/node-js-clean-restart-and-faster-development-with-nodemon/) for writing this technique up.\r\n\r\n## Triggering events when nodemon state changes\r\n\r\nIf you want growl like notifications when nodemon restarts or to trigger an action when an event happens, then you can either `require` nodemon or add event actions to your `nodemon.json` file.\r\n\r\nFor example, to trigger a notification on a Mac when nodemon restarts, `nodemon.json` looks like this:\r\n\r\n```json\r\n{\r\n  \"events\": {\r\n    \"restart\": \"osascript -e 'display notification \\\"app restarted\\\" with title \\\"nodemon\\\"'\"\r\n  }\r\n}\r\n```\r\n\r\nA full list of available events is listed on the [event states wiki](https://github.com/remy/nodemon/wiki/Events#states). Note that you can bind to both states and messages.\r\n\r\n## Pipe output to somewhere else\r\n\r\n```js\r\nnodemon({\r\n  script: ...,\r\n  stdout: false // important: this tells nodemon not to output to console\r\n}).on('readable', function() { // the `readable` event indicates that data is ready to pick up\r\n  this.stdout.pipe(fs.createWriteStream('output.txt'));\r\n  this.stderr.pipe(fs.createWriteStream('err.txt'));\r\n});\r\n```\r\n\r\n## Using nodemon in your gulp workflow\r\n\r\nCheck out the [gulp-nodemon](https://github.com/JacksonGariety/gulp-nodemon) plugin to integrate nodemon with the rest of your project's gulp workflow.\r\n\r\n## Using nodemon in your Grunt workflow\r\n\r\nCheck out the [grunt-nodemon](https://github.com/ChrisWren/grunt-nodemon) plugin to integrate nodemon with the rest of your project's grunt workflow.\r\n\r\n## Pronunciation\r\n\r\n> nodemon, is it pronounced: node-mon, no-demon or node-e-mon (like pokémon)?\r\n\r\nWell...I've been asked this many times before. I like that I've been asked this before. There's been bets as to which one it actually is.\r\n\r\nThe answer is simple, but possibly frustrating. I'm not saying (how I pronounce it). It's up to you to call it as you like. All answers are correct :)\r\n\r\n## Design principles\r\n\r\n- Fewer flags is better\r\n- Works across all platforms\r\n- Fewer features\r\n- Let individuals build on top of nodemon\r\n- Offer all CLI functionality as an API\r\n- Contributions must have and pass tests\r\n\r\nNodemon is not perfect, and CLI arguments has sprawled beyond where I'm completely happy, but perhaps it can be reduced a little one day.\r\n\r\n## FAQ\r\n\r\nSee the [FAQ](https://github.com/remy/nodemon/blob/master/faq.md) and please add your own questions if you think they would help others.\r\n\r\n## Backers\r\n\r\nThank you to all [our backers](https://opencollective.com/nodemon#backer)! \uD83D\uDE4F\r\n\r\n[![nodemon backers](https://opencollective.com/nodemon/backers.svg?width=890)](https://opencollective.com/nodemon#backers)\r\n\r\n## Sponsors\r\n\r\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Sponsor this project today ❤\uFE0F](https://opencollective.com/nodemon#sponsor)\r\n\r\n<div style=\"overflow: hidden; margin-bottom: 80px;\"><!--oc--><a title='buy instagram followers on skweezer.net today' data-id='532050' data-tier='0' href='https://skweezer.net/buy-instagram-followers'><img alt='buy instagram followers on skweezer.net today' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/b0ddcb1b-9054-4220-8d72-05131b28a2bb/logo-skweezer-icon.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Netpositive' data-id='162674' data-tier='1' href='https://najlepsibukmacherzy.pl/ranking-legalnych-bukmacherow/'><img alt='Netpositive' src='https://opencollective-production.s3.us-west-1.amazonaws.com/52acecf0-608a-11eb-b17f-5bca7c67fe7b.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='KasynoHEX' data-id='177376' data-tier='1' href='https://polskiekasynohex.org/'><img alt='KasynoHEX' src='https://opencollective-production.s3.us-west-1.amazonaws.com/2bb0d6e0-99c8-11ea-9349-199aa0d5d24a.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Casinoonlineaams.com' data-id='198634' data-tier='1' href='https://www.casinoonlineaams.com'><img alt='Casinoonlineaams.com' src='https://opencollective-production.s3.us-west-1.amazonaws.com/61bcf1d0-43ce-11ed-b562-6bf567fce1fd.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Best Aussie casinos at aussielowdepositcasino.com' data-id='215800' data-tier='1' href='https://aussielowdepositcasino.com/'><img alt='Best Aussie casinos at aussielowdepositcasino.com' src='https://user-images.githubusercontent.com/13700/151881982-04677f3d-e2e1-44ee-a168-258b242b1ef4.svg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Best online casinos not on GamStop in the UK' data-id='243140' data-tier='1' href='https://casino-wise.com/'><img alt='Best online casinos not on GamStop in the UK' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/f889d209-a931-4c06-a529-fe1f86c411bf/casino-wise-logo.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='freebets.ltd.uk' data-id='269861' data-tier='1' href='https://freebets.ltd.uk/'><img alt='freebets.ltd.uk' src='https://logo.clearbit.com/freebets.ltd.uk' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='TheCasinoDB' data-id='270835' data-tier='1' href='https://www.thecasinodb.com'><img alt='TheCasinoDB' src='https://logo.clearbit.com/thecasinodb.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Marketing' data-id='285700' data-tier='1' href='https://www.casinoutansvenskalicensen.se/'><img alt='Marketing' src='https://opencollective-production.s3.us-west-1.amazonaws.com/ed105cb0-b01f-11ec-935f-77c14be20a90.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Rating of best betting sites in Australia' data-id='303335' data-tier='1' href='https://hellsbet.com/en-au/'><img alt='Rating of best betting sites in Australia' src='https://opencollective-production.s3.us-west-1.amazonaws.com/aeb99e10-d1ec-11ec-88be-f9a15ca9f6f8.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='inkedin' data-id='305884' data-tier='1' href='https://inkedin.com'><img alt='inkedin' src='https://logo.clearbit.com/inkedin.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='AU Internet Pokies' data-id='318650' data-tier='1' href='http://www.australiainternetpokies.com/'><img alt='AU Internet Pokies' src='https://opencollective-production.s3.us-west-1.amazonaws.com/44dc83f0-4315-11ed-9bf2-cf65326f4741.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='CasinoAus' data-id='318653' data-tier='1' href='https://www.casinoaus.net/'><img alt='CasinoAus' src='https://opencollective-production.s3.us-west-1.amazonaws.com/1e556300-4315-11ed-b96e-8dce3aa4cf2e.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='AU Online Casinos' data-id='318656' data-tier='1' href='https://www.australiaonlinecasinosites.com/'><img alt='AU Online Casinos' src='https://opencollective-production.s3.us-west-1.amazonaws.com/f3aa3b60-2219-11ed-b2b0-83767ea0d654.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Top Australian Gambling' data-id='318659' data-tier='1' href='https://www.topaustraliangambling.com/'><img alt='Top Australian Gambling' src='https://opencollective-production.s3.us-west-1.amazonaws.com/d7687f70-2219-11ed-a0b5-97427086b4aa.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='casino online stranieri' data-id='319480' data-tier='1' href='https://www.casinostranieri.net/'><img alt='casino online stranieri' src='https://opencollective-production.s3.us-west-1.amazonaws.com/7aae8900-0c02-11ed-9aa8-2bd811fd6f10.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Goread.io' data-id='320564' data-tier='1' href='https://goread.io/buy-instagram-followers'><img alt='Goread.io' src='https://opencollective-production.s3.us-west-1.amazonaws.com/7d1302a0-0f33-11ed-a094-3dca78aec7cd.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='We are the most advanced casino guide!' data-id='321121' data-tier='1' href='https://www.sure.bet/casinos-not-on-gamstop/'><img alt='We are the most advanced casino guide!' src='https://logo.clearbit.com/sure.bet' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Best Australian online casinos. Reviewed by Correct Casinos.' data-id='322445' data-tier='1' href='https://www.correctcasinos.com/australian-online-casinos/'><img alt='Best Australian online casinos. Reviewed by Correct Casinos.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/fef95200-1551-11ed-ba3f-410c614877c8.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Casino utan svensk licens' data-id='326858' data-tier='1' href='https://casinoburst.com/casino-utan-licens/'><img alt='Casino utan svensk licens' src='https://opencollective-production.s3.us-west-1.amazonaws.com/ac61d790-1d3c-11ed-b8db-7b79b65b0dbb.PNG' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='' data-id='326865' data-tier='1' href='https://www.uudetkasinot.com'><img alt='' src='https://opencollective-production.s3.us-west-1.amazonaws.com/b6055950-df00-11eb-9caa-b58f40adecd5.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Do My Online Class - NoNeedToStudy.com' data-id='327241' data-tier='1' href='https://www.noneedtostudy.com/take-my-online-class/'><img alt='Do My Online Class - NoNeedToStudy.com' src='https://user-images.githubusercontent.com/13700/187039696-e2d8cd59-8b4e-438f-a052-69095212427d.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Slotmachineweb.com' data-id='329195' data-tier='1' href='https://www.slotmachineweb.com/'><img alt='Slotmachineweb.com' src='https://opencollective-production.s3.us-west-1.amazonaws.com/172f9eb0-22c2-11ed-a0b5-97427086b4aa.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Website dedicated to finding the best and safest licensed online casinos in India' data-id='342390' data-tier='1' href='https://www.ghotala.com/'><img alt='Website dedicated to finding the best and safest licensed online casinos in India' src='https://opencollective-production.s3.us-west-1.amazonaws.com/75afa9e0-4ac6-11ed-8d6a-fdcc8c0d0736.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='CasinoWizard' data-id='344102' data-tier='1' href='https://thecasinowizard.com/'><img alt='CasinoWizard' src='https://opencollective-production.s3.us-west-1.amazonaws.com/28b8d230-b9ab-11ec-8254-6d6dbd89fb51.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Scommesseseriea.eu' data-id='353466' data-tier='1' href='https://www.scommesseseriea.eu/'><img alt='Scommesseseriea.eu' src='https://opencollective-production.s3.us-west-1.amazonaws.com/31600a10-4df4-11ed-a07e-95365d1687ba.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Gambe Online AU' data-id='356565' data-tier='1' href='https://www.gambleonlineaustralia.com/'><img alt='Gambe Online AU' src='https://opencollective-production.s3.us-west-1.amazonaws.com/a70354f0-337f-11ed-a5da-ebb8fe99a73a.JPG' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Gamble Online' data-id='356566' data-tier='1' href='https://www.gambleonline.co'><img alt='Gamble Online' src='https://opencollective-production.s3.us-west-1.amazonaws.com/af336e80-337f-11ed-a5da-ebb8fe99a73a.JPG' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Italianonlinecasino.net' data-id='362210' data-tier='1' href='https://www2.italianonlinecasino.net/'><img alt='Italianonlinecasino.net' src='https://opencollective-production.s3.us-west-1.amazonaws.com/2e8dbbb0-22bc-11ed-b874-23b20736a51e.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='nongamstopcasinos.net' data-id='367236' data-tier='1' href='https://nongamstopcasinos.net/gb/'><img alt='nongamstopcasinos.net' src='https://opencollective-production.s3.us-west-1.amazonaws.com/fb8b5ba0-3904-11ed-8516-edd7b7687a36.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Scommesse777' data-id='370216' data-tier='1' href='https://www.scommesse777.com/'><img alt='Scommesse777' src='https://opencollective-production.s3.us-west-1.amazonaws.com/c0346cb0-7ad4-11ed-a9cf-49dc3536976e.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Twicsy' data-id='371088' data-tier='1' href='https://twicsy.com/buy-instagram-likes'><img alt='Twicsy' src='https://opencollective-production.s3.us-west-1.amazonaws.com/19bb95b0-7be3-11ed-8734-4d07568f9c95.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='At Casinoaustraliaonline.com, we review, compare and list all the best gambling sites for Aussies.\r\n' data-id='380510' data-tier='1' href='https://www.casinoaustraliaonline.com/under-1-hour-withdrawal-casinos/'><img alt='At Casinoaustraliaonline.com, we review, compare and list all the best gambling sites for Aussies.\r\n' src='https://opencollective-production.s3.us-west-1.amazonaws.com/7c3d81f0-8cad-11ed-b048-95ec46716b47.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Casinon utan svensk licens erbjuder generösa bonusar och kampanjer. Besök coolspins.net för att utforska säkra och pålitliga alternativ.' data-id='404959' data-tier='1' href='https://coolspins.net/'><img alt='Casinon utan svensk licens erbjuder generösa bonusar och kampanjer. Besök coolspins.net för att utforska säkra och pålitliga alternativ.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/3a988fb2-66a3-43f9-a0d1-65950128c68d/casino-utan-svensk-licens-open-collective.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='BestUSCasinos' data-id='409421' data-tier='1' href='https://bestuscasinos.org'><img alt='BestUSCasinos' src='https://logo.clearbit.com/bestuscasinos.org' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='TightPoker' data-id='410184' data-tier='1' href='https://www.tightpoker.com/'><img alt='TightPoker' src='https://logo.clearbit.com/tightpoker.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Buy Instagram Likes' data-id='411448' data-tier='1' href='https://poprey.com/'><img alt='Buy Instagram Likes' src='https://opencollective-production.s3.us-west-1.amazonaws.com/fe650970-c21c-11ec-a499-b55e54a794b4.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Find the best casinos online. Casinot.biz lists and reviews online casinos. ' data-id='417601' data-tier='1' href='https://www.casinot.biz/'><img alt='Find the best casinos online. Casinot.biz lists and reviews online casinos. ' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/366e3423-81af-484a-b9f8-eebe04224407/casinot-biz-icon.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='btcgaming' data-id='419934' data-tier='1' href='https://bitcoinist.com/best-real-money-online-slots-play-slots-for-real-money/'><img alt='btcgaming' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/3ecded2c-a7c2-4291-b9ef-7db1f0128207/btcgaming.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Norway&apos;s biggest and most reliable online casino portal' data-id='422431' data-tier='1' href='https://www.nettcasino.com/'><img alt='Norway&apos;s biggest and most reliable online casino portal' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/5d739e1a-7813-489e-ab82-697daff8bf12/nettcasino.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='OnlineCasinosSpelen' data-id='423738' data-tier='1' href='https://onlinecasinosspelen.com'><img alt='OnlineCasinosSpelen' src='https://logo.clearbit.com/onlinecasinosspelen.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Beoordelen van nieuwe online casino&apos;s 2023' data-id='424449' data-tier='1' href='https://Nieuwe-Casinos.net'><img alt='Beoordelen van nieuwe online casino&apos;s 2023' src='https://logo.clearbit.com/Nieuwe-Casinos.net' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='CasinoZonderRegistratie.net - Nederlandse Top Casino&apos;s' data-id='424450' data-tier='1' href='https://casinoZonderregistratie.net/'><img alt='CasinoZonderRegistratie.net - Nederlandse Top Casino&apos;s' src='https://opencollective-production.s3.us-west-1.amazonaws.com/aeb624c0-7ae7-11ed-8d0e-bda59436695a.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='OSLabs is a nonprofit tech accelerator devoted to furthering high-impact open source software within a collaborative community of dedicated engineers and mentors' data-id='427226' data-tier='1' href='https://opensourcelabs.io'><img alt='OSLabs is a nonprofit tech accelerator devoted to furthering high-impact open source software within a collaborative community of dedicated engineers and mentors' src='https://opencollective-production.s3.us-west-1.amazonaws.com/dc95aaa0-823f-11ed-a97d-09a08de033e1.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Ilmaiset Pitkävetovihjeet ' data-id='430701' data-tier='1' href='https://www.vedonlyontibonukset.com/pitkavetovihjeet'><img alt='Ilmaiset Pitkävetovihjeet ' src='https://logo.clearbit.com/vedonlyontibonukset.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='NyeCasino.me is a website that lists the newest and best online casinos in Norway' data-id='432409' data-tier='1' href='https://www.nyecasino.me/'><img alt='NyeCasino.me is a website that lists the newest and best online casinos in Norway' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/20b616d7-bb05-4605-9904-6610a5d1e248/nyecasino200.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Famoid is a digital marketing agency that specializes in social media services and tools.' data-id='434604' data-tier='1' href='https://famoid.com/'><img alt='Famoid is a digital marketing agency that specializes in social media services and tools.' src='https://logo.clearbit.com/famoid.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='LookSlots' data-id='441291' data-tier='1' href='https://www.outlookindia.com/outlook-spotlight/slots-not-on-gamstop-new-non-gamstop-casinos-uk-news-284058'><img alt='LookSlots' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/d4c16601-f183-4239-9df6-eb2ade7a36f3/slots%20not%20on%20gamstop%20-%20non%20gamstop%20casinos.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Gives a fun for our users' data-id='443264' data-tier='1' href='https://slotoking.ua/games/'><img alt='Gives a fun for our users' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/94601d07-3205-4c60-9c2d-9b8194dbefb7/skg-blue.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='We are the leading Nearshore Technology Solutions company. We architect and engineer scalable and high-performing software solutions.' data-id='452424' data-tier='1' href='https://www.bairesdev.com/sponsoring-open-source-projects/'><img alt='We are the leading Nearshore Technology Solutions company. We architect and engineer scalable and high-performing software solutions.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/dc38bc3b-7430-4cf7-9b77-36467eb92915/logo8.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Buy real Instagram followers from Twicsy starting at only $2.97. Twicsy has been voted the best site to buy followers from the likes of US Magazine.' data-id='453050' data-tier='1' href='https://twicsy.com/buy-instagram-followers'><img alt='Buy real Instagram followers from Twicsy starting at only $2.97. Twicsy has been voted the best site to buy followers from the likes of US Magazine.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/eb3228cb-9810-42b0-9758-2a7aad5633ef/Screen%20Shot%202023-07-06%20at%209.08.54%20PM.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='SocialWick offers the best Instagram Followers in the market. If you are looking to boost your organic growth, buy Instagram followers from SocialWick' data-id='462750' data-tier='1' href='https://www.socialwick.com/instagram/followers'><img alt='SocialWick offers the best Instagram Followers in the market. If you are looking to boost your organic growth, buy Instagram followers from SocialWick' src='https://logo.clearbit.com/socialwick.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Online United States Casinos' data-id='466446' data-tier='1' href='https://www.onlineunitedstatescasinos.com/'><img alt='Online United States Casinos' src='https://logo.clearbit.com/onlineunitedstatescasinos.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='https://bestnongamstopcasinos.net' data-id='468969' data-tier='1' href='https://bestnongamstopcasinos.net/'><img alt='https://bestnongamstopcasinos.net' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/1aec3bc6-2527-4a36-9c40-c2283454be76/cropped-logo1%20%281%29.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Aviators' data-id='471843' data-tier='1' href='https://aviators.com.br'><img alt='Aviators' src='https://github-production-user-asset-6210df.s3.amazonaws.com/13700/277616726-33b554c8-24e0-4570-b8ed-293fb2ab2448.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Online iGaming platform with reliable and trusted reviews.' data-id='473786' data-tier='1' href='https://onlinecasinohex.ph/'><img alt='Online iGaming platform with reliable and trusted reviews.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/b19cbf10-3a5e-11ed-9713-c7c7fc5beda8.svg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='$1 deposit casino' data-id='480605' data-tier='1' href='https://slotcasinocanada.ca/casinos/casino-1-dollar/'><img alt='$1 deposit casino' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/3df9dabb-86ff-4f2e-8edd-f195b55a8555/scc%20logo_600x600.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Online Casinos Australia' data-id='Online Casinos Australia' data-tier='1' href='https://online-casinosaustralia.com/'><img alt='Online Casinos Australia' src='https://github-production-user-asset-6210df.s3.amazonaws.com/13700/268531585-c2b4e482-0409-4664-9aa2-95a62b0d606d.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Looking to boost your YouTube channel? Buy YouTube subscribers with Views4You and watch your audience grow!' data-id='493616' data-tier='1' href='https://views4you.com/buy-youtube-subscribers/'><img alt='Looking to boost your YouTube channel? Buy YouTube subscribers with Views4You and watch your audience grow!' src='https://logo.clearbit.com/views4you.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='casinosonlineaus' data-id='495874' data-tier='1' href='https://casinosonlineaus.com/'><img alt='casinosonlineaus' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/7fb69094-c265-4275-b295-faf6cc0c5372/imgonline-com-ua-Resize-YkHndKrIwMdOKZAz.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Verified reviews of the most reputable Canadian online casinos at leafletcasino.com' data-id='499738' data-tier='1' href='https://leafletcasino.com/'><img alt='Verified reviews of the most reputable Canadian online casinos at leafletcasino.com' src='https://opencollective-production.s3.us-west-1.amazonaws.com/4f4c1b90-6183-11eb-8d33-bbbffb3655c5.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Buy Telegram Members' data-id='501897' data-tier='1' href='https://buycheapestfollowers.com/buy-telegram-channel-members'><img alt='Buy Telegram Members' src='https://github-production-user-asset-6210df.s3.amazonaws.com/13700/286696172-747dca05-a1e8-4d93-a9e9-95054d1566df.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Najděte nejlepší online casino v České republice' data-id='504161' data-tier='1' href='https://kasinoceske.com'><img alt='Najděte nejlepší online casino v České republice' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/e6056d09-1db2-4fde-ae54-4cee5d99f32e/CZ.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='We review the entire iGaming industry from A to Z' data-id='504258' data-tier='1' href='https://casinolandia.com'><img alt='We review the entire iGaming industry from A to Z' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/5f858add-77f1-47a2-b577-39eecb299c8c/Logo264.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Helping Swedes finding safe unlicensed casinos' data-id='506063' data-tier='1' href='https://casino-utan-svensk-licens.com/'><img alt='Helping Swedes finding safe unlicensed casinos' src='https://logo.clearbit.com/casino-utan-svensk-licens.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='free spins no deposit' data-id='slotozilla' data-tier='1' href='https://www.slotozilla.com/au/free-spins'><img alt='free spins no deposit' src='https://github-production-user-asset-6210df.s3.amazonaws.com/13700/286693953-c68112b6-ebe6-49fd-af6a-5c810a54908d.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='I migliori casinò online dagli esperti di SitiCasinoNonAAMS' data-id='508821' data-tier='1' href='https://siticasinononaams.com'><img alt='I migliori casinò online dagli esperti di SitiCasinoNonAAMS' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/857cd395-3d43-425e-979f-970e44159b6f/SitiCasino.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Best Australian Online Casinos in 2024' data-id='508822' data-tier='1' href='https://aussiecasinoreviewer.com/'><img alt='Best Australian Online Casinos in 2024' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/6ffb5045-e33e-4314-a891-5286fa4a220f/Aussiecasinoreviewer%20logo%20(2)%20(2).jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='MEGAFAMOUS.com' data-id='509686' data-tier='1' href='https://megafamous.com/buy-automatic-instagram-likes'><img alt='MEGAFAMOUS.com' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/c0af8a5d-8fe7-4925-b357-cee797841913/MEGAFAMOUS%20Instagram%20Likes%20.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='PopularityBazaar helps you quickly grow your social media accounts. Buy 100% real likes, followers, views, comments, and more to kickstart your online presence.' data-id='509894' data-tier='1' href='https://popularitybazaar.com/instagram-likes/'><img alt='PopularityBazaar helps you quickly grow your social media accounts. Buy 100% real likes, followers, views, comments, and more to kickstart your online presence.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/a2878e26-3710-453f-9a41-80eeee60a2cc/Group%201.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Non-GamStop NonStop Casino' data-id='510457' data-tier='1' href='https://uk.nonstopcasino.org/non-gamstop-casinos/'><img alt='Non-GamStop NonStop Casino' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/0330c03a-71ea-477c-a4d8-7eb4795d6120/non-stop-casino.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='philippinescasinos.ph' data-id='512007' data-tier='1' href='https://philippinescasinos.ph/gcash/'><img alt='philippinescasinos.ph' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/b758f1b0-3211-464b-a19e-95e2a5f4fa22/PhilippinesCasinos%20bigger.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Incognito' data-id='512350' data-tier='1' href='https://www.outlookindia.com/outlook-spotlight/casinos-not-on-gamstop-uk-news-302214'><img alt='Incognito' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/fdf584c2-defe-4025-ab26-15e5c5ff607e/Non%20gamstop%20casino%20Outlookindia.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='NonGamStopBets Casinos not on GamStop' data-id='515480' data-tier='1' href='https://www.nongamstopbets.com/casinos-not-on-gamstop/'><img alt='NonGamStopBets Casinos not on GamStop' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/6c22601d-6a3f-4370-91dd-a9797887372a/nongamstopbets.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Buy real Instagram followers from Stormlikes starting at only $2.97. Stormlikes has been voted the best site to buy followers from the likes of US Magazine.' data-id='517208' data-tier='1' href='https://www.stormlikes.net/buy-instagram-followers'><img alt='Buy real Instagram followers from Stormlikes starting at only $2.97. Stormlikes has been voted the best site to buy followers from the likes of US Magazine.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/07524c4d-d44f-4120-8693-30fcaa795b2b/Stormlikes%20Black%20Logo%202400x1800.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='UpGrow is the Best Instagram Growth Service in 2024. Get more real Instagram followers with our AI-powered growth engine to get 10x faster results. ' data-id='519002' data-tier='1' href='https://www.upgrow.com/'><img alt='UpGrow is the Best Instagram Growth Service in 2024. Get more real Instagram followers with our AI-powered growth engine to get 10x faster results. ' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/63ab7268-5ce4-4e61-b9f1-93a1bd89cd3e/ms-icon-310x310.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Reviewing companies in high-risk industries like online casinos, forex brokers and crypto exchanges' data-id='519124' data-tier='1' href='https://deposit-withdraw.com/'><img alt='Reviewing companies in high-risk industries like online casinos, forex brokers and crypto exchanges' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/eb624c1e-a378-453f-9012-4f1713fff130/deposit-withdraw-logo.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='' data-id='522907' data-tier='1' href='https://justuk.club/'><img alt='' src='https://opencollective-production.s3.us-west-1.amazonaws.com/322d0540-7b1e-11ed-8258-2f5cf1347fab.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Analysis of payment methods for use in the iGaming' data-id='524205' data-tier='1' href='https://payidpokies.net/'><img alt='Analysis of payment methods for use in the iGaming' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/75b4e83e-ae6a-4e65-b2aa-a67d7daec775/PayIDPokies-com.webp' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='30 Best Casinos Not on Gamstop in 2024' data-id='525119' data-tier='1' href='https://finance.yahoo.com/news/30-best-casinos-not-gamstop-091943696.html'><img alt='30 Best Casinos Not on Gamstop in 2024' src='https://github.com/remy/nodemon/assets/13700/820935c0-7844-4ba9-9563-b1c559895c38' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>\r\n<a title='Twitter Video Downloader HD Tool allows you to store tweets on your device (mobile or PC) for free.' data-id='525434' data-tier='1' href='https://ssstwitter.online/'><img alt='Twitter Video Downloader HD Tool allows you to store tweets on your device (mobile or PC) for free.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/ba0d1daf-a894-4d98-95f7-a44d321364b3/Screenshot%202024-01-16%20at%2011.43.22.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><!--oc-->\r\n</div>\r\n\r\nPlease note that links to the sponsors above are not direct endorsements nor affiliated with any of contributors of the nodemon project.\r\n\r\n# License\r\n\r\nMIT [http://rem.mit-license.org](http://rem.mit-license.org)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/nodemon/README.md b/node_modules/nodemon/README.md
--- a/node_modules/nodemon/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/nodemon/README.md	(date 1753913035605)
@@ -264,8 +264,9 @@
 Your application can handle the signal as follows.
 
 ```js
-process.once("SIGHUP", function () {
+process.on("SIGHUP", function () {
   reloadSomeConfiguration();
+  process.kill(process.pid, "SIGTERM");
 })
 ```
 
@@ -292,9 +293,10 @@
 The following example will listen once for the `SIGUSR2` signal (used by nodemon to restart), run the clean up process and then kill itself for nodemon to continue control:
 
 ```js
-process.once('SIGUSR2', function () {
+// important to use `on` and not `once` as nodemon can re-send the kill signal
+process.on('SIGUSR2', function () {
   gracefulShutdown(function () {
-    process.kill(process.pid, 'SIGUSR2');
+    process.kill(process.pid, 'SIGTERM');
   });
 });
 ```
@@ -372,87 +374,64 @@
 
 <div style="overflow: hidden; margin-bottom: 80px;"><!--oc--><a title='buy instagram followers on skweezer.net today' data-id='532050' data-tier='0' href='https://skweezer.net/buy-instagram-followers'><img alt='buy instagram followers on skweezer.net today' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/b0ddcb1b-9054-4220-8d72-05131b28a2bb/logo-skweezer-icon.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='Netpositive' data-id='162674' data-tier='1' href='https://najlepsibukmacherzy.pl/ranking-legalnych-bukmacherow/'><img alt='Netpositive' src='https://opencollective-production.s3.us-west-1.amazonaws.com/52acecf0-608a-11eb-b17f-5bca7c67fe7b.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='KasynoHEX' data-id='177376' data-tier='1' href='https://polskiekasynohex.org/'><img alt='KasynoHEX' src='https://opencollective-production.s3.us-west-1.amazonaws.com/2bb0d6e0-99c8-11ea-9349-199aa0d5d24a.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Casinoonlineaams.com' data-id='198634' data-tier='1' href='https://www.casinoonlineaams.com'><img alt='Casinoonlineaams.com' src='https://opencollective-production.s3.us-west-1.amazonaws.com/61bcf1d0-43ce-11ed-b562-6bf567fce1fd.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Best Aussie casinos at aussielowdepositcasino.com' data-id='215800' data-tier='1' href='https://aussielowdepositcasino.com/'><img alt='Best Aussie casinos at aussielowdepositcasino.com' src='https://user-images.githubusercontent.com/13700/151881982-04677f3d-e2e1-44ee-a168-258b242b1ef4.svg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='KasynoHEX' data-id='177376' data-tier='1' href='https://pl.polskiekasynohex.org/'><img alt='KasynoHEX' src='https://opencollective-production.s3.us-west-1.amazonaws.com/2bb0d6e0-99c8-11ea-9349-199aa0d5d24a.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='Best online casinos not on GamStop in the UK' data-id='243140' data-tier='1' href='https://casino-wise.com/'><img alt='Best online casinos not on GamStop in the UK' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/f889d209-a931-4c06-a529-fe1f86c411bf/casino-wise-logo.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='freebets.ltd.uk' data-id='269861' data-tier='1' href='https://freebets.ltd.uk/'><img alt='freebets.ltd.uk' src='https://logo.clearbit.com/freebets.ltd.uk' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='TheCasinoDB' data-id='270835' data-tier='1' href='https://www.thecasinodb.com'><img alt='TheCasinoDB' src='https://logo.clearbit.com/thecasinodb.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Marketing' data-id='285700' data-tier='1' href='https://www.casinoutansvenskalicensen.se/'><img alt='Marketing' src='https://opencollective-production.s3.us-west-1.amazonaws.com/ed105cb0-b01f-11ec-935f-77c14be20a90.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Rating of best betting sites in Australia' data-id='303335' data-tier='1' href='https://hellsbet.com/en-au/'><img alt='Rating of best betting sites in Australia' src='https://opencollective-production.s3.us-west-1.amazonaws.com/aeb99e10-d1ec-11ec-88be-f9a15ca9f6f8.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='inkedin' data-id='305884' data-tier='1' href='https://inkedin.com'><img alt='inkedin' src='https://logo.clearbit.com/inkedin.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='AU Internet Pokies' data-id='318650' data-tier='1' href='http://www.australiainternetpokies.com/'><img alt='AU Internet Pokies' src='https://opencollective-production.s3.us-west-1.amazonaws.com/44dc83f0-4315-11ed-9bf2-cf65326f4741.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='CasinoAus' data-id='318653' data-tier='1' href='https://www.casinoaus.net/'><img alt='CasinoAus' src='https://opencollective-production.s3.us-west-1.amazonaws.com/1e556300-4315-11ed-b96e-8dce3aa4cf2e.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='AU Online Casinos' data-id='318656' data-tier='1' href='https://www.australiaonlinecasinosites.com/'><img alt='AU Online Casinos' src='https://opencollective-production.s3.us-west-1.amazonaws.com/f3aa3b60-2219-11ed-b2b0-83767ea0d654.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Top Australian Gambling' data-id='318659' data-tier='1' href='https://www.topaustraliangambling.com/'><img alt='Top Australian Gambling' src='https://opencollective-production.s3.us-west-1.amazonaws.com/d7687f70-2219-11ed-a0b5-97427086b4aa.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='casino online stranieri' data-id='319480' data-tier='1' href='https://www.casinostranieri.net/'><img alt='casino online stranieri' src='https://opencollective-production.s3.us-west-1.amazonaws.com/7aae8900-0c02-11ed-9aa8-2bd811fd6f10.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='Goread.io' data-id='320564' data-tier='1' href='https://goread.io/buy-instagram-followers'><img alt='Goread.io' src='https://opencollective-production.s3.us-west-1.amazonaws.com/7d1302a0-0f33-11ed-a094-3dca78aec7cd.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='We are the most advanced casino guide!' data-id='321121' data-tier='1' href='https://www.sure.bet/casinos-not-on-gamstop/'><img alt='We are the most advanced casino guide!' src='https://logo.clearbit.com/sure.bet' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='Best Australian online casinos. Reviewed by Correct Casinos.' data-id='322445' data-tier='1' href='https://www.correctcasinos.com/australian-online-casinos/'><img alt='Best Australian online casinos. Reviewed by Correct Casinos.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/fef95200-1551-11ed-ba3f-410c614877c8.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Casino utan svensk licens' data-id='326858' data-tier='1' href='https://casinoburst.com/casino-utan-licens/'><img alt='Casino utan svensk licens' src='https://opencollective-production.s3.us-west-1.amazonaws.com/ac61d790-1d3c-11ed-b8db-7b79b65b0dbb.PNG' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='' data-id='326865' data-tier='1' href='https://www.uudetkasinot.com'><img alt='' src='https://opencollective-production.s3.us-west-1.amazonaws.com/b6055950-df00-11eb-9caa-b58f40adecd5.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Do My Online Class - NoNeedToStudy.com' data-id='327241' data-tier='1' href='https://www.noneedtostudy.com/take-my-online-class/'><img alt='Do My Online Class - NoNeedToStudy.com' src='https://user-images.githubusercontent.com/13700/187039696-e2d8cd59-8b4e-438f-a052-69095212427d.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='Slotmachineweb.com' data-id='329195' data-tier='1' href='https://www.slotmachineweb.com/'><img alt='Slotmachineweb.com' src='https://opencollective-production.s3.us-west-1.amazonaws.com/172f9eb0-22c2-11ed-a0b5-97427086b4aa.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='Website dedicated to finding the best and safest licensed online casinos in India' data-id='342390' data-tier='1' href='https://www.ghotala.com/'><img alt='Website dedicated to finding the best and safest licensed online casinos in India' src='https://opencollective-production.s3.us-west-1.amazonaws.com/75afa9e0-4ac6-11ed-8d6a-fdcc8c0d0736.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='CasinoWizard' data-id='344102' data-tier='1' href='https://thecasinowizard.com/'><img alt='CasinoWizard' src='https://opencollective-production.s3.us-west-1.amazonaws.com/28b8d230-b9ab-11ec-8254-6d6dbd89fb51.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Scommesseseriea.eu' data-id='353466' data-tier='1' href='https://www.scommesseseriea.eu/'><img alt='Scommesseseriea.eu' src='https://opencollective-production.s3.us-west-1.amazonaws.com/31600a10-4df4-11ed-a07e-95365d1687ba.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Gambe Online AU' data-id='356565' data-tier='1' href='https://www.gambleonlineaustralia.com/'><img alt='Gambe Online AU' src='https://opencollective-production.s3.us-west-1.amazonaws.com/a70354f0-337f-11ed-a5da-ebb8fe99a73a.JPG' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Gamble Online' data-id='356566' data-tier='1' href='https://www.gambleonline.co'><img alt='Gamble Online' src='https://opencollective-production.s3.us-west-1.amazonaws.com/af336e80-337f-11ed-a5da-ebb8fe99a73a.JPG' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Italianonlinecasino.net' data-id='362210' data-tier='1' href='https://www2.italianonlinecasino.net/'><img alt='Italianonlinecasino.net' src='https://opencollective-production.s3.us-west-1.amazonaws.com/2e8dbbb0-22bc-11ed-b874-23b20736a51e.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='nongamstopcasinos.net' data-id='367236' data-tier='1' href='https://nongamstopcasinos.net/gb/'><img alt='nongamstopcasinos.net' src='https://opencollective-production.s3.us-west-1.amazonaws.com/fb8b5ba0-3904-11ed-8516-edd7b7687a36.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='nongamstopcasinos.net' data-id='367236' data-tier='1' href='https://www.pieria.co.uk/'><img alt='nongamstopcasinos.net' src='https://opencollective-production.s3.us-west-1.amazonaws.com/fb8b5ba0-3904-11ed-8516-edd7b7687a36.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='Scommesse777' data-id='370216' data-tier='1' href='https://www.scommesse777.com/'><img alt='Scommesse777' src='https://opencollective-production.s3.us-west-1.amazonaws.com/c0346cb0-7ad4-11ed-a9cf-49dc3536976e.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Twicsy' data-id='371088' data-tier='1' href='https://twicsy.com/buy-instagram-likes'><img alt='Twicsy' src='https://opencollective-production.s3.us-west-1.amazonaws.com/19bb95b0-7be3-11ed-8734-4d07568f9c95.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='At Casinoaustraliaonline.com, we review, compare and list all the best gambling sites for Aussies.
-' data-id='380510' data-tier='1' href='https://www.casinoaustraliaonline.com/under-1-hour-withdrawal-casinos/'><img alt='At Casinoaustraliaonline.com, we review, compare and list all the best gambling sites for Aussies.
-' src='https://opencollective-production.s3.us-west-1.amazonaws.com/7c3d81f0-8cad-11ed-b048-95ec46716b47.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Casinon utan svensk licens erbjuder generösa bonusar och kampanjer. Besök coolspins.net för att utforska säkra och pålitliga alternativ.' data-id='404959' data-tier='1' href='https://coolspins.net/'><img alt='Casinon utan svensk licens erbjuder generösa bonusar och kampanjer. Besök coolspins.net för att utforska säkra och pålitliga alternativ.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/3a988fb2-66a3-43f9-a0d1-65950128c68d/casino-utan-svensk-licens-open-collective.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='BestUSCasinos' data-id='409421' data-tier='1' href='https://bestuscasinos.org'><img alt='BestUSCasinos' src='https://logo.clearbit.com/bestuscasinos.org' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='TightPoker' data-id='410184' data-tier='1' href='https://www.tightpoker.com/'><img alt='TightPoker' src='https://logo.clearbit.com/tightpoker.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='Buy Instagram Likes' data-id='411448' data-tier='1' href='https://poprey.com/'><img alt='Buy Instagram Likes' src='https://opencollective-production.s3.us-west-1.amazonaws.com/fe650970-c21c-11ec-a499-b55e54a794b4.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Find the best casinos online. Casinot.biz lists and reviews online casinos. ' data-id='417601' data-tier='1' href='https://www.casinot.biz/'><img alt='Find the best casinos online. Casinot.biz lists and reviews online casinos. ' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/366e3423-81af-484a-b9f8-eebe04224407/casinot-biz-icon.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='btcgaming' data-id='419934' data-tier='1' href='https://bitcoinist.com/best-real-money-online-slots-play-slots-for-real-money/'><img alt='btcgaming' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/3ecded2c-a7c2-4291-b9ef-7db1f0128207/btcgaming.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Norway&apos;s biggest and most reliable online casino portal' data-id='422431' data-tier='1' href='https://www.nettcasino.com/'><img alt='Norway&apos;s biggest and most reliable online casino portal' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/5d739e1a-7813-489e-ab82-697daff8bf12/nettcasino.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='OnlineCasinosSpelen' data-id='423738' data-tier='1' href='https://onlinecasinosspelen.com'><img alt='OnlineCasinosSpelen' src='https://logo.clearbit.com/onlinecasinosspelen.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='Beoordelen van nieuwe online casino&apos;s 2023' data-id='424449' data-tier='1' href='https://Nieuwe-Casinos.net'><img alt='Beoordelen van nieuwe online casino&apos;s 2023' src='https://logo.clearbit.com/Nieuwe-Casinos.net' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='CasinoZonderRegistratie.net - Nederlandse Top Casino&apos;s' data-id='424450' data-tier='1' href='https://casinoZonderregistratie.net/'><img alt='CasinoZonderRegistratie.net - Nederlandse Top Casino&apos;s' src='https://opencollective-production.s3.us-west-1.amazonaws.com/aeb624c0-7ae7-11ed-8d0e-bda59436695a.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='OSLabs is a nonprofit tech accelerator devoted to furthering high-impact open source software within a collaborative community of dedicated engineers and mentors' data-id='427226' data-tier='1' href='https://opensourcelabs.io'><img alt='OSLabs is a nonprofit tech accelerator devoted to furthering high-impact open source software within a collaborative community of dedicated engineers and mentors' src='https://opencollective-production.s3.us-west-1.amazonaws.com/dc95aaa0-823f-11ed-a97d-09a08de033e1.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Ilmaiset Pitkävetovihjeet ' data-id='430701' data-tier='1' href='https://www.vedonlyontibonukset.com/pitkavetovihjeet'><img alt='Ilmaiset Pitkävetovihjeet ' src='https://logo.clearbit.com/vedonlyontibonukset.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='NyeCasino.me is a website that lists the newest and best online casinos in Norway' data-id='432409' data-tier='1' href='https://www.nyecasino.me/'><img alt='NyeCasino.me is a website that lists the newest and best online casinos in Norway' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/20b616d7-bb05-4605-9904-6610a5d1e248/nyecasino200.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='Famoid is a digital marketing agency that specializes in social media services and tools.' data-id='434604' data-tier='1' href='https://famoid.com/'><img alt='Famoid is a digital marketing agency that specializes in social media services and tools.' src='https://logo.clearbit.com/famoid.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='LookSlots' data-id='441291' data-tier='1' href='https://www.outlookindia.com/outlook-spotlight/slots-not-on-gamstop-new-non-gamstop-casinos-uk-news-284058'><img alt='LookSlots' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/d4c16601-f183-4239-9df6-eb2ade7a36f3/slots%20not%20on%20gamstop%20-%20non%20gamstop%20casinos.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Gives a fun for our users' data-id='443264' data-tier='1' href='https://slotoking.ua/games/'><img alt='Gives a fun for our users' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/94601d07-3205-4c60-9c2d-9b8194dbefb7/skg-blue.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='ігрові автомати беткінг' data-id='443264' data-tier='1' href='https://betking.com.ua/games/all-slots/'><img alt='ігрові автомати беткінг' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/94601d07-3205-4c60-9c2d-9b8194dbefb7/skg-blue.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='We are the leading Nearshore Technology Solutions company. We architect and engineer scalable and high-performing software solutions.' data-id='452424' data-tier='1' href='https://www.bairesdev.com/sponsoring-open-source-projects/'><img alt='We are the leading Nearshore Technology Solutions company. We architect and engineer scalable and high-performing software solutions.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/dc38bc3b-7430-4cf7-9b77-36467eb92915/logo8.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Buy real Instagram followers from Twicsy starting at only $2.97. Twicsy has been voted the best site to buy followers from the likes of US Magazine.' data-id='453050' data-tier='1' href='https://twicsy.com/buy-instagram-followers'><img alt='Buy real Instagram followers from Twicsy starting at only $2.97. Twicsy has been voted the best site to buy followers from the likes of US Magazine.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/eb3228cb-9810-42b0-9758-2a7aad5633ef/Screen%20Shot%202023-07-06%20at%209.08.54%20PM.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Buy real Instagram followers from Twicsy starting at only $2.97. Twicsy has been voted the best site to buy followers from the likes of US Magazine.' data-id='453050' data-tier='1' href='https://twicsy.com/buy-instagram-followers'><img alt='Buy real Instagram followers from Twicsy starting at only $2.97. Twicsy has been voted the best site to buy followers from the likes of US Magazine.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/f07b6f83-d0ed-43c6-91ae-ec8fa90512cd/twicsy-followers.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='SocialWick offers the best Instagram Followers in the market. If you are looking to boost your organic growth, buy Instagram followers from SocialWick' data-id='462750' data-tier='1' href='https://www.socialwick.com/instagram/followers'><img alt='SocialWick offers the best Instagram Followers in the market. If you are looking to boost your organic growth, buy Instagram followers from SocialWick' src='https://logo.clearbit.com/socialwick.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='Online United States Casinos' data-id='466446' data-tier='1' href='https://www.onlineunitedstatescasinos.com/'><img alt='Online United States Casinos' src='https://logo.clearbit.com/onlineunitedstatescasinos.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='https://bestnongamstopcasinos.net' data-id='468969' data-tier='1' href='https://bestnongamstopcasinos.net/'><img alt='https://bestnongamstopcasinos.net' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/1aec3bc6-2527-4a36-9c40-c2283454be76/cropped-logo1%20%281%29.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Aviators' data-id='471843' data-tier='1' href='https://aviators.com.br'><img alt='Aviators' src='https://github-production-user-asset-6210df.s3.amazonaws.com/13700/277616726-33b554c8-24e0-4570-b8ed-293fb2ab2448.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='Online iGaming platform with reliable and trusted reviews.' data-id='473786' data-tier='1' href='https://onlinecasinohex.ph/'><img alt='Online iGaming platform with reliable and trusted reviews.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/b19cbf10-3a5e-11ed-9713-c7c7fc5beda8.svg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='$1 deposit casino' data-id='480605' data-tier='1' href='https://slotcasinocanada.ca/casinos/casino-1-dollar/'><img alt='$1 deposit casino' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/3df9dabb-86ff-4f2e-8edd-f195b55a8555/scc%20logo_600x600.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Online Casinos Australia' data-id='Online Casinos Australia' data-tier='1' href='https://online-casinosaustralia.com/'><img alt='Online Casinos Australia' src='https://github-production-user-asset-6210df.s3.amazonaws.com/13700/268531585-c2b4e482-0409-4664-9aa2-95a62b0d606d.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='Looking to boost your YouTube channel? Buy YouTube subscribers with Views4You and watch your audience grow!' data-id='493616' data-tier='1' href='https://views4you.com/buy-youtube-subscribers/'><img alt='Looking to boost your YouTube channel? Buy YouTube subscribers with Views4You and watch your audience grow!' src='https://logo.clearbit.com/views4you.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='casinosonlineaus' data-id='495874' data-tier='1' href='https://casinosonlineaus.com/'><img alt='casinosonlineaus' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/7fb69094-c265-4275-b295-faf6cc0c5372/imgonline-com-ua-Resize-YkHndKrIwMdOKZAz.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Verified reviews of the most reputable Canadian online casinos at leafletcasino.com' data-id='499738' data-tier='1' href='https://leafletcasino.com/'><img alt='Verified reviews of the most reputable Canadian online casinos at leafletcasino.com' src='https://opencollective-production.s3.us-west-1.amazonaws.com/4f4c1b90-6183-11eb-8d33-bbbffb3655c5.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='Buy Telegram Members' data-id='501897' data-tier='1' href='https://buycheapestfollowers.com/buy-telegram-channel-members'><img alt='Buy Telegram Members' src='https://github-production-user-asset-6210df.s3.amazonaws.com/13700/286696172-747dca05-a1e8-4d93-a9e9-95054d1566df.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Najděte nejlepší online casino v České republice' data-id='504161' data-tier='1' href='https://kasinoceske.com'><img alt='Najděte nejlepší online casino v České republice' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/e6056d09-1db2-4fde-ae54-4cee5d99f32e/CZ.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='We review the entire iGaming industry from A to Z' data-id='504258' data-tier='1' href='https://casinolandia.com'><img alt='We review the entire iGaming industry from A to Z' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/5f858add-77f1-47a2-b577-39eecb299c8c/Logo264.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Helping Swedes finding safe unlicensed casinos' data-id='506063' data-tier='1' href='https://casino-utan-svensk-licens.com/'><img alt='Helping Swedes finding safe unlicensed casinos' src='https://logo.clearbit.com/casino-utan-svensk-licens.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='free spins no deposit' data-id='slotozilla' data-tier='1' href='https://www.slotozilla.com/au/free-spins'><img alt='free spins no deposit' src='https://github-production-user-asset-6210df.s3.amazonaws.com/13700/286693953-c68112b6-ebe6-49fd-af6a-5c810a54908d.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='I migliori casinò online dagli esperti di SitiCasinoNonAAMS' data-id='508821' data-tier='1' href='https://siticasinononaams.com'><img alt='I migliori casinò online dagli esperti di SitiCasinoNonAAMS' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/857cd395-3d43-425e-979f-970e44159b6f/SitiCasino.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Best Australian Online Casinos in 2024' data-id='508822' data-tier='1' href='https://aussiecasinoreviewer.com/'><img alt='Best Australian Online Casinos in 2024' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/6ffb5045-e33e-4314-a891-5286fa4a220f/Aussiecasinoreviewer%20logo%20(2)%20(2).jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='MEGAFAMOUS.com' data-id='509686' data-tier='1' href='https://megafamous.com/buy-automatic-instagram-likes'><img alt='MEGAFAMOUS.com' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/c0af8a5d-8fe7-4925-b357-cee797841913/MEGAFAMOUS%20Instagram%20Likes%20.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='PopularityBazaar helps you quickly grow your social media accounts. Buy 100% real likes, followers, views, comments, and more to kickstart your online presence.' data-id='509894' data-tier='1' href='https://popularitybazaar.com/instagram-likes/'><img alt='PopularityBazaar helps you quickly grow your social media accounts. Buy 100% real likes, followers, views, comments, and more to kickstart your online presence.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/a2878e26-3710-453f-9a41-80eeee60a2cc/Group%201.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Non-GamStop NonStop Casino' data-id='510457' data-tier='1' href='https://uk.nonstopcasino.org/non-gamstop-casinos/'><img alt='Non-GamStop NonStop Casino' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/0330c03a-71ea-477c-a4d8-7eb4795d6120/non-stop-casino.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='philippinescasinos.ph' data-id='512007' data-tier='1' href='https://philippinescasinos.ph/gcash/'><img alt='philippinescasinos.ph' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/b758f1b0-3211-464b-a19e-95e2a5f4fa22/PhilippinesCasinos%20bigger.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Incognito' data-id='512350' data-tier='1' href='https://www.outlookindia.com/outlook-spotlight/casinos-not-on-gamstop-uk-news-302214'><img alt='Incognito' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/fdf584c2-defe-4025-ab26-15e5c5ff607e/Non%20gamstop%20casino%20Outlookindia.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='NonGamStopBets Casinos not on GamStop' data-id='515480' data-tier='1' href='https://www.nongamstopbets.com/casinos-not-on-gamstop/'><img alt='NonGamStopBets Casinos not on GamStop' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/6c22601d-6a3f-4370-91dd-a9797887372a/nongamstopbets.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Buy real Instagram followers from Stormlikes starting at only $2.97. Stormlikes has been voted the best site to buy followers from the likes of US Magazine.' data-id='517208' data-tier='1' href='https://www.stormlikes.net/buy-instagram-followers'><img alt='Buy real Instagram followers from Stormlikes starting at only $2.97. Stormlikes has been voted the best site to buy followers from the likes of US Magazine.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/07524c4d-d44f-4120-8693-30fcaa795b2b/Stormlikes%20Black%20Logo%202400x1800.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
 <a title='UpGrow is the Best Instagram Growth Service in 2024. Get more real Instagram followers with our AI-powered growth engine to get 10x faster results. ' data-id='519002' data-tier='1' href='https://www.upgrow.com/'><img alt='UpGrow is the Best Instagram Growth Service in 2024. Get more real Instagram followers with our AI-powered growth engine to get 10x faster results. ' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/63ab7268-5ce4-4e61-b9f1-93a1bd89cd3e/ms-icon-310x310.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Reviewing companies in high-risk industries like online casinos, forex brokers and crypto exchanges' data-id='519124' data-tier='1' href='https://deposit-withdraw.com/'><img alt='Reviewing companies in high-risk industries like online casinos, forex brokers and crypto exchanges' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/eb624c1e-a378-453f-9012-4f1713fff130/deposit-withdraw-logo.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='' data-id='522907' data-tier='1' href='https://justuk.club/'><img alt='' src='https://opencollective-production.s3.us-west-1.amazonaws.com/322d0540-7b1e-11ed-8258-2f5cf1347fab.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Analysis of payment methods for use in the iGaming' data-id='524205' data-tier='1' href='https://payidpokies.net/'><img alt='Analysis of payment methods for use in the iGaming' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/75b4e83e-ae6a-4e65-b2aa-a67d7daec775/PayIDPokies-com.webp' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='30 Best Casinos Not on Gamstop in 2024' data-id='525119' data-tier='1' href='https://finance.yahoo.com/news/30-best-casinos-not-gamstop-091943696.html'><img alt='30 Best Casinos Not on Gamstop in 2024' src='https://github.com/remy/nodemon/assets/13700/820935c0-7844-4ba9-9563-b1c559895c38' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
-<a title='Twitter Video Downloader HD Tool allows you to store tweets on your device (mobile or PC) for free.' data-id='525434' data-tier='1' href='https://ssstwitter.online/'><img alt='Twitter Video Downloader HD Tool allows you to store tweets on your device (mobile or PC) for free.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/ba0d1daf-a894-4d98-95f7-a44d321364b3/Screenshot%202024-01-16%20at%2011.43.22.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><!--oc-->
+<a title='CryptoCasinos.online' data-id='525119' data-tier='1' href='https://cryptocasinos.online/'><img alt='CryptoCasinos.online' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/97712948-3b1b-4026-a109-257d879baa23/CryptoCasinos.Online-FBcover18.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='No deposit casino promo Codes 2024 - The best online Casinos websites. No deposit bonus codes, Free Spins and Promo Codes. Stake, Roobet, Jackpotcity and more.' data-id='540890' data-tier='1' href='https://www.ownedcore.com/casino'><img alt='No deposit casino promo Codes 2024 - The best online Casinos websites. No deposit bonus codes, Free Spins and Promo Codes. Stake, Roobet, Jackpotcity and more.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/8bd4b78c-95e2-4c41-b4f4-d7fd6c0e12cd/logo4-e6140c27.webp' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Online casino.' data-id='541128' data-tier='1' href='https://www.fruityking.co.nz'><img alt='Online casino.' src='https://logo.clearbit.com/fruityking.co.nz' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='SidesMedia' data-id='558019' data-tier='1' href='https://sidesmedia.com'><img alt='SidesMedia' src='https://logo.clearbit.com/sidesmedia.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Find the social proof you need to reach your audience! Boost conversions. Quickly buy Twitter Followers &amp; more with no sign-up. Taking you to the next' data-id='568449' data-tier='1' href='https://Bulkoid.com/buy-twitter-followers'><img alt='Find the social proof you need to reach your audience! Boost conversions. Quickly buy Twitter Followers &amp; more with no sign-up. Taking you to the next' src='https://logo.clearbit.com/Bulkoid.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Boost your social media presence effortlessly with top-quality Instagram and TikTok followers and likes.' data-id='579911' data-tier='1' href='https://leofame.com/buy-instagram-followers'><img alt='Boost your social media presence effortlessly with top-quality Instagram and TikTok followers and likes.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/186c0e19-b195-4228-901a-ab1b70d63ee5/WhatsApp%20Image%202024-06-21%20at%203.50.43%20AM.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Social Media Management and all kinds of followers' data-id='587050' data-tier='1' href='https://www.socialfollowers.uk/buy-tiktok-followers/'><img alt='Social Media Management and all kinds of followers' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/8941f043-5d00-4e33-a1fd-f2d27ca54963/Social%20Followers%20Uk%20logo%20black.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Trusted last mile route planning and route optimization' data-id='590147' data-tier='1' href='https://route4me.com/'><img alt='Trusted last mile route planning and route optimization' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/237386c3-48a2-47c6-97ac-5f888cdb4cda/Route4MeIconLogo.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Betwinner is an online bookmaker offering sports betting, casino games, and more.' data-id='594768' data-tier='1' href='https://guidebook.betwinner.com/'><img alt='Betwinner is an online bookmaker offering sports betting, casino games, and more.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/82cab29a-7002-4924-83bf-2eecb03d07c4/0x0.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Help users to find best and cheapest site to buy Instagram Followers' data-id='598908' data-tier='1' href='https://www.reddit.com/r/TikTokExpert/comments/1dpyujh/whats_the_best_site_to_buy_instagram_likes_views/'><img alt='Help users to find best and cheapest site to buy Instagram Followers' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/263abc3a-0841-4694-b24a-788460391613/communityIcon_66mltiw57b4d1.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='At Buzzoid, you can buy Instagram followers quickly, safely, and easily with just a few clicks. Rated world&apos;s #1 IG service since 2012.' data-id='602382' data-tier='1' href='https://buzzoid.com/buy-instagram-followers/'><img alt='At Buzzoid, you can buy Instagram followers quickly, safely, and easily with just a few clicks. Rated world&apos;s #1 IG service since 2012.' src='https://logo.clearbit.com/buzzoid.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Zamsino.com' data-id='608094' data-tier='1' href='https://zamsino.com/'><img alt='Zamsino.com' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/e3e99af5-a024-4d85-8594-8fd22e506bc9/Zamsino.com%20Logo.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Feedthebot is an informative resource with free seo tools designed to help webmasters, SEO specialists, marketers, and entrepreneurs navigate and bett' data-id='612702' data-tier='1' href='https://www.feedthebot.org/'><img alt='Feedthebot is an informative resource with free seo tools designed to help webmasters, SEO specialists, marketers, and entrepreneurs navigate and bett' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/613fd973-b367-41bb-b253-34d2ebf877e8/logo-feedthebot(2).png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Reviewing and comparing online casinos available to Finnish players. In addition, we publish relevant news and blog posts about the world of iGaming.' data-id='620398' data-tier='1' href='https://uusimmatkasinot.com/'><img alt='Reviewing and comparing online casinos available to Finnish players. In addition, we publish relevant news and blog posts about the world of iGaming.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/d5326d0f-3cde-41f4-b480-78ef8a2fb015/Uusimmatkasinot_head_siteicon.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Jabka Skin' data-id='634777' data-tier='1' href='https://jabka.skin/'><img alt='Jabka Skin' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/4c272505-2e0b-4e93-9693-c7d5c07ea0c6/IMG_0161.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Онлайн казино та БК (ставки на спорт) в Україні' data-id='638974' data-tier='1' href='https://betking.com.ua/'><img alt='Онлайн казино та БК (ставки на спорт) в Україні' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/08587758-582c-4136-aba5-2519230960d3/betking.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Buy Youtube Views' data-id='641611' data-tier='1' href='https://ssmarket.net/buy-youtube-views'><img alt='Buy Youtube Views' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/bbc20da5-6350-4f69-a5a5-33b8d438fe72/favicon_kare.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Prank Caller - #1 Prank Calling App' data-id='642864' data-tier='1' href='https://prankcaller.io'><img alt='Prank Caller - #1 Prank Calling App' src='https://logo.clearbit.com/prankcaller.io' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Buzzvoice is your one-stop shop for all your social media marketing needs. With Buzzvoice, you can buy followers, comments, likes, video views and more!' data-id='646075' data-tier='1' href='https://buzzvoice.com/'><img alt='Buzzvoice is your one-stop shop for all your social media marketing needs. With Buzzvoice, you can buy followers, comments, likes, video views and more!' src='https://opencollective-production.s3.us-west-1.amazonaws.com/acd68da0-e71e-11ec-a84e-fd82f80383c1.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='At Famety, you can grow your social media following quickly, safely, and easily with just a few clicks. Rated the world’s #1 social media service since 2013.' data-id='646341' data-tier='1' href='https://www.famety.com/'><img alt='At Famety, you can grow your social media following quickly, safely, and easily with just a few clicks. Rated the world’s #1 social media service since 2013.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/cfb851d7-3d7e-451b-b872-b653b28c976f/favicon_001.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='' data-id='648524' data-tier='1' href='https://www.c19.cl/'><img alt='' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/01b96d4c-4852-4499-8c70-e3ec57d0c58c/2024-05-09_17-27%20(1).png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='non GamStop sites' data-id='649825' data-tier='1' href='https://www.stjamestheatre.co.uk/'><img alt='non GamStop sites' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/07eb5953-01b2-41cf-8e33-77b9b6df1477/%D0%97%D0%BD%D1%96%D0%BC%D0%BE%D0%BA%20%D0%B5%D0%BA%D1%80%D0%B0%D0%BD%D0%B0%202025-01-10%20%D0%BE%2015.29.42%20(1)%20(1).jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Buy Twitter Followers Visit TweSocial' data-id='651653' data-tier='1' href='https://twesocial.com'><img alt='Buy Twitter Followers Visit TweSocial' src='https://logo.clearbit.com/twesocial.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Useful guides about PayID pokies and casino sites for Australians' data-id='653496' data-tier='1' href='https://payid-pokies-sites.com/'><img alt='Useful guides about PayID pokies and casino sites for Australians' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/3542b01b-6b66-488b-a641-e35720fd5453/images.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Buy Instagram and TikTok followers on SocialBoosting!' data-id='653711' data-tier='1' href='https://www.socialboosting.com/buy-tiktok-followers'><img alt='Buy Instagram and TikTok followers on SocialBoosting!' src='https://logo.clearbit.com/socialboosting.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Buy Youtube Subscribers from the #1 rated company. Our exclusive high quality Youtube subscribers come with a lifetime guarantee!' data-id='654211' data-tier='1' href='https://mysocialfollowing.com/youtube/subscribers.php'><img alt='Buy Youtube Subscribers from the #1 rated company. Our exclusive high quality Youtube subscribers come with a lifetime guarantee!' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/eb5da272-eba5-49b7-b26e-d0271809edac/logo.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Слоти в казино ЮА' data-id='655295' data-tier='1' href='https://casino.ua/casino/slots/'><img alt='Слоти в казино ЮА' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/3c8fa725-e203-4c57-933c-0a884527fd5b/images.jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Best Casinos not on Gamstop in the UK 2025 – Safe &amp; Trusted' data-id='658676' data-tier='1' href='https://www.vso.org.uk/'><img alt='Best Casinos not on Gamstop in the UK 2025 – Safe &amp; Trusted' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/e8cda2e8-2516-491a-8a7f-0fa5fe94ed49/125%D1%85125%20(1).jpg' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='MagicUGC is the Best AI UGC Video Generator. Trained on billions of views, MagicUGC creates TikTok &amp; IG-ready videos with 500+ AI actors and proven viral hooks. Generate AI videos in 35+ languages, auto-test unlimited variations, and scale UGC marketing.' data-id='661239' data-tier='1' href='https://www.magicugc.com/'><img alt='MagicUGC is the Best AI UGC Video Generator. Trained on billions of views, MagicUGC creates TikTok &amp; IG-ready videos with 500+ AI actors and proven viral hooks. Generate AI videos in 35+ languages, auto-test unlimited variations, and scale UGC marketing.' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/853ae26b-75ac-49bd-8676-0060212f42cb/MagicUGC-logo-rounded%20(1).png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Buy Instagram Followers at UseViral' data-id='661787' data-tier='1' href='https://useviral.com/buy-instagram-followers'><img alt='Buy Instagram Followers at UseViral' src='https://logo.clearbit.com/useviral.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='We help improve visibility in social networks. ' data-id='663482' data-tier='1' href='https://socialboss.org/'><img alt='We help improve visibility in social networks. ' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/48fef73d-509e-47d4-a790-0f6d371338f1/socialboss%20logo.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='We are a Software Company that delivers App Development, AI/ML integrations, and Data analytics, by adding the best Engineering teams' data-id='669750' data-tier='1' href='https://www.clickittech.com/'><img alt='We are a Software Company that delivers App Development, AI/ML integrations, and Data analytics, by adding the best Engineering teams' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/b01bfc96-cb20-4f49-b3b2-55088f3f9efd/image%20(2).png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Kasinohai.com' data-id='673849' data-tier='1' href='https://www.kasinohai.com/nettikasinot'><img alt='Kasinohai.com' src='https://logo.clearbit.com/kasinohai.com' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a>
+<a title='Casino Online Chile 2025' data-id='678929' data-tier='1' href='https://www.acee.cl/'><img alt='Casino Online Chile 2025' src='https://opencollective-production.s3.us-west-1.amazonaws.com/account-avatar/292c66d6-0c5c-40e8-96f0-900dcdeaaf47/acee-casino-chile.png' style='object-fit: contain; float: left; margin:12px' height='120' width='120'></a><!--oc-->
 </div>
 
 Please note that links to the sponsors above are not direct endorsements nor affiliated with any of contributors of the nodemon project.
Index: node_modules/lightning-pool/esm/resource-item.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import { ResourceState } from './definitions.js';\r\nexport class ResourceItem {\r\n    constructor(resource) {\r\n        this.state = ResourceState.IDLE;\r\n        this.idleTime = 0;\r\n        this.destroyed = false;\r\n        this.resource = resource;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/lightning-pool/esm/resource-item.js b/node_modules/lightning-pool/esm/resource-item.js
--- a/node_modules/lightning-pool/esm/resource-item.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/lightning-pool/esm/resource-item.js	(date 1753913035672)
@@ -1,4 +1,4 @@
-import { ResourceState } from './definitions.js';
+import { ResourceState } from './constants.js';
 export class ResourceItem {
     constructor(resource) {
         this.state = ResourceState.IDLE;
Index: node_modules/pg/lib/connection-parameters.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict'\r\n\r\nvar dns = require('dns')\r\n\r\nvar defaults = require('./defaults')\r\n\r\nvar parse = require('pg-connection-string').parse // parses a connection string\r\n\r\nvar val = function (key, config, envVar) {\r\n  if (envVar === undefined) {\r\n    envVar = process.env['PG' + key.toUpperCase()]\r\n  } else if (envVar === false) {\r\n    // do nothing ... use false\r\n  } else {\r\n    envVar = process.env[envVar]\r\n  }\r\n\r\n  return config[key] || envVar || defaults[key]\r\n}\r\n\r\nvar readSSLConfigFromEnvironment = function () {\r\n  switch (process.env.PGSSLMODE) {\r\n    case 'disable':\r\n      return false\r\n    case 'prefer':\r\n    case 'require':\r\n    case 'verify-ca':\r\n    case 'verify-full':\r\n      return true\r\n    case 'no-verify':\r\n      return { rejectUnauthorized: false }\r\n  }\r\n  return defaults.ssl\r\n}\r\n\r\n// Convert arg to a string, surround in single quotes, and escape single quotes and backslashes\r\nvar quoteParamValue = function (value) {\r\n  return \"'\" + ('' + value).replace(/\\\\/g, '\\\\\\\\').replace(/'/g, \"\\\\'\") + \"'\"\r\n}\r\n\r\nvar add = function (params, config, paramName) {\r\n  var value = config[paramName]\r\n  if (value !== undefined && value !== null) {\r\n    params.push(paramName + '=' + quoteParamValue(value))\r\n  }\r\n}\r\n\r\nclass ConnectionParameters {\r\n  constructor(config) {\r\n    // if a string is passed, it is a raw connection string so we parse it into a config\r\n    config = typeof config === 'string' ? parse(config) : config || {}\r\n\r\n    // if the config has a connectionString defined, parse IT into the config we use\r\n    // this will override other default values with what is stored in connectionString\r\n    if (config.connectionString) {\r\n      config = Object.assign({}, config, parse(config.connectionString))\r\n    }\r\n\r\n    this.user = val('user', config)\r\n    this.database = val('database', config)\r\n\r\n    if (this.database === undefined) {\r\n      this.database = this.user\r\n    }\r\n\r\n    this.port = parseInt(val('port', config), 10)\r\n    this.host = val('host', config)\r\n\r\n    // \"hiding\" the password so it doesn't show up in stack traces\r\n    // or if the client is console.logged\r\n    Object.defineProperty(this, 'password', {\r\n      configurable: true,\r\n      enumerable: false,\r\n      writable: true,\r\n      value: val('password', config),\r\n    })\r\n\r\n    this.binary = val('binary', config)\r\n    this.options = val('options', config)\r\n\r\n    this.ssl = typeof config.ssl === 'undefined' ? readSSLConfigFromEnvironment() : config.ssl\r\n\r\n    if (typeof this.ssl === 'string') {\r\n      if (this.ssl === 'true') {\r\n        this.ssl = true\r\n      }\r\n    }\r\n    // support passing in ssl=no-verify via connection string\r\n    if (this.ssl === 'no-verify') {\r\n      this.ssl = { rejectUnauthorized: false }\r\n    }\r\n    if (this.ssl && this.ssl.key) {\r\n      Object.defineProperty(this.ssl, 'key', {\r\n        enumerable: false,\r\n      })\r\n    }\r\n\r\n    this.client_encoding = val('client_encoding', config)\r\n    this.replication = val('replication', config)\r\n    // a domain socket begins with '/'\r\n    this.isDomainSocket = !(this.host || '').indexOf('/')\r\n\r\n    this.application_name = val('application_name', config, 'PGAPPNAME')\r\n    this.fallback_application_name = val('fallback_application_name', config, false)\r\n    this.statement_timeout = val('statement_timeout', config, false)\r\n    this.lock_timeout = val('lock_timeout', config, false)\r\n    this.idle_in_transaction_session_timeout = val('idle_in_transaction_session_timeout', config, false)\r\n    this.query_timeout = val('query_timeout', config, false)\r\n\r\n    if (config.connectionTimeoutMillis === undefined) {\r\n      this.connect_timeout = process.env.PGCONNECT_TIMEOUT || 0\r\n    } else {\r\n      this.connect_timeout = Math.floor(config.connectionTimeoutMillis / 1000)\r\n    }\r\n\r\n    if (config.keepAlive === false) {\r\n      this.keepalives = 0\r\n    } else if (config.keepAlive === true) {\r\n      this.keepalives = 1\r\n    }\r\n\r\n    if (typeof config.keepAliveInitialDelayMillis === 'number') {\r\n      this.keepalives_idle = Math.floor(config.keepAliveInitialDelayMillis / 1000)\r\n    }\r\n  }\r\n\r\n  getLibpqConnectionString(cb) {\r\n    var params = []\r\n    add(params, this, 'user')\r\n    add(params, this, 'password')\r\n    add(params, this, 'port')\r\n    add(params, this, 'application_name')\r\n    add(params, this, 'fallback_application_name')\r\n    add(params, this, 'connect_timeout')\r\n    add(params, this, 'options')\r\n\r\n    var ssl = typeof this.ssl === 'object' ? this.ssl : this.ssl ? { sslmode: this.ssl } : {}\r\n    add(params, ssl, 'sslmode')\r\n    add(params, ssl, 'sslca')\r\n    add(params, ssl, 'sslkey')\r\n    add(params, ssl, 'sslcert')\r\n    add(params, ssl, 'sslrootcert')\r\n\r\n    if (this.database) {\r\n      params.push('dbname=' + quoteParamValue(this.database))\r\n    }\r\n    if (this.replication) {\r\n      params.push('replication=' + quoteParamValue(this.replication))\r\n    }\r\n    if (this.host) {\r\n      params.push('host=' + quoteParamValue(this.host))\r\n    }\r\n    if (this.isDomainSocket) {\r\n      return cb(null, params.join(' '))\r\n    }\r\n    if (this.client_encoding) {\r\n      params.push('client_encoding=' + quoteParamValue(this.client_encoding))\r\n    }\r\n    dns.lookup(this.host, function (err, address) {\r\n      if (err) return cb(err, null)\r\n      params.push('hostaddr=' + quoteParamValue(address))\r\n      return cb(null, params.join(' '))\r\n    })\r\n  }\r\n}\r\n\r\nmodule.exports = ConnectionParameters\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg/lib/connection-parameters.js b/node_modules/pg/lib/connection-parameters.js
--- a/node_modules/pg/lib/connection-parameters.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg/lib/connection-parameters.js	(date 1753913035427)
@@ -1,12 +1,12 @@
 'use strict'
 
-var dns = require('dns')
+const dns = require('dns')
 
-var defaults = require('./defaults')
+const defaults = require('./defaults')
 
-var parse = require('pg-connection-string').parse // parses a connection string
+const parse = require('pg-connection-string').parse // parses a connection string
 
-var val = function (key, config, envVar) {
+const val = function (key, config, envVar) {
   if (envVar === undefined) {
     envVar = process.env['PG' + key.toUpperCase()]
   } else if (envVar === false) {
@@ -18,7 +18,7 @@
   return config[key] || envVar || defaults[key]
 }
 
-var readSSLConfigFromEnvironment = function () {
+const readSSLConfigFromEnvironment = function () {
   switch (process.env.PGSSLMODE) {
     case 'disable':
       return false
@@ -34,12 +34,12 @@
 }
 
 // Convert arg to a string, surround in single quotes, and escape single quotes and backslashes
-var quoteParamValue = function (value) {
+const quoteParamValue = function (value) {
   return "'" + ('' + value).replace(/\\/g, '\\\\').replace(/'/g, "\\'") + "'"
 }
 
-var add = function (params, config, paramName) {
-  var value = config[paramName]
+const add = function (params, config, paramName) {
+  const value = config[paramName]
   if (value !== undefined && value !== null) {
     params.push(paramName + '=' + quoteParamValue(value))
   }
@@ -125,7 +125,7 @@
   }
 
   getLibpqConnectionString(cb) {
-    var params = []
+    const params = []
     add(params, this, 'user')
     add(params, this, 'password')
     add(params, this, 'port')
@@ -134,7 +134,7 @@
     add(params, this, 'connect_timeout')
     add(params, this, 'options')
 
-    var ssl = typeof this.ssl === 'object' ? this.ssl : this.ssl ? { sslmode: this.ssl } : {}
+    const ssl = typeof this.ssl === 'object' ? this.ssl : this.ssl ? { sslmode: this.ssl } : {}
     add(params, ssl, 'sslmode')
     add(params, ssl, 'sslca')
     add(params, ssl, 'sslkey')
Index: node_modules/lightning-pool/esm/pool-request.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>// eslint-disable-next-line @typescript-eslint/no-empty-function\r\nfunction noop() {\r\n}\r\nexport class PoolRequest {\r\n    constructor(pool, callback) {\r\n        this.timedOut = false;\r\n        this.created = Date.now();\r\n        this.callback = callback || noop;\r\n        if (pool.options.acquireTimeoutMillis) {\r\n            this.timeoutHandle = setTimeout(() => {\r\n                this.timedOut = true;\r\n                this.stopTimout();\r\n                pool.emit('request-timeout');\r\n                this.callback(new Error('Request timed out'));\r\n            }, pool.options.acquireTimeoutMillis);\r\n        }\r\n    }\r\n    stopTimout() {\r\n        if (this.timeoutHandle)\r\n            clearTimeout(this.timeoutHandle);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/lightning-pool/esm/pool-request.js b/node_modules/lightning-pool/esm/pool-request.js
--- a/node_modules/lightning-pool/esm/pool-request.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/lightning-pool/esm/pool-request.js	(date 1753913035666)
@@ -1,11 +1,10 @@
-// eslint-disable-next-line @typescript-eslint/no-empty-function
-function noop() {
-}
+function noop() { }
 export class PoolRequest {
-    constructor(pool, callback) {
+    constructor(pool, callback, options) {
         this.timedOut = false;
         this.created = Date.now();
         this.callback = callback || noop;
+        this.options = options;
         if (pool.options.acquireTimeoutMillis) {
             this.timeoutHandle = setTimeout(() => {
                 this.timedOut = true;
Index: node_modules/pg/lib/defaults.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict'\r\n\r\nmodule.exports = {\r\n  // database host. defaults to localhost\r\n  host: 'localhost',\r\n\r\n  // database user's name\r\n  user: process.platform === 'win32' ? process.env.USERNAME : process.env.USER,\r\n\r\n  // name of database to connect\r\n  database: undefined,\r\n\r\n  // database user's password\r\n  password: null,\r\n\r\n  // a Postgres connection string to be used instead of setting individual connection items\r\n  // NOTE:  Setting this value will cause it to override any other value (such as database or user) defined\r\n  // in the defaults object.\r\n  connectionString: undefined,\r\n\r\n  // database port\r\n  port: 5432,\r\n\r\n  // number of rows to return at a time from a prepared statement's\r\n  // portal. 0 will return all rows at once\r\n  rows: 0,\r\n\r\n  // binary result mode\r\n  binary: false,\r\n\r\n  // Connection pool options - see https://github.com/brianc/node-pg-pool\r\n\r\n  // number of connections to use in connection pool\r\n  // 0 will disable connection pooling\r\n  max: 10,\r\n\r\n  // max milliseconds a client can go unused before it is removed\r\n  // from the pool and destroyed\r\n  idleTimeoutMillis: 30000,\r\n\r\n  client_encoding: '',\r\n\r\n  ssl: false,\r\n\r\n  application_name: undefined,\r\n\r\n  fallback_application_name: undefined,\r\n\r\n  options: undefined,\r\n\r\n  parseInputDatesAsUTC: false,\r\n\r\n  // max milliseconds any query using this connection will execute for before timing out in error.\r\n  // false=unlimited\r\n  statement_timeout: false,\r\n\r\n  // Abort any statement that waits longer than the specified duration in milliseconds while attempting to acquire a lock.\r\n  // false=unlimited\r\n  lock_timeout: false,\r\n\r\n  // Terminate any session with an open transaction that has been idle for longer than the specified duration in milliseconds\r\n  // false=unlimited\r\n  idle_in_transaction_session_timeout: false,\r\n\r\n  // max milliseconds to wait for query to complete (client side)\r\n  query_timeout: false,\r\n\r\n  connect_timeout: 0,\r\n\r\n  keepalives: 1,\r\n\r\n  keepalives_idle: 0,\r\n}\r\n\r\nvar pgTypes = require('pg-types')\r\n// save default parsers\r\nvar parseBigInteger = pgTypes.getTypeParser(20, 'text')\r\nvar parseBigIntegerArray = pgTypes.getTypeParser(1016, 'text')\r\n\r\n// parse int8 so you can get your count values as actual numbers\r\nmodule.exports.__defineSetter__('parseInt8', function (val) {\r\n  pgTypes.setTypeParser(20, 'text', val ? pgTypes.getTypeParser(23, 'text') : parseBigInteger)\r\n  pgTypes.setTypeParser(1016, 'text', val ? pgTypes.getTypeParser(1007, 'text') : parseBigIntegerArray)\r\n})\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg/lib/defaults.js b/node_modules/pg/lib/defaults.js
--- a/node_modules/pg/lib/defaults.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg/lib/defaults.js	(date 1753913035429)
@@ -72,10 +72,10 @@
   keepalives_idle: 0,
 }
 
-var pgTypes = require('pg-types')
+const pgTypes = require('pg-types')
 // save default parsers
-var parseBigInteger = pgTypes.getTypeParser(20, 'text')
-var parseBigIntegerArray = pgTypes.getTypeParser(1016, 'text')
+const parseBigInteger = pgTypes.getTypeParser(20, 'text')
+const parseBigIntegerArray = pgTypes.getTypeParser(1016, 'text')
 
 // parse int8 so you can get your count values as actual numbers
 module.exports.__defineSetter__('parseInt8', function (val) {
Index: node_modules/pg/lib/result.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict'\r\n\r\nvar types = require('pg-types')\r\n\r\nvar matchRegexp = /^([A-Za-z]+)(?: (\\d+))?(?: (\\d+))?/\r\n\r\n// result object returned from query\r\n// in the 'end' event and also\r\n// passed as second argument to provided callback\r\nclass Result {\r\n  constructor(rowMode, types) {\r\n    this.command = null\r\n    this.rowCount = null\r\n    this.oid = null\r\n    this.rows = []\r\n    this.fields = []\r\n    this._parsers = undefined\r\n    this._types = types\r\n    this.RowCtor = null\r\n    this.rowAsArray = rowMode === 'array'\r\n    if (this.rowAsArray) {\r\n      this.parseRow = this._parseRowAsArray\r\n    }\r\n    this._prebuiltEmptyResultObject = null\r\n  }\r\n\r\n  // adds a command complete message\r\n  addCommandComplete(msg) {\r\n    var match\r\n    if (msg.text) {\r\n      // pure javascript\r\n      match = matchRegexp.exec(msg.text)\r\n    } else {\r\n      // native bindings\r\n      match = matchRegexp.exec(msg.command)\r\n    }\r\n    if (match) {\r\n      this.command = match[1]\r\n      if (match[3]) {\r\n        // COMMMAND OID ROWS\r\n        this.oid = parseInt(match[2], 10)\r\n        this.rowCount = parseInt(match[3], 10)\r\n      } else if (match[2]) {\r\n        // COMMAND ROWS\r\n        this.rowCount = parseInt(match[2], 10)\r\n      }\r\n    }\r\n  }\r\n\r\n  _parseRowAsArray(rowData) {\r\n    var row = new Array(rowData.length)\r\n    for (var i = 0, len = rowData.length; i < len; i++) {\r\n      var rawValue = rowData[i]\r\n      if (rawValue !== null) {\r\n        row[i] = this._parsers[i](rawValue)\r\n      } else {\r\n        row[i] = null\r\n      }\r\n    }\r\n    return row\r\n  }\r\n\r\n  parseRow(rowData) {\r\n    var row = { ...this._prebuiltEmptyResultObject }\r\n    for (var i = 0, len = rowData.length; i < len; i++) {\r\n      var rawValue = rowData[i]\r\n      var field = this.fields[i].name\r\n      if (rawValue !== null) {\r\n        row[field] = this._parsers[i](rawValue)\r\n      } else {\r\n        row[field] = null\r\n      }\r\n    }\r\n    return row\r\n  }\r\n\r\n  addRow(row) {\r\n    this.rows.push(row)\r\n  }\r\n\r\n  addFields(fieldDescriptions) {\r\n    // clears field definitions\r\n    // multiple query statements in 1 action can result in multiple sets\r\n    // of rowDescriptions...eg: 'select NOW(); select 1::int;'\r\n    // you need to reset the fields\r\n    this.fields = fieldDescriptions\r\n    if (this.fields.length) {\r\n      this._parsers = new Array(fieldDescriptions.length)\r\n    }\r\n\r\n    var row = {}\r\n\r\n    for (var i = 0; i < fieldDescriptions.length; i++) {\r\n      var desc = fieldDescriptions[i]\r\n      row[desc.name] = null\r\n\r\n      if (this._types) {\r\n        this._parsers[i] = this._types.getTypeParser(desc.dataTypeID, desc.format || 'text')\r\n      } else {\r\n        this._parsers[i] = types.getTypeParser(desc.dataTypeID, desc.format || 'text')\r\n      }\r\n    }\r\n    this._prebuiltEmptyResultObject = { ...row }\r\n  }\r\n}\r\n\r\nmodule.exports = Result\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg/lib/result.js b/node_modules/pg/lib/result.js
--- a/node_modules/pg/lib/result.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg/lib/result.js	(date 1753913035442)
@@ -1,8 +1,8 @@
 'use strict'
 
-var types = require('pg-types')
+const types = require('pg-types')
 
-var matchRegexp = /^([A-Za-z]+)(?: (\d+))?(?: (\d+))?/
+const matchRegexp = /^([A-Za-z]+)(?: (\d+))?(?: (\d+))?/
 
 // result object returned from query
 // in the 'end' event and also
@@ -26,7 +26,7 @@
 
   // adds a command complete message
   addCommandComplete(msg) {
-    var match
+    let match
     if (msg.text) {
       // pure javascript
       match = matchRegexp.exec(msg.text)
@@ -37,7 +37,7 @@
     if (match) {
       this.command = match[1]
       if (match[3]) {
-        // COMMMAND OID ROWS
+        // COMMAND OID ROWS
         this.oid = parseInt(match[2], 10)
         this.rowCount = parseInt(match[3], 10)
       } else if (match[2]) {
@@ -48,9 +48,9 @@
   }
 
   _parseRowAsArray(rowData) {
-    var row = new Array(rowData.length)
-    for (var i = 0, len = rowData.length; i < len; i++) {
-      var rawValue = rowData[i]
+    const row = new Array(rowData.length)
+    for (let i = 0, len = rowData.length; i < len; i++) {
+      const rawValue = rowData[i]
       if (rawValue !== null) {
         row[i] = this._parsers[i](rawValue)
       } else {
@@ -61,12 +61,13 @@
   }
 
   parseRow(rowData) {
-    var row = { ...this._prebuiltEmptyResultObject }
-    for (var i = 0, len = rowData.length; i < len; i++) {
-      var rawValue = rowData[i]
-      var field = this.fields[i].name
+    const row = { ...this._prebuiltEmptyResultObject }
+    for (let i = 0, len = rowData.length; i < len; i++) {
+      const rawValue = rowData[i]
+      const field = this.fields[i].name
       if (rawValue !== null) {
-        row[field] = this._parsers[i](rawValue)
+        const v = this.fields[i].format === 'binary' ? Buffer.from(rawValue) : rawValue
+        row[field] = this._parsers[i](v)
       } else {
         row[field] = null
       }
@@ -88,10 +89,10 @@
       this._parsers = new Array(fieldDescriptions.length)
     }
 
-    var row = {}
+    const row = {}
 
-    for (var i = 0; i < fieldDescriptions.length; i++) {
-      var desc = fieldDescriptions[i]
+    for (let i = 0; i < fieldDescriptions.length; i++) {
+      const desc = fieldDescriptions[i]
       row[desc.name] = null
 
       if (this._types) {
@@ -100,6 +101,7 @@
         this._parsers[i] = types.getTypeParser(desc.dataTypeID, desc.format || 'text')
       }
     }
+
     this._prebuiltEmptyResultObject = { ...row }
   }
 }
Index: node_modules/pg/lib/connection.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict'\r\n\r\nvar net = require('net')\r\nvar EventEmitter = require('events').EventEmitter\r\n\r\nconst { parse, serialize } = require('pg-protocol')\r\nconst { getStream, getSecureStream } = require('./stream')\r\n\r\nconst flushBuffer = serialize.flush()\r\nconst syncBuffer = serialize.sync()\r\nconst endBuffer = serialize.end()\r\n\r\n// TODO(bmc) support binary mode at some point\r\nclass Connection extends EventEmitter {\r\n  constructor(config) {\r\n    super()\r\n    config = config || {}\r\n\r\n    this.stream = config.stream || getStream(config.ssl)\r\n    if (typeof this.stream === 'function') {\r\n      this.stream = this.stream(config)\r\n    }\r\n\r\n    this._keepAlive = config.keepAlive\r\n    this._keepAliveInitialDelayMillis = config.keepAliveInitialDelayMillis\r\n    this.lastBuffer = false\r\n    this.parsedStatements = {}\r\n    this.ssl = config.ssl || false\r\n    this._ending = false\r\n    this._emitMessage = false\r\n    var self = this\r\n    this.on('newListener', function (eventName) {\r\n      if (eventName === 'message') {\r\n        self._emitMessage = true\r\n      }\r\n    })\r\n  }\r\n\r\n  connect(port, host) {\r\n    var self = this\r\n\r\n    this._connecting = true\r\n    this.stream.setNoDelay(true)\r\n    this.stream.connect(port, host)\r\n\r\n    this.stream.once('connect', function () {\r\n      if (self._keepAlive) {\r\n        self.stream.setKeepAlive(true, self._keepAliveInitialDelayMillis)\r\n      }\r\n      self.emit('connect')\r\n    })\r\n\r\n    const reportStreamError = function (error) {\r\n      // errors about disconnections should be ignored during disconnect\r\n      if (self._ending && (error.code === 'ECONNRESET' || error.code === 'EPIPE')) {\r\n        return\r\n      }\r\n      self.emit('error', error)\r\n    }\r\n    this.stream.on('error', reportStreamError)\r\n\r\n    this.stream.on('close', function () {\r\n      self.emit('end')\r\n    })\r\n\r\n    if (!this.ssl) {\r\n      return this.attachListeners(this.stream)\r\n    }\r\n\r\n    this.stream.once('data', function (buffer) {\r\n      var responseCode = buffer.toString('utf8')\r\n      switch (responseCode) {\r\n        case 'S': // Server supports SSL connections, continue with a secure connection\r\n          break\r\n        case 'N': // Server does not support SSL connections\r\n          self.stream.end()\r\n          return self.emit('error', new Error('The server does not support SSL connections'))\r\n        default:\r\n          // Any other response byte, including 'E' (ErrorResponse) indicating a server error\r\n          self.stream.end()\r\n          return self.emit('error', new Error('There was an error establishing an SSL connection'))\r\n      }\r\n      const options = {\r\n        socket: self.stream,\r\n      }\r\n\r\n      if (self.ssl !== true) {\r\n        Object.assign(options, self.ssl)\r\n\r\n        if ('key' in self.ssl) {\r\n          options.key = self.ssl.key\r\n        }\r\n      }\r\n\r\n      var net = require('net')\r\n      if (net.isIP && net.isIP(host) === 0) {\r\n        options.servername = host\r\n      }\r\n      try {\r\n        self.stream = getSecureStream(options)\r\n      } catch (err) {\r\n        return self.emit('error', err)\r\n      }\r\n      self.attachListeners(self.stream)\r\n      self.stream.on('error', reportStreamError)\r\n\r\n      self.emit('sslconnect')\r\n    })\r\n  }\r\n\r\n  attachListeners(stream) {\r\n    parse(stream, (msg) => {\r\n      var eventName = msg.name === 'error' ? 'errorMessage' : msg.name\r\n      if (this._emitMessage) {\r\n        this.emit('message', msg)\r\n      }\r\n      this.emit(eventName, msg)\r\n    })\r\n  }\r\n\r\n  requestSsl() {\r\n    this.stream.write(serialize.requestSsl())\r\n  }\r\n\r\n  startup(config) {\r\n    this.stream.write(serialize.startup(config))\r\n  }\r\n\r\n  cancel(processID, secretKey) {\r\n    this._send(serialize.cancel(processID, secretKey))\r\n  }\r\n\r\n  password(password) {\r\n    this._send(serialize.password(password))\r\n  }\r\n\r\n  sendSASLInitialResponseMessage(mechanism, initialResponse) {\r\n    this._send(serialize.sendSASLInitialResponseMessage(mechanism, initialResponse))\r\n  }\r\n\r\n  sendSCRAMClientFinalMessage(additionalData) {\r\n    this._send(serialize.sendSCRAMClientFinalMessage(additionalData))\r\n  }\r\n\r\n  _send(buffer) {\r\n    if (!this.stream.writable) {\r\n      return false\r\n    }\r\n    return this.stream.write(buffer)\r\n  }\r\n\r\n  query(text) {\r\n    this._send(serialize.query(text))\r\n  }\r\n\r\n  // send parse message\r\n  parse(query) {\r\n    this._send(serialize.parse(query))\r\n  }\r\n\r\n  // send bind message\r\n  bind(config) {\r\n    this._send(serialize.bind(config))\r\n  }\r\n\r\n  // send execute message\r\n  execute(config) {\r\n    this._send(serialize.execute(config))\r\n  }\r\n\r\n  flush() {\r\n    if (this.stream.writable) {\r\n      this.stream.write(flushBuffer)\r\n    }\r\n  }\r\n\r\n  sync() {\r\n    this._ending = true\r\n    this._send(syncBuffer)\r\n  }\r\n\r\n  ref() {\r\n    this.stream.ref()\r\n  }\r\n\r\n  unref() {\r\n    this.stream.unref()\r\n  }\r\n\r\n  end() {\r\n    // 0x58 = 'X'\r\n    this._ending = true\r\n    if (!this._connecting || !this.stream.writable) {\r\n      this.stream.end()\r\n      return\r\n    }\r\n    return this.stream.write(endBuffer, () => {\r\n      this.stream.end()\r\n    })\r\n  }\r\n\r\n  close(msg) {\r\n    this._send(serialize.close(msg))\r\n  }\r\n\r\n  describe(msg) {\r\n    this._send(serialize.describe(msg))\r\n  }\r\n\r\n  sendCopyFromChunk(chunk) {\r\n    this._send(serialize.copyData(chunk))\r\n  }\r\n\r\n  endCopyFrom() {\r\n    this._send(serialize.copyDone())\r\n  }\r\n\r\n  sendCopyFail(msg) {\r\n    this._send(serialize.copyFail(msg))\r\n  }\r\n}\r\n\r\nmodule.exports = Connection\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg/lib/connection.js b/node_modules/pg/lib/connection.js
--- a/node_modules/pg/lib/connection.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg/lib/connection.js	(date 1753913035428)
@@ -1,7 +1,6 @@
 'use strict'
 
-var net = require('net')
-var EventEmitter = require('events').EventEmitter
+const EventEmitter = require('events').EventEmitter
 
 const { parse, serialize } = require('pg-protocol')
 const { getStream, getSecureStream } = require('./stream')
@@ -28,7 +27,7 @@
     this.ssl = config.ssl || false
     this._ending = false
     this._emitMessage = false
-    var self = this
+    const self = this
     this.on('newListener', function (eventName) {
       if (eventName === 'message') {
         self._emitMessage = true
@@ -37,7 +36,7 @@
   }
 
   connect(port, host) {
-    var self = this
+    const self = this
 
     this._connecting = true
     this.stream.setNoDelay(true)
@@ -68,7 +67,7 @@
     }
 
     this.stream.once('data', function (buffer) {
-      var responseCode = buffer.toString('utf8')
+      const responseCode = buffer.toString('utf8')
       switch (responseCode) {
         case 'S': // Server supports SSL connections, continue with a secure connection
           break
@@ -92,7 +91,7 @@
         }
       }
 
-      var net = require('net')
+      const net = require('net')
       if (net.isIP && net.isIP(host) === 0) {
         options.servername = host
       }
@@ -110,7 +109,7 @@
 
   attachListeners(stream) {
     parse(stream, (msg) => {
-      var eventName = msg.name === 'error' ? 'errorMessage' : msg.name
+      const eventName = msg.name === 'error' ? 'errorMessage' : msg.name
       if (this._emitMessage) {
         this.emit('message', msg)
       }
Index: node_modules/pg/lib/utils.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict'\r\n\r\nconst defaults = require('./defaults')\r\n\r\nfunction escapeElement(elementRepresentation) {\r\n  var escaped = elementRepresentation.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"')\r\n\r\n  return '\"' + escaped + '\"'\r\n}\r\n\r\n// convert a JS array to a postgres array literal\r\n// uses comma separator so won't work for types like box that use\r\n// a different array separator.\r\nfunction arrayString(val) {\r\n  var result = '{'\r\n  for (var i = 0; i < val.length; i++) {\r\n    if (i > 0) {\r\n      result = result + ','\r\n    }\r\n    if (val[i] === null || typeof val[i] === 'undefined') {\r\n      result = result + 'NULL'\r\n    } else if (Array.isArray(val[i])) {\r\n      result = result + arrayString(val[i])\r\n    } else if (ArrayBuffer.isView(val[i])) {\r\n      var item = val[i]\r\n      if (!(item instanceof Buffer)) {\r\n        var buf = Buffer.from(item.buffer, item.byteOffset, item.byteLength)\r\n        if (buf.length === item.byteLength) {\r\n          item = buf\r\n        } else {\r\n          item = buf.slice(item.byteOffset, item.byteOffset + item.byteLength)\r\n        }\r\n      }\r\n      result += '\\\\\\\\x' + item.toString('hex')\r\n    } else {\r\n      result += escapeElement(prepareValue(val[i]))\r\n    }\r\n  }\r\n  result = result + '}'\r\n  return result\r\n}\r\n\r\n// converts values from javascript types\r\n// to their 'raw' counterparts for use as a postgres parameter\r\n// note: you can override this function to provide your own conversion mechanism\r\n// for complex types, etc...\r\nvar prepareValue = function (val, seen) {\r\n  // null and undefined are both null for postgres\r\n  if (val == null) {\r\n    return null\r\n  }\r\n  if (val instanceof Buffer) {\r\n    return val\r\n  }\r\n  if (ArrayBuffer.isView(val)) {\r\n    var buf = Buffer.from(val.buffer, val.byteOffset, val.byteLength)\r\n    if (buf.length === val.byteLength) {\r\n      return buf\r\n    }\r\n    return buf.slice(val.byteOffset, val.byteOffset + val.byteLength) // Node.js v4 does not support those Buffer.from params\r\n  }\r\n  if (val instanceof Date) {\r\n    if (defaults.parseInputDatesAsUTC) {\r\n      return dateToStringUTC(val)\r\n    } else {\r\n      return dateToString(val)\r\n    }\r\n  }\r\n  if (Array.isArray(val)) {\r\n    return arrayString(val)\r\n  }\r\n  if (typeof val === 'object') {\r\n    return prepareObject(val, seen)\r\n  }\r\n  return val.toString()\r\n}\r\n\r\nfunction prepareObject(val, seen) {\r\n  if (val && typeof val.toPostgres === 'function') {\r\n    seen = seen || []\r\n    if (seen.indexOf(val) !== -1) {\r\n      throw new Error('circular reference detected while preparing \"' + val + '\" for query')\r\n    }\r\n    seen.push(val)\r\n\r\n    return prepareValue(val.toPostgres(prepareValue), seen)\r\n  }\r\n  return JSON.stringify(val)\r\n}\r\n\r\nfunction pad(number, digits) {\r\n  number = '' + number\r\n  while (number.length < digits) {\r\n    number = '0' + number\r\n  }\r\n  return number\r\n}\r\n\r\nfunction dateToString(date) {\r\n  var offset = -date.getTimezoneOffset()\r\n\r\n  var year = date.getFullYear()\r\n  var isBCYear = year < 1\r\n  if (isBCYear) year = Math.abs(year) + 1 // negative years are 1 off their BC representation\r\n\r\n  var ret =\r\n    pad(year, 4) +\r\n    '-' +\r\n    pad(date.getMonth() + 1, 2) +\r\n    '-' +\r\n    pad(date.getDate(), 2) +\r\n    'T' +\r\n    pad(date.getHours(), 2) +\r\n    ':' +\r\n    pad(date.getMinutes(), 2) +\r\n    ':' +\r\n    pad(date.getSeconds(), 2) +\r\n    '.' +\r\n    pad(date.getMilliseconds(), 3)\r\n\r\n  if (offset < 0) {\r\n    ret += '-'\r\n    offset *= -1\r\n  } else {\r\n    ret += '+'\r\n  }\r\n\r\n  ret += pad(Math.floor(offset / 60), 2) + ':' + pad(offset % 60, 2)\r\n  if (isBCYear) ret += ' BC'\r\n  return ret\r\n}\r\n\r\nfunction dateToStringUTC(date) {\r\n  var year = date.getUTCFullYear()\r\n  var isBCYear = year < 1\r\n  if (isBCYear) year = Math.abs(year) + 1 // negative years are 1 off their BC representation\r\n\r\n  var ret =\r\n    pad(year, 4) +\r\n    '-' +\r\n    pad(date.getUTCMonth() + 1, 2) +\r\n    '-' +\r\n    pad(date.getUTCDate(), 2) +\r\n    'T' +\r\n    pad(date.getUTCHours(), 2) +\r\n    ':' +\r\n    pad(date.getUTCMinutes(), 2) +\r\n    ':' +\r\n    pad(date.getUTCSeconds(), 2) +\r\n    '.' +\r\n    pad(date.getUTCMilliseconds(), 3)\r\n\r\n  ret += '+00:00'\r\n  if (isBCYear) ret += ' BC'\r\n  return ret\r\n}\r\n\r\nfunction normalizeQueryConfig(config, values, callback) {\r\n  // can take in strings or config objects\r\n  config = typeof config === 'string' ? { text: config } : config\r\n  if (values) {\r\n    if (typeof values === 'function') {\r\n      config.callback = values\r\n    } else {\r\n      config.values = values\r\n    }\r\n  }\r\n  if (callback) {\r\n    config.callback = callback\r\n  }\r\n  return config\r\n}\r\n\r\n// Ported from PostgreSQL 9.2.4 source code in src/interfaces/libpq/fe-exec.c\r\nconst escapeIdentifier = function (str) {\r\n  return '\"' + str.replace(/\"/g, '\"\"') + '\"'\r\n}\r\n\r\nconst escapeLiteral = function (str) {\r\n  var hasBackslash = false\r\n  var escaped = \"'\"\r\n\r\n  for (var i = 0; i < str.length; i++) {\r\n    var c = str[i]\r\n    if (c === \"'\") {\r\n      escaped += c + c\r\n    } else if (c === '\\\\') {\r\n      escaped += c + c\r\n      hasBackslash = true\r\n    } else {\r\n      escaped += c\r\n    }\r\n  }\r\n\r\n  escaped += \"'\"\r\n\r\n  if (hasBackslash === true) {\r\n    escaped = ' E' + escaped\r\n  }\r\n\r\n  return escaped\r\n}\r\n\r\nmodule.exports = {\r\n  prepareValue: function prepareValueWrapper(value) {\r\n    // this ensures that extra arguments do not get passed into prepareValue\r\n    // by accident, eg: from calling values.map(utils.prepareValue)\r\n    return prepareValue(value)\r\n  },\r\n  normalizeQueryConfig,\r\n  escapeIdentifier,\r\n  escapeLiteral,\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg/lib/utils.js b/node_modules/pg/lib/utils.js
--- a/node_modules/pg/lib/utils.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg/lib/utils.js	(date 1753913035454)
@@ -2,8 +2,11 @@
 
 const defaults = require('./defaults')
 
+const util = require('util')
+const { isDate } = util.types || util // Node 8 doesn't have `util.types`
+
 function escapeElement(elementRepresentation) {
-  var escaped = elementRepresentation.replace(/\\/g, '\\\\').replace(/"/g, '\\"')
+  const escaped = elementRepresentation.replace(/\\/g, '\\\\').replace(/"/g, '\\"')
 
   return '"' + escaped + '"'
 }
@@ -12,8 +15,8 @@
 // uses comma separator so won't work for types like box that use
 // a different array separator.
 function arrayString(val) {
-  var result = '{'
-  for (var i = 0; i < val.length; i++) {
+  let result = '{'
+  for (let i = 0; i < val.length; i++) {
     if (i > 0) {
       result = result + ','
     }
@@ -22,9 +25,9 @@
     } else if (Array.isArray(val[i])) {
       result = result + arrayString(val[i])
     } else if (ArrayBuffer.isView(val[i])) {
-      var item = val[i]
+      let item = val[i]
       if (!(item instanceof Buffer)) {
-        var buf = Buffer.from(item.buffer, item.byteOffset, item.byteLength)
+        const buf = Buffer.from(item.buffer, item.byteOffset, item.byteLength)
         if (buf.length === item.byteLength) {
           item = buf
         } else {
@@ -44,32 +47,33 @@
 // to their 'raw' counterparts for use as a postgres parameter
 // note: you can override this function to provide your own conversion mechanism
 // for complex types, etc...
-var prepareValue = function (val, seen) {
+const prepareValue = function (val, seen) {
   // null and undefined are both null for postgres
   if (val == null) {
     return null
   }
-  if (val instanceof Buffer) {
-    return val
-  }
-  if (ArrayBuffer.isView(val)) {
-    var buf = Buffer.from(val.buffer, val.byteOffset, val.byteLength)
-    if (buf.length === val.byteLength) {
-      return buf
-    }
-    return buf.slice(val.byteOffset, val.byteOffset + val.byteLength) // Node.js v4 does not support those Buffer.from params
-  }
-  if (val instanceof Date) {
-    if (defaults.parseInputDatesAsUTC) {
-      return dateToStringUTC(val)
-    } else {
-      return dateToString(val)
-    }
-  }
-  if (Array.isArray(val)) {
-    return arrayString(val)
-  }
-  if (typeof val === 'object') {
+  if (typeof val === 'object') {
+    if (val instanceof Buffer) {
+      return val
+    }
+    if (ArrayBuffer.isView(val)) {
+      const buf = Buffer.from(val.buffer, val.byteOffset, val.byteLength)
+      if (buf.length === val.byteLength) {
+        return buf
+      }
+      return buf.slice(val.byteOffset, val.byteOffset + val.byteLength) // Node.js v4 does not support those Buffer.from params
+    }
+    if (isDate(val)) {
+      if (defaults.parseInputDatesAsUTC) {
+        return dateToStringUTC(val)
+      } else {
+        return dateToString(val)
+      }
+    }
+    if (Array.isArray(val)) {
+      return arrayString(val)
+    }
+
     return prepareObject(val, seen)
   }
   return val.toString()
@@ -88,35 +92,27 @@
   return JSON.stringify(val)
 }
 
-function pad(number, digits) {
-  number = '' + number
-  while (number.length < digits) {
-    number = '0' + number
-  }
-  return number
-}
-
 function dateToString(date) {
-  var offset = -date.getTimezoneOffset()
+  let offset = -date.getTimezoneOffset()
 
-  var year = date.getFullYear()
-  var isBCYear = year < 1
+  let year = date.getFullYear()
+  const isBCYear = year < 1
   if (isBCYear) year = Math.abs(year) + 1 // negative years are 1 off their BC representation
 
-  var ret =
-    pad(year, 4) +
+  let ret =
+    String(year).padStart(4, '0') +
     '-' +
-    pad(date.getMonth() + 1, 2) +
+    String(date.getMonth() + 1).padStart(2, '0') +
     '-' +
-    pad(date.getDate(), 2) +
+    String(date.getDate()).padStart(2, '0') +
     'T' +
-    pad(date.getHours(), 2) +
+    String(date.getHours()).padStart(2, '0') +
     ':' +
-    pad(date.getMinutes(), 2) +
+    String(date.getMinutes()).padStart(2, '0') +
     ':' +
-    pad(date.getSeconds(), 2) +
+    String(date.getSeconds()).padStart(2, '0') +
     '.' +
-    pad(date.getMilliseconds(), 3)
+    String(date.getMilliseconds()).padStart(3, '0')
 
   if (offset < 0) {
     ret += '-'
@@ -125,30 +121,30 @@
     ret += '+'
   }
 
-  ret += pad(Math.floor(offset / 60), 2) + ':' + pad(offset % 60, 2)
+  ret += String(Math.floor(offset / 60)).padStart(2, '0') + ':' + String(offset % 60).padStart(2, '0')
   if (isBCYear) ret += ' BC'
   return ret
 }
 
 function dateToStringUTC(date) {
-  var year = date.getUTCFullYear()
-  var isBCYear = year < 1
+  let year = date.getUTCFullYear()
+  const isBCYear = year < 1
   if (isBCYear) year = Math.abs(year) + 1 // negative years are 1 off their BC representation
 
-  var ret =
-    pad(year, 4) +
+  let ret =
+    String(year).padStart(4, '0') +
     '-' +
-    pad(date.getUTCMonth() + 1, 2) +
+    String(date.getUTCMonth() + 1).padStart(2, '0') +
     '-' +
-    pad(date.getUTCDate(), 2) +
+    String(date.getUTCDate()).padStart(2, '0') +
     'T' +
-    pad(date.getUTCHours(), 2) +
+    String(date.getUTCHours()).padStart(2, '0') +
     ':' +
-    pad(date.getUTCMinutes(), 2) +
+    String(date.getUTCMinutes()).padStart(2, '0') +
     ':' +
-    pad(date.getUTCSeconds(), 2) +
+    String(date.getUTCSeconds()).padStart(2, '0') +
     '.' +
-    pad(date.getUTCMilliseconds(), 3)
+    String(date.getUTCMilliseconds()).padStart(3, '0')
 
   ret += '+00:00'
   if (isBCYear) ret += ' BC'
@@ -177,11 +173,19 @@
 }
 
 const escapeLiteral = function (str) {
-  var hasBackslash = false
-  var escaped = "'"
+  let hasBackslash = false
+  let escaped = "'"
+
+  if (str == null) {
+    return "''"
+  }
 
-  for (var i = 0; i < str.length; i++) {
-    var c = str[i]
+  if (typeof str !== 'string') {
+    return "''"
+  }
+
+  for (let i = 0; i < str.length; i++) {
+    const c = str[i]
     if (c === "'") {
       escaped += c + c
     } else if (c === '\\') {
Index: node_modules/pg/lib/crypto/sasl.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict'\r\nconst crypto = require('./utils')\r\n\r\nfunction startSession(mechanisms) {\r\n  if (mechanisms.indexOf('SCRAM-SHA-256') === -1) {\r\n    throw new Error('SASL: Only mechanism SCRAM-SHA-256 is currently supported')\r\n  }\r\n\r\n  const clientNonce = crypto.randomBytes(18).toString('base64')\r\n\r\n  return {\r\n    mechanism: 'SCRAM-SHA-256',\r\n    clientNonce,\r\n    response: 'n,,n=*,r=' + clientNonce,\r\n    message: 'SASLInitialResponse',\r\n  }\r\n}\r\n\r\nasync function continueSession(session, password, serverData) {\r\n  if (session.message !== 'SASLInitialResponse') {\r\n    throw new Error('SASL: Last message was not SASLInitialResponse')\r\n  }\r\n  if (typeof password !== 'string') {\r\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a string')\r\n  }\r\n  if (password === '') {\r\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a non-empty string')\r\n  }\r\n  if (typeof serverData !== 'string') {\r\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: serverData must be a string')\r\n  }\r\n\r\n  const sv = parseServerFirstMessage(serverData)\r\n\r\n  if (!sv.nonce.startsWith(session.clientNonce)) {\r\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce does not start with client nonce')\r\n  } else if (sv.nonce.length === session.clientNonce.length) {\r\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce is too short')\r\n  }\r\n\r\n  var clientFirstMessageBare = 'n=*,r=' + session.clientNonce\r\n  var serverFirstMessage = 'r=' + sv.nonce + ',s=' + sv.salt + ',i=' + sv.iteration\r\n  var clientFinalMessageWithoutProof = 'c=biws,r=' + sv.nonce\r\n  var authMessage = clientFirstMessageBare + ',' + serverFirstMessage + ',' + clientFinalMessageWithoutProof\r\n\r\n  var saltBytes = Buffer.from(sv.salt, 'base64')\r\n  var saltedPassword = await crypto.deriveKey(password, saltBytes, sv.iteration)\r\n  var clientKey = await crypto.hmacSha256(saltedPassword, 'Client Key')\r\n  var storedKey = await crypto.sha256(clientKey)\r\n  var clientSignature = await crypto.hmacSha256(storedKey, authMessage)\r\n  var clientProof = xorBuffers(Buffer.from(clientKey), Buffer.from(clientSignature)).toString('base64')\r\n  var serverKey = await crypto.hmacSha256(saltedPassword, 'Server Key')\r\n  var serverSignatureBytes = await crypto.hmacSha256(serverKey, authMessage)\r\n\r\n  session.message = 'SASLResponse'\r\n  session.serverSignature = Buffer.from(serverSignatureBytes).toString('base64')\r\n  session.response = clientFinalMessageWithoutProof + ',p=' + clientProof\r\n}\r\n\r\nfunction finalizeSession(session, serverData) {\r\n  if (session.message !== 'SASLResponse') {\r\n    throw new Error('SASL: Last message was not SASLResponse')\r\n  }\r\n  if (typeof serverData !== 'string') {\r\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: serverData must be a string')\r\n  }\r\n\r\n  const { serverSignature } = parseServerFinalMessage(serverData)\r\n\r\n  if (serverSignature !== session.serverSignature) {\r\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature does not match')\r\n  }\r\n}\r\n\r\n/**\r\n * printable       = %x21-2B / %x2D-7E\r\n *                   ;; Printable ASCII except \",\".\r\n *                   ;; Note that any \"printable\" is also\r\n *                   ;; a valid \"value\".\r\n */\r\nfunction isPrintableChars(text) {\r\n  if (typeof text !== 'string') {\r\n    throw new TypeError('SASL: text must be a string')\r\n  }\r\n  return text\r\n    .split('')\r\n    .map((_, i) => text.charCodeAt(i))\r\n    .every((c) => (c >= 0x21 && c <= 0x2b) || (c >= 0x2d && c <= 0x7e))\r\n}\r\n\r\n/**\r\n * base64-char     = ALPHA / DIGIT / \"/\" / \"+\"\r\n *\r\n * base64-4        = 4base64-char\r\n *\r\n * base64-3        = 3base64-char \"=\"\r\n *\r\n * base64-2        = 2base64-char \"==\"\r\n *\r\n * base64          = *base64-4 [base64-3 / base64-2]\r\n */\r\nfunction isBase64(text) {\r\n  return /^(?:[a-zA-Z0-9+/]{4})*(?:[a-zA-Z0-9+/]{2}==|[a-zA-Z0-9+/]{3}=)?$/.test(text)\r\n}\r\n\r\nfunction parseAttributePairs(text) {\r\n  if (typeof text !== 'string') {\r\n    throw new TypeError('SASL: attribute pairs text must be a string')\r\n  }\r\n\r\n  return new Map(\r\n    text.split(',').map((attrValue) => {\r\n      if (!/^.=/.test(attrValue)) {\r\n        throw new Error('SASL: Invalid attribute pair entry')\r\n      }\r\n      const name = attrValue[0]\r\n      const value = attrValue.substring(2)\r\n      return [name, value]\r\n    })\r\n  )\r\n}\r\n\r\nfunction parseServerFirstMessage(data) {\r\n  const attrPairs = parseAttributePairs(data)\r\n\r\n  const nonce = attrPairs.get('r')\r\n  if (!nonce) {\r\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce missing')\r\n  } else if (!isPrintableChars(nonce)) {\r\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: nonce must only contain printable characters')\r\n  }\r\n  const salt = attrPairs.get('s')\r\n  if (!salt) {\r\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing')\r\n  } else if (!isBase64(salt)) {\r\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: salt must be base64')\r\n  }\r\n  const iterationText = attrPairs.get('i')\r\n  if (!iterationText) {\r\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: iteration missing')\r\n  } else if (!/^[1-9][0-9]*$/.test(iterationText)) {\r\n    throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: invalid iteration count')\r\n  }\r\n  const iteration = parseInt(iterationText, 10)\r\n\r\n  return {\r\n    nonce,\r\n    salt,\r\n    iteration,\r\n  }\r\n}\r\n\r\nfunction parseServerFinalMessage(serverData) {\r\n  const attrPairs = parseAttributePairs(serverData)\r\n  const serverSignature = attrPairs.get('v')\r\n  if (!serverSignature) {\r\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature is missing')\r\n  } else if (!isBase64(serverSignature)) {\r\n    throw new Error('SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature must be base64')\r\n  }\r\n  return {\r\n    serverSignature,\r\n  }\r\n}\r\n\r\nfunction xorBuffers(a, b) {\r\n  if (!Buffer.isBuffer(a)) {\r\n    throw new TypeError('first argument must be a Buffer')\r\n  }\r\n  if (!Buffer.isBuffer(b)) {\r\n    throw new TypeError('second argument must be a Buffer')\r\n  }\r\n  if (a.length !== b.length) {\r\n    throw new Error('Buffer lengths must match')\r\n  }\r\n  if (a.length === 0) {\r\n    throw new Error('Buffers cannot be empty')\r\n  }\r\n  return Buffer.from(a.map((_, i) => a[i] ^ b[i]))\r\n}\r\n\r\nmodule.exports = {\r\n  startSession,\r\n  continueSession,\r\n  finalizeSession,\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg/lib/crypto/sasl.js b/node_modules/pg/lib/crypto/sasl.js
--- a/node_modules/pg/lib/crypto/sasl.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg/lib/crypto/sasl.js	(date 1753913035447)
@@ -1,22 +1,34 @@
 'use strict'
 const crypto = require('./utils')
+const { signatureAlgorithmHashFromCertificate } = require('./cert-signatures')
+
+function startSession(mechanisms, stream) {
+  const candidates = ['SCRAM-SHA-256']
+  if (stream) candidates.unshift('SCRAM-SHA-256-PLUS') // higher-priority, so placed first
 
-function startSession(mechanisms) {
-  if (mechanisms.indexOf('SCRAM-SHA-256') === -1) {
-    throw new Error('SASL: Only mechanism SCRAM-SHA-256 is currently supported')
+  const mechanism = candidates.find((candidate) => mechanisms.includes(candidate))
+
+  if (!mechanism) {
+    throw new Error('SASL: Only mechanism(s) ' + candidates.join(' and ') + ' are supported')
+  }
+
+  if (mechanism === 'SCRAM-SHA-256-PLUS' && typeof stream.getPeerCertificate !== 'function') {
+    // this should never happen if we are really talking to a Postgres server
+    throw new Error('SASL: Mechanism SCRAM-SHA-256-PLUS requires a certificate')
   }
 
   const clientNonce = crypto.randomBytes(18).toString('base64')
+  const gs2Header = mechanism === 'SCRAM-SHA-256-PLUS' ? 'p=tls-server-end-point' : stream ? 'y' : 'n'
 
   return {
-    mechanism: 'SCRAM-SHA-256',
+    mechanism,
     clientNonce,
-    response: 'n,,n=*,r=' + clientNonce,
+    response: gs2Header + ',,n=*,r=' + clientNonce,
     message: 'SASLInitialResponse',
   }
 }
 
-async function continueSession(session, password, serverData) {
+async function continueSession(session, password, serverData, stream) {
   if (session.message !== 'SASLInitialResponse') {
     throw new Error('SASL: Last message was not SASLInitialResponse')
   }
@@ -38,19 +50,33 @@
     throw new Error('SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce is too short')
   }
 
-  var clientFirstMessageBare = 'n=*,r=' + session.clientNonce
-  var serverFirstMessage = 'r=' + sv.nonce + ',s=' + sv.salt + ',i=' + sv.iteration
-  var clientFinalMessageWithoutProof = 'c=biws,r=' + sv.nonce
-  var authMessage = clientFirstMessageBare + ',' + serverFirstMessage + ',' + clientFinalMessageWithoutProof
+  const clientFirstMessageBare = 'n=*,r=' + session.clientNonce
+  const serverFirstMessage = 'r=' + sv.nonce + ',s=' + sv.salt + ',i=' + sv.iteration
+
+  // without channel binding:
+  let channelBinding = stream ? 'eSws' : 'biws' // 'y,,' or 'n,,', base64-encoded
 
-  var saltBytes = Buffer.from(sv.salt, 'base64')
-  var saltedPassword = await crypto.deriveKey(password, saltBytes, sv.iteration)
-  var clientKey = await crypto.hmacSha256(saltedPassword, 'Client Key')
-  var storedKey = await crypto.sha256(clientKey)
-  var clientSignature = await crypto.hmacSha256(storedKey, authMessage)
-  var clientProof = xorBuffers(Buffer.from(clientKey), Buffer.from(clientSignature)).toString('base64')
-  var serverKey = await crypto.hmacSha256(saltedPassword, 'Server Key')
-  var serverSignatureBytes = await crypto.hmacSha256(serverKey, authMessage)
+  // override if channel binding is in use:
+  if (session.mechanism === 'SCRAM-SHA-256-PLUS') {
+    const peerCert = stream.getPeerCertificate().raw
+    let hashName = signatureAlgorithmHashFromCertificate(peerCert)
+    if (hashName === 'MD5' || hashName === 'SHA-1') hashName = 'SHA-256'
+    const certHash = await crypto.hashByName(hashName, peerCert)
+    const bindingData = Buffer.concat([Buffer.from('p=tls-server-end-point,,'), Buffer.from(certHash)])
+    channelBinding = bindingData.toString('base64')
+  }
+
+  const clientFinalMessageWithoutProof = 'c=' + channelBinding + ',r=' + sv.nonce
+  const authMessage = clientFirstMessageBare + ',' + serverFirstMessage + ',' + clientFinalMessageWithoutProof
+
+  const saltBytes = Buffer.from(sv.salt, 'base64')
+  const saltedPassword = await crypto.deriveKey(password, saltBytes, sv.iteration)
+  const clientKey = await crypto.hmacSha256(saltedPassword, 'Client Key')
+  const storedKey = await crypto.sha256(clientKey)
+  const clientSignature = await crypto.hmacSha256(storedKey, authMessage)
+  const clientProof = xorBuffers(Buffer.from(clientKey), Buffer.from(clientSignature)).toString('base64')
+  const serverKey = await crypto.hmacSha256(saltedPassword, 'Server Key')
+  const serverSignatureBytes = await crypto.hmacSha256(serverKey, authMessage)
 
   session.message = 'SASLResponse'
   session.serverSignature = Buffer.from(serverSignatureBytes).toString('base64')
Index: node_modules/pg/lib/crypto/utils-legacy.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict'\r\n// This file contains crypto utility functions for versions of Node.js < 15.0.0,\r\n// which does not support the WebCrypto.subtle API.\r\n\r\nconst nodeCrypto = require('crypto')\r\n\r\nfunction md5(string) {\r\n  return nodeCrypto.createHash('md5').update(string, 'utf-8').digest('hex')\r\n}\r\n\r\n// See AuthenticationMD5Password at https://www.postgresql.org/docs/current/static/protocol-flow.html\r\nfunction postgresMd5PasswordHash(user, password, salt) {\r\n  var inner = md5(password + user)\r\n  var outer = md5(Buffer.concat([Buffer.from(inner), salt]))\r\n  return 'md5' + outer\r\n}\r\n\r\nfunction sha256(text) {\r\n  return nodeCrypto.createHash('sha256').update(text).digest()\r\n}\r\n\r\nfunction hmacSha256(key, msg) {\r\n  return nodeCrypto.createHmac('sha256', key).update(msg).digest()\r\n}\r\n\r\nasync function deriveKey(password, salt, iterations) {\r\n  return nodeCrypto.pbkdf2Sync(password, salt, iterations, 32, 'sha256')\r\n}\r\n\r\nmodule.exports = {\r\n  postgresMd5PasswordHash,\r\n  randomBytes: nodeCrypto.randomBytes,\r\n  deriveKey,\r\n  sha256,\r\n  hmacSha256,\r\n  md5,\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg/lib/crypto/utils-legacy.js b/node_modules/pg/lib/crypto/utils-legacy.js
--- a/node_modules/pg/lib/crypto/utils-legacy.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg/lib/crypto/utils-legacy.js	(date 1753913035451)
@@ -10,8 +10,8 @@
 
 // See AuthenticationMD5Password at https://www.postgresql.org/docs/current/static/protocol-flow.html
 function postgresMd5PasswordHash(user, password, salt) {
-  var inner = md5(password + user)
-  var outer = md5(Buffer.concat([Buffer.from(inner), salt]))
+  const inner = md5(password + user)
+  const outer = md5(Buffer.concat([Buffer.from(inner), salt]))
   return 'md5' + outer
 }
 
@@ -19,6 +19,11 @@
   return nodeCrypto.createHash('sha256').update(text).digest()
 }
 
+function hashByName(hashName, text) {
+  hashName = hashName.replace(/(\D)-/, '$1') // e.g. SHA-256 -> SHA256
+  return nodeCrypto.createHash(hashName).update(text).digest()
+}
+
 function hmacSha256(key, msg) {
   return nodeCrypto.createHmac('sha256', key).update(msg).digest()
 }
@@ -32,6 +37,7 @@
   randomBytes: nodeCrypto.randomBytes,
   deriveKey,
   sha256,
+  hashByName,
   hmacSha256,
   md5,
 }
Index: node_modules/pg/lib/crypto/utils-webcrypto.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>const nodeCrypto = require('crypto')\r\n\r\nmodule.exports = {\r\n  postgresMd5PasswordHash,\r\n  randomBytes,\r\n  deriveKey,\r\n  sha256,\r\n  hmacSha256,\r\n  md5,\r\n}\r\n\r\n/**\r\n * The Web Crypto API - grabbed from the Node.js library or the global\r\n * @type Crypto\r\n */\r\nconst webCrypto = nodeCrypto.webcrypto || globalThis.crypto\r\n/**\r\n * The SubtleCrypto API for low level crypto operations.\r\n * @type SubtleCrypto\r\n */\r\nconst subtleCrypto = webCrypto.subtle\r\nconst textEncoder = new TextEncoder()\r\n\r\n/**\r\n *\r\n * @param {*} length\r\n * @returns\r\n */\r\nfunction randomBytes(length) {\r\n  return webCrypto.getRandomValues(Buffer.alloc(length))\r\n}\r\n\r\nasync function md5(string) {\r\n  try {\r\n    return nodeCrypto.createHash('md5').update(string, 'utf-8').digest('hex')\r\n  } catch (e) {\r\n    // `createHash()` failed so we are probably not in Node.js, use the WebCrypto API instead.\r\n    // Note that the MD5 algorithm on WebCrypto is not available in Node.js.\r\n    // This is why we cannot just use WebCrypto in all environments.\r\n    const data = typeof string === 'string' ? textEncoder.encode(string) : string\r\n    const hash = await subtleCrypto.digest('MD5', data)\r\n    return Array.from(new Uint8Array(hash))\r\n      .map((b) => b.toString(16).padStart(2, '0'))\r\n      .join('')\r\n  }\r\n}\r\n\r\n// See AuthenticationMD5Password at https://www.postgresql.org/docs/current/static/protocol-flow.html\r\nasync function postgresMd5PasswordHash(user, password, salt) {\r\n  var inner = await md5(password + user)\r\n  var outer = await md5(Buffer.concat([Buffer.from(inner), salt]))\r\n  return 'md5' + outer\r\n}\r\n\r\n/**\r\n * Create a SHA-256 digest of the given data\r\n * @param {Buffer} data\r\n */\r\nasync function sha256(text) {\r\n  return await subtleCrypto.digest('SHA-256', text)\r\n}\r\n\r\n/**\r\n * Sign the message with the given key\r\n * @param {ArrayBuffer} keyBuffer\r\n * @param {string} msg\r\n */\r\nasync function hmacSha256(keyBuffer, msg) {\r\n  const key = await subtleCrypto.importKey('raw', keyBuffer, { name: 'HMAC', hash: 'SHA-256' }, false, ['sign'])\r\n  return await subtleCrypto.sign('HMAC', key, textEncoder.encode(msg))\r\n}\r\n\r\n/**\r\n * Derive a key from the password and salt\r\n * @param {string} password\r\n * @param {Uint8Array} salt\r\n * @param {number} iterations\r\n */\r\nasync function deriveKey(password, salt, iterations) {\r\n  const key = await subtleCrypto.importKey('raw', textEncoder.encode(password), 'PBKDF2', false, ['deriveBits'])\r\n  const params = { name: 'PBKDF2', hash: 'SHA-256', salt: salt, iterations: iterations }\r\n  return await subtleCrypto.deriveBits(params, key, 32 * 8, ['deriveBits'])\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg/lib/crypto/utils-webcrypto.js b/node_modules/pg/lib/crypto/utils-webcrypto.js
--- a/node_modules/pg/lib/crypto/utils-webcrypto.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg/lib/crypto/utils-webcrypto.js	(date 1753913035452)
@@ -5,6 +5,7 @@
   randomBytes,
   deriveKey,
   sha256,
+  hashByName,
   hmacSha256,
   md5,
 }
@@ -13,6 +14,7 @@
  * The Web Crypto API - grabbed from the Node.js library or the global
  * @type Crypto
  */
+// eslint-disable-next-line no-undef
 const webCrypto = nodeCrypto.webcrypto || globalThis.crypto
 /**
  * The SubtleCrypto API for low level crypto operations.
@@ -47,8 +49,8 @@
 
 // See AuthenticationMD5Password at https://www.postgresql.org/docs/current/static/protocol-flow.html
 async function postgresMd5PasswordHash(user, password, salt) {
-  var inner = await md5(password + user)
-  var outer = await md5(Buffer.concat([Buffer.from(inner), salt]))
+  const inner = await md5(password + user)
+  const outer = await md5(Buffer.concat([Buffer.from(inner), salt]))
   return 'md5' + outer
 }
 
@@ -60,6 +62,10 @@
   return await subtleCrypto.digest('SHA-256', text)
 }
 
+async function hashByName(hashName, text) {
+  return await subtleCrypto.digest(hashName, text)
+}
+
 /**
  * Sign the message with the given key
  * @param {ArrayBuffer} keyBuffer
Index: node_modules/pg/lib/native/query.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict'\r\n\r\nvar EventEmitter = require('events').EventEmitter\r\nvar util = require('util')\r\nvar utils = require('../utils')\r\n\r\nvar NativeQuery = (module.exports = function (config, values, callback) {\r\n  EventEmitter.call(this)\r\n  config = utils.normalizeQueryConfig(config, values, callback)\r\n  this.text = config.text\r\n  this.values = config.values\r\n  this.name = config.name\r\n  this.callback = config.callback\r\n  this.state = 'new'\r\n  this._arrayMode = config.rowMode === 'array'\r\n\r\n  // if the 'row' event is listened for\r\n  // then emit them as they come in\r\n  // without setting singleRowMode to true\r\n  // this has almost no meaning because libpq\r\n  // reads all rows into memory befor returning any\r\n  this._emitRowEvents = false\r\n  this.on(\r\n    'newListener',\r\n    function (event) {\r\n      if (event === 'row') this._emitRowEvents = true\r\n    }.bind(this)\r\n  )\r\n})\r\n\r\nutil.inherits(NativeQuery, EventEmitter)\r\n\r\nvar errorFieldMap = {\r\n  /* eslint-disable quote-props */\r\n  sqlState: 'code',\r\n  statementPosition: 'position',\r\n  messagePrimary: 'message',\r\n  context: 'where',\r\n  schemaName: 'schema',\r\n  tableName: 'table',\r\n  columnName: 'column',\r\n  dataTypeName: 'dataType',\r\n  constraintName: 'constraint',\r\n  sourceFile: 'file',\r\n  sourceLine: 'line',\r\n  sourceFunction: 'routine',\r\n}\r\n\r\nNativeQuery.prototype.handleError = function (err) {\r\n  // copy pq error fields into the error object\r\n  var fields = this.native.pq.resultErrorFields()\r\n  if (fields) {\r\n    for (var key in fields) {\r\n      var normalizedFieldName = errorFieldMap[key] || key\r\n      err[normalizedFieldName] = fields[key]\r\n    }\r\n  }\r\n  if (this.callback) {\r\n    this.callback(err)\r\n  } else {\r\n    this.emit('error', err)\r\n  }\r\n  this.state = 'error'\r\n}\r\n\r\nNativeQuery.prototype.then = function (onSuccess, onFailure) {\r\n  return this._getPromise().then(onSuccess, onFailure)\r\n}\r\n\r\nNativeQuery.prototype.catch = function (callback) {\r\n  return this._getPromise().catch(callback)\r\n}\r\n\r\nNativeQuery.prototype._getPromise = function () {\r\n  if (this._promise) return this._promise\r\n  this._promise = new Promise(\r\n    function (resolve, reject) {\r\n      this._once('end', resolve)\r\n      this._once('error', reject)\r\n    }.bind(this)\r\n  )\r\n  return this._promise\r\n}\r\n\r\nNativeQuery.prototype.submit = function (client) {\r\n  this.state = 'running'\r\n  var self = this\r\n  this.native = client.native\r\n  client.native.arrayMode = this._arrayMode\r\n\r\n  var after = function (err, rows, results) {\r\n    client.native.arrayMode = false\r\n    setImmediate(function () {\r\n      self.emit('_done')\r\n    })\r\n\r\n    // handle possible query error\r\n    if (err) {\r\n      return self.handleError(err)\r\n    }\r\n\r\n    // emit row events for each row in the result\r\n    if (self._emitRowEvents) {\r\n      if (results.length > 1) {\r\n        rows.forEach((rowOfRows, i) => {\r\n          rowOfRows.forEach((row) => {\r\n            self.emit('row', row, results[i])\r\n          })\r\n        })\r\n      } else {\r\n        rows.forEach(function (row) {\r\n          self.emit('row', row, results)\r\n        })\r\n      }\r\n    }\r\n\r\n    // handle successful result\r\n    self.state = 'end'\r\n    self.emit('end', results)\r\n    if (self.callback) {\r\n      self.callback(null, results)\r\n    }\r\n  }\r\n\r\n  if (process.domain) {\r\n    after = process.domain.bind(after)\r\n  }\r\n\r\n  // named query\r\n  if (this.name) {\r\n    if (this.name.length > 63) {\r\n      /* eslint-disable no-console */\r\n      console.error('Warning! Postgres only supports 63 characters for query names.')\r\n      console.error('You supplied %s (%s)', this.name, this.name.length)\r\n      console.error('This can cause conflicts and silent errors executing queries')\r\n      /* eslint-enable no-console */\r\n    }\r\n    var values = (this.values || []).map(utils.prepareValue)\r\n\r\n    // check if the client has already executed this named query\r\n    // if so...just execute it again - skip the planning phase\r\n    if (client.namedQueries[this.name]) {\r\n      if (this.text && client.namedQueries[this.name] !== this.text) {\r\n        const err = new Error(`Prepared statements must be unique - '${this.name}' was used for a different statement`)\r\n        return after(err)\r\n      }\r\n      return client.native.execute(this.name, values, after)\r\n    }\r\n    // plan the named query the first time, then execute it\r\n    return client.native.prepare(this.name, this.text, values.length, function (err) {\r\n      if (err) return after(err)\r\n      client.namedQueries[self.name] = self.text\r\n      return self.native.execute(self.name, values, after)\r\n    })\r\n  } else if (this.values) {\r\n    if (!Array.isArray(this.values)) {\r\n      const err = new Error('Query values must be an array')\r\n      return after(err)\r\n    }\r\n    var vals = this.values.map(utils.prepareValue)\r\n    client.native.query(this.text, vals, after)\r\n  } else {\r\n    client.native.query(this.text, after)\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg/lib/native/query.js b/node_modules/pg/lib/native/query.js
--- a/node_modules/pg/lib/native/query.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg/lib/native/query.js	(date 1753913035432)
@@ -1,15 +1,16 @@
 'use strict'
 
-var EventEmitter = require('events').EventEmitter
-var util = require('util')
-var utils = require('../utils')
+const EventEmitter = require('events').EventEmitter
+const util = require('util')
+const utils = require('../utils')
 
-var NativeQuery = (module.exports = function (config, values, callback) {
+const NativeQuery = (module.exports = function (config, values, callback) {
   EventEmitter.call(this)
   config = utils.normalizeQueryConfig(config, values, callback)
   this.text = config.text
   this.values = config.values
   this.name = config.name
+  this.queryMode = config.queryMode
   this.callback = config.callback
   this.state = 'new'
   this._arrayMode = config.rowMode === 'array'
@@ -18,7 +19,7 @@
   // then emit them as they come in
   // without setting singleRowMode to true
   // this has almost no meaning because libpq
-  // reads all rows into memory befor returning any
+  // reads all rows into memory before returning any
   this._emitRowEvents = false
   this.on(
     'newListener',
@@ -30,8 +31,7 @@
 
 util.inherits(NativeQuery, EventEmitter)
 
-var errorFieldMap = {
-  /* eslint-disable quote-props */
+const errorFieldMap = {
   sqlState: 'code',
   statementPosition: 'position',
   messagePrimary: 'message',
@@ -48,10 +48,10 @@
 
 NativeQuery.prototype.handleError = function (err) {
   // copy pq error fields into the error object
-  var fields = this.native.pq.resultErrorFields()
+  const fields = this.native.pq.resultErrorFields()
   if (fields) {
-    for (var key in fields) {
-      var normalizedFieldName = errorFieldMap[key] || key
+    for (const key in fields) {
+      const normalizedFieldName = errorFieldMap[key] || key
       err[normalizedFieldName] = fields[key]
     }
   }
@@ -84,11 +84,11 @@
 
 NativeQuery.prototype.submit = function (client) {
   this.state = 'running'
-  var self = this
+  const self = this
   this.native = client.native
   client.native.arrayMode = this._arrayMode
 
-  var after = function (err, rows, results) {
+  let after = function (err, rows, results) {
     client.native.arrayMode = false
     setImmediate(function () {
       self.emit('_done')
@@ -129,13 +129,11 @@
   // named query
   if (this.name) {
     if (this.name.length > 63) {
-      /* eslint-disable no-console */
       console.error('Warning! Postgres only supports 63 characters for query names.')
       console.error('You supplied %s (%s)', this.name, this.name.length)
       console.error('This can cause conflicts and silent errors executing queries')
-      /* eslint-enable no-console */
     }
-    var values = (this.values || []).map(utils.prepareValue)
+    const values = (this.values || []).map(utils.prepareValue)
 
     // check if the client has already executed this named query
     // if so...just execute it again - skip the planning phase
@@ -157,8 +155,10 @@
       const err = new Error('Query values must be an array')
       return after(err)
     }
-    var vals = this.values.map(utils.prepareValue)
+    const vals = this.values.map(utils.prepareValue)
     client.native.query(this.text, vals, after)
+  } else if (this.queryMode === 'extended') {
+    client.native.query(this.text, [], after)
   } else {
     client.native.query(this.text, after)
   }
Index: node_modules/pg/lib/native/client.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict'\r\n\r\n// eslint-disable-next-line\r\nvar Native\r\ntry {\r\n  // Wrap this `require()` in a try-catch to avoid upstream bundlers from complaining that this might not be available since it is an optional import\r\n  Native = require('pg-native')\r\n} catch (e) {\r\n  throw e\r\n}\r\nvar TypeOverrides = require('../type-overrides')\r\nvar EventEmitter = require('events').EventEmitter\r\nvar util = require('util')\r\nvar ConnectionParameters = require('../connection-parameters')\r\n\r\nvar NativeQuery = require('./query')\r\n\r\nvar Client = (module.exports = function (config) {\r\n  EventEmitter.call(this)\r\n  config = config || {}\r\n\r\n  this._Promise = config.Promise || global.Promise\r\n  this._types = new TypeOverrides(config.types)\r\n\r\n  this.native = new Native({\r\n    types: this._types,\r\n  })\r\n\r\n  this._queryQueue = []\r\n  this._ending = false\r\n  this._connecting = false\r\n  this._connected = false\r\n  this._queryable = true\r\n\r\n  // keep these on the object for legacy reasons\r\n  // for the time being. TODO: deprecate all this jazz\r\n  var cp = (this.connectionParameters = new ConnectionParameters(config))\r\n  if (config.nativeConnectionString) cp.nativeConnectionString = config.nativeConnectionString\r\n  this.user = cp.user\r\n\r\n  // \"hiding\" the password so it doesn't show up in stack traces\r\n  // or if the client is console.logged\r\n  Object.defineProperty(this, 'password', {\r\n    configurable: true,\r\n    enumerable: false,\r\n    writable: true,\r\n    value: cp.password,\r\n  })\r\n  this.database = cp.database\r\n  this.host = cp.host\r\n  this.port = cp.port\r\n\r\n  // a hash to hold named queries\r\n  this.namedQueries = {}\r\n})\r\n\r\nClient.Query = NativeQuery\r\n\r\nutil.inherits(Client, EventEmitter)\r\n\r\nClient.prototype._errorAllQueries = function (err) {\r\n  const enqueueError = (query) => {\r\n    process.nextTick(() => {\r\n      query.native = this.native\r\n      query.handleError(err)\r\n    })\r\n  }\r\n\r\n  if (this._hasActiveQuery()) {\r\n    enqueueError(this._activeQuery)\r\n    this._activeQuery = null\r\n  }\r\n\r\n  this._queryQueue.forEach(enqueueError)\r\n  this._queryQueue.length = 0\r\n}\r\n\r\n// connect to the backend\r\n// pass an optional callback to be called once connected\r\n// or with an error if there was a connection error\r\nClient.prototype._connect = function (cb) {\r\n  var self = this\r\n\r\n  if (this._connecting) {\r\n    process.nextTick(() => cb(new Error('Client has already been connected. You cannot reuse a client.')))\r\n    return\r\n  }\r\n\r\n  this._connecting = true\r\n\r\n  this.connectionParameters.getLibpqConnectionString(function (err, conString) {\r\n    if (self.connectionParameters.nativeConnectionString) conString = self.connectionParameters.nativeConnectionString\r\n    if (err) return cb(err)\r\n    self.native.connect(conString, function (err) {\r\n      if (err) {\r\n        self.native.end()\r\n        return cb(err)\r\n      }\r\n\r\n      // set internal states to connected\r\n      self._connected = true\r\n\r\n      // handle connection errors from the native layer\r\n      self.native.on('error', function (err) {\r\n        self._queryable = false\r\n        self._errorAllQueries(err)\r\n        self.emit('error', err)\r\n      })\r\n\r\n      self.native.on('notification', function (msg) {\r\n        self.emit('notification', {\r\n          channel: msg.relname,\r\n          payload: msg.extra,\r\n        })\r\n      })\r\n\r\n      // signal we are connected now\r\n      self.emit('connect')\r\n      self._pulseQueryQueue(true)\r\n\r\n      cb()\r\n    })\r\n  })\r\n}\r\n\r\nClient.prototype.connect = function (callback) {\r\n  if (callback) {\r\n    this._connect(callback)\r\n    return\r\n  }\r\n\r\n  return new this._Promise((resolve, reject) => {\r\n    this._connect((error) => {\r\n      if (error) {\r\n        reject(error)\r\n      } else {\r\n        resolve()\r\n      }\r\n    })\r\n  })\r\n}\r\n\r\n// send a query to the server\r\n// this method is highly overloaded to take\r\n// 1) string query, optional array of parameters, optional function callback\r\n// 2) object query with {\r\n//    string query\r\n//    optional array values,\r\n//    optional function callback instead of as a separate parameter\r\n//    optional string name to name & cache the query plan\r\n//    optional string rowMode = 'array' for an array of results\r\n//  }\r\nClient.prototype.query = function (config, values, callback) {\r\n  var query\r\n  var result\r\n  var readTimeout\r\n  var readTimeoutTimer\r\n  var queryCallback\r\n\r\n  if (config === null || config === undefined) {\r\n    throw new TypeError('Client was passed a null or undefined query')\r\n  } else if (typeof config.submit === 'function') {\r\n    readTimeout = config.query_timeout || this.connectionParameters.query_timeout\r\n    result = query = config\r\n    // accept query(new Query(...), (err, res) => { }) style\r\n    if (typeof values === 'function') {\r\n      config.callback = values\r\n    }\r\n  } else {\r\n    readTimeout = this.connectionParameters.query_timeout\r\n    query = new NativeQuery(config, values, callback)\r\n    if (!query.callback) {\r\n      let resolveOut, rejectOut\r\n      result = new this._Promise((resolve, reject) => {\r\n        resolveOut = resolve\r\n        rejectOut = reject\r\n      }).catch((err) => {\r\n        Error.captureStackTrace(err)\r\n        throw err\r\n      })\r\n      query.callback = (err, res) => (err ? rejectOut(err) : resolveOut(res))\r\n    }\r\n  }\r\n\r\n  if (readTimeout) {\r\n    queryCallback = query.callback\r\n\r\n    readTimeoutTimer = setTimeout(() => {\r\n      var error = new Error('Query read timeout')\r\n\r\n      process.nextTick(() => {\r\n        query.handleError(error, this.connection)\r\n      })\r\n\r\n      queryCallback(error)\r\n\r\n      // we already returned an error,\r\n      // just do nothing if query completes\r\n      query.callback = () => {}\r\n\r\n      // Remove from queue\r\n      var index = this._queryQueue.indexOf(query)\r\n      if (index > -1) {\r\n        this._queryQueue.splice(index, 1)\r\n      }\r\n\r\n      this._pulseQueryQueue()\r\n    }, readTimeout)\r\n\r\n    query.callback = (err, res) => {\r\n      clearTimeout(readTimeoutTimer)\r\n      queryCallback(err, res)\r\n    }\r\n  }\r\n\r\n  if (!this._queryable) {\r\n    query.native = this.native\r\n    process.nextTick(() => {\r\n      query.handleError(new Error('Client has encountered a connection error and is not queryable'))\r\n    })\r\n    return result\r\n  }\r\n\r\n  if (this._ending) {\r\n    query.native = this.native\r\n    process.nextTick(() => {\r\n      query.handleError(new Error('Client was closed and is not queryable'))\r\n    })\r\n    return result\r\n  }\r\n\r\n  this._queryQueue.push(query)\r\n  this._pulseQueryQueue()\r\n  return result\r\n}\r\n\r\n// disconnect from the backend server\r\nClient.prototype.end = function (cb) {\r\n  var self = this\r\n\r\n  this._ending = true\r\n\r\n  if (!this._connected) {\r\n    this.once('connect', this.end.bind(this, cb))\r\n  }\r\n  var result\r\n  if (!cb) {\r\n    result = new this._Promise(function (resolve, reject) {\r\n      cb = (err) => (err ? reject(err) : resolve())\r\n    })\r\n  }\r\n  this.native.end(function () {\r\n    self._errorAllQueries(new Error('Connection terminated'))\r\n\r\n    process.nextTick(() => {\r\n      self.emit('end')\r\n      if (cb) cb()\r\n    })\r\n  })\r\n  return result\r\n}\r\n\r\nClient.prototype._hasActiveQuery = function () {\r\n  return this._activeQuery && this._activeQuery.state !== 'error' && this._activeQuery.state !== 'end'\r\n}\r\n\r\nClient.prototype._pulseQueryQueue = function (initialConnection) {\r\n  if (!this._connected) {\r\n    return\r\n  }\r\n  if (this._hasActiveQuery()) {\r\n    return\r\n  }\r\n  var query = this._queryQueue.shift()\r\n  if (!query) {\r\n    if (!initialConnection) {\r\n      this.emit('drain')\r\n    }\r\n    return\r\n  }\r\n  this._activeQuery = query\r\n  query.submit(this)\r\n  var self = this\r\n  query.once('_done', function () {\r\n    self._pulseQueryQueue()\r\n  })\r\n}\r\n\r\n// attempt to cancel an in-progress query\r\nClient.prototype.cancel = function (query) {\r\n  if (this._activeQuery === query) {\r\n    this.native.cancel(function () {})\r\n  } else if (this._queryQueue.indexOf(query) !== -1) {\r\n    this._queryQueue.splice(this._queryQueue.indexOf(query), 1)\r\n  }\r\n}\r\n\r\nClient.prototype.ref = function () {}\r\nClient.prototype.unref = function () {}\r\n\r\nClient.prototype.setTypeParser = function (oid, format, parseFn) {\r\n  return this._types.setTypeParser(oid, format, parseFn)\r\n}\r\n\r\nClient.prototype.getTypeParser = function (oid, format) {\r\n  return this._types.getTypeParser(oid, format)\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/pg/lib/native/client.js b/node_modules/pg/lib/native/client.js
--- a/node_modules/pg/lib/native/client.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/pg/lib/native/client.js	(date 1753913035427)
@@ -2,20 +2,21 @@
 
 // eslint-disable-next-line
 var Native
+// eslint-disable-next-line no-useless-catch
 try {
   // Wrap this `require()` in a try-catch to avoid upstream bundlers from complaining that this might not be available since it is an optional import
   Native = require('pg-native')
 } catch (e) {
   throw e
 }
-var TypeOverrides = require('../type-overrides')
-var EventEmitter = require('events').EventEmitter
-var util = require('util')
-var ConnectionParameters = require('../connection-parameters')
+const TypeOverrides = require('../type-overrides')
+const EventEmitter = require('events').EventEmitter
+const util = require('util')
+const ConnectionParameters = require('../connection-parameters')
 
-var NativeQuery = require('./query')
+const NativeQuery = require('./query')
 
-var Client = (module.exports = function (config) {
+const Client = (module.exports = function (config) {
   EventEmitter.call(this)
   config = config || {}
 
@@ -34,7 +35,7 @@
 
   // keep these on the object for legacy reasons
   // for the time being. TODO: deprecate all this jazz
-  var cp = (this.connectionParameters = new ConnectionParameters(config))
+  const cp = (this.connectionParameters = new ConnectionParameters(config))
   if (config.nativeConnectionString) cp.nativeConnectionString = config.nativeConnectionString
   this.user = cp.user
 
@@ -79,7 +80,7 @@
 // pass an optional callback to be called once connected
 // or with an error if there was a connection error
 Client.prototype._connect = function (cb) {
-  var self = this
+  const self = this
 
   if (this._connecting) {
     process.nextTick(() => cb(new Error('Client has already been connected. You cannot reuse a client.')))
@@ -151,11 +152,11 @@
 //    optional string rowMode = 'array' for an array of results
 //  }
 Client.prototype.query = function (config, values, callback) {
-  var query
-  var result
-  var readTimeout
-  var readTimeoutTimer
-  var queryCallback
+  let query
+  let result
+  let readTimeout
+  let readTimeoutTimer
+  let queryCallback
 
   if (config === null || config === undefined) {
     throw new TypeError('Client was passed a null or undefined query')
@@ -167,7 +168,7 @@
       config.callback = values
     }
   } else {
-    readTimeout = this.connectionParameters.query_timeout
+    readTimeout = config.query_timeout || this.connectionParameters.query_timeout
     query = new NativeQuery(config, values, callback)
     if (!query.callback) {
       let resolveOut, rejectOut
@@ -186,7 +187,7 @@
     queryCallback = query.callback
 
     readTimeoutTimer = setTimeout(() => {
-      var error = new Error('Query read timeout')
+      const error = new Error('Query read timeout')
 
       process.nextTick(() => {
         query.handleError(error, this.connection)
@@ -199,7 +200,7 @@
       query.callback = () => {}
 
       // Remove from queue
-      var index = this._queryQueue.indexOf(query)
+      const index = this._queryQueue.indexOf(query)
       if (index > -1) {
         this._queryQueue.splice(index, 1)
       }
@@ -236,14 +237,14 @@
 
 // disconnect from the backend server
 Client.prototype.end = function (cb) {
-  var self = this
+  const self = this
 
   this._ending = true
 
   if (!this._connected) {
     this.once('connect', this.end.bind(this, cb))
   }
-  var result
+  let result
   if (!cb) {
     result = new this._Promise(function (resolve, reject) {
       cb = (err) => (err ? reject(err) : resolve())
@@ -271,7 +272,7 @@
   if (this._hasActiveQuery()) {
     return
   }
-  var query = this._queryQueue.shift()
+  const query = this._queryQueue.shift()
   if (!query) {
     if (!initialConnection) {
       this.emit('drain')
@@ -280,7 +281,7 @@
   }
   this._activeQuery = query
   query.submit(this)
-  var self = this
+  const self = this
   query.once('_done', function () {
     self._pulseQueryQueue()
   })
Index: node_modules/qs/.eslintrc
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n    \"root\": true,\r\n\r\n    \"extends\": \"@ljharb\",\r\n\r\n    \"ignorePatterns\": [\r\n        \"dist/\",\r\n    ],\r\n\r\n    \"rules\": {\r\n        \"complexity\": 0,\r\n        \"consistent-return\": 1,\r\n        \"func-name-matching\": 0,\r\n        \"id-length\": [2, { \"min\": 1, \"max\": 25, \"properties\": \"never\" }],\r\n        \"indent\": [2, 4],\r\n        \"max-lines-per-function\": [2, { \"max\": 150 }],\r\n        \"max-params\": [2, 16],\r\n        \"max-statements\": [2, 53],\r\n        \"multiline-comment-style\": 0,\r\n        \"no-continue\": 1,\r\n        \"no-magic-numbers\": 0,\r\n        \"no-restricted-syntax\": [2, \"BreakStatement\", \"DebuggerStatement\", \"ForInStatement\", \"LabeledStatement\", \"WithStatement\"],\r\n    },\r\n\r\n    \"overrides\": [\r\n        {\r\n            \"files\": \"test/**\",\r\n            \"rules\": {\r\n                \"function-paren-newline\": 0,\r\n                \"max-lines-per-function\": 0,\r\n                \"max-statements\": 0,\r\n                \"no-buffer-constructor\": 0,\r\n                \"no-extend-native\": 0,\r\n                \"no-throw-literal\": 0,\r\n            },\r\n        },\r\n    ],\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/qs/.eslintrc b/node_modules/qs/.eslintrc
--- a/node_modules/qs/.eslintrc	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/qs/.eslintrc	(date 1753913035155)
@@ -14,8 +14,8 @@
         "id-length": [2, { "min": 1, "max": 25, "properties": "never" }],
         "indent": [2, 4],
         "max-lines-per-function": [2, { "max": 150 }],
-        "max-params": [2, 16],
-        "max-statements": [2, 53],
+        "max-params": [2, 18],
+        "max-statements": [2, 100],
         "multiline-comment-style": 0,
         "no-continue": 1,
         "no-magic-numbers": 0,
Index: node_modules/qs/CHANGELOG.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>## **6.11.0\r\n- [New] [Fix] `stringify`: revert 0e903c0; add `commaRoundTrip` option (#442)\r\n- [readme] fix version badge\r\n\r\n## **6.10.5**\r\n- [Fix] `stringify`: with `arrayFormat: comma`, properly include an explicit `[]` on a single-item array (#434)\r\n\r\n## **6.10.4**\r\n- [Fix] `stringify`: with `arrayFormat: comma`, include an explicit `[]` on a single-item array (#441)\r\n- [meta] use `npmignore` to autogenerate an npmignore file\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `has-symbol`, `object-inspect`, `tape`\r\n\r\n## **6.10.3**\r\n- [Fix] `parse`: ignore `__proto__` keys (#428)\r\n- [Robustness] `stringify`: avoid relying on a global `undefined` (#427)\r\n- [actions] reuse common workflows\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `object-inspect`, `tape`\r\n\r\n## **6.10.2**\r\n- [Fix] `stringify`: actually fix cyclic references (#426)\r\n- [Fix] `stringify`: avoid encoding arrayformat comma when `encodeValuesOnly = true` (#424)\r\n- [readme] remove travis badge; add github actions/codecov badges; update URLs\r\n- [Docs] add note and links for coercing primitive values (#408)\r\n- [actions] update codecov uploader\r\n- [actions] update workflows\r\n- [Tests] clean up stringify tests slightly\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `object-inspect`, `safe-publish-latest`, `tape`\r\n\r\n## **6.10.1**\r\n- [Fix] `stringify`: avoid exception on repeated object values (#402)\r\n\r\n## **6.10.0**\r\n- [New] `stringify`: throw on cycles, instead of an infinite loop (#395, #394, #393)\r\n- [New] `parse`: add `allowSparse` option for collapsing arrays with missing indices (#312)\r\n- [meta] fix README.md (#399)\r\n- [meta] only run `npm run dist` in publish, not install\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `aud`, `has-symbols`, `tape`\r\n- [Tests] fix tests on node v0.6\r\n- [Tests] use `ljharb/actions/node/install` instead of `ljharb/actions/node/run`\r\n- [Tests] Revert \"[meta] ignore eclint transitive audit warning\"\r\n\r\n## **6.9.7**\r\n- [Fix] `parse`: ignore `__proto__` keys (#428)\r\n- [Fix] `stringify`: avoid encoding arrayformat comma when `encodeValuesOnly = true` (#424)\r\n- [Robustness] `stringify`: avoid relying on a global `undefined` (#427)\r\n- [readme] remove travis badge; add github actions/codecov badges; update URLs\r\n- [Docs] add note and links for coercing primitive values (#408)\r\n- [Tests] clean up stringify tests slightly\r\n- [meta] fix README.md (#399)\r\n- Revert \"[meta] ignore eclint transitive audit warning\"\r\n- [actions] backport actions from main\r\n- [Dev Deps] backport updates from main\r\n\r\n## **6.9.6**\r\n- [Fix] restore `dist` dir; mistakenly removed in d4f6c32\r\n\r\n## **6.9.5**\r\n- [Fix] `stringify`: do not encode parens for RFC1738\r\n- [Fix] `stringify`: fix arrayFormat comma with empty array/objects (#350)\r\n- [Refactor] `format`: remove `util.assign` call\r\n- [meta] add \"Allow Edits\" workflow; update rebase workflow\r\n- [actions] switch Automatic Rebase workflow to `pull_request_target` event\r\n- [Tests] `stringify`: add tests for #378\r\n- [Tests] migrate tests to Github Actions\r\n- [Tests] run `nyc` on all tests; use `tape` runner\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `browserify`, `mkdirp`, `object-inspect`, `tape`; add `aud`\r\n\r\n## **6.9.4**\r\n- [Fix] `stringify`: when `arrayFormat` is `comma`, respect `serializeDate` (#364)\r\n- [Refactor] `stringify`: reduce branching (part of #350)\r\n- [Refactor] move `maybeMap` to `utils`\r\n- [Dev Deps] update `browserify`, `tape`\r\n\r\n## **6.9.3**\r\n- [Fix] proper comma parsing of URL-encoded commas (#361)\r\n- [Fix] parses comma delimited array while having percent-encoded comma treated as normal text (#336)\r\n\r\n## **6.9.2**\r\n- [Fix] `parse`: Fix parsing array from object with `comma` true (#359)\r\n- [Fix] `parse`: throw a TypeError instead of an Error for bad charset (#349)\r\n- [meta] ignore eclint transitive audit warning\r\n- [meta] fix indentation in package.json\r\n- [meta] add tidelift marketing copy\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `object-inspect`, `has-symbols`, `tape`, `mkdirp`, `iconv-lite`\r\n- [actions] add automatic rebasing / merge commit blocking\r\n\r\n## **6.9.1**\r\n- [Fix] `parse`: with comma true, handle field that holds an array of arrays (#335)\r\n- [Fix] `parse`: with comma true, do not split non-string values (#334)\r\n- [meta] add `funding` field\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`\r\n- [Tests] use shared travis-ci config\r\n\r\n## **6.9.0**\r\n- [New] `parse`/`stringify`: Pass extra key/value argument to `decoder` (#333)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `evalmd`\r\n- [Tests] `parse`: add passing `arrayFormat` tests\r\n- [Tests] add `posttest` using `npx aud` to run `npm audit` without a lockfile\r\n- [Tests] up to `node` `v12.10`, `v11.15`, `v10.16`, `v8.16`\r\n- [Tests] `Buffer.from` in node v5.0-v5.9 and v4.0-v4.4 requires a TypedArray\r\n\r\n## **6.8.3**\r\n- [Fix] `parse`: ignore `__proto__` keys (#428)\r\n- [Robustness] `stringify`: avoid relying on a global `undefined` (#427)\r\n- [Fix] `stringify`: avoid encoding arrayformat comma when `encodeValuesOnly = true` (#424)\r\n- [readme] remove travis badge; add github actions/codecov badges; update URLs\r\n- [Tests] clean up stringify tests slightly\r\n- [Docs] add note and links for coercing primitive values (#408)\r\n- [meta] fix README.md (#399)\r\n- [actions] backport actions from main\r\n- [Dev Deps] backport updates from main\r\n- [Refactor] `stringify`: reduce branching\r\n- [meta] do not publish workflow files\r\n\r\n## **6.8.2**\r\n- [Fix] proper comma parsing of URL-encoded commas (#361)\r\n- [Fix] parses comma delimited array while having percent-encoded comma treated as normal text (#336)\r\n\r\n## **6.8.1**\r\n- [Fix] `parse`: Fix parsing array from object with `comma` true (#359)\r\n- [Fix] `parse`: throw a TypeError instead of an Error for bad charset (#349)\r\n- [Fix] `parse`: with comma true, handle field that holds an array of arrays (#335)\r\n- [fix] `parse`: with comma true, do not split non-string values (#334)\r\n- [meta] add tidelift marketing copy\r\n- [meta] add `funding` field\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `tape`, `safe-publish-latest`, `evalmd`, `has-symbols`, `iconv-lite`, `mkdirp`, `object-inspect`\r\n- [Tests] `parse`: add passing `arrayFormat` tests\r\n- [Tests] use shared travis-ci configs\r\n- [Tests] `Buffer.from` in node v5.0-v5.9 and v4.0-v4.4 requires a TypedArray\r\n- [actions] add automatic rebasing / merge commit blocking\r\n\r\n## **6.8.0**\r\n- [New] add `depth=false` to preserve the original key; [Fix] `depth=0` should preserve the original key (#326)\r\n- [New] [Fix] stringify symbols and bigints\r\n- [Fix] ensure node 0.12 can stringify Symbols\r\n- [Fix] fix for an impossible situation: when the formatter is called with a non-string value\r\n- [Refactor] `formats`: tiny bit of cleanup.\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `browserify`, `safe-publish-latest`, `iconv-lite`, `tape`\r\n- [Tests] add tests for `depth=0` and `depth=false` behavior, both current and intuitive/intended (#326)\r\n- [Tests] use `eclint` instead of `editorconfig-tools`\r\n- [docs] readme: add security note\r\n- [meta] add github sponsorship\r\n- [meta] add FUNDING.yml\r\n- [meta] Clean up license text so it’s properly detected as BSD-3-Clause\r\n\r\n## **6.7.3**\r\n- [Fix] `parse`: ignore `__proto__` keys (#428)\r\n- [Fix] `stringify`: avoid encoding arrayformat comma when `encodeValuesOnly = true` (#424)\r\n- [Robustness] `stringify`: avoid relying on a global `undefined` (#427)\r\n- [readme] remove travis badge; add github actions/codecov badges; update URLs\r\n- [Docs] add note and links for coercing primitive values (#408)\r\n- [meta] fix README.md (#399)\r\n- [meta] do not publish workflow files\r\n- [actions] backport actions from main\r\n- [Dev Deps] backport updates from main\r\n- [Tests] use `nyc` for coverage\r\n- [Tests] clean up stringify tests slightly\r\n\r\n## **6.7.2**\r\n- [Fix] proper comma parsing of URL-encoded commas (#361)\r\n- [Fix] parses comma delimited array while having percent-encoded comma treated as normal text (#336)\r\n\r\n## **6.7.1**\r\n- [Fix] `parse`: Fix parsing array from object with `comma` true (#359)\r\n- [Fix] `parse`: with comma true, handle field that holds an array of arrays (#335)\r\n- [fix] `parse`: with comma true, do not split non-string values (#334)\r\n- [Fix] `parse`: throw a TypeError instead of an Error for bad charset (#349)\r\n- [Fix] fix for an impossible situation: when the formatter is called with a non-string value\r\n- [Refactor] `formats`: tiny bit of cleanup.\r\n- readme: add security note\r\n- [meta] add tidelift marketing copy\r\n- [meta] add `funding` field\r\n- [meta] add FUNDING.yml\r\n- [meta] Clean up license text so it’s properly detected as BSD-3-Clause\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `tape`, `safe-publish-latest`, `evalmd`, `iconv-lite`, `mkdirp`, `object-inspect`, `browserify`\r\n- [Tests] `parse`: add passing `arrayFormat` tests\r\n- [Tests] use shared travis-ci configs\r\n- [Tests] `Buffer.from` in node v5.0-v5.9 and v4.0-v4.4 requires a TypedArray\r\n- [Tests] add tests for `depth=0` and `depth=false` behavior, both current and intuitive/intended\r\n- [Tests] use `eclint` instead of `editorconfig-tools`\r\n- [actions] add automatic rebasing / merge commit blocking\r\n\r\n## **6.7.0**\r\n- [New] `stringify`/`parse`: add `comma` as an `arrayFormat` option (#276, #219)\r\n- [Fix] correctly parse nested arrays (#212)\r\n- [Fix] `utils.merge`: avoid a crash with a null target and a truthy non-array source, also with an array source\r\n- [Robustness] `stringify`: cache `Object.prototype.hasOwnProperty`\r\n- [Refactor] `utils`: `isBuffer`: small tweak; add tests\r\n- [Refactor] use cached `Array.isArray`\r\n- [Refactor] `parse`/`stringify`: make a function to normalize the options\r\n- [Refactor] `utils`: reduce observable [[Get]]s\r\n- [Refactor] `stringify`/`utils`: cache `Array.isArray`\r\n- [Tests] always use `String(x)` over `x.toString()`\r\n- [Tests] fix Buffer tests to work in node < 4.5 and node < 5.10\r\n- [Tests] temporarily allow coverage to fail\r\n\r\n## **6.6.1**\r\n- [Fix] `parse`: ignore `__proto__` keys (#428)\r\n- [Fix] fix for an impossible situation: when the formatter is called with a non-string value\r\n- [Fix] `utils.merge`: avoid a crash with a null target and an array source\r\n- [Fix] `utils.merge`: avoid a crash with a null target and a truthy non-array source\r\n- [Fix] correctly parse nested arrays\r\n- [Robustness] `stringify`: avoid relying on a global `undefined` (#427)\r\n- [Robustness] `stringify`: cache `Object.prototype.hasOwnProperty`\r\n- [Refactor] `formats`: tiny bit of cleanup.\r\n- [Refactor] `utils`: `isBuffer`: small tweak; add tests\r\n- [Refactor]: `stringify`/`utils`: cache `Array.isArray`\r\n- [Refactor] `utils`: reduce observable [[Get]]s\r\n- [Refactor] use cached `Array.isArray`\r\n- [Refactor] `parse`/`stringify`: make a function to normalize the options\r\n- [readme] remove travis badge; add github actions/codecov badges; update URLs\r\n- [Docs] Clarify the need for \"arrayLimit\" option\r\n- [meta] fix README.md (#399)\r\n- [meta] do not publish workflow files\r\n- [meta] Clean up license text so it’s properly detected as BSD-3-Clause\r\n- [meta] add FUNDING.yml\r\n- [meta] Fixes typo in CHANGELOG.md\r\n- [actions] backport actions from main\r\n- [Tests] fix Buffer tests to work in node < 4.5 and node < 5.10\r\n- [Tests] always use `String(x)` over `x.toString()`\r\n- [Dev Deps] backport from main\r\n\r\n## **6.6.0**\r\n- [New] Add support for iso-8859-1, utf8 \"sentinel\" and numeric entities (#268)\r\n- [New] move two-value combine to a `utils` function (#189)\r\n- [Fix] `stringify`: fix a crash with `strictNullHandling` and a custom `filter`/`serializeDate` (#279)\r\n- [Fix] when `parseArrays` is false, properly handle keys ending in `[]` (#260)\r\n- [Fix] `stringify`: do not crash in an obscure combo of `interpretNumericEntities`, a bad custom `decoder`, & `iso-8859-1`\r\n- [Fix] `utils`: `merge`: fix crash when `source` is a truthy primitive & no options are provided\r\n- [refactor] `stringify`: Avoid arr = arr.concat(...), push to the existing instance (#269)\r\n- [Refactor] `parse`: only need to reassign the var once\r\n- [Refactor] `parse`/`stringify`: clean up `charset` options checking; fix defaults\r\n- [Refactor] add missing defaults\r\n- [Refactor] `parse`: one less `concat` call\r\n- [Refactor] `utils`: `compactQueue`: make it explicitly side-effecting\r\n- [Dev Deps] update `browserify`, `eslint`, `@ljharb/eslint-config`, `iconv-lite`, `safe-publish-latest`, `tape`\r\n- [Tests] up to `node` `v10.10`, `v9.11`, `v8.12`, `v6.14`, `v4.9`; pin included builds to LTS\r\n\r\n## **6.5.3**\r\n- [Fix] `parse`: ignore `__proto__` keys (#428)\r\n- [Fix]` `utils.merge`: avoid a crash with a null target and a truthy non-array source\r\n- [Fix] correctly parse nested arrays\r\n- [Fix] `stringify`: fix a crash with `strictNullHandling` and a custom `filter`/`serializeDate` (#279)\r\n- [Fix] `utils`: `merge`: fix crash when `source` is a truthy primitive & no options are provided\r\n- [Fix] when `parseArrays` is false, properly handle keys ending in `[]`\r\n- [Fix] fix for an impossible situation: when the formatter is called with a non-string value\r\n- [Fix] `utils.merge`: avoid a crash with a null target and an array source\r\n- [Refactor] `utils`: reduce observable [[Get]]s\r\n- [Refactor] use cached `Array.isArray`\r\n- [Refactor] `stringify`: Avoid arr = arr.concat(...), push to the existing instance (#269)\r\n- [Refactor] `parse`: only need to reassign the var once\r\n- [Robustness] `stringify`: avoid relying on a global `undefined` (#427)\r\n- [readme] remove travis badge; add github actions/codecov badges; update URLs\r\n- [Docs] Clean up license text so it’s properly detected as BSD-3-Clause\r\n- [Docs] Clarify the need for \"arrayLimit\" option\r\n- [meta] fix README.md (#399)\r\n- [meta] add FUNDING.yml\r\n- [actions] backport actions from main\r\n- [Tests] always use `String(x)` over `x.toString()`\r\n- [Tests] remove nonexistent tape option\r\n- [Dev Deps] backport from main\r\n\r\n## **6.5.2**\r\n- [Fix] use `safer-buffer` instead of `Buffer` constructor\r\n- [Refactor] utils: `module.exports` one thing, instead of mutating `exports` (#230)\r\n- [Dev Deps] update `browserify`, `eslint`, `iconv-lite`, `safer-buffer`, `tape`, `browserify`\r\n\r\n## **6.5.1**\r\n- [Fix] Fix parsing & compacting very deep objects (#224)\r\n- [Refactor] name utils functions\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `tape`\r\n- [Tests] up to `node` `v8.4`; use `nvm install-latest-npm` so newer npm doesn’t break older node\r\n- [Tests] Use precise dist for Node.js 0.6 runtime (#225)\r\n- [Tests] make 0.6 required, now that it’s passing\r\n- [Tests] on `node` `v8.2`; fix npm on node 0.6\r\n\r\n## **6.5.0**\r\n- [New] add `utils.assign`\r\n- [New] pass default encoder/decoder to custom encoder/decoder functions (#206)\r\n- [New] `parse`/`stringify`: add `ignoreQueryPrefix`/`addQueryPrefix` options, respectively (#213)\r\n- [Fix] Handle stringifying empty objects with addQueryPrefix (#217)\r\n- [Fix] do not mutate `options` argument (#207)\r\n- [Refactor] `parse`: cache index to reuse in else statement (#182)\r\n- [Docs] add various badges to readme (#208)\r\n- [Dev Deps] update `eslint`, `browserify`, `iconv-lite`, `tape`\r\n- [Tests] up to `node` `v8.1`, `v7.10`, `v6.11`; npm v4.6 breaks on node < v1; npm v5+ breaks on node < v4\r\n- [Tests] add `editorconfig-tools`\r\n\r\n## **6.4.1**\r\n- [Fix] `parse`: ignore `__proto__` keys (#428)\r\n- [Fix] fix for an impossible situation: when the formatter is called with a non-string value\r\n- [Fix] use `safer-buffer` instead of `Buffer` constructor\r\n- [Fix] `utils.merge`: avoid a crash with a null target and an array source\r\n- [Fix]` `utils.merge`: avoid a crash with a null target and a truthy non-array source\r\n- [Fix] `stringify`: fix a crash with `strictNullHandling` and a custom `filter`/`serializeDate` (#279)\r\n- [Fix] `utils`: `merge`: fix crash when `source` is a truthy primitive & no options are provided\r\n- [Fix] when `parseArrays` is false, properly handle keys ending in `[]`\r\n- [Robustness] `stringify`: avoid relying on a global `undefined` (#427)\r\n- [Refactor] use cached `Array.isArray`\r\n- [Refactor] `stringify`: Avoid arr = arr.concat(...), push to the existing instance (#269)\r\n- [readme] remove travis badge; add github actions/codecov badges; update URLs\r\n- [Docs] Clarify the need for \"arrayLimit\" option\r\n- [meta] fix README.md (#399)\r\n- [meta] Clean up license text so it’s properly detected as BSD-3-Clause\r\n- [meta] add FUNDING.yml\r\n- [actions] backport actions from main\r\n- [Tests] remove nonexistent tape option\r\n- [Dev Deps] backport from main\r\n\r\n## **6.4.0**\r\n- [New] `qs.stringify`: add `encodeValuesOnly` option\r\n- [Fix] follow `allowPrototypes` option during merge (#201, #201)\r\n- [Fix] support keys starting with brackets (#202, #200)\r\n- [Fix] chmod a-x\r\n- [Dev Deps] update `eslint`\r\n- [Tests] up to `node` `v7.7`, `v6.10`,` v4.8`; disable osx builds since they block linux builds\r\n- [eslint] reduce warnings\r\n\r\n## **6.3.3**\r\n- [Fix] `parse`: ignore `__proto__` keys (#428)\r\n- [Fix] fix for an impossible situation: when the formatter is called with a non-string value\r\n- [Fix] `utils.merge`: avoid a crash with a null target and an array source\r\n- [Fix]` `utils.merge`: avoid a crash with a null target and a truthy non-array source\r\n- [Fix] `stringify`: fix a crash with `strictNullHandling` and a custom `filter`/`serializeDate` (#279)\r\n- [Fix] `utils`: `merge`: fix crash when `source` is a truthy primitive & no options are provided\r\n- [Fix] when `parseArrays` is false, properly handle keys ending in `[]`\r\n- [Robustness] `stringify`: avoid relying on a global `undefined` (#427)\r\n- [Refactor] use cached `Array.isArray`\r\n- [Refactor] `stringify`: Avoid arr = arr.concat(...), push to the existing instance (#269)\r\n- [Docs] Clarify the need for \"arrayLimit\" option\r\n- [meta] fix README.md (#399)\r\n- [meta] Clean up license text so it’s properly detected as BSD-3-Clause\r\n- [meta] add FUNDING.yml\r\n- [actions] backport actions from main\r\n- [Tests] use `safer-buffer` instead of `Buffer` constructor\r\n- [Tests] remove nonexistent tape option\r\n- [Dev Deps] backport from main\r\n\r\n## **6.3.2**\r\n- [Fix] follow `allowPrototypes` option during merge (#201, #200)\r\n- [Dev Deps] update `eslint`\r\n- [Fix] chmod a-x\r\n- [Fix] support keys starting with brackets (#202, #200)\r\n- [Tests] up to `node` `v7.7`, `v6.10`,` v4.8`; disable osx builds since they block linux builds\r\n\r\n## **6.3.1**\r\n- [Fix] ensure that `allowPrototypes: false` does not ever shadow Object.prototype properties (thanks, @snyk!)\r\n- [Dev Deps] update `eslint`, `@ljharb/eslint-config`, `browserify`, `iconv-lite`, `qs-iconv`, `tape`\r\n- [Tests] on all node minors; improve test matrix\r\n- [Docs] document stringify option `allowDots` (#195)\r\n- [Docs] add empty object and array values example (#195)\r\n- [Docs] Fix minor inconsistency/typo (#192)\r\n- [Docs] document stringify option `sort` (#191)\r\n- [Refactor] `stringify`: throw faster with an invalid encoder\r\n- [Refactor] remove unnecessary escapes (#184)\r\n- Remove contributing.md, since `qs` is no longer part of `hapi` (#183)\r\n\r\n## **6.3.0**\r\n- [New] Add support for RFC 1738 (#174, #173)\r\n- [New] `stringify`: Add `serializeDate` option to customize Date serialization (#159)\r\n- [Fix] ensure `utils.merge` handles merging two arrays\r\n- [Refactor] only constructors should be capitalized\r\n- [Refactor] capitalized var names are for constructors only\r\n- [Refactor] avoid using a sparse array\r\n- [Robustness] `formats`: cache `String#replace`\r\n- [Dev Deps] update `browserify`, `eslint`, `@ljharb/eslint-config`; add `safe-publish-latest`\r\n- [Tests] up to `node` `v6.8`, `v4.6`; improve test matrix\r\n- [Tests] flesh out arrayLimit/arrayFormat tests (#107)\r\n- [Tests] skip Object.create tests when null objects are not available\r\n- [Tests] Turn on eslint for test files (#175)\r\n\r\n## **6.2.4**\r\n- [Fix] `parse`: ignore `__proto__` keys (#428)\r\n- [Fix] `utils.merge`: avoid a crash with a null target and an array source\r\n- [Fix] `utils.merge`: avoid a crash with a null target and a truthy non-array source\r\n- [Fix] `utils`: `merge`: fix crash when `source` is a truthy primitive & no options are provided\r\n- [Fix] when `parseArrays` is false, properly handle keys ending in `[]`\r\n- [Robustness] `stringify`: avoid relying on a global `undefined` (#427)\r\n- [Refactor] use cached `Array.isArray`\r\n- [Docs] Clarify the need for \"arrayLimit\" option\r\n- [meta] fix README.md (#399)\r\n- [meta] Clean up license text so it’s properly detected as BSD-3-Clause\r\n- [meta] add FUNDING.yml\r\n- [actions] backport actions from main\r\n- [Tests] use `safer-buffer` instead of `Buffer` constructor\r\n- [Tests] remove nonexistent tape option\r\n- [Dev Deps] backport from main\r\n\r\n## **6.2.3**\r\n- [Fix] follow `allowPrototypes` option during merge (#201, #200)\r\n- [Fix] chmod a-x\r\n- [Fix] support keys starting with brackets (#202, #200)\r\n- [Tests] up to `node` `v7.7`, `v6.10`,` v4.8`; disable osx builds since they block linux builds\r\n\r\n## **6.2.2**\r\n- [Fix] ensure that `allowPrototypes: false` does not ever shadow Object.prototype properties\r\n\r\n## **6.2.1**\r\n- [Fix] ensure `key[]=x&key[]&key[]=y` results in 3, not 2, values\r\n- [Refactor] Be explicit and use `Object.prototype.hasOwnProperty.call`\r\n- [Tests] remove `parallelshell` since it does not reliably report failures\r\n- [Tests] up to `node` `v6.3`, `v5.12`\r\n- [Dev Deps] update `tape`, `eslint`, `@ljharb/eslint-config`, `qs-iconv`\r\n\r\n## [**6.2.0**](https://github.com/ljharb/qs/issues?milestone=36&state=closed)\r\n- [New] pass Buffers to the encoder/decoder directly (#161)\r\n- [New] add \"encoder\" and \"decoder\" options, for custom param encoding/decoding (#160)\r\n- [Fix] fix compacting of nested sparse arrays (#150)\r\n\r\n## **6.1.2\r\n- [Fix] follow `allowPrototypes` option during merge (#201, #200)\r\n- [Fix] chmod a-x\r\n- [Fix] support keys starting with brackets (#202, #200)\r\n- [Tests] up to `node` `v7.7`, `v6.10`,` v4.8`; disable osx builds since they block linux builds\r\n\r\n## **6.1.1**\r\n- [Fix] ensure that `allowPrototypes: false` does not ever shadow Object.prototype properties\r\n\r\n## [**6.1.0**](https://github.com/ljharb/qs/issues?milestone=35&state=closed)\r\n- [New] allowDots option for `stringify` (#151)\r\n- [Fix] \"sort\" option should work at a depth of 3 or more (#151)\r\n- [Fix] Restore `dist` directory; will be removed in v7 (#148)\r\n\r\n## **6.0.4**\r\n- [Fix] follow `allowPrototypes` option during merge (#201, #200)\r\n- [Fix] chmod a-x\r\n- [Fix] support keys starting with brackets (#202, #200)\r\n- [Tests] up to `node` `v7.7`, `v6.10`,` v4.8`; disable osx builds since they block linux builds\r\n\r\n## **6.0.3**\r\n- [Fix] ensure that `allowPrototypes: false` does not ever shadow Object.prototype properties\r\n- [Fix] Restore `dist` directory; will be removed in v7 (#148)\r\n\r\n## [**6.0.2**](https://github.com/ljharb/qs/issues?milestone=33&state=closed)\r\n- Revert ES6 requirement and restore support for node down to v0.8.\r\n\r\n## [**6.0.1**](https://github.com/ljharb/qs/issues?milestone=32&state=closed)\r\n- [**#127**](https://github.com/ljharb/qs/pull/127) Fix engines definition in package.json\r\n\r\n## [**6.0.0**](https://github.com/ljharb/qs/issues?milestone=31&state=closed)\r\n- [**#124**](https://github.com/ljharb/qs/issues/124) Use ES6 and drop support for node < v4\r\n\r\n## **5.2.1**\r\n- [Fix] ensure `key[]=x&key[]&key[]=y` results in 3, not 2, values\r\n\r\n## [**5.2.0**](https://github.com/ljharb/qs/issues?milestone=30&state=closed)\r\n- [**#64**](https://github.com/ljharb/qs/issues/64) Add option to sort object keys in the query string\r\n\r\n## [**5.1.0**](https://github.com/ljharb/qs/issues?milestone=29&state=closed)\r\n- [**#117**](https://github.com/ljharb/qs/issues/117) make URI encoding stringified results optional\r\n- [**#106**](https://github.com/ljharb/qs/issues/106) Add flag `skipNulls` to optionally skip null values in stringify\r\n\r\n## [**5.0.0**](https://github.com/ljharb/qs/issues?milestone=28&state=closed)\r\n- [**#114**](https://github.com/ljharb/qs/issues/114) default allowDots to false\r\n- [**#100**](https://github.com/ljharb/qs/issues/100) include dist to npm\r\n\r\n## [**4.0.0**](https://github.com/ljharb/qs/issues?milestone=26&state=closed)\r\n- [**#98**](https://github.com/ljharb/qs/issues/98) make returning plain objects and allowing prototype overwriting properties optional\r\n\r\n## [**3.1.0**](https://github.com/ljharb/qs/issues?milestone=24&state=closed)\r\n- [**#89**](https://github.com/ljharb/qs/issues/89) Add option to disable \"Transform dot notation to bracket notation\"\r\n\r\n## [**3.0.0**](https://github.com/ljharb/qs/issues?milestone=23&state=closed)\r\n- [**#80**](https://github.com/ljharb/qs/issues/80) qs.parse silently drops properties\r\n- [**#77**](https://github.com/ljharb/qs/issues/77) Perf boost\r\n- [**#60**](https://github.com/ljharb/qs/issues/60) Add explicit option to disable array parsing\r\n- [**#74**](https://github.com/ljharb/qs/issues/74) Bad parse when turning array into object\r\n- [**#81**](https://github.com/ljharb/qs/issues/81) Add a `filter` option\r\n- [**#68**](https://github.com/ljharb/qs/issues/68) Fixed issue with recursion and passing strings into objects.\r\n- [**#66**](https://github.com/ljharb/qs/issues/66) Add mixed array and object dot notation support Closes: #47\r\n- [**#76**](https://github.com/ljharb/qs/issues/76) RFC 3986\r\n- [**#85**](https://github.com/ljharb/qs/issues/85) No equal sign\r\n- [**#84**](https://github.com/ljharb/qs/issues/84) update license attribute\r\n\r\n## [**2.4.1**](https://github.com/ljharb/qs/issues?milestone=20&state=closed)\r\n- [**#73**](https://github.com/ljharb/qs/issues/73) Property 'hasOwnProperty' of object #<Object> is not a function\r\n\r\n## [**2.4.0**](https://github.com/ljharb/qs/issues?milestone=19&state=closed)\r\n- [**#70**](https://github.com/ljharb/qs/issues/70) Add arrayFormat option\r\n\r\n## [**2.3.3**](https://github.com/ljharb/qs/issues?milestone=18&state=closed)\r\n- [**#59**](https://github.com/ljharb/qs/issues/59) make sure array indexes are >= 0, closes #57\r\n- [**#58**](https://github.com/ljharb/qs/issues/58) make qs usable for browser loader\r\n\r\n## [**2.3.2**](https://github.com/ljharb/qs/issues?milestone=17&state=closed)\r\n- [**#55**](https://github.com/ljharb/qs/issues/55) allow merging a string into an object\r\n\r\n## [**2.3.1**](https://github.com/ljharb/qs/issues?milestone=16&state=closed)\r\n- [**#52**](https://github.com/ljharb/qs/issues/52) Return \"undefined\" and \"false\" instead of throwing \"TypeError\".\r\n\r\n## [**2.3.0**](https://github.com/ljharb/qs/issues?milestone=15&state=closed)\r\n- [**#50**](https://github.com/ljharb/qs/issues/50) add option to omit array indices, closes #46\r\n\r\n## [**2.2.5**](https://github.com/ljharb/qs/issues?milestone=14&state=closed)\r\n- [**#39**](https://github.com/ljharb/qs/issues/39) Is there an alternative to Buffer.isBuffer?\r\n- [**#49**](https://github.com/ljharb/qs/issues/49) refactor utils.merge, fixes #45\r\n- [**#41**](https://github.com/ljharb/qs/issues/41) avoid browserifying Buffer, for #39\r\n\r\n## [**2.2.4**](https://github.com/ljharb/qs/issues?milestone=13&state=closed)\r\n- [**#38**](https://github.com/ljharb/qs/issues/38) how to handle object keys beginning with a number\r\n\r\n## [**2.2.3**](https://github.com/ljharb/qs/issues?milestone=12&state=closed)\r\n- [**#37**](https://github.com/ljharb/qs/issues/37) parser discards first empty value in array\r\n- [**#36**](https://github.com/ljharb/qs/issues/36) Update to lab 4.x\r\n\r\n## [**2.2.2**](https://github.com/ljharb/qs/issues?milestone=11&state=closed)\r\n- [**#33**](https://github.com/ljharb/qs/issues/33) Error when plain object in a value\r\n- [**#34**](https://github.com/ljharb/qs/issues/34) use Object.prototype.hasOwnProperty.call instead of obj.hasOwnProperty\r\n- [**#24**](https://github.com/ljharb/qs/issues/24) Changelog? Semver?\r\n\r\n## [**2.2.1**](https://github.com/ljharb/qs/issues?milestone=10&state=closed)\r\n- [**#32**](https://github.com/ljharb/qs/issues/32) account for circular references properly, closes #31\r\n- [**#31**](https://github.com/ljharb/qs/issues/31) qs.parse stackoverflow on circular objects\r\n\r\n## [**2.2.0**](https://github.com/ljharb/qs/issues?milestone=9&state=closed)\r\n- [**#26**](https://github.com/ljharb/qs/issues/26) Don't use Buffer global if it's not present\r\n- [**#30**](https://github.com/ljharb/qs/issues/30) Bug when merging non-object values into arrays\r\n- [**#29**](https://github.com/ljharb/qs/issues/29) Don't call Utils.clone at the top of Utils.merge\r\n- [**#23**](https://github.com/ljharb/qs/issues/23) Ability to not limit parameters?\r\n\r\n## [**2.1.0**](https://github.com/ljharb/qs/issues?milestone=8&state=closed)\r\n- [**#22**](https://github.com/ljharb/qs/issues/22) Enable using a RegExp as delimiter\r\n\r\n## [**2.0.0**](https://github.com/ljharb/qs/issues?milestone=7&state=closed)\r\n- [**#18**](https://github.com/ljharb/qs/issues/18) Why is there arrayLimit?\r\n- [**#20**](https://github.com/ljharb/qs/issues/20) Configurable parametersLimit\r\n- [**#21**](https://github.com/ljharb/qs/issues/21) make all limits optional, for #18, for #20\r\n\r\n## [**1.2.2**](https://github.com/ljharb/qs/issues?milestone=6&state=closed)\r\n- [**#19**](https://github.com/ljharb/qs/issues/19) Don't overwrite null values\r\n\r\n## [**1.2.1**](https://github.com/ljharb/qs/issues?milestone=5&state=closed)\r\n- [**#16**](https://github.com/ljharb/qs/issues/16) ignore non-string delimiters\r\n- [**#15**](https://github.com/ljharb/qs/issues/15) Close code block\r\n\r\n## [**1.2.0**](https://github.com/ljharb/qs/issues?milestone=4&state=closed)\r\n- [**#12**](https://github.com/ljharb/qs/issues/12) Add optional delim argument\r\n- [**#13**](https://github.com/ljharb/qs/issues/13) fix #11: flattened keys in array are now correctly parsed\r\n\r\n## [**1.1.0**](https://github.com/ljharb/qs/issues?milestone=3&state=closed)\r\n- [**#7**](https://github.com/ljharb/qs/issues/7) Empty values of a POST array disappear after being submitted\r\n- [**#9**](https://github.com/ljharb/qs/issues/9) Should not omit equals signs (=) when value is null\r\n- [**#6**](https://github.com/ljharb/qs/issues/6) Minor grammar fix in README\r\n\r\n## [**1.0.2**](https://github.com/ljharb/qs/issues?milestone=2&state=closed)\r\n- [**#5**](https://github.com/ljharb/qs/issues/5) array holes incorrectly copied into object on large index\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/qs/CHANGELOG.md b/node_modules/qs/CHANGELOG.md
--- a/node_modules/qs/CHANGELOG.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/qs/CHANGELOG.md	(date 1753913035195)
@@ -1,4 +1,58 @@
-## **6.11.0
+## **6.13.0**
+- [New] `parse`: add `strictDepth` option (#511)
+- [Tests] use `npm audit` instead of `aud`
+
+## **6.12.3**
+- [Fix] `parse`: properly account for `strictNullHandling` when `allowEmptyArrays`
+- [meta] fix changelog indentation
+
+## **6.12.2**
+- [Fix] `parse`: parse encoded square brackets (#506)
+- [readme] add CII best practices badge
+
+## **6.12.1**
+- [Fix] `parse`: Disable `decodeDotInKeys` by default to restore previous behavior (#501)
+- [Performance] `utils`: Optimize performance under large data volumes, reduce memory usage, and speed up processing (#502)
+- [Refactor] `utils`: use `+=`
+- [Tests] increase coverage
+
+## **6.12.0**
+
+- [New] `parse`/`stringify`: add `decodeDotInKeys`/`encodeDotKeys` options (#488)
+- [New] `parse`: add `duplicates` option
+- [New] `parse`/`stringify`: add `allowEmptyArrays` option to allow [] in object values (#487)
+- [Refactor] `parse`/`stringify`: move allowDots config logic to its own variable
+- [Refactor] `stringify`: move option-handling code into `normalizeStringifyOptions`
+- [readme] update readme, add logos (#484)
+- [readme] `stringify`: clarify default `arrayFormat` behavior
+- [readme] fix line wrapping
+- [readme] remove dead badges
+- [Deps] update `side-channel`
+- [meta] make the dist build 50% smaller
+- [meta] add `sideEffects` flag
+- [meta] run build in prepack, not prepublish
+- [Tests] `parse`: remove useless tests; add coverage
+- [Tests] `stringify`: increase coverage
+- [Tests] use `mock-property`
+- [Tests] `stringify`: improve coverage
+- [Dev Deps] update `@ljharb/eslint-config `, `aud`, `has-override-mistake`, `has-property-descriptors`, `mock-property`, `npmignore`, `object-inspect`, `tape`
+- [Dev Deps] pin `glob`, since v10.3.8+ requires a broken `jackspeak`
+- [Dev Deps] pin `jackspeak` since 2.1.2+ depends on npm aliases, which kill the install process in npm < 6
+
+## **6.11.2**
+- [Fix] `parse`: Fix parsing when the global Object prototype is frozen (#473)
+- [Tests] add passing test cases with empty keys (#473)
+
+## **6.11.1**
+- [Fix] `stringify`: encode comma values more consistently (#463)
+- [readme] add usage of `filter` option for injecting custom serialization, i.e. of custom types (#447)
+- [meta] remove extraneous code backticks (#457)
+- [meta] fix changelog markdown
+- [actions] update checkout action
+- [actions] restrict action permissions
+- [Dev Deps] update `@ljharb/eslint-config`, `aud`, `object-inspect`, `tape`
+
+## **6.11.0**
 - [New] [Fix] `stringify`: revert 0e903c0; add `commaRoundTrip` option (#442)
 - [readme] fix version badge
 
@@ -238,7 +292,7 @@
 
 ## **6.5.3**
 - [Fix] `parse`: ignore `__proto__` keys (#428)
-- [Fix]` `utils.merge`: avoid a crash with a null target and a truthy non-array source
+- [Fix] `utils.merge`: avoid a crash with a null target and a truthy non-array source
 - [Fix] correctly parse nested arrays
 - [Fix] `stringify`: fix a crash with `strictNullHandling` and a custom `filter`/`serializeDate` (#279)
 - [Fix] `utils`: `merge`: fix crash when `source` is a truthy primitive & no options are provided
@@ -291,7 +345,7 @@
 - [Fix] fix for an impossible situation: when the formatter is called with a non-string value
 - [Fix] use `safer-buffer` instead of `Buffer` constructor
 - [Fix] `utils.merge`: avoid a crash with a null target and an array source
-- [Fix]` `utils.merge`: avoid a crash with a null target and a truthy non-array source
+- [Fix] `utils.merge`: avoid a crash with a null target and a truthy non-array source
 - [Fix] `stringify`: fix a crash with `strictNullHandling` and a custom `filter`/`serializeDate` (#279)
 - [Fix] `utils`: `merge`: fix crash when `source` is a truthy primitive & no options are provided
 - [Fix] when `parseArrays` is false, properly handle keys ending in `[]`
@@ -320,7 +374,7 @@
 - [Fix] `parse`: ignore `__proto__` keys (#428)
 - [Fix] fix for an impossible situation: when the formatter is called with a non-string value
 - [Fix] `utils.merge`: avoid a crash with a null target and an array source
-- [Fix]` `utils.merge`: avoid a crash with a null target and a truthy non-array source
+- [Fix] `utils.merge`: avoid a crash with a null target and a truthy non-array source
 - [Fix] `stringify`: fix a crash with `strictNullHandling` and a custom `filter`/`serializeDate` (#279)
 - [Fix] `utils`: `merge`: fix crash when `source` is a truthy primitive & no options are provided
 - [Fix] when `parseArrays` is false, properly handle keys ending in `[]`
@@ -407,7 +461,7 @@
 - [New] add "encoder" and "decoder" options, for custom param encoding/decoding (#160)
 - [Fix] fix compacting of nested sparse arrays (#150)
 
-## **6.1.2
+## **6.1.2**
 - [Fix] follow `allowPrototypes` option during merge (#201, #200)
 - [Fix] chmod a-x
 - [Fix] support keys starting with brackets (#202, #200)
Index: node_modules/qs/README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+># qs <sup>[![Version Badge][npm-version-svg]][package-url]</sup>\r\n\r\n[![github actions][actions-image]][actions-url]\r\n[![coverage][codecov-image]][codecov-url]\r\n[![dependency status][deps-svg]][deps-url]\r\n[![dev dependency status][dev-deps-svg]][dev-deps-url]\r\n[![License][license-image]][license-url]\r\n[![Downloads][downloads-image]][downloads-url]\r\n\r\n[![npm badge][npm-badge-png]][package-url]\r\n\r\nA querystring parsing and stringifying library with some added security.\r\n\r\nLead Maintainer: [Jordan Harband](https://github.com/ljharb)\r\n\r\nThe **qs** module was originally created and maintained by [TJ Holowaychuk](https://github.com/visionmedia/node-querystring).\r\n\r\n## Usage\r\n\r\n```javascript\r\nvar qs = require('qs');\r\nvar assert = require('assert');\r\n\r\nvar obj = qs.parse('a=c');\r\nassert.deepEqual(obj, { a: 'c' });\r\n\r\nvar str = qs.stringify(obj);\r\nassert.equal(str, 'a=c');\r\n```\r\n\r\n### Parsing Objects\r\n\r\n[](#preventEval)\r\n```javascript\r\nqs.parse(string, [options]);\r\n```\r\n\r\n**qs** allows you to create nested objects within your query strings, by surrounding the name of sub-keys with square brackets `[]`.\r\nFor example, the string `'foo[bar]=baz'` converts to:\r\n\r\n```javascript\r\nassert.deepEqual(qs.parse('foo[bar]=baz'), {\r\n    foo: {\r\n        bar: 'baz'\r\n    }\r\n});\r\n```\r\n\r\nWhen using the `plainObjects` option the parsed value is returned as a null object, created via `Object.create(null)` and as such you should be aware that prototype methods will not exist on it and a user may set those names to whatever value they like:\r\n\r\n```javascript\r\nvar nullObject = qs.parse('a[hasOwnProperty]=b', { plainObjects: true });\r\nassert.deepEqual(nullObject, { a: { hasOwnProperty: 'b' } });\r\n```\r\n\r\nBy default parameters that would overwrite properties on the object prototype are ignored, if you wish to keep the data from those fields either use `plainObjects` as mentioned above, or set `allowPrototypes` to `true` which will allow user input to overwrite those properties. *WARNING* It is generally a bad idea to enable this option as it can cause problems when attempting to use the properties that have been overwritten. Always be careful with this option.\r\n\r\n```javascript\r\nvar protoObject = qs.parse('a[hasOwnProperty]=b', { allowPrototypes: true });\r\nassert.deepEqual(protoObject, { a: { hasOwnProperty: 'b' } });\r\n```\r\n\r\nURI encoded strings work too:\r\n\r\n```javascript\r\nassert.deepEqual(qs.parse('a%5Bb%5D=c'), {\r\n    a: { b: 'c' }\r\n});\r\n```\r\n\r\nYou can also nest your objects, like `'foo[bar][baz]=foobarbaz'`:\r\n\r\n```javascript\r\nassert.deepEqual(qs.parse('foo[bar][baz]=foobarbaz'), {\r\n    foo: {\r\n        bar: {\r\n            baz: 'foobarbaz'\r\n        }\r\n    }\r\n});\r\n```\r\n\r\nBy default, when nesting objects **qs** will only parse up to 5 children deep. This means if you attempt to parse a string like\r\n`'a[b][c][d][e][f][g][h][i]=j'` your resulting object will be:\r\n\r\n```javascript\r\nvar expected = {\r\n    a: {\r\n        b: {\r\n            c: {\r\n                d: {\r\n                    e: {\r\n                        f: {\r\n                            '[g][h][i]': 'j'\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\nvar string = 'a[b][c][d][e][f][g][h][i]=j';\r\nassert.deepEqual(qs.parse(string), expected);\r\n```\r\n\r\nThis depth can be overridden by passing a `depth` option to `qs.parse(string, [options])`:\r\n\r\n```javascript\r\nvar deep = qs.parse('a[b][c][d][e][f][g][h][i]=j', { depth: 1 });\r\nassert.deepEqual(deep, { a: { b: { '[c][d][e][f][g][h][i]': 'j' } } });\r\n```\r\n\r\nThe depth limit helps mitigate abuse when **qs** is used to parse user input, and it is recommended to keep it a reasonably small number.\r\n\r\nFor similar reasons, by default **qs** will only parse up to 1000 parameters. This can be overridden by passing a `parameterLimit` option:\r\n\r\n```javascript\r\nvar limited = qs.parse('a=b&c=d', { parameterLimit: 1 });\r\nassert.deepEqual(limited, { a: 'b' });\r\n```\r\n\r\nTo bypass the leading question mark, use `ignoreQueryPrefix`:\r\n\r\n```javascript\r\nvar prefixed = qs.parse('?a=b&c=d', { ignoreQueryPrefix: true });\r\nassert.deepEqual(prefixed, { a: 'b', c: 'd' });\r\n```\r\n\r\nAn optional delimiter can also be passed:\r\n\r\n```javascript\r\nvar delimited = qs.parse('a=b;c=d', { delimiter: ';' });\r\nassert.deepEqual(delimited, { a: 'b', c: 'd' });\r\n```\r\n\r\nDelimiters can be a regular expression too:\r\n\r\n```javascript\r\nvar regexed = qs.parse('a=b;c=d,e=f', { delimiter: /[;,]/ });\r\nassert.deepEqual(regexed, { a: 'b', c: 'd', e: 'f' });\r\n```\r\n\r\nOption `allowDots` can be used to enable dot notation:\r\n\r\n```javascript\r\nvar withDots = qs.parse('a.b=c', { allowDots: true });\r\nassert.deepEqual(withDots, { a: { b: 'c' } });\r\n```\r\n\r\nIf you have to deal with legacy browsers or services, there's\r\nalso support for decoding percent-encoded octets as iso-8859-1:\r\n\r\n```javascript\r\nvar oldCharset = qs.parse('a=%A7', { charset: 'iso-8859-1' });\r\nassert.deepEqual(oldCharset, { a: '§' });\r\n```\r\n\r\nSome services add an initial `utf8=✓` value to forms so that old\r\nInternet Explorer versions are more likely to submit the form as\r\nutf-8. Additionally, the server can check the value against wrong\r\nencodings of the checkmark character and detect that a query string\r\nor `application/x-www-form-urlencoded` body was *not* sent as\r\nutf-8, eg. if the form had an `accept-charset` parameter or the\r\ncontaining page had a different character set.\r\n\r\n**qs** supports this mechanism via the `charsetSentinel` option.\r\nIf specified, the `utf8` parameter will be omitted from the\r\nreturned object. It will be used to switch to `iso-8859-1`/`utf-8`\r\nmode depending on how the checkmark is encoded.\r\n\r\n**Important**: When you specify both the `charset` option and the\r\n`charsetSentinel` option, the `charset` will be overridden when\r\nthe request contains a `utf8` parameter from which the actual\r\ncharset can be deduced. In that sense the `charset` will behave\r\nas the default charset rather than the authoritative charset.\r\n\r\n```javascript\r\nvar detectedAsUtf8 = qs.parse('utf8=%E2%9C%93&a=%C3%B8', {\r\n    charset: 'iso-8859-1',\r\n    charsetSentinel: true\r\n});\r\nassert.deepEqual(detectedAsUtf8, { a: 'ø' });\r\n\r\n// Browsers encode the checkmark as &#10003; when submitting as iso-8859-1:\r\nvar detectedAsIso8859_1 = qs.parse('utf8=%26%2310003%3B&a=%F8', {\r\n    charset: 'utf-8',\r\n    charsetSentinel: true\r\n});\r\nassert.deepEqual(detectedAsIso8859_1, { a: 'ø' });\r\n```\r\n\r\nIf you want to decode the `&#...;` syntax to the actual character,\r\nyou can specify the `interpretNumericEntities` option as well:\r\n\r\n```javascript\r\nvar detectedAsIso8859_1 = qs.parse('a=%26%239786%3B', {\r\n    charset: 'iso-8859-1',\r\n    interpretNumericEntities: true\r\n});\r\nassert.deepEqual(detectedAsIso8859_1, { a: '☺' });\r\n```\r\n\r\nIt also works when the charset has been detected in `charsetSentinel`\r\nmode.\r\n\r\n### Parsing Arrays\r\n\r\n**qs** can also parse arrays using a similar `[]` notation:\r\n\r\n```javascript\r\nvar withArray = qs.parse('a[]=b&a[]=c');\r\nassert.deepEqual(withArray, { a: ['b', 'c'] });\r\n```\r\n\r\nYou may specify an index as well:\r\n\r\n```javascript\r\nvar withIndexes = qs.parse('a[1]=c&a[0]=b');\r\nassert.deepEqual(withIndexes, { a: ['b', 'c'] });\r\n```\r\n\r\nNote that the only difference between an index in an array and a key in an object is that the value between the brackets must be a number\r\nto create an array. When creating arrays with specific indices, **qs** will compact a sparse array to only the existing values preserving\r\ntheir order:\r\n\r\n```javascript\r\nvar noSparse = qs.parse('a[1]=b&a[15]=c');\r\nassert.deepEqual(noSparse, { a: ['b', 'c'] });\r\n```\r\n\r\nYou may also use `allowSparse` option to parse sparse arrays:\r\n\r\n```javascript\r\nvar sparseArray = qs.parse('a[1]=2&a[3]=5', { allowSparse: true });\r\nassert.deepEqual(sparseArray, { a: [, '2', , '5'] });\r\n```\r\n\r\nNote that an empty string is also a value, and will be preserved:\r\n\r\n```javascript\r\nvar withEmptyString = qs.parse('a[]=&a[]=b');\r\nassert.deepEqual(withEmptyString, { a: ['', 'b'] });\r\n\r\nvar withIndexedEmptyString = qs.parse('a[0]=b&a[1]=&a[2]=c');\r\nassert.deepEqual(withIndexedEmptyString, { a: ['b', '', 'c'] });\r\n```\r\n\r\n**qs** will also limit specifying indices in an array to a maximum index of `20`. Any array members with an index of greater than `20` will\r\ninstead be converted to an object with the index as the key. This is needed to handle cases when someone sent, for example, `a[999999999]` and it will take significant time to iterate over this huge array.\r\n\r\n```javascript\r\nvar withMaxIndex = qs.parse('a[100]=b');\r\nassert.deepEqual(withMaxIndex, { a: { '100': 'b' } });\r\n```\r\n\r\nThis limit can be overridden by passing an `arrayLimit` option:\r\n\r\n```javascript\r\nvar withArrayLimit = qs.parse('a[1]=b', { arrayLimit: 0 });\r\nassert.deepEqual(withArrayLimit, { a: { '1': 'b' } });\r\n```\r\n\r\nTo disable array parsing entirely, set `parseArrays` to `false`.\r\n\r\n```javascript\r\nvar noParsingArrays = qs.parse('a[]=b', { parseArrays: false });\r\nassert.deepEqual(noParsingArrays, { a: { '0': 'b' } });\r\n```\r\n\r\nIf you mix notations, **qs** will merge the two items into an object:\r\n\r\n```javascript\r\nvar mixedNotation = qs.parse('a[0]=b&a[b]=c');\r\nassert.deepEqual(mixedNotation, { a: { '0': 'b', b: 'c' } });\r\n```\r\n\r\nYou can also create arrays of objects:\r\n\r\n```javascript\r\nvar arraysOfObjects = qs.parse('a[][b]=c');\r\nassert.deepEqual(arraysOfObjects, { a: [{ b: 'c' }] });\r\n```\r\n\r\nSome people use comma to join array, **qs** can parse it:\r\n```javascript\r\nvar arraysOfObjects = qs.parse('a=b,c', { comma: true })\r\nassert.deepEqual(arraysOfObjects, { a: ['b', 'c'] })\r\n```\r\n(_this cannot convert nested objects, such as `a={b:1},{c:d}`_)\r\n\r\n### Parsing primitive/scalar values (numbers, booleans, null, etc)\r\n\r\nBy default, all values are parsed as strings. This behavior will not change and is explained in [issue #91](https://github.com/ljharb/qs/issues/91).\r\n\r\n```javascript\r\nvar primitiveValues = qs.parse('a=15&b=true&c=null');\r\nassert.deepEqual(primitiveValues, { a: '15', b: 'true', c: 'null' });\r\n```\r\n\r\nIf you wish to auto-convert values which look like numbers, booleans, and other values into their primitive counterparts, you can use the [query-types Express JS middleware](https://github.com/xpepermint/query-types) which will auto-convert all request query parameters.\r\n\r\n### Stringifying\r\n\r\n[](#preventEval)\r\n```javascript\r\nqs.stringify(object, [options]);\r\n```\r\n\r\nWhen stringifying, **qs** by default URI encodes output. Objects are stringified as you would expect:\r\n\r\n```javascript\r\nassert.equal(qs.stringify({ a: 'b' }), 'a=b');\r\nassert.equal(qs.stringify({ a: { b: 'c' } }), 'a%5Bb%5D=c');\r\n```\r\n\r\nThis encoding can be disabled by setting the `encode` option to `false`:\r\n\r\n```javascript\r\nvar unencoded = qs.stringify({ a: { b: 'c' } }, { encode: false });\r\nassert.equal(unencoded, 'a[b]=c');\r\n```\r\n\r\nEncoding can be disabled for keys by setting the `encodeValuesOnly` option to `true`:\r\n```javascript\r\nvar encodedValues = qs.stringify(\r\n    { a: 'b', c: ['d', 'e=f'], f: [['g'], ['h']] },\r\n    { encodeValuesOnly: true }\r\n);\r\nassert.equal(encodedValues,'a=b&c[0]=d&c[1]=e%3Df&f[0][0]=g&f[1][0]=h');\r\n```\r\n\r\nThis encoding can also be replaced by a custom encoding method set as `encoder` option:\r\n\r\n```javascript\r\nvar encoded = qs.stringify({ a: { b: 'c' } }, { encoder: function (str) {\r\n    // Passed in values `a`, `b`, `c`\r\n    return // Return encoded string\r\n}})\r\n```\r\n\r\n_(Note: the `encoder` option does not apply if `encode` is `false`)_\r\n\r\nAnalogue to the `encoder` there is a `decoder` option for `parse` to override decoding of properties and values:\r\n\r\n```javascript\r\nvar decoded = qs.parse('x=z', { decoder: function (str) {\r\n    // Passed in values `x`, `z`\r\n    return // Return decoded string\r\n}})\r\n```\r\n\r\nYou can encode keys and values using different logic by using the type argument provided to the encoder:\r\n\r\n```javascript\r\nvar encoded = qs.stringify({ a: { b: 'c' } }, { encoder: function (str, defaultEncoder, charset, type) {\r\n    if (type === 'key') {\r\n        return // Encoded key\r\n    } else if (type === 'value') {\r\n        return // Encoded value\r\n    }\r\n}})\r\n```\r\n\r\nThe type argument is also provided to the decoder:\r\n\r\n```javascript\r\nvar decoded = qs.parse('x=z', { decoder: function (str, defaultDecoder, charset, type) {\r\n    if (type === 'key') {\r\n        return // Decoded key\r\n    } else if (type === 'value') {\r\n        return // Decoded value\r\n    }\r\n}})\r\n```\r\n\r\nExamples beyond this point will be shown as though the output is not URI encoded for clarity. Please note that the return values in these cases *will* be URI encoded during real usage.\r\n\r\nWhen arrays are stringified, by default they are given explicit indices:\r\n\r\n```javascript\r\nqs.stringify({ a: ['b', 'c', 'd'] });\r\n// 'a[0]=b&a[1]=c&a[2]=d'\r\n```\r\n\r\nYou may override this by setting the `indices` option to `false`:\r\n\r\n```javascript\r\nqs.stringify({ a: ['b', 'c', 'd'] }, { indices: false });\r\n// 'a=b&a=c&a=d'\r\n```\r\n\r\nYou may use the `arrayFormat` option to specify the format of the output array:\r\n\r\n```javascript\r\nqs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'indices' })\r\n// 'a[0]=b&a[1]=c'\r\nqs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'brackets' })\r\n// 'a[]=b&a[]=c'\r\nqs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'repeat' })\r\n// 'a=b&a=c'\r\nqs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'comma' })\r\n// 'a=b,c'\r\n```\r\n\r\nNote: when using `arrayFormat` set to `'comma'`, you can also pass the `commaRoundTrip` option set to `true` or `false`, to append `[]` on single-item arrays, so that they can round trip through a parse.\r\n\r\nWhen objects are stringified, by default they use bracket notation:\r\n\r\n```javascript\r\nqs.stringify({ a: { b: { c: 'd', e: 'f' } } });\r\n// 'a[b][c]=d&a[b][e]=f'\r\n```\r\n\r\nYou may override this to use dot notation by setting the `allowDots` option to `true`:\r\n\r\n```javascript\r\nqs.stringify({ a: { b: { c: 'd', e: 'f' } } }, { allowDots: true });\r\n// 'a.b.c=d&a.b.e=f'\r\n```\r\n\r\nEmpty strings and null values will omit the value, but the equals sign (=) remains in place:\r\n\r\n```javascript\r\nassert.equal(qs.stringify({ a: '' }), 'a=');\r\n```\r\n\r\nKey with no values (such as an empty object or array) will return nothing:\r\n\r\n```javascript\r\nassert.equal(qs.stringify({ a: [] }), '');\r\nassert.equal(qs.stringify({ a: {} }), '');\r\nassert.equal(qs.stringify({ a: [{}] }), '');\r\nassert.equal(qs.stringify({ a: { b: []} }), '');\r\nassert.equal(qs.stringify({ a: { b: {}} }), '');\r\n```\r\n\r\nProperties that are set to `undefined` will be omitted entirely:\r\n\r\n```javascript\r\nassert.equal(qs.stringify({ a: null, b: undefined }), 'a=');\r\n```\r\n\r\nThe query string may optionally be prepended with a question mark:\r\n\r\n```javascript\r\nassert.equal(qs.stringify({ a: 'b', c: 'd' }, { addQueryPrefix: true }), '?a=b&c=d');\r\n```\r\n\r\nThe delimiter may be overridden with stringify as well:\r\n\r\n```javascript\r\nassert.equal(qs.stringify({ a: 'b', c: 'd' }, { delimiter: ';' }), 'a=b;c=d');\r\n```\r\n\r\nIf you only want to override the serialization of `Date` objects, you can provide a `serializeDate` option:\r\n\r\n```javascript\r\nvar date = new Date(7);\r\nassert.equal(qs.stringify({ a: date }), 'a=1970-01-01T00:00:00.007Z'.replace(/:/g, '%3A'));\r\nassert.equal(\r\n    qs.stringify({ a: date }, { serializeDate: function (d) { return d.getTime(); } }),\r\n    'a=7'\r\n);\r\n```\r\n\r\nYou may use the `sort` option to affect the order of parameter keys:\r\n\r\n```javascript\r\nfunction alphabeticalSort(a, b) {\r\n    return a.localeCompare(b);\r\n}\r\nassert.equal(qs.stringify({ a: 'c', z: 'y', b : 'f' }, { sort: alphabeticalSort }), 'a=c&b=f&z=y');\r\n```\r\n\r\nFinally, you can use the `filter` option to restrict which keys will be included in the stringified output.\r\nIf you pass a function, it will be called for each key to obtain the replacement value. Otherwise, if you\r\npass an array, it will be used to select properties and array indices for stringification:\r\n\r\n```javascript\r\nfunction filterFunc(prefix, value) {\r\n    if (prefix == 'b') {\r\n        // Return an `undefined` value to omit a property.\r\n        return;\r\n    }\r\n    if (prefix == 'e[f]') {\r\n        return value.getTime();\r\n    }\r\n    if (prefix == 'e[g][0]') {\r\n        return value * 2;\r\n    }\r\n    return value;\r\n}\r\nqs.stringify({ a: 'b', c: 'd', e: { f: new Date(123), g: [2] } }, { filter: filterFunc });\r\n// 'a=b&c=d&e[f]=123&e[g][0]=4'\r\nqs.stringify({ a: 'b', c: 'd', e: 'f' }, { filter: ['a', 'e'] });\r\n// 'a=b&e=f'\r\nqs.stringify({ a: ['b', 'c', 'd'], e: 'f' }, { filter: ['a', 0, 2] });\r\n// 'a[0]=b&a[2]=d'\r\n```\r\n\r\n### Handling of `null` values\r\n\r\nBy default, `null` values are treated like empty strings:\r\n\r\n```javascript\r\nvar withNull = qs.stringify({ a: null, b: '' });\r\nassert.equal(withNull, 'a=&b=');\r\n```\r\n\r\nParsing does not distinguish between parameters with and without equal signs. Both are converted to empty strings.\r\n\r\n```javascript\r\nvar equalsInsensitive = qs.parse('a&b=');\r\nassert.deepEqual(equalsInsensitive, { a: '', b: '' });\r\n```\r\n\r\nTo distinguish between `null` values and empty strings use the `strictNullHandling` flag. In the result string the `null`\r\nvalues have no `=` sign:\r\n\r\n```javascript\r\nvar strictNull = qs.stringify({ a: null, b: '' }, { strictNullHandling: true });\r\nassert.equal(strictNull, 'a&b=');\r\n```\r\n\r\nTo parse values without `=` back to `null` use the `strictNullHandling` flag:\r\n\r\n```javascript\r\nvar parsedStrictNull = qs.parse('a&b=', { strictNullHandling: true });\r\nassert.deepEqual(parsedStrictNull, { a: null, b: '' });\r\n```\r\n\r\nTo completely skip rendering keys with `null` values, use the `skipNulls` flag:\r\n\r\n```javascript\r\nvar nullsSkipped = qs.stringify({ a: 'b', c: null}, { skipNulls: true });\r\nassert.equal(nullsSkipped, 'a=b');\r\n```\r\n\r\nIf you're communicating with legacy systems, you can switch to `iso-8859-1`\r\nusing the `charset` option:\r\n\r\n```javascript\r\nvar iso = qs.stringify({ æ: 'æ' }, { charset: 'iso-8859-1' });\r\nassert.equal(iso, '%E6=%E6');\r\n```\r\n\r\nCharacters that don't exist in `iso-8859-1` will be converted to numeric\r\nentities, similar to what browsers do:\r\n\r\n```javascript\r\nvar numeric = qs.stringify({ a: '☺' }, { charset: 'iso-8859-1' });\r\nassert.equal(numeric, 'a=%26%239786%3B');\r\n```\r\n\r\nYou can use the `charsetSentinel` option to announce the character by\r\nincluding an `utf8=✓` parameter with the proper encoding if the checkmark,\r\nsimilar to what Ruby on Rails and others do when submitting forms.\r\n\r\n```javascript\r\nvar sentinel = qs.stringify({ a: '☺' }, { charsetSentinel: true });\r\nassert.equal(sentinel, 'utf8=%E2%9C%93&a=%E2%98%BA');\r\n\r\nvar isoSentinel = qs.stringify({ a: 'æ' }, { charsetSentinel: true, charset: 'iso-8859-1' });\r\nassert.equal(isoSentinel, 'utf8=%26%2310003%3B&a=%E6');\r\n```\r\n\r\n### Dealing with special character sets\r\n\r\nBy default the encoding and decoding of characters is done in `utf-8`,\r\nand `iso-8859-1` support is also built in via the `charset` parameter.\r\n\r\nIf you wish to encode querystrings to a different character set (i.e.\r\n[Shift JIS](https://en.wikipedia.org/wiki/Shift_JIS)) you can use the\r\n[`qs-iconv`](https://github.com/martinheidegger/qs-iconv) library:\r\n\r\n```javascript\r\nvar encoder = require('qs-iconv/encoder')('shift_jis');\r\nvar shiftJISEncoded = qs.stringify({ a: 'こんにちは！' }, { encoder: encoder });\r\nassert.equal(shiftJISEncoded, 'a=%82%B1%82%F1%82%C9%82%BF%82%CD%81I');\r\n```\r\n\r\nThis also works for decoding of query strings:\r\n\r\n```javascript\r\nvar decoder = require('qs-iconv/decoder')('shift_jis');\r\nvar obj = qs.parse('a=%82%B1%82%F1%82%C9%82%BF%82%CD%81I', { decoder: decoder });\r\nassert.deepEqual(obj, { a: 'こんにちは！' });\r\n```\r\n\r\n### RFC 3986 and RFC 1738 space encoding\r\n\r\nRFC3986 used as default option and encodes ' ' to *%20* which is backward compatible.\r\nIn the same time, output can be stringified as per RFC1738 with ' ' equal to '+'.\r\n\r\n```\r\nassert.equal(qs.stringify({ a: 'b c' }), 'a=b%20c');\r\nassert.equal(qs.stringify({ a: 'b c' }, { format : 'RFC3986' }), 'a=b%20c');\r\nassert.equal(qs.stringify({ a: 'b c' }, { format : 'RFC1738' }), 'a=b+c');\r\n```\r\n\r\n## Security\r\n\r\nPlease email [@ljharb](https://github.com/ljharb) or see https://tidelift.com/security if you have a potential security vulnerability to report.\r\n\r\n## qs for enterprise\r\n\r\nAvailable as part of the Tidelift Subscription\r\n\r\nThe maintainers of qs and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-qs?utm_source=npm-qs&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\r\n\r\n[package-url]: https://npmjs.org/package/qs\r\n[npm-version-svg]: https://versionbadg.es/ljharb/qs.svg\r\n[deps-svg]: https://david-dm.org/ljharb/qs.svg\r\n[deps-url]: https://david-dm.org/ljharb/qs\r\n[dev-deps-svg]: https://david-dm.org/ljharb/qs/dev-status.svg\r\n[dev-deps-url]: https://david-dm.org/ljharb/qs#info=devDependencies\r\n[npm-badge-png]: https://nodei.co/npm/qs.png?downloads=true&stars=true\r\n[license-image]: https://img.shields.io/npm/l/qs.svg\r\n[license-url]: LICENSE\r\n[downloads-image]: https://img.shields.io/npm/dm/qs.svg\r\n[downloads-url]: https://npm-stat.com/charts.html?package=qs\r\n[codecov-image]: https://codecov.io/gh/ljharb/qs/branch/main/graphs/badge.svg\r\n[codecov-url]: https://app.codecov.io/gh/ljharb/qs/\r\n[actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/qs\r\n[actions-url]: https://github.com/ljharb/qs/actions\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/qs/README.md b/node_modules/qs/README.md
--- a/node_modules/qs/README.md	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/qs/README.md	(date 1753913035200)
@@ -1,11 +1,14 @@
+<p align="center">
+    <img alt="qs" src="./logos/banner_default.png" width="800" />
+</p>
+
 # qs <sup>[![Version Badge][npm-version-svg]][package-url]</sup>
 
 [![github actions][actions-image]][actions-url]
 [![coverage][codecov-image]][codecov-url]
-[![dependency status][deps-svg]][deps-url]
-[![dev dependency status][dev-deps-svg]][dev-deps-url]
 [![License][license-image]][license-url]
 [![Downloads][downloads-image]][downloads-url]
+[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/9058/badge)](https://bestpractices.coreinfrastructure.org/projects/9058)
 
 [![npm badge][npm-badge-png]][package-url]
 
@@ -53,7 +56,9 @@
 assert.deepEqual(nullObject, { a: { hasOwnProperty: 'b' } });
 ```
 
-By default parameters that would overwrite properties on the object prototype are ignored, if you wish to keep the data from those fields either use `plainObjects` as mentioned above, or set `allowPrototypes` to `true` which will allow user input to overwrite those properties. *WARNING* It is generally a bad idea to enable this option as it can cause problems when attempting to use the properties that have been overwritten. Always be careful with this option.
+By default parameters that would overwrite properties on the object prototype are ignored, if you wish to keep the data from those fields either use `plainObjects` as mentioned above, or set `allowPrototypes` to `true` which will allow user input to overwrite those properties.
+*WARNING* It is generally a bad idea to enable this option as it can cause problems when attempting to use the properties that have been overwritten.
+Always be careful with this option.
 
 ```javascript
 var protoObject = qs.parse('a[hasOwnProperty]=b', { allowPrototypes: true });
@@ -80,8 +85,8 @@
 });
 ```
 
-By default, when nesting objects **qs** will only parse up to 5 children deep. This means if you attempt to parse a string like
-`'a[b][c][d][e][f][g][h][i]=j'` your resulting object will be:
+By default, when nesting objects **qs** will only parse up to 5 children deep.
+This means if you attempt to parse a string like `'a[b][c][d][e][f][g][h][i]=j'` your resulting object will be:
 
 ```javascript
 var expected = {
@@ -110,7 +115,18 @@
 assert.deepEqual(deep, { a: { b: { '[c][d][e][f][g][h][i]': 'j' } } });
 ```
 
-The depth limit helps mitigate abuse when **qs** is used to parse user input, and it is recommended to keep it a reasonably small number.
+You can configure **qs** to throw an error when parsing nested input beyond this depth using the `strictDepth` option (defaulted to false):
+
+```javascript
+try {
+    qs.parse('a[b][c][d][e][f][g][h][i]=j', { depth: 1, strictDepth: true });
+} catch (err) {
+    assert(err instanceof RangeError);
+    assert.strictEqual(err.message, 'Input depth exceeded depth option of 1 and strictDepth is true');
+}
+```
+
+The depth limit helps mitigate abuse when **qs** is used to parse user input, and it is recommended to keep it a reasonably small number. The strictDepth option adds a layer of protection by throwing an error when the limit is exceeded, allowing you to catch and handle such cases.
 
 For similar reasons, by default **qs** will only parse up to 1000 parameters. This can be overridden by passing a `parameterLimit` option:
 
@@ -147,32 +163,44 @@
 assert.deepEqual(withDots, { a: { b: 'c' } });
 ```
 
-If you have to deal with legacy browsers or services, there's
-also support for decoding percent-encoded octets as iso-8859-1:
+Option `decodeDotInKeys` can be used to decode dots in keys
+Note: it implies `allowDots`, so `parse` will error if you set `decodeDotInKeys` to `true`, and `allowDots` to `false`.
+
+```javascript
+var withDots = qs.parse('name%252Eobj.first=John&name%252Eobj.last=Doe', { decodeDotInKeys: true });
+assert.deepEqual(withDots, { 'name.obj': { first: 'John', last: 'Doe' }});
+```
+
+Option `allowEmptyArrays` can be used to allowing empty array values in object
+```javascript
+var withEmptyArrays = qs.parse('foo[]&bar=baz', { allowEmptyArrays: true });
+assert.deepEqual(withEmptyArrays, { foo: [], bar: 'baz' });
+```
+
+Option `duplicates` can be used to change the behavior when duplicate keys are encountered
+```javascript
+assert.deepEqual(qs.parse('foo=bar&foo=baz'), { foo: ['bar', 'baz'] });
+assert.deepEqual(qs.parse('foo=bar&foo=baz', { duplicates: 'combine' }), { foo: ['bar', 'baz'] });
+assert.deepEqual(qs.parse('foo=bar&foo=baz', { duplicates: 'first' }), { foo: 'bar' });
+assert.deepEqual(qs.parse('foo=bar&foo=baz', { duplicates: 'last' }), { foo: 'baz' });
+```
+
+If you have to deal with legacy browsers or services, there's also support for decoding percent-encoded octets as iso-8859-1:
 
 ```javascript
 var oldCharset = qs.parse('a=%A7', { charset: 'iso-8859-1' });
 assert.deepEqual(oldCharset, { a: '§' });
 ```
 
-Some services add an initial `utf8=✓` value to forms so that old
-Internet Explorer versions are more likely to submit the form as
-utf-8. Additionally, the server can check the value against wrong
-encodings of the checkmark character and detect that a query string
-or `application/x-www-form-urlencoded` body was *not* sent as
-utf-8, eg. if the form had an `accept-charset` parameter or the
-containing page had a different character set.
+Some services add an initial `utf8=✓` value to forms so that old Internet Explorer versions are more likely to submit the form as utf-8.
+Additionally, the server can check the value against wrong encodings of the checkmark character and detect that a query string or `application/x-www-form-urlencoded` body was *not* sent as utf-8, eg. if the form had an `accept-charset` parameter or the containing page had a different character set.
 
 **qs** supports this mechanism via the `charsetSentinel` option.
-If specified, the `utf8` parameter will be omitted from the
-returned object. It will be used to switch to `iso-8859-1`/`utf-8`
-mode depending on how the checkmark is encoded.
+If specified, the `utf8` parameter will be omitted from the returned object.
+It will be used to switch to `iso-8859-1`/`utf-8` mode depending on how the checkmark is encoded.
 
-**Important**: When you specify both the `charset` option and the
-`charsetSentinel` option, the `charset` will be overridden when
-the request contains a `utf8` parameter from which the actual
-charset can be deduced. In that sense the `charset` will behave
-as the default charset rather than the authoritative charset.
+**Important**: When you specify both the `charset` option and the `charsetSentinel` option, the `charset` will be overridden when the request contains a `utf8` parameter from which the actual charset can be deduced.
+In that sense the `charset` will behave as the default charset rather than the authoritative charset.
 
 ```javascript
 var detectedAsUtf8 = qs.parse('utf8=%E2%9C%93&a=%C3%B8', {
@@ -189,8 +217,7 @@
 assert.deepEqual(detectedAsIso8859_1, { a: 'ø' });
 ```
 
-If you want to decode the `&#...;` syntax to the actual character,
-you can specify the `interpretNumericEntities` option as well:
+If you want to decode the `&#...;` syntax to the actual character, you can specify the `interpretNumericEntities` option as well:
 
 ```javascript
 var detectedAsIso8859_1 = qs.parse('a=%26%239786%3B', {
@@ -200,8 +227,7 @@
 assert.deepEqual(detectedAsIso8859_1, { a: '☺' });
 ```
 
-It also works when the charset has been detected in `charsetSentinel`
-mode.
+It also works when the charset has been detected in `charsetSentinel` mode.
 
 ### Parsing Arrays
 
@@ -219,9 +245,8 @@
 assert.deepEqual(withIndexes, { a: ['b', 'c'] });
 ```
 
-Note that the only difference between an index in an array and a key in an object is that the value between the brackets must be a number
-to create an array. When creating arrays with specific indices, **qs** will compact a sparse array to only the existing values preserving
-their order:
+Note that the only difference between an index in an array and a key in an object is that the value between the brackets must be a number to create an array.
+When creating arrays with specific indices, **qs** will compact a sparse array to only the existing values preserving their order:
 
 ```javascript
 var noSparse = qs.parse('a[1]=b&a[15]=c');
@@ -245,8 +270,9 @@
 assert.deepEqual(withIndexedEmptyString, { a: ['b', '', 'c'] });
 ```
 
-**qs** will also limit specifying indices in an array to a maximum index of `20`. Any array members with an index of greater than `20` will
-instead be converted to an object with the index as the key. This is needed to handle cases when someone sent, for example, `a[999999999]` and it will take significant time to iterate over this huge array.
+**qs** will also limit specifying indices in an array to a maximum index of `20`.
+Any array members with an index of greater than `20` will instead be converted to an object with the index as the key.
+This is needed to handle cases when someone sent, for example, `a[999999999]` and it will take significant time to iterate over this huge array.
 
 ```javascript
 var withMaxIndex = qs.parse('a[100]=b');
@@ -290,7 +316,8 @@
 
 ### Parsing primitive/scalar values (numbers, booleans, null, etc)
 
-By default, all values are parsed as strings. This behavior will not change and is explained in [issue #91](https://github.com/ljharb/qs/issues/91).
+By default, all values are parsed as strings.
+This behavior will not change and is explained in [issue #91](https://github.com/ljharb/qs/issues/91).
 
 ```javascript
 var primitiveValues = qs.parse('a=15&b=true&c=null');
@@ -373,16 +400,17 @@
 }})
 ```
 
-Examples beyond this point will be shown as though the output is not URI encoded for clarity. Please note that the return values in these cases *will* be URI encoded during real usage.
+Examples beyond this point will be shown as though the output is not URI encoded for clarity.
+Please note that the return values in these cases *will* be URI encoded during real usage.
 
-When arrays are stringified, by default they are given explicit indices:
+When arrays are stringified, they follow the `arrayFormat` option, which defaults to `indices`:
 
 ```javascript
 qs.stringify({ a: ['b', 'c', 'd'] });
 // 'a[0]=b&a[1]=c&a[2]=d'
 ```
 
-You may override this by setting the `indices` option to `false`:
+You may override this by setting the `indices` option to `false`, or to be more explicit, the `arrayFormat` option to `repeat`:
 
 ```javascript
 qs.stringify({ a: ['b', 'c', 'd'] }, { indices: false });
@@ -418,6 +446,20 @@
 // 'a.b.c=d&a.b.e=f'
 ```
 
+You may encode the dot notation in the keys of object with option `encodeDotInKeys` by setting it to `true`:
+Note: it implies `allowDots`, so `stringify` will error if you set `decodeDotInKeys` to `true`, and `allowDots` to `false`.
+Caveat: when `encodeValuesOnly` is `true` as well as `encodeDotInKeys`, only dots in keys and nothing else will be encoded.
+```javascript
+qs.stringify({ "name.obj": { "first": "John", "last": "Doe" } }, { allowDots: true, encodeDotInKeys: true })
+// 'name%252Eobj.first=John&name%252Eobj.last=Doe'
+```
+
+You may allow empty array values by setting the `allowEmptyArrays` option to `true`:
+```javascript
+qs.stringify({ foo: [], bar: 'baz' }, { allowEmptyArrays: true });
+// 'foo[]&bar=baz'
+```
+
 Empty strings and null values will omit the value, but the equals sign (=) remains in place:
 
 ```javascript
@@ -473,8 +515,8 @@
 ```
 
 Finally, you can use the `filter` option to restrict which keys will be included in the stringified output.
-If you pass a function, it will be called for each key to obtain the replacement value. Otherwise, if you
-pass an array, it will be used to select properties and array indices for stringification:
+If you pass a function, it will be called for each key to obtain the replacement value.
+Otherwise, if you pass an array, it will be used to select properties and array indices for stringification:
 
 ```javascript
 function filterFunc(prefix, value) {
@@ -498,6 +540,44 @@
 // 'a[0]=b&a[2]=d'
 ```
 
+You could also use `filter` to inject custom serialization for user defined types.
+Consider you're working with some api that expects query strings of the format for ranges:
+
+```
+https://domain.com/endpoint?range=30...70
+```
+
+For which you model as:
+
+```javascript
+class Range {
+    constructor(from, to) {
+        this.from = from;
+        this.to = to;
+    }
+}
+```
+
+You could _inject_ a custom serializer to handle values of this type:
+
+```javascript
+qs.stringify(
+    {
+        range: new Range(30, 70),
+    },
+    {
+        filter: (prefix, value) => {
+            if (value instanceof Range) {
+                return `${value.from}...${value.to}`;
+            }
+            // serialize the usual way
+            return value;
+        },
+    }
+);
+// range=30...70
+```
+
 ### Handling of `null` values
 
 By default, `null` values are treated like empty strings:
@@ -507,7 +587,8 @@
 assert.equal(withNull, 'a=&b=');
 ```
 
-Parsing does not distinguish between parameters with and without equal signs. Both are converted to empty strings.
+Parsing does not distinguish between parameters with and without equal signs.
+Both are converted to empty strings.
 
 ```javascript
 var equalsInsensitive = qs.parse('a&b=');
@@ -536,25 +617,21 @@
 assert.equal(nullsSkipped, 'a=b');
 ```
 
-If you're communicating with legacy systems, you can switch to `iso-8859-1`
-using the `charset` option:
+If you're communicating with legacy systems, you can switch to `iso-8859-1` using the `charset` option:
 
 ```javascript
 var iso = qs.stringify({ æ: 'æ' }, { charset: 'iso-8859-1' });
 assert.equal(iso, '%E6=%E6');
 ```
 
-Characters that don't exist in `iso-8859-1` will be converted to numeric
-entities, similar to what browsers do:
+Characters that don't exist in `iso-8859-1` will be converted to numeric entities, similar to what browsers do:
 
 ```javascript
 var numeric = qs.stringify({ a: '☺' }, { charset: 'iso-8859-1' });
 assert.equal(numeric, 'a=%26%239786%3B');
 ```
 
-You can use the `charsetSentinel` option to announce the character by
-including an `utf8=✓` parameter with the proper encoding if the checkmark,
-similar to what Ruby on Rails and others do when submitting forms.
+You can use the `charsetSentinel` option to announce the character by including an `utf8=✓` parameter with the proper encoding if the checkmark, similar to what Ruby on Rails and others do when submitting forms.
 
 ```javascript
 var sentinel = qs.stringify({ a: '☺' }, { charsetSentinel: true });
@@ -566,8 +643,7 @@
 
 ### Dealing with special character sets
 
-By default the encoding and decoding of characters is done in `utf-8`,
-and `iso-8859-1` support is also built in via the `charset` parameter.
+By default the encoding and decoding of characters is done in `utf-8`, and `iso-8859-1` support is also built in via the `charset` parameter.
 
 If you wish to encode querystrings to a different character set (i.e.
 [Shift JIS](https://en.wikipedia.org/wiki/Shift_JIS)) you can use the
@@ -606,7 +682,9 @@
 
 Available as part of the Tidelift Subscription
 
-The maintainers of qs and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-qs?utm_source=npm-qs&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)
+The maintainers of qs and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications.
+Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use.
+[Learn more.](https://tidelift.com/subscription/pkg/npm-qs?utm_source=npm-qs&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)
 
 [package-url]: https://npmjs.org/package/qs
 [npm-version-svg]: https://versionbadg.es/ljharb/qs.svg
@@ -623,3 +701,9 @@
 [codecov-url]: https://app.codecov.io/gh/ljharb/qs/
 [actions-image]: https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/qs
 [actions-url]: https://github.com/ljharb/qs/actions
+
+## Acknowledgements
+
+qs logo by [NUMI](https://github.com/numi-hq/open-design):
+
+[<img src="https://raw.githubusercontent.com/numi-hq/open-design/main/assets/numi-lockup.png" alt="NUMI Logo" style="width: 200px;"/>](https://numi.tech/?ref=qs)
Index: node_modules/qs/package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>{\r\n    \"name\": \"qs\",\r\n    \"description\": \"A querystring parser that supports nesting and arrays, with a depth limit\",\r\n    \"homepage\": \"https://github.com/ljharb/qs\",\r\n    \"version\": \"6.11.0\",\r\n    \"repository\": {\r\n        \"type\": \"git\",\r\n        \"url\": \"https://github.com/ljharb/qs.git\"\r\n    },\r\n    \"funding\": {\r\n        \"url\": \"https://github.com/sponsors/ljharb\"\r\n    },\r\n    \"main\": \"lib/index.js\",\r\n    \"contributors\": [\r\n        {\r\n            \"name\": \"Jordan Harband\",\r\n            \"email\": \"ljharb@gmail.com\",\r\n            \"url\": \"http://ljharb.codes\"\r\n        }\r\n    ],\r\n    \"keywords\": [\r\n        \"querystring\",\r\n        \"qs\",\r\n        \"query\",\r\n        \"url\",\r\n        \"parse\",\r\n        \"stringify\"\r\n    ],\r\n    \"engines\": {\r\n        \"node\": \">=0.6\"\r\n    },\r\n    \"dependencies\": {\r\n        \"side-channel\": \"^1.0.4\"\r\n    },\r\n    \"devDependencies\": {\r\n        \"@ljharb/eslint-config\": \"^21.0.0\",\r\n        \"aud\": \"^2.0.0\",\r\n        \"browserify\": \"^16.5.2\",\r\n        \"eclint\": \"^2.8.1\",\r\n        \"eslint\": \"=8.8.0\",\r\n        \"evalmd\": \"^0.0.19\",\r\n        \"for-each\": \"^0.3.3\",\r\n        \"has-symbols\": \"^1.0.3\",\r\n        \"iconv-lite\": \"^0.5.1\",\r\n        \"in-publish\": \"^2.0.1\",\r\n        \"mkdirp\": \"^0.5.5\",\r\n        \"npmignore\": \"^0.3.0\",\r\n        \"nyc\": \"^10.3.2\",\r\n        \"object-inspect\": \"^1.12.2\",\r\n        \"qs-iconv\": \"^1.0.4\",\r\n        \"safe-publish-latest\": \"^2.0.0\",\r\n        \"safer-buffer\": \"^2.1.2\",\r\n        \"tape\": \"^5.5.3\"\r\n    },\r\n    \"scripts\": {\r\n        \"prepack\": \"npmignore --auto --commentLines=autogenerated\",\r\n        \"prepublishOnly\": \"safe-publish-latest && npm run dist\",\r\n        \"prepublish\": \"not-in-publish || npm run prepublishOnly\",\r\n        \"pretest\": \"npm run --silent readme && npm run --silent lint\",\r\n        \"test\": \"npm run tests-only\",\r\n        \"tests-only\": \"nyc tape 'test/**/*.js'\",\r\n        \"posttest\": \"aud --production\",\r\n        \"readme\": \"evalmd README.md\",\r\n        \"postlint\": \"eclint check $(git ls-files | xargs find 2> /dev/null | grep -vE 'node_modules|\\\\.git' | grep -v dist/)\",\r\n        \"lint\": \"eslint --ext=js,mjs .\",\r\n        \"dist\": \"mkdirp dist && browserify --standalone Qs lib/index.js > dist/qs.js\"\r\n    },\r\n    \"license\": \"BSD-3-Clause\",\r\n    \"publishConfig\": {\r\n        \"ignore\": [\r\n            \"!dist/*\",\r\n            \"bower.json\",\r\n            \"component.json\",\r\n            \".github/workflows\"\r\n        ]\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/qs/package.json b/node_modules/qs/package.json
--- a/node_modules/qs/package.json	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/qs/package.json	(date 1753913035193)
@@ -2,7 +2,7 @@
     "name": "qs",
     "description": "A querystring parser that supports nesting and arrays, with a depth limit",
     "homepage": "https://github.com/ljharb/qs",
-    "version": "6.11.0",
+    "version": "6.13.0",
     "repository": {
         "type": "git",
         "url": "https://github.com/ljharb/qs.git"
@@ -11,6 +11,7 @@
         "url": "https://github.com/sponsors/ljharb"
     },
     "main": "lib/index.js",
+    "sideEffects": false,
     "contributors": [
         {
             "name": "Jordan Harband",
@@ -30,40 +31,51 @@
         "node": ">=0.6"
     },
     "dependencies": {
-        "side-channel": "^1.0.4"
+        "side-channel": "^1.0.6"
     },
     "devDependencies": {
-        "@ljharb/eslint-config": "^21.0.0",
-        "aud": "^2.0.0",
+        "@browserify/envify": "^6.0.0",
+        "@browserify/uglifyify": "^6.0.0",
+        "@ljharb/eslint-config": "^21.1.1",
         "browserify": "^16.5.2",
+        "bundle-collapser": "^1.4.0",
+        "common-shakeify": "~1.0.0",
         "eclint": "^2.8.1",
+        "es-value-fixtures": "^1.4.2",
         "eslint": "=8.8.0",
         "evalmd": "^0.0.19",
         "for-each": "^0.3.3",
+        "glob": "=10.3.7",
+        "has-override-mistake": "^1.0.1",
+        "has-property-descriptors": "^1.0.2",
         "has-symbols": "^1.0.3",
         "iconv-lite": "^0.5.1",
         "in-publish": "^2.0.1",
+        "jackspeak": "=2.1.1",
         "mkdirp": "^0.5.5",
-        "npmignore": "^0.3.0",
+        "mock-property": "^1.0.3",
+        "module-deps": "^6.2.3",
+        "npmignore": "^0.3.1",
         "nyc": "^10.3.2",
-        "object-inspect": "^1.12.2",
+        "object-inspect": "^1.13.2",
         "qs-iconv": "^1.0.4",
         "safe-publish-latest": "^2.0.0",
         "safer-buffer": "^2.1.2",
-        "tape": "^5.5.3"
+        "tape": "^5.8.1",
+        "unassertify": "^3.0.1"
     },
     "scripts": {
-        "prepack": "npmignore --auto --commentLines=autogenerated",
-        "prepublishOnly": "safe-publish-latest && npm run dist",
+        "prepack": "npmignore --auto --commentLines=autogenerated && npm run dist",
+        "prepublishOnly": "safe-publish-latest",
         "prepublish": "not-in-publish || npm run prepublishOnly",
         "pretest": "npm run --silent readme && npm run --silent lint",
         "test": "npm run tests-only",
         "tests-only": "nyc tape 'test/**/*.js'",
-        "posttest": "aud --production",
+        "posttest": "npx npm@'>=10.2' audit --production",
         "readme": "evalmd README.md",
         "postlint": "eclint check $(git ls-files | xargs find 2> /dev/null | grep -vE 'node_modules|\\.git' | grep -v dist/)",
         "lint": "eslint --ext=js,mjs .",
-        "dist": "mkdirp dist && browserify --standalone Qs lib/index.js > dist/qs.js"
+        "dist": "mkdirp dist && browserify --standalone Qs -g unassertify -g @browserify/envify -g [@browserify/uglifyify --mangle.keep_fnames --compress.keep_fnames --format.indent_level=1 --compress.arrows=false --compress.passes=4 --compress.typeofs=false] -p common-shakeify -p bundle-collapser/plugin lib/index.js > dist/qs.js"
     },
     "license": "BSD-3-Clause",
     "publishConfig": {
@@ -71,7 +83,9 @@
             "!dist/*",
             "bower.json",
             "component.json",
-            ".github/workflows"
+            ".github/workflows",
+            "logos",
+            "tea.yaml"
         ]
     }
 }
Index: node_modules/nodemon/lib/nodemon.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>var debug = require('debug')('nodemon');\r\nvar path = require('path');\r\nvar monitor = require('./monitor');\r\nvar cli = require('./cli');\r\nvar version = require('./version');\r\nvar util = require('util');\r\nvar utils = require('./utils');\r\nvar bus = utils.bus;\r\nvar help = require('./help');\r\nvar config = require('./config');\r\nvar spawn = require('./spawn');\r\nconst defaults = require('./config/defaults')\r\nvar eventHandlers = {};\r\n\r\n// this is fairly dirty, but theoretically sound since it's part of the\r\n// stable module API\r\nconfig.required = utils.isRequired;\r\n\r\nfunction nodemon(settings) {\r\n  bus.emit('boot');\r\n  nodemon.reset();\r\n\r\n  // allow the cli string as the argument to nodemon, and allow for\r\n  // `node nodemon -V app.js` or just `-V app.js`\r\n  if (typeof settings === 'string') {\r\n    settings = settings.trim();\r\n    if (settings.indexOf('node') !== 0) {\r\n      if (settings.indexOf('nodemon') !== 0) {\r\n        settings = 'nodemon ' + settings;\r\n      }\r\n      settings = 'node ' + settings;\r\n    }\r\n    settings = cli.parse(settings);\r\n  }\r\n\r\n  // set the debug flag as early as possible to get all the detailed logging\r\n  if (settings.verbose) {\r\n    utils.debug = true;\r\n  }\r\n\r\n  if (settings.help) {\r\n    if (process.stdout.isTTY) {\r\n      process.stdout._handle.setBlocking(true); // nodejs/node#6456\r\n    }\r\n    console.log(help(settings.help));\r\n    if (!config.required) {\r\n      process.exit(0);\r\n    }\r\n  }\r\n\r\n  if (settings.version) {\r\n    version().then(function (v) {\r\n      console.log(v);\r\n      if (!config.required) {\r\n        process.exit(0);\r\n      }\r\n    });\r\n    return;\r\n  }\r\n\r\n  // nodemon tools like grunt-nodemon. This affects where\r\n  // the script is being run from, and will affect where\r\n  // nodemon looks for the nodemon.json files\r\n  if (settings.cwd) {\r\n    // this is protection to make sure we haven't dont the chdir already...\r\n    // say like in cli/parse.js (which is where we do this once already!)\r\n    if (process.cwd() !== path.resolve(config.system.cwd, settings.cwd)) {\r\n      process.chdir(settings.cwd);\r\n    }\r\n  }\r\n\r\n  const cwd = process.cwd();\r\n\r\n  config.load(settings, function (config) {\r\n    if (!config.options.dump && !config.options.execOptions.script &&\r\n      config.options.execOptions.exec === 'node') {\r\n      if (!config.required) {\r\n        console.log(help('usage'));\r\n        process.exit();\r\n      }\r\n      return;\r\n    }\r\n\r\n    // before we print anything, update the colour setting on logging\r\n    utils.colours = config.options.colours;\r\n\r\n    // always echo out the current version\r\n    utils.log.info(version.pinned);\r\n\r\n    const cwd = process.cwd();\r\n\r\n    if (config.options.cwd) {\r\n      utils.log.detail('process root: ' + cwd);\r\n    }\r\n\r\n    config.loaded.map(file => file.replace(cwd, '.')).forEach(file => {\r\n      utils.log.detail('reading config ' + file);\r\n    });\r\n\r\n    if (config.options.stdin && config.options.restartable) {\r\n      // allow nodemon to restart when the use types 'rs\\n'\r\n      process.stdin.resume();\r\n      process.stdin.setEncoding('utf8');\r\n      process.stdin.on('data', data => {\r\n        const str = data.toString().trim().toLowerCase();\r\n\r\n        // if the keys entered match the restartable value, then restart!\r\n        if (str === config.options.restartable) {\r\n          bus.emit('restart');\r\n        } else if (data.charCodeAt(0) === 12) { // ctrl+l\r\n          console.clear();\r\n        }\r\n      });\r\n    } else if (config.options.stdin) {\r\n      // so let's make sure we don't eat the key presses\r\n      // but also, since we're wrapping, watch out for\r\n      // special keys, like ctrl+c x 2 or '.exit' or ctrl+d or ctrl+l\r\n      var ctrlC = false;\r\n      var buffer = '';\r\n\r\n      process.stdin.on('data', function (data) {\r\n        data = data.toString();\r\n        buffer += data;\r\n        const chr = data.charCodeAt(0);\r\n\r\n        // if restartable, echo back\r\n        if (chr === 3) {\r\n          if (ctrlC) {\r\n            process.exit(0);\r\n          }\r\n\r\n          ctrlC = true;\r\n          return;\r\n        } else if (buffer === '.exit' || chr === 4) { // ctrl+d\r\n          process.exit();\r\n        } else if (chr === 13 || chr === 10) { // enter / carriage return\r\n          buffer = '';\r\n        } else if (chr === 12) { // ctrl+l\r\n          console.clear();\r\n          buffer = '';\r\n        }\r\n        ctrlC = false;\r\n      });\r\n      if (process.stdin.setRawMode) {\r\n        process.stdin.setRawMode(true);\r\n      }\r\n    }\r\n\r\n    if (config.options.restartable) {\r\n      utils.log.info('to restart at any time, enter `' +\r\n        config.options.restartable + '`');\r\n    }\r\n\r\n    if (!config.required) {\r\n      const restartSignal = config.options.signal === 'SIGUSR2' ? 'SIGHUP' : 'SIGUSR2';\r\n      process.on(restartSignal, nodemon.restart);\r\n      utils.bus.on('error', () => {\r\n        utils.log.fail((new Error().stack));\r\n      });\r\n      utils.log.detail((config.options.restartable ? 'or ' : '') + 'send ' +\r\n        restartSignal + ' to ' + process.pid + ' to restart');\r\n    }\r\n\r\n    const ignoring = config.options.monitor.map(function (rule) {\r\n      if (rule.slice(0, 1) !== '!') {\r\n        return false;\r\n      }\r\n\r\n      rule = rule.slice(1);\r\n\r\n      // don't notify of default ignores\r\n      if (defaults.ignoreRoot.indexOf(rule) !== -1) {\r\n        return false;\r\n        return rule.slice(3).slice(0, -3);\r\n      }\r\n\r\n      if (rule.startsWith(cwd)) {\r\n        return rule.replace(cwd, '.');\r\n      }\r\n\r\n      return rule;\r\n    }).filter(Boolean).join(' ');\r\n    if (ignoring) utils.log.detail('ignoring: ' + ignoring);\r\n\r\n    utils.log.info('watching path(s): ' + config.options.monitor.map(function (rule) {\r\n      if (rule.slice(0, 1) !== '!') {\r\n        try {\r\n          rule = path.relative(process.cwd(), rule);\r\n        } catch (e) {}\r\n\r\n        return rule;\r\n      }\r\n\r\n      return false;\r\n    }).filter(Boolean).join(' '));\r\n\r\n    utils.log.info('watching extensions: ' + (config.options.execOptions.ext || '(all)'));\r\n\r\n    if (config.options.dump) {\r\n      utils.log._log('log', '--------------');\r\n      utils.log._log('log', 'node: ' + process.version);\r\n      utils.log._log('log', 'nodemon: ' + version.pinned);\r\n      utils.log._log('log', 'command: ' + process.argv.join(' '));\r\n      utils.log._log('log', 'cwd: ' + cwd);\r\n      utils.log._log('log', ['OS:', process.platform, process.arch].join(' '));\r\n      utils.log._log('log', '--------------');\r\n      utils.log._log('log', util.inspect(config, { depth: null }));\r\n      utils.log._log('log', '--------------');\r\n      if (!config.required) {\r\n        process.exit();\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    config.run = true;\r\n\r\n    if (config.options.stdout === false) {\r\n      nodemon.on('start', function () {\r\n        nodemon.stdout = bus.stdout;\r\n        nodemon.stderr = bus.stderr;\r\n\r\n        bus.emit('readable');\r\n      });\r\n    }\r\n\r\n    if (config.options.events && Object.keys(config.options.events).length) {\r\n      Object.keys(config.options.events).forEach(function (key) {\r\n        utils.log.detail('bind ' + key + ' -> `' +\r\n          config.options.events[key] + '`');\r\n        nodemon.on(key, function () {\r\n          if (config.options && config.options.events) {\r\n            spawn(config.options.events[key], config,\r\n              [].slice.apply(arguments));\r\n          }\r\n        });\r\n      });\r\n    }\r\n\r\n    monitor.run(config.options);\r\n\r\n  });\r\n\r\n  return nodemon;\r\n}\r\n\r\nnodemon.restart = function () {\r\n  utils.log.status('restarting child process');\r\n  bus.emit('restart');\r\n  return nodemon;\r\n};\r\n\r\nnodemon.addListener = nodemon.on = function (event, handler) {\r\n  if (!eventHandlers[event]) { eventHandlers[event] = []; }\r\n  eventHandlers[event].push(handler);\r\n  bus.on(event, handler);\r\n  return nodemon;\r\n};\r\n\r\nnodemon.once = function (event, handler) {\r\n  if (!eventHandlers[event]) { eventHandlers[event] = []; }\r\n  eventHandlers[event].push(handler);\r\n  bus.once(event, function () {\r\n    debug('bus.once(%s)', event);\r\n    eventHandlers[event].splice(eventHandlers[event].indexOf(handler), 1);\r\n    handler.apply(this, arguments);\r\n  });\r\n  return nodemon;\r\n};\r\n\r\nnodemon.emit = function () {\r\n  bus.emit.apply(bus, [].slice.call(arguments));\r\n  return nodemon;\r\n};\r\n\r\nnodemon.removeAllListeners = function (event) {\r\n  // unbind only the `nodemon.on` event handlers\r\n  Object.keys(eventHandlers).filter(function (e) {\r\n    return event ? e === event : true;\r\n  }).forEach(function (event) {\r\n    eventHandlers[event].forEach(function (handler) {\r\n      bus.removeListener(event, handler);\r\n      eventHandlers[event].splice(eventHandlers[event].indexOf(handler), 1);\r\n    });\r\n  });\r\n\r\n  return nodemon;\r\n};\r\n\r\nnodemon.reset = function (done) {\r\n  bus.emit('reset', done);\r\n};\r\n\r\nbus.on('reset', function (done) {\r\n  debug('reset');\r\n  nodemon.removeAllListeners();\r\n  monitor.run.kill(true, function () {\r\n    utils.reset();\r\n    config.reset();\r\n    config.run = false;\r\n    if (done) {\r\n      done();\r\n    }\r\n  });\r\n});\r\n\r\n// expose the full config\r\nnodemon.config = config;\r\n\r\nmodule.exports = nodemon;\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/nodemon/lib/nodemon.js b/node_modules/nodemon/lib/nodemon.js
--- a/node_modules/nodemon/lib/nodemon.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/nodemon/lib/nodemon.js	(date 1753913035587)
@@ -7,6 +7,7 @@
 var utils = require('./utils');
 var bus = utils.bus;
 var help = require('./help');
+/** @type {import('..').NodemonEventConfig} */
 var config = require('./config');
 var spawn = require('./spawn');
 const defaults = require('./config/defaults')
@@ -16,9 +17,16 @@
 // stable module API
 config.required = utils.isRequired;
 
+/**
+ * @param {import('..').NodemonSettings | string} settings
+ * @returns {import('..').Nodemon}
+ */
 function nodemon(settings) {
   bus.emit('boot');
   nodemon.reset();
+  
+  /** @type {import('..').NodemonSettings} */
+  let options
 
   // allow the cli string as the argument to nodemon, and allow for
   // `node nodemon -V app.js` or just `-V app.js`
@@ -30,25 +38,25 @@
       }
       settings = 'node ' + settings;
     }
-    settings = cli.parse(settings);
-  }
+    options = cli.parse(settings);
+  } else options = settings;
 
   // set the debug flag as early as possible to get all the detailed logging
-  if (settings.verbose) {
+  if (options.verbose) {
     utils.debug = true;
   }
 
-  if (settings.help) {
+  if (options.help) {
     if (process.stdout.isTTY) {
       process.stdout._handle.setBlocking(true); // nodejs/node#6456
     }
-    console.log(help(settings.help));
+    console.log(help(options.help));
     if (!config.required) {
       process.exit(0);
     }
   }
 
-  if (settings.version) {
+  if (options.version) {
     version().then(function (v) {
       console.log(v);
       if (!config.required) {
@@ -61,17 +69,15 @@
   // nodemon tools like grunt-nodemon. This affects where
   // the script is being run from, and will affect where
   // nodemon looks for the nodemon.json files
-  if (settings.cwd) {
+  if (options.cwd) {
     // this is protection to make sure we haven't dont the chdir already...
     // say like in cli/parse.js (which is where we do this once already!)
-    if (process.cwd() !== path.resolve(config.system.cwd, settings.cwd)) {
-      process.chdir(settings.cwd);
+    if (process.cwd() !== path.resolve(config.system.cwd, options.cwd)) {
+      process.chdir(options.cwd);
     }
   }
 
-  const cwd = process.cwd();
-
-  config.load(settings, function (config) {
+  config.load(options, function (config) {
     if (!config.options.dump && !config.options.execOptions.script &&
       config.options.execOptions.exec === 'node') {
       if (!config.required) {
@@ -171,7 +177,7 @@
       // don't notify of default ignores
       if (defaults.ignoreRoot.indexOf(rule) !== -1) {
         return false;
-        return rule.slice(3).slice(0, -3);
+        // return rule.slice(3).slice(0, -3);
       }
 
       if (rule.startsWith(cwd)) {
Index: node_modules/qs/lib/utils.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar formats = require('./formats');\r\n\r\nvar has = Object.prototype.hasOwnProperty;\r\nvar isArray = Array.isArray;\r\n\r\nvar hexTable = (function () {\r\n    var array = [];\r\n    for (var i = 0; i < 256; ++i) {\r\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\r\n    }\r\n\r\n    return array;\r\n}());\r\n\r\nvar compactQueue = function compactQueue(queue) {\r\n    while (queue.length > 1) {\r\n        var item = queue.pop();\r\n        var obj = item.obj[item.prop];\r\n\r\n        if (isArray(obj)) {\r\n            var compacted = [];\r\n\r\n            for (var j = 0; j < obj.length; ++j) {\r\n                if (typeof obj[j] !== 'undefined') {\r\n                    compacted.push(obj[j]);\r\n                }\r\n            }\r\n\r\n            item.obj[item.prop] = compacted;\r\n        }\r\n    }\r\n};\r\n\r\nvar arrayToObject = function arrayToObject(source, options) {\r\n    var obj = options && options.plainObjects ? Object.create(null) : {};\r\n    for (var i = 0; i < source.length; ++i) {\r\n        if (typeof source[i] !== 'undefined') {\r\n            obj[i] = source[i];\r\n        }\r\n    }\r\n\r\n    return obj;\r\n};\r\n\r\nvar merge = function merge(target, source, options) {\r\n    /* eslint no-param-reassign: 0 */\r\n    if (!source) {\r\n        return target;\r\n    }\r\n\r\n    if (typeof source !== 'object') {\r\n        if (isArray(target)) {\r\n            target.push(source);\r\n        } else if (target && typeof target === 'object') {\r\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\r\n                target[source] = true;\r\n            }\r\n        } else {\r\n            return [target, source];\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    if (!target || typeof target !== 'object') {\r\n        return [target].concat(source);\r\n    }\r\n\r\n    var mergeTarget = target;\r\n    if (isArray(target) && !isArray(source)) {\r\n        mergeTarget = arrayToObject(target, options);\r\n    }\r\n\r\n    if (isArray(target) && isArray(source)) {\r\n        source.forEach(function (item, i) {\r\n            if (has.call(target, i)) {\r\n                var targetItem = target[i];\r\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\r\n                    target[i] = merge(targetItem, item, options);\r\n                } else {\r\n                    target.push(item);\r\n                }\r\n            } else {\r\n                target[i] = item;\r\n            }\r\n        });\r\n        return target;\r\n    }\r\n\r\n    return Object.keys(source).reduce(function (acc, key) {\r\n        var value = source[key];\r\n\r\n        if (has.call(acc, key)) {\r\n            acc[key] = merge(acc[key], value, options);\r\n        } else {\r\n            acc[key] = value;\r\n        }\r\n        return acc;\r\n    }, mergeTarget);\r\n};\r\n\r\nvar assign = function assignSingleSource(target, source) {\r\n    return Object.keys(source).reduce(function (acc, key) {\r\n        acc[key] = source[key];\r\n        return acc;\r\n    }, target);\r\n};\r\n\r\nvar decode = function (str, decoder, charset) {\r\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\r\n    if (charset === 'iso-8859-1') {\r\n        // unescape never throws, no try...catch needed:\r\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\r\n    }\r\n    // utf-8\r\n    try {\r\n        return decodeURIComponent(strWithoutPlus);\r\n    } catch (e) {\r\n        return strWithoutPlus;\r\n    }\r\n};\r\n\r\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\r\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\r\n    // It has been adapted here for stricter adherence to RFC 3986\r\n    if (str.length === 0) {\r\n        return str;\r\n    }\r\n\r\n    var string = str;\r\n    if (typeof str === 'symbol') {\r\n        string = Symbol.prototype.toString.call(str);\r\n    } else if (typeof str !== 'string') {\r\n        string = String(str);\r\n    }\r\n\r\n    if (charset === 'iso-8859-1') {\r\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\r\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\r\n        });\r\n    }\r\n\r\n    var out = '';\r\n    for (var i = 0; i < string.length; ++i) {\r\n        var c = string.charCodeAt(i);\r\n\r\n        if (\r\n            c === 0x2D // -\r\n            || c === 0x2E // .\r\n            || c === 0x5F // _\r\n            || c === 0x7E // ~\r\n            || (c >= 0x30 && c <= 0x39) // 0-9\r\n            || (c >= 0x41 && c <= 0x5A) // a-z\r\n            || (c >= 0x61 && c <= 0x7A) // A-Z\r\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\r\n        ) {\r\n            out += string.charAt(i);\r\n            continue;\r\n        }\r\n\r\n        if (c < 0x80) {\r\n            out = out + hexTable[c];\r\n            continue;\r\n        }\r\n\r\n        if (c < 0x800) {\r\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\r\n            continue;\r\n        }\r\n\r\n        if (c < 0xD800 || c >= 0xE000) {\r\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\r\n            continue;\r\n        }\r\n\r\n        i += 1;\r\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\r\n        /* eslint operator-linebreak: [2, \"before\"] */\r\n        out += hexTable[0xF0 | (c >> 18)]\r\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\r\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\r\n            + hexTable[0x80 | (c & 0x3F)];\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nvar compact = function compact(value) {\r\n    var queue = [{ obj: { o: value }, prop: 'o' }];\r\n    var refs = [];\r\n\r\n    for (var i = 0; i < queue.length; ++i) {\r\n        var item = queue[i];\r\n        var obj = item.obj[item.prop];\r\n\r\n        var keys = Object.keys(obj);\r\n        for (var j = 0; j < keys.length; ++j) {\r\n            var key = keys[j];\r\n            var val = obj[key];\r\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\r\n                queue.push({ obj: obj, prop: key });\r\n                refs.push(val);\r\n            }\r\n        }\r\n    }\r\n\r\n    compactQueue(queue);\r\n\r\n    return value;\r\n};\r\n\r\nvar isRegExp = function isRegExp(obj) {\r\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\r\n};\r\n\r\nvar isBuffer = function isBuffer(obj) {\r\n    if (!obj || typeof obj !== 'object') {\r\n        return false;\r\n    }\r\n\r\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\r\n};\r\n\r\nvar combine = function combine(a, b) {\r\n    return [].concat(a, b);\r\n};\r\n\r\nvar maybeMap = function maybeMap(val, fn) {\r\n    if (isArray(val)) {\r\n        var mapped = [];\r\n        for (var i = 0; i < val.length; i += 1) {\r\n            mapped.push(fn(val[i]));\r\n        }\r\n        return mapped;\r\n    }\r\n    return fn(val);\r\n};\r\n\r\nmodule.exports = {\r\n    arrayToObject: arrayToObject,\r\n    assign: assign,\r\n    combine: combine,\r\n    compact: compact,\r\n    decode: decode,\r\n    encode: encode,\r\n    isBuffer: isBuffer,\r\n    isRegExp: isRegExp,\r\n    maybeMap: maybeMap,\r\n    merge: merge\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/qs/lib/utils.js b/node_modules/qs/lib/utils.js
--- a/node_modules/qs/lib/utils.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/qs/lib/utils.js	(date 1753913035191)
@@ -122,6 +122,10 @@
     }
 };
 
+var limit = 1024;
+
+/* eslint operator-linebreak: [2, "before"] */
+
 var encode = function encode(str, defaultEncoder, charset, kind, format) {
     // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
     // It has been adapted here for stricter adherence to RFC 3986
@@ -143,47 +147,56 @@
     }
 
     var out = '';
-    for (var i = 0; i < string.length; ++i) {
-        var c = string.charCodeAt(i);
+    for (var j = 0; j < string.length; j += limit) {
+        var segment = string.length >= limit ? string.slice(j, j + limit) : string;
+        var arr = [];
 
-        if (
-            c === 0x2D // -
-            || c === 0x2E // .
-            || c === 0x5F // _
-            || c === 0x7E // ~
-            || (c >= 0x30 && c <= 0x39) // 0-9
-            || (c >= 0x41 && c <= 0x5A) // a-z
-            || (c >= 0x61 && c <= 0x7A) // A-Z
-            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )
-        ) {
-            out += string.charAt(i);
-            continue;
-        }
+        for (var i = 0; i < segment.length; ++i) {
+            var c = segment.charCodeAt(i);
+            if (
+                c === 0x2D // -
+                || c === 0x2E // .
+                || c === 0x5F // _
+                || c === 0x7E // ~
+                || (c >= 0x30 && c <= 0x39) // 0-9
+                || (c >= 0x41 && c <= 0x5A) // a-z
+                || (c >= 0x61 && c <= 0x7A) // A-Z
+                || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )
+            ) {
+                arr[arr.length] = segment.charAt(i);
+                continue;
+            }
 
-        if (c < 0x80) {
-            out = out + hexTable[c];
-            continue;
-        }
+            if (c < 0x80) {
+                arr[arr.length] = hexTable[c];
+                continue;
+            }
 
-        if (c < 0x800) {
-            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);
-            continue;
-        }
+            if (c < 0x800) {
+                arr[arr.length] = hexTable[0xC0 | (c >> 6)]
+                    + hexTable[0x80 | (c & 0x3F)];
+                continue;
+            }
 
-        if (c < 0xD800 || c >= 0xE000) {
-            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);
-            continue;
-        }
+            if (c < 0xD800 || c >= 0xE000) {
+                arr[arr.length] = hexTable[0xE0 | (c >> 12)]
+                    + hexTable[0x80 | ((c >> 6) & 0x3F)]
+                    + hexTable[0x80 | (c & 0x3F)];
+                continue;
+            }
 
-        i += 1;
-        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));
-        /* eslint operator-linebreak: [2, "before"] */
-        out += hexTable[0xF0 | (c >> 18)]
-            + hexTable[0x80 | ((c >> 12) & 0x3F)]
-            + hexTable[0x80 | ((c >> 6) & 0x3F)]
-            + hexTable[0x80 | (c & 0x3F)];
-    }
+            i += 1;
+            c = 0x10000 + (((c & 0x3FF) << 10) | (segment.charCodeAt(i) & 0x3FF));
+
+            arr[arr.length] = hexTable[0xF0 | (c >> 18)]
+                + hexTable[0x80 | ((c >> 12) & 0x3F)]
+                + hexTable[0x80 | ((c >> 6) & 0x3F)]
+                + hexTable[0x80 | (c & 0x3F)];
+        }
 
+        out += arr.join('');
+    }
+
     return out;
 };
 
Index: node_modules/qs/lib/parse.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar utils = require('./utils');\r\n\r\nvar has = Object.prototype.hasOwnProperty;\r\nvar isArray = Array.isArray;\r\n\r\nvar defaults = {\r\n    allowDots: false,\r\n    allowPrototypes: false,\r\n    allowSparse: false,\r\n    arrayLimit: 20,\r\n    charset: 'utf-8',\r\n    charsetSentinel: false,\r\n    comma: false,\r\n    decoder: utils.decode,\r\n    delimiter: '&',\r\n    depth: 5,\r\n    ignoreQueryPrefix: false,\r\n    interpretNumericEntities: false,\r\n    parameterLimit: 1000,\r\n    parseArrays: true,\r\n    plainObjects: false,\r\n    strictNullHandling: false\r\n};\r\n\r\nvar interpretNumericEntities = function (str) {\r\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\r\n        return String.fromCharCode(parseInt(numberStr, 10));\r\n    });\r\n};\r\n\r\nvar parseArrayValue = function (val, options) {\r\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\r\n        return val.split(',');\r\n    }\r\n\r\n    return val;\r\n};\r\n\r\n// This is what browsers will submit when the ✓ character occurs in an\r\n// application/x-www-form-urlencoded body and the encoding of the page containing\r\n// the form is iso-8859-1, or when the submitted form has an accept-charset\r\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\r\n// the ✓ character, such as us-ascii.\r\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\r\n\r\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\r\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\r\n\r\nvar parseValues = function parseQueryStringValues(str, options) {\r\n    var obj = {};\r\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\r\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\r\n    var parts = cleanStr.split(options.delimiter, limit);\r\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\r\n    var i;\r\n\r\n    var charset = options.charset;\r\n    if (options.charsetSentinel) {\r\n        for (i = 0; i < parts.length; ++i) {\r\n            if (parts[i].indexOf('utf8=') === 0) {\r\n                if (parts[i] === charsetSentinel) {\r\n                    charset = 'utf-8';\r\n                } else if (parts[i] === isoSentinel) {\r\n                    charset = 'iso-8859-1';\r\n                }\r\n                skipIndex = i;\r\n                i = parts.length; // The eslint settings do not allow break;\r\n            }\r\n        }\r\n    }\r\n\r\n    for (i = 0; i < parts.length; ++i) {\r\n        if (i === skipIndex) {\r\n            continue;\r\n        }\r\n        var part = parts[i];\r\n\r\n        var bracketEqualsPos = part.indexOf(']=');\r\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\r\n\r\n        var key, val;\r\n        if (pos === -1) {\r\n            key = options.decoder(part, defaults.decoder, charset, 'key');\r\n            val = options.strictNullHandling ? null : '';\r\n        } else {\r\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\r\n            val = utils.maybeMap(\r\n                parseArrayValue(part.slice(pos + 1), options),\r\n                function (encodedVal) {\r\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\r\n                }\r\n            );\r\n        }\r\n\r\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\r\n            val = interpretNumericEntities(val);\r\n        }\r\n\r\n        if (part.indexOf('[]=') > -1) {\r\n            val = isArray(val) ? [val] : val;\r\n        }\r\n\r\n        if (has.call(obj, key)) {\r\n            obj[key] = utils.combine(obj[key], val);\r\n        } else {\r\n            obj[key] = val;\r\n        }\r\n    }\r\n\r\n    return obj;\r\n};\r\n\r\nvar parseObject = function (chain, val, options, valuesParsed) {\r\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\r\n\r\n    for (var i = chain.length - 1; i >= 0; --i) {\r\n        var obj;\r\n        var root = chain[i];\r\n\r\n        if (root === '[]' && options.parseArrays) {\r\n            obj = [].concat(leaf);\r\n        } else {\r\n            obj = options.plainObjects ? Object.create(null) : {};\r\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\r\n            var index = parseInt(cleanRoot, 10);\r\n            if (!options.parseArrays && cleanRoot === '') {\r\n                obj = { 0: leaf };\r\n            } else if (\r\n                !isNaN(index)\r\n                && root !== cleanRoot\r\n                && String(index) === cleanRoot\r\n                && index >= 0\r\n                && (options.parseArrays && index <= options.arrayLimit)\r\n            ) {\r\n                obj = [];\r\n                obj[index] = leaf;\r\n            } else if (cleanRoot !== '__proto__') {\r\n                obj[cleanRoot] = leaf;\r\n            }\r\n        }\r\n\r\n        leaf = obj;\r\n    }\r\n\r\n    return leaf;\r\n};\r\n\r\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\r\n    if (!givenKey) {\r\n        return;\r\n    }\r\n\r\n    // Transform dot notation to bracket notation\r\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\r\n\r\n    // The regex chunks\r\n\r\n    var brackets = /(\\[[^[\\]]*])/;\r\n    var child = /(\\[[^[\\]]*])/g;\r\n\r\n    // Get the parent\r\n\r\n    var segment = options.depth > 0 && brackets.exec(key);\r\n    var parent = segment ? key.slice(0, segment.index) : key;\r\n\r\n    // Stash the parent if it exists\r\n\r\n    var keys = [];\r\n    if (parent) {\r\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\r\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\r\n            if (!options.allowPrototypes) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        keys.push(parent);\r\n    }\r\n\r\n    // Loop through children appending to the array until we hit depth\r\n\r\n    var i = 0;\r\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\r\n        i += 1;\r\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\r\n            if (!options.allowPrototypes) {\r\n                return;\r\n            }\r\n        }\r\n        keys.push(segment[1]);\r\n    }\r\n\r\n    // If there's a remainder, just add whatever is left\r\n\r\n    if (segment) {\r\n        keys.push('[' + key.slice(segment.index) + ']');\r\n    }\r\n\r\n    return parseObject(keys, val, options, valuesParsed);\r\n};\r\n\r\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\r\n    if (!opts) {\r\n        return defaults;\r\n    }\r\n\r\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\r\n        throw new TypeError('Decoder has to be a function.');\r\n    }\r\n\r\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\r\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\r\n    }\r\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\r\n\r\n    return {\r\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\r\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\r\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\r\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\r\n        charset: charset,\r\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\r\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\r\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\r\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\r\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\r\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\r\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\r\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\r\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\r\n        parseArrays: opts.parseArrays !== false,\r\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\r\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\r\n    };\r\n};\r\n\r\nmodule.exports = function (str, opts) {\r\n    var options = normalizeParseOptions(opts);\r\n\r\n    if (str === '' || str === null || typeof str === 'undefined') {\r\n        return options.plainObjects ? Object.create(null) : {};\r\n    }\r\n\r\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\r\n    var obj = options.plainObjects ? Object.create(null) : {};\r\n\r\n    // Iterate over the keys and setup the new object\r\n\r\n    var keys = Object.keys(tempObj);\r\n    for (var i = 0; i < keys.length; ++i) {\r\n        var key = keys[i];\r\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\r\n        obj = utils.merge(obj, newObj, options);\r\n    }\r\n\r\n    if (options.allowSparse === true) {\r\n        return obj;\r\n    }\r\n\r\n    return utils.compact(obj);\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/qs/lib/parse.js b/node_modules/qs/lib/parse.js
--- a/node_modules/qs/lib/parse.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/qs/lib/parse.js	(date 1753913035160)
@@ -7,20 +7,24 @@
 
 var defaults = {
     allowDots: false,
+    allowEmptyArrays: false,
     allowPrototypes: false,
     allowSparse: false,
     arrayLimit: 20,
     charset: 'utf-8',
     charsetSentinel: false,
     comma: false,
+    decodeDotInKeys: false,
     decoder: utils.decode,
     delimiter: '&',
     depth: 5,
+    duplicates: 'combine',
     ignoreQueryPrefix: false,
     interpretNumericEntities: false,
     parameterLimit: 1000,
     parseArrays: true,
     plainObjects: false,
+    strictDepth: false,
     strictNullHandling: false
 };
 
@@ -49,8 +53,10 @@
 var charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')
 
 var parseValues = function parseQueryStringValues(str, options) {
-    var obj = {};
+    var obj = { __proto__: null };
+
     var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, '') : str;
+    cleanStr = cleanStr.replace(/%5B/gi, '[').replace(/%5D/gi, ']');
     var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;
     var parts = cleanStr.split(options.delimiter, limit);
     var skipIndex = -1; // Keep track of where the utf8 sentinel was found
@@ -102,9 +108,10 @@
             val = isArray(val) ? [val] : val;
         }
 
-        if (has.call(obj, key)) {
+        var existing = has.call(obj, key);
+        if (existing && options.duplicates === 'combine') {
             obj[key] = utils.combine(obj[key], val);
-        } else {
+        } else if (!existing || options.duplicates === 'last') {
             obj[key] = val;
         }
     }
@@ -120,24 +127,27 @@
         var root = chain[i];
 
         if (root === '[]' && options.parseArrays) {
-            obj = [].concat(leaf);
+            obj = options.allowEmptyArrays && (leaf === '' || (options.strictNullHandling && leaf === null))
+                ? []
+                : [].concat(leaf);
         } else {
             obj = options.plainObjects ? Object.create(null) : {};
             var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;
-            var index = parseInt(cleanRoot, 10);
-            if (!options.parseArrays && cleanRoot === '') {
+            var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, '.') : cleanRoot;
+            var index = parseInt(decodedRoot, 10);
+            if (!options.parseArrays && decodedRoot === '') {
                 obj = { 0: leaf };
             } else if (
                 !isNaN(index)
-                && root !== cleanRoot
-                && String(index) === cleanRoot
+                && root !== decodedRoot
+                && String(index) === decodedRoot
                 && index >= 0
                 && (options.parseArrays && index <= options.arrayLimit)
             ) {
                 obj = [];
                 obj[index] = leaf;
-            } else if (cleanRoot !== '__proto__') {
-                obj[cleanRoot] = leaf;
+            } else if (decodedRoot !== '__proto__') {
+                obj[decodedRoot] = leaf;
             }
         }
 
@@ -192,9 +202,12 @@
         keys.push(segment[1]);
     }
 
-    // If there's a remainder, just add whatever is left
+    // If there's a remainder, check strictDepth option for throw, else just add whatever is left
 
     if (segment) {
+        if (options.strictDepth === true) {
+            throw new RangeError('Input depth exceeded depth option of ' + options.depth + ' and strictDepth is true');
+        }
         keys.push('[' + key.slice(segment.index) + ']');
     }
 
@@ -206,7 +219,15 @@
         return defaults;
     }
 
-    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {
+    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {
+        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');
+    }
+
+    if (typeof opts.decodeDotInKeys !== 'undefined' && typeof opts.decodeDotInKeys !== 'boolean') {
+        throw new TypeError('`decodeDotInKeys` option can only be `true` or `false`, when provided');
+    }
+
+    if (opts.decoder !== null && typeof opts.decoder !== 'undefined' && typeof opts.decoder !== 'function') {
         throw new TypeError('Decoder has to be a function.');
     }
 
@@ -215,23 +236,35 @@
     }
     var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;
 
+    var duplicates = typeof opts.duplicates === 'undefined' ? defaults.duplicates : opts.duplicates;
+
+    if (duplicates !== 'combine' && duplicates !== 'first' && duplicates !== 'last') {
+        throw new TypeError('The duplicates option must be either combine, first, or last');
+    }
+
+    var allowDots = typeof opts.allowDots === 'undefined' ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;
+
     return {
-        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
+        allowDots: allowDots,
+        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,
         allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,
         allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,
         arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,
         charset: charset,
         charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
         comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,
+        decodeDotInKeys: typeof opts.decodeDotInKeys === 'boolean' ? opts.decodeDotInKeys : defaults.decodeDotInKeys,
         decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,
         delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
         // eslint-disable-next-line no-implicit-coercion, no-extra-parens
         depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,
+        duplicates: duplicates,
         ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
         interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
         parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,
         parseArrays: opts.parseArrays !== false,
         plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,
+        strictDepth: typeof opts.strictDepth === 'boolean' ? !!opts.strictDepth : defaults.strictDepth,
         strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
     };
 };
Index: node_modules/nodemon/lib/cli/parse.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*\r\n\r\nnodemon is a utility for node, and replaces the use of the executable\r\nnode. So the user calls `nodemon foo.js` instead.\r\n\r\nnodemon can be run in a number of ways:\r\n\r\n`nodemon` - tries to use package.json#main property to run\r\n`nodemon` - if no package, looks for index.js\r\n`nodemon app.js` - runs app.js\r\n`nodemon --arg app.js --apparg` - eats arg1, and runs app.js with apparg\r\n`nodemon --apparg` - as above, but passes apparg to package.json#main (or\r\n  index.js)\r\n`nodemon --debug app.js\r\n\r\n*/\r\n\r\nvar fs = require('fs');\r\nvar path = require('path');\r\nvar existsSync = fs.existsSync || path.existsSync;\r\n\r\nmodule.exports = parse;\r\n\r\n/**\r\n * Parses the command line arguments `process.argv` and returns the\r\n * nodemon options, the user script and the executable script.\r\n *\r\n * @param  {Array} full process arguments, including `node` leading arg\r\n * @return {Object} { options, script, args }\r\n */\r\nfunction parse(argv) {\r\n  if (typeof argv === 'string') {\r\n    argv = argv.split(' ');\r\n  }\r\n\r\n  var eat = function (i, args) {\r\n    if (i <= args.length) {\r\n      return args.splice(i + 1, 1).pop();\r\n    }\r\n  };\r\n\r\n  var args = argv.slice(2);\r\n  var script = null;\r\n  var nodemonOptions = { scriptPosition: null };\r\n\r\n  var nodemonOpt = nodemonOption.bind(null, nodemonOptions);\r\n  var lookForArgs = true;\r\n\r\n  // move forward through the arguments\r\n  for (var i = 0; i < args.length; i++) {\r\n    // if the argument looks like a file, then stop eating\r\n    if (!script) {\r\n      if (args[i] === '.' || existsSync(args[i])) {\r\n        script = args.splice(i, 1).pop();\r\n\r\n        // we capture the position of the script because we'll reinsert it in\r\n        // the right place in run.js:command (though I'm not sure we should even\r\n        // take it out of the array in the first place, but this solves passing\r\n        // arguments to the exec process for now).\r\n        nodemonOptions.scriptPosition = i;\r\n        i--;\r\n        continue;\r\n      }\r\n    }\r\n\r\n    if (lookForArgs) {\r\n      // respect the standard way of saying: hereafter belongs to my script\r\n      if (args[i] === '--') {\r\n        args.splice(i, 1);\r\n        nodemonOptions.scriptPosition = i;\r\n        // cycle back one argument, as we just ate this one up\r\n        i--;\r\n\r\n        // ignore all further nodemon arguments\r\n        lookForArgs = false;\r\n\r\n        // move to the next iteration\r\n        continue;\r\n      }\r\n\r\n      if (nodemonOpt(args[i], eat.bind(null, i, args)) !== false) {\r\n        args.splice(i, 1);\r\n        // cycle back one argument, as we just ate this one up\r\n        i--;\r\n      }\r\n    }\r\n  }\r\n\r\n  nodemonOptions.script = script;\r\n  nodemonOptions.args = args;\r\n\r\n  return nodemonOptions;\r\n}\r\n\r\n\r\n/**\r\n * Given an argument (ie. from process.argv), sets nodemon\r\n * options and can eat up the argument value\r\n *\r\n * @param {Object} options object that will be updated\r\n * @param {Sting} current argument from argv\r\n * @param {Function} the callback to eat up the next argument in argv\r\n * @return {Boolean} false if argument was not a nodemon arg\r\n */\r\nfunction nodemonOption(options, arg, eatNext) {\r\n  // line separation on purpose to help legibility\r\n  if (arg === '--help' || arg === '-h' || arg === '-?') {\r\n    var help = eatNext();\r\n    options.help = help ? help : true;\r\n  } else\r\n\r\n  if (arg === '--version' || arg === '-v') {\r\n    options.version = true;\r\n  } else\r\n\r\n  if (arg === '--no-update-notifier') {\r\n    options.noUpdateNotifier = true;\r\n  } else\r\n\r\n  if (arg === '--spawn') {\r\n    options.spawn = true;\r\n  } else\r\n\r\n  if (arg === '--dump') {\r\n    options.dump = true;\r\n  } else\r\n\r\n  if (arg === '--verbose' || arg === '-V') {\r\n    options.verbose = true;\r\n  } else\r\n\r\n  if (arg === '--legacy-watch' || arg === '-L') {\r\n    options.legacyWatch = true;\r\n  } else\r\n\r\n  if (arg === '--polling-interval' || arg === '-P') {\r\n    options.pollingInterval = parseInt(eatNext(), 10);\r\n  } else\r\n\r\n  // Depricated as this is \"on\" by default\r\n  if (arg === '--js') {\r\n    options.js = true;\r\n  } else\r\n\r\n  if (arg === '--quiet' || arg === '-q') {\r\n    options.quiet = true;\r\n  } else\r\n\r\n  if (arg === '--config') {\r\n    options.configFile = eatNext();\r\n  } else\r\n\r\n  if (arg === '--watch' || arg === '-w') {\r\n    if (!options.watch) { options.watch = []; }\r\n    options.watch.push(eatNext());\r\n  } else\r\n\r\n  if (arg === '--ignore' || arg === '-i') {\r\n    if (!options.ignore) { options.ignore = []; }\r\n    options.ignore.push(eatNext());\r\n  } else\r\n\r\n  if (arg === '--exitcrash') {\r\n    options.exitcrash = true;\r\n  } else\r\n\r\n  if (arg === '--delay' || arg === '-d') {\r\n    options.delay = parseDelay(eatNext());\r\n  } else\r\n\r\n  if (arg === '--exec' || arg === '-x') {\r\n    options.exec = eatNext();\r\n  } else\r\n\r\n  if (arg === '--no-stdin' || arg === '-I') {\r\n    options.stdin = false;\r\n  } else\r\n\r\n  if (arg === '--on-change-only' || arg === '-C') {\r\n    options.runOnChangeOnly = true;\r\n  } else\r\n\r\n  if (arg === '--ext' || arg === '-e') {\r\n    options.ext = eatNext();\r\n  } else\r\n\r\n  if (arg === '--no-colours' || arg === '--no-colors') {\r\n    options.colours = false;\r\n  } else\r\n\r\n  if (arg === '--signal' || arg === '-s') {\r\n    options.signal = eatNext();\r\n  } else\r\n\r\n  if (arg === '--cwd') {\r\n    options.cwd = eatNext();\r\n\r\n    // go ahead and change directory. This is primarily for nodemon tools like\r\n    // grunt-nodemon - we're doing this early because it will affect where the\r\n    // user script is searched for.\r\n    process.chdir(path.resolve(options.cwd));\r\n  } else {\r\n\r\n    // this means we didn't match\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * Given an argument (ie. from nodemonOption()), will parse and return the\r\n * equivalent millisecond value or 0 if the argument cannot be parsed\r\n *\r\n * @param {String} argument value given to the --delay option\r\n * @return {Number} millisecond equivalent of the argument\r\n */\r\nfunction parseDelay(value) {\r\n  var millisPerSecond = 1000;\r\n  var millis = 0;\r\n\r\n  if (value.match(/^\\d*ms$/)) {\r\n    // Explicitly parse for milliseconds when using ms time specifier\r\n    millis = parseInt(value, 10);\r\n  } else {\r\n    // Otherwise, parse for seconds, with or without time specifier then convert\r\n    millis = parseFloat(value) * millisPerSecond;\r\n  }\r\n\r\n  return isNaN(millis) ? 0 : millis;\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/nodemon/lib/cli/parse.js b/node_modules/nodemon/lib/cli/parse.js
--- a/node_modules/nodemon/lib/cli/parse.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/nodemon/lib/cli/parse.js	(date 1753913035588)
@@ -25,7 +25,7 @@
  * Parses the command line arguments `process.argv` and returns the
  * nodemon options, the user script and the executable script.
  *
- * @param  {Array} full process arguments, including `node` leading arg
+ * @param  {Array<string> | string} argv full process arguments, including `node` leading arg
  * @return {Object} { options, script, args }
  */
 function parse(argv) {
@@ -97,9 +97,9 @@
  * Given an argument (ie. from process.argv), sets nodemon
  * options and can eat up the argument value
  *
- * @param {Object} options object that will be updated
- * @param {Sting} current argument from argv
- * @param {Function} the callback to eat up the next argument in argv
+ * @param {import('../..').NodemonSettings} options object that will be updated
+ * @param {String} arg current argument from argv
+ * @param {Function} eatNext the callback to eat up the next argument in argv
  * @return {Boolean} false if argument was not a nodemon arg
  */
 function nodemonOption(options, arg, eatNext) {
@@ -161,7 +161,7 @@
   } else
 
   if (arg === '--exitcrash') {
-    options.exitcrash = true;
+    options.exitCrash = true;
   } else
 
   if (arg === '--delay' || arg === '-d') {
@@ -210,7 +210,7 @@
  * Given an argument (ie. from nodemonOption()), will parse and return the
  * equivalent millisecond value or 0 if the argument cannot be parsed
  *
- * @param {String} argument value given to the --delay option
+ * @param {String} value argument value given to the --delay option
  * @return {Number} millisecond equivalent of the argument
  */
 function parseDelay(value) {
Index: node_modules/qs/lib/stringify.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar getSideChannel = require('side-channel');\r\nvar utils = require('./utils');\r\nvar formats = require('./formats');\r\nvar has = Object.prototype.hasOwnProperty;\r\n\r\nvar arrayPrefixGenerators = {\r\n    brackets: function brackets(prefix) {\r\n        return prefix + '[]';\r\n    },\r\n    comma: 'comma',\r\n    indices: function indices(prefix, key) {\r\n        return prefix + '[' + key + ']';\r\n    },\r\n    repeat: function repeat(prefix) {\r\n        return prefix;\r\n    }\r\n};\r\n\r\nvar isArray = Array.isArray;\r\nvar split = String.prototype.split;\r\nvar push = Array.prototype.push;\r\nvar pushToArray = function (arr, valueOrArray) {\r\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\r\n};\r\n\r\nvar toISO = Date.prototype.toISOString;\r\n\r\nvar defaultFormat = formats['default'];\r\nvar defaults = {\r\n    addQueryPrefix: false,\r\n    allowDots: false,\r\n    charset: 'utf-8',\r\n    charsetSentinel: false,\r\n    delimiter: '&',\r\n    encode: true,\r\n    encoder: utils.encode,\r\n    encodeValuesOnly: false,\r\n    format: defaultFormat,\r\n    formatter: formats.formatters[defaultFormat],\r\n    // deprecated\r\n    indices: false,\r\n    serializeDate: function serializeDate(date) {\r\n        return toISO.call(date);\r\n    },\r\n    skipNulls: false,\r\n    strictNullHandling: false\r\n};\r\n\r\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\r\n    return typeof v === 'string'\r\n        || typeof v === 'number'\r\n        || typeof v === 'boolean'\r\n        || typeof v === 'symbol'\r\n        || typeof v === 'bigint';\r\n};\r\n\r\nvar sentinel = {};\r\n\r\nvar stringify = function stringify(\r\n    object,\r\n    prefix,\r\n    generateArrayPrefix,\r\n    commaRoundTrip,\r\n    strictNullHandling,\r\n    skipNulls,\r\n    encoder,\r\n    filter,\r\n    sort,\r\n    allowDots,\r\n    serializeDate,\r\n    format,\r\n    formatter,\r\n    encodeValuesOnly,\r\n    charset,\r\n    sideChannel\r\n) {\r\n    var obj = object;\r\n\r\n    var tmpSc = sideChannel;\r\n    var step = 0;\r\n    var findFlag = false;\r\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\r\n        // Where object last appeared in the ref tree\r\n        var pos = tmpSc.get(object);\r\n        step += 1;\r\n        if (typeof pos !== 'undefined') {\r\n            if (pos === step) {\r\n                throw new RangeError('Cyclic object value');\r\n            } else {\r\n                findFlag = true; // Break while\r\n            }\r\n        }\r\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\r\n            step = 0;\r\n        }\r\n    }\r\n\r\n    if (typeof filter === 'function') {\r\n        obj = filter(prefix, obj);\r\n    } else if (obj instanceof Date) {\r\n        obj = serializeDate(obj);\r\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\r\n        obj = utils.maybeMap(obj, function (value) {\r\n            if (value instanceof Date) {\r\n                return serializeDate(value);\r\n            }\r\n            return value;\r\n        });\r\n    }\r\n\r\n    if (obj === null) {\r\n        if (strictNullHandling) {\r\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\r\n        }\r\n\r\n        obj = '';\r\n    }\r\n\r\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\r\n        if (encoder) {\r\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\r\n            if (generateArrayPrefix === 'comma' && encodeValuesOnly) {\r\n                var valuesArray = split.call(String(obj), ',');\r\n                var valuesJoined = '';\r\n                for (var i = 0; i < valuesArray.length; ++i) {\r\n                    valuesJoined += (i === 0 ? '' : ',') + formatter(encoder(valuesArray[i], defaults.encoder, charset, 'value', format));\r\n                }\r\n                return [formatter(keyValue) + (commaRoundTrip && isArray(obj) && valuesArray.length === 1 ? '[]' : '') + '=' + valuesJoined];\r\n            }\r\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\r\n        }\r\n        return [formatter(prefix) + '=' + formatter(String(obj))];\r\n    }\r\n\r\n    var values = [];\r\n\r\n    if (typeof obj === 'undefined') {\r\n        return values;\r\n    }\r\n\r\n    var objKeys;\r\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\r\n        // we need to join elements in\r\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\r\n    } else if (isArray(filter)) {\r\n        objKeys = filter;\r\n    } else {\r\n        var keys = Object.keys(obj);\r\n        objKeys = sort ? keys.sort(sort) : keys;\r\n    }\r\n\r\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\r\n\r\n    for (var j = 0; j < objKeys.length; ++j) {\r\n        var key = objKeys[j];\r\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\r\n\r\n        if (skipNulls && value === null) {\r\n            continue;\r\n        }\r\n\r\n        var keyPrefix = isArray(obj)\r\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\r\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\r\n\r\n        sideChannel.set(object, step);\r\n        var valueSideChannel = getSideChannel();\r\n        valueSideChannel.set(sentinel, sideChannel);\r\n        pushToArray(values, stringify(\r\n            value,\r\n            keyPrefix,\r\n            generateArrayPrefix,\r\n            commaRoundTrip,\r\n            strictNullHandling,\r\n            skipNulls,\r\n            encoder,\r\n            filter,\r\n            sort,\r\n            allowDots,\r\n            serializeDate,\r\n            format,\r\n            formatter,\r\n            encodeValuesOnly,\r\n            charset,\r\n            valueSideChannel\r\n        ));\r\n    }\r\n\r\n    return values;\r\n};\r\n\r\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\r\n    if (!opts) {\r\n        return defaults;\r\n    }\r\n\r\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\r\n        throw new TypeError('Encoder has to be a function.');\r\n    }\r\n\r\n    var charset = opts.charset || defaults.charset;\r\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\r\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\r\n    }\r\n\r\n    var format = formats['default'];\r\n    if (typeof opts.format !== 'undefined') {\r\n        if (!has.call(formats.formatters, opts.format)) {\r\n            throw new TypeError('Unknown format option provided.');\r\n        }\r\n        format = opts.format;\r\n    }\r\n    var formatter = formats.formatters[format];\r\n\r\n    var filter = defaults.filter;\r\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\r\n        filter = opts.filter;\r\n    }\r\n\r\n    return {\r\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\r\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\r\n        charset: charset,\r\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\r\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\r\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\r\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\r\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\r\n        filter: filter,\r\n        format: format,\r\n        formatter: formatter,\r\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\r\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\r\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\r\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\r\n    };\r\n};\r\n\r\nmodule.exports = function (object, opts) {\r\n    var obj = object;\r\n    var options = normalizeStringifyOptions(opts);\r\n\r\n    var objKeys;\r\n    var filter;\r\n\r\n    if (typeof options.filter === 'function') {\r\n        filter = options.filter;\r\n        obj = filter('', obj);\r\n    } else if (isArray(options.filter)) {\r\n        filter = options.filter;\r\n        objKeys = filter;\r\n    }\r\n\r\n    var keys = [];\r\n\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return '';\r\n    }\r\n\r\n    var arrayFormat;\r\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\r\n        arrayFormat = opts.arrayFormat;\r\n    } else if (opts && 'indices' in opts) {\r\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\r\n    } else {\r\n        arrayFormat = 'indices';\r\n    }\r\n\r\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\r\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\r\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\r\n    }\r\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\r\n\r\n    if (!objKeys) {\r\n        objKeys = Object.keys(obj);\r\n    }\r\n\r\n    if (options.sort) {\r\n        objKeys.sort(options.sort);\r\n    }\r\n\r\n    var sideChannel = getSideChannel();\r\n    for (var i = 0; i < objKeys.length; ++i) {\r\n        var key = objKeys[i];\r\n\r\n        if (options.skipNulls && obj[key] === null) {\r\n            continue;\r\n        }\r\n        pushToArray(keys, stringify(\r\n            obj[key],\r\n            key,\r\n            generateArrayPrefix,\r\n            commaRoundTrip,\r\n            options.strictNullHandling,\r\n            options.skipNulls,\r\n            options.encode ? options.encoder : null,\r\n            options.filter,\r\n            options.sort,\r\n            options.allowDots,\r\n            options.serializeDate,\r\n            options.format,\r\n            options.formatter,\r\n            options.encodeValuesOnly,\r\n            options.charset,\r\n            sideChannel\r\n        ));\r\n    }\r\n\r\n    var joined = keys.join(options.delimiter);\r\n    var prefix = options.addQueryPrefix === true ? '?' : '';\r\n\r\n    if (options.charsetSentinel) {\r\n        if (options.charset === 'iso-8859-1') {\r\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\r\n            prefix += 'utf8=%26%2310003%3B&';\r\n        } else {\r\n            // encodeURIComponent('✓')\r\n            prefix += 'utf8=%E2%9C%93&';\r\n        }\r\n    }\r\n\r\n    return joined.length > 0 ? prefix + joined : '';\r\n};\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/qs/lib/stringify.js b/node_modules/qs/lib/stringify.js
--- a/node_modules/qs/lib/stringify.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/qs/lib/stringify.js	(date 1753913035175)
@@ -19,7 +19,6 @@
 };
 
 var isArray = Array.isArray;
-var split = String.prototype.split;
 var push = Array.prototype.push;
 var pushToArray = function (arr, valueOrArray) {
     push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);
@@ -31,10 +30,13 @@
 var defaults = {
     addQueryPrefix: false,
     allowDots: false,
+    allowEmptyArrays: false,
+    arrayFormat: 'indices',
     charset: 'utf-8',
     charsetSentinel: false,
     delimiter: '&',
     encode: true,
+    encodeDotInKeys: false,
     encoder: utils.encode,
     encodeValuesOnly: false,
     format: defaultFormat,
@@ -63,8 +65,10 @@
     prefix,
     generateArrayPrefix,
     commaRoundTrip,
+    allowEmptyArrays,
     strictNullHandling,
     skipNulls,
+    encodeDotInKeys,
     encoder,
     filter,
     sort,
@@ -121,14 +125,6 @@
     if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {
         if (encoder) {
             var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);
-            if (generateArrayPrefix === 'comma' && encodeValuesOnly) {
-                var valuesArray = split.call(String(obj), ',');
-                var valuesJoined = '';
-                for (var i = 0; i < valuesArray.length; ++i) {
-                    valuesJoined += (i === 0 ? '' : ',') + formatter(encoder(valuesArray[i], defaults.encoder, charset, 'value', format));
-                }
-                return [formatter(keyValue) + (commaRoundTrip && isArray(obj) && valuesArray.length === 1 ? '[]' : '') + '=' + valuesJoined];
-            }
             return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];
         }
         return [formatter(prefix) + '=' + formatter(String(obj))];
@@ -143,6 +139,9 @@
     var objKeys;
     if (generateArrayPrefix === 'comma' && isArray(obj)) {
         // we need to join elements in
+        if (encodeValuesOnly && encoder) {
+            obj = utils.maybeMap(obj, encoder);
+        }
         objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];
     } else if (isArray(filter)) {
         objKeys = filter;
@@ -151,7 +150,13 @@
         objKeys = sort ? keys.sort(sort) : keys;
     }
 
-    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;
+    var encodedPrefix = encodeDotInKeys ? prefix.replace(/\./g, '%2E') : prefix;
+
+    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encodedPrefix + '[]' : encodedPrefix;
+
+    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {
+        return adjustedPrefix + '[]';
+    }
 
     for (var j = 0; j < objKeys.length; ++j) {
         var key = objKeys[j];
@@ -161,9 +166,10 @@
             continue;
         }
 
+        var encodedKey = allowDots && encodeDotInKeys ? key.replace(/\./g, '%2E') : key;
         var keyPrefix = isArray(obj)
-            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix
-            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');
+            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, encodedKey) : adjustedPrefix
+            : adjustedPrefix + (allowDots ? '.' + encodedKey : '[' + encodedKey + ']');
 
         sideChannel.set(object, step);
         var valueSideChannel = getSideChannel();
@@ -173,9 +179,11 @@
             keyPrefix,
             generateArrayPrefix,
             commaRoundTrip,
+            allowEmptyArrays,
             strictNullHandling,
             skipNulls,
-            encoder,
+            encodeDotInKeys,
+            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,
             filter,
             sort,
             allowDots,
@@ -196,6 +204,14 @@
         return defaults;
     }
 
+    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {
+        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');
+    }
+
+    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {
+        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');
+    }
+
     if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {
         throw new TypeError('Encoder has to be a function.');
     }
@@ -219,13 +235,32 @@
         filter = opts.filter;
     }
 
+    var arrayFormat;
+    if (opts.arrayFormat in arrayPrefixGenerators) {
+        arrayFormat = opts.arrayFormat;
+    } else if ('indices' in opts) {
+        arrayFormat = opts.indices ? 'indices' : 'repeat';
+    } else {
+        arrayFormat = defaults.arrayFormat;
+    }
+
+    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {
+        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');
+    }
+
+    var allowDots = typeof opts.allowDots === 'undefined' ? opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;
+
     return {
         addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,
-        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
+        allowDots: allowDots,
+        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,
+        arrayFormat: arrayFormat,
         charset: charset,
         charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
+        commaRoundTrip: opts.commaRoundTrip,
         delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,
         encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,
+        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,
         encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,
         encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
         filter: filter,
@@ -259,20 +294,8 @@
         return '';
     }
 
-    var arrayFormat;
-    if (opts && opts.arrayFormat in arrayPrefixGenerators) {
-        arrayFormat = opts.arrayFormat;
-    } else if (opts && 'indices' in opts) {
-        arrayFormat = opts.indices ? 'indices' : 'repeat';
-    } else {
-        arrayFormat = 'indices';
-    }
-
-    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];
-    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {
-        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');
-    }
-    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;
+    var generateArrayPrefix = arrayPrefixGenerators[options.arrayFormat];
+    var commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;
 
     if (!objKeys) {
         objKeys = Object.keys(obj);
@@ -294,8 +317,10 @@
             key,
             generateArrayPrefix,
             commaRoundTrip,
+            options.allowEmptyArrays,
             options.strictNullHandling,
             options.skipNulls,
+            options.encodeDotInKeys,
             options.encode ? options.encoder : null,
             options.filter,
             options.sort,
Index: node_modules/nodemon/lib/rules/add.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar utils = require('../utils');\r\n\r\n// internal\r\nvar reEscComments = /\\\\#/g;\r\n// note that '^^' is used in place of escaped comments\r\nvar reUnescapeComments = /\\^\\^/g;\r\nvar reComments = /#.*$/;\r\nvar reEscapeChars = /[.|\\-[\\]()\\\\]/g;\r\nvar reAsterisk = /\\*/g;\r\n\r\nmodule.exports = add;\r\n\r\n/**\r\n * Converts file patterns or regular expressions to nodemon\r\n * compatible RegExp matching rules. Note: the `rules` argument\r\n * object is modified to include the new rule and new RegExp\r\n *\r\n * ### Example:\r\n *\r\n *     var rules = { watch: [], ignore: [] };\r\n *     add(rules, 'watch', '*.js');\r\n *     add(rules, 'ignore', '/public/');\r\n *     add(rules, 'watch', ':(\\d)*\\.js'); // note: string based regexp\r\n *     add(rules, 'watch', /\\d*\\.js/);\r\n *\r\n * @param {Object} rules containing `watch` and `ignore`. Also updated during\r\n *                       execution\r\n * @param {String} which must be either \"watch\" or \"ignore\"\r\n * @param {String|RegExp} the actual rule.\r\n */\r\nfunction add(rules, which, rule) {\r\n  if (!{ ignore: 1, watch: 1}[which]) {\r\n    throw new Error('rules/index.js#add requires \"ignore\" or \"watch\" as the ' +\r\n      'first argument');\r\n  }\r\n\r\n  if (Array.isArray(rule)) {\r\n    rule.forEach(function (rule) {\r\n      add(rules, which, rule);\r\n    });\r\n    return;\r\n  }\r\n\r\n  // support the rule being a RegExp, but reformat it to\r\n  // the custom :<regexp> format that we're working with.\r\n  if (rule instanceof RegExp) {\r\n    // rule = ':' + rule.toString().replace(/^\\/(.*?)\\/$/g, '$1');\r\n    utils.log.error('RegExp format no longer supported, but globs are.');\r\n    return;\r\n  }\r\n\r\n  // remove comments and trim lines\r\n  // this mess of replace methods is escaping \"\\#\" to allow for emacs temp files\r\n\r\n  // first up strip comments and remove blank head or tails\r\n  rule = (rule || '').replace(reEscComments, '^^')\r\n             .replace(reComments, '')\r\n             .replace(reUnescapeComments, '#').trim();\r\n\r\n  var regexp = false;\r\n\r\n  if (typeof rule === 'string' && rule.substring(0, 1) === ':') {\r\n    rule = rule.substring(1);\r\n    utils.log.error('RegExp no longer supported: ' + rule);\r\n    regexp = true;\r\n  } else if (rule.length === 0) {\r\n    // blank line (or it was a comment)\r\n    return;\r\n  }\r\n\r\n  if (regexp) {\r\n    // rules[which].push(rule);\r\n  } else {\r\n    // rule = rule.replace(reEscapeChars, '\\\\$&')\r\n    // .replace(reAsterisk, '.*');\r\n\r\n    rules[which].push(rule);\r\n    // compile a regexp of all the rules for this ignore or watch\r\n    var re = rules[which].map(function (rule) {\r\n      return rule.replace(reEscapeChars, '\\\\$&')\r\n                 .replace(reAsterisk, '.*');\r\n    }).join('|');\r\n\r\n    // used for the directory matching\r\n    rules[which].re = new RegExp(re);\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/nodemon/lib/rules/add.js b/node_modules/nodemon/lib/rules/add.js
--- a/node_modules/nodemon/lib/rules/add.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/nodemon/lib/rules/add.js	(date 1753913035553)
@@ -28,7 +28,7 @@
  * @param {Object} rules containing `watch` and `ignore`. Also updated during
  *                       execution
  * @param {String} which must be either "watch" or "ignore"
- * @param {String|RegExp} the actual rule.
+ * @param {String|RegExp} rule the actual rule.
  */
 function add(rules, which, rule) {
   if (!{ ignore: 1, watch: 1}[which]) {
Index: node_modules/qs/dist/qs.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.Qs = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar replace = String.prototype.replace;\r\nvar percentTwenties = /%20/g;\r\n\r\nvar Format = {\r\n    RFC1738: 'RFC1738',\r\n    RFC3986: 'RFC3986'\r\n};\r\n\r\nmodule.exports = {\r\n    'default': Format.RFC3986,\r\n    formatters: {\r\n        RFC1738: function (value) {\r\n            return replace.call(value, percentTwenties, '+');\r\n        },\r\n        RFC3986: function (value) {\r\n            return String(value);\r\n        }\r\n    },\r\n    RFC1738: Format.RFC1738,\r\n    RFC3986: Format.RFC3986\r\n};\r\n\r\n},{}],2:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar stringify = require('./stringify');\r\nvar parse = require('./parse');\r\nvar formats = require('./formats');\r\n\r\nmodule.exports = {\r\n    formats: formats,\r\n    parse: parse,\r\n    stringify: stringify\r\n};\r\n\r\n},{\"./formats\":1,\"./parse\":3,\"./stringify\":4}],3:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar utils = require('./utils');\r\n\r\nvar has = Object.prototype.hasOwnProperty;\r\nvar isArray = Array.isArray;\r\n\r\nvar defaults = {\r\n    allowDots: false,\r\n    allowPrototypes: false,\r\n    allowSparse: false,\r\n    arrayLimit: 20,\r\n    charset: 'utf-8',\r\n    charsetSentinel: false,\r\n    comma: false,\r\n    decoder: utils.decode,\r\n    delimiter: '&',\r\n    depth: 5,\r\n    ignoreQueryPrefix: false,\r\n    interpretNumericEntities: false,\r\n    parameterLimit: 1000,\r\n    parseArrays: true,\r\n    plainObjects: false,\r\n    strictNullHandling: false\r\n};\r\n\r\nvar interpretNumericEntities = function (str) {\r\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\r\n        return String.fromCharCode(parseInt(numberStr, 10));\r\n    });\r\n};\r\n\r\nvar parseArrayValue = function (val, options) {\r\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\r\n        return val.split(',');\r\n    }\r\n\r\n    return val;\r\n};\r\n\r\n// This is what browsers will submit when the ✓ character occurs in an\r\n// application/x-www-form-urlencoded body and the encoding of the page containing\r\n// the form is iso-8859-1, or when the submitted form has an accept-charset\r\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\r\n// the ✓ character, such as us-ascii.\r\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\r\n\r\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\r\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\r\n\r\nvar parseValues = function parseQueryStringValues(str, options) {\r\n    var obj = {};\r\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\r\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\r\n    var parts = cleanStr.split(options.delimiter, limit);\r\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\r\n    var i;\r\n\r\n    var charset = options.charset;\r\n    if (options.charsetSentinel) {\r\n        for (i = 0; i < parts.length; ++i) {\r\n            if (parts[i].indexOf('utf8=') === 0) {\r\n                if (parts[i] === charsetSentinel) {\r\n                    charset = 'utf-8';\r\n                } else if (parts[i] === isoSentinel) {\r\n                    charset = 'iso-8859-1';\r\n                }\r\n                skipIndex = i;\r\n                i = parts.length; // The eslint settings do not allow break;\r\n            }\r\n        }\r\n    }\r\n\r\n    for (i = 0; i < parts.length; ++i) {\r\n        if (i === skipIndex) {\r\n            continue;\r\n        }\r\n        var part = parts[i];\r\n\r\n        var bracketEqualsPos = part.indexOf(']=');\r\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\r\n\r\n        var key, val;\r\n        if (pos === -1) {\r\n            key = options.decoder(part, defaults.decoder, charset, 'key');\r\n            val = options.strictNullHandling ? null : '';\r\n        } else {\r\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\r\n            val = utils.maybeMap(\r\n                parseArrayValue(part.slice(pos + 1), options),\r\n                function (encodedVal) {\r\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\r\n                }\r\n            );\r\n        }\r\n\r\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\r\n            val = interpretNumericEntities(val);\r\n        }\r\n\r\n        if (part.indexOf('[]=') > -1) {\r\n            val = isArray(val) ? [val] : val;\r\n        }\r\n\r\n        if (has.call(obj, key)) {\r\n            obj[key] = utils.combine(obj[key], val);\r\n        } else {\r\n            obj[key] = val;\r\n        }\r\n    }\r\n\r\n    return obj;\r\n};\r\n\r\nvar parseObject = function (chain, val, options, valuesParsed) {\r\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\r\n\r\n    for (var i = chain.length - 1; i >= 0; --i) {\r\n        var obj;\r\n        var root = chain[i];\r\n\r\n        if (root === '[]' && options.parseArrays) {\r\n            obj = [].concat(leaf);\r\n        } else {\r\n            obj = options.plainObjects ? Object.create(null) : {};\r\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\r\n            var index = parseInt(cleanRoot, 10);\r\n            if (!options.parseArrays && cleanRoot === '') {\r\n                obj = { 0: leaf };\r\n            } else if (\r\n                !isNaN(index)\r\n                && root !== cleanRoot\r\n                && String(index) === cleanRoot\r\n                && index >= 0\r\n                && (options.parseArrays && index <= options.arrayLimit)\r\n            ) {\r\n                obj = [];\r\n                obj[index] = leaf;\r\n            } else if (cleanRoot !== '__proto__') {\r\n                obj[cleanRoot] = leaf;\r\n            }\r\n        }\r\n\r\n        leaf = obj;\r\n    }\r\n\r\n    return leaf;\r\n};\r\n\r\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\r\n    if (!givenKey) {\r\n        return;\r\n    }\r\n\r\n    // Transform dot notation to bracket notation\r\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\r\n\r\n    // The regex chunks\r\n\r\n    var brackets = /(\\[[^[\\]]*])/;\r\n    var child = /(\\[[^[\\]]*])/g;\r\n\r\n    // Get the parent\r\n\r\n    var segment = options.depth > 0 && brackets.exec(key);\r\n    var parent = segment ? key.slice(0, segment.index) : key;\r\n\r\n    // Stash the parent if it exists\r\n\r\n    var keys = [];\r\n    if (parent) {\r\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\r\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\r\n            if (!options.allowPrototypes) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        keys.push(parent);\r\n    }\r\n\r\n    // Loop through children appending to the array until we hit depth\r\n\r\n    var i = 0;\r\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\r\n        i += 1;\r\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\r\n            if (!options.allowPrototypes) {\r\n                return;\r\n            }\r\n        }\r\n        keys.push(segment[1]);\r\n    }\r\n\r\n    // If there's a remainder, just add whatever is left\r\n\r\n    if (segment) {\r\n        keys.push('[' + key.slice(segment.index) + ']');\r\n    }\r\n\r\n    return parseObject(keys, val, options, valuesParsed);\r\n};\r\n\r\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\r\n    if (!opts) {\r\n        return defaults;\r\n    }\r\n\r\n    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {\r\n        throw new TypeError('Decoder has to be a function.');\r\n    }\r\n\r\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\r\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\r\n    }\r\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\r\n\r\n    return {\r\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\r\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\r\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\r\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\r\n        charset: charset,\r\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\r\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\r\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\r\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\r\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\r\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\r\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\r\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\r\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\r\n        parseArrays: opts.parseArrays !== false,\r\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\r\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\r\n    };\r\n};\r\n\r\nmodule.exports = function (str, opts) {\r\n    var options = normalizeParseOptions(opts);\r\n\r\n    if (str === '' || str === null || typeof str === 'undefined') {\r\n        return options.plainObjects ? Object.create(null) : {};\r\n    }\r\n\r\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\r\n    var obj = options.plainObjects ? Object.create(null) : {};\r\n\r\n    // Iterate over the keys and setup the new object\r\n\r\n    var keys = Object.keys(tempObj);\r\n    for (var i = 0; i < keys.length; ++i) {\r\n        var key = keys[i];\r\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\r\n        obj = utils.merge(obj, newObj, options);\r\n    }\r\n\r\n    if (options.allowSparse === true) {\r\n        return obj;\r\n    }\r\n\r\n    return utils.compact(obj);\r\n};\r\n\r\n},{\"./utils\":5}],4:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar getSideChannel = require('side-channel');\r\nvar utils = require('./utils');\r\nvar formats = require('./formats');\r\nvar has = Object.prototype.hasOwnProperty;\r\n\r\nvar arrayPrefixGenerators = {\r\n    brackets: function brackets(prefix) {\r\n        return prefix + '[]';\r\n    },\r\n    comma: 'comma',\r\n    indices: function indices(prefix, key) {\r\n        return prefix + '[' + key + ']';\r\n    },\r\n    repeat: function repeat(prefix) {\r\n        return prefix;\r\n    }\r\n};\r\n\r\nvar isArray = Array.isArray;\r\nvar split = String.prototype.split;\r\nvar push = Array.prototype.push;\r\nvar pushToArray = function (arr, valueOrArray) {\r\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\r\n};\r\n\r\nvar toISO = Date.prototype.toISOString;\r\n\r\nvar defaultFormat = formats['default'];\r\nvar defaults = {\r\n    addQueryPrefix: false,\r\n    allowDots: false,\r\n    charset: 'utf-8',\r\n    charsetSentinel: false,\r\n    delimiter: '&',\r\n    encode: true,\r\n    encoder: utils.encode,\r\n    encodeValuesOnly: false,\r\n    format: defaultFormat,\r\n    formatter: formats.formatters[defaultFormat],\r\n    // deprecated\r\n    indices: false,\r\n    serializeDate: function serializeDate(date) {\r\n        return toISO.call(date);\r\n    },\r\n    skipNulls: false,\r\n    strictNullHandling: false\r\n};\r\n\r\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\r\n    return typeof v === 'string'\r\n        || typeof v === 'number'\r\n        || typeof v === 'boolean'\r\n        || typeof v === 'symbol'\r\n        || typeof v === 'bigint';\r\n};\r\n\r\nvar sentinel = {};\r\n\r\nvar stringify = function stringify(\r\n    object,\r\n    prefix,\r\n    generateArrayPrefix,\r\n    commaRoundTrip,\r\n    strictNullHandling,\r\n    skipNulls,\r\n    encoder,\r\n    filter,\r\n    sort,\r\n    allowDots,\r\n    serializeDate,\r\n    format,\r\n    formatter,\r\n    encodeValuesOnly,\r\n    charset,\r\n    sideChannel\r\n) {\r\n    var obj = object;\r\n\r\n    var tmpSc = sideChannel;\r\n    var step = 0;\r\n    var findFlag = false;\r\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\r\n        // Where object last appeared in the ref tree\r\n        var pos = tmpSc.get(object);\r\n        step += 1;\r\n        if (typeof pos !== 'undefined') {\r\n            if (pos === step) {\r\n                throw new RangeError('Cyclic object value');\r\n            } else {\r\n                findFlag = true; // Break while\r\n            }\r\n        }\r\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\r\n            step = 0;\r\n        }\r\n    }\r\n\r\n    if (typeof filter === 'function') {\r\n        obj = filter(prefix, obj);\r\n    } else if (obj instanceof Date) {\r\n        obj = serializeDate(obj);\r\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\r\n        obj = utils.maybeMap(obj, function (value) {\r\n            if (value instanceof Date) {\r\n                return serializeDate(value);\r\n            }\r\n            return value;\r\n        });\r\n    }\r\n\r\n    if (obj === null) {\r\n        if (strictNullHandling) {\r\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\r\n        }\r\n\r\n        obj = '';\r\n    }\r\n\r\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\r\n        if (encoder) {\r\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\r\n            if (generateArrayPrefix === 'comma' && encodeValuesOnly) {\r\n                var valuesArray = split.call(String(obj), ',');\r\n                var valuesJoined = '';\r\n                for (var i = 0; i < valuesArray.length; ++i) {\r\n                    valuesJoined += (i === 0 ? '' : ',') + formatter(encoder(valuesArray[i], defaults.encoder, charset, 'value', format));\r\n                }\r\n                return [formatter(keyValue) + (commaRoundTrip && isArray(obj) && valuesArray.length === 1 ? '[]' : '') + '=' + valuesJoined];\r\n            }\r\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\r\n        }\r\n        return [formatter(prefix) + '=' + formatter(String(obj))];\r\n    }\r\n\r\n    var values = [];\r\n\r\n    if (typeof obj === 'undefined') {\r\n        return values;\r\n    }\r\n\r\n    var objKeys;\r\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\r\n        // we need to join elements in\r\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\r\n    } else if (isArray(filter)) {\r\n        objKeys = filter;\r\n    } else {\r\n        var keys = Object.keys(obj);\r\n        objKeys = sort ? keys.sort(sort) : keys;\r\n    }\r\n\r\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;\r\n\r\n    for (var j = 0; j < objKeys.length; ++j) {\r\n        var key = objKeys[j];\r\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\r\n\r\n        if (skipNulls && value === null) {\r\n            continue;\r\n        }\r\n\r\n        var keyPrefix = isArray(obj)\r\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix\r\n            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');\r\n\r\n        sideChannel.set(object, step);\r\n        var valueSideChannel = getSideChannel();\r\n        valueSideChannel.set(sentinel, sideChannel);\r\n        pushToArray(values, stringify(\r\n            value,\r\n            keyPrefix,\r\n            generateArrayPrefix,\r\n            commaRoundTrip,\r\n            strictNullHandling,\r\n            skipNulls,\r\n            encoder,\r\n            filter,\r\n            sort,\r\n            allowDots,\r\n            serializeDate,\r\n            format,\r\n            formatter,\r\n            encodeValuesOnly,\r\n            charset,\r\n            valueSideChannel\r\n        ));\r\n    }\r\n\r\n    return values;\r\n};\r\n\r\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\r\n    if (!opts) {\r\n        return defaults;\r\n    }\r\n\r\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\r\n        throw new TypeError('Encoder has to be a function.');\r\n    }\r\n\r\n    var charset = opts.charset || defaults.charset;\r\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\r\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\r\n    }\r\n\r\n    var format = formats['default'];\r\n    if (typeof opts.format !== 'undefined') {\r\n        if (!has.call(formats.formatters, opts.format)) {\r\n            throw new TypeError('Unknown format option provided.');\r\n        }\r\n        format = opts.format;\r\n    }\r\n    var formatter = formats.formatters[format];\r\n\r\n    var filter = defaults.filter;\r\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\r\n        filter = opts.filter;\r\n    }\r\n\r\n    return {\r\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\r\n        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,\r\n        charset: charset,\r\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\r\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\r\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\r\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\r\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\r\n        filter: filter,\r\n        format: format,\r\n        formatter: formatter,\r\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\r\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\r\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\r\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\r\n    };\r\n};\r\n\r\nmodule.exports = function (object, opts) {\r\n    var obj = object;\r\n    var options = normalizeStringifyOptions(opts);\r\n\r\n    var objKeys;\r\n    var filter;\r\n\r\n    if (typeof options.filter === 'function') {\r\n        filter = options.filter;\r\n        obj = filter('', obj);\r\n    } else if (isArray(options.filter)) {\r\n        filter = options.filter;\r\n        objKeys = filter;\r\n    }\r\n\r\n    var keys = [];\r\n\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return '';\r\n    }\r\n\r\n    var arrayFormat;\r\n    if (opts && opts.arrayFormat in arrayPrefixGenerators) {\r\n        arrayFormat = opts.arrayFormat;\r\n    } else if (opts && 'indices' in opts) {\r\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\r\n    } else {\r\n        arrayFormat = 'indices';\r\n    }\r\n\r\n    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];\r\n    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\r\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\r\n    }\r\n    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;\r\n\r\n    if (!objKeys) {\r\n        objKeys = Object.keys(obj);\r\n    }\r\n\r\n    if (options.sort) {\r\n        objKeys.sort(options.sort);\r\n    }\r\n\r\n    var sideChannel = getSideChannel();\r\n    for (var i = 0; i < objKeys.length; ++i) {\r\n        var key = objKeys[i];\r\n\r\n        if (options.skipNulls && obj[key] === null) {\r\n            continue;\r\n        }\r\n        pushToArray(keys, stringify(\r\n            obj[key],\r\n            key,\r\n            generateArrayPrefix,\r\n            commaRoundTrip,\r\n            options.strictNullHandling,\r\n            options.skipNulls,\r\n            options.encode ? options.encoder : null,\r\n            options.filter,\r\n            options.sort,\r\n            options.allowDots,\r\n            options.serializeDate,\r\n            options.format,\r\n            options.formatter,\r\n            options.encodeValuesOnly,\r\n            options.charset,\r\n            sideChannel\r\n        ));\r\n    }\r\n\r\n    var joined = keys.join(options.delimiter);\r\n    var prefix = options.addQueryPrefix === true ? '?' : '';\r\n\r\n    if (options.charsetSentinel) {\r\n        if (options.charset === 'iso-8859-1') {\r\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\r\n            prefix += 'utf8=%26%2310003%3B&';\r\n        } else {\r\n            // encodeURIComponent('✓')\r\n            prefix += 'utf8=%E2%9C%93&';\r\n        }\r\n    }\r\n\r\n    return joined.length > 0 ? prefix + joined : '';\r\n};\r\n\r\n},{\"./formats\":1,\"./utils\":5,\"side-channel\":16}],5:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar formats = require('./formats');\r\n\r\nvar has = Object.prototype.hasOwnProperty;\r\nvar isArray = Array.isArray;\r\n\r\nvar hexTable = (function () {\r\n    var array = [];\r\n    for (var i = 0; i < 256; ++i) {\r\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\r\n    }\r\n\r\n    return array;\r\n}());\r\n\r\nvar compactQueue = function compactQueue(queue) {\r\n    while (queue.length > 1) {\r\n        var item = queue.pop();\r\n        var obj = item.obj[item.prop];\r\n\r\n        if (isArray(obj)) {\r\n            var compacted = [];\r\n\r\n            for (var j = 0; j < obj.length; ++j) {\r\n                if (typeof obj[j] !== 'undefined') {\r\n                    compacted.push(obj[j]);\r\n                }\r\n            }\r\n\r\n            item.obj[item.prop] = compacted;\r\n        }\r\n    }\r\n};\r\n\r\nvar arrayToObject = function arrayToObject(source, options) {\r\n    var obj = options && options.plainObjects ? Object.create(null) : {};\r\n    for (var i = 0; i < source.length; ++i) {\r\n        if (typeof source[i] !== 'undefined') {\r\n            obj[i] = source[i];\r\n        }\r\n    }\r\n\r\n    return obj;\r\n};\r\n\r\nvar merge = function merge(target, source, options) {\r\n    /* eslint no-param-reassign: 0 */\r\n    if (!source) {\r\n        return target;\r\n    }\r\n\r\n    if (typeof source !== 'object') {\r\n        if (isArray(target)) {\r\n            target.push(source);\r\n        } else if (target && typeof target === 'object') {\r\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\r\n                target[source] = true;\r\n            }\r\n        } else {\r\n            return [target, source];\r\n        }\r\n\r\n        return target;\r\n    }\r\n\r\n    if (!target || typeof target !== 'object') {\r\n        return [target].concat(source);\r\n    }\r\n\r\n    var mergeTarget = target;\r\n    if (isArray(target) && !isArray(source)) {\r\n        mergeTarget = arrayToObject(target, options);\r\n    }\r\n\r\n    if (isArray(target) && isArray(source)) {\r\n        source.forEach(function (item, i) {\r\n            if (has.call(target, i)) {\r\n                var targetItem = target[i];\r\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\r\n                    target[i] = merge(targetItem, item, options);\r\n                } else {\r\n                    target.push(item);\r\n                }\r\n            } else {\r\n                target[i] = item;\r\n            }\r\n        });\r\n        return target;\r\n    }\r\n\r\n    return Object.keys(source).reduce(function (acc, key) {\r\n        var value = source[key];\r\n\r\n        if (has.call(acc, key)) {\r\n            acc[key] = merge(acc[key], value, options);\r\n        } else {\r\n            acc[key] = value;\r\n        }\r\n        return acc;\r\n    }, mergeTarget);\r\n};\r\n\r\nvar assign = function assignSingleSource(target, source) {\r\n    return Object.keys(source).reduce(function (acc, key) {\r\n        acc[key] = source[key];\r\n        return acc;\r\n    }, target);\r\n};\r\n\r\nvar decode = function (str, decoder, charset) {\r\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\r\n    if (charset === 'iso-8859-1') {\r\n        // unescape never throws, no try...catch needed:\r\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\r\n    }\r\n    // utf-8\r\n    try {\r\n        return decodeURIComponent(strWithoutPlus);\r\n    } catch (e) {\r\n        return strWithoutPlus;\r\n    }\r\n};\r\n\r\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\r\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\r\n    // It has been adapted here for stricter adherence to RFC 3986\r\n    if (str.length === 0) {\r\n        return str;\r\n    }\r\n\r\n    var string = str;\r\n    if (typeof str === 'symbol') {\r\n        string = Symbol.prototype.toString.call(str);\r\n    } else if (typeof str !== 'string') {\r\n        string = String(str);\r\n    }\r\n\r\n    if (charset === 'iso-8859-1') {\r\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\r\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\r\n        });\r\n    }\r\n\r\n    var out = '';\r\n    for (var i = 0; i < string.length; ++i) {\r\n        var c = string.charCodeAt(i);\r\n\r\n        if (\r\n            c === 0x2D // -\r\n            || c === 0x2E // .\r\n            || c === 0x5F // _\r\n            || c === 0x7E // ~\r\n            || (c >= 0x30 && c <= 0x39) // 0-9\r\n            || (c >= 0x41 && c <= 0x5A) // a-z\r\n            || (c >= 0x61 && c <= 0x7A) // A-Z\r\n            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\r\n        ) {\r\n            out += string.charAt(i);\r\n            continue;\r\n        }\r\n\r\n        if (c < 0x80) {\r\n            out = out + hexTable[c];\r\n            continue;\r\n        }\r\n\r\n        if (c < 0x800) {\r\n            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);\r\n            continue;\r\n        }\r\n\r\n        if (c < 0xD800 || c >= 0xE000) {\r\n            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);\r\n            continue;\r\n        }\r\n\r\n        i += 1;\r\n        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));\r\n        /* eslint operator-linebreak: [2, \"before\"] */\r\n        out += hexTable[0xF0 | (c >> 18)]\r\n            + hexTable[0x80 | ((c >> 12) & 0x3F)]\r\n            + hexTable[0x80 | ((c >> 6) & 0x3F)]\r\n            + hexTable[0x80 | (c & 0x3F)];\r\n    }\r\n\r\n    return out;\r\n};\r\n\r\nvar compact = function compact(value) {\r\n    var queue = [{ obj: { o: value }, prop: 'o' }];\r\n    var refs = [];\r\n\r\n    for (var i = 0; i < queue.length; ++i) {\r\n        var item = queue[i];\r\n        var obj = item.obj[item.prop];\r\n\r\n        var keys = Object.keys(obj);\r\n        for (var j = 0; j < keys.length; ++j) {\r\n            var key = keys[j];\r\n            var val = obj[key];\r\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\r\n                queue.push({ obj: obj, prop: key });\r\n                refs.push(val);\r\n            }\r\n        }\r\n    }\r\n\r\n    compactQueue(queue);\r\n\r\n    return value;\r\n};\r\n\r\nvar isRegExp = function isRegExp(obj) {\r\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\r\n};\r\n\r\nvar isBuffer = function isBuffer(obj) {\r\n    if (!obj || typeof obj !== 'object') {\r\n        return false;\r\n    }\r\n\r\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\r\n};\r\n\r\nvar combine = function combine(a, b) {\r\n    return [].concat(a, b);\r\n};\r\n\r\nvar maybeMap = function maybeMap(val, fn) {\r\n    if (isArray(val)) {\r\n        var mapped = [];\r\n        for (var i = 0; i < val.length; i += 1) {\r\n            mapped.push(fn(val[i]));\r\n        }\r\n        return mapped;\r\n    }\r\n    return fn(val);\r\n};\r\n\r\nmodule.exports = {\r\n    arrayToObject: arrayToObject,\r\n    assign: assign,\r\n    combine: combine,\r\n    compact: compact,\r\n    decode: decode,\r\n    encode: encode,\r\n    isBuffer: isBuffer,\r\n    isRegExp: isRegExp,\r\n    maybeMap: maybeMap,\r\n    merge: merge\r\n};\r\n\r\n},{\"./formats\":1}],6:[function(require,module,exports){\r\n\r\n},{}],7:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar GetIntrinsic = require('get-intrinsic');\r\n\r\nvar callBind = require('./');\r\n\r\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\r\n\r\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\r\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\r\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\r\n\t\treturn callBind(intrinsic);\r\n\t}\r\n\treturn intrinsic;\r\n};\r\n\r\n},{\"./\":8,\"get-intrinsic\":11}],8:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar bind = require('function-bind');\r\nvar GetIntrinsic = require('get-intrinsic');\r\n\r\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\r\nvar $call = GetIntrinsic('%Function.prototype.call%');\r\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\r\n\r\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\r\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\r\nvar $max = GetIntrinsic('%Math.max%');\r\n\r\nif ($defineProperty) {\r\n\ttry {\r\n\t\t$defineProperty({}, 'a', { value: 1 });\r\n\t} catch (e) {\r\n\t\t// IE 8 has a broken defineProperty\r\n\t\t$defineProperty = null;\r\n\t}\r\n}\r\n\r\nmodule.exports = function callBind(originalFunction) {\r\n\tvar func = $reflectApply(bind, $call, arguments);\r\n\tif ($gOPD && $defineProperty) {\r\n\t\tvar desc = $gOPD(func, 'length');\r\n\t\tif (desc.configurable) {\r\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\r\n\t\t\t$defineProperty(\r\n\t\t\t\tfunc,\r\n\t\t\t\t'length',\r\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\treturn func;\r\n};\r\n\r\nvar applyBind = function applyBind() {\r\n\treturn $reflectApply(bind, $apply, arguments);\r\n};\r\n\r\nif ($defineProperty) {\r\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\r\n} else {\r\n\tmodule.exports.apply = applyBind;\r\n}\r\n\r\n},{\"function-bind\":10,\"get-intrinsic\":11}],9:[function(require,module,exports){\r\n'use strict';\r\n\r\n/* eslint no-invalid-this: 1 */\r\n\r\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\r\nvar slice = Array.prototype.slice;\r\nvar toStr = Object.prototype.toString;\r\nvar funcType = '[object Function]';\r\n\r\nmodule.exports = function bind(that) {\r\n    var target = this;\r\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\r\n        throw new TypeError(ERROR_MESSAGE + target);\r\n    }\r\n    var args = slice.call(arguments, 1);\r\n\r\n    var bound;\r\n    var binder = function () {\r\n        if (this instanceof bound) {\r\n            var result = target.apply(\r\n                this,\r\n                args.concat(slice.call(arguments))\r\n            );\r\n            if (Object(result) === result) {\r\n                return result;\r\n            }\r\n            return this;\r\n        } else {\r\n            return target.apply(\r\n                that,\r\n                args.concat(slice.call(arguments))\r\n            );\r\n        }\r\n    };\r\n\r\n    var boundLength = Math.max(0, target.length - args.length);\r\n    var boundArgs = [];\r\n    for (var i = 0; i < boundLength; i++) {\r\n        boundArgs.push('$' + i);\r\n    }\r\n\r\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\r\n\r\n    if (target.prototype) {\r\n        var Empty = function Empty() {};\r\n        Empty.prototype = target.prototype;\r\n        bound.prototype = new Empty();\r\n        Empty.prototype = null;\r\n    }\r\n\r\n    return bound;\r\n};\r\n\r\n},{}],10:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar implementation = require('./implementation');\r\n\r\nmodule.exports = Function.prototype.bind || implementation;\r\n\r\n},{\"./implementation\":9}],11:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar undefined;\r\n\r\nvar $SyntaxError = SyntaxError;\r\nvar $Function = Function;\r\nvar $TypeError = TypeError;\r\n\r\n// eslint-disable-next-line consistent-return\r\nvar getEvalledConstructor = function (expressionSyntax) {\r\n\ttry {\r\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\r\n\t} catch (e) {}\r\n};\r\n\r\nvar $gOPD = Object.getOwnPropertyDescriptor;\r\nif ($gOPD) {\r\n\ttry {\r\n\t\t$gOPD({}, '');\r\n\t} catch (e) {\r\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\r\n\t}\r\n}\r\n\r\nvar throwTypeError = function () {\r\n\tthrow new $TypeError();\r\n};\r\nvar ThrowTypeError = $gOPD\r\n\t? (function () {\r\n\t\ttry {\r\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\r\n\t\t\targuments.callee; // IE 8 does not throw here\r\n\t\t\treturn throwTypeError;\r\n\t\t} catch (calleeThrows) {\r\n\t\t\ttry {\r\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\r\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\r\n\t\t\t} catch (gOPDthrows) {\r\n\t\t\t\treturn throwTypeError;\r\n\t\t\t}\r\n\t\t}\r\n\t}())\r\n\t: throwTypeError;\r\n\r\nvar hasSymbols = require('has-symbols')();\r\n\r\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\r\n\r\nvar needsEval = {};\r\n\r\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\r\n\r\nvar INTRINSICS = {\r\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\r\n\t'%Array%': Array,\r\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\r\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\r\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\r\n\t'%AsyncFunction%': needsEval,\r\n\t'%AsyncGenerator%': needsEval,\r\n\t'%AsyncGeneratorFunction%': needsEval,\r\n\t'%AsyncIteratorPrototype%': needsEval,\r\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\r\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\r\n\t'%Boolean%': Boolean,\r\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\r\n\t'%Date%': Date,\r\n\t'%decodeURI%': decodeURI,\r\n\t'%decodeURIComponent%': decodeURIComponent,\r\n\t'%encodeURI%': encodeURI,\r\n\t'%encodeURIComponent%': encodeURIComponent,\r\n\t'%Error%': Error,\r\n\t'%eval%': eval, // eslint-disable-line no-eval\r\n\t'%EvalError%': EvalError,\r\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\r\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\r\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\r\n\t'%Function%': $Function,\r\n\t'%GeneratorFunction%': needsEval,\r\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\r\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\r\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\r\n\t'%isFinite%': isFinite,\r\n\t'%isNaN%': isNaN,\r\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\r\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\r\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\r\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\r\n\t'%Math%': Math,\r\n\t'%Number%': Number,\r\n\t'%Object%': Object,\r\n\t'%parseFloat%': parseFloat,\r\n\t'%parseInt%': parseInt,\r\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\r\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\r\n\t'%RangeError%': RangeError,\r\n\t'%ReferenceError%': ReferenceError,\r\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\r\n\t'%RegExp%': RegExp,\r\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\r\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\r\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\r\n\t'%String%': String,\r\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\r\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\r\n\t'%SyntaxError%': $SyntaxError,\r\n\t'%ThrowTypeError%': ThrowTypeError,\r\n\t'%TypedArray%': TypedArray,\r\n\t'%TypeError%': $TypeError,\r\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\r\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\r\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\r\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\r\n\t'%URIError%': URIError,\r\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\r\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\r\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\r\n};\r\n\r\nvar doEval = function doEval(name) {\r\n\tvar value;\r\n\tif (name === '%AsyncFunction%') {\r\n\t\tvalue = getEvalledConstructor('async function () {}');\r\n\t} else if (name === '%GeneratorFunction%') {\r\n\t\tvalue = getEvalledConstructor('function* () {}');\r\n\t} else if (name === '%AsyncGeneratorFunction%') {\r\n\t\tvalue = getEvalledConstructor('async function* () {}');\r\n\t} else if (name === '%AsyncGenerator%') {\r\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\r\n\t\tif (fn) {\r\n\t\t\tvalue = fn.prototype;\r\n\t\t}\r\n\t} else if (name === '%AsyncIteratorPrototype%') {\r\n\t\tvar gen = doEval('%AsyncGenerator%');\r\n\t\tif (gen) {\r\n\t\t\tvalue = getProto(gen.prototype);\r\n\t\t}\r\n\t}\r\n\r\n\tINTRINSICS[name] = value;\r\n\r\n\treturn value;\r\n};\r\n\r\nvar LEGACY_ALIASES = {\r\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\r\n\t'%ArrayPrototype%': ['Array', 'prototype'],\r\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\r\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\r\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\r\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\r\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\r\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\r\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\r\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\r\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\r\n\t'%DatePrototype%': ['Date', 'prototype'],\r\n\t'%ErrorPrototype%': ['Error', 'prototype'],\r\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\r\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\r\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\r\n\t'%FunctionPrototype%': ['Function', 'prototype'],\r\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\r\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\r\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\r\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\r\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\r\n\t'%JSONParse%': ['JSON', 'parse'],\r\n\t'%JSONStringify%': ['JSON', 'stringify'],\r\n\t'%MapPrototype%': ['Map', 'prototype'],\r\n\t'%NumberPrototype%': ['Number', 'prototype'],\r\n\t'%ObjectPrototype%': ['Object', 'prototype'],\r\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\r\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\r\n\t'%PromisePrototype%': ['Promise', 'prototype'],\r\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\r\n\t'%Promise_all%': ['Promise', 'all'],\r\n\t'%Promise_reject%': ['Promise', 'reject'],\r\n\t'%Promise_resolve%': ['Promise', 'resolve'],\r\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\r\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\r\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\r\n\t'%SetPrototype%': ['Set', 'prototype'],\r\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\r\n\t'%StringPrototype%': ['String', 'prototype'],\r\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\r\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\r\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\r\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\r\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\r\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\r\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\r\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\r\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\r\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\r\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\r\n};\r\n\r\nvar bind = require('function-bind');\r\nvar hasOwn = require('has');\r\nvar $concat = bind.call(Function.call, Array.prototype.concat);\r\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\r\nvar $replace = bind.call(Function.call, String.prototype.replace);\r\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\r\n\r\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\r\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\r\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\r\nvar stringToPath = function stringToPath(string) {\r\n\tvar first = $strSlice(string, 0, 1);\r\n\tvar last = $strSlice(string, -1);\r\n\tif (first === '%' && last !== '%') {\r\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\r\n\t} else if (last === '%' && first !== '%') {\r\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\r\n\t}\r\n\tvar result = [];\r\n\t$replace(string, rePropName, function (match, number, quote, subString) {\r\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\r\n\t});\r\n\treturn result;\r\n};\r\n/* end adaptation */\r\n\r\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\r\n\tvar intrinsicName = name;\r\n\tvar alias;\r\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\r\n\t\talias = LEGACY_ALIASES[intrinsicName];\r\n\t\tintrinsicName = '%' + alias[0] + '%';\r\n\t}\r\n\r\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\r\n\t\tvar value = INTRINSICS[intrinsicName];\r\n\t\tif (value === needsEval) {\r\n\t\t\tvalue = doEval(intrinsicName);\r\n\t\t}\r\n\t\tif (typeof value === 'undefined' && !allowMissing) {\r\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\talias: alias,\r\n\t\t\tname: intrinsicName,\r\n\t\t\tvalue: value\r\n\t\t};\r\n\t}\r\n\r\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\r\n};\r\n\r\nmodule.exports = function GetIntrinsic(name, allowMissing) {\r\n\tif (typeof name !== 'string' || name.length === 0) {\r\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\r\n\t}\r\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\r\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\r\n\t}\r\n\r\n\tvar parts = stringToPath(name);\r\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\r\n\r\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\r\n\tvar intrinsicRealName = intrinsic.name;\r\n\tvar value = intrinsic.value;\r\n\tvar skipFurtherCaching = false;\r\n\r\n\tvar alias = intrinsic.alias;\r\n\tif (alias) {\r\n\t\tintrinsicBaseName = alias[0];\r\n\t\t$spliceApply(parts, $concat([0, 1], alias));\r\n\t}\r\n\r\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\r\n\t\tvar part = parts[i];\r\n\t\tvar first = $strSlice(part, 0, 1);\r\n\t\tvar last = $strSlice(part, -1);\r\n\t\tif (\r\n\t\t\t(\r\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\r\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\r\n\t\t\t)\r\n\t\t\t&& first !== last\r\n\t\t) {\r\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\r\n\t\t}\r\n\t\tif (part === 'constructor' || !isOwn) {\r\n\t\t\tskipFurtherCaching = true;\r\n\t\t}\r\n\r\n\t\tintrinsicBaseName += '.' + part;\r\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\r\n\r\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\r\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\r\n\t\t} else if (value != null) {\r\n\t\t\tif (!(part in value)) {\r\n\t\t\t\tif (!allowMissing) {\r\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\r\n\t\t\t\t}\r\n\t\t\t\treturn void undefined;\r\n\t\t\t}\r\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\r\n\t\t\t\tvar desc = $gOPD(value, part);\r\n\t\t\t\tisOwn = !!desc;\r\n\r\n\t\t\t\t// By convention, when a data property is converted to an accessor\r\n\t\t\t\t// property to emulate a data property that does not suffer from\r\n\t\t\t\t// the override mistake, that accessor's getter is marked with\r\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\r\n\t\t\t\t// uphold the illusion by pretending to see that original data\r\n\t\t\t\t// property, i.e., returning the value rather than the getter\r\n\t\t\t\t// itself.\r\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\r\n\t\t\t\t\tvalue = desc.get;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = value[part];\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tisOwn = hasOwn(value, part);\r\n\t\t\t\tvalue = value[part];\r\n\t\t\t}\r\n\r\n\t\t\tif (isOwn && !skipFurtherCaching) {\r\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn value;\r\n};\r\n\r\n},{\"function-bind\":10,\"has\":14,\"has-symbols\":12}],12:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\r\nvar hasSymbolSham = require('./shams');\r\n\r\nmodule.exports = function hasNativeSymbols() {\r\n\tif (typeof origSymbol !== 'function') { return false; }\r\n\tif (typeof Symbol !== 'function') { return false; }\r\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\r\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\r\n\r\n\treturn hasSymbolSham();\r\n};\r\n\r\n},{\"./shams\":13}],13:[function(require,module,exports){\r\n'use strict';\r\n\r\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\r\nmodule.exports = function hasSymbols() {\r\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\r\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\r\n\r\n\tvar obj = {};\r\n\tvar sym = Symbol('test');\r\n\tvar symObj = Object(sym);\r\n\tif (typeof sym === 'string') { return false; }\r\n\r\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\r\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\r\n\r\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\r\n\t// if (sym instanceof Symbol) { return false; }\r\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\r\n\t// if (!(symObj instanceof Symbol)) { return false; }\r\n\r\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\r\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\r\n\r\n\tvar symVal = 42;\r\n\tobj[sym] = symVal;\r\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\r\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\r\n\r\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\r\n\r\n\tvar syms = Object.getOwnPropertySymbols(obj);\r\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\r\n\r\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\r\n\r\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\r\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\r\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n},{}],14:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar bind = require('function-bind');\r\n\r\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\r\n\r\n},{\"function-bind\":10}],15:[function(require,module,exports){\r\nvar hasMap = typeof Map === 'function' && Map.prototype;\r\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\r\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\r\nvar mapForEach = hasMap && Map.prototype.forEach;\r\nvar hasSet = typeof Set === 'function' && Set.prototype;\r\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\r\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\r\nvar setForEach = hasSet && Set.prototype.forEach;\r\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\r\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\r\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\r\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\r\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\r\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\r\nvar booleanValueOf = Boolean.prototype.valueOf;\r\nvar objectToString = Object.prototype.toString;\r\nvar functionToString = Function.prototype.toString;\r\nvar $match = String.prototype.match;\r\nvar $slice = String.prototype.slice;\r\nvar $replace = String.prototype.replace;\r\nvar $toUpperCase = String.prototype.toUpperCase;\r\nvar $toLowerCase = String.prototype.toLowerCase;\r\nvar $test = RegExp.prototype.test;\r\nvar $concat = Array.prototype.concat;\r\nvar $join = Array.prototype.join;\r\nvar $arrSlice = Array.prototype.slice;\r\nvar $floor = Math.floor;\r\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\r\nvar gOPS = Object.getOwnPropertySymbols;\r\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\r\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\r\n// ie, `has-tostringtag/shams\r\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\r\n    ? Symbol.toStringTag\r\n    : null;\r\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\r\n\r\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\r\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\r\n        ? function (O) {\r\n            return O.__proto__; // eslint-disable-line no-proto\r\n        }\r\n        : null\r\n);\r\n\r\nfunction addNumericSeparator(num, str) {\r\n    if (\r\n        num === Infinity\r\n        || num === -Infinity\r\n        || num !== num\r\n        || (num && num > -1000 && num < 1000)\r\n        || $test.call(/e/, str)\r\n    ) {\r\n        return str;\r\n    }\r\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\r\n    if (typeof num === 'number') {\r\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\r\n        if (int !== num) {\r\n            var intStr = String(int);\r\n            var dec = $slice.call(str, intStr.length + 1);\r\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\r\n        }\r\n    }\r\n    return $replace.call(str, sepRegex, '$&_');\r\n}\r\n\r\nvar utilInspect = require('./util.inspect');\r\nvar inspectCustom = utilInspect.custom;\r\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\r\n\r\nmodule.exports = function inspect_(obj, options, depth, seen) {\r\n    var opts = options || {};\r\n\r\n    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {\r\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\r\n    }\r\n    if (\r\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\r\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\r\n            : opts.maxStringLength !== null\r\n        )\r\n    ) {\r\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\r\n    }\r\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\r\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\r\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\r\n    }\r\n\r\n    if (\r\n        has(opts, 'indent')\r\n        && opts.indent !== null\r\n        && opts.indent !== '\\t'\r\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\r\n    ) {\r\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\r\n    }\r\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\r\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\r\n    }\r\n    var numericSeparator = opts.numericSeparator;\r\n\r\n    if (typeof obj === 'undefined') {\r\n        return 'undefined';\r\n    }\r\n    if (obj === null) {\r\n        return 'null';\r\n    }\r\n    if (typeof obj === 'boolean') {\r\n        return obj ? 'true' : 'false';\r\n    }\r\n\r\n    if (typeof obj === 'string') {\r\n        return inspectString(obj, opts);\r\n    }\r\n    if (typeof obj === 'number') {\r\n        if (obj === 0) {\r\n            return Infinity / obj > 0 ? '0' : '-0';\r\n        }\r\n        var str = String(obj);\r\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\r\n    }\r\n    if (typeof obj === 'bigint') {\r\n        var bigIntStr = String(obj) + 'n';\r\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\r\n    }\r\n\r\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\r\n    if (typeof depth === 'undefined') { depth = 0; }\r\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\r\n        return isArray(obj) ? '[Array]' : '[Object]';\r\n    }\r\n\r\n    var indent = getIndent(opts, depth);\r\n\r\n    if (typeof seen === 'undefined') {\r\n        seen = [];\r\n    } else if (indexOf(seen, obj) >= 0) {\r\n        return '[Circular]';\r\n    }\r\n\r\n    function inspect(value, from, noIndent) {\r\n        if (from) {\r\n            seen = $arrSlice.call(seen);\r\n            seen.push(from);\r\n        }\r\n        if (noIndent) {\r\n            var newOpts = {\r\n                depth: opts.depth\r\n            };\r\n            if (has(opts, 'quoteStyle')) {\r\n                newOpts.quoteStyle = opts.quoteStyle;\r\n            }\r\n            return inspect_(value, newOpts, depth + 1, seen);\r\n        }\r\n        return inspect_(value, opts, depth + 1, seen);\r\n    }\r\n\r\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\r\n        var name = nameOf(obj);\r\n        var keys = arrObjKeys(obj, inspect);\r\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\r\n    }\r\n    if (isSymbol(obj)) {\r\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\r\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\r\n    }\r\n    if (isElement(obj)) {\r\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\r\n        var attrs = obj.attributes || [];\r\n        for (var i = 0; i < attrs.length; i++) {\r\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\r\n        }\r\n        s += '>';\r\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\r\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\r\n        return s;\r\n    }\r\n    if (isArray(obj)) {\r\n        if (obj.length === 0) { return '[]'; }\r\n        var xs = arrObjKeys(obj, inspect);\r\n        if (indent && !singleLineValues(xs)) {\r\n            return '[' + indentedJoin(xs, indent) + ']';\r\n        }\r\n        return '[ ' + $join.call(xs, ', ') + ' ]';\r\n    }\r\n    if (isError(obj)) {\r\n        var parts = arrObjKeys(obj, inspect);\r\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\r\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\r\n        }\r\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\r\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\r\n    }\r\n    if (typeof obj === 'object' && customInspect) {\r\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\r\n            return utilInspect(obj, { depth: maxDepth - depth });\r\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\r\n            return obj.inspect();\r\n        }\r\n    }\r\n    if (isMap(obj)) {\r\n        var mapParts = [];\r\n        mapForEach.call(obj, function (value, key) {\r\n            mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\r\n        });\r\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\r\n    }\r\n    if (isSet(obj)) {\r\n        var setParts = [];\r\n        setForEach.call(obj, function (value) {\r\n            setParts.push(inspect(value, obj));\r\n        });\r\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\r\n    }\r\n    if (isWeakMap(obj)) {\r\n        return weakCollectionOf('WeakMap');\r\n    }\r\n    if (isWeakSet(obj)) {\r\n        return weakCollectionOf('WeakSet');\r\n    }\r\n    if (isWeakRef(obj)) {\r\n        return weakCollectionOf('WeakRef');\r\n    }\r\n    if (isNumber(obj)) {\r\n        return markBoxed(inspect(Number(obj)));\r\n    }\r\n    if (isBigInt(obj)) {\r\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\r\n    }\r\n    if (isBoolean(obj)) {\r\n        return markBoxed(booleanValueOf.call(obj));\r\n    }\r\n    if (isString(obj)) {\r\n        return markBoxed(inspect(String(obj)));\r\n    }\r\n    if (!isDate(obj) && !isRegExp(obj)) {\r\n        var ys = arrObjKeys(obj, inspect);\r\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\r\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\r\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\r\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\r\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\r\n        if (ys.length === 0) { return tag + '{}'; }\r\n        if (indent) {\r\n            return tag + '{' + indentedJoin(ys, indent) + '}';\r\n        }\r\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\r\n    }\r\n    return String(obj);\r\n};\r\n\r\nfunction wrapQuotes(s, defaultStyle, opts) {\r\n    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '\"' : \"'\";\r\n    return quoteChar + s + quoteChar;\r\n}\r\n\r\nfunction quote(s) {\r\n    return $replace.call(String(s), /\"/g, '&quot;');\r\n}\r\n\r\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\r\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\r\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\r\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\r\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\r\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\r\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\r\n\r\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\r\nfunction isSymbol(obj) {\r\n    if (hasShammedSymbols) {\r\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\r\n    }\r\n    if (typeof obj === 'symbol') {\r\n        return true;\r\n    }\r\n    if (!obj || typeof obj !== 'object' || !symToString) {\r\n        return false;\r\n    }\r\n    try {\r\n        symToString.call(obj);\r\n        return true;\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nfunction isBigInt(obj) {\r\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\r\n        return false;\r\n    }\r\n    try {\r\n        bigIntValueOf.call(obj);\r\n        return true;\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\r\nfunction has(obj, key) {\r\n    return hasOwn.call(obj, key);\r\n}\r\n\r\nfunction toStr(obj) {\r\n    return objectToString.call(obj);\r\n}\r\n\r\nfunction nameOf(f) {\r\n    if (f.name) { return f.name; }\r\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\r\n    if (m) { return m[1]; }\r\n    return null;\r\n}\r\n\r\nfunction indexOf(xs, x) {\r\n    if (xs.indexOf) { return xs.indexOf(x); }\r\n    for (var i = 0, l = xs.length; i < l; i++) {\r\n        if (xs[i] === x) { return i; }\r\n    }\r\n    return -1;\r\n}\r\n\r\nfunction isMap(x) {\r\n    if (!mapSize || !x || typeof x !== 'object') {\r\n        return false;\r\n    }\r\n    try {\r\n        mapSize.call(x);\r\n        try {\r\n            setSize.call(x);\r\n        } catch (s) {\r\n            return true;\r\n        }\r\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nfunction isWeakMap(x) {\r\n    if (!weakMapHas || !x || typeof x !== 'object') {\r\n        return false;\r\n    }\r\n    try {\r\n        weakMapHas.call(x, weakMapHas);\r\n        try {\r\n            weakSetHas.call(x, weakSetHas);\r\n        } catch (s) {\r\n            return true;\r\n        }\r\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nfunction isWeakRef(x) {\r\n    if (!weakRefDeref || !x || typeof x !== 'object') {\r\n        return false;\r\n    }\r\n    try {\r\n        weakRefDeref.call(x);\r\n        return true;\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nfunction isSet(x) {\r\n    if (!setSize || !x || typeof x !== 'object') {\r\n        return false;\r\n    }\r\n    try {\r\n        setSize.call(x);\r\n        try {\r\n            mapSize.call(x);\r\n        } catch (m) {\r\n            return true;\r\n        }\r\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nfunction isWeakSet(x) {\r\n    if (!weakSetHas || !x || typeof x !== 'object') {\r\n        return false;\r\n    }\r\n    try {\r\n        weakSetHas.call(x, weakSetHas);\r\n        try {\r\n            weakMapHas.call(x, weakMapHas);\r\n        } catch (s) {\r\n            return true;\r\n        }\r\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\r\n    } catch (e) {}\r\n    return false;\r\n}\r\n\r\nfunction isElement(x) {\r\n    if (!x || typeof x !== 'object') { return false; }\r\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\r\n        return true;\r\n    }\r\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\r\n}\r\n\r\nfunction inspectString(str, opts) {\r\n    if (str.length > opts.maxStringLength) {\r\n        var remaining = str.length - opts.maxStringLength;\r\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\r\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\r\n    }\r\n    // eslint-disable-next-line no-control-regex\r\n    var s = $replace.call($replace.call(str, /(['\\\\])/g, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\r\n    return wrapQuotes(s, 'single', opts);\r\n}\r\n\r\nfunction lowbyte(c) {\r\n    var n = c.charCodeAt(0);\r\n    var x = {\r\n        8: 'b',\r\n        9: 't',\r\n        10: 'n',\r\n        12: 'f',\r\n        13: 'r'\r\n    }[n];\r\n    if (x) { return '\\\\' + x; }\r\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\r\n}\r\n\r\nfunction markBoxed(str) {\r\n    return 'Object(' + str + ')';\r\n}\r\n\r\nfunction weakCollectionOf(type) {\r\n    return type + ' { ? }';\r\n}\r\n\r\nfunction collectionOf(type, size, entries, indent) {\r\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\r\n    return type + ' (' + size + ') {' + joinedEntries + '}';\r\n}\r\n\r\nfunction singleLineValues(xs) {\r\n    for (var i = 0; i < xs.length; i++) {\r\n        if (indexOf(xs[i], '\\n') >= 0) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction getIndent(opts, depth) {\r\n    var baseIndent;\r\n    if (opts.indent === '\\t') {\r\n        baseIndent = '\\t';\r\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\r\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\r\n    } else {\r\n        return null;\r\n    }\r\n    return {\r\n        base: baseIndent,\r\n        prev: $join.call(Array(depth + 1), baseIndent)\r\n    };\r\n}\r\n\r\nfunction indentedJoin(xs, indent) {\r\n    if (xs.length === 0) { return ''; }\r\n    var lineJoiner = '\\n' + indent.prev + indent.base;\r\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\r\n}\r\n\r\nfunction arrObjKeys(obj, inspect) {\r\n    var isArr = isArray(obj);\r\n    var xs = [];\r\n    if (isArr) {\r\n        xs.length = obj.length;\r\n        for (var i = 0; i < obj.length; i++) {\r\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\r\n        }\r\n    }\r\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\r\n    var symMap;\r\n    if (hasShammedSymbols) {\r\n        symMap = {};\r\n        for (var k = 0; k < syms.length; k++) {\r\n            symMap['$' + syms[k]] = syms[k];\r\n        }\r\n    }\r\n\r\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\r\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\r\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\r\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\r\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\r\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\r\n        } else if ($test.call(/[^\\w$]/, key)) {\r\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\r\n        } else {\r\n            xs.push(key + ': ' + inspect(obj[key], obj));\r\n        }\r\n    }\r\n    if (typeof gOPS === 'function') {\r\n        for (var j = 0; j < syms.length; j++) {\r\n            if (isEnumerable.call(obj, syms[j])) {\r\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\r\n            }\r\n        }\r\n    }\r\n    return xs;\r\n}\r\n\r\n},{\"./util.inspect\":6}],16:[function(require,module,exports){\r\n'use strict';\r\n\r\nvar GetIntrinsic = require('get-intrinsic');\r\nvar callBound = require('call-bind/callBound');\r\nvar inspect = require('object-inspect');\r\n\r\nvar $TypeError = GetIntrinsic('%TypeError%');\r\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\r\nvar $Map = GetIntrinsic('%Map%', true);\r\n\r\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\r\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\r\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\r\nvar $mapGet = callBound('Map.prototype.get', true);\r\nvar $mapSet = callBound('Map.prototype.set', true);\r\nvar $mapHas = callBound('Map.prototype.has', true);\r\n\r\n/*\r\n * This function traverses the list returning the node corresponding to the\r\n * given key.\r\n *\r\n * That node is also moved to the head of the list, so that if it's accessed\r\n * again we don't need to traverse the whole list. By doing so, all the recently\r\n * used nodes can be accessed relatively quickly.\r\n */\r\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\r\n\tfor (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {\r\n\t\tif (curr.key === key) {\r\n\t\t\tprev.next = curr.next;\r\n\t\t\tcurr.next = list.next;\r\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\r\n\t\t\treturn curr;\r\n\t\t}\r\n\t}\r\n};\r\n\r\nvar listGet = function (objects, key) {\r\n\tvar node = listGetNode(objects, key);\r\n\treturn node && node.value;\r\n};\r\nvar listSet = function (objects, key, value) {\r\n\tvar node = listGetNode(objects, key);\r\n\tif (node) {\r\n\t\tnode.value = value;\r\n\t} else {\r\n\t\t// Prepend the new node to the beginning of the list\r\n\t\tobjects.next = { // eslint-disable-line no-param-reassign\r\n\t\t\tkey: key,\r\n\t\t\tnext: objects.next,\r\n\t\t\tvalue: value\r\n\t\t};\r\n\t}\r\n};\r\nvar listHas = function (objects, key) {\r\n\treturn !!listGetNode(objects, key);\r\n};\r\n\r\nmodule.exports = function getSideChannel() {\r\n\tvar $wm;\r\n\tvar $m;\r\n\tvar $o;\r\n\tvar channel = {\r\n\t\tassert: function (key) {\r\n\t\t\tif (!channel.has(key)) {\r\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\r\n\t\t\t}\r\n\t\t},\r\n\t\tget: function (key) { // eslint-disable-line consistent-return\r\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\r\n\t\t\t\tif ($wm) {\r\n\t\t\t\t\treturn $weakMapGet($wm, key);\r\n\t\t\t\t}\r\n\t\t\t} else if ($Map) {\r\n\t\t\t\tif ($m) {\r\n\t\t\t\t\treturn $mapGet($m, key);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\r\n\t\t\t\t\treturn listGet($o, key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\thas: function (key) {\r\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\r\n\t\t\t\tif ($wm) {\r\n\t\t\t\t\treturn $weakMapHas($wm, key);\r\n\t\t\t\t}\r\n\t\t\t} else if ($Map) {\r\n\t\t\t\tif ($m) {\r\n\t\t\t\t\treturn $mapHas($m, key);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\r\n\t\t\t\t\treturn listHas($o, key);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tset: function (key, value) {\r\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\r\n\t\t\t\tif (!$wm) {\r\n\t\t\t\t\t$wm = new $WeakMap();\r\n\t\t\t\t}\r\n\t\t\t\t$weakMapSet($wm, key, value);\r\n\t\t\t} else if ($Map) {\r\n\t\t\t\tif (!$m) {\r\n\t\t\t\t\t$m = new $Map();\r\n\t\t\t\t}\r\n\t\t\t\t$mapSet($m, key, value);\r\n\t\t\t} else {\r\n\t\t\t\tif (!$o) {\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t * Initialize the linked list as an empty node, so that we don't have\r\n\t\t\t\t\t * to special-case handling of the first node: we can always refer to\r\n\t\t\t\t\t * it as (previous node).next, instead of something like (list).head\r\n\t\t\t\t\t */\r\n\t\t\t\t\t$o = { key: {}, next: null };\r\n\t\t\t\t}\r\n\t\t\t\tlistSet($o, key, value);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn channel;\r\n};\r\n\r\n},{\"call-bind/callBound\":7,\"get-intrinsic\":11,\"object-inspect\":15}]},{},[2])(2)\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/qs/dist/qs.js b/node_modules/qs/dist/qs.js
--- a/node_modules/qs/dist/qs.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/qs/dist/qs.js	(date 1753913035174)
@@ -1,2054 +1,90 @@
 (function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.Qs = f()}})(function(){var define,module,exports;return (function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
-'use strict';
-
-var replace = String.prototype.replace;
-var percentTwenties = /%20/g;
-
-var Format = {
-    RFC1738: 'RFC1738',
-    RFC3986: 'RFC3986'
-};
-
-module.exports = {
-    'default': Format.RFC3986,
-    formatters: {
-        RFC1738: function (value) {
-            return replace.call(value, percentTwenties, '+');
-        },
-        RFC3986: function (value) {
-            return String(value);
-        }
-    },
-    RFC1738: Format.RFC1738,
-    RFC3986: Format.RFC3986
-};
+"use strict";var replace=String.prototype.replace,percentTwenties=/%20/g,Format={RFC1738:"RFC1738",RFC3986:"RFC3986"};module.exports={default:Format.RFC3986,formatters:{RFC1738:function(e){return replace.call(e,percentTwenties,"+")},RFC3986:function(e){return String(e)}},RFC1738:Format.RFC1738,RFC3986:Format.RFC3986};
 
 },{}],2:[function(require,module,exports){
-'use strict';
-
-var stringify = require('./stringify');
-var parse = require('./parse');
-var formats = require('./formats');
-
-module.exports = {
-    formats: formats,
-    parse: parse,
-    stringify: stringify
-};
-
-},{"./formats":1,"./parse":3,"./stringify":4}],3:[function(require,module,exports){
-'use strict';
-
-var utils = require('./utils');
-
-var has = Object.prototype.hasOwnProperty;
-var isArray = Array.isArray;
-
-var defaults = {
-    allowDots: false,
-    allowPrototypes: false,
-    allowSparse: false,
-    arrayLimit: 20,
-    charset: 'utf-8',
-    charsetSentinel: false,
-    comma: false,
-    decoder: utils.decode,
-    delimiter: '&',
-    depth: 5,
-    ignoreQueryPrefix: false,
-    interpretNumericEntities: false,
-    parameterLimit: 1000,
-    parseArrays: true,
-    plainObjects: false,
-    strictNullHandling: false
-};
-
-var interpretNumericEntities = function (str) {
-    return str.replace(/&#(\d+);/g, function ($0, numberStr) {
-        return String.fromCharCode(parseInt(numberStr, 10));
-    });
-};
-
-var parseArrayValue = function (val, options) {
-    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {
-        return val.split(',');
-    }
-
-    return val;
-};
-
-// This is what browsers will submit when the ✓ character occurs in an
-// application/x-www-form-urlencoded body and the encoding of the page containing
-// the form is iso-8859-1, or when the submitted form has an accept-charset
-// attribute of iso-8859-1. Presumably also with other charsets that do not contain
-// the ✓ character, such as us-ascii.
-var isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')
-
-// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.
-var charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')
-
-var parseValues = function parseQueryStringValues(str, options) {
-    var obj = {};
-    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\?/, '') : str;
-    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;
-    var parts = cleanStr.split(options.delimiter, limit);
-    var skipIndex = -1; // Keep track of where the utf8 sentinel was found
-    var i;
-
-    var charset = options.charset;
-    if (options.charsetSentinel) {
-        for (i = 0; i < parts.length; ++i) {
-            if (parts[i].indexOf('utf8=') === 0) {
-                if (parts[i] === charsetSentinel) {
-                    charset = 'utf-8';
-                } else if (parts[i] === isoSentinel) {
-                    charset = 'iso-8859-1';
-                }
-                skipIndex = i;
-                i = parts.length; // The eslint settings do not allow break;
-            }
-        }
-    }
-
-    for (i = 0; i < parts.length; ++i) {
-        if (i === skipIndex) {
-            continue;
-        }
-        var part = parts[i];
-
-        var bracketEqualsPos = part.indexOf(']=');
-        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;
-
-        var key, val;
-        if (pos === -1) {
-            key = options.decoder(part, defaults.decoder, charset, 'key');
-            val = options.strictNullHandling ? null : '';
-        } else {
-            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');
-            val = utils.maybeMap(
-                parseArrayValue(part.slice(pos + 1), options),
-                function (encodedVal) {
-                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');
-                }
-            );
-        }
-
-        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {
-            val = interpretNumericEntities(val);
-        }
-
-        if (part.indexOf('[]=') > -1) {
-            val = isArray(val) ? [val] : val;
-        }
-
-        if (has.call(obj, key)) {
-            obj[key] = utils.combine(obj[key], val);
-        } else {
-            obj[key] = val;
-        }
-    }
-
-    return obj;
-};
-
-var parseObject = function (chain, val, options, valuesParsed) {
-    var leaf = valuesParsed ? val : parseArrayValue(val, options);
-
-    for (var i = chain.length - 1; i >= 0; --i) {
-        var obj;
-        var root = chain[i];
-
-        if (root === '[]' && options.parseArrays) {
-            obj = [].concat(leaf);
-        } else {
-            obj = options.plainObjects ? Object.create(null) : {};
-            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;
-            var index = parseInt(cleanRoot, 10);
-            if (!options.parseArrays && cleanRoot === '') {
-                obj = { 0: leaf };
-            } else if (
-                !isNaN(index)
-                && root !== cleanRoot
-                && String(index) === cleanRoot
-                && index >= 0
-                && (options.parseArrays && index <= options.arrayLimit)
-            ) {
-                obj = [];
-                obj[index] = leaf;
-            } else if (cleanRoot !== '__proto__') {
-                obj[cleanRoot] = leaf;
-            }
-        }
-
-        leaf = obj;
-    }
-
-    return leaf;
-};
-
-var parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {
-    if (!givenKey) {
-        return;
-    }
-
-    // Transform dot notation to bracket notation
-    var key = options.allowDots ? givenKey.replace(/\.([^.[]+)/g, '[$1]') : givenKey;
-
-    // The regex chunks
-
-    var brackets = /(\[[^[\]]*])/;
-    var child = /(\[[^[\]]*])/g;
-
-    // Get the parent
-
-    var segment = options.depth > 0 && brackets.exec(key);
-    var parent = segment ? key.slice(0, segment.index) : key;
-
-    // Stash the parent if it exists
-
-    var keys = [];
-    if (parent) {
-        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties
-        if (!options.plainObjects && has.call(Object.prototype, parent)) {
-            if (!options.allowPrototypes) {
-                return;
-            }
-        }
-
-        keys.push(parent);
-    }
+"use strict";var stringify=require(4),parse=require(3),formats=require(1);module.exports={formats:formats,parse:parse,stringify:stringify};
 
-    // Loop through children appending to the array until we hit depth
+},{"1":1,"3":3,"4":4}],3:[function(require,module,exports){
+"use strict";var utils=require(5),has=Object.prototype.hasOwnProperty,isArray=Array.isArray,defaults={allowDots:!1,allowEmptyArrays:!1,allowPrototypes:!1,allowSparse:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decodeDotInKeys:!1,decoder:utils.decode,delimiter:"&",depth:5,duplicates:"combine",ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictDepth:!1,strictNullHandling:!1},interpretNumericEntities=function(e){return e.replace(/&#(\d+);/g,(function(e,t){return String.fromCharCode(parseInt(t,10))}))},parseArrayValue=function(e,t){return e&&"string"==typeof e&&t.comma&&e.indexOf(",")>-1?e.split(","):e},isoSentinel="utf8=%26%2310003%3B",charsetSentinel="utf8=%E2%9C%93",parseValues=function parseQueryStringValues(e,t){var r={__proto__:null},a=t.ignoreQueryPrefix?e.replace(/^\?/,""):e;a=a.replace(/%5B/gi,"[").replace(/%5D/gi,"]");var i,o=t.parameterLimit===1/0?void 0:t.parameterLimit,l=a.split(t.delimiter,o),s=-1,n=t.charset;if(t.charsetSentinel)for(i=0;i<l.length;++i)0===l[i].indexOf("utf8=")&&(l[i]===charsetSentinel?n="utf-8":l[i]===isoSentinel&&(n="iso-8859-1"),s=i,i=l.length);for(i=0;i<l.length;++i)if(i!==s){var p,c,d=l[i],u=d.indexOf("]="),f=-1===u?d.indexOf("="):u+1;-1===f?(p=t.decoder(d,defaults.decoder,n,"key"),c=t.strictNullHandling?null:""):(p=t.decoder(d.slice(0,f),defaults.decoder,n,"key"),c=utils.maybeMap(parseArrayValue(d.slice(f+1),t),(function(e){return t.decoder(e,defaults.decoder,n,"value")}))),c&&t.interpretNumericEntities&&"iso-8859-1"===n&&(c=interpretNumericEntities(c)),d.indexOf("[]=")>-1&&(c=isArray(c)?[c]:c);var y=has.call(r,p);y&&"combine"===t.duplicates?r[p]=utils.combine(r[p],c):y&&"last"!==t.duplicates||(r[p]=c)}return r},parseObject=function(e,t,r,a){for(var i=a?t:parseArrayValue(t,r),o=e.length-1;o>=0;--o){var l,s=e[o];if("[]"===s&&r.parseArrays)l=r.allowEmptyArrays&&(""===i||r.strictNullHandling&&null===i)?[]:[].concat(i);else{l=r.plainObjects?Object.create(null):{};var n="["===s.charAt(0)&&"]"===s.charAt(s.length-1)?s.slice(1,-1):s,p=r.decodeDotInKeys?n.replace(/%2E/g,"."):n,c=parseInt(p,10);r.parseArrays||""!==p?!isNaN(c)&&s!==p&&String(c)===p&&c>=0&&r.parseArrays&&c<=r.arrayLimit?(l=[])[c]=i:"__proto__"!==p&&(l[p]=i):l={0:i}}i=l}return i},parseKeys=function parseQueryStringKeys(e,t,r,a){if(e){var i=r.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,o=/(\[[^[\]]*])/g,l=r.depth>0&&/(\[[^[\]]*])/.exec(i),s=l?i.slice(0,l.index):i,n=[];if(s){if(!r.plainObjects&&has.call(Object.prototype,s)&&!r.allowPrototypes)return;n.push(s)}for(var p=0;r.depth>0&&null!==(l=o.exec(i))&&p<r.depth;){if(p+=1,!r.plainObjects&&has.call(Object.prototype,l[1].slice(1,-1))&&!r.allowPrototypes)return;n.push(l[1])}if(l){if(!0===r.strictDepth)throw new RangeError("Input depth exceeded depth option of "+r.depth+" and strictDepth is true");n.push("["+i.slice(l.index)+"]")}return parseObject(n,t,r,a)}},normalizeParseOptions=function normalizeParseOptions(e){if(!e)return defaults;if(void 0!==e.allowEmptyArrays&&"boolean"!=typeof e.allowEmptyArrays)throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");if(void 0!==e.decodeDotInKeys&&"boolean"!=typeof e.decodeDotInKeys)throw new TypeError("`decodeDotInKeys` option can only be `true` or `false`, when provided");if(null!==e.decoder&&void 0!==e.decoder&&"function"!=typeof e.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var t=void 0===e.charset?defaults.charset:e.charset,r=void 0===e.duplicates?defaults.duplicates:e.duplicates;if("combine"!==r&&"first"!==r&&"last"!==r)throw new TypeError("The duplicates option must be either combine, first, or last");return{allowDots:void 0===e.allowDots?!0===e.decodeDotInKeys||defaults.allowDots:!!e.allowDots,allowEmptyArrays:"boolean"==typeof e.allowEmptyArrays?!!e.allowEmptyArrays:defaults.allowEmptyArrays,allowPrototypes:"boolean"==typeof e.allowPrototypes?e.allowPrototypes:defaults.allowPrototypes,allowSparse:"boolean"==typeof e.allowSparse?e.allowSparse:defaults.allowSparse,arrayLimit:"number"==typeof e.arrayLimit?e.arrayLimit:defaults.arrayLimit,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:defaults.charsetSentinel,comma:"boolean"==typeof e.comma?e.comma:defaults.comma,decodeDotInKeys:"boolean"==typeof e.decodeDotInKeys?e.decodeDotInKeys:defaults.decodeDotInKeys,decoder:"function"==typeof e.decoder?e.decoder:defaults.decoder,delimiter:"string"==typeof e.delimiter||utils.isRegExp(e.delimiter)?e.delimiter:defaults.delimiter,depth:"number"==typeof e.depth||!1===e.depth?+e.depth:defaults.depth,duplicates:r,ignoreQueryPrefix:!0===e.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof e.interpretNumericEntities?e.interpretNumericEntities:defaults.interpretNumericEntities,parameterLimit:"number"==typeof e.parameterLimit?e.parameterLimit:defaults.parameterLimit,parseArrays:!1!==e.parseArrays,plainObjects:"boolean"==typeof e.plainObjects?e.plainObjects:defaults.plainObjects,strictDepth:"boolean"==typeof e.strictDepth?!!e.strictDepth:defaults.strictDepth,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:defaults.strictNullHandling}};module.exports=function(e,t){var r=normalizeParseOptions(t);if(""===e||null==e)return r.plainObjects?Object.create(null):{};for(var a="string"==typeof e?parseValues(e,r):e,i=r.plainObjects?Object.create(null):{},o=Object.keys(a),l=0;l<o.length;++l){var s=o[l],n=parseKeys(s,a[s],r,"string"==typeof e);i=utils.merge(i,n,r)}return!0===r.allowSparse?i:utils.compact(i)};
 
-    var i = 0;
-    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {
-        i += 1;
-        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {
-            if (!options.allowPrototypes) {
-                return;
-            }
-        }
-        keys.push(segment[1]);
-    }
+},{"5":5}],4:[function(require,module,exports){
+"use strict";var getSideChannel=require(29),utils=require(5),formats=require(1),has=Object.prototype.hasOwnProperty,arrayPrefixGenerators={brackets:function brackets(e){return e+"[]"},comma:"comma",indices:function indices(e,r){return e+"["+r+"]"},repeat:function repeat(e){return e}},isArray=Array.isArray,push=Array.prototype.push,pushToArray=function(e,r){push.apply(e,isArray(r)?r:[r])},toISO=Date.prototype.toISOString,defaultFormat=formats.default,defaults={addQueryPrefix:!1,allowDots:!1,allowEmptyArrays:!1,arrayFormat:"indices",charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encodeDotInKeys:!1,encoder:utils.encode,encodeValuesOnly:!1,format:defaultFormat,formatter:formats.formatters[defaultFormat],indices:!1,serializeDate:function serializeDate(e){return toISO.call(e)},skipNulls:!1,strictNullHandling:!1},isNonNullishPrimitive=function isNonNullishPrimitive(e){return"string"==typeof e||"number"==typeof e||"boolean"==typeof e||"symbol"==typeof e||"bigint"==typeof e},sentinel={},stringify=function stringify(e,r,t,o,a,n,i,l,s,f,u,d,y,c,p,m,h,v){for(var w=e,b=v,g=0,A=!1;void 0!==(b=b.get(sentinel))&&!A;){var D=b.get(e);if(g+=1,void 0!==D){if(D===g)throw new RangeError("Cyclic object value");A=!0}void 0===b.get(sentinel)&&(g=0)}if("function"==typeof f?w=f(r,w):w instanceof Date?w=y(w):"comma"===t&&isArray(w)&&(w=utils.maybeMap(w,(function(e){return e instanceof Date?y(e):e}))),null===w){if(n)return s&&!m?s(r,defaults.encoder,h,"key",c):r;w=""}if(isNonNullishPrimitive(w)||utils.isBuffer(w))return s?[p(m?r:s(r,defaults.encoder,h,"key",c))+"="+p(s(w,defaults.encoder,h,"value",c))]:[p(r)+"="+p(String(w))];var E,N=[];if(void 0===w)return N;if("comma"===t&&isArray(w))m&&s&&(w=utils.maybeMap(w,s)),E=[{value:w.length>0?w.join(",")||null:void 0}];else if(isArray(f))E=f;else{var S=Object.keys(w);E=u?S.sort(u):S}var O=l?r.replace(/\./g,"%2E"):r,T=o&&isArray(w)&&1===w.length?O+"[]":O;if(a&&isArray(w)&&0===w.length)return T+"[]";for(var k=0;k<E.length;++k){var I=E[k],P="object"==typeof I&&void 0!==I.value?I.value:w[I];if(!i||null!==P){var x=d&&l?I.replace(/\./g,"%2E"):I,z=isArray(w)?"function"==typeof t?t(T,x):T:T+(d?"."+x:"["+x+"]");v.set(e,g);var K=getSideChannel();K.set(sentinel,v),pushToArray(N,stringify(P,z,t,o,a,n,i,l,"comma"===t&&m&&isArray(w)?null:s,f,u,d,y,c,p,m,h,K))}}return N},normalizeStringifyOptions=function normalizeStringifyOptions(e){if(!e)return defaults;if(void 0!==e.allowEmptyArrays&&"boolean"!=typeof e.allowEmptyArrays)throw new TypeError("`allowEmptyArrays` option can only be `true` or `false`, when provided");if(void 0!==e.encodeDotInKeys&&"boolean"!=typeof e.encodeDotInKeys)throw new TypeError("`encodeDotInKeys` option can only be `true` or `false`, when provided");if(null!==e.encoder&&void 0!==e.encoder&&"function"!=typeof e.encoder)throw new TypeError("Encoder has to be a function.");var r=e.charset||defaults.charset;if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var t=formats.default;if(void 0!==e.format){if(!has.call(formats.formatters,e.format))throw new TypeError("Unknown format option provided.");t=e.format}var o,a=formats.formatters[t],n=defaults.filter;if(("function"==typeof e.filter||isArray(e.filter))&&(n=e.filter),o=e.arrayFormat in arrayPrefixGenerators?e.arrayFormat:"indices"in e?e.indices?"indices":"repeat":defaults.arrayFormat,"commaRoundTrip"in e&&"boolean"!=typeof e.commaRoundTrip)throw new TypeError("`commaRoundTrip` must be a boolean, or absent");var i=void 0===e.allowDots?!0===e.encodeDotInKeys||defaults.allowDots:!!e.allowDots;return{addQueryPrefix:"boolean"==typeof e.addQueryPrefix?e.addQueryPrefix:defaults.addQueryPrefix,allowDots:i,allowEmptyArrays:"boolean"==typeof e.allowEmptyArrays?!!e.allowEmptyArrays:defaults.allowEmptyArrays,arrayFormat:o,charset:r,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:defaults.charsetSentinel,commaRoundTrip:e.commaRoundTrip,delimiter:void 0===e.delimiter?defaults.delimiter:e.delimiter,encode:"boolean"==typeof e.encode?e.encode:defaults.encode,encodeDotInKeys:"boolean"==typeof e.encodeDotInKeys?e.encodeDotInKeys:defaults.encodeDotInKeys,encoder:"function"==typeof e.encoder?e.encoder:defaults.encoder,encodeValuesOnly:"boolean"==typeof e.encodeValuesOnly?e.encodeValuesOnly:defaults.encodeValuesOnly,filter:n,format:t,formatter:a,serializeDate:"function"==typeof e.serializeDate?e.serializeDate:defaults.serializeDate,skipNulls:"boolean"==typeof e.skipNulls?e.skipNulls:defaults.skipNulls,sort:"function"==typeof e.sort?e.sort:null,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:defaults.strictNullHandling}};module.exports=function(e,r){var t,o=e,a=normalizeStringifyOptions(r);"function"==typeof a.filter?o=(0,a.filter)("",o):isArray(a.filter)&&(t=a.filter);var n=[];if("object"!=typeof o||null===o)return"";var i=arrayPrefixGenerators[a.arrayFormat],l="comma"===i&&a.commaRoundTrip;t||(t=Object.keys(o)),a.sort&&t.sort(a.sort);for(var s=getSideChannel(),f=0;f<t.length;++f){var u=t[f];a.skipNulls&&null===o[u]||pushToArray(n,stringify(o[u],u,i,l,a.allowEmptyArrays,a.strictNullHandling,a.skipNulls,a.encodeDotInKeys,a.encode?a.encoder:null,a.filter,a.sort,a.allowDots,a.serializeDate,a.format,a.formatter,a.encodeValuesOnly,a.charset,s))}var d=n.join(a.delimiter),y=!0===a.addQueryPrefix?"?":"";return a.charsetSentinel&&("iso-8859-1"===a.charset?y+="utf8=%26%2310003%3B&":y+="utf8=%E2%9C%93&"),d.length>0?y+d:""};
 
-    // If there's a remainder, just add whatever is left
+},{"1":1,"29":29,"5":5}],5:[function(require,module,exports){
+"use strict";var formats=require(1),has=Object.prototype.hasOwnProperty,isArray=Array.isArray,hexTable=function(){for(var e=[],r=0;r<256;++r)e.push("%"+((r<16?"0":"")+r.toString(16)).toUpperCase());return e}(),compactQueue=function compactQueue(e){for(;e.length>1;){var r=e.pop(),t=r.obj[r.prop];if(isArray(t)){for(var o=[],n=0;n<t.length;++n)void 0!==t[n]&&o.push(t[n]);r.obj[r.prop]=o}}},arrayToObject=function arrayToObject(e,r){for(var t=r&&r.plainObjects?Object.create(null):{},o=0;o<e.length;++o)void 0!==e[o]&&(t[o]=e[o]);return t},merge=function merge(e,r,t){if(!r)return e;if("object"!=typeof r){if(isArray(e))e.push(r);else{if(!e||"object"!=typeof e)return[e,r];(t&&(t.plainObjects||t.allowPrototypes)||!has.call(Object.prototype,r))&&(e[r]=!0)}return e}if(!e||"object"!=typeof e)return[e].concat(r);var o=e;return isArray(e)&&!isArray(r)&&(o=arrayToObject(e,t)),isArray(e)&&isArray(r)?(r.forEach((function(r,o){if(has.call(e,o)){var n=e[o];n&&"object"==typeof n&&r&&"object"==typeof r?e[o]=merge(n,r,t):e.push(r)}else e[o]=r})),e):Object.keys(r).reduce((function(e,o){var n=r[o];return has.call(e,o)?e[o]=merge(e[o],n,t):e[o]=n,e}),o)},assign=function assignSingleSource(e,r){return Object.keys(r).reduce((function(e,t){return e[t]=r[t],e}),e)},decode=function(e,r,t){var o=e.replace(/\+/g," ");if("iso-8859-1"===t)return o.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(o)}catch(e){return o}},limit=1024,encode=function encode(e,r,t,o,n){if(0===e.length)return e;var a=e;if("symbol"==typeof e?a=Symbol.prototype.toString.call(e):"string"!=typeof e&&(a=String(e)),"iso-8859-1"===t)return escape(a).replace(/%u[0-9a-f]{4}/gi,(function(e){return"%26%23"+parseInt(e.slice(2),16)+"%3B"}));for(var c="",i=0;i<a.length;i+=limit){for(var u=a.length>=limit?a.slice(i,i+limit):a,p=[],s=0;s<u.length;++s){var f=u.charCodeAt(s);45===f||46===f||95===f||126===f||f>=48&&f<=57||f>=65&&f<=90||f>=97&&f<=122||n===formats.RFC1738&&(40===f||41===f)?p[p.length]=u.charAt(s):f<128?p[p.length]=hexTable[f]:f<2048?p[p.length]=hexTable[192|f>>6]+hexTable[128|63&f]:f<55296||f>=57344?p[p.length]=hexTable[224|f>>12]+hexTable[128|f>>6&63]+hexTable[128|63&f]:(s+=1,f=65536+((1023&f)<<10|1023&u.charCodeAt(s)),p[p.length]=hexTable[240|f>>18]+hexTable[128|f>>12&63]+hexTable[128|f>>6&63]+hexTable[128|63&f])}c+=p.join("")}return c},compact=function compact(e){for(var r=[{obj:{o:e},prop:"o"}],t=[],o=0;o<r.length;++o)for(var n=r[o],a=n.obj[n.prop],c=Object.keys(a),i=0;i<c.length;++i){var u=c[i],p=a[u];"object"==typeof p&&null!==p&&-1===t.indexOf(p)&&(r.push({obj:a,prop:u}),t.push(p))}return compactQueue(r),e},isRegExp=function isRegExp(e){return"[object RegExp]"===Object.prototype.toString.call(e)},isBuffer=function isBuffer(e){return!(!e||"object"!=typeof e||!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e)))},combine=function combine(e,r){return[].concat(e,r)},maybeMap=function maybeMap(e,r){if(isArray(e)){for(var t=[],o=0;o<e.length;o+=1)t.push(r(e[o]));return t}return r(e)};module.exports={/* common-shake removed: arrayToObject:arrayToObject *//* common-shake removed: assign:assign */combine:combine,compact:compact,decode:decode,encode:encode,isBuffer:isBuffer,isRegExp:isRegExp,maybeMap:maybeMap,merge:merge};
 
-    if (segment) {
-        keys.push('[' + key.slice(segment.index) + ']');
-    }
+},{"1":1}],29:[function(require,module,exports){
+"use strict";var GetIntrinsic=require(20),callBound=require(7),inspect=require(27),$TypeError=require(16),$WeakMap=GetIntrinsic("%WeakMap%",!0),$Map=GetIntrinsic("%Map%",!0),$weakMapGet=callBound("WeakMap.prototype.get",!0),$weakMapSet=callBound("WeakMap.prototype.set",!0),$weakMapHas=callBound("WeakMap.prototype.has",!0),$mapGet=callBound("Map.prototype.get",!0),$mapSet=callBound("Map.prototype.set",!0),$mapHas=callBound("Map.prototype.has",!0),listGetNode=function(e,t){for(var n,a=e;null!==(n=a.next);a=n)if(n.key===t)return a.next=n.next,n.next=e.next,e.next=n,n},listGet=function(e,t){var n=listGetNode(e,t);return n&&n.value},listSet=function(e,t,n){var a=listGetNode(e,t);a?a.value=n:e.next={key:t,next:e.next,value:n}},listHas=function(e,t){return!!listGetNode(e,t)};module.exports=function getSideChannel(){var e,t,n,a={assert:function(e){if(!a.has(e))throw new $TypeError("Side channel does not contain "+inspect(e))},get:function(a){if($WeakMap&&a&&("object"==typeof a||"function"==typeof a)){if(e)return $weakMapGet(e,a)}else if($Map){if(t)return $mapGet(t,a)}else if(n)return listGet(n,a)},has:function(a){if($WeakMap&&a&&("object"==typeof a||"function"==typeof a)){if(e)return $weakMapHas(e,a)}else if($Map){if(t)return $mapHas(t,a)}else if(n)return listHas(n,a);return!1},set:function(a,r){$WeakMap&&a&&("object"==typeof a||"function"==typeof a)?(e||(e=new $WeakMap),$weakMapSet(e,a,r)):$Map?(t||(t=new $Map),$mapSet(t,a,r)):(n||(n={key:{},next:null}),listSet(n,a,r))}};return a};
 
-    return parseObject(keys, val, options, valuesParsed);
-};
-
-var normalizeParseOptions = function normalizeParseOptions(opts) {
-    if (!opts) {
-        return defaults;
-    }
-
-    if (opts.decoder !== null && opts.decoder !== undefined && typeof opts.decoder !== 'function') {
-        throw new TypeError('Decoder has to be a function.');
-    }
-
-    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {
-        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');
-    }
-    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;
-
-    return {
-        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
-        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,
-        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,
-        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,
-        charset: charset,
-        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
-        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,
-        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,
-        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,
-        // eslint-disable-next-line no-implicit-coercion, no-extra-parens
-        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,
-        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,
-        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,
-        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,
-        parseArrays: opts.parseArrays !== false,
-        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,
-        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
-    };
-};
-
-module.exports = function (str, opts) {
-    var options = normalizeParseOptions(opts);
-
-    if (str === '' || str === null || typeof str === 'undefined') {
-        return options.plainObjects ? Object.create(null) : {};
-    }
-
-    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;
-    var obj = options.plainObjects ? Object.create(null) : {};
-
-    // Iterate over the keys and setup the new object
-
-    var keys = Object.keys(tempObj);
-    for (var i = 0; i < keys.length; ++i) {
-        var key = keys[i];
-        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');
-        obj = utils.merge(obj, newObj, options);
-    }
-
-    if (options.allowSparse === true) {
-        return obj;
-    }
-
-    return utils.compact(obj);
-};
-
-},{"./utils":5}],4:[function(require,module,exports){
-'use strict';
-
-var getSideChannel = require('side-channel');
-var utils = require('./utils');
-var formats = require('./formats');
-var has = Object.prototype.hasOwnProperty;
-
-var arrayPrefixGenerators = {
-    brackets: function brackets(prefix) {
-        return prefix + '[]';
-    },
-    comma: 'comma',
-    indices: function indices(prefix, key) {
-        return prefix + '[' + key + ']';
-    },
-    repeat: function repeat(prefix) {
-        return prefix;
-    }
-};
-
-var isArray = Array.isArray;
-var split = String.prototype.split;
-var push = Array.prototype.push;
-var pushToArray = function (arr, valueOrArray) {
-    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);
-};
-
-var toISO = Date.prototype.toISOString;
-
-var defaultFormat = formats['default'];
-var defaults = {
-    addQueryPrefix: false,
-    allowDots: false,
-    charset: 'utf-8',
-    charsetSentinel: false,
-    delimiter: '&',
-    encode: true,
-    encoder: utils.encode,
-    encodeValuesOnly: false,
-    format: defaultFormat,
-    formatter: formats.formatters[defaultFormat],
-    // deprecated
-    indices: false,
-    serializeDate: function serializeDate(date) {
-        return toISO.call(date);
-    },
-    skipNulls: false,
-    strictNullHandling: false
-};
-
-var isNonNullishPrimitive = function isNonNullishPrimitive(v) {
-    return typeof v === 'string'
-        || typeof v === 'number'
-        || typeof v === 'boolean'
-        || typeof v === 'symbol'
-        || typeof v === 'bigint';
-};
-
-var sentinel = {};
-
-var stringify = function stringify(
-    object,
-    prefix,
-    generateArrayPrefix,
-    commaRoundTrip,
-    strictNullHandling,
-    skipNulls,
-    encoder,
-    filter,
-    sort,
-    allowDots,
-    serializeDate,
-    format,
-    formatter,
-    encodeValuesOnly,
-    charset,
-    sideChannel
-) {
-    var obj = object;
-
-    var tmpSc = sideChannel;
-    var step = 0;
-    var findFlag = false;
-    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {
-        // Where object last appeared in the ref tree
-        var pos = tmpSc.get(object);
-        step += 1;
-        if (typeof pos !== 'undefined') {
-            if (pos === step) {
-                throw new RangeError('Cyclic object value');
-            } else {
-                findFlag = true; // Break while
-            }
-        }
-        if (typeof tmpSc.get(sentinel) === 'undefined') {
-            step = 0;
-        }
-    }
-
-    if (typeof filter === 'function') {
-        obj = filter(prefix, obj);
-    } else if (obj instanceof Date) {
-        obj = serializeDate(obj);
-    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {
-        obj = utils.maybeMap(obj, function (value) {
-            if (value instanceof Date) {
-                return serializeDate(value);
-            }
-            return value;
-        });
-    }
-
-    if (obj === null) {
-        if (strictNullHandling) {
-            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;
-        }
-
-        obj = '';
-    }
-
-    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {
-        if (encoder) {
-            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);
-            if (generateArrayPrefix === 'comma' && encodeValuesOnly) {
-                var valuesArray = split.call(String(obj), ',');
-                var valuesJoined = '';
-                for (var i = 0; i < valuesArray.length; ++i) {
-                    valuesJoined += (i === 0 ? '' : ',') + formatter(encoder(valuesArray[i], defaults.encoder, charset, 'value', format));
-                }
-                return [formatter(keyValue) + (commaRoundTrip && isArray(obj) && valuesArray.length === 1 ? '[]' : '') + '=' + valuesJoined];
-            }
-            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];
-        }
-        return [formatter(prefix) + '=' + formatter(String(obj))];
-    }
-
-    var values = [];
-
-    if (typeof obj === 'undefined') {
-        return values;
-    }
-
-    var objKeys;
-    if (generateArrayPrefix === 'comma' && isArray(obj)) {
-        // we need to join elements in
-        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];
-    } else if (isArray(filter)) {
-        objKeys = filter;
-    } else {
-        var keys = Object.keys(obj);
-        objKeys = sort ? keys.sort(sort) : keys;
-    }
-
-    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? prefix + '[]' : prefix;
-
-    for (var j = 0; j < objKeys.length; ++j) {
-        var key = objKeys[j];
-        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];
-
-        if (skipNulls && value === null) {
-            continue;
-        }
-
-        var keyPrefix = isArray(obj)
-            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, key) : adjustedPrefix
-            : adjustedPrefix + (allowDots ? '.' + key : '[' + key + ']');
-
-        sideChannel.set(object, step);
-        var valueSideChannel = getSideChannel();
-        valueSideChannel.set(sentinel, sideChannel);
-        pushToArray(values, stringify(
-            value,
-            keyPrefix,
-            generateArrayPrefix,
-            commaRoundTrip,
-            strictNullHandling,
-            skipNulls,
-            encoder,
-            filter,
-            sort,
-            allowDots,
-            serializeDate,
-            format,
-            formatter,
-            encodeValuesOnly,
-            charset,
-            valueSideChannel
-        ));
-    }
-
-    return values;
-};
-
-var normalizeStringifyOptions = function normalizeStringifyOptions(opts) {
-    if (!opts) {
-        return defaults;
-    }
-
-    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {
-        throw new TypeError('Encoder has to be a function.');
-    }
-
-    var charset = opts.charset || defaults.charset;
-    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {
-        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');
-    }
-
-    var format = formats['default'];
-    if (typeof opts.format !== 'undefined') {
-        if (!has.call(formats.formatters, opts.format)) {
-            throw new TypeError('Unknown format option provided.');
-        }
-        format = opts.format;
-    }
-    var formatter = formats.formatters[format];
-
-    var filter = defaults.filter;
-    if (typeof opts.filter === 'function' || isArray(opts.filter)) {
-        filter = opts.filter;
-    }
-
-    return {
-        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,
-        allowDots: typeof opts.allowDots === 'undefined' ? defaults.allowDots : !!opts.allowDots,
-        charset: charset,
-        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,
-        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,
-        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,
-        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,
-        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,
-        filter: filter,
-        format: format,
-        formatter: formatter,
-        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,
-        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,
-        sort: typeof opts.sort === 'function' ? opts.sort : null,
-        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling
-    };
-};
-
-module.exports = function (object, opts) {
-    var obj = object;
-    var options = normalizeStringifyOptions(opts);
-
-    var objKeys;
-    var filter;
-
-    if (typeof options.filter === 'function') {
-        filter = options.filter;
-        obj = filter('', obj);
-    } else if (isArray(options.filter)) {
-        filter = options.filter;
-        objKeys = filter;
-    }
-
-    var keys = [];
-
-    if (typeof obj !== 'object' || obj === null) {
-        return '';
-    }
-
-    var arrayFormat;
-    if (opts && opts.arrayFormat in arrayPrefixGenerators) {
-        arrayFormat = opts.arrayFormat;
-    } else if (opts && 'indices' in opts) {
-        arrayFormat = opts.indices ? 'indices' : 'repeat';
-    } else {
-        arrayFormat = 'indices';
-    }
-
-    var generateArrayPrefix = arrayPrefixGenerators[arrayFormat];
-    if (opts && 'commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {
-        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');
-    }
-    var commaRoundTrip = generateArrayPrefix === 'comma' && opts && opts.commaRoundTrip;
-
-    if (!objKeys) {
-        objKeys = Object.keys(obj);
-    }
-
-    if (options.sort) {
-        objKeys.sort(options.sort);
-    }
-
-    var sideChannel = getSideChannel();
-    for (var i = 0; i < objKeys.length; ++i) {
-        var key = objKeys[i];
-
-        if (options.skipNulls && obj[key] === null) {
-            continue;
-        }
-        pushToArray(keys, stringify(
-            obj[key],
-            key,
-            generateArrayPrefix,
-            commaRoundTrip,
-            options.strictNullHandling,
-            options.skipNulls,
-            options.encode ? options.encoder : null,
-            options.filter,
-            options.sort,
-            options.allowDots,
-            options.serializeDate,
-            options.format,
-            options.formatter,
-            options.encodeValuesOnly,
-            options.charset,
-            sideChannel
-        ));
-    }
-
-    var joined = keys.join(options.delimiter);
-    var prefix = options.addQueryPrefix === true ? '?' : '';
-
-    if (options.charsetSentinel) {
-        if (options.charset === 'iso-8859-1') {
-            // encodeURIComponent('&#10003;'), the "numeric entity" representation of a checkmark
-            prefix += 'utf8=%26%2310003%3B&';
-        } else {
-            // encodeURIComponent('✓')
-            prefix += 'utf8=%E2%9C%93&';
-        }
-    }
-
-    return joined.length > 0 ? prefix + joined : '';
-};
-
-},{"./formats":1,"./utils":5,"side-channel":16}],5:[function(require,module,exports){
-'use strict';
-
-var formats = require('./formats');
-
-var has = Object.prototype.hasOwnProperty;
-var isArray = Array.isArray;
-
-var hexTable = (function () {
-    var array = [];
-    for (var i = 0; i < 256; ++i) {
-        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());
-    }
-
-    return array;
-}());
-
-var compactQueue = function compactQueue(queue) {
-    while (queue.length > 1) {
-        var item = queue.pop();
-        var obj = item.obj[item.prop];
-
-        if (isArray(obj)) {
-            var compacted = [];
-
-            for (var j = 0; j < obj.length; ++j) {
-                if (typeof obj[j] !== 'undefined') {
-                    compacted.push(obj[j]);
-                }
-            }
-
-            item.obj[item.prop] = compacted;
-        }
-    }
-};
-
-var arrayToObject = function arrayToObject(source, options) {
-    var obj = options && options.plainObjects ? Object.create(null) : {};
-    for (var i = 0; i < source.length; ++i) {
-        if (typeof source[i] !== 'undefined') {
-            obj[i] = source[i];
-        }
-    }
-
-    return obj;
-};
-
-var merge = function merge(target, source, options) {
-    /* eslint no-param-reassign: 0 */
-    if (!source) {
-        return target;
-    }
-
-    if (typeof source !== 'object') {
-        if (isArray(target)) {
-            target.push(source);
-        } else if (target && typeof target === 'object') {
-            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {
-                target[source] = true;
-            }
-        } else {
-            return [target, source];
-        }
-
-        return target;
-    }
-
-    if (!target || typeof target !== 'object') {
-        return [target].concat(source);
-    }
-
-    var mergeTarget = target;
-    if (isArray(target) && !isArray(source)) {
-        mergeTarget = arrayToObject(target, options);
-    }
-
-    if (isArray(target) && isArray(source)) {
-        source.forEach(function (item, i) {
-            if (has.call(target, i)) {
-                var targetItem = target[i];
-                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {
-                    target[i] = merge(targetItem, item, options);
-                } else {
-                    target.push(item);
-                }
-            } else {
-                target[i] = item;
-            }
-        });
-        return target;
-    }
-
-    return Object.keys(source).reduce(function (acc, key) {
-        var value = source[key];
-
-        if (has.call(acc, key)) {
-            acc[key] = merge(acc[key], value, options);
-        } else {
-            acc[key] = value;
-        }
-        return acc;
-    }, mergeTarget);
-};
-
-var assign = function assignSingleSource(target, source) {
-    return Object.keys(source).reduce(function (acc, key) {
-        acc[key] = source[key];
-        return acc;
-    }, target);
-};
-
-var decode = function (str, decoder, charset) {
-    var strWithoutPlus = str.replace(/\+/g, ' ');
-    if (charset === 'iso-8859-1') {
-        // unescape never throws, no try...catch needed:
-        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);
-    }
-    // utf-8
-    try {
-        return decodeURIComponent(strWithoutPlus);
-    } catch (e) {
-        return strWithoutPlus;
-    }
-};
-
-var encode = function encode(str, defaultEncoder, charset, kind, format) {
-    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.
-    // It has been adapted here for stricter adherence to RFC 3986
-    if (str.length === 0) {
-        return str;
-    }
-
-    var string = str;
-    if (typeof str === 'symbol') {
-        string = Symbol.prototype.toString.call(str);
-    } else if (typeof str !== 'string') {
-        string = String(str);
-    }
-
-    if (charset === 'iso-8859-1') {
-        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {
-            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';
-        });
-    }
-
-    var out = '';
-    for (var i = 0; i < string.length; ++i) {
-        var c = string.charCodeAt(i);
-
-        if (
-            c === 0x2D // -
-            || c === 0x2E // .
-            || c === 0x5F // _
-            || c === 0x7E // ~
-            || (c >= 0x30 && c <= 0x39) // 0-9
-            || (c >= 0x41 && c <= 0x5A) // a-z
-            || (c >= 0x61 && c <= 0x7A) // A-Z
-            || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )
-        ) {
-            out += string.charAt(i);
-            continue;
-        }
-
-        if (c < 0x80) {
-            out = out + hexTable[c];
-            continue;
-        }
-
-        if (c < 0x800) {
-            out = out + (hexTable[0xC0 | (c >> 6)] + hexTable[0x80 | (c & 0x3F)]);
-            continue;
-        }
-
-        if (c < 0xD800 || c >= 0xE000) {
-            out = out + (hexTable[0xE0 | (c >> 12)] + hexTable[0x80 | ((c >> 6) & 0x3F)] + hexTable[0x80 | (c & 0x3F)]);
-            continue;
-        }
-
-        i += 1;
-        c = 0x10000 + (((c & 0x3FF) << 10) | (string.charCodeAt(i) & 0x3FF));
-        /* eslint operator-linebreak: [2, "before"] */
-        out += hexTable[0xF0 | (c >> 18)]
-            + hexTable[0x80 | ((c >> 12) & 0x3F)]
-            + hexTable[0x80 | ((c >> 6) & 0x3F)]
-            + hexTable[0x80 | (c & 0x3F)];
-    }
-
-    return out;
-};
-
-var compact = function compact(value) {
-    var queue = [{ obj: { o: value }, prop: 'o' }];
-    var refs = [];
-
-    for (var i = 0; i < queue.length; ++i) {
-        var item = queue[i];
-        var obj = item.obj[item.prop];
-
-        var keys = Object.keys(obj);
-        for (var j = 0; j < keys.length; ++j) {
-            var key = keys[j];
-            var val = obj[key];
-            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {
-                queue.push({ obj: obj, prop: key });
-                refs.push(val);
-            }
-        }
-    }
-
-    compactQueue(queue);
-
-    return value;
-};
-
-var isRegExp = function isRegExp(obj) {
-    return Object.prototype.toString.call(obj) === '[object RegExp]';
-};
-
-var isBuffer = function isBuffer(obj) {
-    if (!obj || typeof obj !== 'object') {
-        return false;
-    }
-
-    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));
-};
-
-var combine = function combine(a, b) {
-    return [].concat(a, b);
-};
-
-var maybeMap = function maybeMap(val, fn) {
-    if (isArray(val)) {
-        var mapped = [];
-        for (var i = 0; i < val.length; i += 1) {
-            mapped.push(fn(val[i]));
-        }
-        return mapped;
-    }
-    return fn(val);
-};
-
-module.exports = {
-    arrayToObject: arrayToObject,
-    assign: assign,
-    combine: combine,
-    compact: compact,
-    decode: decode,
-    encode: encode,
-    isBuffer: isBuffer,
-    isRegExp: isRegExp,
-    maybeMap: maybeMap,
-    merge: merge
-};
-
-},{"./formats":1}],6:[function(require,module,exports){
+},{"16":16,"20":20,"27":27,"7":7}],6:[function(require,module,exports){
 
 },{}],7:[function(require,module,exports){
-'use strict';
-
-var GetIntrinsic = require('get-intrinsic');
-
-var callBind = require('./');
-
-var $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));
-
-module.exports = function callBoundIntrinsic(name, allowMissing) {
-	var intrinsic = GetIntrinsic(name, !!allowMissing);
-	if (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {
-		return callBind(intrinsic);
-	}
-	return intrinsic;
-};
-
-},{"./":8,"get-intrinsic":11}],8:[function(require,module,exports){
-'use strict';
-
-var bind = require('function-bind');
-var GetIntrinsic = require('get-intrinsic');
-
-var $apply = GetIntrinsic('%Function.prototype.apply%');
-var $call = GetIntrinsic('%Function.prototype.call%');
-var $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);
-
-var $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);
-var $defineProperty = GetIntrinsic('%Object.defineProperty%', true);
-var $max = GetIntrinsic('%Math.max%');
-
-if ($defineProperty) {
-	try {
-		$defineProperty({}, 'a', { value: 1 });
-	} catch (e) {
-		// IE 8 has a broken defineProperty
-		$defineProperty = null;
-	}
-}
-
-module.exports = function callBind(originalFunction) {
-	var func = $reflectApply(bind, $call, arguments);
-	if ($gOPD && $defineProperty) {
-		var desc = $gOPD(func, 'length');
-		if (desc.configurable) {
-			// original length, plus the receiver, minus any additional arguments (after the receiver)
-			$defineProperty(
-				func,
-				'length',
-				{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }
-			);
-		}
-	}
-	return func;
-};
-
-var applyBind = function applyBind() {
-	return $reflectApply(bind, $apply, arguments);
-};
-
-if ($defineProperty) {
-	$defineProperty(module.exports, 'apply', { value: applyBind });
-} else {
-	module.exports.apply = applyBind;
-}
-
-},{"function-bind":10,"get-intrinsic":11}],9:[function(require,module,exports){
-'use strict';
-
-/* eslint no-invalid-this: 1 */
-
-var ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';
-var slice = Array.prototype.slice;
-var toStr = Object.prototype.toString;
-var funcType = '[object Function]';
-
-module.exports = function bind(that) {
-    var target = this;
-    if (typeof target !== 'function' || toStr.call(target) !== funcType) {
-        throw new TypeError(ERROR_MESSAGE + target);
-    }
-    var args = slice.call(arguments, 1);
-
-    var bound;
-    var binder = function () {
-        if (this instanceof bound) {
-            var result = target.apply(
-                this,
-                args.concat(slice.call(arguments))
-            );
-            if (Object(result) === result) {
-                return result;
-            }
-            return this;
-        } else {
-            return target.apply(
-                that,
-                args.concat(slice.call(arguments))
-            );
-        }
-    };
-
-    var boundLength = Math.max(0, target.length - args.length);
-    var boundArgs = [];
-    for (var i = 0; i < boundLength; i++) {
-        boundArgs.push('$' + i);
-    }
-
-    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);
-
-    if (target.prototype) {
-        var Empty = function Empty() {};
-        Empty.prototype = target.prototype;
-        bound.prototype = new Empty();
-        Empty.prototype = null;
-    }
-
-    return bound;
-};
-
-},{}],10:[function(require,module,exports){
-'use strict';
-
-var implementation = require('./implementation');
-
-module.exports = Function.prototype.bind || implementation;
-
-},{"./implementation":9}],11:[function(require,module,exports){
-'use strict';
-
-var undefined;
-
-var $SyntaxError = SyntaxError;
-var $Function = Function;
-var $TypeError = TypeError;
-
-// eslint-disable-next-line consistent-return
-var getEvalledConstructor = function (expressionSyntax) {
-	try {
-		return $Function('"use strict"; return (' + expressionSyntax + ').constructor;')();
-	} catch (e) {}
-};
-
-var $gOPD = Object.getOwnPropertyDescriptor;
-if ($gOPD) {
-	try {
-		$gOPD({}, '');
-	} catch (e) {
-		$gOPD = null; // this is IE 8, which has a broken gOPD
-	}
-}
-
-var throwTypeError = function () {
-	throw new $TypeError();
-};
-var ThrowTypeError = $gOPD
-	? (function () {
-		try {
-			// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties
-			arguments.callee; // IE 8 does not throw here
-			return throwTypeError;
-		} catch (calleeThrows) {
-			try {
-				// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')
-				return $gOPD(arguments, 'callee').get;
-			} catch (gOPDthrows) {
-				return throwTypeError;
-			}
-		}
-	}())
-	: throwTypeError;
-
-var hasSymbols = require('has-symbols')();
-
-var getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto
-
-var needsEval = {};
-
-var TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);
-
-var INTRINSICS = {
-	'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,
-	'%Array%': Array,
-	'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,
-	'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,
-	'%AsyncFromSyncIteratorPrototype%': undefined,
-	'%AsyncFunction%': needsEval,
-	'%AsyncGenerator%': needsEval,
-	'%AsyncGeneratorFunction%': needsEval,
-	'%AsyncIteratorPrototype%': needsEval,
-	'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,
-	'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,
-	'%Boolean%': Boolean,
-	'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,
-	'%Date%': Date,
-	'%decodeURI%': decodeURI,
-	'%decodeURIComponent%': decodeURIComponent,
-	'%encodeURI%': encodeURI,
-	'%encodeURIComponent%': encodeURIComponent,
-	'%Error%': Error,
-	'%eval%': eval, // eslint-disable-line no-eval
-	'%EvalError%': EvalError,
-	'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,
-	'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,
-	'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,
-	'%Function%': $Function,
-	'%GeneratorFunction%': needsEval,
-	'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,
-	'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,
-	'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,
-	'%isFinite%': isFinite,
-	'%isNaN%': isNaN,
-	'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,
-	'%JSON%': typeof JSON === 'object' ? JSON : undefined,
-	'%Map%': typeof Map === 'undefined' ? undefined : Map,
-	'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),
-	'%Math%': Math,
-	'%Number%': Number,
-	'%Object%': Object,
-	'%parseFloat%': parseFloat,
-	'%parseInt%': parseInt,
-	'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,
-	'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,
-	'%RangeError%': RangeError,
-	'%ReferenceError%': ReferenceError,
-	'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,
-	'%RegExp%': RegExp,
-	'%Set%': typeof Set === 'undefined' ? undefined : Set,
-	'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),
-	'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,
-	'%String%': String,
-	'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,
-	'%Symbol%': hasSymbols ? Symbol : undefined,
-	'%SyntaxError%': $SyntaxError,
-	'%ThrowTypeError%': ThrowTypeError,
-	'%TypedArray%': TypedArray,
-	'%TypeError%': $TypeError,
-	'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,
-	'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,
-	'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,
-	'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,
-	'%URIError%': URIError,
-	'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,
-	'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,
-	'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet
-};
-
-var doEval = function doEval(name) {
-	var value;
-	if (name === '%AsyncFunction%') {
-		value = getEvalledConstructor('async function () {}');
-	} else if (name === '%GeneratorFunction%') {
-		value = getEvalledConstructor('function* () {}');
-	} else if (name === '%AsyncGeneratorFunction%') {
-		value = getEvalledConstructor('async function* () {}');
-	} else if (name === '%AsyncGenerator%') {
-		var fn = doEval('%AsyncGeneratorFunction%');
-		if (fn) {
-			value = fn.prototype;
-		}
-	} else if (name === '%AsyncIteratorPrototype%') {
-		var gen = doEval('%AsyncGenerator%');
-		if (gen) {
-			value = getProto(gen.prototype);
-		}
-	}
+"use strict";var GetIntrinsic=require(20),callBind=require(8),$indexOf=callBind(GetIntrinsic("String.prototype.indexOf"));module.exports=function callBoundIntrinsic(i,n){var t=GetIntrinsic(i,!!n);return"function"==typeof t&&$indexOf(i,".prototype.")>-1?callBind(t):t};
 
-	INTRINSICS[name] = value;
+},{"20":20,"8":8}],20:[function(require,module,exports){
+"use strict";var undefined,$Error=require(12),$EvalError=require(11),$RangeError=require(13),$ReferenceError=require(14),$SyntaxError=require(15),$TypeError=require(16),$URIError=require(17),$Function=Function,getEvalledConstructor=function(r){try{return $Function('"use strict"; return ('+r+").constructor;")()}catch(r){}},$gOPD=Object.getOwnPropertyDescriptor;if($gOPD)try{$gOPD({},"")}catch(r){$gOPD=null}var throwTypeError=function(){throw new $TypeError},ThrowTypeError=$gOPD?function(){try{return throwTypeError}catch(r){try{return $gOPD(arguments,"callee").get}catch(r){return throwTypeError}}}():throwTypeError,hasSymbols=require(24)(),hasProto=require(23)(),getProto=Object.getPrototypeOf||(hasProto?function(r){return r.__proto__}:null),needsEval={},TypedArray="undefined"!=typeof Uint8Array&&getProto?getProto(Uint8Array):undefined,INTRINSICS={__proto__:null,"%AggregateError%":"undefined"==typeof AggregateError?undefined:AggregateError,"%Array%":Array,"%ArrayBuffer%":"undefined"==typeof ArrayBuffer?undefined:ArrayBuffer,"%ArrayIteratorPrototype%":hasSymbols&&getProto?getProto([][Symbol.iterator]()):undefined,"%AsyncFromSyncIteratorPrototype%":undefined,"%AsyncFunction%":needsEval,"%AsyncGenerator%":needsEval,"%AsyncGeneratorFunction%":needsEval,"%AsyncIteratorPrototype%":needsEval,"%Atomics%":"undefined"==typeof Atomics?undefined:Atomics,"%BigInt%":"undefined"==typeof BigInt?undefined:BigInt,"%BigInt64Array%":"undefined"==typeof BigInt64Array?undefined:BigInt64Array,"%BigUint64Array%":"undefined"==typeof BigUint64Array?undefined:BigUint64Array,"%Boolean%":Boolean,"%DataView%":"undefined"==typeof DataView?undefined:DataView,"%Date%":Date,"%decodeURI%":decodeURI,"%decodeURIComponent%":decodeURIComponent,"%encodeURI%":encodeURI,"%encodeURIComponent%":encodeURIComponent,"%Error%":$Error,"%eval%":eval,"%EvalError%":$EvalError,"%Float32Array%":"undefined"==typeof Float32Array?undefined:Float32Array,"%Float64Array%":"undefined"==typeof Float64Array?undefined:Float64Array,"%FinalizationRegistry%":"undefined"==typeof FinalizationRegistry?undefined:FinalizationRegistry,"%Function%":$Function,"%GeneratorFunction%":needsEval,"%Int8Array%":"undefined"==typeof Int8Array?undefined:Int8Array,"%Int16Array%":"undefined"==typeof Int16Array?undefined:Int16Array,"%Int32Array%":"undefined"==typeof Int32Array?undefined:Int32Array,"%isFinite%":isFinite,"%isNaN%":isNaN,"%IteratorPrototype%":hasSymbols&&getProto?getProto(getProto([][Symbol.iterator]())):undefined,"%JSON%":"object"==typeof JSON?JSON:undefined,"%Map%":"undefined"==typeof Map?undefined:Map,"%MapIteratorPrototype%":"undefined"!=typeof Map&&hasSymbols&&getProto?getProto((new Map)[Symbol.iterator]()):undefined,"%Math%":Math,"%Number%":Number,"%Object%":Object,"%parseFloat%":parseFloat,"%parseInt%":parseInt,"%Promise%":"undefined"==typeof Promise?undefined:Promise,"%Proxy%":"undefined"==typeof Proxy?undefined:Proxy,"%RangeError%":$RangeError,"%ReferenceError%":$ReferenceError,"%Reflect%":"undefined"==typeof Reflect?undefined:Reflect,"%RegExp%":RegExp,"%Set%":"undefined"==typeof Set?undefined:Set,"%SetIteratorPrototype%":"undefined"!=typeof Set&&hasSymbols&&getProto?getProto((new Set)[Symbol.iterator]()):undefined,"%SharedArrayBuffer%":"undefined"==typeof SharedArrayBuffer?undefined:SharedArrayBuffer,"%String%":String,"%StringIteratorPrototype%":hasSymbols&&getProto?getProto(""[Symbol.iterator]()):undefined,"%Symbol%":hasSymbols?Symbol:undefined,"%SyntaxError%":$SyntaxError,"%ThrowTypeError%":ThrowTypeError,"%TypedArray%":TypedArray,"%TypeError%":$TypeError,"%Uint8Array%":"undefined"==typeof Uint8Array?undefined:Uint8Array,"%Uint8ClampedArray%":"undefined"==typeof Uint8ClampedArray?undefined:Uint8ClampedArray,"%Uint16Array%":"undefined"==typeof Uint16Array?undefined:Uint16Array,"%Uint32Array%":"undefined"==typeof Uint32Array?undefined:Uint32Array,"%URIError%":$URIError,"%WeakMap%":"undefined"==typeof WeakMap?undefined:WeakMap,"%WeakRef%":"undefined"==typeof WeakRef?undefined:WeakRef,"%WeakSet%":"undefined"==typeof WeakSet?undefined:WeakSet};if(getProto)try{null.error}catch(r){var errorProto=getProto(getProto(r));INTRINSICS["%Error.prototype%"]=errorProto}var doEval=function doEval(r){var e;if("%AsyncFunction%"===r)e=getEvalledConstructor("async function () {}");else if("%GeneratorFunction%"===r)e=getEvalledConstructor("function* () {}");else if("%AsyncGeneratorFunction%"===r)e=getEvalledConstructor("async function* () {}");else if("%AsyncGenerator%"===r){var t=doEval("%AsyncGeneratorFunction%");t&&(e=t.prototype)}else if("%AsyncIteratorPrototype%"===r){var o=doEval("%AsyncGenerator%");o&&getProto&&(e=getProto(o.prototype))}return INTRINSICS[r]=e,e},LEGACY_ALIASES={__proto__:null,"%ArrayBufferPrototype%":["ArrayBuffer","prototype"],"%ArrayPrototype%":["Array","prototype"],"%ArrayProto_entries%":["Array","prototype","entries"],"%ArrayProto_forEach%":["Array","prototype","forEach"],"%ArrayProto_keys%":["Array","prototype","keys"],"%ArrayProto_values%":["Array","prototype","values"],"%AsyncFunctionPrototype%":["AsyncFunction","prototype"],"%AsyncGenerator%":["AsyncGeneratorFunction","prototype"],"%AsyncGeneratorPrototype%":["AsyncGeneratorFunction","prototype","prototype"],"%BooleanPrototype%":["Boolean","prototype"],"%DataViewPrototype%":["DataView","prototype"],"%DatePrototype%":["Date","prototype"],"%ErrorPrototype%":["Error","prototype"],"%EvalErrorPrototype%":["EvalError","prototype"],"%Float32ArrayPrototype%":["Float32Array","prototype"],"%Float64ArrayPrototype%":["Float64Array","prototype"],"%FunctionPrototype%":["Function","prototype"],"%Generator%":["GeneratorFunction","prototype"],"%GeneratorPrototype%":["GeneratorFunction","prototype","prototype"],"%Int8ArrayPrototype%":["Int8Array","prototype"],"%Int16ArrayPrototype%":["Int16Array","prototype"],"%Int32ArrayPrototype%":["Int32Array","prototype"],"%JSONParse%":["JSON","parse"],"%JSONStringify%":["JSON","stringify"],"%MapPrototype%":["Map","prototype"],"%NumberPrototype%":["Number","prototype"],"%ObjectPrototype%":["Object","prototype"],"%ObjProto_toString%":["Object","prototype","toString"],"%ObjProto_valueOf%":["Object","prototype","valueOf"],"%PromisePrototype%":["Promise","prototype"],"%PromiseProto_then%":["Promise","prototype","then"],"%Promise_all%":["Promise","all"],"%Promise_reject%":["Promise","reject"],"%Promise_resolve%":["Promise","resolve"],"%RangeErrorPrototype%":["RangeError","prototype"],"%ReferenceErrorPrototype%":["ReferenceError","prototype"],"%RegExpPrototype%":["RegExp","prototype"],"%SetPrototype%":["Set","prototype"],"%SharedArrayBufferPrototype%":["SharedArrayBuffer","prototype"],"%StringPrototype%":["String","prototype"],"%SymbolPrototype%":["Symbol","prototype"],"%SyntaxErrorPrototype%":["SyntaxError","prototype"],"%TypedArrayPrototype%":["TypedArray","prototype"],"%TypeErrorPrototype%":["TypeError","prototype"],"%Uint8ArrayPrototype%":["Uint8Array","prototype"],"%Uint8ClampedArrayPrototype%":["Uint8ClampedArray","prototype"],"%Uint16ArrayPrototype%":["Uint16Array","prototype"],"%Uint32ArrayPrototype%":["Uint32Array","prototype"],"%URIErrorPrototype%":["URIError","prototype"],"%WeakMapPrototype%":["WeakMap","prototype"],"%WeakSetPrototype%":["WeakSet","prototype"]},bind=require(19),hasOwn=require(26),$concat=bind.call(Function.call,Array.prototype.concat),$spliceApply=bind.call(Function.apply,Array.prototype.splice),$replace=bind.call(Function.call,String.prototype.replace),$strSlice=bind.call(Function.call,String.prototype.slice),$exec=bind.call(Function.call,RegExp.prototype.exec),rePropName=/[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g,reEscapeChar=/\\(\\)?/g,stringToPath=function stringToPath(r){var e=$strSlice(r,0,1),t=$strSlice(r,-1);if("%"===e&&"%"!==t)throw new $SyntaxError("invalid intrinsic syntax, expected closing `%`");if("%"===t&&"%"!==e)throw new $SyntaxError("invalid intrinsic syntax, expected opening `%`");var o=[];return $replace(r,rePropName,(function(r,e,t,n){o[o.length]=t?$replace(n,reEscapeChar,"$1"):e||r})),o},getBaseIntrinsic=function getBaseIntrinsic(r,e){var t,o=r;if(hasOwn(LEGACY_ALIASES,o)&&(o="%"+(t=LEGACY_ALIASES[o])[0]+"%"),hasOwn(INTRINSICS,o)){var n=INTRINSICS[o];if(n===needsEval&&(n=doEval(o)),void 0===n&&!e)throw new $TypeError("intrinsic "+r+" exists, but is not available. Please file an issue!");return{alias:t,name:o,value:n}}throw new $SyntaxError("intrinsic "+r+" does not exist!")};module.exports=function GetIntrinsic(r,e){if("string"!=typeof r||0===r.length)throw new $TypeError("intrinsic name must be a non-empty string");if(arguments.length>1&&"boolean"!=typeof e)throw new $TypeError('"allowMissing" argument must be a boolean');if(null===$exec(/^%?[^%]*%?$/,r))throw new $SyntaxError("`%` may not be present anywhere but at the beginning and end of the intrinsic name");var t=stringToPath(r),o=t.length>0?t[0]:"",n=getBaseIntrinsic("%"+o+"%",e),a=n.name,y=n.value,i=!1,p=n.alias;p&&(o=p[0],$spliceApply(t,$concat([0,1],p)));for(var d=1,s=!0;d<t.length;d+=1){var f=t[d],u=$strSlice(f,0,1),l=$strSlice(f,-1);if(('"'===u||"'"===u||"`"===u||'"'===l||"'"===l||"`"===l)&&u!==l)throw new $SyntaxError("property names with quotes must have matching quotes");if("constructor"!==f&&s||(i=!0),hasOwn(INTRINSICS,a="%"+(o+="."+f)+"%"))y=INTRINSICS[a];else if(null!=y){if(!(f in y)){if(!e)throw new $TypeError("base intrinsic for "+r+" exists, but the property is not available.");return}if($gOPD&&d+1>=t.length){var c=$gOPD(y,f);y=(s=!!c)&&"get"in c&&!("originalValue"in c.get)?c.get:y[f]}else s=hasOwn(y,f),y=y[f];s&&!i&&(INTRINSICS[a]=y)}}return y};
 
-	return value;
-};
+},{"11":11,"12":12,"13":13,"14":14,"15":15,"16":16,"17":17,"19":19,"23":23,"24":24,"26":26}],8:[function(require,module,exports){
+"use strict";var bind=require(19),GetIntrinsic=require(20),setFunctionLength=require(28),$TypeError=require(16),$apply=GetIntrinsic("%Function.prototype.apply%"),$call=GetIntrinsic("%Function.prototype.call%"),$reflectApply=GetIntrinsic("%Reflect.apply%",!0)||bind.call($call,$apply),$defineProperty=require(10),$max=GetIntrinsic("%Math.max%");module.exports=function callBind(e){if("function"!=typeof e)throw new $TypeError("a function is required");var n=$reflectApply(bind,$call,arguments);return setFunctionLength(n,1+$max(0,e.length-(arguments.length-1)),!0)};var applyBind=function applyBind(){return $reflectApply(bind,$apply,arguments)};$defineProperty?$defineProperty(module.exports,"apply",{value:applyBind}):module.exports.apply=applyBind;
 
-var LEGACY_ALIASES = {
-	'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],
-	'%ArrayPrototype%': ['Array', 'prototype'],
-	'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],
-	'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],
-	'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],
-	'%ArrayProto_values%': ['Array', 'prototype', 'values'],
-	'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],
-	'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],
-	'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],
-	'%BooleanPrototype%': ['Boolean', 'prototype'],
-	'%DataViewPrototype%': ['DataView', 'prototype'],
-	'%DatePrototype%': ['Date', 'prototype'],
-	'%ErrorPrototype%': ['Error', 'prototype'],
-	'%EvalErrorPrototype%': ['EvalError', 'prototype'],
-	'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],
-	'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],
-	'%FunctionPrototype%': ['Function', 'prototype'],
-	'%Generator%': ['GeneratorFunction', 'prototype'],
-	'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],
-	'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],
-	'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],
-	'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],
-	'%JSONParse%': ['JSON', 'parse'],
-	'%JSONStringify%': ['JSON', 'stringify'],
-	'%MapPrototype%': ['Map', 'prototype'],
-	'%NumberPrototype%': ['Number', 'prototype'],
-	'%ObjectPrototype%': ['Object', 'prototype'],
-	'%ObjProto_toString%': ['Object', 'prototype', 'toString'],
-	'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],
-	'%PromisePrototype%': ['Promise', 'prototype'],
-	'%PromiseProto_then%': ['Promise', 'prototype', 'then'],
-	'%Promise_all%': ['Promise', 'all'],
-	'%Promise_reject%': ['Promise', 'reject'],
-	'%Promise_resolve%': ['Promise', 'resolve'],
-	'%RangeErrorPrototype%': ['RangeError', 'prototype'],
-	'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],
-	'%RegExpPrototype%': ['RegExp', 'prototype'],
-	'%SetPrototype%': ['Set', 'prototype'],
-	'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],
-	'%StringPrototype%': ['String', 'prototype'],
-	'%SymbolPrototype%': ['Symbol', 'prototype'],
-	'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],
-	'%TypedArrayPrototype%': ['TypedArray', 'prototype'],
-	'%TypeErrorPrototype%': ['TypeError', 'prototype'],
-	'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],
-	'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],
-	'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],
-	'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],
-	'%URIErrorPrototype%': ['URIError', 'prototype'],
-	'%WeakMapPrototype%': ['WeakMap', 'prototype'],
-	'%WeakSetPrototype%': ['WeakSet', 'prototype']
-};
+},{"10":10,"16":16,"19":19,"20":20,"28":28}],16:[function(require,module,exports){
+"use strict";module.exports=TypeError;
 
-var bind = require('function-bind');
-var hasOwn = require('has');
-var $concat = bind.call(Function.call, Array.prototype.concat);
-var $spliceApply = bind.call(Function.apply, Array.prototype.splice);
-var $replace = bind.call(Function.call, String.prototype.replace);
-var $strSlice = bind.call(Function.call, String.prototype.slice);
+},{}],19:[function(require,module,exports){
+"use strict";var implementation=require(18);module.exports=Function.prototype.bind||implementation;
 
-/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */
-var rePropName = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g;
-var reEscapeChar = /\\(\\)?/g; /** Used to match backslashes in property paths. */
-var stringToPath = function stringToPath(string) {
-	var first = $strSlice(string, 0, 1);
-	var last = $strSlice(string, -1);
-	if (first === '%' && last !== '%') {
-		throw new $SyntaxError('invalid intrinsic syntax, expected closing `%`');
-	} else if (last === '%' && first !== '%') {
-		throw new $SyntaxError('invalid intrinsic syntax, expected opening `%`');
-	}
-	var result = [];
-	$replace(string, rePropName, function (match, number, quote, subString) {
-		result[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;
-	});
-	return result;
-};
-/* end adaptation */
+},{"18":18}],10:[function(require,module,exports){
+"use strict";var GetIntrinsic=require(20),$defineProperty=GetIntrinsic("%Object.defineProperty%",!0)||!1;if($defineProperty)try{$defineProperty({},"a",{value:1})}catch(e){$defineProperty=!1}module.exports=$defineProperty;
 
-var getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {
-	var intrinsicName = name;
-	var alias;
-	if (hasOwn(LEGACY_ALIASES, intrinsicName)) {
-		alias = LEGACY_ALIASES[intrinsicName];
-		intrinsicName = '%' + alias[0] + '%';
-	}
+},{"20":20}],28:[function(require,module,exports){
+"use strict";var GetIntrinsic=require(20),define=require(9),hasDescriptors=require(22)(),gOPD=require(21),$TypeError=require(16),$floor=GetIntrinsic("%Math.floor%");module.exports=function setFunctionLength(e,r){if("function"!=typeof e)throw new $TypeError("`fn` is not a function");if("number"!=typeof r||r<0||r>4294967295||$floor(r)!==r)throw new $TypeError("`length` must be a positive 32-bit integer");var t=arguments.length>2&&!!arguments[2],i=!0,n=!0;if("length"in e&&gOPD){var o=gOPD(e,"length");o&&!o.configurable&&(i=!1),o&&!o.writable&&(n=!1)}return(i||n||!t)&&(hasDescriptors?define(e,"length",r,!0,!0):define(e,"length",r)),e};
 
-	if (hasOwn(INTRINSICS, intrinsicName)) {
-		var value = INTRINSICS[intrinsicName];
-		if (value === needsEval) {
-			value = doEval(intrinsicName);
-		}
-		if (typeof value === 'undefined' && !allowMissing) {
-			throw new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');
-		}
+},{"16":16,"20":20,"21":21,"22":22,"9":9}],9:[function(require,module,exports){
+"use strict";var $defineProperty=require(10),$SyntaxError=require(15),$TypeError=require(16),gopd=require(21);module.exports=function defineDataProperty(e,r,o){if(!e||"object"!=typeof e&&"function"!=typeof e)throw new $TypeError("`obj` must be an object or a function`");if("string"!=typeof r&&"symbol"!=typeof r)throw new $TypeError("`property` must be a string or a symbol`");if(arguments.length>3&&"boolean"!=typeof arguments[3]&&null!==arguments[3])throw new $TypeError("`nonEnumerable`, if provided, must be a boolean or null");if(arguments.length>4&&"boolean"!=typeof arguments[4]&&null!==arguments[4])throw new $TypeError("`nonWritable`, if provided, must be a boolean or null");if(arguments.length>5&&"boolean"!=typeof arguments[5]&&null!==arguments[5])throw new $TypeError("`nonConfigurable`, if provided, must be a boolean or null");if(arguments.length>6&&"boolean"!=typeof arguments[6])throw new $TypeError("`loose`, if provided, must be a boolean");var n=arguments.length>3?arguments[3]:null,l=arguments.length>4?arguments[4]:null,t=arguments.length>5?arguments[5]:null,i=arguments.length>6&&arguments[6],a=!!gopd&&gopd(e,r);if($defineProperty)$defineProperty(e,r,{configurable:null===t&&a?a.configurable:!t,enumerable:null===n&&a?a.enumerable:!n,value:o,writable:null===l&&a?a.writable:!l});else{if(!i&&(n||l||t))throw new $SyntaxError("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");e[r]=o}};
 
-		return {
-			alias: alias,
-			name: intrinsicName,
-			value: value
-		};
-	}
+},{"10":10,"15":15,"16":16,"21":21}],15:[function(require,module,exports){
+"use strict";module.exports=SyntaxError;
 
-	throw new $SyntaxError('intrinsic ' + name + ' does not exist!');
-};
+},{}],21:[function(require,module,exports){
+"use strict";var GetIntrinsic=require(20),$gOPD=GetIntrinsic("%Object.getOwnPropertyDescriptor%",!0);if($gOPD)try{$gOPD([],"length")}catch(t){$gOPD=null}module.exports=$gOPD;
 
-module.exports = function GetIntrinsic(name, allowMissing) {
-	if (typeof name !== 'string' || name.length === 0) {
-		throw new $TypeError('intrinsic name must be a non-empty string');
-	}
-	if (arguments.length > 1 && typeof allowMissing !== 'boolean') {
-		throw new $TypeError('"allowMissing" argument must be a boolean');
-	}
+},{"20":20}],11:[function(require,module,exports){
+"use strict";module.exports=EvalError;
 
-	var parts = stringToPath(name);
-	var intrinsicBaseName = parts.length > 0 ? parts[0] : '';
+},{}],12:[function(require,module,exports){
+"use strict";module.exports=Error;
 
-	var intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);
-	var intrinsicRealName = intrinsic.name;
-	var value = intrinsic.value;
-	var skipFurtherCaching = false;
-
-	var alias = intrinsic.alias;
-	if (alias) {
-		intrinsicBaseName = alias[0];
-		$spliceApply(parts, $concat([0, 1], alias));
-	}
-
-	for (var i = 1, isOwn = true; i < parts.length; i += 1) {
-		var part = parts[i];
-		var first = $strSlice(part, 0, 1);
-		var last = $strSlice(part, -1);
-		if (
-			(
-				(first === '"' || first === "'" || first === '`')
-				|| (last === '"' || last === "'" || last === '`')
-			)
-			&& first !== last
-		) {
-			throw new $SyntaxError('property names with quotes must have matching quotes');
-		}
-		if (part === 'constructor' || !isOwn) {
-			skipFurtherCaching = true;
-		}
-
-		intrinsicBaseName += '.' + part;
-		intrinsicRealName = '%' + intrinsicBaseName + '%';
-
-		if (hasOwn(INTRINSICS, intrinsicRealName)) {
-			value = INTRINSICS[intrinsicRealName];
-		} else if (value != null) {
-			if (!(part in value)) {
-				if (!allowMissing) {
-					throw new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');
-				}
-				return void undefined;
-			}
-			if ($gOPD && (i + 1) >= parts.length) {
-				var desc = $gOPD(value, part);
-				isOwn = !!desc;
-
-				// By convention, when a data property is converted to an accessor
-				// property to emulate a data property that does not suffer from
-				// the override mistake, that accessor's getter is marked with
-				// an `originalValue` property. Here, when we detect this, we
-				// uphold the illusion by pretending to see that original data
-				// property, i.e., returning the value rather than the getter
-				// itself.
-				if (isOwn && 'get' in desc && !('originalValue' in desc.get)) {
-					value = desc.get;
-				} else {
-					value = value[part];
-				}
-			} else {
-				isOwn = hasOwn(value, part);
-				value = value[part];
-			}
-
-			if (isOwn && !skipFurtherCaching) {
-				INTRINSICS[intrinsicRealName] = value;
-			}
-		}
-	}
-	return value;
-};
-
-},{"function-bind":10,"has":14,"has-symbols":12}],12:[function(require,module,exports){
-'use strict';
-
-var origSymbol = typeof Symbol !== 'undefined' && Symbol;
-var hasSymbolSham = require('./shams');
-
-module.exports = function hasNativeSymbols() {
-	if (typeof origSymbol !== 'function') { return false; }
-	if (typeof Symbol !== 'function') { return false; }
-	if (typeof origSymbol('foo') !== 'symbol') { return false; }
-	if (typeof Symbol('bar') !== 'symbol') { return false; }
-
-	return hasSymbolSham();
-};
-
-},{"./shams":13}],13:[function(require,module,exports){
-'use strict';
-
-/* eslint complexity: [2, 18], max-statements: [2, 33] */
-module.exports = function hasSymbols() {
-	if (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }
-	if (typeof Symbol.iterator === 'symbol') { return true; }
-
-	var obj = {};
-	var sym = Symbol('test');
-	var symObj = Object(sym);
-	if (typeof sym === 'string') { return false; }
-
-	if (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }
-	if (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }
-
-	// temp disabled per https://github.com/ljharb/object.assign/issues/17
-	// if (sym instanceof Symbol) { return false; }
-	// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4
-	// if (!(symObj instanceof Symbol)) { return false; }
-
-	// if (typeof Symbol.prototype.toString !== 'function') { return false; }
-	// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }
-
-	var symVal = 42;
-	obj[sym] = symVal;
-	for (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop
-	if (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }
-
-	if (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }
-
-	var syms = Object.getOwnPropertySymbols(obj);
-	if (syms.length !== 1 || syms[0] !== sym) { return false; }
-
-	if (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }
-
-	if (typeof Object.getOwnPropertyDescriptor === 'function') {
-		var descriptor = Object.getOwnPropertyDescriptor(obj, sym);
-		if (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }
-	}
-
-	return true;
-};
+},{}],13:[function(require,module,exports){
+"use strict";module.exports=RangeError;
 
 },{}],14:[function(require,module,exports){
-'use strict';
-
-var bind = require('function-bind');
-
-module.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);
-
-},{"function-bind":10}],15:[function(require,module,exports){
-var hasMap = typeof Map === 'function' && Map.prototype;
-var mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;
-var mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;
-var mapForEach = hasMap && Map.prototype.forEach;
-var hasSet = typeof Set === 'function' && Set.prototype;
-var setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;
-var setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;
-var setForEach = hasSet && Set.prototype.forEach;
-var hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;
-var weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;
-var hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;
-var weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;
-var hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;
-var weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;
-var booleanValueOf = Boolean.prototype.valueOf;
-var objectToString = Object.prototype.toString;
-var functionToString = Function.prototype.toString;
-var $match = String.prototype.match;
-var $slice = String.prototype.slice;
-var $replace = String.prototype.replace;
-var $toUpperCase = String.prototype.toUpperCase;
-var $toLowerCase = String.prototype.toLowerCase;
-var $test = RegExp.prototype.test;
-var $concat = Array.prototype.concat;
-var $join = Array.prototype.join;
-var $arrSlice = Array.prototype.slice;
-var $floor = Math.floor;
-var bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;
-var gOPS = Object.getOwnPropertySymbols;
-var symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;
-var hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';
-// ie, `has-tostringtag/shams
-var toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')
-    ? Symbol.toStringTag
-    : null;
-var isEnumerable = Object.prototype.propertyIsEnumerable;
-
-var gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (
-    [].__proto__ === Array.prototype // eslint-disable-line no-proto
-        ? function (O) {
-            return O.__proto__; // eslint-disable-line no-proto
-        }
-        : null
-);
-
-function addNumericSeparator(num, str) {
-    if (
-        num === Infinity
-        || num === -Infinity
-        || num !== num
-        || (num && num > -1000 && num < 1000)
-        || $test.call(/e/, str)
-    ) {
-        return str;
-    }
-    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;
-    if (typeof num === 'number') {
-        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)
-        if (int !== num) {
-            var intStr = String(int);
-            var dec = $slice.call(str, intStr.length + 1);
-            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');
-        }
-    }
-    return $replace.call(str, sepRegex, '$&_');
-}
-
-var utilInspect = require('./util.inspect');
-var inspectCustom = utilInspect.custom;
-var inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;
-
-module.exports = function inspect_(obj, options, depth, seen) {
-    var opts = options || {};
-
-    if (has(opts, 'quoteStyle') && (opts.quoteStyle !== 'single' && opts.quoteStyle !== 'double')) {
-        throw new TypeError('option "quoteStyle" must be "single" or "double"');
-    }
-    if (
-        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'
-            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity
-            : opts.maxStringLength !== null
-        )
-    ) {
-        throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');
-    }
-    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;
-    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {
-        throw new TypeError('option "customInspect", if provided, must be `true`, `false`, or `\'symbol\'`');
-    }
-
-    if (
-        has(opts, 'indent')
-        && opts.indent !== null
-        && opts.indent !== '\t'
-        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)
-    ) {
-        throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');
-    }
-    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {
-        throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');
-    }
-    var numericSeparator = opts.numericSeparator;
-
-    if (typeof obj === 'undefined') {
-        return 'undefined';
-    }
-    if (obj === null) {
-        return 'null';
-    }
-    if (typeof obj === 'boolean') {
-        return obj ? 'true' : 'false';
-    }
-
-    if (typeof obj === 'string') {
-        return inspectString(obj, opts);
-    }
-    if (typeof obj === 'number') {
-        if (obj === 0) {
-            return Infinity / obj > 0 ? '0' : '-0';
-        }
-        var str = String(obj);
-        return numericSeparator ? addNumericSeparator(obj, str) : str;
-    }
-    if (typeof obj === 'bigint') {
-        var bigIntStr = String(obj) + 'n';
-        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;
-    }
-
-    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;
-    if (typeof depth === 'undefined') { depth = 0; }
-    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {
-        return isArray(obj) ? '[Array]' : '[Object]';
-    }
-
-    var indent = getIndent(opts, depth);
-
-    if (typeof seen === 'undefined') {
-        seen = [];
-    } else if (indexOf(seen, obj) >= 0) {
-        return '[Circular]';
-    }
-
-    function inspect(value, from, noIndent) {
-        if (from) {
-            seen = $arrSlice.call(seen);
-            seen.push(from);
-        }
-        if (noIndent) {
-            var newOpts = {
-                depth: opts.depth
-            };
-            if (has(opts, 'quoteStyle')) {
-                newOpts.quoteStyle = opts.quoteStyle;
-            }
-            return inspect_(value, newOpts, depth + 1, seen);
-        }
-        return inspect_(value, opts, depth + 1, seen);
-    }
-
-    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable
-        var name = nameOf(obj);
-        var keys = arrObjKeys(obj, inspect);
-        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');
-    }
-    if (isSymbol(obj)) {
-        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\(.*\))_[^)]*$/, '$1') : symToString.call(obj);
-        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;
-    }
-    if (isElement(obj)) {
-        var s = '<' + $toLowerCase.call(String(obj.nodeName));
-        var attrs = obj.attributes || [];
-        for (var i = 0; i < attrs.length; i++) {
-            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);
-        }
-        s += '>';
-        if (obj.childNodes && obj.childNodes.length) { s += '...'; }
-        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';
-        return s;
-    }
-    if (isArray(obj)) {
-        if (obj.length === 0) { return '[]'; }
-        var xs = arrObjKeys(obj, inspect);
-        if (indent && !singleLineValues(xs)) {
-            return '[' + indentedJoin(xs, indent) + ']';
-        }
-        return '[ ' + $join.call(xs, ', ') + ' ]';
-    }
-    if (isError(obj)) {
-        var parts = arrObjKeys(obj, inspect);
-        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {
-            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';
-        }
-        if (parts.length === 0) { return '[' + String(obj) + ']'; }
-        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';
-    }
-    if (typeof obj === 'object' && customInspect) {
-        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {
-            return utilInspect(obj, { depth: maxDepth - depth });
-        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {
-            return obj.inspect();
-        }
-    }
-    if (isMap(obj)) {
-        var mapParts = [];
-        mapForEach.call(obj, function (value, key) {
-            mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));
-        });
-        return collectionOf('Map', mapSize.call(obj), mapParts, indent);
-    }
-    if (isSet(obj)) {
-        var setParts = [];
-        setForEach.call(obj, function (value) {
-            setParts.push(inspect(value, obj));
-        });
-        return collectionOf('Set', setSize.call(obj), setParts, indent);
-    }
-    if (isWeakMap(obj)) {
-        return weakCollectionOf('WeakMap');
-    }
-    if (isWeakSet(obj)) {
-        return weakCollectionOf('WeakSet');
-    }
-    if (isWeakRef(obj)) {
-        return weakCollectionOf('WeakRef');
-    }
-    if (isNumber(obj)) {
-        return markBoxed(inspect(Number(obj)));
-    }
-    if (isBigInt(obj)) {
-        return markBoxed(inspect(bigIntValueOf.call(obj)));
-    }
-    if (isBoolean(obj)) {
-        return markBoxed(booleanValueOf.call(obj));
-    }
-    if (isString(obj)) {
-        return markBoxed(inspect(String(obj)));
-    }
-    if (!isDate(obj) && !isRegExp(obj)) {
-        var ys = arrObjKeys(obj, inspect);
-        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;
-        var protoTag = obj instanceof Object ? '' : 'null prototype';
-        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';
-        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';
-        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');
-        if (ys.length === 0) { return tag + '{}'; }
-        if (indent) {
-            return tag + '{' + indentedJoin(ys, indent) + '}';
-        }
-        return tag + '{ ' + $join.call(ys, ', ') + ' }';
-    }
-    return String(obj);
-};
-
-function wrapQuotes(s, defaultStyle, opts) {
-    var quoteChar = (opts.quoteStyle || defaultStyle) === 'double' ? '"' : "'";
-    return quoteChar + s + quoteChar;
-}
-
-function quote(s) {
-    return $replace.call(String(s), /"/g, '&quot;');
-}
-
-function isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
-function isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
-function isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
-function isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
-function isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
-function isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
-function isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }
-
-// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives
-function isSymbol(obj) {
-    if (hasShammedSymbols) {
-        return obj && typeof obj === 'object' && obj instanceof Symbol;
-    }
-    if (typeof obj === 'symbol') {
-        return true;
-    }
-    if (!obj || typeof obj !== 'object' || !symToString) {
-        return false;
-    }
-    try {
-        symToString.call(obj);
-        return true;
-    } catch (e) {}
-    return false;
-}
-
-function isBigInt(obj) {
-    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {
-        return false;
-    }
-    try {
-        bigIntValueOf.call(obj);
-        return true;
-    } catch (e) {}
-    return false;
-}
-
-var hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };
-function has(obj, key) {
-    return hasOwn.call(obj, key);
-}
-
-function toStr(obj) {
-    return objectToString.call(obj);
-}
-
-function nameOf(f) {
-    if (f.name) { return f.name; }
-    var m = $match.call(functionToString.call(f), /^function\s*([\w$]+)/);
-    if (m) { return m[1]; }
-    return null;
-}
-
-function indexOf(xs, x) {
-    if (xs.indexOf) { return xs.indexOf(x); }
-    for (var i = 0, l = xs.length; i < l; i++) {
-        if (xs[i] === x) { return i; }
-    }
-    return -1;
-}
-
-function isMap(x) {
-    if (!mapSize || !x || typeof x !== 'object') {
-        return false;
-    }
-    try {
-        mapSize.call(x);
-        try {
-            setSize.call(x);
-        } catch (s) {
-            return true;
-        }
-        return x instanceof Map; // core-js workaround, pre-v2.5.0
-    } catch (e) {}
-    return false;
-}
-
-function isWeakMap(x) {
-    if (!weakMapHas || !x || typeof x !== 'object') {
-        return false;
-    }
-    try {
-        weakMapHas.call(x, weakMapHas);
-        try {
-            weakSetHas.call(x, weakSetHas);
-        } catch (s) {
-            return true;
-        }
-        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0
-    } catch (e) {}
-    return false;
-}
-
-function isWeakRef(x) {
-    if (!weakRefDeref || !x || typeof x !== 'object') {
-        return false;
-    }
-    try {
-        weakRefDeref.call(x);
-        return true;
-    } catch (e) {}
-    return false;
-}
-
-function isSet(x) {
-    if (!setSize || !x || typeof x !== 'object') {
-        return false;
-    }
-    try {
-        setSize.call(x);
-        try {
-            mapSize.call(x);
-        } catch (m) {
-            return true;
-        }
-        return x instanceof Set; // core-js workaround, pre-v2.5.0
-    } catch (e) {}
-    return false;
-}
-
-function isWeakSet(x) {
-    if (!weakSetHas || !x || typeof x !== 'object') {
-        return false;
-    }
-    try {
-        weakSetHas.call(x, weakSetHas);
-        try {
-            weakMapHas.call(x, weakMapHas);
-        } catch (s) {
-            return true;
-        }
-        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0
-    } catch (e) {}
-    return false;
-}
-
-function isElement(x) {
-    if (!x || typeof x !== 'object') { return false; }
-    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {
-        return true;
-    }
-    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';
-}
-
-function inspectString(str, opts) {
-    if (str.length > opts.maxStringLength) {
-        var remaining = str.length - opts.maxStringLength;
-        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');
-        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;
-    }
-    // eslint-disable-next-line no-control-regex
-    var s = $replace.call($replace.call(str, /(['\\])/g, '\\$1'), /[\x00-\x1f]/g, lowbyte);
-    return wrapQuotes(s, 'single', opts);
-}
-
-function lowbyte(c) {
-    var n = c.charCodeAt(0);
-    var x = {
-        8: 'b',
-        9: 't',
-        10: 'n',
-        12: 'f',
-        13: 'r'
-    }[n];
-    if (x) { return '\\' + x; }
-    return '\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));
-}
-
-function markBoxed(str) {
-    return 'Object(' + str + ')';
-}
-
-function weakCollectionOf(type) {
-    return type + ' { ? }';
-}
-
-function collectionOf(type, size, entries, indent) {
-    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');
-    return type + ' (' + size + ') {' + joinedEntries + '}';
-}
+"use strict";module.exports=ReferenceError;
 
-function singleLineValues(xs) {
-    for (var i = 0; i < xs.length; i++) {
-        if (indexOf(xs[i], '\n') >= 0) {
-            return false;
-        }
-    }
-    return true;
-}
+},{}],17:[function(require,module,exports){
+"use strict";module.exports=URIError;
 
-function getIndent(opts, depth) {
-    var baseIndent;
-    if (opts.indent === '\t') {
-        baseIndent = '\t';
-    } else if (typeof opts.indent === 'number' && opts.indent > 0) {
-        baseIndent = $join.call(Array(opts.indent + 1), ' ');
-    } else {
-        return null;
-    }
-    return {
-        base: baseIndent,
-        prev: $join.call(Array(depth + 1), baseIndent)
-    };
-}
+},{}],18:[function(require,module,exports){
+"use strict";var ERROR_MESSAGE="Function.prototype.bind called on incompatible ",toStr=Object.prototype.toString,max=Math.max,funcType="[object Function]",concatty=function concatty(t,n){for(var r=[],o=0;o<t.length;o+=1)r[o]=t[o];for(var e=0;e<n.length;e+=1)r[e+t.length]=n[e];return r},slicy=function slicy(t,n){for(var r=[],o=n||0,e=0;o<t.length;o+=1,e+=1)r[e]=t[o];return r},joiny=function(t,n){for(var r="",o=0;o<t.length;o+=1)r+=t[o],o+1<t.length&&(r+=n);return r};module.exports=function bind(t){var n=this;if("function"!=typeof n||toStr.apply(n)!==funcType)throw new TypeError(ERROR_MESSAGE+n);for(var r,o=slicy(arguments,1),e=max(0,n.length-o.length),i=[],c=0;c<e;c++)i[c]="$"+c;if(r=Function("binder","return function ("+joiny(i,",")+"){ return binder.apply(this,arguments); }")((function(){if(this instanceof r){var e=n.apply(this,concatty(o,arguments));return Object(e)===e?e:this}return n.apply(t,concatty(o,arguments))})),n.prototype){var p=function Empty(){};p.prototype=n.prototype,r.prototype=new p,p.prototype=null}return r};
 
-function indentedJoin(xs, indent) {
-    if (xs.length === 0) { return ''; }
-    var lineJoiner = '\n' + indent.prev + indent.base;
-    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\n' + indent.prev;
-}
+},{}],23:[function(require,module,exports){
+"use strict";var test={__proto__:null,foo:{}},$Object=Object;module.exports=function hasProto(){return{__proto__:test}.foo===test.foo&&!(test instanceof $Object)};
 
-function arrObjKeys(obj, inspect) {
-    var isArr = isArray(obj);
-    var xs = [];
-    if (isArr) {
-        xs.length = obj.length;
-        for (var i = 0; i < obj.length; i++) {
-            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';
-        }
-    }
-    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];
-    var symMap;
-    if (hasShammedSymbols) {
-        symMap = {};
-        for (var k = 0; k < syms.length; k++) {
-            symMap['$' + syms[k]] = syms[k];
-        }
-    }
+},{}],26:[function(require,module,exports){
+"use strict";var call=Function.prototype.call,$hasOwn=Object.prototype.hasOwnProperty,bind=require(19);module.exports=bind.call(call,$hasOwn);
 
-    for (var key in obj) { // eslint-disable-line no-restricted-syntax
-        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue
-        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue
-        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {
-            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section
-            continue; // eslint-disable-line no-restricted-syntax, no-continue
-        } else if ($test.call(/[^\w$]/, key)) {
-            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));
-        } else {
-            xs.push(key + ': ' + inspect(obj[key], obj));
-        }
-    }
-    if (typeof gOPS === 'function') {
-        for (var j = 0; j < syms.length; j++) {
-            if (isEnumerable.call(obj, syms[j])) {
-                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));
-            }
-        }
-    }
-    return xs;
-}
+},{"19":19}],24:[function(require,module,exports){
+"use strict";var origSymbol="undefined"!=typeof Symbol&&Symbol,hasSymbolSham=require(25);module.exports=function hasNativeSymbols(){return"function"==typeof origSymbol&&"function"==typeof Symbol&&"symbol"==typeof origSymbol("foo")&&"symbol"==typeof Symbol("bar")&&hasSymbolSham()};
 
-},{"./util.inspect":6}],16:[function(require,module,exports){
-'use strict';
+},{"25":25}],22:[function(require,module,exports){
+"use strict";var $defineProperty=require(10),hasPropertyDescriptors=function hasPropertyDescriptors(){return!!$defineProperty};hasPropertyDescriptors.hasArrayLengthDefineBug=function hasArrayLengthDefineBug(){if(!$defineProperty)return null;try{return 1!==$defineProperty([],"length",{value:1}).length}catch(r){return!0}},module.exports=hasPropertyDescriptors;
 
-var GetIntrinsic = require('get-intrinsic');
-var callBound = require('call-bind/callBound');
-var inspect = require('object-inspect');
+},{"10":10}],25:[function(require,module,exports){
+"use strict";module.exports=function hasSymbols(){if("function"!=typeof Symbol||"function"!=typeof Object.getOwnPropertySymbols)return!1;if("symbol"==typeof Symbol.iterator)return!0;var t={},e=Symbol("test"),r=Object(e);if("string"==typeof e)return!1;if("[object Symbol]"!==Object.prototype.toString.call(e))return!1;if("[object Symbol]"!==Object.prototype.toString.call(r))return!1;for(e in t[e]=42,t)return!1;if("function"==typeof Object.keys&&0!==Object.keys(t).length)return!1;if("function"==typeof Object.getOwnPropertyNames&&0!==Object.getOwnPropertyNames(t).length)return!1;var o=Object.getOwnPropertySymbols(t);if(1!==o.length||o[0]!==e)return!1;if(!Object.prototype.propertyIsEnumerable.call(t,e))return!1;if("function"==typeof Object.getOwnPropertyDescriptor){var n=Object.getOwnPropertyDescriptor(t,e);if(42!==n.value||!0!==n.enumerable)return!1}return!0};
 
-var $TypeError = GetIntrinsic('%TypeError%');
-var $WeakMap = GetIntrinsic('%WeakMap%', true);
-var $Map = GetIntrinsic('%Map%', true);
+},{}],27:[function(require,module,exports){
+(function (global){(function (){
+var hasMap="function"==typeof Map&&Map.prototype,mapSizeDescriptor=Object.getOwnPropertyDescriptor&&hasMap?Object.getOwnPropertyDescriptor(Map.prototype,"size"):null,mapSize=hasMap&&mapSizeDescriptor&&"function"==typeof mapSizeDescriptor.get?mapSizeDescriptor.get:null,mapForEach=hasMap&&Map.prototype.forEach,hasSet="function"==typeof Set&&Set.prototype,setSizeDescriptor=Object.getOwnPropertyDescriptor&&hasSet?Object.getOwnPropertyDescriptor(Set.prototype,"size"):null,setSize=hasSet&&setSizeDescriptor&&"function"==typeof setSizeDescriptor.get?setSizeDescriptor.get:null,setForEach=hasSet&&Set.prototype.forEach,hasWeakMap="function"==typeof WeakMap&&WeakMap.prototype,weakMapHas=hasWeakMap?WeakMap.prototype.has:null,hasWeakSet="function"==typeof WeakSet&&WeakSet.prototype,weakSetHas=hasWeakSet?WeakSet.prototype.has:null,hasWeakRef="function"==typeof WeakRef&&WeakRef.prototype,weakRefDeref=hasWeakRef?WeakRef.prototype.deref:null,booleanValueOf=Boolean.prototype.valueOf,objectToString=Object.prototype.toString,functionToString=Function.prototype.toString,$match=String.prototype.match,$slice=String.prototype.slice,$replace=String.prototype.replace,$toUpperCase=String.prototype.toUpperCase,$toLowerCase=String.prototype.toLowerCase,$test=RegExp.prototype.test,$concat=Array.prototype.concat,$join=Array.prototype.join,$arrSlice=Array.prototype.slice,$floor=Math.floor,bigIntValueOf="function"==typeof BigInt?BigInt.prototype.valueOf:null,gOPS=Object.getOwnPropertySymbols,symToString="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?Symbol.prototype.toString:null,hasShammedSymbols="function"==typeof Symbol&&"object"==typeof Symbol.iterator,toStringTag="function"==typeof Symbol&&Symbol.toStringTag&&(Symbol.toStringTag,1)?Symbol.toStringTag:null,isEnumerable=Object.prototype.propertyIsEnumerable,gPO=("function"==typeof Reflect?Reflect.getPrototypeOf:Object.getPrototypeOf)||([].__proto__===Array.prototype?function(t){return t.__proto__}:null);function addNumericSeparator(t,e){if(t===1/0||t===-1/0||t!=t||t&&t>-1e3&&t<1e3||$test.call(/e/,e))return e;var r=/[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;if("number"==typeof t){var n=t<0?-$floor(-t):$floor(t);if(n!==t){var o=String(n),i=$slice.call(e,o.length+1);return $replace.call(o,r,"$&_")+"."+$replace.call($replace.call(i,/([0-9]{3})/g,"$&_"),/_$/,"")}}return $replace.call(e,r,"$&_")}var utilInspect=require(6),inspectCustom=utilInspect.custom,inspectSymbol=isSymbol(inspectCustom)?inspectCustom:null;function wrapQuotes(t,e,r){var n="double"===(r.quoteStyle||e)?'"':"'";return n+t+n}function quote(t){return $replace.call(String(t),/"/g,"&quot;")}function isArray(t){return!("[object Array]"!==toStr(t)||toStringTag&&"object"==typeof t&&toStringTag in t)}function isDate(t){return!("[object Date]"!==toStr(t)||toStringTag&&"object"==typeof t&&toStringTag in t)}function isRegExp(t){return!("[object RegExp]"!==toStr(t)||toStringTag&&"object"==typeof t&&toStringTag in t)}function isError(t){return!("[object Error]"!==toStr(t)||toStringTag&&"object"==typeof t&&toStringTag in t)}function isString(t){return!("[object String]"!==toStr(t)||toStringTag&&"object"==typeof t&&toStringTag in t)}function isNumber(t){return!("[object Number]"!==toStr(t)||toStringTag&&"object"==typeof t&&toStringTag in t)}function isBoolean(t){return!("[object Boolean]"!==toStr(t)||toStringTag&&"object"==typeof t&&toStringTag in t)}function isSymbol(t){if(hasShammedSymbols)return t&&"object"==typeof t&&t instanceof Symbol;if("symbol"==typeof t)return!0;if(!t||"object"!=typeof t||!symToString)return!1;try{return symToString.call(t),!0}catch(t){}return!1}function isBigInt(t){if(!t||"object"!=typeof t||!bigIntValueOf)return!1;try{return bigIntValueOf.call(t),!0}catch(t){}return!1}module.exports=function inspect_(t,e,r,n){var o=e||{};if(has(o,"quoteStyle")&&"single"!==o.quoteStyle&&"double"!==o.quoteStyle)throw new TypeError('option "quoteStyle" must be "single" or "double"');if(has(o,"maxStringLength")&&("number"==typeof o.maxStringLength?o.maxStringLength<0&&o.maxStringLength!==1/0:null!==o.maxStringLength))throw new TypeError('option "maxStringLength", if provided, must be a positive integer, Infinity, or `null`');var i=!has(o,"customInspect")||o.customInspect;if("boolean"!=typeof i&&"symbol"!==i)throw new TypeError("option \"customInspect\", if provided, must be `true`, `false`, or `'symbol'`");if(has(o,"indent")&&null!==o.indent&&"\t"!==o.indent&&!(parseInt(o.indent,10)===o.indent&&o.indent>0))throw new TypeError('option "indent" must be "\\t", an integer > 0, or `null`');if(has(o,"numericSeparator")&&"boolean"!=typeof o.numericSeparator)throw new TypeError('option "numericSeparator", if provided, must be `true` or `false`');var a=o.numericSeparator;if(void 0===t)return"undefined";if(null===t)return"null";if("boolean"==typeof t)return t?"true":"false";if("string"==typeof t)return inspectString(t,o);if("number"==typeof t){if(0===t)return 1/0/t>0?"0":"-0";var c=String(t);return a?addNumericSeparator(t,c):c}if("bigint"==typeof t){var l=String(t)+"n";return a?addNumericSeparator(t,l):l}var p=void 0===o.depth?5:o.depth;if(void 0===r&&(r=0),r>=p&&p>0&&"object"==typeof t)return isArray(t)?"[Array]":"[Object]";var u=getIndent(o,r);if(void 0===n)n=[];else if(indexOf(n,t)>=0)return"[Circular]";function inspect(t,e,i){if(e&&(n=$arrSlice.call(n)).push(e),i){var a={depth:o.depth};return has(o,"quoteStyle")&&(a.quoteStyle=o.quoteStyle),inspect_(t,a,r+1,n)}return inspect_(t,o,r+1,n)}if("function"==typeof t&&!isRegExp(t)){var f=nameOf(t),s=arrObjKeys(t,inspect);return"[Function"+(f?": "+f:" (anonymous)")+"]"+(s.length>0?" { "+$join.call(s,", ")+" }":"")}if(isSymbol(t)){var y=hasShammedSymbols?$replace.call(String(t),/^(Symbol\(.*\))_[^)]*$/,"$1"):symToString.call(t);return"object"!=typeof t||hasShammedSymbols?y:markBoxed(y)}if(isElement(t)){for(var S="<"+$toLowerCase.call(String(t.nodeName)),g=t.attributes||[],b=0;b<g.length;b++)S+=" "+g[b].name+"="+wrapQuotes(quote(g[b].value),"double",o);return S+=">",t.childNodes&&t.childNodes.length&&(S+="..."),S+"</"+$toLowerCase.call(String(t.nodeName))+">"}if(isArray(t)){if(0===t.length)return"[]";var m=arrObjKeys(t,inspect);return u&&!singleLineValues(m)?"["+indentedJoin(m,u)+"]":"[ "+$join.call(m,", ")+" ]"}if(isError(t)){var h=arrObjKeys(t,inspect);return"cause"in Error.prototype||!("cause"in t)||isEnumerable.call(t,"cause")?0===h.length?"["+String(t)+"]":"{ ["+String(t)+"] "+$join.call(h,", ")+" }":"{ ["+String(t)+"] "+$join.call($concat.call("[cause]: "+inspect(t.cause),h),", ")+" }"}if("object"==typeof t&&i){if(inspectSymbol&&"function"==typeof t[inspectSymbol]&&utilInspect)return utilInspect(t,{depth:p-r});if("symbol"!==i&&"function"==typeof t.inspect)return t.inspect()}if(isMap(t)){var d=[];return mapForEach&&mapForEach.call(t,(function(e,r){d.push(inspect(r,t,!0)+" => "+inspect(e,t))})),collectionOf("Map",mapSize.call(t),d,u)}if(isSet(t)){var j=[];return setForEach&&setForEach.call(t,(function(e){j.push(inspect(e,t))})),collectionOf("Set",setSize.call(t),j,u)}if(isWeakMap(t))return weakCollectionOf("WeakMap");if(isWeakSet(t))return weakCollectionOf("WeakSet");if(isWeakRef(t))return weakCollectionOf("WeakRef");if(isNumber(t))return markBoxed(inspect(Number(t)));if(isBigInt(t))return markBoxed(inspect(bigIntValueOf.call(t)));if(isBoolean(t))return markBoxed(booleanValueOf.call(t));if(isString(t))return markBoxed(inspect(String(t)));if("undefined"!=typeof window&&t===window)return"{ [object Window] }";if("undefined"!=typeof globalThis&&t===globalThis||"undefined"!=typeof global&&t===global)return"{ [object globalThis] }";if(!isDate(t)&&!isRegExp(t)){var O=arrObjKeys(t,inspect),w=gPO?gPO(t)===Object.prototype:t instanceof Object||t.constructor===Object,$=t instanceof Object?"":"null prototype",k=!w&&toStringTag&&Object(t)===t&&toStringTag in t?$slice.call(toStr(t),8,-1):$?"Object":"",v=(w||"function"!=typeof t.constructor?"":t.constructor.name?t.constructor.name+" ":"")+(k||$?"["+$join.call($concat.call([],k||[],$||[]),": ")+"] ":"");return 0===O.length?v+"{}":u?v+"{"+indentedJoin(O,u)+"}":v+"{ "+$join.call(O,", ")+" }"}return String(t)};var hasOwn=Object.prototype.hasOwnProperty||function(t){return t in this};function has(t,e){return hasOwn.call(t,e)}function toStr(t){return objectToString.call(t)}function nameOf(t){if(t.name)return t.name;var e=$match.call(functionToString.call(t),/^function\s*([\w$]+)/);return e?e[1]:null}function indexOf(t,e){if(t.indexOf)return t.indexOf(e);for(var r=0,n=t.length;r<n;r++)if(t[r]===e)return r;return-1}function isMap(t){if(!mapSize||!t||"object"!=typeof t)return!1;try{mapSize.call(t);try{setSize.call(t)}catch(t){return!0}return t instanceof Map}catch(t){}return!1}function isWeakMap(t){if(!weakMapHas||!t||"object"!=typeof t)return!1;try{weakMapHas.call(t,weakMapHas);try{weakSetHas.call(t,weakSetHas)}catch(t){return!0}return t instanceof WeakMap}catch(t){}return!1}function isWeakRef(t){if(!weakRefDeref||!t||"object"!=typeof t)return!1;try{return weakRefDeref.call(t),!0}catch(t){}return!1}function isSet(t){if(!setSize||!t||"object"!=typeof t)return!1;try{setSize.call(t);try{mapSize.call(t)}catch(t){return!0}return t instanceof Set}catch(t){}return!1}function isWeakSet(t){if(!weakSetHas||!t||"object"!=typeof t)return!1;try{weakSetHas.call(t,weakSetHas);try{weakMapHas.call(t,weakMapHas)}catch(t){return!0}return t instanceof WeakSet}catch(t){}return!1}function isElement(t){return!(!t||"object"!=typeof t)&&("undefined"!=typeof HTMLElement&&t instanceof HTMLElement||"string"==typeof t.nodeName&&"function"==typeof t.getAttribute)}function inspectString(t,e){if(t.length>e.maxStringLength){var r=t.length-e.maxStringLength,n="... "+r+" more character"+(r>1?"s":"");return inspectString($slice.call(t,0,e.maxStringLength),e)+n}return wrapQuotes($replace.call($replace.call(t,/(['\\])/g,"\\$1"),/[\x00-\x1f]/g,lowbyte),"single",e)}function lowbyte(t){var e=t.charCodeAt(0),r={8:"b",9:"t",10:"n",12:"f",13:"r"}[e];return r?"\\"+r:"\\x"+(e<16?"0":"")+$toUpperCase.call(e.toString(16))}function markBoxed(t){return"Object("+t+")"}function weakCollectionOf(t){return t+" { ? }"}function collectionOf(t,e,r,n){return t+" ("+e+") {"+(n?indentedJoin(r,n):$join.call(r,", "))+"}"}function singleLineValues(t){for(var e=0;e<t.length;e++)if(indexOf(t[e],"\n")>=0)return!1;return!0}function getIndent(t,e){var r;if("\t"===t.indent)r="\t";else{if(!("number"==typeof t.indent&&t.indent>0))return null;r=$join.call(Array(t.indent+1)," ")}return{base:r,prev:$join.call(Array(e+1),r)}}function indentedJoin(t,e){if(0===t.length)return"";var r="\n"+e.prev+e.base;return r+$join.call(t,","+r)+"\n"+e.prev}function arrObjKeys(t,e){var r=isArray(t),n=[];if(r){n.length=t.length;for(var o=0;o<t.length;o++)n[o]=has(t,o)?e(t[o],t):""}var i,a="function"==typeof gOPS?gOPS(t):[];if(hasShammedSymbols){i={};for(var c=0;c<a.length;c++)i["$"+a[c]]=a[c]}for(var l in t)has(t,l)&&(r&&String(Number(l))===l&&l<t.length||hasShammedSymbols&&i["$"+l]instanceof Symbol||($test.call(/[^\w$]/,l)?n.push(e(l,t)+": "+e(t[l],t)):n.push(l+": "+e(t[l],t))));if("function"==typeof gOPS)for(var p=0;p<a.length;p++)isEnumerable.call(t,a[p])&&n.push("["+e(a[p])+"]: "+e(t[a[p]],t));return n}
 
-var $weakMapGet = callBound('WeakMap.prototype.get', true);
-var $weakMapSet = callBound('WeakMap.prototype.set', true);
-var $weakMapHas = callBound('WeakMap.prototype.has', true);
-var $mapGet = callBound('Map.prototype.get', true);
-var $mapSet = callBound('Map.prototype.set', true);
-var $mapHas = callBound('Map.prototype.has', true);
-
-/*
- * This function traverses the list returning the node corresponding to the
- * given key.
- *
- * That node is also moved to the head of the list, so that if it's accessed
- * again we don't need to traverse the whole list. By doing so, all the recently
- * used nodes can be accessed relatively quickly.
- */
-var listGetNode = function (list, key) { // eslint-disable-line consistent-return
-	for (var prev = list, curr; (curr = prev.next) !== null; prev = curr) {
-		if (curr.key === key) {
-			prev.next = curr.next;
-			curr.next = list.next;
-			list.next = curr; // eslint-disable-line no-param-reassign
-			return curr;
-		}
-	}
-};
-
-var listGet = function (objects, key) {
-	var node = listGetNode(objects, key);
-	return node && node.value;
-};
-var listSet = function (objects, key, value) {
-	var node = listGetNode(objects, key);
-	if (node) {
-		node.value = value;
-	} else {
-		// Prepend the new node to the beginning of the list
-		objects.next = { // eslint-disable-line no-param-reassign
-			key: key,
-			next: objects.next,
-			value: value
-		};
-	}
-};
-var listHas = function (objects, key) {
-	return !!listGetNode(objects, key);
-};
-
-module.exports = function getSideChannel() {
-	var $wm;
-	var $m;
-	var $o;
-	var channel = {
-		assert: function (key) {
-			if (!channel.has(key)) {
-				throw new $TypeError('Side channel does not contain ' + inspect(key));
-			}
-		},
-		get: function (key) { // eslint-disable-line consistent-return
-			if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
-				if ($wm) {
-					return $weakMapGet($wm, key);
-				}
-			} else if ($Map) {
-				if ($m) {
-					return $mapGet($m, key);
-				}
-			} else {
-				if ($o) { // eslint-disable-line no-lonely-if
-					return listGet($o, key);
-				}
-			}
-		},
-		has: function (key) {
-			if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
-				if ($wm) {
-					return $weakMapHas($wm, key);
-				}
-			} else if ($Map) {
-				if ($m) {
-					return $mapHas($m, key);
-				}
-			} else {
-				if ($o) { // eslint-disable-line no-lonely-if
-					return listHas($o, key);
-				}
-			}
-			return false;
-		},
-		set: function (key, value) {
-			if ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {
-				if (!$wm) {
-					$wm = new $WeakMap();
-				}
-				$weakMapSet($wm, key, value);
-			} else if ($Map) {
-				if (!$m) {
-					$m = new $Map();
-				}
-				$mapSet($m, key, value);
-			} else {
-				if (!$o) {
-					/*
-					 * Initialize the linked list as an empty node, so that we don't have
-					 * to special-case handling of the first node: we can always refer to
-					 * it as (previous node).next, instead of something like (list).head
-					 */
-					$o = { key: {}, next: null };
-				}
-				listSet($o, key, value);
-			}
-		}
-	};
-	return channel;
-};
-
-},{"call-bind/callBound":7,"get-intrinsic":11,"object-inspect":15}]},{},[2])(2)
+}).call(this)}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
+},{"6":6}]},{},[2])(2)
 });
Index: node_modules/qs/test/parse.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar test = require('tape');\r\nvar qs = require('../');\r\nvar utils = require('../lib/utils');\r\nvar iconv = require('iconv-lite');\r\nvar SaferBuffer = require('safer-buffer').Buffer;\r\n\r\ntest('parse()', function (t) {\r\n    t.test('parses a simple string', function (st) {\r\n        st.deepEqual(qs.parse('0=foo'), { 0: 'foo' });\r\n        st.deepEqual(qs.parse('foo=c++'), { foo: 'c  ' });\r\n        st.deepEqual(qs.parse('a[>=]=23'), { a: { '>=': '23' } });\r\n        st.deepEqual(qs.parse('a[<=>]==23'), { a: { '<=>': '=23' } });\r\n        st.deepEqual(qs.parse('a[==]=23'), { a: { '==': '23' } });\r\n        st.deepEqual(qs.parse('foo', { strictNullHandling: true }), { foo: null });\r\n        st.deepEqual(qs.parse('foo'), { foo: '' });\r\n        st.deepEqual(qs.parse('foo='), { foo: '' });\r\n        st.deepEqual(qs.parse('foo=bar'), { foo: 'bar' });\r\n        st.deepEqual(qs.parse(' foo = bar = baz '), { ' foo ': ' bar = baz ' });\r\n        st.deepEqual(qs.parse('foo=bar=baz'), { foo: 'bar=baz' });\r\n        st.deepEqual(qs.parse('foo=bar&bar=baz'), { foo: 'bar', bar: 'baz' });\r\n        st.deepEqual(qs.parse('foo2=bar2&baz2='), { foo2: 'bar2', baz2: '' });\r\n        st.deepEqual(qs.parse('foo=bar&baz', { strictNullHandling: true }), { foo: 'bar', baz: null });\r\n        st.deepEqual(qs.parse('foo=bar&baz'), { foo: 'bar', baz: '' });\r\n        st.deepEqual(qs.parse('cht=p3&chd=t:60,40&chs=250x100&chl=Hello|World'), {\r\n            cht: 'p3',\r\n            chd: 't:60,40',\r\n            chs: '250x100',\r\n            chl: 'Hello|World'\r\n        });\r\n        st.end();\r\n    });\r\n\r\n    t.test('arrayFormat: brackets allows only explicit arrays', function (st) {\r\n        st.deepEqual(qs.parse('a[]=b&a[]=c', { arrayFormat: 'brackets' }), { a: ['b', 'c'] });\r\n        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { arrayFormat: 'brackets' }), { a: ['b', 'c'] });\r\n        st.deepEqual(qs.parse('a=b,c', { arrayFormat: 'brackets' }), { a: 'b,c' });\r\n        st.deepEqual(qs.parse('a=b&a=c', { arrayFormat: 'brackets' }), { a: ['b', 'c'] });\r\n        st.end();\r\n    });\r\n\r\n    t.test('arrayFormat: indices allows only indexed arrays', function (st) {\r\n        st.deepEqual(qs.parse('a[]=b&a[]=c', { arrayFormat: 'indices' }), { a: ['b', 'c'] });\r\n        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { arrayFormat: 'indices' }), { a: ['b', 'c'] });\r\n        st.deepEqual(qs.parse('a=b,c', { arrayFormat: 'indices' }), { a: 'b,c' });\r\n        st.deepEqual(qs.parse('a=b&a=c', { arrayFormat: 'indices' }), { a: ['b', 'c'] });\r\n        st.end();\r\n    });\r\n\r\n    t.test('arrayFormat: comma allows only comma-separated arrays', function (st) {\r\n        st.deepEqual(qs.parse('a[]=b&a[]=c', { arrayFormat: 'comma' }), { a: ['b', 'c'] });\r\n        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { arrayFormat: 'comma' }), { a: ['b', 'c'] });\r\n        st.deepEqual(qs.parse('a=b,c', { arrayFormat: 'comma' }), { a: 'b,c' });\r\n        st.deepEqual(qs.parse('a=b&a=c', { arrayFormat: 'comma' }), { a: ['b', 'c'] });\r\n        st.end();\r\n    });\r\n\r\n    t.test('arrayFormat: repeat allows only repeated values', function (st) {\r\n        st.deepEqual(qs.parse('a[]=b&a[]=c', { arrayFormat: 'repeat' }), { a: ['b', 'c'] });\r\n        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { arrayFormat: 'repeat' }), { a: ['b', 'c'] });\r\n        st.deepEqual(qs.parse('a=b,c', { arrayFormat: 'repeat' }), { a: 'b,c' });\r\n        st.deepEqual(qs.parse('a=b&a=c', { arrayFormat: 'repeat' }), { a: ['b', 'c'] });\r\n        st.end();\r\n    });\r\n\r\n    t.test('allows enabling dot notation', function (st) {\r\n        st.deepEqual(qs.parse('a.b=c'), { 'a.b': 'c' });\r\n        st.deepEqual(qs.parse('a.b=c', { allowDots: true }), { a: { b: 'c' } });\r\n        st.end();\r\n    });\r\n\r\n    t.deepEqual(qs.parse('a[b]=c'), { a: { b: 'c' } }, 'parses a single nested string');\r\n    t.deepEqual(qs.parse('a[b][c]=d'), { a: { b: { c: 'd' } } }, 'parses a double nested string');\r\n    t.deepEqual(\r\n        qs.parse('a[b][c][d][e][f][g][h]=i'),\r\n        { a: { b: { c: { d: { e: { f: { '[g][h]': 'i' } } } } } } },\r\n        'defaults to a depth of 5'\r\n    );\r\n\r\n    t.test('only parses one level when depth = 1', function (st) {\r\n        st.deepEqual(qs.parse('a[b][c]=d', { depth: 1 }), { a: { b: { '[c]': 'd' } } });\r\n        st.deepEqual(qs.parse('a[b][c][d]=e', { depth: 1 }), { a: { b: { '[c][d]': 'e' } } });\r\n        st.end();\r\n    });\r\n\r\n    t.test('uses original key when depth = 0', function (st) {\r\n        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { depth: 0 }), { 'a[0]': 'b', 'a[1]': 'c' });\r\n        st.deepEqual(qs.parse('a[0][0]=b&a[0][1]=c&a[1]=d&e=2', { depth: 0 }), { 'a[0][0]': 'b', 'a[0][1]': 'c', 'a[1]': 'd', e: '2' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('uses original key when depth = false', function (st) {\r\n        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { depth: false }), { 'a[0]': 'b', 'a[1]': 'c' });\r\n        st.deepEqual(qs.parse('a[0][0]=b&a[0][1]=c&a[1]=d&e=2', { depth: false }), { 'a[0][0]': 'b', 'a[0][1]': 'c', 'a[1]': 'd', e: '2' });\r\n        st.end();\r\n    });\r\n\r\n    t.deepEqual(qs.parse('a=b&a=c'), { a: ['b', 'c'] }, 'parses a simple array');\r\n\r\n    t.test('parses an explicit array', function (st) {\r\n        st.deepEqual(qs.parse('a[]=b'), { a: ['b'] });\r\n        st.deepEqual(qs.parse('a[]=b&a[]=c'), { a: ['b', 'c'] });\r\n        st.deepEqual(qs.parse('a[]=b&a[]=c&a[]=d'), { a: ['b', 'c', 'd'] });\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses a mix of simple and explicit arrays', function (st) {\r\n        st.deepEqual(qs.parse('a=b&a[]=c'), { a: ['b', 'c'] });\r\n        st.deepEqual(qs.parse('a[]=b&a=c'), { a: ['b', 'c'] });\r\n        st.deepEqual(qs.parse('a[0]=b&a=c'), { a: ['b', 'c'] });\r\n        st.deepEqual(qs.parse('a=b&a[0]=c'), { a: ['b', 'c'] });\r\n\r\n        st.deepEqual(qs.parse('a[1]=b&a=c', { arrayLimit: 20 }), { a: ['b', 'c'] });\r\n        st.deepEqual(qs.parse('a[]=b&a=c', { arrayLimit: 0 }), { a: ['b', 'c'] });\r\n        st.deepEqual(qs.parse('a[]=b&a=c'), { a: ['b', 'c'] });\r\n\r\n        st.deepEqual(qs.parse('a=b&a[1]=c', { arrayLimit: 20 }), { a: ['b', 'c'] });\r\n        st.deepEqual(qs.parse('a=b&a[]=c', { arrayLimit: 0 }), { a: ['b', 'c'] });\r\n        st.deepEqual(qs.parse('a=b&a[]=c'), { a: ['b', 'c'] });\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses a nested array', function (st) {\r\n        st.deepEqual(qs.parse('a[b][]=c&a[b][]=d'), { a: { b: ['c', 'd'] } });\r\n        st.deepEqual(qs.parse('a[>=]=25'), { a: { '>=': '25' } });\r\n        st.end();\r\n    });\r\n\r\n    t.test('allows to specify array indices', function (st) {\r\n        st.deepEqual(qs.parse('a[1]=c&a[0]=b&a[2]=d'), { a: ['b', 'c', 'd'] });\r\n        st.deepEqual(qs.parse('a[1]=c&a[0]=b'), { a: ['b', 'c'] });\r\n        st.deepEqual(qs.parse('a[1]=c', { arrayLimit: 20 }), { a: ['c'] });\r\n        st.deepEqual(qs.parse('a[1]=c', { arrayLimit: 0 }), { a: { 1: 'c' } });\r\n        st.deepEqual(qs.parse('a[1]=c'), { a: ['c'] });\r\n        st.end();\r\n    });\r\n\r\n    t.test('limits specific array indices to arrayLimit', function (st) {\r\n        st.deepEqual(qs.parse('a[20]=a', { arrayLimit: 20 }), { a: ['a'] });\r\n        st.deepEqual(qs.parse('a[21]=a', { arrayLimit: 20 }), { a: { 21: 'a' } });\r\n\r\n        st.deepEqual(qs.parse('a[20]=a'), { a: ['a'] });\r\n        st.deepEqual(qs.parse('a[21]=a'), { a: { 21: 'a' } });\r\n        st.end();\r\n    });\r\n\r\n    t.deepEqual(qs.parse('a[12b]=c'), { a: { '12b': 'c' } }, 'supports keys that begin with a number');\r\n\r\n    t.test('supports encoded = signs', function (st) {\r\n        st.deepEqual(qs.parse('he%3Dllo=th%3Dere'), { 'he=llo': 'th=ere' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('is ok with url encoded strings', function (st) {\r\n        st.deepEqual(qs.parse('a[b%20c]=d'), { a: { 'b c': 'd' } });\r\n        st.deepEqual(qs.parse('a[b]=c%20d'), { a: { b: 'c d' } });\r\n        st.end();\r\n    });\r\n\r\n    t.test('allows brackets in the value', function (st) {\r\n        st.deepEqual(qs.parse('pets=[\"tobi\"]'), { pets: '[\"tobi\"]' });\r\n        st.deepEqual(qs.parse('operators=[\">=\", \"<=\"]'), { operators: '[\">=\", \"<=\"]' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('allows empty values', function (st) {\r\n        st.deepEqual(qs.parse(''), {});\r\n        st.deepEqual(qs.parse(null), {});\r\n        st.deepEqual(qs.parse(undefined), {});\r\n        st.end();\r\n    });\r\n\r\n    t.test('transforms arrays to objects', function (st) {\r\n        st.deepEqual(qs.parse('foo[0]=bar&foo[bad]=baz'), { foo: { 0: 'bar', bad: 'baz' } });\r\n        st.deepEqual(qs.parse('foo[bad]=baz&foo[0]=bar'), { foo: { bad: 'baz', 0: 'bar' } });\r\n        st.deepEqual(qs.parse('foo[bad]=baz&foo[]=bar'), { foo: { bad: 'baz', 0: 'bar' } });\r\n        st.deepEqual(qs.parse('foo[]=bar&foo[bad]=baz'), { foo: { 0: 'bar', bad: 'baz' } });\r\n        st.deepEqual(qs.parse('foo[bad]=baz&foo[]=bar&foo[]=foo'), { foo: { bad: 'baz', 0: 'bar', 1: 'foo' } });\r\n        st.deepEqual(qs.parse('foo[0][a]=a&foo[0][b]=b&foo[1][a]=aa&foo[1][b]=bb'), { foo: [{ a: 'a', b: 'b' }, { a: 'aa', b: 'bb' }] });\r\n\r\n        st.deepEqual(qs.parse('a[]=b&a[t]=u&a[hasOwnProperty]=c', { allowPrototypes: false }), { a: { 0: 'b', t: 'u' } });\r\n        st.deepEqual(qs.parse('a[]=b&a[t]=u&a[hasOwnProperty]=c', { allowPrototypes: true }), { a: { 0: 'b', t: 'u', hasOwnProperty: 'c' } });\r\n        st.deepEqual(qs.parse('a[]=b&a[hasOwnProperty]=c&a[x]=y', { allowPrototypes: false }), { a: { 0: 'b', x: 'y' } });\r\n        st.deepEqual(qs.parse('a[]=b&a[hasOwnProperty]=c&a[x]=y', { allowPrototypes: true }), { a: { 0: 'b', hasOwnProperty: 'c', x: 'y' } });\r\n        st.end();\r\n    });\r\n\r\n    t.test('transforms arrays to objects (dot notation)', function (st) {\r\n        st.deepEqual(qs.parse('foo[0].baz=bar&fool.bad=baz', { allowDots: true }), { foo: [{ baz: 'bar' }], fool: { bad: 'baz' } });\r\n        st.deepEqual(qs.parse('foo[0].baz=bar&fool.bad.boo=baz', { allowDots: true }), { foo: [{ baz: 'bar' }], fool: { bad: { boo: 'baz' } } });\r\n        st.deepEqual(qs.parse('foo[0][0].baz=bar&fool.bad=baz', { allowDots: true }), { foo: [[{ baz: 'bar' }]], fool: { bad: 'baz' } });\r\n        st.deepEqual(qs.parse('foo[0].baz[0]=15&foo[0].bar=2', { allowDots: true }), { foo: [{ baz: ['15'], bar: '2' }] });\r\n        st.deepEqual(qs.parse('foo[0].baz[0]=15&foo[0].baz[1]=16&foo[0].bar=2', { allowDots: true }), { foo: [{ baz: ['15', '16'], bar: '2' }] });\r\n        st.deepEqual(qs.parse('foo.bad=baz&foo[0]=bar', { allowDots: true }), { foo: { bad: 'baz', 0: 'bar' } });\r\n        st.deepEqual(qs.parse('foo.bad=baz&foo[]=bar', { allowDots: true }), { foo: { bad: 'baz', 0: 'bar' } });\r\n        st.deepEqual(qs.parse('foo[]=bar&foo.bad=baz', { allowDots: true }), { foo: { 0: 'bar', bad: 'baz' } });\r\n        st.deepEqual(qs.parse('foo.bad=baz&foo[]=bar&foo[]=foo', { allowDots: true }), { foo: { bad: 'baz', 0: 'bar', 1: 'foo' } });\r\n        st.deepEqual(qs.parse('foo[0].a=a&foo[0].b=b&foo[1].a=aa&foo[1].b=bb', { allowDots: true }), { foo: [{ a: 'a', b: 'b' }, { a: 'aa', b: 'bb' }] });\r\n        st.end();\r\n    });\r\n\r\n    t.test('correctly prunes undefined values when converting an array to an object', function (st) {\r\n        st.deepEqual(qs.parse('a[2]=b&a[99999999]=c'), { a: { 2: 'b', 99999999: 'c' } });\r\n        st.end();\r\n    });\r\n\r\n    t.test('supports malformed uri characters', function (st) {\r\n        st.deepEqual(qs.parse('{%:%}', { strictNullHandling: true }), { '{%:%}': null });\r\n        st.deepEqual(qs.parse('{%:%}='), { '{%:%}': '' });\r\n        st.deepEqual(qs.parse('foo=%:%}'), { foo: '%:%}' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('doesn\\'t produce empty keys', function (st) {\r\n        st.deepEqual(qs.parse('_r=1&'), { _r: '1' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('cannot access Object prototype', function (st) {\r\n        qs.parse('constructor[prototype][bad]=bad');\r\n        qs.parse('bad[constructor][prototype][bad]=bad');\r\n        st.equal(typeof Object.prototype.bad, 'undefined');\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses arrays of objects', function (st) {\r\n        st.deepEqual(qs.parse('a[][b]=c'), { a: [{ b: 'c' }] });\r\n        st.deepEqual(qs.parse('a[0][b]=c'), { a: [{ b: 'c' }] });\r\n        st.end();\r\n    });\r\n\r\n    t.test('allows for empty strings in arrays', function (st) {\r\n        st.deepEqual(qs.parse('a[]=b&a[]=&a[]=c'), { a: ['b', '', 'c'] });\r\n\r\n        st.deepEqual(\r\n            qs.parse('a[0]=b&a[1]&a[2]=c&a[19]=', { strictNullHandling: true, arrayLimit: 20 }),\r\n            { a: ['b', null, 'c', ''] },\r\n            'with arrayLimit 20 + array indices: null then empty string works'\r\n        );\r\n        st.deepEqual(\r\n            qs.parse('a[]=b&a[]&a[]=c&a[]=', { strictNullHandling: true, arrayLimit: 0 }),\r\n            { a: ['b', null, 'c', ''] },\r\n            'with arrayLimit 0 + array brackets: null then empty string works'\r\n        );\r\n\r\n        st.deepEqual(\r\n            qs.parse('a[0]=b&a[1]=&a[2]=c&a[19]', { strictNullHandling: true, arrayLimit: 20 }),\r\n            { a: ['b', '', 'c', null] },\r\n            'with arrayLimit 20 + array indices: empty string then null works'\r\n        );\r\n        st.deepEqual(\r\n            qs.parse('a[]=b&a[]=&a[]=c&a[]', { strictNullHandling: true, arrayLimit: 0 }),\r\n            { a: ['b', '', 'c', null] },\r\n            'with arrayLimit 0 + array brackets: empty string then null works'\r\n        );\r\n\r\n        st.deepEqual(\r\n            qs.parse('a[]=&a[]=b&a[]=c'),\r\n            { a: ['', 'b', 'c'] },\r\n            'array brackets: empty strings work'\r\n        );\r\n        st.end();\r\n    });\r\n\r\n    t.test('compacts sparse arrays', function (st) {\r\n        st.deepEqual(qs.parse('a[10]=1&a[2]=2', { arrayLimit: 20 }), { a: ['2', '1'] });\r\n        st.deepEqual(qs.parse('a[1][b][2][c]=1', { arrayLimit: 20 }), { a: [{ b: [{ c: '1' }] }] });\r\n        st.deepEqual(qs.parse('a[1][2][3][c]=1', { arrayLimit: 20 }), { a: [[[{ c: '1' }]]] });\r\n        st.deepEqual(qs.parse('a[1][2][3][c][1]=1', { arrayLimit: 20 }), { a: [[[{ c: ['1'] }]]] });\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses sparse arrays', function (st) {\r\n        /* eslint no-sparse-arrays: 0 */\r\n        st.deepEqual(qs.parse('a[4]=1&a[1]=2', { allowSparse: true }), { a: [, '2', , , '1'] });\r\n        st.deepEqual(qs.parse('a[1][b][2][c]=1', { allowSparse: true }), { a: [, { b: [, , { c: '1' }] }] });\r\n        st.deepEqual(qs.parse('a[1][2][3][c]=1', { allowSparse: true }), { a: [, [, , [, , , { c: '1' }]]] });\r\n        st.deepEqual(qs.parse('a[1][2][3][c][1]=1', { allowSparse: true }), { a: [, [, , [, , , { c: [, '1'] }]]] });\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses semi-parsed strings', function (st) {\r\n        st.deepEqual(qs.parse({ 'a[b]': 'c' }), { a: { b: 'c' } });\r\n        st.deepEqual(qs.parse({ 'a[b]': 'c', 'a[d]': 'e' }), { a: { b: 'c', d: 'e' } });\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses buffers correctly', function (st) {\r\n        var b = SaferBuffer.from('test');\r\n        st.deepEqual(qs.parse({ a: b }), { a: b });\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses jquery-param strings', function (st) {\r\n        // readable = 'filter[0][]=int1&filter[0][]==&filter[0][]=77&filter[]=and&filter[2][]=int2&filter[2][]==&filter[2][]=8'\r\n        var encoded = 'filter%5B0%5D%5B%5D=int1&filter%5B0%5D%5B%5D=%3D&filter%5B0%5D%5B%5D=77&filter%5B%5D=and&filter%5B2%5D%5B%5D=int2&filter%5B2%5D%5B%5D=%3D&filter%5B2%5D%5B%5D=8';\r\n        var expected = { filter: [['int1', '=', '77'], 'and', ['int2', '=', '8']] };\r\n        st.deepEqual(qs.parse(encoded), expected);\r\n        st.end();\r\n    });\r\n\r\n    t.test('continues parsing when no parent is found', function (st) {\r\n        st.deepEqual(qs.parse('[]=&a=b'), { 0: '', a: 'b' });\r\n        st.deepEqual(qs.parse('[]&a=b', { strictNullHandling: true }), { 0: null, a: 'b' });\r\n        st.deepEqual(qs.parse('[foo]=bar'), { foo: 'bar' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('does not error when parsing a very long array', function (st) {\r\n        var str = 'a[]=a';\r\n        while (Buffer.byteLength(str) < 128 * 1024) {\r\n            str = str + '&' + str;\r\n        }\r\n\r\n        st.doesNotThrow(function () {\r\n            qs.parse(str);\r\n        });\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('should not throw when a native prototype has an enumerable property', function (st) {\r\n        Object.prototype.crash = '';\r\n        Array.prototype.crash = '';\r\n        st.doesNotThrow(qs.parse.bind(null, 'a=b'));\r\n        st.deepEqual(qs.parse('a=b'), { a: 'b' });\r\n        st.doesNotThrow(qs.parse.bind(null, 'a[][b]=c'));\r\n        st.deepEqual(qs.parse('a[][b]=c'), { a: [{ b: 'c' }] });\r\n        delete Object.prototype.crash;\r\n        delete Array.prototype.crash;\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses a string with an alternative string delimiter', function (st) {\r\n        st.deepEqual(qs.parse('a=b;c=d', { delimiter: ';' }), { a: 'b', c: 'd' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses a string with an alternative RegExp delimiter', function (st) {\r\n        st.deepEqual(qs.parse('a=b; c=d', { delimiter: /[;,] */ }), { a: 'b', c: 'd' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('does not use non-splittable objects as delimiters', function (st) {\r\n        st.deepEqual(qs.parse('a=b&c=d', { delimiter: true }), { a: 'b', c: 'd' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('allows overriding parameter limit', function (st) {\r\n        st.deepEqual(qs.parse('a=b&c=d', { parameterLimit: 1 }), { a: 'b' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('allows setting the parameter limit to Infinity', function (st) {\r\n        st.deepEqual(qs.parse('a=b&c=d', { parameterLimit: Infinity }), { a: 'b', c: 'd' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('allows overriding array limit', function (st) {\r\n        st.deepEqual(qs.parse('a[0]=b', { arrayLimit: -1 }), { a: { 0: 'b' } });\r\n        st.deepEqual(qs.parse('a[-1]=b', { arrayLimit: -1 }), { a: { '-1': 'b' } });\r\n        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { arrayLimit: 0 }), { a: { 0: 'b', 1: 'c' } });\r\n        st.end();\r\n    });\r\n\r\n    t.test('allows disabling array parsing', function (st) {\r\n        var indices = qs.parse('a[0]=b&a[1]=c', { parseArrays: false });\r\n        st.deepEqual(indices, { a: { 0: 'b', 1: 'c' } });\r\n        st.equal(Array.isArray(indices.a), false, 'parseArrays:false, indices case is not an array');\r\n\r\n        var emptyBrackets = qs.parse('a[]=b', { parseArrays: false });\r\n        st.deepEqual(emptyBrackets, { a: { 0: 'b' } });\r\n        st.equal(Array.isArray(emptyBrackets.a), false, 'parseArrays:false, empty brackets case is not an array');\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('allows for query string prefix', function (st) {\r\n        st.deepEqual(qs.parse('?foo=bar', { ignoreQueryPrefix: true }), { foo: 'bar' });\r\n        st.deepEqual(qs.parse('foo=bar', { ignoreQueryPrefix: true }), { foo: 'bar' });\r\n        st.deepEqual(qs.parse('?foo=bar', { ignoreQueryPrefix: false }), { '?foo': 'bar' });\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses an object', function (st) {\r\n        var input = {\r\n            'user[name]': { 'pop[bob]': 3 },\r\n            'user[email]': null\r\n        };\r\n\r\n        var expected = {\r\n            user: {\r\n                name: { 'pop[bob]': 3 },\r\n                email: null\r\n            }\r\n        };\r\n\r\n        var result = qs.parse(input);\r\n\r\n        st.deepEqual(result, expected);\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses string with comma as array divider', function (st) {\r\n        st.deepEqual(qs.parse('foo=bar,tee', { comma: true }), { foo: ['bar', 'tee'] });\r\n        st.deepEqual(qs.parse('foo[bar]=coffee,tee', { comma: true }), { foo: { bar: ['coffee', 'tee'] } });\r\n        st.deepEqual(qs.parse('foo=', { comma: true }), { foo: '' });\r\n        st.deepEqual(qs.parse('foo', { comma: true }), { foo: '' });\r\n        st.deepEqual(qs.parse('foo', { comma: true, strictNullHandling: true }), { foo: null });\r\n\r\n        // test cases inversed from from stringify tests\r\n        st.deepEqual(qs.parse('a[0]=c'), { a: ['c'] });\r\n        st.deepEqual(qs.parse('a[]=c'), { a: ['c'] });\r\n        st.deepEqual(qs.parse('a[]=c', { comma: true }), { a: ['c'] });\r\n\r\n        st.deepEqual(qs.parse('a[0]=c&a[1]=d'), { a: ['c', 'd'] });\r\n        st.deepEqual(qs.parse('a[]=c&a[]=d'), { a: ['c', 'd'] });\r\n        st.deepEqual(qs.parse('a=c,d', { comma: true }), { a: ['c', 'd'] });\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses values with comma as array divider', function (st) {\r\n        st.deepEqual(qs.parse({ foo: 'bar,tee' }, { comma: false }), { foo: 'bar,tee' });\r\n        st.deepEqual(qs.parse({ foo: 'bar,tee' }, { comma: true }), { foo: ['bar', 'tee'] });\r\n        st.end();\r\n    });\r\n\r\n    t.test('use number decoder, parses string that has one number with comma option enabled', function (st) {\r\n        var decoder = function (str, defaultDecoder, charset, type) {\r\n            if (!isNaN(Number(str))) {\r\n                return parseFloat(str);\r\n            }\r\n            return defaultDecoder(str, defaultDecoder, charset, type);\r\n        };\r\n\r\n        st.deepEqual(qs.parse('foo=1', { comma: true, decoder: decoder }), { foo: 1 });\r\n        st.deepEqual(qs.parse('foo=0', { comma: true, decoder: decoder }), { foo: 0 });\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses brackets holds array of arrays when having two parts of strings with comma as array divider', function (st) {\r\n        st.deepEqual(qs.parse('foo[]=1,2,3&foo[]=4,5,6', { comma: true }), { foo: [['1', '2', '3'], ['4', '5', '6']] });\r\n        st.deepEqual(qs.parse('foo[]=1,2,3&foo[]=', { comma: true }), { foo: [['1', '2', '3'], ''] });\r\n        st.deepEqual(qs.parse('foo[]=1,2,3&foo[]=,', { comma: true }), { foo: [['1', '2', '3'], ['', '']] });\r\n        st.deepEqual(qs.parse('foo[]=1,2,3&foo[]=a', { comma: true }), { foo: [['1', '2', '3'], 'a'] });\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses comma delimited array while having percent-encoded comma treated as normal text', function (st) {\r\n        st.deepEqual(qs.parse('foo=a%2Cb', { comma: true }), { foo: 'a,b' });\r\n        st.deepEqual(qs.parse('foo=a%2C%20b,d', { comma: true }), { foo: ['a, b', 'd'] });\r\n        st.deepEqual(qs.parse('foo=a%2C%20b,c%2C%20d', { comma: true }), { foo: ['a, b', 'c, d'] });\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses an object in dot notation', function (st) {\r\n        var input = {\r\n            'user.name': { 'pop[bob]': 3 },\r\n            'user.email.': null\r\n        };\r\n\r\n        var expected = {\r\n            user: {\r\n                name: { 'pop[bob]': 3 },\r\n                email: null\r\n            }\r\n        };\r\n\r\n        var result = qs.parse(input, { allowDots: true });\r\n\r\n        st.deepEqual(result, expected);\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses an object and not child values', function (st) {\r\n        var input = {\r\n            'user[name]': { 'pop[bob]': { test: 3 } },\r\n            'user[email]': null\r\n        };\r\n\r\n        var expected = {\r\n            user: {\r\n                name: { 'pop[bob]': { test: 3 } },\r\n                email: null\r\n            }\r\n        };\r\n\r\n        var result = qs.parse(input);\r\n\r\n        st.deepEqual(result, expected);\r\n        st.end();\r\n    });\r\n\r\n    t.test('does not blow up when Buffer global is missing', function (st) {\r\n        var tempBuffer = global.Buffer;\r\n        delete global.Buffer;\r\n        var result = qs.parse('a=b&c=d');\r\n        global.Buffer = tempBuffer;\r\n        st.deepEqual(result, { a: 'b', c: 'd' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('does not crash when parsing circular references', function (st) {\r\n        var a = {};\r\n        a.b = a;\r\n\r\n        var parsed;\r\n\r\n        st.doesNotThrow(function () {\r\n            parsed = qs.parse({ 'foo[bar]': 'baz', 'foo[baz]': a });\r\n        });\r\n\r\n        st.equal('foo' in parsed, true, 'parsed has \"foo\" property');\r\n        st.equal('bar' in parsed.foo, true);\r\n        st.equal('baz' in parsed.foo, true);\r\n        st.equal(parsed.foo.bar, 'baz');\r\n        st.deepEqual(parsed.foo.baz, a);\r\n        st.end();\r\n    });\r\n\r\n    t.test('does not crash when parsing deep objects', function (st) {\r\n        var parsed;\r\n        var str = 'foo';\r\n\r\n        for (var i = 0; i < 5000; i++) {\r\n            str += '[p]';\r\n        }\r\n\r\n        str += '=bar';\r\n\r\n        st.doesNotThrow(function () {\r\n            parsed = qs.parse(str, { depth: 5000 });\r\n        });\r\n\r\n        st.equal('foo' in parsed, true, 'parsed has \"foo\" property');\r\n\r\n        var depth = 0;\r\n        var ref = parsed.foo;\r\n        while ((ref = ref.p)) {\r\n            depth += 1;\r\n        }\r\n\r\n        st.equal(depth, 5000, 'parsed is 5000 properties deep');\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses null objects correctly', { skip: !Object.create }, function (st) {\r\n        var a = Object.create(null);\r\n        a.b = 'c';\r\n\r\n        st.deepEqual(qs.parse(a), { b: 'c' });\r\n        var result = qs.parse({ a: a });\r\n        st.equal('a' in result, true, 'result has \"a\" property');\r\n        st.deepEqual(result.a, a);\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses dates correctly', function (st) {\r\n        var now = new Date();\r\n        st.deepEqual(qs.parse({ a: now }), { a: now });\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses regular expressions correctly', function (st) {\r\n        var re = /^test$/;\r\n        st.deepEqual(qs.parse({ a: re }), { a: re });\r\n        st.end();\r\n    });\r\n\r\n    t.test('does not allow overwriting prototype properties', function (st) {\r\n        st.deepEqual(qs.parse('a[hasOwnProperty]=b', { allowPrototypes: false }), {});\r\n        st.deepEqual(qs.parse('hasOwnProperty=b', { allowPrototypes: false }), {});\r\n\r\n        st.deepEqual(\r\n            qs.parse('toString', { allowPrototypes: false }),\r\n            {},\r\n            'bare \"toString\" results in {}'\r\n        );\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('can allow overwriting prototype properties', function (st) {\r\n        st.deepEqual(qs.parse('a[hasOwnProperty]=b', { allowPrototypes: true }), { a: { hasOwnProperty: 'b' } });\r\n        st.deepEqual(qs.parse('hasOwnProperty=b', { allowPrototypes: true }), { hasOwnProperty: 'b' });\r\n\r\n        st.deepEqual(\r\n            qs.parse('toString', { allowPrototypes: true }),\r\n            { toString: '' },\r\n            'bare \"toString\" results in { toString: \"\" }'\r\n        );\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('params starting with a closing bracket', function (st) {\r\n        st.deepEqual(qs.parse(']=toString'), { ']': 'toString' });\r\n        st.deepEqual(qs.parse(']]=toString'), { ']]': 'toString' });\r\n        st.deepEqual(qs.parse(']hello]=toString'), { ']hello]': 'toString' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('params starting with a starting bracket', function (st) {\r\n        st.deepEqual(qs.parse('[=toString'), { '[': 'toString' });\r\n        st.deepEqual(qs.parse('[[=toString'), { '[[': 'toString' });\r\n        st.deepEqual(qs.parse('[hello[=toString'), { '[hello[': 'toString' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('add keys to objects', function (st) {\r\n        st.deepEqual(\r\n            qs.parse('a[b]=c&a=d'),\r\n            { a: { b: 'c', d: true } },\r\n            'can add keys to objects'\r\n        );\r\n\r\n        st.deepEqual(\r\n            qs.parse('a[b]=c&a=toString'),\r\n            { a: { b: 'c' } },\r\n            'can not overwrite prototype'\r\n        );\r\n\r\n        st.deepEqual(\r\n            qs.parse('a[b]=c&a=toString', { allowPrototypes: true }),\r\n            { a: { b: 'c', toString: true } },\r\n            'can overwrite prototype with allowPrototypes true'\r\n        );\r\n\r\n        st.deepEqual(\r\n            qs.parse('a[b]=c&a=toString', { plainObjects: true }),\r\n            { __proto__: null, a: { __proto__: null, b: 'c', toString: true } },\r\n            'can overwrite prototype with plainObjects true'\r\n        );\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('dunder proto is ignored', function (st) {\r\n        var payload = 'categories[__proto__]=login&categories[__proto__]&categories[length]=42';\r\n        var result = qs.parse(payload, { allowPrototypes: true });\r\n\r\n        st.deepEqual(\r\n            result,\r\n            {\r\n                categories: {\r\n                    length: '42'\r\n                }\r\n            },\r\n            'silent [[Prototype]] payload'\r\n        );\r\n\r\n        var plainResult = qs.parse(payload, { allowPrototypes: true, plainObjects: true });\r\n\r\n        st.deepEqual(\r\n            plainResult,\r\n            {\r\n                __proto__: null,\r\n                categories: {\r\n                    __proto__: null,\r\n                    length: '42'\r\n                }\r\n            },\r\n            'silent [[Prototype]] payload: plain objects'\r\n        );\r\n\r\n        var query = qs.parse('categories[__proto__]=cats&categories[__proto__]=dogs&categories[some][json]=toInject', { allowPrototypes: true });\r\n\r\n        st.notOk(Array.isArray(query.categories), 'is not an array');\r\n        st.notOk(query.categories instanceof Array, 'is not instanceof an array');\r\n        st.deepEqual(query.categories, { some: { json: 'toInject' } });\r\n        st.equal(JSON.stringify(query.categories), '{\"some\":{\"json\":\"toInject\"}}', 'stringifies as a non-array');\r\n\r\n        st.deepEqual(\r\n            qs.parse('foo[__proto__][hidden]=value&foo[bar]=stuffs', { allowPrototypes: true }),\r\n            {\r\n                foo: {\r\n                    bar: 'stuffs'\r\n                }\r\n            },\r\n            'hidden values'\r\n        );\r\n\r\n        st.deepEqual(\r\n            qs.parse('foo[__proto__][hidden]=value&foo[bar]=stuffs', { allowPrototypes: true, plainObjects: true }),\r\n            {\r\n                __proto__: null,\r\n                foo: {\r\n                    __proto__: null,\r\n                    bar: 'stuffs'\r\n                }\r\n            },\r\n            'hidden values: plain objects'\r\n        );\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('can return null objects', { skip: !Object.create }, function (st) {\r\n        var expected = Object.create(null);\r\n        expected.a = Object.create(null);\r\n        expected.a.b = 'c';\r\n        expected.a.hasOwnProperty = 'd';\r\n        st.deepEqual(qs.parse('a[b]=c&a[hasOwnProperty]=d', { plainObjects: true }), expected);\r\n        st.deepEqual(qs.parse(null, { plainObjects: true }), Object.create(null));\r\n        var expectedArray = Object.create(null);\r\n        expectedArray.a = Object.create(null);\r\n        expectedArray.a[0] = 'b';\r\n        expectedArray.a.c = 'd';\r\n        st.deepEqual(qs.parse('a[]=b&a[c]=d', { plainObjects: true }), expectedArray);\r\n        st.end();\r\n    });\r\n\r\n    t.test('can parse with custom encoding', function (st) {\r\n        st.deepEqual(qs.parse('%8c%a7=%91%e5%8d%e3%95%7b', {\r\n            decoder: function (str) {\r\n                var reg = /%([0-9A-F]{2})/ig;\r\n                var result = [];\r\n                var parts = reg.exec(str);\r\n                while (parts) {\r\n                    result.push(parseInt(parts[1], 16));\r\n                    parts = reg.exec(str);\r\n                }\r\n                return String(iconv.decode(SaferBuffer.from(result), 'shift_jis'));\r\n            }\r\n        }), { 県: '大阪府' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('receives the default decoder as a second argument', function (st) {\r\n        st.plan(1);\r\n        qs.parse('a', {\r\n            decoder: function (str, defaultDecoder) {\r\n                st.equal(defaultDecoder, utils.decode);\r\n            }\r\n        });\r\n        st.end();\r\n    });\r\n\r\n    t.test('throws error with wrong decoder', function (st) {\r\n        st['throws'](function () {\r\n            qs.parse({}, { decoder: 'string' });\r\n        }, new TypeError('Decoder has to be a function.'));\r\n        st.end();\r\n    });\r\n\r\n    t.test('does not mutate the options argument', function (st) {\r\n        var options = {};\r\n        qs.parse('a[b]=true', options);\r\n        st.deepEqual(options, {});\r\n        st.end();\r\n    });\r\n\r\n    t.test('throws if an invalid charset is specified', function (st) {\r\n        st['throws'](function () {\r\n            qs.parse('a=b', { charset: 'foobar' });\r\n        }, new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined'));\r\n        st.end();\r\n    });\r\n\r\n    t.test('parses an iso-8859-1 string if asked to', function (st) {\r\n        st.deepEqual(qs.parse('%A2=%BD', { charset: 'iso-8859-1' }), { '¢': '½' });\r\n        st.end();\r\n    });\r\n\r\n    var urlEncodedCheckmarkInUtf8 = '%E2%9C%93';\r\n    var urlEncodedOSlashInUtf8 = '%C3%B8';\r\n    var urlEncodedNumCheckmark = '%26%2310003%3B';\r\n    var urlEncodedNumSmiley = '%26%239786%3B';\r\n\r\n    t.test('prefers an utf-8 charset specified by the utf8 sentinel to a default charset of iso-8859-1', function (st) {\r\n        st.deepEqual(qs.parse('utf8=' + urlEncodedCheckmarkInUtf8 + '&' + urlEncodedOSlashInUtf8 + '=' + urlEncodedOSlashInUtf8, { charsetSentinel: true, charset: 'iso-8859-1' }), { ø: 'ø' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('prefers an iso-8859-1 charset specified by the utf8 sentinel to a default charset of utf-8', function (st) {\r\n        st.deepEqual(qs.parse('utf8=' + urlEncodedNumCheckmark + '&' + urlEncodedOSlashInUtf8 + '=' + urlEncodedOSlashInUtf8, { charsetSentinel: true, charset: 'utf-8' }), { 'Ã¸': 'Ã¸' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('does not require the utf8 sentinel to be defined before the parameters whose decoding it affects', function (st) {\r\n        st.deepEqual(qs.parse('a=' + urlEncodedOSlashInUtf8 + '&utf8=' + urlEncodedNumCheckmark, { charsetSentinel: true, charset: 'utf-8' }), { a: 'Ã¸' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('should ignore an utf8 sentinel with an unknown value', function (st) {\r\n        st.deepEqual(qs.parse('utf8=foo&' + urlEncodedOSlashInUtf8 + '=' + urlEncodedOSlashInUtf8, { charsetSentinel: true, charset: 'utf-8' }), { ø: 'ø' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('uses the utf8 sentinel to switch to utf-8 when no default charset is given', function (st) {\r\n        st.deepEqual(qs.parse('utf8=' + urlEncodedCheckmarkInUtf8 + '&' + urlEncodedOSlashInUtf8 + '=' + urlEncodedOSlashInUtf8, { charsetSentinel: true }), { ø: 'ø' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('uses the utf8 sentinel to switch to iso-8859-1 when no default charset is given', function (st) {\r\n        st.deepEqual(qs.parse('utf8=' + urlEncodedNumCheckmark + '&' + urlEncodedOSlashInUtf8 + '=' + urlEncodedOSlashInUtf8, { charsetSentinel: true }), { 'Ã¸': 'Ã¸' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('interprets numeric entities in iso-8859-1 when `interpretNumericEntities`', function (st) {\r\n        st.deepEqual(qs.parse('foo=' + urlEncodedNumSmiley, { charset: 'iso-8859-1', interpretNumericEntities: true }), { foo: '☺' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('handles a custom decoder returning `null`, in the `iso-8859-1` charset, when `interpretNumericEntities`', function (st) {\r\n        st.deepEqual(qs.parse('foo=&bar=' + urlEncodedNumSmiley, {\r\n            charset: 'iso-8859-1',\r\n            decoder: function (str, defaultDecoder, charset) {\r\n                return str ? defaultDecoder(str, defaultDecoder, charset) : null;\r\n            },\r\n            interpretNumericEntities: true\r\n        }), { foo: null, bar: '☺' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('does not interpret numeric entities in iso-8859-1 when `interpretNumericEntities` is absent', function (st) {\r\n        st.deepEqual(qs.parse('foo=' + urlEncodedNumSmiley, { charset: 'iso-8859-1' }), { foo: '&#9786;' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('does not interpret numeric entities when the charset is utf-8, even when `interpretNumericEntities`', function (st) {\r\n        st.deepEqual(qs.parse('foo=' + urlEncodedNumSmiley, { charset: 'utf-8', interpretNumericEntities: true }), { foo: '&#9786;' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('does not interpret %uXXXX syntax in iso-8859-1 mode', function (st) {\r\n        st.deepEqual(qs.parse('%u263A=%u263A', { charset: 'iso-8859-1' }), { '%u263A': '%u263A' });\r\n        st.end();\r\n    });\r\n\r\n    t.test('allows for decoding keys and values differently', function (st) {\r\n        var decoder = function (str, defaultDecoder, charset, type) {\r\n            if (type === 'key') {\r\n                return defaultDecoder(str, defaultDecoder, charset, type).toLowerCase();\r\n            }\r\n            if (type === 'value') {\r\n                return defaultDecoder(str, defaultDecoder, charset, type).toUpperCase();\r\n            }\r\n            throw 'this should never happen! type: ' + type;\r\n        };\r\n\r\n        st.deepEqual(qs.parse('KeY=vAlUe', { decoder: decoder }), { key: 'VALUE' });\r\n        st.end();\r\n    });\r\n\r\n    t.end();\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/qs/test/parse.js b/node_modules/qs/test/parse.js
--- a/node_modules/qs/test/parse.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/qs/test/parse.js	(date 1753913035163)
@@ -1,10 +1,17 @@
 'use strict';
 
 var test = require('tape');
-var qs = require('../');
-var utils = require('../lib/utils');
+var hasPropertyDescriptors = require('has-property-descriptors')();
 var iconv = require('iconv-lite');
+var mockProperty = require('mock-property');
+var hasOverrideMistake = require('has-override-mistake')();
 var SaferBuffer = require('safer-buffer').Buffer;
+var v = require('es-value-fixtures');
+var inspect = require('object-inspect');
+var emptyTestCases = require('./empty-keys-cases').emptyTestCases;
+
+var qs = require('../');
+var utils = require('../lib/utils');
 
 test('parse()', function (t) {
     t.test('parses a simple string', function (st) {
@@ -32,41 +39,156 @@
         st.end();
     });
 
-    t.test('arrayFormat: brackets allows only explicit arrays', function (st) {
-        st.deepEqual(qs.parse('a[]=b&a[]=c', { arrayFormat: 'brackets' }), { a: ['b', 'c'] });
-        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { arrayFormat: 'brackets' }), { a: ['b', 'c'] });
-        st.deepEqual(qs.parse('a=b,c', { arrayFormat: 'brackets' }), { a: 'b,c' });
-        st.deepEqual(qs.parse('a=b&a=c', { arrayFormat: 'brackets' }), { a: ['b', 'c'] });
+    t.test('comma: false', function (st) {
+        st.deepEqual(qs.parse('a[]=b&a[]=c'), { a: ['b', 'c'] });
+        st.deepEqual(qs.parse('a[0]=b&a[1]=c'), { a: ['b', 'c'] });
+        st.deepEqual(qs.parse('a=b,c'), { a: 'b,c' });
+        st.deepEqual(qs.parse('a=b&a=c'), { a: ['b', 'c'] });
         st.end();
     });
 
-    t.test('arrayFormat: indices allows only indexed arrays', function (st) {
-        st.deepEqual(qs.parse('a[]=b&a[]=c', { arrayFormat: 'indices' }), { a: ['b', 'c'] });
-        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { arrayFormat: 'indices' }), { a: ['b', 'c'] });
-        st.deepEqual(qs.parse('a=b,c', { arrayFormat: 'indices' }), { a: 'b,c' });
-        st.deepEqual(qs.parse('a=b&a=c', { arrayFormat: 'indices' }), { a: ['b', 'c'] });
-        st.end();
-    });
-
-    t.test('arrayFormat: comma allows only comma-separated arrays', function (st) {
-        st.deepEqual(qs.parse('a[]=b&a[]=c', { arrayFormat: 'comma' }), { a: ['b', 'c'] });
-        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { arrayFormat: 'comma' }), { a: ['b', 'c'] });
-        st.deepEqual(qs.parse('a=b,c', { arrayFormat: 'comma' }), { a: 'b,c' });
-        st.deepEqual(qs.parse('a=b&a=c', { arrayFormat: 'comma' }), { a: ['b', 'c'] });
-        st.end();
-    });
-
-    t.test('arrayFormat: repeat allows only repeated values', function (st) {
-        st.deepEqual(qs.parse('a[]=b&a[]=c', { arrayFormat: 'repeat' }), { a: ['b', 'c'] });
-        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { arrayFormat: 'repeat' }), { a: ['b', 'c'] });
-        st.deepEqual(qs.parse('a=b,c', { arrayFormat: 'repeat' }), { a: 'b,c' });
-        st.deepEqual(qs.parse('a=b&a=c', { arrayFormat: 'repeat' }), { a: ['b', 'c'] });
+    t.test('comma: true', function (st) {
+        st.deepEqual(qs.parse('a[]=b&a[]=c', { comma: true }), { a: ['b', 'c'] });
+        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { comma: true }), { a: ['b', 'c'] });
+        st.deepEqual(qs.parse('a=b,c', { comma: true }), { a: ['b', 'c'] });
+        st.deepEqual(qs.parse('a=b&a=c', { comma: true }), { a: ['b', 'c'] });
         st.end();
     });
 
     t.test('allows enabling dot notation', function (st) {
         st.deepEqual(qs.parse('a.b=c'), { 'a.b': 'c' });
         st.deepEqual(qs.parse('a.b=c', { allowDots: true }), { a: { b: 'c' } });
+
+        st.end();
+    });
+
+    t.test('decode dot keys correctly', function (st) {
+        st.deepEqual(
+            qs.parse('name%252Eobj.first=John&name%252Eobj.last=Doe', { allowDots: false, decodeDotInKeys: false }),
+            { 'name%2Eobj.first': 'John', 'name%2Eobj.last': 'Doe' },
+            'with allowDots false and decodeDotInKeys false'
+        );
+        st.deepEqual(
+            qs.parse('name.obj.first=John&name.obj.last=Doe', { allowDots: true, decodeDotInKeys: false }),
+            { name: { obj: { first: 'John', last: 'Doe' } } },
+            'with allowDots false and decodeDotInKeys false'
+        );
+        st.deepEqual(
+            qs.parse('name%252Eobj.first=John&name%252Eobj.last=Doe', { allowDots: true, decodeDotInKeys: false }),
+            { 'name%2Eobj': { first: 'John', last: 'Doe' } },
+            'with allowDots true and decodeDotInKeys false'
+        );
+        st.deepEqual(
+            qs.parse('name%252Eobj.first=John&name%252Eobj.last=Doe', { allowDots: true, decodeDotInKeys: true }),
+            { 'name.obj': { first: 'John', last: 'Doe' } },
+            'with allowDots true and decodeDotInKeys true'
+        );
+
+        st.deepEqual(
+            qs.parse(
+                'name%252Eobj%252Esubobject.first%252Egodly%252Ename=John&name%252Eobj%252Esubobject.last=Doe',
+                { allowDots: false, decodeDotInKeys: false }
+            ),
+            { 'name%2Eobj%2Esubobject.first%2Egodly%2Ename': 'John', 'name%2Eobj%2Esubobject.last': 'Doe' },
+            'with allowDots false and decodeDotInKeys false'
+        );
+        st.deepEqual(
+            qs.parse(
+                'name.obj.subobject.first.godly.name=John&name.obj.subobject.last=Doe',
+                { allowDots: true, decodeDotInKeys: false }
+            ),
+            { name: { obj: { subobject: { first: { godly: { name: 'John' } }, last: 'Doe' } } } },
+            'with allowDots true and decodeDotInKeys false'
+        );
+        st.deepEqual(
+            qs.parse(
+                'name%252Eobj%252Esubobject.first%252Egodly%252Ename=John&name%252Eobj%252Esubobject.last=Doe',
+                { allowDots: true, decodeDotInKeys: true }
+            ),
+            { 'name.obj.subobject': { 'first.godly.name': 'John', last: 'Doe' } },
+            'with allowDots true and decodeDotInKeys true'
+        );
+        st.deepEqual(
+            qs.parse('name%252Eobj.first=John&name%252Eobj.last=Doe'),
+            { 'name%2Eobj.first': 'John', 'name%2Eobj.last': 'Doe' },
+            'with allowDots and decodeDotInKeys undefined'
+        );
+
+        st.end();
+    });
+
+    t.test('should decode dot in key of object, and allow enabling dot notation when decodeDotInKeys is set to true and allowDots is undefined', function (st) {
+        st.deepEqual(
+            qs.parse(
+                'name%252Eobj%252Esubobject.first%252Egodly%252Ename=John&name%252Eobj%252Esubobject.last=Doe',
+                { decodeDotInKeys: true }
+            ),
+            { 'name.obj.subobject': { 'first.godly.name': 'John', last: 'Doe' } },
+            'with allowDots undefined and decodeDotInKeys true'
+        );
+
+        st.end();
+    });
+
+    t.test('should throw when decodeDotInKeys is not of type boolean', function (st) {
+        st['throws'](
+            function () { qs.parse('foo[]&bar=baz', { decodeDotInKeys: 'foobar' }); },
+            TypeError
+        );
+
+        st['throws'](
+            function () { qs.parse('foo[]&bar=baz', { decodeDotInKeys: 0 }); },
+            TypeError
+        );
+        st['throws'](
+            function () { qs.parse('foo[]&bar=baz', { decodeDotInKeys: NaN }); },
+            TypeError
+        );
+
+        st['throws'](
+            function () { qs.parse('foo[]&bar=baz', { decodeDotInKeys: null }); },
+            TypeError
+        );
+
+        st.end();
+    });
+
+    t.test('allows empty arrays in obj values', function (st) {
+        st.deepEqual(qs.parse('foo[]&bar=baz', { allowEmptyArrays: true }), { foo: [], bar: 'baz' });
+        st.deepEqual(qs.parse('foo[]&bar=baz', { allowEmptyArrays: false }), { foo: [''], bar: 'baz' });
+
+        st.end();
+    });
+
+    t.test('should throw when allowEmptyArrays is not of type boolean', function (st) {
+        st['throws'](
+            function () { qs.parse('foo[]&bar=baz', { allowEmptyArrays: 'foobar' }); },
+            TypeError
+        );
+
+        st['throws'](
+            function () { qs.parse('foo[]&bar=baz', { allowEmptyArrays: 0 }); },
+            TypeError
+        );
+        st['throws'](
+            function () { qs.parse('foo[]&bar=baz', { allowEmptyArrays: NaN }); },
+            TypeError
+        );
+
+        st['throws'](
+            function () { qs.parse('foo[]&bar=baz', { allowEmptyArrays: null }); },
+            TypeError
+        );
+
+        st.end();
+    });
+
+    t.test('allowEmptyArrays + strictNullHandling', function (st) {
+        st.deepEqual(
+            qs.parse('testEmptyArray[]', { strictNullHandling: true, allowEmptyArrays: true }),
+            { testEmptyArray: [] }
+        );
+
         st.end();
     });
 
@@ -322,14 +444,14 @@
     });
 
     t.test('should not throw when a native prototype has an enumerable property', function (st) {
-        Object.prototype.crash = '';
-        Array.prototype.crash = '';
+        st.intercept(Object.prototype, 'crash', { value: '' });
+        st.intercept(Array.prototype, 'crash', { value: '' });
+
         st.doesNotThrow(qs.parse.bind(null, 'a=b'));
         st.deepEqual(qs.parse('a=b'), { a: 'b' });
         st.doesNotThrow(qs.parse.bind(null, 'a[][b]=c'));
         st.deepEqual(qs.parse('a[][b]=c'), { a: [{ b: 'c' }] });
-        delete Object.prototype.crash;
-        delete Array.prototype.crash;
+
         st.end();
     });
 
@@ -360,8 +482,14 @@
 
     t.test('allows overriding array limit', function (st) {
         st.deepEqual(qs.parse('a[0]=b', { arrayLimit: -1 }), { a: { 0: 'b' } });
+        st.deepEqual(qs.parse('a[0]=b', { arrayLimit: 0 }), { a: ['b'] });
+
         st.deepEqual(qs.parse('a[-1]=b', { arrayLimit: -1 }), { a: { '-1': 'b' } });
+        st.deepEqual(qs.parse('a[-1]=b', { arrayLimit: 0 }), { a: { '-1': 'b' } });
+
+        st.deepEqual(qs.parse('a[0]=b&a[1]=c', { arrayLimit: -1 }), { a: { 0: 'b', 1: 'c' } });
         st.deepEqual(qs.parse('a[0]=b&a[1]=c', { arrayLimit: 0 }), { a: { 0: 'b', 1: 'c' } });
+
         st.end();
     });
 
@@ -452,6 +580,15 @@
         st.end();
     });
 
+    t.test('parses url-encoded brackets holds array of arrays when having two parts of strings with comma as array divider', function (st) {
+        st.deepEqual(qs.parse('foo%5B%5D=1,2,3&foo%5B%5D=4,5,6', { comma: true }), { foo: [['1', '2', '3'], ['4', '5', '6']] });
+        st.deepEqual(qs.parse('foo%5B%5D=1,2,3&foo%5B%5D=', { comma: true }), { foo: [['1', '2', '3'], ''] });
+        st.deepEqual(qs.parse('foo%5B%5D=1,2,3&foo%5B%5D=,', { comma: true }), { foo: [['1', '2', '3'], ['', '']] });
+        st.deepEqual(qs.parse('foo%5B%5D=1,2,3&foo%5B%5D=a', { comma: true }), { foo: [['1', '2', '3'], 'a'] });
+
+        st.end();
+    });
+
     t.test('parses comma delimited array while having percent-encoded comma treated as normal text', function (st) {
         st.deepEqual(qs.parse('foo=a%2Cb', { comma: true }), { foo: 'a,b' });
         st.deepEqual(qs.parse('foo=a%2C%20b,d', { comma: true }), { foo: ['a, b', 'd'] });
@@ -499,10 +636,12 @@
     });
 
     t.test('does not blow up when Buffer global is missing', function (st) {
-        var tempBuffer = global.Buffer;
-        delete global.Buffer;
+        var restore = mockProperty(global, 'Buffer', { 'delete': true });
+
         var result = qs.parse('a=b&c=d');
-        global.Buffer = tempBuffer;
+
+        restore();
+
         st.deepEqual(result, { a: 'b', c: 'd' });
         st.end();
     });
@@ -598,6 +737,34 @@
             'bare "toString" results in { toString: "" }'
         );
 
+        st.end();
+    });
+
+    t.test('does not crash when the global Object prototype is frozen', { skip: !hasPropertyDescriptors || !hasOverrideMistake }, function (st) {
+        // We can't actually freeze the global Object prototype as that will interfere with other tests, and once an object is frozen, it
+        // can't be unfrozen. Instead, we add a new non-writable property to simulate this.
+        st.teardown(mockProperty(Object.prototype, 'frozenProp', { value: 'foo', nonWritable: true, nonEnumerable: true }));
+
+        st['throws'](
+            function () {
+                var obj = {};
+                obj.frozenProp = 'bar';
+            },
+            // node < 6 has a different error message
+            /^TypeError: Cannot assign to read only property 'frozenProp' of (?:object '#<Object>'|#<Object>)/,
+            'regular assignment of an inherited non-writable property throws'
+        );
+
+        var parsed;
+        st.doesNotThrow(
+            function () {
+                parsed = qs.parse('frozenProp', { allowPrototypes: false });
+            },
+            'parsing a nonwritable Object.prototype property does not throw'
+        );
+
+        st.deepEqual(parsed, {}, 'bare "frozenProp" results in {}');
+
         st.end();
     });
 
@@ -853,3 +1020,151 @@
 
     t.end();
 });
+
+test('parses empty keys', function (t) {
+    emptyTestCases.forEach(function (testCase) {
+        t.test('skips empty string key with ' + testCase.input, function (st) {
+            st.deepEqual(qs.parse(testCase.input), testCase.noEmptyKeys);
+
+            st.end();
+        });
+    });
+});
+
+test('`duplicates` option', function (t) {
+    v.nonStrings.concat('not a valid option').forEach(function (invalidOption) {
+        if (typeof invalidOption !== 'undefined') {
+            t['throws'](
+                function () { qs.parse('', { duplicates: invalidOption }); },
+                TypeError,
+                'throws on invalid option: ' + inspect(invalidOption)
+            );
+        }
+    });
+
+    t.deepEqual(
+        qs.parse('foo=bar&foo=baz'),
+        { foo: ['bar', 'baz'] },
+        'duplicates: default, combine'
+    );
+
+    t.deepEqual(
+        qs.parse('foo=bar&foo=baz', { duplicates: 'combine' }),
+        { foo: ['bar', 'baz'] },
+        'duplicates: combine'
+    );
+
+    t.deepEqual(
+        qs.parse('foo=bar&foo=baz', { duplicates: 'first' }),
+        { foo: 'bar' },
+        'duplicates: first'
+    );
+
+    t.deepEqual(
+        qs.parse('foo=bar&foo=baz', { duplicates: 'last' }),
+        { foo: 'baz' },
+        'duplicates: last'
+    );
+
+    t.end();
+});
+
+test('qs strictDepth option - throw cases', function (t) {
+    t.test('throws an exception when depth exceeds the limit with strictDepth: true', function (st) {
+        st['throws'](
+            function () {
+                qs.parse('a[b][c][d][e][f][g][h][i]=j', { depth: 1, strictDepth: true });
+            },
+            RangeError,
+            'Should throw RangeError'
+        );
+        st.end();
+    });
+
+    t.test('throws an exception for multiple nested arrays with strictDepth: true', function (st) {
+        st['throws'](
+            function () {
+                qs.parse('a[0][1][2][3][4]=b', { depth: 3, strictDepth: true });
+            },
+            RangeError,
+            'Should throw RangeError'
+        );
+        st.end();
+    });
+
+    t.test('throws an exception for nested objects and arrays with strictDepth: true', function (st) {
+        st['throws'](
+            function () {
+                qs.parse('a[b][c][0][d][e]=f', { depth: 3, strictDepth: true });
+            },
+            RangeError,
+            'Should throw RangeError'
+        );
+        st.end();
+    });
+
+    t.test('throws an exception for different types of values with strictDepth: true', function (st) {
+        st['throws'](
+            function () {
+                qs.parse('a[b][c][d][e]=true&a[b][c][d][f]=42', { depth: 3, strictDepth: true });
+            },
+            RangeError,
+            'Should throw RangeError'
+        );
+        st.end();
+    });
+
+});
+
+test('qs strictDepth option - non-throw cases', function (t) {
+    t.test('when depth is 0 and strictDepth true, do not throw', function (st) {
+        st.doesNotThrow(
+            function () {
+                qs.parse('a[b][c][d][e]=true&a[b][c][d][f]=42', { depth: 0, strictDepth: true });
+            },
+            RangeError,
+            'Should not throw RangeError'
+        );
+        st.end();
+    });
+
+    t.test('parses successfully when depth is within the limit with strictDepth: true', function (st) {
+        st.doesNotThrow(
+            function () {
+                var result = qs.parse('a[b]=c', { depth: 1, strictDepth: true });
+                st.deepEqual(result, { a: { b: 'c' } }, 'Should parse correctly');
+            }
+        );
+        st.end();
+    });
+
+    t.test('does not throw an exception when depth exceeds the limit with strictDepth: false', function (st) {
+        st.doesNotThrow(
+            function () {
+                var result = qs.parse('a[b][c][d][e][f][g][h][i]=j', { depth: 1 });
+                st.deepEqual(result, { a: { b: { '[c][d][e][f][g][h][i]': 'j' } } }, 'Should parse with depth limit');
+            }
+        );
+        st.end();
+    });
+
+    t.test('parses successfully when depth is within the limit with strictDepth: false', function (st) {
+        st.doesNotThrow(
+            function () {
+                var result = qs.parse('a[b]=c', { depth: 1 });
+                st.deepEqual(result, { a: { b: 'c' } }, 'Should parse correctly');
+            }
+        );
+        st.end();
+    });
+
+    t.test('does not throw when depth is exactly at the limit with strictDepth: true', function (st) {
+        st.doesNotThrow(
+            function () {
+                var result = qs.parse('a[b][c]=d', { depth: 2, strictDepth: true });
+                st.deepEqual(result, { a: { b: { c: 'd' } } }, 'Should parse correctly');
+            }
+        );
+        st.end();
+    });
+});
Index: node_modules/qs/test/stringify.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>'use strict';\r\n\r\nvar test = require('tape');\r\nvar qs = require('../');\r\nvar utils = require('../lib/utils');\r\nvar iconv = require('iconv-lite');\r\nvar SaferBuffer = require('safer-buffer').Buffer;\r\nvar hasSymbols = require('has-symbols');\r\nvar hasBigInt = typeof BigInt === 'function';\r\n\r\ntest('stringify()', function (t) {\r\n    t.test('stringifies a querystring object', function (st) {\r\n        st.equal(qs.stringify({ a: 'b' }), 'a=b');\r\n        st.equal(qs.stringify({ a: 1 }), 'a=1');\r\n        st.equal(qs.stringify({ a: 1, b: 2 }), 'a=1&b=2');\r\n        st.equal(qs.stringify({ a: 'A_Z' }), 'a=A_Z');\r\n        st.equal(qs.stringify({ a: '€' }), 'a=%E2%82%AC');\r\n        st.equal(qs.stringify({ a: '\uE000' }), 'a=%EE%80%80');\r\n        st.equal(qs.stringify({ a: 'א' }), 'a=%D7%90');\r\n        st.equal(qs.stringify({ a: '\uD801\uDC37' }), 'a=%F0%90%90%B7');\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies falsy values', function (st) {\r\n        st.equal(qs.stringify(undefined), '');\r\n        st.equal(qs.stringify(null), '');\r\n        st.equal(qs.stringify(null, { strictNullHandling: true }), '');\r\n        st.equal(qs.stringify(false), '');\r\n        st.equal(qs.stringify(0), '');\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies symbols', { skip: !hasSymbols() }, function (st) {\r\n        st.equal(qs.stringify(Symbol.iterator), '');\r\n        st.equal(qs.stringify([Symbol.iterator]), '0=Symbol%28Symbol.iterator%29');\r\n        st.equal(qs.stringify({ a: Symbol.iterator }), 'a=Symbol%28Symbol.iterator%29');\r\n        st.equal(\r\n            qs.stringify({ a: [Symbol.iterator] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }),\r\n            'a[]=Symbol%28Symbol.iterator%29'\r\n        );\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies bigints', { skip: !hasBigInt }, function (st) {\r\n        var three = BigInt(3);\r\n        var encodeWithN = function (value, defaultEncoder, charset) {\r\n            var result = defaultEncoder(value, defaultEncoder, charset);\r\n            return typeof value === 'bigint' ? result + 'n' : result;\r\n        };\r\n        st.equal(qs.stringify(three), '');\r\n        st.equal(qs.stringify([three]), '0=3');\r\n        st.equal(qs.stringify([three], { encoder: encodeWithN }), '0=3n');\r\n        st.equal(qs.stringify({ a: three }), 'a=3');\r\n        st.equal(qs.stringify({ a: three }, { encoder: encodeWithN }), 'a=3n');\r\n        st.equal(\r\n            qs.stringify({ a: [three] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }),\r\n            'a[]=3'\r\n        );\r\n        st.equal(\r\n            qs.stringify({ a: [three] }, { encodeValuesOnly: true, encoder: encodeWithN, arrayFormat: 'brackets' }),\r\n            'a[]=3n'\r\n        );\r\n        st.end();\r\n    });\r\n\r\n    t.test('adds query prefix', function (st) {\r\n        st.equal(qs.stringify({ a: 'b' }, { addQueryPrefix: true }), '?a=b');\r\n        st.end();\r\n    });\r\n\r\n    t.test('with query prefix, outputs blank string given an empty object', function (st) {\r\n        st.equal(qs.stringify({}, { addQueryPrefix: true }), '');\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies nested falsy values', function (st) {\r\n        st.equal(qs.stringify({ a: { b: { c: null } } }), 'a%5Bb%5D%5Bc%5D=');\r\n        st.equal(qs.stringify({ a: { b: { c: null } } }, { strictNullHandling: true }), 'a%5Bb%5D%5Bc%5D');\r\n        st.equal(qs.stringify({ a: { b: { c: false } } }), 'a%5Bb%5D%5Bc%5D=false');\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies a nested object', function (st) {\r\n        st.equal(qs.stringify({ a: { b: 'c' } }), 'a%5Bb%5D=c');\r\n        st.equal(qs.stringify({ a: { b: { c: { d: 'e' } } } }), 'a%5Bb%5D%5Bc%5D%5Bd%5D=e');\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies a nested object with dots notation', function (st) {\r\n        st.equal(qs.stringify({ a: { b: 'c' } }, { allowDots: true }), 'a.b=c');\r\n        st.equal(qs.stringify({ a: { b: { c: { d: 'e' } } } }, { allowDots: true }), 'a.b.c.d=e');\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies an array value', function (st) {\r\n        st.equal(\r\n            qs.stringify({ a: ['b', 'c', 'd'] }, { arrayFormat: 'indices' }),\r\n            'a%5B0%5D=b&a%5B1%5D=c&a%5B2%5D=d',\r\n            'indices => indices'\r\n        );\r\n        st.equal(\r\n            qs.stringify({ a: ['b', 'c', 'd'] }, { arrayFormat: 'brackets' }),\r\n            'a%5B%5D=b&a%5B%5D=c&a%5B%5D=d',\r\n            'brackets => brackets'\r\n        );\r\n        st.equal(\r\n            qs.stringify({ a: ['b', 'c', 'd'] }, { arrayFormat: 'comma' }),\r\n            'a=b%2Cc%2Cd',\r\n            'comma => comma'\r\n        );\r\n        st.equal(\r\n            qs.stringify({ a: ['b', 'c', 'd'] }),\r\n            'a%5B0%5D=b&a%5B1%5D=c&a%5B2%5D=d',\r\n            'default => indices'\r\n        );\r\n        st.end();\r\n    });\r\n\r\n    t.test('omits nulls when asked', function (st) {\r\n        st.equal(qs.stringify({ a: 'b', c: null }, { skipNulls: true }), 'a=b');\r\n        st.end();\r\n    });\r\n\r\n    t.test('omits nested nulls when asked', function (st) {\r\n        st.equal(qs.stringify({ a: { b: 'c', d: null } }, { skipNulls: true }), 'a%5Bb%5D=c');\r\n        st.end();\r\n    });\r\n\r\n    t.test('omits array indices when asked', function (st) {\r\n        st.equal(qs.stringify({ a: ['b', 'c', 'd'] }, { indices: false }), 'a=b&a=c&a=d');\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies an array value with one item vs multiple items', function (st) {\r\n        st.test('non-array item', function (s2t) {\r\n            s2t.equal(qs.stringify({ a: 'c' }, { encodeValuesOnly: true, arrayFormat: 'indices' }), 'a=c');\r\n            s2t.equal(qs.stringify({ a: 'c' }, { encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a=c');\r\n            s2t.equal(qs.stringify({ a: 'c' }, { encodeValuesOnly: true, arrayFormat: 'comma' }), 'a=c');\r\n            s2t.equal(qs.stringify({ a: 'c' }, { encodeValuesOnly: true }), 'a=c');\r\n\r\n            s2t.end();\r\n        });\r\n\r\n        st.test('array with a single item', function (s2t) {\r\n            s2t.equal(qs.stringify({ a: ['c'] }, { encodeValuesOnly: true, arrayFormat: 'indices' }), 'a[0]=c');\r\n            s2t.equal(qs.stringify({ a: ['c'] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a[]=c');\r\n            s2t.equal(qs.stringify({ a: ['c'] }, { encodeValuesOnly: true, arrayFormat: 'comma' }), 'a=c');\r\n            s2t.equal(qs.stringify({ a: ['c'] }, { encodeValuesOnly: true, arrayFormat: 'comma', commaRoundTrip: true }), 'a[]=c'); // so it parses back as an array\r\n            s2t.equal(qs.stringify({ a: ['c'] }, { encodeValuesOnly: true }), 'a[0]=c');\r\n\r\n            s2t.end();\r\n        });\r\n\r\n        st.test('array with multiple items', function (s2t) {\r\n            s2t.equal(qs.stringify({ a: ['c', 'd'] }, { encodeValuesOnly: true, arrayFormat: 'indices' }), 'a[0]=c&a[1]=d');\r\n            s2t.equal(qs.stringify({ a: ['c', 'd'] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a[]=c&a[]=d');\r\n            s2t.equal(qs.stringify({ a: ['c', 'd'] }, { encodeValuesOnly: true, arrayFormat: 'comma' }), 'a=c,d');\r\n            s2t.equal(qs.stringify({ a: ['c', 'd'] }, { encodeValuesOnly: true }), 'a[0]=c&a[1]=d');\r\n\r\n            s2t.end();\r\n        });\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies a nested array value', function (st) {\r\n        st.equal(qs.stringify({ a: { b: ['c', 'd'] } }, { encodeValuesOnly: true, arrayFormat: 'indices' }), 'a[b][0]=c&a[b][1]=d');\r\n        st.equal(qs.stringify({ a: { b: ['c', 'd'] } }, { encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a[b][]=c&a[b][]=d');\r\n        st.equal(qs.stringify({ a: { b: ['c', 'd'] } }, { encodeValuesOnly: true, arrayFormat: 'comma' }), 'a[b]=c,d');\r\n        st.equal(qs.stringify({ a: { b: ['c', 'd'] } }, { encodeValuesOnly: true }), 'a[b][0]=c&a[b][1]=d');\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies a nested array value with dots notation', function (st) {\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: { b: ['c', 'd'] } },\r\n                { allowDots: true, encodeValuesOnly: true, arrayFormat: 'indices' }\r\n            ),\r\n            'a.b[0]=c&a.b[1]=d',\r\n            'indices: stringifies with dots + indices'\r\n        );\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: { b: ['c', 'd'] } },\r\n                { allowDots: true, encodeValuesOnly: true, arrayFormat: 'brackets' }\r\n            ),\r\n            'a.b[]=c&a.b[]=d',\r\n            'brackets: stringifies with dots + brackets'\r\n        );\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: { b: ['c', 'd'] } },\r\n                { allowDots: true, encodeValuesOnly: true, arrayFormat: 'comma' }\r\n            ),\r\n            'a.b=c,d',\r\n            'comma: stringifies with dots + comma'\r\n        );\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: { b: ['c', 'd'] } },\r\n                { allowDots: true, encodeValuesOnly: true }\r\n            ),\r\n            'a.b[0]=c&a.b[1]=d',\r\n            'default: stringifies with dots + indices'\r\n        );\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies an object inside an array', function (st) {\r\n        st.equal(\r\n            qs.stringify({ a: [{ b: 'c' }] }, { arrayFormat: 'indices' }),\r\n            'a%5B0%5D%5Bb%5D=c', // a[0][b]=c\r\n            'indices => brackets'\r\n        );\r\n        st.equal(\r\n            qs.stringify({ a: [{ b: 'c' }] }, { arrayFormat: 'brackets' }),\r\n            'a%5B%5D%5Bb%5D=c', // a[][b]=c\r\n            'brackets => brackets'\r\n        );\r\n        st.equal(\r\n            qs.stringify({ a: [{ b: 'c' }] }),\r\n            'a%5B0%5D%5Bb%5D=c',\r\n            'default => indices'\r\n        );\r\n\r\n        st.equal(\r\n            qs.stringify({ a: [{ b: { c: [1] } }] }, { arrayFormat: 'indices' }),\r\n            'a%5B0%5D%5Bb%5D%5Bc%5D%5B0%5D=1',\r\n            'indices => indices'\r\n        );\r\n\r\n        st.equal(\r\n            qs.stringify({ a: [{ b: { c: [1] } }] }, { arrayFormat: 'brackets' }),\r\n            'a%5B%5D%5Bb%5D%5Bc%5D%5B%5D=1',\r\n            'brackets => brackets'\r\n        );\r\n\r\n        st.equal(\r\n            qs.stringify({ a: [{ b: { c: [1] } }] }),\r\n            'a%5B0%5D%5Bb%5D%5Bc%5D%5B0%5D=1',\r\n            'default => indices'\r\n        );\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies an array with mixed objects and primitives', function (st) {\r\n        st.equal(\r\n            qs.stringify({ a: [{ b: 1 }, 2, 3] }, { encodeValuesOnly: true, arrayFormat: 'indices' }),\r\n            'a[0][b]=1&a[1]=2&a[2]=3',\r\n            'indices => indices'\r\n        );\r\n        st.equal(\r\n            qs.stringify({ a: [{ b: 1 }, 2, 3] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }),\r\n            'a[][b]=1&a[]=2&a[]=3',\r\n            'brackets => brackets'\r\n        );\r\n        st.equal(\r\n            qs.stringify({ a: [{ b: 1 }, 2, 3] }, { encodeValuesOnly: true, arrayFormat: 'comma' }),\r\n            '???',\r\n            'brackets => brackets',\r\n            { skip: 'TODO: figure out what this should do' }\r\n        );\r\n        st.equal(\r\n            qs.stringify({ a: [{ b: 1 }, 2, 3] }, { encodeValuesOnly: true }),\r\n            'a[0][b]=1&a[1]=2&a[2]=3',\r\n            'default => indices'\r\n        );\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies an object inside an array with dots notation', function (st) {\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: [{ b: 'c' }] },\r\n                { allowDots: true, encode: false, arrayFormat: 'indices' }\r\n            ),\r\n            'a[0].b=c',\r\n            'indices => indices'\r\n        );\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: [{ b: 'c' }] },\r\n                { allowDots: true, encode: false, arrayFormat: 'brackets' }\r\n            ),\r\n            'a[].b=c',\r\n            'brackets => brackets'\r\n        );\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: [{ b: 'c' }] },\r\n                { allowDots: true, encode: false }\r\n            ),\r\n            'a[0].b=c',\r\n            'default => indices'\r\n        );\r\n\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: [{ b: { c: [1] } }] },\r\n                { allowDots: true, encode: false, arrayFormat: 'indices' }\r\n            ),\r\n            'a[0].b.c[0]=1',\r\n            'indices => indices'\r\n        );\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: [{ b: { c: [1] } }] },\r\n                { allowDots: true, encode: false, arrayFormat: 'brackets' }\r\n            ),\r\n            'a[].b.c[]=1',\r\n            'brackets => brackets'\r\n        );\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: [{ b: { c: [1] } }] },\r\n                { allowDots: true, encode: false }\r\n            ),\r\n            'a[0].b.c[0]=1',\r\n            'default => indices'\r\n        );\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('does not omit object keys when indices = false', function (st) {\r\n        st.equal(qs.stringify({ a: [{ b: 'c' }] }, { indices: false }), 'a%5Bb%5D=c');\r\n        st.end();\r\n    });\r\n\r\n    t.test('uses indices notation for arrays when indices=true', function (st) {\r\n        st.equal(qs.stringify({ a: ['b', 'c'] }, { indices: true }), 'a%5B0%5D=b&a%5B1%5D=c');\r\n        st.end();\r\n    });\r\n\r\n    t.test('uses indices notation for arrays when no arrayFormat is specified', function (st) {\r\n        st.equal(qs.stringify({ a: ['b', 'c'] }), 'a%5B0%5D=b&a%5B1%5D=c');\r\n        st.end();\r\n    });\r\n\r\n    t.test('uses indices notation for arrays when no arrayFormat=indices', function (st) {\r\n        st.equal(qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'indices' }), 'a%5B0%5D=b&a%5B1%5D=c');\r\n        st.end();\r\n    });\r\n\r\n    t.test('uses repeat notation for arrays when no arrayFormat=repeat', function (st) {\r\n        st.equal(qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'repeat' }), 'a=b&a=c');\r\n        st.end();\r\n    });\r\n\r\n    t.test('uses brackets notation for arrays when no arrayFormat=brackets', function (st) {\r\n        st.equal(qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'brackets' }), 'a%5B%5D=b&a%5B%5D=c');\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies a complicated object', function (st) {\r\n        st.equal(qs.stringify({ a: { b: 'c', d: 'e' } }), 'a%5Bb%5D=c&a%5Bd%5D=e');\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies an empty value', function (st) {\r\n        st.equal(qs.stringify({ a: '' }), 'a=');\r\n        st.equal(qs.stringify({ a: null }, { strictNullHandling: true }), 'a');\r\n\r\n        st.equal(qs.stringify({ a: '', b: '' }), 'a=&b=');\r\n        st.equal(qs.stringify({ a: null, b: '' }, { strictNullHandling: true }), 'a&b=');\r\n\r\n        st.equal(qs.stringify({ a: { b: '' } }), 'a%5Bb%5D=');\r\n        st.equal(qs.stringify({ a: { b: null } }, { strictNullHandling: true }), 'a%5Bb%5D');\r\n        st.equal(qs.stringify({ a: { b: null } }, { strictNullHandling: false }), 'a%5Bb%5D=');\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies an empty array in different arrayFormat', function (st) {\r\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false }), 'b[0]=&c=c');\r\n        // arrayFormat default\r\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'indices' }), 'b[0]=&c=c');\r\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'brackets' }), 'b[]=&c=c');\r\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'repeat' }), 'b=&c=c');\r\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'comma' }), 'b=&c=c');\r\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'comma', commaRoundTrip: true }), 'b[]=&c=c');\r\n        // with strictNullHandling\r\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'indices', strictNullHandling: true }), 'b[0]&c=c');\r\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'brackets', strictNullHandling: true }), 'b[]&c=c');\r\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'repeat', strictNullHandling: true }), 'b&c=c');\r\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'comma', strictNullHandling: true }), 'b&c=c');\r\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'comma', strictNullHandling: true, commaRoundTrip: true }), 'b[]&c=c');\r\n        // with skipNulls\r\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'indices', skipNulls: true }), 'c=c');\r\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'brackets', skipNulls: true }), 'c=c');\r\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'repeat', skipNulls: true }), 'c=c');\r\n        st.equal(qs.stringify({ a: [], b: [null], c: 'c' }, { encode: false, arrayFormat: 'comma', skipNulls: true }), 'c=c');\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies a null object', { skip: !Object.create }, function (st) {\r\n        var obj = Object.create(null);\r\n        obj.a = 'b';\r\n        st.equal(qs.stringify(obj), 'a=b');\r\n        st.end();\r\n    });\r\n\r\n    t.test('returns an empty string for invalid input', function (st) {\r\n        st.equal(qs.stringify(undefined), '');\r\n        st.equal(qs.stringify(false), '');\r\n        st.equal(qs.stringify(null), '');\r\n        st.equal(qs.stringify(''), '');\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies an object with a null object as a child', { skip: !Object.create }, function (st) {\r\n        var obj = { a: Object.create(null) };\r\n\r\n        obj.a.b = 'c';\r\n        st.equal(qs.stringify(obj), 'a%5Bb%5D=c');\r\n        st.end();\r\n    });\r\n\r\n    t.test('drops keys with a value of undefined', function (st) {\r\n        st.equal(qs.stringify({ a: undefined }), '');\r\n\r\n        st.equal(qs.stringify({ a: { b: undefined, c: null } }, { strictNullHandling: true }), 'a%5Bc%5D');\r\n        st.equal(qs.stringify({ a: { b: undefined, c: null } }, { strictNullHandling: false }), 'a%5Bc%5D=');\r\n        st.equal(qs.stringify({ a: { b: undefined, c: '' } }), 'a%5Bc%5D=');\r\n        st.end();\r\n    });\r\n\r\n    t.test('url encodes values', function (st) {\r\n        st.equal(qs.stringify({ a: 'b c' }), 'a=b%20c');\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies a date', function (st) {\r\n        var now = new Date();\r\n        var str = 'a=' + encodeURIComponent(now.toISOString());\r\n        st.equal(qs.stringify({ a: now }), str);\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies the weird object from qs', function (st) {\r\n        st.equal(qs.stringify({ 'my weird field': '~q1!2\"\\'w$5&7/z8)?' }), 'my%20weird%20field=~q1%212%22%27w%245%267%2Fz8%29%3F');\r\n        st.end();\r\n    });\r\n\r\n    t.test('skips properties that are part of the object prototype', function (st) {\r\n        Object.prototype.crash = 'test';\r\n        st.equal(qs.stringify({ a: 'b' }), 'a=b');\r\n        st.equal(qs.stringify({ a: { b: 'c' } }), 'a%5Bb%5D=c');\r\n        delete Object.prototype.crash;\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies boolean values', function (st) {\r\n        st.equal(qs.stringify({ a: true }), 'a=true');\r\n        st.equal(qs.stringify({ a: { b: true } }), 'a%5Bb%5D=true');\r\n        st.equal(qs.stringify({ b: false }), 'b=false');\r\n        st.equal(qs.stringify({ b: { c: false } }), 'b%5Bc%5D=false');\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies buffer values', function (st) {\r\n        st.equal(qs.stringify({ a: SaferBuffer.from('test') }), 'a=test');\r\n        st.equal(qs.stringify({ a: { b: SaferBuffer.from('test') } }), 'a%5Bb%5D=test');\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies an object using an alternative delimiter', function (st) {\r\n        st.equal(qs.stringify({ a: 'b', c: 'd' }, { delimiter: ';' }), 'a=b;c=d');\r\n        st.end();\r\n    });\r\n\r\n    t.test('does not blow up when Buffer global is missing', function (st) {\r\n        var tempBuffer = global.Buffer;\r\n        delete global.Buffer;\r\n        var result = qs.stringify({ a: 'b', c: 'd' });\r\n        global.Buffer = tempBuffer;\r\n        st.equal(result, 'a=b&c=d');\r\n        st.end();\r\n    });\r\n\r\n    t.test('does not crash when parsing circular references', function (st) {\r\n        var a = {};\r\n        a.b = a;\r\n\r\n        st['throws'](\r\n            function () { qs.stringify({ 'foo[bar]': 'baz', 'foo[baz]': a }); },\r\n            /RangeError: Cyclic object value/,\r\n            'cyclic values throw'\r\n        );\r\n\r\n        var circular = {\r\n            a: 'value'\r\n        };\r\n        circular.a = circular;\r\n        st['throws'](\r\n            function () { qs.stringify(circular); },\r\n            /RangeError: Cyclic object value/,\r\n            'cyclic values throw'\r\n        );\r\n\r\n        var arr = ['a'];\r\n        st.doesNotThrow(\r\n            function () { qs.stringify({ x: arr, y: arr }); },\r\n            'non-cyclic values do not throw'\r\n        );\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('non-circular duplicated references can still work', function (st) {\r\n        var hourOfDay = {\r\n            'function': 'hour_of_day'\r\n        };\r\n\r\n        var p1 = {\r\n            'function': 'gte',\r\n            arguments: [hourOfDay, 0]\r\n        };\r\n        var p2 = {\r\n            'function': 'lte',\r\n            arguments: [hourOfDay, 23]\r\n        };\r\n\r\n        st.equal(\r\n            qs.stringify({ filters: { $and: [p1, p2] } }, { encodeValuesOnly: true }),\r\n            'filters[$and][0][function]=gte&filters[$and][0][arguments][0][function]=hour_of_day&filters[$and][0][arguments][1]=0&filters[$and][1][function]=lte&filters[$and][1][arguments][0][function]=hour_of_day&filters[$and][1][arguments][1]=23'\r\n        );\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('selects properties when filter=array', function (st) {\r\n        st.equal(qs.stringify({ a: 'b' }, { filter: ['a'] }), 'a=b');\r\n        st.equal(qs.stringify({ a: 1 }, { filter: [] }), '');\r\n\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: { b: [1, 2, 3, 4], c: 'd' }, c: 'f' },\r\n                { filter: ['a', 'b', 0, 2], arrayFormat: 'indices' }\r\n            ),\r\n            'a%5Bb%5D%5B0%5D=1&a%5Bb%5D%5B2%5D=3',\r\n            'indices => indices'\r\n        );\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: { b: [1, 2, 3, 4], c: 'd' }, c: 'f' },\r\n                { filter: ['a', 'b', 0, 2], arrayFormat: 'brackets' }\r\n            ),\r\n            'a%5Bb%5D%5B%5D=1&a%5Bb%5D%5B%5D=3',\r\n            'brackets => brackets'\r\n        );\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: { b: [1, 2, 3, 4], c: 'd' }, c: 'f' },\r\n                { filter: ['a', 'b', 0, 2] }\r\n            ),\r\n            'a%5Bb%5D%5B0%5D=1&a%5Bb%5D%5B2%5D=3',\r\n            'default => indices'\r\n        );\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('supports custom representations when filter=function', function (st) {\r\n        var calls = 0;\r\n        var obj = { a: 'b', c: 'd', e: { f: new Date(1257894000000) } };\r\n        var filterFunc = function (prefix, value) {\r\n            calls += 1;\r\n            if (calls === 1) {\r\n                st.equal(prefix, '', 'prefix is empty');\r\n                st.equal(value, obj);\r\n            } else if (prefix === 'c') {\r\n                return void 0;\r\n            } else if (value instanceof Date) {\r\n                st.equal(prefix, 'e[f]');\r\n                return value.getTime();\r\n            }\r\n            return value;\r\n        };\r\n\r\n        st.equal(qs.stringify(obj, { filter: filterFunc }), 'a=b&e%5Bf%5D=1257894000000');\r\n        st.equal(calls, 5);\r\n        st.end();\r\n    });\r\n\r\n    t.test('can disable uri encoding', function (st) {\r\n        st.equal(qs.stringify({ a: 'b' }, { encode: false }), 'a=b');\r\n        st.equal(qs.stringify({ a: { b: 'c' } }, { encode: false }), 'a[b]=c');\r\n        st.equal(qs.stringify({ a: 'b', c: null }, { strictNullHandling: true, encode: false }), 'a=b&c');\r\n        st.end();\r\n    });\r\n\r\n    t.test('can sort the keys', function (st) {\r\n        var sort = function (a, b) {\r\n            return a.localeCompare(b);\r\n        };\r\n        st.equal(qs.stringify({ a: 'c', z: 'y', b: 'f' }, { sort: sort }), 'a=c&b=f&z=y');\r\n        st.equal(qs.stringify({ a: 'c', z: { j: 'a', i: 'b' }, b: 'f' }, { sort: sort }), 'a=c&b=f&z%5Bi%5D=b&z%5Bj%5D=a');\r\n        st.end();\r\n    });\r\n\r\n    t.test('can sort the keys at depth 3 or more too', function (st) {\r\n        var sort = function (a, b) {\r\n            return a.localeCompare(b);\r\n        };\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: 'a', z: { zj: { zjb: 'zjb', zja: 'zja' }, zi: { zib: 'zib', zia: 'zia' } }, b: 'b' },\r\n                { sort: sort, encode: false }\r\n            ),\r\n            'a=a&b=b&z[zi][zia]=zia&z[zi][zib]=zib&z[zj][zja]=zja&z[zj][zjb]=zjb'\r\n        );\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: 'a', z: { zj: { zjb: 'zjb', zja: 'zja' }, zi: { zib: 'zib', zia: 'zia' } }, b: 'b' },\r\n                { sort: null, encode: false }\r\n            ),\r\n            'a=a&z[zj][zjb]=zjb&z[zj][zja]=zja&z[zi][zib]=zib&z[zi][zia]=zia&b=b'\r\n        );\r\n        st.end();\r\n    });\r\n\r\n    t.test('can stringify with custom encoding', function (st) {\r\n        st.equal(qs.stringify({ 県: '大阪府', '': '' }, {\r\n            encoder: function (str) {\r\n                if (str.length === 0) {\r\n                    return '';\r\n                }\r\n                var buf = iconv.encode(str, 'shiftjis');\r\n                var result = [];\r\n                for (var i = 0; i < buf.length; ++i) {\r\n                    result.push(buf.readUInt8(i).toString(16));\r\n                }\r\n                return '%' + result.join('%');\r\n            }\r\n        }), '%8c%a7=%91%e5%8d%e3%95%7b&=');\r\n        st.end();\r\n    });\r\n\r\n    t.test('receives the default encoder as a second argument', function (st) {\r\n        st.plan(2);\r\n        qs.stringify({ a: 1 }, {\r\n            encoder: function (str, defaultEncoder) {\r\n                st.equal(defaultEncoder, utils.encode);\r\n            }\r\n        });\r\n        st.end();\r\n    });\r\n\r\n    t.test('throws error with wrong encoder', function (st) {\r\n        st['throws'](function () {\r\n            qs.stringify({}, { encoder: 'string' });\r\n        }, new TypeError('Encoder has to be a function.'));\r\n        st.end();\r\n    });\r\n\r\n    t.test('can use custom encoder for a buffer object', { skip: typeof Buffer === 'undefined' }, function (st) {\r\n        st.equal(qs.stringify({ a: SaferBuffer.from([1]) }, {\r\n            encoder: function (buffer) {\r\n                if (typeof buffer === 'string') {\r\n                    return buffer;\r\n                }\r\n                return String.fromCharCode(buffer.readUInt8(0) + 97);\r\n            }\r\n        }), 'a=b');\r\n\r\n        st.equal(qs.stringify({ a: SaferBuffer.from('a b') }, {\r\n            encoder: function (buffer) {\r\n                return buffer;\r\n            }\r\n        }), 'a=a b');\r\n        st.end();\r\n    });\r\n\r\n    t.test('serializeDate option', function (st) {\r\n        var date = new Date();\r\n        st.equal(\r\n            qs.stringify({ a: date }),\r\n            'a=' + date.toISOString().replace(/:/g, '%3A'),\r\n            'default is toISOString'\r\n        );\r\n\r\n        var mutatedDate = new Date();\r\n        mutatedDate.toISOString = function () {\r\n            throw new SyntaxError();\r\n        };\r\n        st['throws'](function () {\r\n            mutatedDate.toISOString();\r\n        }, SyntaxError);\r\n        st.equal(\r\n            qs.stringify({ a: mutatedDate }),\r\n            'a=' + Date.prototype.toISOString.call(mutatedDate).replace(/:/g, '%3A'),\r\n            'toISOString works even when method is not locally present'\r\n        );\r\n\r\n        var specificDate = new Date(6);\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: specificDate },\r\n                { serializeDate: function (d) { return d.getTime() * 7; } }\r\n            ),\r\n            'a=42',\r\n            'custom serializeDate function called'\r\n        );\r\n\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: [date] },\r\n                {\r\n                    serializeDate: function (d) { return d.getTime(); },\r\n                    arrayFormat: 'comma'\r\n                }\r\n            ),\r\n            'a=' + date.getTime(),\r\n            'works with arrayFormat comma'\r\n        );\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: [date] },\r\n                {\r\n                    serializeDate: function (d) { return d.getTime(); },\r\n                    arrayFormat: 'comma',\r\n                    commaRoundTrip: true\r\n                }\r\n            ),\r\n            'a%5B%5D=' + date.getTime(),\r\n            'works with arrayFormat comma'\r\n        );\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('RFC 1738 serialization', function (st) {\r\n        st.equal(qs.stringify({ a: 'b c' }, { format: qs.formats.RFC1738 }), 'a=b+c');\r\n        st.equal(qs.stringify({ 'a b': 'c d' }, { format: qs.formats.RFC1738 }), 'a+b=c+d');\r\n        st.equal(qs.stringify({ 'a b': SaferBuffer.from('a b') }, { format: qs.formats.RFC1738 }), 'a+b=a+b');\r\n\r\n        st.equal(qs.stringify({ 'foo(ref)': 'bar' }, { format: qs.formats.RFC1738 }), 'foo(ref)=bar');\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('RFC 3986 spaces serialization', function (st) {\r\n        st.equal(qs.stringify({ a: 'b c' }, { format: qs.formats.RFC3986 }), 'a=b%20c');\r\n        st.equal(qs.stringify({ 'a b': 'c d' }, { format: qs.formats.RFC3986 }), 'a%20b=c%20d');\r\n        st.equal(qs.stringify({ 'a b': SaferBuffer.from('a b') }, { format: qs.formats.RFC3986 }), 'a%20b=a%20b');\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('Backward compatibility to RFC 3986', function (st) {\r\n        st.equal(qs.stringify({ a: 'b c' }), 'a=b%20c');\r\n        st.equal(qs.stringify({ 'a b': SaferBuffer.from('a b') }), 'a%20b=a%20b');\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('Edge cases and unknown formats', function (st) {\r\n        ['UFO1234', false, 1234, null, {}, []].forEach(function (format) {\r\n            st['throws'](\r\n                function () {\r\n                    qs.stringify({ a: 'b c' }, { format: format });\r\n                },\r\n                new TypeError('Unknown format option provided.')\r\n            );\r\n        });\r\n        st.end();\r\n    });\r\n\r\n    t.test('encodeValuesOnly', function (st) {\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: 'b', c: ['d', 'e=f'], f: [['g'], ['h']] },\r\n                { encodeValuesOnly: true }\r\n            ),\r\n            'a=b&c[0]=d&c[1]=e%3Df&f[0][0]=g&f[1][0]=h'\r\n        );\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: 'b', c: ['d', 'e'], f: [['g'], ['h']] }\r\n            ),\r\n            'a=b&c%5B0%5D=d&c%5B1%5D=e&f%5B0%5D%5B0%5D=g&f%5B1%5D%5B0%5D=h'\r\n        );\r\n        st.end();\r\n    });\r\n\r\n    t.test('encodeValuesOnly - strictNullHandling', function (st) {\r\n        st.equal(\r\n            qs.stringify(\r\n                { a: { b: null } },\r\n                { encodeValuesOnly: true, strictNullHandling: true }\r\n            ),\r\n            'a[b]'\r\n        );\r\n        st.end();\r\n    });\r\n\r\n    t.test('throws if an invalid charset is specified', function (st) {\r\n        st['throws'](function () {\r\n            qs.stringify({ a: 'b' }, { charset: 'foobar' });\r\n        }, new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined'));\r\n        st.end();\r\n    });\r\n\r\n    t.test('respects a charset of iso-8859-1', function (st) {\r\n        st.equal(qs.stringify({ æ: 'æ' }, { charset: 'iso-8859-1' }), '%E6=%E6');\r\n        st.end();\r\n    });\r\n\r\n    t.test('encodes unrepresentable chars as numeric entities in iso-8859-1 mode', function (st) {\r\n        st.equal(qs.stringify({ a: '☺' }, { charset: 'iso-8859-1' }), 'a=%26%239786%3B');\r\n        st.end();\r\n    });\r\n\r\n    t.test('respects an explicit charset of utf-8 (the default)', function (st) {\r\n        st.equal(qs.stringify({ a: 'æ' }, { charset: 'utf-8' }), 'a=%C3%A6');\r\n        st.end();\r\n    });\r\n\r\n    t.test('adds the right sentinel when instructed to and the charset is utf-8', function (st) {\r\n        st.equal(qs.stringify({ a: 'æ' }, { charsetSentinel: true, charset: 'utf-8' }), 'utf8=%E2%9C%93&a=%C3%A6');\r\n        st.end();\r\n    });\r\n\r\n    t.test('adds the right sentinel when instructed to and the charset is iso-8859-1', function (st) {\r\n        st.equal(qs.stringify({ a: 'æ' }, { charsetSentinel: true, charset: 'iso-8859-1' }), 'utf8=%26%2310003%3B&a=%E6');\r\n        st.end();\r\n    });\r\n\r\n    t.test('does not mutate the options argument', function (st) {\r\n        var options = {};\r\n        qs.stringify({}, options);\r\n        st.deepEqual(options, {});\r\n        st.end();\r\n    });\r\n\r\n    t.test('strictNullHandling works with custom filter', function (st) {\r\n        var filter = function (prefix, value) {\r\n            return value;\r\n        };\r\n\r\n        var options = { strictNullHandling: true, filter: filter };\r\n        st.equal(qs.stringify({ key: null }, options), 'key');\r\n        st.end();\r\n    });\r\n\r\n    t.test('strictNullHandling works with null serializeDate', function (st) {\r\n        var serializeDate = function () {\r\n            return null;\r\n        };\r\n        var options = { strictNullHandling: true, serializeDate: serializeDate };\r\n        var date = new Date();\r\n        st.equal(qs.stringify({ key: date }, options), 'key');\r\n        st.end();\r\n    });\r\n\r\n    t.test('allows for encoding keys and values differently', function (st) {\r\n        var encoder = function (str, defaultEncoder, charset, type) {\r\n            if (type === 'key') {\r\n                return defaultEncoder(str, defaultEncoder, charset, type).toLowerCase();\r\n            }\r\n            if (type === 'value') {\r\n                return defaultEncoder(str, defaultEncoder, charset, type).toUpperCase();\r\n            }\r\n            throw 'this should never happen! type: ' + type;\r\n        };\r\n\r\n        st.deepEqual(qs.stringify({ KeY: 'vAlUe' }, { encoder: encoder }), 'key=VALUE');\r\n        st.end();\r\n    });\r\n\r\n    t.test('objects inside arrays', function (st) {\r\n        var obj = { a: { b: { c: 'd', e: 'f' } } };\r\n        var withArray = { a: { b: [{ c: 'd', e: 'f' }] } };\r\n\r\n        st.equal(qs.stringify(obj, { encode: false }), 'a[b][c]=d&a[b][e]=f', 'no array, no arrayFormat');\r\n        st.equal(qs.stringify(obj, { encode: false, arrayFormat: 'bracket' }), 'a[b][c]=d&a[b][e]=f', 'no array, bracket');\r\n        st.equal(qs.stringify(obj, { encode: false, arrayFormat: 'indices' }), 'a[b][c]=d&a[b][e]=f', 'no array, indices');\r\n        st.equal(qs.stringify(obj, { encode: false, arrayFormat: 'comma' }), 'a[b][c]=d&a[b][e]=f', 'no array, comma');\r\n\r\n        st.equal(qs.stringify(withArray, { encode: false }), 'a[b][0][c]=d&a[b][0][e]=f', 'array, no arrayFormat');\r\n        st.equal(qs.stringify(withArray, { encode: false, arrayFormat: 'bracket' }), 'a[b][0][c]=d&a[b][0][e]=f', 'array, bracket');\r\n        st.equal(qs.stringify(withArray, { encode: false, arrayFormat: 'indices' }), 'a[b][0][c]=d&a[b][0][e]=f', 'array, indices');\r\n        st.equal(\r\n            qs.stringify(withArray, { encode: false, arrayFormat: 'comma' }),\r\n            '???',\r\n            'array, comma',\r\n            { skip: 'TODO: figure out what this should do' }\r\n        );\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.test('stringifies sparse arrays', function (st) {\r\n        /* eslint no-sparse-arrays: 0 */\r\n        st.equal(qs.stringify({ a: [, '2', , , '1'] }, { encodeValuesOnly: true }), 'a[1]=2&a[4]=1');\r\n        st.equal(qs.stringify({ a: [, { b: [, , { c: '1' }] }] }, { encodeValuesOnly: true }), 'a[1][b][2][c]=1');\r\n        st.equal(qs.stringify({ a: [, [, , [, , , { c: '1' }]]] }, { encodeValuesOnly: true }), 'a[1][2][3][c]=1');\r\n        st.equal(qs.stringify({ a: [, [, , [, , , { c: [, '1'] }]]] }, { encodeValuesOnly: true }), 'a[1][2][3][c][1]=1');\r\n\r\n        st.end();\r\n    });\r\n\r\n    t.end();\r\n});\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/node_modules/qs/test/stringify.js b/node_modules/qs/test/stringify.js
--- a/node_modules/qs/test/stringify.js	(revision 663c809f5834cee0e789680a03cafbeea946d67f)
+++ b/node_modules/qs/test/stringify.js	(date 1753913035190)
@@ -6,6 +6,8 @@
 var iconv = require('iconv-lite');
 var SaferBuffer = require('safer-buffer').Buffer;
 var hasSymbols = require('has-symbols');
+var mockProperty = require('mock-property');
+var emptyTestCases = require('./empty-keys-cases').emptyTestCases;
 var hasBigInt = typeof BigInt === 'function';
 
 test('stringify()', function (t) {
@@ -63,6 +65,138 @@
         st.end();
     });
 
+    t.test('encodes dot in key of object when encodeDotInKeys and allowDots is provided', function (st) {
+        st.equal(
+            qs.stringify(
+                { 'name.obj': { first: 'John', last: 'Doe' } },
+                { allowDots: false, encodeDotInKeys: false }
+            ),
+            'name.obj%5Bfirst%5D=John&name.obj%5Blast%5D=Doe',
+            'with allowDots false and encodeDotInKeys false'
+        );
+        st.equal(
+            qs.stringify(
+                { 'name.obj': { first: 'John', last: 'Doe' } },
+                { allowDots: true, encodeDotInKeys: false }
+            ),
+            'name.obj.first=John&name.obj.last=Doe',
+            'with allowDots true and encodeDotInKeys false'
+        );
+        st.equal(
+            qs.stringify(
+                { 'name.obj': { first: 'John', last: 'Doe' } },
+                { allowDots: false, encodeDotInKeys: true }
+            ),
+            'name%252Eobj%5Bfirst%5D=John&name%252Eobj%5Blast%5D=Doe',
+            'with allowDots false and encodeDotInKeys true'
+        );
+        st.equal(
+            qs.stringify(
+                { 'name.obj': { first: 'John', last: 'Doe' } },
+                { allowDots: true, encodeDotInKeys: true }
+            ),
+            'name%252Eobj.first=John&name%252Eobj.last=Doe',
+            'with allowDots true and encodeDotInKeys true'
+        );
+
+        st.equal(
+            qs.stringify(
+                { 'name.obj.subobject': { 'first.godly.name': 'John', last: 'Doe' } },
+                { allowDots: false, encodeDotInKeys: false }
+            ),
+            'name.obj.subobject%5Bfirst.godly.name%5D=John&name.obj.subobject%5Blast%5D=Doe',
+            'with allowDots false and encodeDotInKeys false'
+        );
+        st.equal(
+            qs.stringify(
+                { 'name.obj.subobject': { 'first.godly.name': 'John', last: 'Doe' } },
+                { allowDots: true, encodeDotInKeys: false }
+            ),
+            'name.obj.subobject.first.godly.name=John&name.obj.subobject.last=Doe',
+            'with allowDots false and encodeDotInKeys false'
+        );
+        st.equal(
+            qs.stringify(
+                { 'name.obj.subobject': { 'first.godly.name': 'John', last: 'Doe' } },
+                { allowDots: false, encodeDotInKeys: true }
+            ),
+            'name%252Eobj%252Esubobject%5Bfirst.godly.name%5D=John&name%252Eobj%252Esubobject%5Blast%5D=Doe',
+            'with allowDots false and encodeDotInKeys true'
+        );
+        st.equal(
+            qs.stringify(
+                { 'name.obj.subobject': { 'first.godly.name': 'John', last: 'Doe' } },
+                { allowDots: true, encodeDotInKeys: true }
+            ),
+            'name%252Eobj%252Esubobject.first%252Egodly%252Ename=John&name%252Eobj%252Esubobject.last=Doe',
+            'with allowDots true and encodeDotInKeys true'
+        );
+
+        st.end();
+    });
+
+    t.test('should encode dot in key of object, and automatically set allowDots to `true` when encodeDotInKeys is true and allowDots in undefined', function (st) {
+        st.equal(
+            qs.stringify(
+                { 'name.obj.subobject': { 'first.godly.name': 'John', last: 'Doe' } },
+                { encodeDotInKeys: true }
+            ),
+            'name%252Eobj%252Esubobject.first%252Egodly%252Ename=John&name%252Eobj%252Esubobject.last=Doe',
+            'with allowDots undefined and encodeDotInKeys true'
+        );
+        st.end();
+    });
+
+    t.test('should encode dot in key of object when encodeDotInKeys and allowDots is provided, and nothing else when encodeValuesOnly is provided', function (st) {
+        st.equal(
+            qs.stringify({ 'name.obj': { first: 'John', last: 'Doe' } }, {
+                encodeDotInKeys: true, allowDots: true, encodeValuesOnly: true
+            }),
+            'name%2Eobj.first=John&name%2Eobj.last=Doe'
+        );
+
+        st.equal(
+            qs.stringify({ 'name.obj.subobject': { 'first.godly.name': 'John', last: 'Doe' } }, { allowDots: true, encodeDotInKeys: true, encodeValuesOnly: true }),
+            'name%2Eobj%2Esubobject.first%2Egodly%2Ename=John&name%2Eobj%2Esubobject.last=Doe'
+        );
+
+        st.end();
+    });
+
+    t.test('throws when `commaRoundTrip` is not a boolean', function (st) {
+        st['throws'](
+            function () { qs.stringify({}, { commaRoundTrip: 'not a boolean' }); },
+            TypeError,
+            'throws when `commaRoundTrip` is not a boolean'
+        );
+
+        st.end();
+    });
+
+    t.test('throws when `encodeDotInKeys` is not a boolean', function (st) {
+        st['throws'](
+            function () { qs.stringify({ a: [], b: 'zz' }, { encodeDotInKeys: 'foobar' }); },
+            TypeError
+        );
+
+        st['throws'](
+            function () { qs.stringify({ a: [], b: 'zz' }, { encodeDotInKeys: 0 }); },
+            TypeError
+        );
+
+        st['throws'](
+            function () { qs.stringify({ a: [], b: 'zz' }, { encodeDotInKeys: NaN }); },
+            TypeError
+        );
+
+        st['throws'](
+            function () { qs.stringify({ a: [], b: 'zz' }, { encodeDotInKeys: null }); },
+            TypeError
+        );
+
+        st.end();
+    });
+
     t.test('adds query prefix', function (st) {
         st.equal(qs.stringify({ a: 'b' }, { addQueryPrefix: true }), '?a=b');
         st.end();
@@ -86,7 +220,7 @@
         st.end();
     });
 
-    t.test('stringifies a nested object with dots notation', function (st) {
+    t.test('`allowDots` option: stringifies a nested object with dots notation', function (st) {
         st.equal(qs.stringify({ a: { b: 'c' } }, { allowDots: true }), 'a.b=c');
         st.equal(qs.stringify({ a: { b: { c: { d: 'e' } } } }, { allowDots: true }), 'a.b.c.d=e');
         st.end();
@@ -108,6 +242,11 @@
             'a=b%2Cc%2Cd',
             'comma => comma'
         );
+        st.equal(
+            qs.stringify({ a: ['b', 'c', 'd'] }, { arrayFormat: 'comma', commaRoundTrip: true }),
+            'a=b%2Cc%2Cd',
+            'comma round trip => comma'
+        );
         st.equal(
             qs.stringify({ a: ['b', 'c', 'd'] }),
             'a%5B0%5D=b&a%5B1%5D=c&a%5B2%5D=d',
@@ -116,18 +255,75 @@
         st.end();
     });
 
-    t.test('omits nulls when asked', function (st) {
-        st.equal(qs.stringify({ a: 'b', c: null }, { skipNulls: true }), 'a=b');
-        st.end();
-    });
+    t.test('`skipNulls` option', function (st) {
+        st.equal(
+            qs.stringify({ a: 'b', c: null }, { skipNulls: true }),
+            'a=b',
+            'omits nulls when asked'
+        );
 
-    t.test('omits nested nulls when asked', function (st) {
-        st.equal(qs.stringify({ a: { b: 'c', d: null } }, { skipNulls: true }), 'a%5Bb%5D=c');
+        st.equal(
+            qs.stringify({ a: { b: 'c', d: null } }, { skipNulls: true }),
+            'a%5Bb%5D=c',
+            'omits nested nulls when asked'
+        );
+
         st.end();
     });
 
     t.test('omits array indices when asked', function (st) {
         st.equal(qs.stringify({ a: ['b', 'c', 'd'] }, { indices: false }), 'a=b&a=c&a=d');
+
+        st.end();
+    });
+
+    t.test('omits object key/value pair when value is empty array', function (st) {
+        st.equal(qs.stringify({ a: [], b: 'zz' }), 'b=zz');
+
+        st.end();
+    });
+
+    t.test('should not omit object key/value pair when value is empty array and when asked', function (st) {
+        st.equal(qs.stringify({ a: [], b: 'zz' }), 'b=zz');
+        st.equal(qs.stringify({ a: [], b: 'zz' }, { allowEmptyArrays: false }), 'b=zz');
+        st.equal(qs.stringify({ a: [], b: 'zz' }, { allowEmptyArrays: true }), 'a[]&b=zz');
+
+        st.end();
+    });
+
+    t.test('should throw when allowEmptyArrays is not of type boolean', function (st) {
+        st['throws'](
+            function () { qs.stringify({ a: [], b: 'zz' }, { allowEmptyArrays: 'foobar' }); },
+            TypeError
+        );
+
+        st['throws'](
+            function () { qs.stringify({ a: [], b: 'zz' }, { allowEmptyArrays: 0 }); },
+            TypeError
+        );
+
+        st['throws'](
+            function () { qs.stringify({ a: [], b: 'zz' }, { allowEmptyArrays: NaN }); },
+            TypeError
+        );
+
+        st['throws'](
+            function () { qs.stringify({ a: [], b: 'zz' }, { allowEmptyArrays: null }); },
+            TypeError
+        );
+
+        st.end();
+    });
+
+    t.test('allowEmptyArrays + strictNullHandling', function (st) {
+        st.equal(
+            qs.stringify(
+                { testEmptyArray: [] },
+                { strictNullHandling: true, allowEmptyArrays: true }
+            ),
+            'testEmptyArray[]'
+        );
+
         st.end();
     });
 
@@ -155,11 +351,22 @@
             s2t.equal(qs.stringify({ a: ['c', 'd'] }, { encodeValuesOnly: true, arrayFormat: 'indices' }), 'a[0]=c&a[1]=d');
             s2t.equal(qs.stringify({ a: ['c', 'd'] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a[]=c&a[]=d');
             s2t.equal(qs.stringify({ a: ['c', 'd'] }, { encodeValuesOnly: true, arrayFormat: 'comma' }), 'a=c,d');
+            s2t.equal(qs.stringify({ a: ['c', 'd'] }, { encodeValuesOnly: true, arrayFormat: 'comma', commaRoundTrip: true }), 'a=c,d');
             s2t.equal(qs.stringify({ a: ['c', 'd'] }, { encodeValuesOnly: true }), 'a[0]=c&a[1]=d');
 
             s2t.end();
         });
 
+        st.test('array with multiple items with a comma inside', function (s2t) {
+            s2t.equal(qs.stringify({ a: ['c,d', 'e'] }, { encodeValuesOnly: true, arrayFormat: 'comma' }), 'a=c%2Cd,e');
+            s2t.equal(qs.stringify({ a: ['c,d', 'e'] }, { arrayFormat: 'comma' }), 'a=c%2Cd%2Ce');
+
+            s2t.equal(qs.stringify({ a: ['c,d', 'e'] }, { encodeValuesOnly: true, arrayFormat: 'comma', commaRoundTrip: true }), 'a=c%2Cd,e');
+            s2t.equal(qs.stringify({ a: ['c,d', 'e'] }, { arrayFormat: 'comma', commaRoundTrip: true }), 'a=c%2Cd%2Ce');
+
+            s2t.end();
+        });
+
         st.end();
     });
 
@@ -171,6 +378,44 @@
         st.end();
     });
 
+    t.test('stringifies comma and empty array values', function (st) {
+        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: false, arrayFormat: 'indices' }), 'a[0]=,&a[1]=&a[2]=c,d%');
+        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: false, arrayFormat: 'brackets' }), 'a[]=,&a[]=&a[]=c,d%');
+        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: false, arrayFormat: 'comma' }), 'a=,,,c,d%');
+        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: false, arrayFormat: 'repeat' }), 'a=,&a=&a=c,d%');
+
+        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: true, encodeValuesOnly: true, arrayFormat: 'indices' }), 'a[0]=%2C&a[1]=&a[2]=c%2Cd%25');
+        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: true, encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a[]=%2C&a[]=&a[]=c%2Cd%25');
+        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: true, encodeValuesOnly: true, arrayFormat: 'comma' }), 'a=%2C,,c%2Cd%25');
+        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: true, encodeValuesOnly: true, arrayFormat: 'repeat' }), 'a=%2C&a=&a=c%2Cd%25');
+
+        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: true, encodeValuesOnly: false, arrayFormat: 'indices' }), 'a%5B0%5D=%2C&a%5B1%5D=&a%5B2%5D=c%2Cd%25');
+        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: true, encodeValuesOnly: false, arrayFormat: 'brackets' }), 'a%5B%5D=%2C&a%5B%5D=&a%5B%5D=c%2Cd%25');
+        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: true, encodeValuesOnly: false, arrayFormat: 'comma' }), 'a=%2C%2C%2Cc%2Cd%25');
+        st.equal(qs.stringify({ a: [',', '', 'c,d%'] }, { encode: true, encodeValuesOnly: false, arrayFormat: 'repeat' }), 'a=%2C&a=&a=c%2Cd%25');
+
+        st.end();
+    });
+
+    t.test('stringifies comma and empty non-array values', function (st) {
+        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: false, arrayFormat: 'indices' }), 'a=,&b=&c=c,d%');
+        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: false, arrayFormat: 'brackets' }), 'a=,&b=&c=c,d%');
+        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: false, arrayFormat: 'comma' }), 'a=,&b=&c=c,d%');
+        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: false, arrayFormat: 'repeat' }), 'a=,&b=&c=c,d%');
+
+        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: true, encodeValuesOnly: true, arrayFormat: 'indices' }), 'a=%2C&b=&c=c%2Cd%25');
+        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: true, encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a=%2C&b=&c=c%2Cd%25');
+        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: true, encodeValuesOnly: true, arrayFormat: 'comma' }), 'a=%2C&b=&c=c%2Cd%25');
+        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: true, encodeValuesOnly: true, arrayFormat: 'repeat' }), 'a=%2C&b=&c=c%2Cd%25');
+
+        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: true, encodeValuesOnly: false, arrayFormat: 'indices' }), 'a=%2C&b=&c=c%2Cd%25');
+        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: true, encodeValuesOnly: false, arrayFormat: 'brackets' }), 'a=%2C&b=&c=c%2Cd%25');
+        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: true, encodeValuesOnly: false, arrayFormat: 'comma' }), 'a=%2C&b=&c=c%2Cd%25');
+        st.equal(qs.stringify({ a: ',', b: '', c: 'c,d%' }, { encode: true, encodeValuesOnly: false, arrayFormat: 'repeat' }), 'a=%2C&b=&c=c%2Cd%25');
+
+        st.end();
+    });
+
     t.test('stringifies a nested array value with dots notation', function (st) {
         st.equal(
             qs.stringify(
@@ -209,36 +454,44 @@
 
     t.test('stringifies an object inside an array', function (st) {
         st.equal(
-            qs.stringify({ a: [{ b: 'c' }] }, { arrayFormat: 'indices' }),
-            'a%5B0%5D%5Bb%5D=c', // a[0][b]=c
-            'indices => brackets'
+            qs.stringify({ a: [{ b: 'c' }] }, { arrayFormat: 'indices', encodeValuesOnly: true }),
+            'a[0][b]=c',
+            'indices => indices'
         );
         st.equal(
-            qs.stringify({ a: [{ b: 'c' }] }, { arrayFormat: 'brackets' }),
-            'a%5B%5D%5Bb%5D=c', // a[][b]=c
+            qs.stringify({ a: [{ b: 'c' }] }, { arrayFormat: 'repeat', encodeValuesOnly: true }),
+            'a[b]=c',
+            'repeat => repeat'
+        );
+        st.equal(
+            qs.stringify({ a: [{ b: 'c' }] }, { arrayFormat: 'brackets', encodeValuesOnly: true }),
+            'a[][b]=c',
             'brackets => brackets'
         );
         st.equal(
-            qs.stringify({ a: [{ b: 'c' }] }),
-            'a%5B0%5D%5Bb%5D=c',
+            qs.stringify({ a: [{ b: 'c' }] }, { encodeValuesOnly: true }),
+            'a[0][b]=c',
             'default => indices'
         );
 
         st.equal(
-            qs.stringify({ a: [{ b: { c: [1] } }] }, { arrayFormat: 'indices' }),
-            'a%5B0%5D%5Bb%5D%5Bc%5D%5B0%5D=1',
+            qs.stringify({ a: [{ b: { c: [1] } }] }, { arrayFormat: 'indices', encodeValuesOnly: true }),
+            'a[0][b][c][0]=1',
             'indices => indices'
         );
-
         st.equal(
-            qs.stringify({ a: [{ b: { c: [1] } }] }, { arrayFormat: 'brackets' }),
-            'a%5B%5D%5Bb%5D%5Bc%5D%5B%5D=1',
+            qs.stringify({ a: [{ b: { c: [1] } }] }, { arrayFormat: 'repeat', encodeValuesOnly: true }),
+            'a[b][c]=1',
+            'repeat => repeat'
+        );
+        st.equal(
+            qs.stringify({ a: [{ b: { c: [1] } }] }, { arrayFormat: 'brackets', encodeValuesOnly: true }),
+            'a[][b][c][]=1',
             'brackets => brackets'
         );
-
         st.equal(
-            qs.stringify({ a: [{ b: { c: [1] } }] }),
-            'a%5B0%5D%5Bb%5D%5Bc%5D%5B0%5D=1',
+            qs.stringify({ a: [{ b: { c: [1] } }] }, { encodeValuesOnly: true }),
+            'a[0][b][c][0]=1',
             'default => indices'
         );
 
@@ -340,17 +593,17 @@
         st.end();
     });
 
-    t.test('uses indices notation for arrays when no arrayFormat=indices', function (st) {
+    t.test('uses indices notation for arrays when arrayFormat=indices', function (st) {
         st.equal(qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'indices' }), 'a%5B0%5D=b&a%5B1%5D=c');
         st.end();
     });
 
-    t.test('uses repeat notation for arrays when no arrayFormat=repeat', function (st) {
+    t.test('uses repeat notation for arrays when arrayFormat=repeat', function (st) {
         st.equal(qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'repeat' }), 'a=b&a=c');
         st.end();
     });
 
-    t.test('uses brackets notation for arrays when no arrayFormat=brackets', function (st) {
+    t.test('uses brackets notation for arrays when arrayFormat=brackets', function (st) {
         st.equal(qs.stringify({ a: ['b', 'c'] }, { arrayFormat: 'brackets' }), 'a%5B%5D=b&a%5B%5D=c');
         st.end();
     });
@@ -447,10 +700,11 @@
     });
 
     t.test('skips properties that are part of the object prototype', function (st) {
-        Object.prototype.crash = 'test';
+        st.intercept(Object.prototype, 'crash', { value: 'test' });
+
         st.equal(qs.stringify({ a: 'b' }), 'a=b');
         st.equal(qs.stringify({ a: { b: 'c' } }), 'a%5Bb%5D=c');
-        delete Object.prototype.crash;
+
         st.end();
     });
 
@@ -474,10 +728,12 @@
     });
 
     t.test('does not blow up when Buffer global is missing', function (st) {
-        var tempBuffer = global.Buffer;
-        delete global.Buffer;
+        var restore = mockProperty(global, 'Buffer', { 'delete': true });
+
         var result = qs.stringify({ a: 'b', c: 'd' });
-        global.Buffer = tempBuffer;
+
+        restore();
+
         st.equal(result, 'a=b&c=d');
         st.end();
     });
@@ -526,9 +782,17 @@
         };
 
         st.equal(
-            qs.stringify({ filters: { $and: [p1, p2] } }, { encodeValuesOnly: true }),
+            qs.stringify({ filters: { $and: [p1, p2] } }, { encodeValuesOnly: true, arrayFormat: 'indices' }),
             'filters[$and][0][function]=gte&filters[$and][0][arguments][0][function]=hour_of_day&filters[$and][0][arguments][1]=0&filters[$and][1][function]=lte&filters[$and][1][arguments][0][function]=hour_of_day&filters[$and][1][arguments][1]=23'
         );
+        st.equal(
+            qs.stringify({ filters: { $and: [p1, p2] } }, { encodeValuesOnly: true, arrayFormat: 'brackets' }),
+            'filters[$and][][function]=gte&filters[$and][][arguments][][function]=hour_of_day&filters[$and][][arguments][]=0&filters[$and][][function]=lte&filters[$and][][arguments][][function]=hour_of_day&filters[$and][][arguments][]=23'
+        );
+        st.equal(
+            qs.stringify({ filters: { $and: [p1, p2] } }, { encodeValuesOnly: true, arrayFormat: 'repeat' }),
+            'filters[$and][function]=gte&filters[$and][arguments][function]=hour_of_day&filters[$and][arguments]=0&filters[$and][function]=lte&filters[$and][arguments][function]=hour_of_day&filters[$and][arguments]=23'
+        );
 
         st.end();
     });
@@ -641,13 +905,28 @@
         st.end();
     });
 
+    t.test('receives the default encoder as a second argument', function (st) {
+        st.plan(8);
+
+        qs.stringify({ a: 1, b: new Date(), c: true, d: [1] }, {
+            encoder: function (str) {
+                st.match(typeof str, /^(?:string|number|boolean)$/);
+                return '';
+            }
+        });
+
+        st.end();
+    });
+
     t.test('receives the default encoder as a second argument', function (st) {
         st.plan(2);
+
         qs.stringify({ a: 1 }, {
             encoder: function (str, defaultEncoder) {
                 st.equal(defaultEncoder, utils.encode);
             }
         });
+
         st.end();
     });
 
@@ -775,16 +1054,53 @@
         st.equal(
             qs.stringify(
                 { a: 'b', c: ['d', 'e=f'], f: [['g'], ['h']] },
-                { encodeValuesOnly: true }
+                { encodeValuesOnly: true, arrayFormat: 'indices' }
+            ),
+            'a=b&c[0]=d&c[1]=e%3Df&f[0][0]=g&f[1][0]=h',
+            'encodeValuesOnly + indices'
+        );
+        st.equal(
+            qs.stringify(
+                { a: 'b', c: ['d', 'e=f'], f: [['g'], ['h']] },
+                { encodeValuesOnly: true, arrayFormat: 'brackets' }
+            ),
+            'a=b&c[]=d&c[]=e%3Df&f[][]=g&f[][]=h',
+            'encodeValuesOnly + brackets'
+        );
+        st.equal(
+            qs.stringify(
+                { a: 'b', c: ['d', 'e=f'], f: [['g'], ['h']] },
+                { encodeValuesOnly: true, arrayFormat: 'repeat' }
+            ),
+            'a=b&c=d&c=e%3Df&f=g&f=h',
+            'encodeValuesOnly + repeat'
+        );
+
+        st.equal(
+            qs.stringify(
+                { a: 'b', c: ['d', 'e'], f: [['g'], ['h']] },
+                { arrayFormat: 'indices' }
             ),
-            'a=b&c[0]=d&c[1]=e%3Df&f[0][0]=g&f[1][0]=h'
+            'a=b&c%5B0%5D=d&c%5B1%5D=e&f%5B0%5D%5B0%5D=g&f%5B1%5D%5B0%5D=h',
+            'no encodeValuesOnly + indices'
+        );
+        st.equal(
+            qs.stringify(
+                { a: 'b', c: ['d', 'e'], f: [['g'], ['h']] },
+                { arrayFormat: 'brackets' }
+            ),
+            'a=b&c%5B%5D=d&c%5B%5D=e&f%5B%5D%5B%5D=g&f%5B%5D%5B%5D=h',
+            'no encodeValuesOnly + brackets'
         );
         st.equal(
             qs.stringify(
-                { a: 'b', c: ['d', 'e'], f: [['g'], ['h']] }
+                { a: 'b', c: ['d', 'e'], f: [['g'], ['h']] },
+                { arrayFormat: 'repeat' }
             ),
-            'a=b&c%5B0%5D=d&c%5B1%5D=e&f%5B0%5D%5B0%5D=g&f%5B1%5D%5B0%5D=h'
+            'a=b&c=d&c=e&f=g&f=h',
+            'no encodeValuesOnly + repeat'
         );
+
         st.end();
     });
 
@@ -821,13 +1137,19 @@
         st.end();
     });
 
-    t.test('adds the right sentinel when instructed to and the charset is utf-8', function (st) {
-        st.equal(qs.stringify({ a: 'æ' }, { charsetSentinel: true, charset: 'utf-8' }), 'utf8=%E2%9C%93&a=%C3%A6');
-        st.end();
-    });
+    t.test('`charsetSentinel` option', function (st) {
+        st.equal(
+            qs.stringify({ a: 'æ' }, { charsetSentinel: true, charset: 'utf-8' }),
+            'utf8=%E2%9C%93&a=%C3%A6',
+            'adds the right sentinel when instructed to and the charset is utf-8'
+        );
 
-    t.test('adds the right sentinel when instructed to and the charset is iso-8859-1', function (st) {
-        st.equal(qs.stringify({ a: 'æ' }, { charsetSentinel: true, charset: 'iso-8859-1' }), 'utf8=%26%2310003%3B&a=%E6');
+        st.equal(
+            qs.stringify({ a: 'æ' }, { charsetSentinel: true, charset: 'iso-8859-1' }),
+            'utf8=%26%2310003%3B&a=%E6',
+            'adds the right sentinel when instructed to and the charset is iso-8859-1'
+        );
+
         st.end();
     });
 
@@ -878,13 +1200,15 @@
         var withArray = { a: { b: [{ c: 'd', e: 'f' }] } };
 
         st.equal(qs.stringify(obj, { encode: false }), 'a[b][c]=d&a[b][e]=f', 'no array, no arrayFormat');
-        st.equal(qs.stringify(obj, { encode: false, arrayFormat: 'bracket' }), 'a[b][c]=d&a[b][e]=f', 'no array, bracket');
+        st.equal(qs.stringify(obj, { encode: false, arrayFormat: 'brackets' }), 'a[b][c]=d&a[b][e]=f', 'no array, bracket');
         st.equal(qs.stringify(obj, { encode: false, arrayFormat: 'indices' }), 'a[b][c]=d&a[b][e]=f', 'no array, indices');
+        st.equal(qs.stringify(obj, { encode: false, arrayFormat: 'repeat' }), 'a[b][c]=d&a[b][e]=f', 'no array, repeat');
         st.equal(qs.stringify(obj, { encode: false, arrayFormat: 'comma' }), 'a[b][c]=d&a[b][e]=f', 'no array, comma');
 
         st.equal(qs.stringify(withArray, { encode: false }), 'a[b][0][c]=d&a[b][0][e]=f', 'array, no arrayFormat');
-        st.equal(qs.stringify(withArray, { encode: false, arrayFormat: 'bracket' }), 'a[b][0][c]=d&a[b][0][e]=f', 'array, bracket');
+        st.equal(qs.stringify(withArray, { encode: false, arrayFormat: 'brackets' }), 'a[b][][c]=d&a[b][][e]=f', 'array, bracket');
         st.equal(qs.stringify(withArray, { encode: false, arrayFormat: 'indices' }), 'a[b][0][c]=d&a[b][0][e]=f', 'array, indices');
+        st.equal(qs.stringify(withArray, { encode: false, arrayFormat: 'repeat' }), 'a[b][c]=d&a[b][e]=f', 'array, repeat');
         st.equal(
             qs.stringify(withArray, { encode: false, arrayFormat: 'comma' }),
             '???',
@@ -897,13 +1221,78 @@
 
     t.test('stringifies sparse arrays', function (st) {
         /* eslint no-sparse-arrays: 0 */
-        st.equal(qs.stringify({ a: [, '2', , , '1'] }, { encodeValuesOnly: true }), 'a[1]=2&a[4]=1');
-        st.equal(qs.stringify({ a: [, { b: [, , { c: '1' }] }] }, { encodeValuesOnly: true }), 'a[1][b][2][c]=1');
-        st.equal(qs.stringify({ a: [, [, , [, , , { c: '1' }]]] }, { encodeValuesOnly: true }), 'a[1][2][3][c]=1');
-        st.equal(qs.stringify({ a: [, [, , [, , , { c: [, '1'] }]]] }, { encodeValuesOnly: true }), 'a[1][2][3][c][1]=1');
+        st.equal(qs.stringify({ a: [, '2', , , '1'] }, { encodeValuesOnly: true, arrayFormat: 'indices' }), 'a[1]=2&a[4]=1');
+        st.equal(qs.stringify({ a: [, '2', , , '1'] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a[]=2&a[]=1');
+        st.equal(qs.stringify({ a: [, '2', , , '1'] }, { encodeValuesOnly: true, arrayFormat: 'repeat' }), 'a=2&a=1');
+
+        st.equal(qs.stringify({ a: [, { b: [, , { c: '1' }] }] }, { encodeValuesOnly: true, arrayFormat: 'indices' }), 'a[1][b][2][c]=1');
+        st.equal(qs.stringify({ a: [, { b: [, , { c: '1' }] }] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a[][b][][c]=1');
+        st.equal(qs.stringify({ a: [, { b: [, , { c: '1' }] }] }, { encodeValuesOnly: true, arrayFormat: 'repeat' }), 'a[b][c]=1');
+
+        st.equal(qs.stringify({ a: [, [, , [, , , { c: '1' }]]] }, { encodeValuesOnly: true, arrayFormat: 'indices' }), 'a[1][2][3][c]=1');
+        st.equal(qs.stringify({ a: [, [, , [, , , { c: '1' }]]] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a[][][][c]=1');
+        st.equal(qs.stringify({ a: [, [, , [, , , { c: '1' }]]] }, { encodeValuesOnly: true, arrayFormat: 'repeat' }), 'a[c]=1');
+
+        st.equal(qs.stringify({ a: [, [, , [, , , { c: [, '1'] }]]] }, { encodeValuesOnly: true, arrayFormat: 'indices' }), 'a[1][2][3][c][1]=1');
+        st.equal(qs.stringify({ a: [, [, , [, , , { c: [, '1'] }]]] }, { encodeValuesOnly: true, arrayFormat: 'brackets' }), 'a[][][][c][]=1');
+        st.equal(qs.stringify({ a: [, [, , [, , , { c: [, '1'] }]]] }, { encodeValuesOnly: true, arrayFormat: 'repeat' }), 'a[c]=1');
+
+        st.end();
+    });
+
+    t.test('encodes a very long string', function (st) {
+        var chars = [];
+        var expected = [];
+        for (var i = 0; i < 5e3; i++) {
+            chars.push(' ' + i);
+
+            expected.push('%20' + i);
+        }
+
+        var obj = {
+            foo: chars.join('')
+        };
+
+        st.equal(
+            qs.stringify(obj, { arrayFormat: 'bracket', charset: 'utf-8' }),
+            'foo=' + expected.join('')
+        );
 
         st.end();
     });
 
     t.end();
 });
+
+test('stringifies empty keys', function (t) {
+    emptyTestCases.forEach(function (testCase) {
+        t.test('stringifies an object with empty string key with ' + testCase.input, function (st) {
+            st.deepEqual(
+                qs.stringify(testCase.withEmptyKeys, { encode: false, arrayFormat: 'indices' }),
+                testCase.stringifyOutput.indices,
+                'test case: ' + testCase.input + ', indices'
+            );
+            st.deepEqual(
+                qs.stringify(testCase.withEmptyKeys, { encode: false, arrayFormat: 'brackets' }),
+                testCase.stringifyOutput.brackets,
+                'test case: ' + testCase.input + ', brackets'
+            );
+            st.deepEqual(
+                qs.stringify(testCase.withEmptyKeys, { encode: false, arrayFormat: 'repeat' }),
+                testCase.stringifyOutput.repeat,
+                'test case: ' + testCase.input + ', repeat'
+            );
+
+            st.end();
+        });
+    });
+
+    t.test('edge case with object/arrays', function (st) {
+        st.deepEqual(qs.stringify({ '': { '': [2, 3] } }, { encode: false }), '[][0]=2&[][1]=3');
+        st.deepEqual(qs.stringify({ '': { '': [2, 3], a: 2 } }, { encode: false }), '[][0]=2&[][1]=3&[a]=2');
+        st.deepEqual(qs.stringify({ '': { '': [2, 3] } }, { encode: false, arrayFormat: 'indices' }), '[][0]=2&[][1]=3');
+        st.deepEqual(qs.stringify({ '': { '': [2, 3], a: 2 } }, { encode: false, arrayFormat: 'indices' }), '[][0]=2&[][1]=3&[a]=2');
+
+        st.end();
+    });
+});
diff --git a/node_modules/nopt/.npmignore b/node_modules/nopt/.npmignore
deleted file mode 100644
diff --git a/node_modules/pg-pool/test/timeout.js b/node_modules/pg-pool/test/timeout.js
deleted file mode 100644
